{"sha": "826fadba8160005725fa0d6964ab78824af378fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI2ZmFkYmE4MTYwMDA1NzI1ZmEwZDY5NjRhYjc4ODI0YWYzNzhmYg==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "maxim@codesourcery.com", "date": "2008-04-22T07:28:42Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2008-04-22T07:28:42Z"}, "message": "Support scheduling for ColdFire V1 and V3 microarchitecture.\n\n\tImprove scheduling of multiplication instructions.\n\n\t* config/m68k/m68k.md (cpu): Add cfv1 and cfv3.  Rename cf_v2 to cfv1.\n\t(mac): New instruction attribute.\n\t* config/m68k/m68k.c (override_options): Handle cfv1, cfv3 and mac.\n\t(m68k_sched_mac): New variable.\n\t(m68k_sched_attr_type2, m68k_sched_md_init_global): Update.\n\tHandle cfv1 and cfv3.\n\t(max_insn_size): New static variable.\n\t(struct _sched_ib): New type.\n\t(sched_ib): New static variable.\n\t(sched_ib_size, sched_ib_filled, sched_ib_insn): Convert variables\n\tto fields of 'struct _sched_ib sched_ib'.  Update all uses.\n\t(m68k_sched_variable_issue): Add modeling of cfv3 instruction buffer.\n\tUpdate.\n\t(m68k_sched_md_init_global, m68k_sched_md_finish_global,\n\tm68k_sched_md_init, m68k_sched_md_finish): Handle cfv1 and cfv3.  Init\n\tnew variables.  Update.\n\t(m68k_sched_dfa_pre_advance_cycle, m68k_sched_dfa_post_advance_cycle):\n\tAdd modeling of cfv3 instruction buffer.  Update.\n\t* config/m68k/m68k-protos.h (m68k_sched_mac): Declare.\n\t* config/m68k/m68k.h (TUNE_CFV3): New macro.\n\t* config/m68k/cf.md: Change substrings 'cf_v2' to 'cfv12' or 'cfv123'.\n\t(cf_* reservations): Rename to cfv12 or cfv123 to indicate cores\n\ta particular reservation applies to.\n\t(type2): Reorganize attribute values.  Rename alu to alu_reg,\n\talu_l to alu, move_l to omove.  Join move to alu.  Split mul\n\tto mul_l and mul_w.\n\t(cf_ib_*): Simplify description of instruction buffer.\n\t(cf_ib_w0, cf_ib_w4, cf_ib_w5, cf_ib_w6): Remove.\n\t(cf_mem): Split into cf_mem1 and cf_mem2.\n\t(cf_v2_move_??): Rename to cfv12_alu_??.\n\t(cf_v2_move_l_??): Rename to cfv12_omove_??.\n\t(cf_v2_mul_??): Remove reservations.\n\t(cfv12_mul_l_??, cfv12_mul_w_??, cfv12_mac_w_??, cfv12_mac_l_??,\n\tcfv12_emac_??, cfv12_emac_w_i0): New reservations.\n\t(cfv12_rts, cfv12_call, cfv12_bcc, cfv12_bra, cfv12_jmp): Move to\n\tappropriate place.\n\t(cfv3_alu_10, cfv3_omove_10, cfv3_alu_i0, cfv3_omove_i0, cfv3_alu_01,\n\tcfv3_alu_0i, cfv3_alu_11, cfv3_omove_11, cfv3_alu_i1, cfv3_omove_i1,\n\tcfv3_alu_1i, cfv3_omove_1i, cfv3_pea_11, cfv3_pea_i1, cfv3_mul_w_10,\n\tcfv3_mul_l_10, cfv3_mul_w_i0, cfv3_mac_w_10, cfv3_mac_l_10,\n\tcfv3_mac_w_i0, cfv3_emac_10, cfv3_emac_w_i0, cfv3_rts, cfv3_call,\n\tcfv3_bcc, cfv3_bra, cfv3_jmp): New reservations.\n\t(cfv3_*_1, cfv3_*_2, cfv3_*_3): New instruction reservations that are\n\texpansions of the above reservations for instructions of sizes\n\t1, 2 and 3 words.\n\nFrom-SVN: r134552", "tree": {"sha": "ed4f438929217aaad225a0e194f4e64940b9531d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed4f438929217aaad225a0e194f4e64940b9531d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/826fadba8160005725fa0d6964ab78824af378fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/826fadba8160005725fa0d6964ab78824af378fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/826fadba8160005725fa0d6964ab78824af378fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/826fadba8160005725fa0d6964ab78824af378fb/comments", "author": null, "committer": null, "parents": [{"sha": "c23da840b2427b1cf9a2d3275b869165d49d9df1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23da840b2427b1cf9a2d3275b869165d49d9df1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c23da840b2427b1cf9a2d3275b869165d49d9df1"}], "stats": {"total": 1831, "additions": 1434, "deletions": 397}, "files": [{"sha": "3a1566b9d3e76539b3eb6ee34037a7ad55a93065", "filename": "gcc/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826fadba8160005725fa0d6964ab78824af378fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826fadba8160005725fa0d6964ab78824af378fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=826fadba8160005725fa0d6964ab78824af378fb", "patch": "@@ -1,3 +1,54 @@\n+2008-04-22  Maxim Kuvyrkov  <maxim@codesourcery.com>\n+\n+\tSupport scheduling for ColdFire V1 and V3 microarchitecture.\n+\tImprove scheduling of multiplication instructions.\n+\n+\t* config/m68k/m68k.md (cpu): Add cfv1 and cfv3.  Rename cf_v2 to cfv1.\n+\t(mac): New instruction attribute.\n+\t* config/m68k/m68k.c (override_options): Handle cfv1, cfv3 and mac.\n+\t(m68k_sched_mac): New variable.\n+\t(m68k_sched_attr_type2, m68k_sched_md_init_global): Update.\n+\tHandle cfv1 and cfv3.\n+\t(max_insn_size): New static variable.\n+\t(struct _sched_ib): New type.\n+\t(sched_ib): New static variable.\n+\t(sched_ib_size, sched_ib_filled, sched_ib_insn): Convert variables\n+\tto fields of 'struct _sched_ib sched_ib'.  Update all uses.\n+\t(m68k_sched_variable_issue): Add modeling of cfv3 instruction buffer.\n+\tUpdate.\n+\t(m68k_sched_md_init_global, m68k_sched_md_finish_global,\n+\tm68k_sched_md_init, m68k_sched_md_finish): Handle cfv1 and cfv3.  Init\n+\tnew variables.  Update.\n+\t(m68k_sched_dfa_pre_advance_cycle, m68k_sched_dfa_post_advance_cycle):\n+\tAdd modeling of cfv3 instruction buffer.  Update.\n+\t* config/m68k/m68k-protos.h (m68k_sched_mac): Declare.\n+\t* config/m68k/m68k.h (TUNE_CFV3): New macro.\n+\t* config/m68k/cf.md: Change substrings 'cf_v2' to 'cfv12' or 'cfv123'.\n+\t(cf_* reservations): Rename to cfv12 or cfv123 to indicate cores\n+\ta particular reservation applies to.\n+\t(type2): Reorganize attribute values.  Rename alu to alu_reg,\n+\talu_l to alu, move_l to omove.  Join move to alu.  Split mul\n+\tto mul_l and mul_w.\n+\t(cf_ib_*): Simplify description of instruction buffer.\n+\t(cf_ib_w0, cf_ib_w4, cf_ib_w5, cf_ib_w6): Remove.\n+\t(cf_mem): Split into cf_mem1 and cf_mem2.\n+\t(cf_v2_move_??): Rename to cfv12_alu_??.\n+\t(cf_v2_move_l_??): Rename to cfv12_omove_??.\n+\t(cf_v2_mul_??): Remove reservations.\n+\t(cfv12_mul_l_??, cfv12_mul_w_??, cfv12_mac_w_??, cfv12_mac_l_??,\n+\tcfv12_emac_??, cfv12_emac_w_i0): New reservations.\n+\t(cfv12_rts, cfv12_call, cfv12_bcc, cfv12_bra, cfv12_jmp): Move to\n+\tappropriate place.\n+\t(cfv3_alu_10, cfv3_omove_10, cfv3_alu_i0, cfv3_omove_i0, cfv3_alu_01,\n+\tcfv3_alu_0i, cfv3_alu_11, cfv3_omove_11, cfv3_alu_i1, cfv3_omove_i1,\n+\tcfv3_alu_1i, cfv3_omove_1i, cfv3_pea_11, cfv3_pea_i1, cfv3_mul_w_10,\n+\tcfv3_mul_l_10, cfv3_mul_w_i0, cfv3_mac_w_10, cfv3_mac_l_10,\n+\tcfv3_mac_w_i0, cfv3_emac_10, cfv3_emac_w_i0, cfv3_rts, cfv3_call,\n+\tcfv3_bcc, cfv3_bra, cfv3_jmp): New reservations.\n+\t(cfv3_*_1, cfv3_*_2, cfv3_*_3): New instruction reservations that are\n+\texpansions of the above reservations for instructions of sizes\n+\t1, 2 and 3 words.\n+\n 2008-04-22  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* rtl-factoring.c (collect_patterns_seqs): Handle CC0 targets."}, {"sha": "546e99557db442d26d98ea299d2495baa60973ca", "filename": "gcc/config/m68k/cf.md", "status": "modified", "additions": 1208, "deletions": 359, "changes": 1567, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826fadba8160005725fa0d6964ab78824af378fb/gcc%2Fconfig%2Fm68k%2Fcf.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826fadba8160005725fa0d6964ab78824af378fb/gcc%2Fconfig%2Fm68k%2Fcf.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fcf.md?ref=826fadba8160005725fa0d6964ab78824af378fb", "patch": "@@ -1,4 +1,4 @@\n-;; ColdFire V2 DFA description.\n+;; ColdFire V1, V2 and V3 DFA description.\n ;; Copyright (C) 2007 Free Software Foundation, Inc.\n ;; Contributed by CodeSourcery Inc.\n ;;\n@@ -19,171 +19,322 @@\n ;; the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n ;; Boston, MA 02110-1301, USA.\n \n+;; Intruction types recognized by DFA.\n+;; This attribute correspond to type1 attribute with the exceptions below.\n+;; omove - optimized move.  All explicit loads on cfv1 and long explicit\n+;;         loads on cfv2 execute one cycle faster then they should.\n+;;         Supposedly, that is due to combined instruction decoding\n+;;         and address generation phases.\n ;; ??? To let genattrtab live, implement this attribute in C.\n (define_attr \"type2\"\n-  \"alu, alu_l, bcc, bra, call, jmp, lea, move, move_l, mul, pea, rts, unlk,\n-   unknown\"\n+  \"alu, alu_reg, bcc, bra, call, jmp, lea, mul_l, mul_w, omove, pea,\n+   rts, unlk, unknown\"\n   (symbol_ref \"m68k_sched_attr_type2 (insn)\"))\n \n ;; Instruction Buffer\n-(define_automaton \"cf_v2_ib\")\n-\n-;; If one of these cpu units is occupied, that means that corresponding\n-;; word in the buffer is empty.\n-(define_cpu_unit \"cf_v2_ib_w0, cf_v2_ib_w1, cf_v2_ib_w2, cf_v2_ib_w3, cf_v2_ib_w4, cf_v2_ib_w5\" \"cf_v2_ib\")\n-\n-(final_presence_set \"cf_v2_ib_w1, cf_v2_ib_w2, cf_v2_ib_w3, cf_v2_ib_w4, cf_v2_ib_w5\" \"cf_v2_ib_w0\")\n-(final_presence_set \"cf_v2_ib_w2, cf_v2_ib_w3, cf_v2_ib_w4, cf_v2_ib_w5\" \"cf_v2_ib_w1\")\n-(final_presence_set \"cf_v2_ib_w3, cf_v2_ib_w4, cf_v2_ib_w5\" \"cf_v2_ib_w2\")\n-(final_presence_set \"cf_v2_ib_w4, cf_v2_ib_w5\" \"cf_v2_ib_w3\")\n-(final_presence_set \"cf_v2_ib_w5\" \"cf_v2_ib_w4\")\n-\n-;; Occupy 1 word.\n-(define_reservation \"cf_v2_ib1\" \"cf_v2_ib_w0|cf_v2_ib_w1|cf_v2_ib_w2|cf_v2_ib_w3|cf_v2_ib_w4|cf_v2_ib_w5\")\n-\n-;; Occupy 2 words.\n-(define_reservation \"cf_v2_ib2\" \"(cf_v2_ib_w0+cf_v2_ib_w1)|(cf_v2_ib_w1+cf_v2_ib_w2)|(cf_v2_ib_w2+cf_v2_ib_w3)|(cf_v2_ib_w3+cf_v2_ib_w4)|(cf_v2_ib_w4+cf_v2_ib_w5)\")\n-\n-;; Occupy 3 words.\n-(define_reservation \"cf_v2_ib3\" \"(cf_v2_ib_w0+cf_v2_ib_w1+cf_v2_ib_w2)|(cf_v2_ib_w1+cf_v2_ib_w2+cf_v2_ib_w3)|(cf_v2_ib_w2+cf_v2_ib_w3+cf_v2_ib_w4)|(cf_v2_ib_w3+cf_v2_ib_w4+cf_v2_ib_w5)\")\n-\n-;; Reservation to subscribe 1 word in the instruction buffer.  If a given\n-;; word in the instruction buffer is subscribed, that means it is empty.\n-;; This reservation is used at the start of each cycle to setup the number\n-;; of prefetched instruction words in the instruction buffer.\n-;; At each cycle, given that memory bus is available (i.e. there is no\n-;; pending memory operation), IFP prefetches two instruction words into IB.\n-(define_insn_reservation \"cf_v2_ib\" 0\n-  (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_automaton \"cf_ib\")\n+\n+;; These pseudo units are used to model instruction buffer of ColdFire cores.\n+;; Instruction of size N can be issued only when cf_ib_wN is available.\n+(define_cpu_unit \"cf_ib_w1, cf_ib_w2, cf_ib_w3\" \"cf_ib\")\n+\n+;; Instruction occupies 1 word in the instruction buffer.\n+(define_reservation \"cf_ib1\" \"cf_ib_w1\")\n+;; Instruction occupies 2 words in the instruction buffer.\n+(define_reservation \"cf_ib2\" \"cf_ib_w1+cf_ib_w2\")\n+;; Instruction occupies 3 words in the instruction buffer.\n+(define_reservation \"cf_ib3\" \"cf_ib_w1+cf_ib_w2+cf_ib_w3\")\n+\n+;; This reservation is used at the start of each cycle to setup the maximal\n+;; length of instruction that can be issued on current cycle.\n+;; E.g., when this reservation is applied for the first time, cf_ib_w3\n+;; resource is marked busy, thus filtering out all 3-word insns.\n+;;\n+;; This reservation requires deterministic automaton.\n+;;\n+;; At each cycle, given that memory bus is available (i.e., there is no\n+;; pending memory operation), instruction fetch pipeline (IFP) prefetches\n+;; two instruction words into instruction buffer (IB).\n+(define_insn_reservation \"cf_ib1\" 0\n+  (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n        (eq_attr \"type\" \"ib\"))\n-  \"cf_v2_ib1\")\n+  \"cf_ib_w3|cf_ib_w2|cf_ib_w1\")\n \n ;; Operand Execution Pipeline\n-(define_automaton \"cf_v2_oep\")\n+(define_automaton \"cf_oep\")\n \n-(define_cpu_unit \"cf_v2_dsoc, cf_v2_agex\" \"cf_v2_oep\")\n+(define_cpu_unit \"cf_dsoc, cf_agex\" \"cf_oep\")\n \n ;; A memory unit that is reffered to as 'certain hardware resources' in\n ;; ColdFire reference manuals.  This unit remains occupied for two cycles\n ;; after last dsoc cycle of a store - hence there is a 2 cycle delay between\n ;; two consecutive stores.\n-(define_automaton \"cf_v2_chr\")\n+(define_automaton \"cf_chr\")\n \n-(define_cpu_unit \"cf_v2_chr\" \"cf_v2_chr\")\n+(define_cpu_unit \"cf_chr\" \"cf_chr\")\n \n ;; Memory bus\n-(define_automaton \"cf_v2_mem\")\n+(define_automaton \"cf_mem\")\n \n ;; When memory bus is subscribed, that implies that instruction buffer won't\n-;; get its portion this cycle.  To model that we query if cf_v2_mem unit is\n+;; get its portion this cycle.  To model that we query if cf_mem unit is\n ;; subscribed and adjust number of prefetched instruction words accordingly.\n ;; \n-(define_query_cpu_unit \"cf_v2_mem\" \"cf_v2_mem\")\n+(define_query_cpu_unit \"cf_mem1, cf_mem2\" \"cf_mem\")\n+\n+(define_reservation \"cf_mem\" \"cf_mem1+cf_mem2\")\n \n ;; Register to register move.\n ;; Takes 1 cycle.\n-(define_reservation \"cf_v2_move_00\"\n-  \"cf_v2_dsoc+cf_v2_agex\")\n+(define_reservation \"cfv123_alu_00\"\n+  \"cf_dsoc,cf_agex\")\n \n ;; Load from a memory location.\n ;; Takes 3 cycles.\n-(define_reservation \"cf_v2_move_10\"\n-  \"cf_v2_dsoc,cf_v2_agex,cf_v2_dsoc+cf_v2_mem,cf_v2_agex\")\n-\n-;; Long load from a memory location.\n+(define_reservation \"cfv12_alu_10\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem,cf_agex\")\n ;; Takes 2 cycles.\n-(define_reservation \"cf_v2_move_l_10\"\n-  \"cf_v2_dsoc+cf_v2_agex,cf_v2_dsoc+cf_v2_mem,cf_v2_agex\")\n+(define_reservation \"cfv12_omove_10\"\n+  \"cf_dsoc+cf_agex,cf_dsoc+cf_mem,cf_agex\")\n+;; Takes 4 cycles.\n+(define_reservation \"cfv3_alu_10\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex\")\n+;; Takes 3 cycles.\n+(define_reservation \"cfv3_omove_10\"\n+  \"cf_dsoc+cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex\")\n \n ;; Load from an indexed location.\n ;; Takes 4 cycles.\n-(define_reservation \"cf_v2_move_i0\"\n-  \"cf_v2_dsoc,cf_v2_agex,cf_v2_agex,cf_v2_dsoc+cf_v2_mem,cf_v2_agex\")\n-\n-;; Long load from an indexed location.\n+(define_reservation \"cfv12_alu_i0\"\n+  \"cf_dsoc,cf_agex,cf_agex,cf_dsoc+cf_mem,cf_agex\")\n ;; Takes 3 cycles.\n-(define_reservation \"cf_v2_move_l_i0\"\n-  \"cf_v2_dsoc+cf_v2_agex,cf_v2_agex,cf_v2_dsoc+cf_v2_mem,cf_v2_agex\")\n+(define_reservation \"cfv12_omove_i0\"\n+  \"cf_dsoc+cf_agex,cf_agex,cf_dsoc+cf_mem,cf_agex\")\n+;; Takes 5 cycles.\n+(define_reservation \"cfv3_alu_i0\"\n+  \"cf_dsoc,cf_agex,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex\")\n+;; Takes 4 cycles.\n+(define_reservation \"cfv3_omove_i0\"\n+  \"cf_dsoc+cf_agex,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex\")\n \n ;; Store to a memory location.\n ;; Takes 1 cycle.\n-(define_reservation \"cf_v2_move_01\"\n-  \"cf_v2_dsoc+cf_v2_agex+cf_v2_chr,cf_v2_mem+cf_v2_chr,cf_v2_chr\")\n+(define_reservation \"cfv12_alu_01\"\n+  \"cf_dsoc+cf_agex+cf_chr,cf_mem+cf_chr,cf_chr\")\n+;; Takes 1 cycle.\n+(define_reservation \"cfv3_alu_01\"\n+  \"cf_dsoc+cf_agex+cf_chr,cf_mem1+cf_chr,cf_mem2+cf_chr\")\n \n ;; Store to an indexed location.\n-;; Takes 2 cycle.\n-(define_reservation \"cf_v2_move_0i\"\n-  \"cf_v2_dsoc+cf_v2_agex,cf_v2_agex+cf_v2_chr,cf_v2_mem+cf_v2_chr,cf_v2_chr\")\n+;; Takes 2 cycles.\n+(define_reservation \"cfv12_alu_0i\"\n+  \"cf_dsoc+cf_agex,cf_agex+cf_chr,cf_mem+cf_chr,cf_chr\")\n+;; Takes 2 cycles.\n+(define_reservation \"cfv3_alu_0i\"\n+  \"cf_dsoc+cf_agex,cf_agex+cf_chr,cf_mem1+cf_chr,cf_mem2+cf_chr\")\n \n ;; Load from a memory location and store to a memory location.\n ;; Takes 3 cycles\n-(define_reservation \"cf_v2_move_11\"\n-  \"cf_v2_dsoc,cf_v2_agex,cf_v2_dsoc+cf_v2_agex+cf_v2_mem+cf_v2_chr,cf_v2_mem+cf_v2_chr,cf_v2_chr\")\n-\n-;; Long load from a memory location and store to a memory location.\n+(define_reservation \"cfv12_alu_11\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem,cf_agex+cf_chr,cf_mem+cf_chr,cf_chr\")\n ;; Takes 2 cycles.\n-(define_reservation \"cf_v2_move_l_11\"\n-  \"cf_v2_dsoc+cf_v2_agex,cf_v2_dsoc+cf_v2_agex+cf_v2_mem+cf_v2_chr,cf_v2_mem+cf_v2_chr,cf_v2_chr\")\n+(define_reservation \"cfv12_omove_11\"\n+  \"cf_dsoc+cf_agex,cf_dsoc+cf_mem,cf_agex+cf_chr,cf_mem+cf_chr,cf_chr\")\n+;; Takes 4 cycles\n+(define_reservation \"cfv3_alu_11\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex+cf_chr,cf_mem1+cf_chr,cf_mem2+cf_chr\")\n+;; Takes 3 cycles.\n+(define_reservation \"cfv3_omove_11\"\n+  \"cf_dsoc+cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex+cf_chr,cf_mem1+cf_chr,cf_mem2+cf_chr\")\n \n ;; Load from an indexed location and store to a memory location.\n ;; Takes 4 cycles.\n-(define_reservation \"cf_v2_move_i1\"\n-  \"cf_v2_dsoc,cf_v2_agex,cf_v2_agex,cf_v2_dsoc+cf_v2_agex+cf_v2_mem+cf_v2_chr,cf_v2_mem+cf_v2_chr,cf_v2_chr\")\n-\n-;; Long load from an indexed location and store to a memory location.\n+(define_reservation \"cfv12_alu_i1\"\n+  \"cf_dsoc,cf_agex,cf_agex,cf_dsoc+cf_mem,cf_agex+cf_chr,cf_mem+cf_chr,cf_chr\")\n ;; Takes 3 cycles.\n-(define_reservation \"cf_v2_move_l_i1\"\n-  \"cf_v2_dsoc+cf_v2_agex,cf_v2_agex,cf_v2_dsoc+cf_v2_agex+cf_v2_mem+cf_v2_chr,cf_v2_mem+cf_v2_chr,cf_v2_chr\")\n+(define_reservation \"cfv12_omove_i1\"\n+  \"cf_dsoc+cf_agex,cf_agex,cf_dsoc+cf_mem,cf_agex+cf_chr,cf_mem+cf_chr,cf_chr\")\n+;; Takes 5 cycles.\n+(define_reservation \"cfv3_alu_i1\"\n+  \"cf_dsoc,cf_agex,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex+cf_chr,cf_mem1+cf_chr,cf_mem2+cf_chr\")\n+;; Takes 4 cycles.\n+(define_reservation \"cfv3_omove_i1\"\n+  \"cf_dsoc+cf_agex,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex+cf_chr,cf_mem1+cf_chr,cf_mem2+cf_chr\")\n \n ;; Load from a memory location and store to an indexed location.\n ;; Takes 4 cycles.\n-(define_reservation \"cf_v2_move_1i\"\n-  \"cf_v2_dsoc,cf_v2_agex,cf_v2_dsoc+cf_v2_agex+cf_v2_mem,cf_v2_agex,cf_v2_mem\")\n-\n-;; Long load from a memory location and store to an indexed location.\n+(define_reservation \"cfv12_alu_1i\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem,cf_agex,cf_agex+cf_chr,cf_mem+cf_chr,cf_chr\")\n ;; Takes 3 cycles.\n-(define_reservation \"cf_v2_move_l_1i\"\n-  \"cf_v2_dsoc+cf_v2_agex,cf_v2_dsoc+cf_v2_agex+cf_v2_mem,cf_v2_agex,cf_v2_mem\")\n+(define_reservation \"cfv12_omove_1i\"\n+  \"cf_dsoc+cf_agex,cf_dsoc+cf_mem,cf_agex,cf_agex+cf_chr,cf_mem+cf_chr,cf_chr\")\n+;; Takes 5 cycles.\n+(define_reservation \"cfv3_alu_1i\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex,cf_agex+cf_chr,cf_mem1+cf_chr,cf_mem2+cf_chr\")\n+;; Takes 4 cycles.\n+(define_reservation \"cfv3_omove_1i\"\n+  \"cf_dsoc+cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex,cf_agex+cf_chr,cf_mem1+cf_chr,cf_mem2+cf_chr\")\n \n ;; Lea operation for a memory location.\n ;; Takes 1 cycle.\n-(define_reservation \"cf_v2_lea_10\"\n-  \"cf_v2_dsoc+cf_v2_agex\")\n+(define_reservation \"cfv123_lea_10\"\n+  \"cf_dsoc,cf_agex\")\n \n ;; Lea operation for an indexed location.\n ;; Takes 2 cycles.\n-(define_reservation \"cf_v2_lea_i0\"\n-  \"cf_v2_dsoc+cf_v2_agex,cf_v2_agex\")\n+(define_reservation \"cfv123_lea_i0\"\n+  \"cf_dsoc,cf_agex,cf_agex\")\n \n ;; Pea operation for a memory location.\n-;; Takes 2 cycle.\n-(define_reservation \"cf_v2_pea_11\"\n-  \"cf_v2_dsoc+cf_v2_agex,cf_v2_agex+cf_v2_chr,cf_v2_mem+cf_v2_chr,cf_v2_chr\")\n+;; Takes 2 cycles.\n+(define_reservation \"cfv12_pea_11\"\n+  \"cf_dsoc,cf_agex,cf_agex+cf_chr,cf_mem+cf_chr,cf_chr\")\n+;; Takes 2 cycles.\n+(define_reservation \"cfv3_pea_11\"\n+  \"cf_dsoc,cf_agex,cf_agex+cf_chr,cf_mem1+cf_chr,cf_mem2+cf_chr\")\n \n ;; Pea operation for an indexed location.\n ;; Takes 3 cycles.\n-(define_reservation \"cf_v2_pea_i1\"\n-  \"cf_v2_dsoc+cf_v2_agex,cf_v2_agex,cf_v2_agex+cf_v2_chr,cf_v2_mem+cf_v2_chr,cf_v2_chr\")\n+(define_reservation \"cfv12_pea_i1\"\n+  \"cf_dsoc,cf_agex,cf_agex,cf_agex+cf_chr,cf_mem+cf_chr,cf_chr\")\n+;; Takes 3 cycles.\n+(define_reservation \"cfv3_pea_i1\"\n+  \"cf_dsoc,cf_agex,cf_agex,cf_agex+cf_chr,cf_mem1+cf_chr,cf_mem2+cf_chr\")\n+\n+;; Long multiplication with no mac.\n+;; Takes 9-18 cycles.\n+(define_reservation \"cfv123_mul_l_00\"\n+  \"cf_dsoc,(cf_agex+cf_dsoc)*17,cf_agex\")\n+\n+;; Word multiplication with no mac.\n+;; Takes 9 cycles.\n+(define_reservation \"cfv123_mul_w_00\"\n+  \"cf_dsoc,(cf_agex+cf_dsoc)*8,cf_agex\")\n+\n+;; Long multiplication with no mac.\n+;; Takes 11-20 cycles.\n+(define_reservation \"cfv12_mul_l_10\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem,(cf_agex+cf_dsoc)*17,cf_agex\")\n+;; Takes 12-21 cycles.\n+(define_reservation \"cfv3_mul_l_10\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,(cf_agex+cf_dsoc)*17,cf_agex\")\n+\n+;; Word multiplication with no mac.\n+;; Takes 11 cycles.\n+(define_reservation \"cfv12_mul_w_10\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem,(cf_agex+cf_dsoc)*8,cf_agex\")\n+;; Takes 12 cycles.\n+(define_reservation \"cfv3_mul_w_10\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,(cf_agex+cf_dsoc)*8,cf_agex\")\n+\n+;; Word multiplication with no mac.\n+;; Takes 12 cycles.\n+(define_reservation \"cfv12_mul_w_i0\"\n+  \"cf_dsoc,cf_agex,cf_agex,cf_dsoc+cf_mem,(cf_agex+cf_dsoc)*8,cf_agex\")\n+;; Takes 13 cycles.\n+(define_reservation \"cfv3_mul_w_i0\"\n+  \"cf_dsoc,cf_agex,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,(cf_agex+cf_dsoc)*8,cf_agex\")\n+\n+(define_automaton \"cf_mac\")\n+\n+(define_cpu_unit \"cf_mac1,cf_mac2,cf_mac3,cf_mac4\"\n+  \"cf_mac\")\n+\n+;; Long multiplication with mac.\n+;; Takes 5 cycles.\n+(define_reservation \"cfv123_mac_l_00\"\n+  \"cf_dsoc,cf_agex,cf_mac1,cf_mac2,cf_mac3,cf_mac4\")\n+\n+;; Word multiplication with mac.\n+;; Takes 3 cycles.\n+(define_reservation \"cfv123_mac_w_00\"\n+  \"cf_dsoc,cf_agex,cf_mac1,cf_mac2\")\n \n-(define_automaton \"cf_v2_emac\")\n+;; Long multiplication with mac.\n+;; Takes 7 cycles.\n+(define_reservation \"cfv12_mac_l_10\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem,cf_agex,cf_mac1,cf_mac2,cf_mac3,cf_mac4\")\n+;; Takes 8 cycles.\n+(define_reservation \"cfv3_mac_l_10\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex,cf_mac1,cf_mac2,cf_mac3,cf_mac4\")\n+\n+;; Word multiplication with mac.\n+;; Takes 5 cycles.\n+(define_reservation \"cfv12_mac_w_10\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem,cf_agex,cf_mac1,cf_mac2\")\n+;; Takes 6 cycles.\n+(define_reservation \"cfv3_mac_w_10\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex,cf_mac1,cf_mac2\")\n \n-(define_cpu_unit \"cf_v2_emac1,cf_v2_emac2,cf_v2_emac3,cf_v2_emac4\"\n-  \"cf_v2_emac\")\n+;; Word multiplication with mac.\n+;; Takes 6 cycles.\n+(define_reservation \"cfv12_mac_w_i0\"\n+  \"cf_dsoc,cf_agex,cf_agex,cf_dsoc+cf_mem,cf_agex,cf_mac1,cf_mac2\")\n+;; Takes 7 cycles.\n+(define_reservation \"cfv3_mac_w_i0\"\n+  \"cf_dsoc,cf_agex,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex,cf_mac1,cf_mac2\")\n \n-;; Mul operation with register operands.\n+;; Multiplication with emac.\n ;; Takes 4 cycles.\n-(define_reservation \"cf_v2_mul_00\"\n-  \"cf_v2_dsoc,cf_v2_agex+cf_v2_emac1,cf_v2_emac2,cf_v2_emac3,cf_v2_emac4\")\n+(define_reservation \"cfv123_emac_00\"\n+  \"cf_dsoc,cf_agex+cf_mac1,cf_mac2,cf_mac3,cf_mac4\")\n \n-;; Mul operation with implicit load from a memory location.\n+;; Multiplication with emac.\n ;; Takes 6 cycles.\n-(define_reservation \"cf_v2_mul_10\"\n-  \"cf_v2_dsoc,cf_v2_agex,cf_v2_dsoc+cf_v2_mem,cf_v2_agex+cf_v2_emac1,cf_v2_emac2,cf_v2_emac3,cf_v2_emac4\")\n+(define_reservation \"cfv12_emac_10\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem,cf_agex+cf_mac1,cf_mac2,cf_mac3,cf_mac4\")\n+;; Takes 7 cycles.\n+(define_reservation \"cfv3_emac_10\"\n+  \"cf_dsoc,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex+cf_mac1,cf_mac2,cf_mac3,cf_mac4\")\n \n-;; Mul operation with implicit load from an indexed location.\n+;; Word multiplication with emac.\n ;; Takes 7 cycles.\n-(define_reservation \"cf_v2_mul_i0\"\n-  \"cf_v2_dsoc,cf_v2_agex,cf_v2_agex,cf_v2_dsoc+cf_v2_mem,cf_v2_agex+cf_v2_emac1,cf_v2_emac2,cf_v2_emac3,cf_v2_emac4\")\n+(define_reservation \"cfv12_emac_w_i0\"\n+  \"cf_dsoc,cf_agex,cf_agex,cf_dsoc+cf_mem,cf_agex+cf_mac1,cf_mac2,cf_mac3,cf_mac4\")\n+;; Takes 8 cycles.\n+(define_reservation \"cfv3_emac_w_i0\"\n+  \"cf_dsoc,cf_agex,cf_agex,cf_dsoc+cf_mem1,cf_dsoc+cf_mem2,cf_agex+cf_mac1,cf_mac2,cf_mac3,cf_mac4\")\n+\n+;; Return instruction.\n+;; ??? As return reads target address from stack, use a mem-read reservation\n+;; ??? for it.\n+;; ??? It's not clear what the core does during these 5 cycles.\n+;; ??? Luckily, we don't care that much about an insn that won't be moved.\n+;; Takes 5 cycles.\n+(define_reservation \"cfv12_rts\" \"cfv12_alu_10\")\n+;; Takes 8 cycles.\n+(define_reservation \"cfv3_rts\" \"cfv3_alu_10\")\n+\n+;; Call instruction.\n+;; ??? It's not clear what reservation is best to use for calls.\n+;; ??? For now we use mem-write + return reservations to reflect the fact of\n+;; ??? pushing and poping return address to and from the stack.\n+;; Takes 3 cycles.\n+(define_reservation \"cfv12_call\" \"cfv12_alu_01,cfv12_rts\")\n+;; Takes 1/5 cycles.\n+(define_reservation \"cfv3_call\" \"cfv3_alu_01,cfv3_rts\")\n+\n+;; Conditional branch instruction.\n+;; ??? Branch reservations are unclear to me so far.  Luckily, we don't care\n+;; ??? that much about branches.\n+;; Takes 2 cycles.\n+(define_reservation \"cfv12_bcc\" \"cfv123_alu_00\")\n+;; Takes 1 cycles.\n+(define_reservation \"cfv3_bcc\" \"cfv123_alu_00\")\n+\n+;; Unconditional branch instruciton.\n+;; Takes 2 cycles.\n+(define_reservation \"cfv12_bra\" \"cfv12_alu_01\")\n+;; Takes 1 cycles.\n+(define_reservation \"cfv3_bra\" \"cfv3_alu_01\")\n+\n+;; Computed jump instruction.\n+;; Takes 3 cycles.\n+(define_reservation \"cfv12_jmp\"\n+  \"(cf_dsoc+cf_agex)*3\")\n+;; Takes 5 cycles.\n+(define_reservation \"cfv3_jmp\"\n+  \"(cf_dsoc+cf_agex)*5\")\n \n ;; Instruction reservations.\n \n@@ -192,488 +343,1186 @@\n ;; for each instruction size.\n ;; A number in the end of reservation's name is the size of the instruction.\n \n-(define_insn_reservation \"cf_v2_move_00_1\" 1\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu,alu_l,move,move_l\"))\n+(define_insn_reservation \"cfv123_alu_00_1\" 1\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t (eq_attr \"type2\" \"alu,alu_reg,omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n        (eq_attr \"op_mem\" \"00\"))\n-  \"cf_v2_ib1+cf_v2_move_00\")\n+  \"cf_ib1+cfv123_alu_00\")\n \n-(define_insn_reservation \"cf_v2_move_00_2\" 1\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu,alu_l,move,move_l\"))\n+(define_insn_reservation \"cfv123_alu_00_2\" 1\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t (eq_attr \"type2\" \"alu,alu_reg,omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"00\"))\n-  \"cf_v2_ib2+cf_v2_move_00\")\n+  \"cf_ib2+cfv123_alu_00\")\n \n-(define_insn_reservation \"cf_v2_move_00_3\" 1\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu,alu_l,move,move_l\"))\n+(define_insn_reservation \"cfv123_alu_00_3\" 1\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t (eq_attr \"type2\" \"alu,alu_reg,omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"00\"))\n-  \"cf_v2_ib3+cf_v2_move_00\")\n+  \"cf_ib3+cfv123_alu_00\")\n+\n+(define_insn_reservation \"cfv12_alu_10_1\" 3\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib1+cfv12_alu_10\")\n+\n+(define_insn_reservation \"cfv12_alu_10_2\" 3\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib2+cfv12_alu_10\")\n \n-(define_insn_reservation \"cf_v2_move_10_1\" 4\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move\"))\n+(define_insn_reservation \"cfv12_alu_10_3\" 3\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib3+cfv12_alu_10\")\n+\n+(define_insn_reservation \"cfv12_omove_10_1\" 2\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n        (eq_attr \"op_mem\" \"10\"))\n-  \"cf_v2_ib1+cf_v2_move_10\")\n+  \"cf_ib1+cfv12_omove_10\")\n \n-(define_insn_reservation \"cf_v2_move_10_2\" 4\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move\"))\n+(define_insn_reservation \"cfv12_omove_10_2\" 2\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"10\"))\n-  \"cf_v2_ib2+cf_v2_move_10\")\n+  \"cf_ib2+cfv12_omove_10\")\n \n-(define_insn_reservation \"cf_v2_move_10_3\" 4\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move\"))\n+(define_insn_reservation \"cfv12_omove_10_3\" 2\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"10\"))\n-  \"cf_v2_ib3+cf_v2_move_10\")\n+  \"cf_ib3+cfv12_omove_10\")\n \n-(define_insn_reservation \"cf_v2_move_l_10_1\" 3\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"move_l\"))\n+(define_insn_reservation \"cfv3_alu_10_1\" 4\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n        (eq_attr \"op_mem\" \"10\"))\n-  \"cf_v2_ib1+cf_v2_move_l_10\")\n+  \"cf_ib1+cfv3_alu_10\")\n \n-(define_insn_reservation \"cf_v2_move_l_10_2\" 3\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"move_l\"))\n+(define_insn_reservation \"cfv3_alu_10_2\" 4\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"10\"))\n-  \"cf_v2_ib2+cf_v2_move_l_10\")\n+  \"cf_ib2+cfv3_alu_10\")\n \n-(define_insn_reservation \"cf_v2_move_l_10_3\" 3\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"move_l\"))\n+(define_insn_reservation \"cfv3_alu_10_3\" 4\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"10\"))\n-  \"cf_v2_ib3+cf_v2_move_l_10\")\n+  \"cf_ib3+cfv3_alu_10\")\n+\n+(define_insn_reservation \"cfv3_omove_10_1\" 3\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib1+cfv3_omove_10\")\n+\n+(define_insn_reservation \"cfv3_omove_10_2\" 3\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib2+cfv3_omove_10\")\n+\n+(define_insn_reservation \"cfv3_omove_10_3\" 3\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib3+cfv3_omove_10\")\n+\n+(define_insn_reservation \"cfv12_alu_i0_2\" 4\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib2+cfv12_alu_i0\")\n+\n+(define_insn_reservation \"cfv12_alu_i0_3\" 4\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib3+cfv12_alu_i0\")\n \n-(define_insn_reservation \"cf_v2_move_i0_2\" 5\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move\"))\n+(define_insn_reservation \"cfv12_omove_i0_2\" 3\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"i0\"))\n-  \"cf_v2_ib2+cf_v2_move_i0\")\n+  \"cf_ib2+cfv12_omove_i0\")\n \n-(define_insn_reservation \"cf_v2_move_i0_3\" 5\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move\"))\n+(define_insn_reservation \"cfv12_omove_i0_3\" 3\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"i0\"))\n-  \"cf_v2_ib3+cf_v2_move_i0\")\n+  \"cf_ib3+cfv12_omove_i0\")\n \n-(define_insn_reservation \"cf_v2_move_l_i0_2\" 4\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"move_l\"))\n+(define_insn_reservation \"cfv3_alu_i0_2\" 5\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"i0\"))\n-  \"cf_v2_ib2+cf_v2_move_l_i0\")\n+  \"cf_ib2+cfv3_alu_i0\")\n \n-(define_insn_reservation \"cf_v2_move_l_i0_3\" 4\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"move_l\"))\n+(define_insn_reservation \"cfv3_alu_i0_3\" 5\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"i0\"))\n-  \"cf_v2_ib3+cf_v2_move_l_i0\")\n+  \"cf_ib3+cfv3_alu_i0\")\n+\n+(define_insn_reservation \"cfv3_omove_i0_2\" 4\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib2+cfv3_omove_i0\")\n \n-(define_insn_reservation \"cf_v2_move_01_1\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move,move_l\"))\n+(define_insn_reservation \"cfv3_omove_i0_3\" 4\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib3+cfv3_omove_i0\")\n+\n+(define_insn_reservation \"cfv12_alu_01_1\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu,omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n        (eq_attr \"op_mem\" \"01\"))\n-  \"cf_v2_ib1+cf_v2_move_01\")\n+  \"cf_ib1+cfv12_alu_01\")\n \n-(define_insn_reservation \"cf_v2_move_01_2\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move,move_l\"))\n+(define_insn_reservation \"cfv12_alu_01_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu,omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"01\"))\n-  \"cf_v2_ib2+cf_v2_move_01\")\n+  \"cf_ib2+cfv12_alu_01\")\n \n-(define_insn_reservation \"cf_v2_move_01_3\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move,move_l\"))\n+(define_insn_reservation \"cfv12_alu_01_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu,omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"01\"))\n-  \"cf_v2_ib3+cf_v2_move_01\")\n+  \"cf_ib3+cfv12_alu_01\")\n+\n+(define_insn_reservation \"cfv3_alu_01_1\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu,omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"01\"))\n+  \"cf_ib1+cfv3_alu_01\")\n+\n+(define_insn_reservation \"cfv3_alu_01_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu,omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"01\"))\n+  \"cf_ib2+cfv3_alu_01\")\n+\n+(define_insn_reservation \"cfv3_alu_01_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu,omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"01\"))\n+  \"cf_ib3+cfv3_alu_01\")\n+\n+(define_insn_reservation \"cfv12_alu_0i_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu,omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"0i\"))\n+  \"cf_ib2+cfv12_alu_0i\")\n+\n+(define_insn_reservation \"cfv12_alu_0i_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu,omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"0i\"))\n+  \"cf_ib3+cfv12_alu_0i\")\n \n-(define_insn_reservation \"cf_v2_move_0i_2\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move,move_l\"))\n+(define_insn_reservation \"cfv3_alu_0i_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu,omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"0i\"))\n-  \"cf_v2_ib2+cf_v2_move_0i\")\n+  \"cf_ib2+cfv3_alu_0i\")\n \n-(define_insn_reservation \"cf_v2_move_0i_3\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move,move_l\"))\n+(define_insn_reservation \"cfv3_alu_0i_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu,omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"0i\"))\n-  \"cf_v2_ib3+cf_v2_move_0i\")\n+  \"cf_ib3+cfv3_alu_0i\")\n \n-(define_insn_reservation \"cf_v2_move_11_1\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move\"))\n+(define_insn_reservation \"cfv12_alu_11_1\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n        (eq_attr \"op_mem\" \"11\"))\n-  \"cf_v2_ib1+cf_v2_move_11\")\n+  \"cf_ib1+cfv12_alu_11\")\n \n-(define_insn_reservation \"cf_v2_move_11_2\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move\"))\n+(define_insn_reservation \"cfv12_alu_11_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"11\"))\n-  \"cf_v2_ib2+cf_v2_move_11\")\n+  \"cf_ib2+cfv12_alu_11\")\n \n-(define_insn_reservation \"cf_v2_move_11_3\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move\"))\n+(define_insn_reservation \"cfv12_alu_11_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"11\"))\n-  \"cf_v2_ib3+cf_v2_move_11\")\n+  \"cf_ib3+cfv12_alu_11\")\n \n-(define_insn_reservation \"cf_v2_move_l_11_1\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"move_l\"))\n+(define_insn_reservation \"cfv12_omove_11_1\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n        (eq_attr \"op_mem\" \"11\"))\n-  \"cf_v2_ib1+cf_v2_move_l_11\")\n+  \"cf_ib1+cfv12_omove_11\")\n \n-(define_insn_reservation \"cf_v2_move_l_11_2\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"move_l\"))\n+(define_insn_reservation \"cfv12_omove_11_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"11\"))\n-  \"cf_v2_ib2+cf_v2_move_l_11\")\n+  \"cf_ib2+cfv12_omove_11\")\n \n-(define_insn_reservation \"cf_v2_move_l_11_3\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"move_l\"))\n+(define_insn_reservation \"cfv12_omove_11_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"11\"))\n-  \"cf_v2_ib3+cf_v2_move_l_11\")\n+  \"cf_ib3+cfv12_omove_11\")\n+\n+(define_insn_reservation \"cfv3_alu_11_1\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"11\"))\n+  \"cf_ib1+cfv3_alu_11\")\n+\n+(define_insn_reservation \"cfv3_alu_11_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"11\"))\n+  \"cf_ib2+cfv3_alu_11\")\n+\n+(define_insn_reservation \"cfv3_alu_11_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"11\"))\n+  \"cf_ib3+cfv3_alu_11\")\n+\n+(define_insn_reservation \"cfv3_omove_11_1\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"11\"))\n+  \"cf_ib1+cfv3_omove_11\")\n+\n+(define_insn_reservation \"cfv3_omove_11_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"11\"))\n+  \"cf_ib2+cfv3_omove_11\")\n+\n+(define_insn_reservation \"cfv3_omove_11_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"11\"))\n+  \"cf_ib3+cfv3_omove_11\")\n+\n+(define_insn_reservation \"cfv12_alu_i1_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"i1\"))\n+  \"cf_ib2+cfv12_alu_i1\")\n+\n+(define_insn_reservation \"cfv12_alu_i1_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"i1\"))\n+  \"cf_ib3+cfv12_alu_i1\")\n \n-(define_insn_reservation \"cf_v2_move_i1_2\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move\"))\n+(define_insn_reservation \"cfv12_omove_i1_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"i1\"))\n-  \"cf_v2_ib2+cf_v2_move_i1\")\n+  \"cf_ib2+cfv12_omove_i1\")\n \n-(define_insn_reservation \"cf_v2_move_i1_3\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move\"))\n+(define_insn_reservation \"cfv12_omove_i1_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"i1\"))\n-  \"cf_v2_ib3+cf_v2_move_i1\")\n+  \"cf_ib3+cfv12_omove_i1\")\n \n-(define_insn_reservation \"cf_v2_move_l_i1_2\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"move_l\"))\n+(define_insn_reservation \"cfv3_alu_i1_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"i1\"))\n-  \"cf_v2_ib2+cf_v2_move_l_i1\")\n+  \"cf_ib2+cfv3_alu_i1\")\n \n-(define_insn_reservation \"cf_v2_move_l_i1_3\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"move_l\"))\n+(define_insn_reservation \"cfv3_alu_i1_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"i1\"))\n-  \"cf_v2_ib3+cf_v2_move_l_i1\")\n+  \"cf_ib3+cfv3_alu_i1\")\n+\n+(define_insn_reservation \"cfv3_omove_i1_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"i1\"))\n+  \"cf_ib2+cfv3_omove_i1\")\n+\n+(define_insn_reservation \"cfv3_omove_i1_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"i1\"))\n+  \"cf_ib3+cfv3_omove_i1\")\n+\n+(define_insn_reservation \"cfv12_alu_1i_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"1i\"))\n+  \"cf_ib2+cfv12_alu_1i\")\n+\n+(define_insn_reservation \"cfv12_alu_1i_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"1i\"))\n+  \"cf_ib3+cfv12_alu_1i\")\n+\n+(define_insn_reservation \"cfv12_omove_1i_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"1i\"))\n+  \"cf_ib2+cfv12_omove_1i\")\n+\n+(define_insn_reservation \"cfv12_omove_1i_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"1i\"))\n+  \"cf_ib3+cfv12_omove_1i\")\n \n-(define_insn_reservation \"cf_v2_move_1i_2\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move\"))\n+(define_insn_reservation \"cfv3_alu_1i_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"1i\"))\n-  \"cf_v2_ib2+cf_v2_move_1i\")\n+  \"cf_ib2+cfv3_alu_1i\")\n \n-(define_insn_reservation \"cf_v2_move_1i_3\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"alu_l,move\"))\n+(define_insn_reservation \"cfv3_alu_1i_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"alu\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"1i\"))\n-  \"cf_v2_ib3+cf_v2_move_1i\")\n+  \"cf_ib3+cfv3_alu_1i\")\n \n-(define_insn_reservation \"cf_v2_move_l_1i_2\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"move_l\"))\n+(define_insn_reservation \"cfv3_omove_1i_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"1i\"))\n-  \"cf_v2_ib2+cf_v2_move_l_1i\")\n+  \"cf_ib2+cfv3_omove_1i\")\n \n-(define_insn_reservation \"cf_v2_move_l_1i_3\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"move_l\"))\n+(define_insn_reservation \"cfv3_omove_1i_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"omove\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"1i\"))\n-  \"cf_v2_ib3+cf_v2_move_l_1i\")\n+  \"cf_ib3+cfv3_omove_1i\")\n \n-(define_insn_reservation \"cf_v2_lea_10_1\" 1\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv123_lea_10_1\" 1\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n \t\t (eq_attr \"type2\" \"lea\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n        (eq_attr \"op_mem\" \"10\"))\n-  \"cf_v2_ib1+cf_v2_lea_10\")\n+  \"cf_ib1+cfv123_lea_10\")\n \n-(define_insn_reservation \"cf_v2_lea_10_2\" 1\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv123_lea_10_2\" 1\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n \t\t (eq_attr \"type2\" \"lea\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"10\"))\n-  \"cf_v2_ib2+cf_v2_lea_10\")\n+  \"cf_ib2+cfv123_lea_10\")\n \n-(define_insn_reservation \"cf_v2_lea_10_3\" 1\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv123_lea_10_3\" 1\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n \t\t (eq_attr \"type2\" \"lea\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"10\"))\n-  \"cf_v2_ib3+cf_v2_lea_10\")\n+  \"cf_ib3+cfv123_lea_10\")\n \n-(define_insn_reservation \"cf_v2_lea_i0_2\" 2\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv123_lea_i0_2\" 2\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n \t\t (eq_attr \"type2\" \"lea\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"i0\"))\n-  \"cf_v2_ib2+cf_v2_lea_i0\")\n+  \"cf_ib2+cfv123_lea_i0\")\n \n-(define_insn_reservation \"cf_v2_lea_i0_3\" 2\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv123_lea_i0_3\" 2\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n \t\t (eq_attr \"type2\" \"lea\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"i0\"))\n-  \"cf_v2_ib3+cf_v2_lea_i0\")\n+  \"cf_ib3+cfv123_lea_i0\")\n \n-(define_insn_reservation \"cf_v2_pea_11_1\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv12_pea_11_1\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n \t\t (eq_attr \"type2\" \"pea\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n        (eq_attr \"op_mem\" \"11\"))\n-  \"cf_v2_ib1+cf_v2_pea_11\")\n+  \"cf_ib1+cfv12_pea_11\")\n \n-(define_insn_reservation \"cf_v2_pea_11_2\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv12_pea_11_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n \t\t (eq_attr \"type2\" \"pea\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"11\"))\n-  \"cf_v2_ib2+cf_v2_pea_11\")\n+  \"cf_ib2+cfv12_pea_11\")\n \n-(define_insn_reservation \"cf_v2_pea_11_3\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv12_pea_11_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n \t\t (eq_attr \"type2\" \"pea\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"11\"))\n-  \"cf_v2_ib3+cf_v2_pea_11\")\n+  \"cf_ib3+cfv12_pea_11\")\n+\n+(define_insn_reservation \"cfv3_pea_11_1\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"pea\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"11\"))\n+  \"cf_ib1+cfv3_pea_11\")\n+\n+(define_insn_reservation \"cfv3_pea_11_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"pea\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"11\"))\n+  \"cf_ib2+cfv3_pea_11\")\n+\n+(define_insn_reservation \"cfv3_pea_11_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t (eq_attr \"type2\" \"pea\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"11\"))\n+  \"cf_ib3+cfv3_pea_11\")\n+\n+(define_insn_reservation \"cfv12_pea_i1_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"pea\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"i1\"))\n+  \"cf_ib2+cfv12_pea_i1\")\n+\n+(define_insn_reservation \"cfv12_pea_i1_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t (eq_attr \"type2\" \"pea\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"i1\"))\n+  \"cf_ib3+cfv12_pea_i1\")\n \n-(define_insn_reservation \"cf_v2_pea_i1_2\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_pea_i1_2\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n \t\t (eq_attr \"type2\" \"pea\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"i1\"))\n-  \"cf_v2_ib2+cf_v2_pea_i1\")\n+  \"cf_ib2+cfv3_pea_i1\")\n \n-(define_insn_reservation \"cf_v2_pea_i1_3\" 0\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_pea_i1_3\" 0\n+  (and (and (and (eq_attr \"cpu\" \"cfv3\")\n \t\t (eq_attr \"type2\" \"pea\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"i1\"))\n-  \"cf_v2_ib3+cf_v2_pea_i1\")\n+  \"cf_ib3+cfv3_pea_i1\")\n+\n+(define_insn_reservation \"cfv123_mul_l_00_1\" 18\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"00\"))\n+  \"cf_ib1+cfv123_mul_l_00\")\n+\n+(define_insn_reservation \"cfv123_mul_l_00_2\" 18\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"00\"))\n+  \"cf_ib2+cfv123_mul_l_00\")\n+\n+(define_insn_reservation \"cfv123_mul_l_00_3\" 18\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"00\"))\n+  \"cf_ib3+cfv123_mul_l_00\")\n+\n+(define_insn_reservation \"cfv123_mul_w_00_1\" 9\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"00\"))\n+  \"cf_ib1+cfv123_mul_w_00\")\n+\n+(define_insn_reservation \"cfv123_mul_w_00_2\" 9\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"00\"))\n+  \"cf_ib2+cfv123_mul_w_00\")\n+\n+(define_insn_reservation \"cfv123_mul_w_00_3\" 9\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"00\"))\n+  \"cf_ib3+cfv123_mul_w_00\")\n+\n+(define_insn_reservation \"cfv12_mul_l_10_1\" 20\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib1+cfv12_mul_l_10\")\n \n-(define_insn_reservation \"cf_v2_mul_00_1\" 4\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"mul\"))\n+(define_insn_reservation \"cfv12_mul_l_10_2\" 20\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib2+cfv12_mul_l_10\")\n+\n+(define_insn_reservation \"cfv12_mul_l_10_3\" 20\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib3+cfv12_mul_l_10\")\n+\n+(define_insn_reservation \"cfv3_mul_l_10_1\" 21\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib1+cfv3_mul_l_10\")\n+\n+(define_insn_reservation \"cfv3_mul_l_10_2\" 21\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib2+cfv3_mul_l_10\")\n+\n+(define_insn_reservation \"cfv3_mul_l_10_3\" 21\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib3+cfv3_mul_l_10\")\n+\n+(define_insn_reservation \"cfv12_mul_w_10_1\" 11\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib1+cfv12_mul_w_10\")\n+\n+(define_insn_reservation \"cfv12_mul_w_10_2\" 11\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib2+cfv12_mul_w_10\")\n+\n+(define_insn_reservation \"cfv12_mul_w_10_3\" 11\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib3+cfv12_mul_w_10\")\n+\n+(define_insn_reservation \"cfv3_mul_w_10_1\" 12\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib1+cfv3_mul_w_10\")\n+\n+(define_insn_reservation \"cfv3_mul_w_10_2\" 12\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib2+cfv3_mul_w_10\")\n+\n+(define_insn_reservation \"cfv3_mul_w_10_3\" 12\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib3+cfv3_mul_w_10\")\n+\n+(define_insn_reservation \"cfv12_mul_w_i0_2\" 12\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib2+cfv12_mul_w_i0\")\n+\n+(define_insn_reservation \"cfv12_mul_w_i0_3\" 12\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib3+cfv12_mul_w_i0\")\n+\n+\n+(define_insn_reservation \"cfv3_mul_w_i0_2\" 13\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib2+cfv3_mul_w_i0\")\n+\n+(define_insn_reservation \"cfv3_mul_w_i0_3\" 13\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"no\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib3+cfv3_mul_w_i0\")\n+\n+(define_insn_reservation \"cfv123_mac_l_00_1\" 5\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n        (eq_attr \"op_mem\" \"00\"))\n-  \"cf_v2_ib1+cf_v2_mul_00\")\n+  \"cf_ib1+cfv123_mac_l_00\")\n \n-(define_insn_reservation \"cf_v2_mul_00_2\" 4\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"mul\"))\n+(define_insn_reservation \"cfv123_mac_l_00_2\" 5\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"00\"))\n-  \"cf_v2_ib2+cf_v2_mul_00\")\n+  \"cf_ib2+cfv123_mac_l_00\")\n \n-(define_insn_reservation \"cf_v2_mul_00_3\" 4\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"mul\"))\n+(define_insn_reservation \"cfv123_mac_l_00_3\" 5\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"00\"))\n-  \"cf_v2_ib3+cf_v2_mul_00\")\n+  \"cf_ib3+cfv123_mac_l_00\")\n+\n+(define_insn_reservation \"cfv123_mac_w_00_1\" 3\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"00\"))\n+  \"cf_ib1+cfv123_mac_w_00\")\n+\n+(define_insn_reservation \"cfv123_mac_w_00_2\" 3\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"00\"))\n+  \"cf_ib2+cfv123_mac_w_00\")\n+\n+(define_insn_reservation \"cfv123_mac_w_00_3\" 3\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"00\"))\n+  \"cf_ib3+cfv123_mac_w_00\")\n+\n+(define_insn_reservation \"cfv12_mac_l_10_1\" 7\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib1+cfv12_mac_l_10\")\n+\n+(define_insn_reservation \"cfv12_mac_l_10_2\" 7\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib2+cfv12_mac_l_10\")\n+\n+(define_insn_reservation \"cfv12_mac_l_10_3\" 7\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib3+cfv12_mac_l_10\")\n \n-(define_insn_reservation \"cf_v2_mul_10_1\" 6\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"mul\"))\n+(define_insn_reservation \"cfv3_mac_l_10_1\" 8\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n        (eq_attr \"op_mem\" \"10\"))\n-  \"cf_v2_ib1+cf_v2_mul_10\")\n+  \"cf_ib1+cfv3_mac_l_10\")\n \n-(define_insn_reservation \"cf_v2_mul_10_2\" 6\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"mul\"))\n+(define_insn_reservation \"cfv3_mac_l_10_2\" 8\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"10\"))\n-  \"cf_v2_ib2+cf_v2_mul_10\")\n+  \"cf_ib2+cfv3_mac_l_10\")\n \n-(define_insn_reservation \"cf_v2_mul_10_3\" 6\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"mul\"))\n+(define_insn_reservation \"cfv3_mac_l_10_3\" 8\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_l\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"10\"))\n-  \"cf_v2_ib3+cf_v2_mul_10\")\n+  \"cf_ib3+cfv3_mac_l_10\")\n+\n+(define_insn_reservation \"cfv12_mac_w_10_1\" 5\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib1+cfv12_mac_w_10\")\n \n-(define_insn_reservation \"cf_v2_mul_i0_2\" 7\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"mul\"))\n+(define_insn_reservation \"cfv12_mac_w_10_2\" 5\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib2+cfv12_mac_w_10\")\n+\n+(define_insn_reservation \"cfv12_mac_w_10_3\" 5\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib3+cfv12_mac_w_10\")\n+\n+(define_insn_reservation \"cfv3_mac_w_10_1\" 6\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib1+cfv3_mac_w_10\")\n+\n+(define_insn_reservation \"cfv3_mac_w_10_2\" 6\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib2+cfv3_mac_w_10\")\n+\n+(define_insn_reservation \"cfv3_mac_w_10_3\" 6\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib3+cfv3_mac_w_10\")\n+\n+(define_insn_reservation \"cfv12_mac_w_i0_2\" 6\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n        (eq_attr \"op_mem\" \"i0\"))\n-  \"cf_v2_ib2+cf_v2_mul_i0\")\n+  \"cf_ib2+cfv12_mac_w_i0\")\n \n-(define_insn_reservation \"cf_v2_mul_i0_3\" 7\n-  (and (and (and (eq_attr \"cpu\" \"cf_v2\")\n-\t\t (eq_attr \"type2\" \"mul\"))\n+(define_insn_reservation \"cfv12_mac_w_i0_3\" 6\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n \t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n        (eq_attr \"op_mem\" \"i0\"))\n-  \"cf_v2_ib3+cf_v2_mul_i0\")\n+  \"cf_ib3+cfv12_mac_w_i0\")\n \n-;; ??? As return reads target address from stack, use a mem-read reservation\n-;; for it.\n-(define_reservation \"cf_v2_rts\" \"cf_v2_move_10\")\n+(define_insn_reservation \"cfv3_mac_w_i0_2\" 7\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib2+cfv3_mac_w_i0\")\n \n-;; ??? It's not clear what the core does during these 5 cycles.\n-;; Luckily, we don't care that much about an insn that won't be moved.\n-(define_insn_reservation \"cf_v2_rts_1\" 5\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_mac_w_i0_3\" 7\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_mac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib3+cfv3_mac_w_i0\")\n+\n+(define_insn_reservation \"cfv123_emac_00_1\" 4\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_l,mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"00\"))\n+  \"cf_ib1+cfv123_emac_00\")\n+\n+(define_insn_reservation \"cfv123_emac_00_2\" 4\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_l,mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"00\"))\n+  \"cf_ib2+cfv123_emac_00\")\n+\n+(define_insn_reservation \"cfv123_emac_00_3\" 4\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_l,mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"00\"))\n+  \"cf_ib3+cfv123_emac_00\")\n+\n+(define_insn_reservation \"cfv12_emac_10_1\" 6\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_l,mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib1+cfv12_emac_10\")\n+\n+(define_insn_reservation \"cfv12_emac_10_2\" 6\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_l,mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib2+cfv12_emac_10\")\n+\n+(define_insn_reservation \"cfv12_emac_10_3\" 6\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_l,mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib3+cfv12_emac_10\")\n+\n+(define_insn_reservation \"cfv3_emac_10_1\" 7\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_l,mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib1+cfv3_emac_10\")\n+\n+(define_insn_reservation \"cfv3_emac_10_2\" 7\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_l,mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib2+cfv3_emac_10\")\n+\n+(define_insn_reservation \"cfv3_emac_10_3\" 7\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_l,mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"10\"))\n+  \"cf_ib3+cfv3_emac_10\")\n+\n+(define_insn_reservation \"cfv12_emac_w_i0_2\" 7\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib2+cfv12_emac_w_i0\")\n+\n+(define_insn_reservation \"cfv12_emac_w_i0_3\" 7\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib3+cfv12_emac_w_i0\")\n+\n+(define_insn_reservation \"cfv3_emac_w_i0_2\" 8\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib2+cfv3_emac_w_i0\")\n+\n+(define_insn_reservation \"cfv3_emac_w_i0_3\" 8\n+  (and (and (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t\t      (eq_attr \"mac\" \"cf_emac\"))\n+\t\t (eq_attr \"type2\" \"mul_w\"))\n+\t    (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+       (eq_attr \"op_mem\" \"i0\"))\n+  \"cf_ib3+cfv3_emac_w_i0\")\n+\n+(define_insn_reservation \"cfv12_rts_1\" 5\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n \t    (eq_attr \"type2\" \"rts\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n-  \"cf_v2_ib1+cf_v2_rts\")\n+  \"cf_ib1+cfv12_rts\")\n \n-;; Call instructions reservations.\n+(define_insn_reservation \"cfv3_rts_1\" 8\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n+\t    (eq_attr \"type2\" \"rts\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+  \"cf_ib1+cfv3_rts\")\n \n-;; ??? It's not clear what reservation is best to use for calls.\n-;; For now we use mem-write + return reservations to reflect the fact of\n-;; pushing and poping return address to and from the stack.\n+(define_insn_reservation \"cfv12_call_1\" 3\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"call\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+  \"cf_ib1+cfv12_call\")\n \n-(define_insn_reservation \"cf_v2_call_1\" 3\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv12_call_2\" 3\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"call\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+  \"cf_ib2+cfv12_call\")\n+\n+(define_insn_reservation \"cfv12_call_3\" 3\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"call\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+  \"cf_ib3+cfv12_call\")\n+\n+(define_insn_reservation \"cfv3_call_1\" 1\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"call\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n-  \"cf_v2_ib1+cf_v2_move_10,cf_v2_rts\")\n+  \"cf_ib1+cfv3_call\")\n \n-(define_insn_reservation \"cf_v2_call_2\" 3\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_call_2\" 1\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"call\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n-  \"cf_v2_ib2+cf_v2_move_10,cf_v2_rts\")\n+  \"cf_ib2+cfv3_call\")\n \n-(define_insn_reservation \"cf_v2_call_3\" 3\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_call_3\" 1\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"call\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n-  \"cf_v2_ib3+cf_v2_move_10,cf_v2_rts\")\n+  \"cf_ib3+cfv3_call\")\n \n-;; Branch reservations.\n+(define_insn_reservation \"cfv12_bcc_1\" 2\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"bcc\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+  \"cf_ib1+cfv12_bcc\")\n \n-;; ??? Branch reservations are unclear to me so far.  Luckily, we don't care\n-;; ??? that much about branches.\n-(define_reservation \"cf_v2_bcc\" \"cf_v2_move_00\")\n+(define_insn_reservation \"cfv12_bcc_2\" 2\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"bcc\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+  \"cf_ib2+cfv12_bcc\")\n+\n+(define_insn_reservation \"cfv12_bcc_3\" 2\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"bcc\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+  \"cf_ib3+cfv12_bcc\")\n \n-(define_insn_reservation \"cf_v2_bcc_1\" 2\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_bcc_1\" 1\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"bcc\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n-  \"cf_v2_ib1+cf_v2_bcc\")\n+  \"cf_ib1+cfv3_bcc\")\n \n-(define_insn_reservation \"cf_v2_bcc_2\" 2\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_bcc_2\" 1\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"bcc\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n-  \"cf_v2_ib2+cf_v2_bcc\")\n+  \"cf_ib2+cfv3_bcc\")\n \n-(define_insn_reservation \"cf_v2_bcc_3\" 2\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_bcc_3\" 1\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"bcc\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n-  \"cf_v2_ib3+cf_v2_bcc\")\n+  \"cf_ib3+cfv3_bcc\")\n+\n+(define_insn_reservation \"cfv12_bra_1\" 2\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"bra\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+  \"cf_ib1+cfv12_bra\")\n \n-(define_reservation \"cf_v2_bra\" \"cf_v2_move_01\")\n+(define_insn_reservation \"cfv12_bra_2\" 2\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"bra\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+  \"cf_ib2+cfv12_bra\")\n \n-(define_insn_reservation \"cf_v2_bra_1\" 2\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv12_bra_3\" 2\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"bra\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+  \"cf_ib3+cfv12_bra\")\n+\n+(define_insn_reservation \"cfv3_bra_1\" 1\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"bra\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n-  \"cf_v2_ib1+cf_v2_bra\")\n+  \"cf_ib1+cfv3_bra\")\n \n-(define_insn_reservation \"cf_v2_bra_2\" 2\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_bra_2\" 1\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"bra\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n-  \"cf_v2_ib2+cf_v2_bra\")\n+  \"cf_ib2+cfv3_bra\")\n \n-(define_insn_reservation \"cf_v2_bra_3\" 2\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_bra_3\" 1\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"bra\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n-  \"cf_v2_ib3+cf_v2_bra\")\n+  \"cf_ib3+cfv3_bra\")\n \n-;; Computed jump.\n-;; Takes 3 cycles.\n-(define_reservation \"cf_v2_jmp\"\n-  \"cf_v2_dsoc,cf_v2_agex,cf_v2_dsoc,cf_v2_agex\")\n+(define_insn_reservation \"cfv12_jmp_1\" 3\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"jmp\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+  \"cf_ib1+cfv12_jmp\")\n+\n+(define_insn_reservation \"cfv12_jmp_2\" 3\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"jmp\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n+  \"cf_ib2+cfv12_jmp\")\n+\n+(define_insn_reservation \"cfv12_jmp_3\" 3\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"jmp\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n+  \"cf_ib3+cfv12_jmp\")\n \n-(define_insn_reservation \"cf_v2_jmp_1\" 3\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_jmp_1\" 5\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"jmp\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n-  \"cf_v2_ib1+cf_v2_jmp\")\n+  \"cf_ib1+cfv3_jmp\")\n \n-(define_insn_reservation \"cf_v2_jmp_2\" 3\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_jmp_2\" 5\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"jmp\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n-  \"cf_v2_ib2+cf_v2_jmp\")\n+  \"cf_ib2+cfv3_jmp\")\n \n-(define_insn_reservation \"cf_v2_jmp_3\" 3\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv3_jmp_3\" 5\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"jmp\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n-  \"cf_v2_ib3+cf_v2_jmp\")\n+  \"cf_ib3+cfv3_jmp\")\n \n ;; Misc reservations.\n \n-(define_insn_reservation \"cf_v2_unlk_1\" 2\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cfv12_unlk_1\" 2\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2\")\n+\t    (eq_attr \"type2\" \"unlk\"))\n+       (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n+  \"cf_ib1+cfv12_alu_10\")\n+\n+(define_insn_reservation \"cfv3_unlk_1\" 3\n+  (and (and (eq_attr \"cpu\" \"cfv3\")\n \t    (eq_attr \"type2\" \"unlk\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n-  \"cf_v2_ib1+cf_v2_move_l_10\")\n+  \"cf_ib1+cfv3_alu_10\")\n \n ;; This automaton is used to gather statistics on insns that need reservations.\n-(define_automaton \"cf_v2_guess\")\n+(define_automaton \"cf_guess\")\n \n-(define_query_cpu_unit \"cf_v2_guess\" \"cf_v2_guess\")\n+(define_query_cpu_unit \"cf_guess\" \"cf_guess\")\n \n ;; Dummy reservation for instructions that are not handled yet.\n \n-(define_insn_reservation \"cf_v2_guess_1\" 1\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cf_guess_1\" 1\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n \t    (eq_attr \"guess\" \"yes\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 1)))\n-  \"cf_v2_ib1+cf_v2_guess+cf_v2_dsoc+cf_v2_agex\")\n+  \"cf_ib1+cf_guess+cf_dsoc+cf_agex\")\n \n-(define_insn_reservation \"cf_v2_guess_2\" 1\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cf_guess_2\" 1\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n \t    (eq_attr \"guess\" \"yes\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 2)))\n-  \"cf_v2_ib2+cf_v2_guess+cf_v2_dsoc+cf_v2_agex\")\n+  \"cf_ib2+cf_guess+cf_dsoc+cf_agex\")\n \n-(define_insn_reservation \"cf_v2_guess_3\" 1\n-  (and (and (eq_attr \"cpu\" \"cf_v2\")\n+(define_insn_reservation \"cf_guess_3\" 1\n+  (and (and (eq_attr \"cpu\" \"cfv1,cfv2,cfv3\")\n \t    (eq_attr \"guess\" \"yes\"))\n        (eq (symbol_ref \"get_attr_size (insn)\") (const_int 3)))\n-  \"cf_v2_ib3+cf_v2_guess+cf_v2_dsoc+cf_v2_agex\")\n+  \"cf_ib3+cf_guess+cf_dsoc+cf_agex\")"}, {"sha": "8948065668a2f80bd540e4f5444c9497d9d5e783", "filename": "gcc/config/m68k/m68k-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826fadba8160005725fa0d6964ab78824af378fb/gcc%2Fconfig%2Fm68k%2Fm68k-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826fadba8160005725fa0d6964ab78824af378fb/gcc%2Fconfig%2Fm68k%2Fm68k-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-protos.h?ref=826fadba8160005725fa0d6964ab78824af378fb", "patch": "@@ -67,6 +67,7 @@ extern const char *m68k_output_movem (rtx *, rtx, HOST_WIDE_INT, bool);\n \n #ifdef HAVE_ATTR_cpu\n extern enum attr_cpu m68k_sched_cpu;\n+extern enum attr_mac m68k_sched_mac;\n \n extern enum attr_opx_type m68k_sched_attr_opx_type (rtx, int);\n extern enum attr_opy_type m68k_sched_attr_opy_type (rtx, int);"}, {"sha": "0c38fbdfd19659ae9e5fe357d94896feb9b88878", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 167, "deletions": 37, "changes": 204, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826fadba8160005725fa0d6964ab78824af378fb/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826fadba8160005725fa0d6964ab78824af378fb/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=826fadba8160005725fa0d6964ab78824af378fb", "patch": "@@ -666,15 +666,29 @@ override_options (void)\n   SUBTARGET_OVERRIDE_OPTIONS;\n \n   /* Setup scheduling options.  */\n-  if (TUNE_CFV2)\n-    m68k_sched_cpu = CPU_CF_V2;\n+  if (TUNE_CFV1)\n+    m68k_sched_cpu = CPU_CFV1;\n+  else if (TUNE_CFV2)\n+    m68k_sched_cpu = CPU_CFV2;\n+  else if (TUNE_CFV3)\n+    m68k_sched_cpu = CPU_CFV3;\n   else\n     {\n       m68k_sched_cpu = CPU_UNKNOWN;\n       flag_schedule_insns = 0;\n       flag_schedule_insns_after_reload = 0;\n       flag_modulo_sched = 0;\n     }\n+\n+  if (m68k_sched_cpu != CPU_UNKNOWN)\n+    {\n+      if ((m68k_cpu_flags & (FL_CF_EMAC | FL_CF_EMAC_B)) != 0)\n+\tm68k_sched_mac = MAC_CF_EMAC;\n+      else if ((m68k_cpu_flags & FL_CF_MAC) != 0)\n+\tm68k_sched_mac = MAC_CF_MAC;\n+      else\n+\tm68k_sched_mac = MAC_NO;\n+    }\n }\n \n /* Generate a macro of the form __mPREFIX_cpu_NAME, where PREFIX is the\n@@ -4556,6 +4570,9 @@ m68k_return_in_memory (tree type, tree fntype ATTRIBUTE_UNUSED)\n /* CPU to schedule the program for.  */\n enum attr_cpu m68k_sched_cpu;\n \n+/* MAC to schedule the program for.  */\n+enum attr_mac m68k_sched_mac;\n+\n /* Operand type.  */\n enum attr_op_type\n   {\n@@ -5011,14 +5028,14 @@ m68k_sched_attr_type2 (rtx insn)\n {\n   switch (get_attr_type1 (insn))\n     {\n-    case TYPE1_ALU_REG1:\n-    case TYPE1_ALU_REGX:\n-      return TYPE2_ALU;\n-\n     case TYPE1_ALU_L:\n     case TYPE1_ALUQ_L:\n     case TYPE1_CMP_L:\n-      return TYPE2_ALU_L;\n+      return TYPE2_ALU;\n+\n+    case TYPE1_ALU_REG1:\n+    case TYPE1_ALU_REGX:\n+      return TYPE2_ALU_REG;\n \n     case TYPE1_BCC:\n       return TYPE2_BCC;\n@@ -5041,15 +5058,29 @@ m68k_sched_attr_type2 (rtx insn)\n     case TYPE1_MOVE:\n     case TYPE1_MOVEQ_L:\n     case TYPE1_TST:\n-      return TYPE2_MOVE;\n+      switch (m68k_sched_cpu)\n+\t{\n+\tcase CPU_CFV1:\n+\t  return TYPE2_OMOVE;\n \n-    case TYPE1_MOVE_L:\n-    case TYPE1_TST_L:\n-      return TYPE2_MOVE_L;\n+\tcase CPU_CFV2:\n+\tcase CPU_CFV3:\n+\t  return TYPE2_ALU;\n+\n+\tdefault:\n+\t  gcc_assert (get_attr_guess (insn) == GUESS_YES);\n+\t  return TYPE2_UNKNOWN;\n+\t}\n \n-    case TYPE1_MUL_W:\n     case TYPE1_MUL_L:\n-      return TYPE2_MUL;\n+      return TYPE2_MUL_L;\n+\n+    case TYPE1_MUL_W:\n+      return TYPE2_MUL_W;\n+\n+    case TYPE1_MOVE_L:\n+    case TYPE1_TST_L:\n+      return TYPE2_OMOVE;\n \n     case TYPE1_PEA:\n       return TYPE2_PEA;\n@@ -5095,14 +5126,39 @@ m68k_sched_adjust_cost (rtx insn, rtx link ATTRIBUTE_UNUSED, rtx def_insn,\n   return cost;\n }\n \n-/* Size of the instruction buffer in words.  */\n-static int sched_ib_size;\n+/* Maximal length of instruction for current CPU.\n+   E.g. it is 3 for any ColdFire core.  */\n+static int max_insn_size;\n+\n+/* Data to model instruction buffer of CPU.  */\n+struct _sched_ib\n+{\n+  /* Size of the instruction buffer in words.  */\n+  int size;\n+\n+  /* Number of filled words in the instruction buffer.  */\n+  int filled;\n+\n+  /* Additional information about instruction buffer for CPUs that have\n+     a buffer of instruction records, rather then a plain buffer\n+     of instruction words.  */\n+  struct _sched_ib_records\n+  {\n+    /* Size of buffer in records.  */\n+    int n_insns;\n \n-/* Number of filled words in the instruction buffer.  */\n-static int sched_ib_filled;\n+    /* Array to hold data on adjustements made to the size of the buffer.  */\n+    int *adjust;\n \n-/* An insn that reserves (marks empty) one word in the instruction buffer.  */\n-static rtx sched_ib_insn;\n+    /* Index of the above array.  */\n+    int adjust_index;\n+  } records;\n+\n+  /* An insn that reserves (marks empty) one word in the instruction buffer.  */\n+  rtx insn;\n+};\n+\n+static struct _sched_ib sched_ib;\n \n /* ID of memory unit.  */\n static int sched_mem_unit_code;\n@@ -5121,19 +5177,58 @@ m68k_sched_variable_issue (FILE *sched_dump ATTRIBUTE_UNUSED,\n \n   if (recog_memoized (insn) >= 0)\n     {\n-      insn_size = get_attr_size (insn);\n+      switch (m68k_sched_cpu)\n+\t{\n+\tcase CPU_CFV1:\n+\tcase CPU_CFV2:\n+\t  insn_size = get_attr_size (insn);\n+\t  break;\n+\n+\tcase CPU_CFV3:\n+\t  insn_size = get_attr_size (insn);\n+\t  \n+\t  /* ColdFire V3 and V4 cores have instruction buffers that can\n+\t     accumulate up to 8 instructions regardless of instructions'\n+\t     sizes.  So we should take care not to \"prefetch\" 24 one-word\n+\t     or 12 two-words instructions.\n+\t     To model this behavior we temporarily decrease size of the\n+\t     buffer by (max_insn_size - insn_size) for next 7 instructions.  */\n+\t  {\n+\t    int adjust;\n+\n+\t    adjust = max_insn_size - insn_size;\n+\t    sched_ib.size -= adjust;\n+\n+\t    if (sched_ib.filled > sched_ib.size)\n+\t      sched_ib.filled = sched_ib.size;\n+\n+\t    sched_ib.records.adjust[sched_ib.records.adjust_index] = adjust;\n+\t  }\n+\n+\t  ++sched_ib.records.adjust_index;\n+\t  if (sched_ib.records.adjust_index == sched_ib.records.n_insns)\n+\t    sched_ib.records.adjust_index = 0;\n+\n+\t  /* Undo adjustement we did 7 instructions ago.  */\n+\t  sched_ib.size\n+\t    += sched_ib.records.adjust[sched_ib.records.adjust_index];\n+\n+\t  break;\n \n-      gcc_assert (insn_size <= sched_ib_filled);\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t}\n \n+      gcc_assert (insn_size <= sched_ib.filled);\n       --can_issue_more;\n     }\n   else if (GET_CODE (PATTERN (insn)) == ASM_INPUT\n \t   || asm_noperands (PATTERN (insn)) >= 0)\n-    insn_size = sched_ib_filled;\n+    insn_size = sched_ib.filled;\n   else\n     insn_size = 0;\n \n-  sched_ib_filled -= insn_size;\n+  sched_ib.filled -= insn_size;\n \n   return can_issue_more;\n }\n@@ -5357,7 +5452,7 @@ m68k_sched_md_init_global (FILE *sched_dump ATTRIBUTE_UNUSED,\n       m68k_sched_dump (sched_dump_split_class, \"m68k_sched_split\",\n \t\t       sched_dump);\n \n-      sched_dump_dfa_guess_unit_code = get_cpu_unit_code (\"cf_v2_guess\");\n+      sched_dump_dfa_guess_unit_code = get_cpu_unit_code (\"cf_guess\");\n       sched_dump_dfa_state = alloca (state_size ());\n \n       m68k_sched_dump (sched_dump_dfa_class, \"m68k_sched_dfa\",\n@@ -5370,21 +5465,32 @@ m68k_sched_md_init_global (FILE *sched_dump ATTRIBUTE_UNUSED,\n   /* Setup target cpu.  */\n   switch (m68k_sched_cpu)\n     {\n-    case CPU_CF_V2:\n-      sched_ib_size = 6;\n-      sched_mem_unit_code = get_cpu_unit_code (\"cf_v2_mem\");\n+    case CPU_CFV1:\n+    case CPU_CFV2:\n+      max_insn_size = 3;\n+      sched_ib.records.n_insns = 0;\n+      sched_ib.records.adjust = NULL;\n+      break;\n+\n+    case CPU_CFV3:\n+      max_insn_size = 3;\n+      sched_ib.records.n_insns = 8;\n+      sched_ib.records.adjust = xmalloc (sched_ib.records.n_insns\n+\t\t\t\t\t * sizeof (*sched_ib.records.adjust));\n       break;\n \n     default:\n       gcc_unreachable ();\n     }\n \n+  sched_mem_unit_code = get_cpu_unit_code (\"cf_mem1\");\n+\n   sched_adjust_cost_state = xmalloc (state_size ());\n   state_reset (sched_adjust_cost_state);\n \n   start_sequence ();\n   emit_insn (gen_ib ());\n-  sched_ib_insn = get_insns ();\n+  sched_ib.insn = get_insns ();\n   end_sequence ();\n }\n \n@@ -5393,13 +5499,17 @@ static void\n m68k_sched_md_finish_global (FILE *dump ATTRIBUTE_UNUSED,\n \t\t\t     int verbose ATTRIBUTE_UNUSED)\n {\n-  sched_ib_insn = NULL;\n+  sched_ib.insn = NULL;\n \n   free (sched_adjust_cost_state);\n   sched_adjust_cost_state = NULL;\n \n   sched_mem_unit_code = 0;\n-  sched_ib_size = 0;\n+\n+  free (sched_ib.records.adjust);\n+  sched_ib.records.adjust = NULL;\n+  sched_ib.records.n_insns = 0;\n+  max_insn_size = 0;\n \n   free (sched_branch_type);\n   sched_branch_type = NULL;\n@@ -5413,9 +5523,28 @@ m68k_sched_md_init (FILE *sched_dump ATTRIBUTE_UNUSED,\n \t\t    int sched_verbose ATTRIBUTE_UNUSED,\n \t\t    int n_insns ATTRIBUTE_UNUSED)\n {\n+  switch (m68k_sched_cpu)\n+    {\n+    case CPU_CFV1:\n+    case CPU_CFV2:\n+      sched_ib.size = 6;\n+      break;\n+\n+    case CPU_CFV3:\n+      sched_ib.size = sched_ib.records.n_insns * max_insn_size;\n+\n+      memset (sched_ib.records.adjust, 0,\n+\t      sched_ib.records.n_insns * sizeof (*sched_ib.records.adjust));\n+      sched_ib.records.adjust_index = 0;\n+      break;\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+\n   /* haifa-sched.c: schedule_block () calls advance_cycle () just before\n      the first cycle.  Workaround that.  */\n-  sched_ib_filled = -2;\n+  sched_ib.filled = -2;\n }\n \n /* Implementation of targetm.sched.dfa_pre_advance_cycle () hook.\n@@ -5426,10 +5555,10 @@ m68k_sched_dfa_pre_advance_cycle (void)\n {\n   if (!cpu_unit_reservation_p (curr_state, sched_mem_unit_code))\n     {\n-      sched_ib_filled += 2;\n+      sched_ib.filled += 2;\n \n-      if (sched_ib_filled > sched_ib_size)\n-\tsched_ib_filled = sched_ib_size;\n+      if (sched_ib.filled > sched_ib.size)\n+\tsched_ib.filled = sched_ib.size;\n     }\n }\n \n@@ -5442,13 +5571,14 @@ static void\n m68k_sched_dfa_post_advance_cycle (void)\n {\n   int i;\n-  int n;\n \n   /* Setup number of prefetched instruction words in the instruction\n      buffer.  */\n-  for (i = sched_ib_filled, n = sched_ib_size; i < n; ++i)\n+  i = max_insn_size - sched_ib.filled;\n+\n+  while (--i >= 0)\n     {\n-      if (state_transition (curr_state, sched_ib_insn) >= 0)\n+      if (state_transition (curr_state, sched_ib.insn) >= 0)\n \tgcc_unreachable ();\n     }\n }"}, {"sha": "32b5c243999fad46cef3a5d5476a147f403ef5d3", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826fadba8160005725fa0d6964ab78824af378fb/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826fadba8160005725fa0d6964ab78824af378fb/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=826fadba8160005725fa0d6964ab78824af378fb", "patch": "@@ -266,6 +266,7 @@ along with GCC; see the file COPYING3.  If not see\n #define TUNE_CPU32\t(m68k_tune == ucpu32)\n #define TUNE_CFV1       (m68k_tune == ucfv1)\n #define TUNE_CFV2\t(m68k_tune == ucfv2)\n+#define TUNE_CFV3       (m68k_tune == ucfv3)\n \n #define OVERRIDE_OPTIONS   override_options()\n "}, {"sha": "abe363ee285891c2c3f511bc356f14bfd7e4ee2a", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826fadba8160005725fa0d6964ab78824af378fb/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826fadba8160005725fa0d6964ab78824af378fb/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=826fadba8160005725fa0d6964ab78824af378fb", "patch": "@@ -144,7 +144,12 @@\n ;; ::::::::::::::::::::\n \n ;; Processor type.\n-(define_attr \"cpu\" \"cf_v2, unknown\" (const (symbol_ref \"m68k_sched_cpu\")))\n+(define_attr \"cpu\" \"cfv1, cfv2, cfv3, unknown\"\n+  (const (symbol_ref \"m68k_sched_cpu\")))\n+\n+;; MAC type.\n+(define_attr \"mac\" \"no, cf_mac, cf_emac\"\n+  (const (symbol_ref \"m68k_sched_mac\")))\n \n ;; Instruction type.\n ;; Basically, an asm pattern."}]}