{"sha": "803835ded7f4ed4bbfcf0bbb427c7cf1f23203ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAzODM1ZGVkN2Y0ZWQ0YmJmY2YwYmJiNDI3YzdjZjFmMjMyMDNhYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-07-24T12:39:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-07-24T12:39:08Z"}, "message": "genmatch.c (struct dt_node): Add statistic fields.\n\n2015-07-24  Richard Biener  <rguenther@suse.de>\n\n\t* genmatch.c (struct dt_node): Add statistic fields.\n\t(dt_node::analyze): New method.\n\t(decision_tree::gen_gimple): Call analyze on the root node\n\tand print statistics to stderr.\n\t(decision_tree::gen_generic): Likewise.\n\nFrom-SVN: r226154", "tree": {"sha": "ff65bc2fd54f85c55f0e4f564fb9e6a7f1c9d59c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff65bc2fd54f85c55f0e4f564fb9e6a7f1c9d59c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/803835ded7f4ed4bbfcf0bbb427c7cf1f23203ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/803835ded7f4ed4bbfcf0bbb427c7cf1f23203ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/803835ded7f4ed4bbfcf0bbb427c7cf1f23203ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/803835ded7f4ed4bbfcf0bbb427c7cf1f23203ac/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21aacde45801e932d3de8f7547fda44226ae9764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21aacde45801e932d3de8f7547fda44226ae9764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21aacde45801e932d3de8f7547fda44226ae9764"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "0e18f35fe6600632ad1d2e4b878c3ceebadbd4e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/803835ded7f4ed4bbfcf0bbb427c7cf1f23203ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/803835ded7f4ed4bbfcf0bbb427c7cf1f23203ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=803835ded7f4ed4bbfcf0bbb427c7cf1f23203ac", "patch": "@@ -1,3 +1,11 @@\n+2015-07-24  Richard Biener  <rguenther@suse.de>\n+\n+\t* genmatch.c (struct dt_node): Add statistic fields.\n+\t(dt_node::analyze): New method.\n+\t(decision_tree::gen_gimple): Call analyze on the root node\n+\tand print statistics to stderr.\n+\t(decision_tree::gen_generic): Likewise.\n+\n 2015-07-24  Richard Biener  <rguenther@suse.de>\n \n \t* fold-const.c (fold_binary_loc): Move simplifying of comparisons"}, {"sha": "ce90a74a195e50e779fc26e98bed76b40c091d25", "filename": "gcc/genmatch.c", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/803835ded7f4ed4bbfcf0bbb427c7cf1f23203ac/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/803835ded7f4ed4bbfcf0bbb427c7cf1f23203ac/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=803835ded7f4ed4bbfcf0bbb427c7cf1f23203ac", "patch": "@@ -1212,6 +1212,11 @@ struct dt_node\n   unsigned level;\n   vec<dt_node *> kids;\n \n+  /* Statistics.  */\n+  unsigned num_leafs;\n+  unsigned total_size;\n+  unsigned max_level;\n+\n   dt_node (enum dt_type type_): type (type_), level (0), kids (vNULL) {}\n \n   dt_node *append_node (dt_node *);\n@@ -1226,6 +1231,8 @@ struct dt_node\n   void gen_kids_1 (FILE *, int, bool,\n \t\t   vec<dt_operand *>, vec<dt_operand *>, vec<dt_operand *>,\n \t\t   vec<dt_operand *>, vec<dt_operand *>, vec<dt_node *>);\n+\n+  void analyze ();\n };\n \n /* Generic decision tree node used for DT_OPERAND and DT_MATCH.  */\n@@ -1428,6 +1435,30 @@ dt_node::append_simplify (simplify *s, unsigned pattern_no,\n   return append_node (n);\n }\n \n+/* Analyze the node and its children.  */\n+\n+void\n+dt_node::analyze ()\n+{\n+  num_leafs = 0;\n+  total_size = 1;\n+  max_level = level;\n+\n+  if (type == DT_SIMPLIFY)\n+    {\n+      num_leafs = 1;\n+      return;\n+    }\n+\n+  for (unsigned i = 0; i < kids.length (); ++i)\n+    {\n+      kids[i]->analyze ();\n+      num_leafs += kids[i]->num_leafs;\n+      total_size += kids[i]->total_size;\n+      max_level = MAX (max_level, kids[i]->max_level);\n+    }\n+}\n+\n /* Insert O into the decision tree and return the decision tree node found\n    or created.  */\n \n@@ -2912,6 +2943,12 @@ dt_simplify::gen (FILE *f, int indent, bool gimple)\n void\n decision_tree::gen_gimple (FILE *f)\n {\n+  root->analyze ();\n+\n+  fprintf (stderr, \"GIMPLE decision tree has %u leafs, maximum depth %u and \"\n+\t   \"a total number of %u nodes\\n\", root->num_leafs, root->max_level,\n+\t   root->total_size);\n+\n   for (unsigned n = 1; n <= 3; ++n)\n     {\n       fprintf (f, \"\\nstatic bool\\n\"\n@@ -2958,6 +2995,12 @@ decision_tree::gen_gimple (FILE *f)\n void\n decision_tree::gen_generic (FILE *f)\n {\n+  root->analyze ();\n+\n+  fprintf (stderr, \"GENERIC decision tree has %u leafs, maximum depth %u and \"\n+\t   \"a total number of %u nodes\\n\", root->num_leafs, root->max_level,\n+\t   root->total_size);\n+\n   for (unsigned n = 1; n <= 3; ++n)\n     {\n       fprintf (f, \"\\ntree\\n\""}]}