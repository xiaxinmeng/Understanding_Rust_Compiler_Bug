{"sha": "d9a5f0cc4f16f711ef503be185988b4eb1d230e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlhNWYwY2M0ZjE2ZjcxMWVmNTAzYmUxODU5ODhiNGViMWQyMzBlNg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-01-13T00:30:57Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-01-13T00:30:57Z"}, "message": "re PR target/64479 ([SH] wrong optimization delayed-branch)\n\ngcc/\n\tPR target/64479\n\t* rtlanal.c (set_reg_p): Handle SEQUENCE constructs.\n\nFrom-SVN: r219506", "tree": {"sha": "e94fe6500501ca7a4703a2d5d695e65e75a4cc89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e94fe6500501ca7a4703a2d5d695e65e75a4cc89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9a5f0cc4f16f711ef503be185988b4eb1d230e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a5f0cc4f16f711ef503be185988b4eb1d230e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9a5f0cc4f16f711ef503be185988b4eb1d230e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a5f0cc4f16f711ef503be185988b4eb1d230e6/comments", "author": null, "committer": null, "parents": [{"sha": "ca46eab70b12b0c4a81e6ed0a0fa20d54e943387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca46eab70b12b0c4a81e6ed0a0fa20d54e943387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca46eab70b12b0c4a81e6ed0a0fa20d54e943387"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "8b86f54573de622cee096525915f33e3f352fe87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a5f0cc4f16f711ef503be185988b4eb1d230e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a5f0cc4f16f711ef503be185988b4eb1d230e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9a5f0cc4f16f711ef503be185988b4eb1d230e6", "patch": "@@ -1,3 +1,8 @@\n+2015-01-13  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/64479\n+\t* rtlanal.c (set_reg_p): Handle SEQUENCE constructs.\n+\n 2015-01-12  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (sh_atomic_assign_expand_fenv): New function."}, {"sha": "4aadac22431ad419d82b15d9d10064ff2d97f690", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a5f0cc4f16f711ef503be185988b4eb1d230e6/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a5f0cc4f16f711ef503be185988b4eb1d230e6/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=d9a5f0cc4f16f711ef503be185988b4eb1d230e6", "patch": "@@ -1000,6 +1000,17 @@ reg_set_between_p (const_rtx reg, const rtx_insn *from_insn,\n int\n reg_set_p (const_rtx reg, const_rtx insn)\n {\n+  /* After delay slot handling, call and branch insns might be in a\n+     sequence.  Check all the elements there.  */\n+  if (INSN_P (insn) && GET_CODE (PATTERN (insn)) == SEQUENCE)\n+    {\n+      for (int i = 0; i < XVECLEN (PATTERN (insn), 0); ++i)\n+\tif (reg_set_p (reg, XVECEXP (PATTERN (insn), 0, i)))\n+\t  return true;\n+\n+      return false;\n+    }\n+\n   /* We can be passed an insn or part of one.  If we are passed an insn,\n      check if a side-effect of the insn clobbers REG.  */\n   if (INSN_P (insn)\n@@ -1011,7 +1022,7 @@ reg_set_p (const_rtx reg, const_rtx insn)\n \t\t\t\t\t       GET_MODE (reg), REGNO (reg)))\n \t\t  || MEM_P (reg)\n \t\t  || find_reg_fusage (insn, CLOBBER, reg)))))\n-    return 1;\n+    return true;\n \n   return set_of (reg, insn) != NULL_RTX;\n }"}]}