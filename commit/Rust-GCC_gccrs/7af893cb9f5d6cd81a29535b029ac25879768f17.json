{"sha": "7af893cb9f5d6cd81a29535b029ac25879768f17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FmODkzY2I5ZjVkNmNkODFhMjk1MzViMDI5YWMyNTg3OTc2OGYxNw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-14T13:05:37Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-14T13:05:37Z"}, "message": "tree-ssa-live.c (tpa_init, [...]): Use VEC instead of VARRAY.\n\n\t* tree-ssa-live.c (tpa_init, tpa_delete, tpa_compact,\n\troot_var_init, type_var_init): Use VEC instead of VARRAY.\n\t* tree-ssa-live.h (tree_partition_associator_d): Change the\n\ttype of trees to VEC(tree,heap)*.\n\t(tpa_tree): Use VEC instead of VARRAY.\n\nFrom-SVN: r99695", "tree": {"sha": "5a4b25091b14d0f08d5820d647e43a951ffd12e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a4b25091b14d0f08d5820d647e43a951ffd12e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7af893cb9f5d6cd81a29535b029ac25879768f17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7af893cb9f5d6cd81a29535b029ac25879768f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7af893cb9f5d6cd81a29535b029ac25879768f17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7af893cb9f5d6cd81a29535b029ac25879768f17/comments", "author": null, "committer": null, "parents": [{"sha": "03b0db0a4e53f8ebbfa884f7791f7afb95e879f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03b0db0a4e53f8ebbfa884f7791f7afb95e879f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03b0db0a4e53f8ebbfa884f7791f7afb95e879f3"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "af16478389214d464e361e497b40e1b681b6fb62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7af893cb9f5d6cd81a29535b029ac25879768f17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7af893cb9f5d6cd81a29535b029ac25879768f17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7af893cb9f5d6cd81a29535b029ac25879768f17", "patch": "@@ -1,3 +1,11 @@\n+2005-05-14  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-ssa-live.c (tpa_init, tpa_delete, tpa_compact,\n+\troot_var_init, type_var_init): Use VEC instead of VARRAY.\n+\t* tree-ssa-live.h (tree_partition_associator_d): Change the\n+\ttype of trees to VEC(tree,heap)*.\n+\t(tpa_tree): Use VEC instead of VARRAY.\n+\n 2005-05-14  Richard Guenther  <rguenth@gcc.gnu.org>\n \n \t* fold-const.c (div_if_zero_remainder): New function."}, {"sha": "f40df907d6adb5afc258d5c97e4911edf764daae", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7af893cb9f5d6cd81a29535b029ac25879768f17/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7af893cb9f5d6cd81a29535b029ac25879768f17/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=7af893cb9f5d6cd81a29535b029ac25879768f17", "patch": "@@ -795,7 +795,7 @@ tpa_init (var_map map)\n   memset (tpa->partition_to_tree_map, TPA_NONE, num_partitions * sizeof (int));\n \n   x = MAX (40, (num_partitions / 20));\n-  VARRAY_TREE_INIT (tpa->trees, x, \"trees\");\n+  tpa->trees = VEC_alloc (tree, heap, x);\n   VARRAY_INT_INIT (tpa->first_partition, x, \"first_partition\");\n \n   return tpa;\n@@ -837,6 +837,7 @@ tpa_delete (tpa_p tpa)\n   if (!tpa)\n     return;\n \n+  VEC_free (tree, heap, tpa->trees);\n   free (tpa->partition_to_tree_map);\n   free (tpa->next_partition);\n   free (tpa);\n@@ -870,19 +871,20 @@ tpa_compact (tpa_p tpa)\n \t of the tree list.  */\n       if (tpa_next_partition (tpa, first) == NO_PARTITION)\n         {\n-\t  swap_t = VARRAY_TREE (tpa->trees, last);\n+\t  swap_t = VEC_index (tree, tpa->trees, last);\n \t  swap_i = VARRAY_INT (tpa->first_partition, last);\n \n \t  /* Update the last entry. Since it is known to only have one\n \t     partition, there is nothing else to update.  */\n-\t  VARRAY_TREE (tpa->trees, last) = VARRAY_TREE (tpa->trees, x);\n+\t  VEC_replace (tree, tpa->trees, last,\n+\t\t       VEC_index (tree, tpa->trees, x));\n \t  VARRAY_INT (tpa->first_partition, last) \n \t    = VARRAY_INT (tpa->first_partition, x);\n \t  tpa->partition_to_tree_map[tpa_first_partition (tpa, last)] = last;\n \n \t  /* Since this list is known to have more than one partition, update\n \t     the list owner entries.  */\n-\t  VARRAY_TREE (tpa->trees, x) = swap_t;\n+\t  VEC_replace (tree, tpa->trees, x, swap_t);\n \t  VARRAY_INT (tpa->first_partition, x) = swap_i;\n \t  for (y = tpa_first_partition (tpa, x); \n \t       y != NO_PARTITION; \n@@ -961,7 +963,7 @@ root_var_init (var_map map)\n         {\n \t  ann->root_var_processed = 1;\n \t  VAR_ANN_ROOT_INDEX (ann) = rv->num_trees++;\n-\t  VARRAY_PUSH_TREE (rv->trees, t);\n+\t  VEC_safe_push (tree, heap, rv->trees, t);\n \t  VARRAY_PUSH_INT (rv->first_partition, p);\n \t}\n       rv->partition_to_tree_map[p] = VAR_ANN_ROOT_INDEX (ann);\n@@ -970,7 +972,7 @@ root_var_init (var_map map)\n   /* Reset the out_of_ssa_tag flag on each variable for later use.  */\n   for (x = 0; x < rv->num_trees; x++)\n     {\n-      t = VARRAY_TREE (rv->trees, x);\n+      t = VEC_index (tree, rv->trees, x);\n       var_ann (t)->root_var_processed = 0;\n     }\n \n@@ -1026,12 +1028,12 @@ type_var_init (var_map map)\n \n       /* Find the list for this type.  */\n       for (y = 0; y < tv->num_trees; y++)\n-        if (t == VARRAY_TREE (tv->trees, y))\n+        if (t == VEC_index (tree, tv->trees, y))\n \t  break;\n       if (y == tv->num_trees)\n         {\n \t  tv->num_trees++;\n-\t  VARRAY_PUSH_TREE (tv->trees, t);\n+\t  VEC_safe_push (tree, heap, tv->trees, t);\n \t  VARRAY_PUSH_INT (tv->first_partition, p);\n \t}\n       else"}, {"sha": "050d0835519d9217bb6250fbf16ea5b4f21aea29", "filename": "gcc/tree-ssa-live.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7af893cb9f5d6cd81a29535b029ac25879768f17/gcc%2Ftree-ssa-live.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7af893cb9f5d6cd81a29535b029ac25879768f17/gcc%2Ftree-ssa-live.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.h?ref=7af893cb9f5d6cd81a29535b029ac25879768f17", "patch": "@@ -337,7 +337,7 @@ make_live_on_entry (tree_live_info_p live, basic_block bb , int p)\n \n typedef struct tree_partition_associator_d\n {\n-  varray_type trees;\n+  VEC(tree,heap) *trees;\n   varray_type first_partition;\n   int *next_partition;\n   int *partition_to_tree_map;\n@@ -375,7 +375,7 @@ tpa_num_trees (tpa_p tpa)\n static inline tree\n tpa_tree (tpa_p tpa, int i)\n {\n-  return VARRAY_TREE (tpa->trees, i);\n+  return VEC_index (tree, tpa->trees, i);\n }\n \n "}]}