{"sha": "22b4a3b0b936194adcfec385c11f6c7aba2d3140", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJiNGEzYjBiOTM2MTk0YWRjZmVjMzg1YzExZjZjN2FiYTJkMzE0MA==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "1999-05-21T18:23:29Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "1999-05-21T18:23:29Z"}, "message": "rs6000.c (output_mi_thunk): Enable full support again.\n\nFri May 21 21:19:02 1999  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n        * rs6000.c (output_mi_thunk): Enable full support again.\n\nFrom-SVN: r27087", "tree": {"sha": "fdb692d5cfdb6030f32e15b74f1692268727cb02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdb692d5cfdb6030f32e15b74f1692268727cb02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22b4a3b0b936194adcfec385c11f6c7aba2d3140", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b4a3b0b936194adcfec385c11f6c7aba2d3140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22b4a3b0b936194adcfec385c11f6c7aba2d3140", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b4a3b0b936194adcfec385c11f6c7aba2d3140/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "adecb3f41f0bb582c936e2be5fda659a611067ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adecb3f41f0bb582c936e2be5fda659a611067ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adecb3f41f0bb582c936e2be5fda659a611067ca"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "091920718e0823e410d29d6b3a49b0c471dc880a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b4a3b0b936194adcfec385c11f6c7aba2d3140/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b4a3b0b936194adcfec385c11f6c7aba2d3140/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22b4a3b0b936194adcfec385c11f6c7aba2d3140", "patch": "@@ -1,3 +1,7 @@\n+Fri May 21 21:19:02 1999  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* rs6000.c (output_mi_thunk): Enable full support again.\n+\n Fri May 21 20:09:52 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* sh.h (BRANCH_COST): Define."}, {"sha": "26f16f155dceac88b31b651cc8fff5dd5a8b1972", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b4a3b0b936194adcfec385c11f6c7aba2d3140/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b4a3b0b936194adcfec385c11f6c7aba2d3140/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=22b4a3b0b936194adcfec385c11f6c7aba2d3140", "patch": "@@ -4595,20 +4595,18 @@ output_mi_thunk (file, thunk_fndecl, delta, function)\n   const char *this_reg = reg_names[ aggregate_value_p (TREE_TYPE (TREE_TYPE (function))) ? 4 : 3 ];\n   const char *prefix;\n   char *fname;\n-#if 0\n   const char *r0\t = reg_names[0];\n   const char *sp\t = reg_names[1];\n   const char *toc\t = reg_names[2];\n   const char *schain\t = reg_names[11];\n   const char *r12\t = reg_names[12];\n   char buf[512];\n   static int labelno = 0;\n-#endif\n \n   /* Small constants that can be done by one add instruction */\n   if (delta >= -32768 && delta <= 32767)\n     {\n-      if (!TARGET_NEW_MNEMONICS)\n+      if (! TARGET_NEW_MNEMONICS)\n \tfprintf (file, \"\\tcal %s,%d(%s)\\n\", this_reg, delta, this_reg);\n       else\n \tfprintf (file, \"\\taddi %s,%s,%d\\n\", this_reg, this_reg, delta);\n@@ -4622,7 +4620,7 @@ output_mi_thunk (file, thunk_fndecl, delta, function)\n   /* 32-bit constants that can be done by an add and addis instruction.  */\n   else if (TARGET_32BIT || num_insns_constant_wide (delta) == 1)\n     {\n-      /* Break into two pieces, propigating the sign bit from the low word to\n+      /* Break into two pieces, propagating the sign bit from the low word to\n \t the upper word.  */\n       int delta_high = delta >> 16;\n       int delta_low  = delta & 0xffff;\n@@ -4635,7 +4633,7 @@ output_mi_thunk (file, thunk_fndecl, delta, function)\n       asm_fprintf (file, \"\\t{cau|addis} %s,%s,%d\\n\", this_reg, this_reg,\n \t\t   delta_high);\n \n-      if (!TARGET_NEW_MNEMONICS)\n+      if (! TARGET_NEW_MNEMONICS)\n \tfprintf (file, \"\\tcal %s,%d(%s)\\n\", this_reg, delta_low, this_reg);\n       else\n \tfprintf (file, \"\\taddi %s,%s,%d\\n\", this_reg, this_reg, delta_low);\n@@ -4670,21 +4668,15 @@ output_mi_thunk (file, thunk_fndecl, delta, function)\n      Otherwise, load up its address and jump to it.  */\n \n   fname = XSTR (XEXP (DECL_RTL (function), 0), 0);\n-#if 1\n-  /* For now, just emit a branch always, until we can figure out better when we\n-     need to load the address into the count register and emit the slower bctr\n-     instruction.  */\n-  fprintf (file, \"\\tb %s\", prefix);\n-  assemble_name (file, fname);\n-  fprintf (file, \"\\n\");\n \n-#else\n   if (current_file_function_operand (XEXP (DECL_RTL (function), 0))\n-      && !lookup_attribute (\"longcall\", TYPE_ATTRIBUTES (TREE_TYPE (function))))\n+      && ! lookup_attribute (\"longcall\",\n+\t\t\t     TYPE_ATTRIBUTES (TREE_TYPE (function))))\n     {\n       fprintf (file, \"\\tb %s\", prefix);\n       assemble_name (file, fname);\n-      fprintf (file, \"\\n\");\n+      if (DEFAULT_ABI == ABI_V4 && flag_pic) fputs (\"@local\", file);\n+      fputs (\"\\n\", file);\n     }\n \n   else\n@@ -4729,8 +4721,14 @@ output_mi_thunk (file, thunk_fndecl, delta, function)\n \t  asm_fprintf (file, \"\\tbctr\\n\");\n \t  break;\n \n-\t  /* Don't use r11, that contains the static chain, just use r0/r12.  */\n \tcase ABI_V4:\n+\t  fprintf (file, \"\\tb %s\", prefix);\n+\t  assemble_name (file, fname);\n+\t  if (flag_pic) fputs (\"@plt\", file);\n+\t  fputs (\"\\n\", file);\n+\t  break;\n+\t      \n+\t  /* Don't use r11, that contains the static chain, just use r0/r12.  */\n \tcase ABI_AIX_NODESC:\n \tcase ABI_SOLARIS:\n \t  if (flag_pic == 1)\n@@ -4785,7 +4783,6 @@ output_mi_thunk (file, thunk_fndecl, delta, function)\n \t  break;\n \t}\n     }\n-#endif\t/* #if 0 out code to use bctr for far away jumps */\n }\n \n \f"}]}