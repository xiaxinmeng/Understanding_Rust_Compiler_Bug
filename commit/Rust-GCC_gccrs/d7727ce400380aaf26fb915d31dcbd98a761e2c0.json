{"sha": "d7727ce400380aaf26fb915d31dcbd98a761e2c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc3MjdjZTQwMDM4MGFhZjI2ZmI5MTVkMzFkY2JkOThhNzYxZTJjMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-22T18:00:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-22T18:00:41Z"}, "message": "re PR target/83488 (ICE on a CET test-case)\n\n\tPR target/83488\n\t* config/i386/avx512vnniintrin.h: Don't check for __AVX512F__ nor\n\tenable avx512f explicitly in #pragma GCC target.\n\t* config/i386/i386-builtin.def (__builtin_ia32_vpdpbusd_v8si,\n\t__builtin_ia32_vpdpbusd_v8si_mask, __builtin_ia32_vpdpbusd_v8si_maskz,\n\t__builtin_ia32_vpdpbusd_v4si, __builtin_ia32_vpdpbusd_v4si_mask,\n\t__builtin_ia32_vpdpbusd_v4si_maskz, __builtin_ia32_vpdpbusds_v8si,\n\t__builtin_ia32_vpdpbusds_v8si_mask,\n\t__builtin_ia32_vpdpbusds_v8si_maskz, __builtin_ia32_vpdpbusds_v4si,\n\t__builtin_ia32_vpdpbusds_v4si_mask,\n\t__builtin_ia32_vpdpbusds_v4si_maskz, __builtin_ia32_vpdpwssd_v8si,\n\t__builtin_ia32_vpdpwssd_v8si_mask, __builtin_ia32_vpdpwssd_v8si_maskz,\n\t__builtin_ia32_vpdpwssd_v4si, __builtin_ia32_vpdpwssd_v4si_mask,\n\t__builtin_ia32_vpdpwssd_v4si_maskz, __builtin_ia32_vpdpwssds_v8si,\n\t__builtin_ia32_vpdpwssds_v8si_mask,\n\t__builtin_ia32_vpdpwssds_v8si_maskz, __builtin_ia32_vpdpwssds_v4si,\n\t__builtin_ia32_vpdpwssds_v4si_mask,\n\t__builtin_ia32_vpdpwssds_v4si_maskz): Use\n\tOPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL instead of\n\tjust OPTION_MASK_ISA_AVX512VNNI.\n\n\t* gcc.target/i386/pr83488-2.c: New test.\n\t* gcc.target/i386/pr83488-3.c: New test.\n\nFrom-SVN: r255979", "tree": {"sha": "58fbdf12cae2135f019e3d6220cd3e25ec9041fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58fbdf12cae2135f019e3d6220cd3e25ec9041fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7727ce400380aaf26fb915d31dcbd98a761e2c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7727ce400380aaf26fb915d31dcbd98a761e2c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7727ce400380aaf26fb915d31dcbd98a761e2c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7727ce400380aaf26fb915d31dcbd98a761e2c0/comments", "author": null, "committer": null, "parents": [{"sha": "a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03"}], "stats": {"total": 107, "additions": 79, "deletions": 28}, "files": [{"sha": "a75db0731afc4264034c7fe4f691bc0a28d354ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7727ce400380aaf26fb915d31dcbd98a761e2c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7727ce400380aaf26fb915d31dcbd98a761e2c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7727ce400380aaf26fb915d31dcbd98a761e2c0", "patch": "@@ -1,11 +1,34 @@\n+2017-12-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/83488\n+\t* config/i386/avx512vnniintrin.h: Don't check for __AVX512F__ nor\n+\tenable avx512f explicitly in #pragma GCC target.\n+\t* config/i386/i386-builtin.def (__builtin_ia32_vpdpbusd_v8si,\n+\t__builtin_ia32_vpdpbusd_v8si_mask, __builtin_ia32_vpdpbusd_v8si_maskz,\n+\t__builtin_ia32_vpdpbusd_v4si, __builtin_ia32_vpdpbusd_v4si_mask,\n+\t__builtin_ia32_vpdpbusd_v4si_maskz, __builtin_ia32_vpdpbusds_v8si,\n+\t__builtin_ia32_vpdpbusds_v8si_mask,\n+\t__builtin_ia32_vpdpbusds_v8si_maskz, __builtin_ia32_vpdpbusds_v4si,\n+\t__builtin_ia32_vpdpbusds_v4si_mask,\n+\t__builtin_ia32_vpdpbusds_v4si_maskz, __builtin_ia32_vpdpwssd_v8si,\n+\t__builtin_ia32_vpdpwssd_v8si_mask, __builtin_ia32_vpdpwssd_v8si_maskz,\n+\t__builtin_ia32_vpdpwssd_v4si, __builtin_ia32_vpdpwssd_v4si_mask,\n+\t__builtin_ia32_vpdpwssd_v4si_maskz, __builtin_ia32_vpdpwssds_v8si,\n+\t__builtin_ia32_vpdpwssds_v8si_mask,\n+\t__builtin_ia32_vpdpwssds_v8si_maskz, __builtin_ia32_vpdpwssds_v4si,\n+\t__builtin_ia32_vpdpwssds_v4si_mask,\n+\t__builtin_ia32_vpdpwssds_v4si_maskz): Use\n+\tOPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL instead of\n+\tjust OPTION_MASK_ISA_AVX512VNNI.\n+\n 2017-12-22  Martin Jambor  <mjambor@suse.cz>\n \n \tPR lto/82027\n \t* lto-cgraph.c (output_cgraph_opt_summary_p): Also check former\n \tclones.\n \n 2017-12-22  Julia Koval  <julia.koval@intel.com>\n-\tSebastian Peryt <sebastian.peryt@intel.com>\n+\t    Sebastian Peryt  <sebastian.peryt@intel.com>\n \n \t* common/config/i386/i386-common.c (OPTION_MASK_ISA_AVX512BITALG_SET,\n \tOPTION_MASK_ISA_AVX512BITALG_UNSET): New."}, {"sha": "d997bceaa8d8687c0f39e76d23d8345d3eb15fcb", "filename": "gcc/config/i386/avx512vnniintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7727ce400380aaf26fb915d31dcbd98a761e2c0/gcc%2Fconfig%2Fi386%2Favx512vnniintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7727ce400380aaf26fb915d31dcbd98a761e2c0/gcc%2Fconfig%2Fi386%2Favx512vnniintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512vnniintrin.h?ref=d7727ce400380aaf26fb915d31dcbd98a761e2c0", "patch": "@@ -28,9 +28,9 @@\n #ifndef __AVX512VNNIINTRIN_H_INCLUDED\n #define __AVX512VNNIINTRIN_H_INCLUDED\n \n-#if !defined(__AVX512VNNI__) || !defined(__AVX512F__)\n+#if !defined(__AVX512VNNI__)\n #pragma GCC push_options\n-#pragma GCC target(\"avx512vnni,avx512f\")\n+#pragma GCC target(\"avx512vnni\")\n #define __DISABLE_AVX512VNNI__\n #endif /* __AVX512VNNI__ */\n "}, {"sha": "2c228e401c406891f73bfb06fc467f3a5170aabc", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7727ce400380aaf26fb915d31dcbd98a761e2c0/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7727ce400380aaf26fb915d31dcbd98a761e2c0/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=d7727ce400380aaf26fb915d31dcbd98a761e2c0", "patch": "@@ -2554,42 +2554,42 @@ BDESC (OPTION_MASK_ISA_GFNI | OPTION_MASK_ISA_AVX512BW, CODE_FOR_vgf2p8mulb_v16q\n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v16si, \"__builtin_ia32_vpdpbusd_v16si\", IX86_BUILTIN_VPDPBUSDV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v16si_mask, \"__builtin_ia32_vpdpbusd_v16si_mask\", IX86_BUILTIN_VPDPBUSDV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v16si_maskz, \"__builtin_ia32_vpdpbusd_v16si_maskz\", IX86_BUILTIN_VPDPBUSDV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v8si, \"__builtin_ia32_vpdpbusd_v8si\", IX86_BUILTIN_VPDPBUSDV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v8si_mask, \"__builtin_ia32_vpdpbusd_v8si_mask\", IX86_BUILTIN_VPDPBUSDV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v8si_maskz, \"__builtin_ia32_vpdpbusd_v8si_maskz\", IX86_BUILTIN_VPDPBUSDV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v4si, \"__builtin_ia32_vpdpbusd_v4si\", IX86_BUILTIN_VPDPBUSDV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v4si_mask, \"__builtin_ia32_vpdpbusd_v4si_mask\", IX86_BUILTIN_VPDPBUSDV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v4si_maskz, \"__builtin_ia32_vpdpbusd_v4si_maskz\", IX86_BUILTIN_VPDPBUSDV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpbusd_v8si, \"__builtin_ia32_vpdpbusd_v8si\", IX86_BUILTIN_VPDPBUSDV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpbusd_v8si_mask, \"__builtin_ia32_vpdpbusd_v8si_mask\", IX86_BUILTIN_VPDPBUSDV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpbusd_v8si_maskz, \"__builtin_ia32_vpdpbusd_v8si_maskz\", IX86_BUILTIN_VPDPBUSDV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpbusd_v4si, \"__builtin_ia32_vpdpbusd_v4si\", IX86_BUILTIN_VPDPBUSDV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpbusd_v4si_mask, \"__builtin_ia32_vpdpbusd_v4si_mask\", IX86_BUILTIN_VPDPBUSDV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpbusd_v4si_maskz, \"__builtin_ia32_vpdpbusd_v4si_maskz\", IX86_BUILTIN_VPDPBUSDV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n \n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v16si, \"__builtin_ia32_vpdpbusds_v16si\", IX86_BUILTIN_VPDPBUSDSV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v16si_mask, \"__builtin_ia32_vpdpbusds_v16si_mask\", IX86_BUILTIN_VPDPBUSDSV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v16si_maskz, \"__builtin_ia32_vpdpbusds_v16si_maskz\", IX86_BUILTIN_VPDPBUSDSV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v8si, \"__builtin_ia32_vpdpbusds_v8si\", IX86_BUILTIN_VPDPBUSDSV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v8si_mask, \"__builtin_ia32_vpdpbusds_v8si_mask\", IX86_BUILTIN_VPDPBUSDSV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v8si_maskz, \"__builtin_ia32_vpdpbusds_v8si_maskz\", IX86_BUILTIN_VPDPBUSDSV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v4si, \"__builtin_ia32_vpdpbusds_v4si\", IX86_BUILTIN_VPDPBUSDSV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v4si_mask, \"__builtin_ia32_vpdpbusds_v4si_mask\", IX86_BUILTIN_VPDPBUSDSV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v4si_maskz, \"__builtin_ia32_vpdpbusds_v4si_maskz\", IX86_BUILTIN_VPDPBUSDSV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpbusds_v8si, \"__builtin_ia32_vpdpbusds_v8si\", IX86_BUILTIN_VPDPBUSDSV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpbusds_v8si_mask, \"__builtin_ia32_vpdpbusds_v8si_mask\", IX86_BUILTIN_VPDPBUSDSV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpbusds_v8si_maskz, \"__builtin_ia32_vpdpbusds_v8si_maskz\", IX86_BUILTIN_VPDPBUSDSV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpbusds_v4si, \"__builtin_ia32_vpdpbusds_v4si\", IX86_BUILTIN_VPDPBUSDSV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpbusds_v4si_mask, \"__builtin_ia32_vpdpbusds_v4si_mask\", IX86_BUILTIN_VPDPBUSDSV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpbusds_v4si_maskz, \"__builtin_ia32_vpdpbusds_v4si_maskz\", IX86_BUILTIN_VPDPBUSDSV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n \n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v16si, \"__builtin_ia32_vpdpwssd_v16si\", IX86_BUILTIN_VPDPWSSDV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v16si_mask, \"__builtin_ia32_vpdpwssd_v16si_mask\", IX86_BUILTIN_VPDPWSSDV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v16si_maskz, \"__builtin_ia32_vpdpwssd_v16si_maskz\", IX86_BUILTIN_VPDPWSSDV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v8si, \"__builtin_ia32_vpdpwssd_v8si\", IX86_BUILTIN_VPDPWSSDV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v8si_mask, \"__builtin_ia32_vpdpwssd_v8si_mask\", IX86_BUILTIN_VPDPWSSDV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v8si_maskz, \"__builtin_ia32_vpdpwssd_v8si_maskz\", IX86_BUILTIN_VPDPWSSDV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v4si, \"__builtin_ia32_vpdpwssd_v4si\", IX86_BUILTIN_VPDPWSSDV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v4si_mask, \"__builtin_ia32_vpdpwssd_v4si_mask\", IX86_BUILTIN_VPDPWSSDV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v4si_maskz, \"__builtin_ia32_vpdpwssd_v4si_maskz\", IX86_BUILTIN_VPDPWSSDV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpwssd_v8si, \"__builtin_ia32_vpdpwssd_v8si\", IX86_BUILTIN_VPDPWSSDV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpwssd_v8si_mask, \"__builtin_ia32_vpdpwssd_v8si_mask\", IX86_BUILTIN_VPDPWSSDV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpwssd_v8si_maskz, \"__builtin_ia32_vpdpwssd_v8si_maskz\", IX86_BUILTIN_VPDPWSSDV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpwssd_v4si, \"__builtin_ia32_vpdpwssd_v4si\", IX86_BUILTIN_VPDPWSSDV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpwssd_v4si_mask, \"__builtin_ia32_vpdpwssd_v4si_mask\", IX86_BUILTIN_VPDPWSSDV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpwssd_v4si_maskz, \"__builtin_ia32_vpdpwssd_v4si_maskz\", IX86_BUILTIN_VPDPWSSDV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n \n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v16si, \"__builtin_ia32_vpdpwssds_v16si\", IX86_BUILTIN_VPDPWSSDSV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v16si_mask, \"__builtin_ia32_vpdpwssds_v16si_mask\", IX86_BUILTIN_VPDPWSSDSV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v16si_maskz, \"__builtin_ia32_vpdpwssds_v16si_maskz\", IX86_BUILTIN_VPDPWSSDSV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v8si, \"__builtin_ia32_vpdpwssds_v8si\", IX86_BUILTIN_VPDPWSSDSV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v8si_mask, \"__builtin_ia32_vpdpwssds_v8si_mask\", IX86_BUILTIN_VPDPWSSDSV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v8si_maskz, \"__builtin_ia32_vpdpwssds_v8si_maskz\", IX86_BUILTIN_VPDPWSSDSV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v4si, \"__builtin_ia32_vpdpwssds_v4si\", IX86_BUILTIN_VPDPWSSDSV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v4si_mask, \"__builtin_ia32_vpdpwssds_v4si_mask\", IX86_BUILTIN_VPDPWSSDSV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v4si_maskz, \"__builtin_ia32_vpdpwssds_v4si_maskz\", IX86_BUILTIN_VPDPWSSDSV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpwssds_v8si, \"__builtin_ia32_vpdpwssds_v8si\", IX86_BUILTIN_VPDPWSSDSV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpwssds_v8si_mask, \"__builtin_ia32_vpdpwssds_v8si_mask\", IX86_BUILTIN_VPDPWSSDSV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpwssds_v8si_maskz, \"__builtin_ia32_vpdpwssds_v8si_maskz\", IX86_BUILTIN_VPDPWSSDSV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpwssds_v4si, \"__builtin_ia32_vpdpwssds_v4si\", IX86_BUILTIN_VPDPWSSDSV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpwssds_v4si_mask, \"__builtin_ia32_vpdpwssds_v4si_mask\", IX86_BUILTIN_VPDPWSSDSV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpdpwssds_v4si_maskz, \"__builtin_ia32_vpdpwssds_v4si_maskz\", IX86_BUILTIN_VPDPWSSDSV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n \n /* VPCLMULQDQ */\n BDESC (OPTION_MASK_ISA_VPCLMULQDQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpclmulqdq_v2di, \"__builtin_ia32_vpclmulqdq_v2di\", IX86_BUILTIN_VPCLMULQDQ2, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT)"}, {"sha": "297e80fe17f6fa0b13dd254a946e4f652fe8df88", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7727ce400380aaf26fb915d31dcbd98a761e2c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7727ce400380aaf26fb915d31dcbd98a761e2c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7727ce400380aaf26fb915d31dcbd98a761e2c0", "patch": "@@ -1,10 +1,16 @@\n+2017-12-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/83488\n+\t* gcc.target/i386/pr83488-2.c: New test.\n+\t* gcc.target/i386/pr83488-3.c: New test.\n+\n 2017-12-22  Martin Jambor  <mjambor@suse.cz>\n \n \tPR lto/82027\n \t* g++.dg/lto/pr82027_0.C: New test.\n \n 2017-12-22  Julia Koval  <julia.koval@intel.com>\n-\tSebastian Peryt <sebastian.peryt@intel.com>\n+\t    Sebastian Peryt  <sebastian.peryt@intel.com>\n \n \t* g++.dg/other/i386-2.C: Add new options.\n \t* g++.dg/other/i386-3.C: Ditto."}, {"sha": "79e29f80185fa97ae9a2f30df463b6ed3fd5b957", "filename": "gcc/testsuite/gcc.target/i386/pr83488-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7727ce400380aaf26fb915d31dcbd98a761e2c0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83488-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7727ce400380aaf26fb915d31dcbd98a761e2c0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83488-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83488-2.c?ref=d7727ce400380aaf26fb915d31dcbd98a761e2c0", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/83488 */\n+/* { dg-do compile } */\n+/* { dg-options \"-mno-avx -mavx512vnni\" } */\n+\n+typedef int __v16si __attribute__((vector_size (64)));\n+\n+void\n+foo (__v16si *a, __v16si *b, __v16si *c, __v16si *d)\n+{\n+  *a = __builtin_ia32_vpdpbusd_v16si (*b, *c, *d);\n+}"}, {"sha": "7256749722bbb664e0db671f305970d2d8005b9f", "filename": "gcc/testsuite/gcc.target/i386/pr83488-3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7727ce400380aaf26fb915d31dcbd98a761e2c0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83488-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7727ce400380aaf26fb915d31dcbd98a761e2c0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83488-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83488-3.c?ref=d7727ce400380aaf26fb915d31dcbd98a761e2c0", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/83488 */\n+/* { dg-do compile } */\n+/* { dg-options \"-mno-avx -mavx512vnni -mno-avx512vl\" } */\n+\n+typedef int __v8si __attribute__((vector_size (32)));\n+\n+void\n+foo (__v8si *a, __v8si *b, __v8si *c, __v8si *d)\n+{\n+  *a = __builtin_ia32_vpdpbusd_v8si (*b, *c, *d);\t/* { dg-error \"needs isa option\" } */\n+}"}]}