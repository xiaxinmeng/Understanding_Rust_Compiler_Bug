{"sha": "4fc7cf69bad8a143cb50bee5caa6ac536eca4c98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZjN2NmNjliYWQ4YTE0M2NiNTBiZWU1Y2FhNmFjNTM2ZWNhNGM5OA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-01-03T20:30:52Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-01-03T20:30:52Z"}, "message": "(duplicate_decls): Push to permanent obstack before\ncreating new function types.\n\nFrom-SVN: r8717", "tree": {"sha": "e71348e3266336b8f9986a70962ede9d5b5d9e1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e71348e3266336b8f9986a70962ede9d5b5d9e1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fc7cf69bad8a143cb50bee5caa6ac536eca4c98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc7cf69bad8a143cb50bee5caa6ac536eca4c98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fc7cf69bad8a143cb50bee5caa6ac536eca4c98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc7cf69bad8a143cb50bee5caa6ac536eca4c98/comments", "author": null, "committer": null, "parents": [{"sha": "113921466963823facb1b5f239604930919b141c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/113921466963823facb1b5f239604930919b141c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/113921466963823facb1b5f239604930919b141c"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "02ffa998fcb2b5143bb54568715f4953acc19350", "filename": "gcc/c-decl.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc7cf69bad8a143cb50bee5caa6ac536eca4c98/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc7cf69bad8a143cb50bee5caa6ac536eca4c98/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=4fc7cf69bad8a143cb50bee5caa6ac536eca4c98", "patch": "@@ -1391,6 +1391,18 @@ duplicate_decls (newdecl, olddecl)\n           /* Accept the return type of the new declaration if same modes.  */\n \t  tree oldreturntype = TREE_TYPE (TREE_TYPE (olddecl));\n \t  tree newreturntype = TREE_TYPE (TREE_TYPE (newdecl));\n+\n+\t  /* Make sure we put the new type in the same obstack as the old ones.\n+\t     If the old types are not both in the same obstack, use the\n+\t     permanent one.  */\n+\t  if (TYPE_OBSTACK (oldtype) == TYPE_OBSTACK (newtype))\n+\t    push_obstacks (TYPE_OBSTACK (oldtype), TYPE_OBSTACK (oldtype));\n+\t  else\n+\t    {\n+\t      push_obstacks_nochange ();\n+\t      end_temporary_allocation ();\n+\t    }\n+\n           if (TYPE_MODE (oldreturntype) == TYPE_MODE (newreturntype))\n             {\n \t      /* Function types may be shared, so we can't just modify\n@@ -1425,6 +1437,8 @@ duplicate_decls (newdecl, olddecl)\n \t      if (types_match)\n \t\tTREE_TYPE (olddecl) = newtype;\n \t    }\n+\n+\t  pop_obstacks ();\n \t}\n       if (!types_match)\n \t{"}]}