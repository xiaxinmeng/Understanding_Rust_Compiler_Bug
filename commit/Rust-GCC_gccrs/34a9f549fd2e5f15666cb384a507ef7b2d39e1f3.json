{"sha": "34a9f549fd2e5f15666cb384a507ef7b2d39e1f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRhOWY1NDlmZDJlNWYxNTY2NmNiMzg0YTUwN2VmN2IyZDM5ZTFmMw==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2006-03-15T20:22:56Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2006-03-15T20:22:56Z"}, "message": "arm.c (minipool_pad): New.\n\n2006-03-15  Paul Brook  <paul@codesourcery.com>\n\n\t* config/arm/arm.c (minipool_pad): New.\n\t(add_minipool_forward_ref): Unclude pool alignment padding in address\n\tcalculation.\n\t(push_minipool_fix): Set minipool_pad.\n\t(minipool_pad): Ditto.\n\nFrom-SVN: r112099", "tree": {"sha": "1ece02a766956940ff9772bf8826385794be242b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ece02a766956940ff9772bf8826385794be242b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34a9f549fd2e5f15666cb384a507ef7b2d39e1f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34a9f549fd2e5f15666cb384a507ef7b2d39e1f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34a9f549fd2e5f15666cb384a507ef7b2d39e1f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34a9f549fd2e5f15666cb384a507ef7b2d39e1f3/comments", "author": null, "committer": null, "parents": [{"sha": "a9e317ed30b00805e7c60e1607e88347d1d76175", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9e317ed30b00805e7c60e1607e88347d1d76175", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9e317ed30b00805e7c60e1607e88347d1d76175"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "e0ffaa36d8172567a0c89c35b0497c8b79e6fb46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a9f549fd2e5f15666cb384a507ef7b2d39e1f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a9f549fd2e5f15666cb384a507ef7b2d39e1f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34a9f549fd2e5f15666cb384a507ef7b2d39e1f3", "patch": "@@ -1,3 +1,11 @@\n+2006-03-15  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.c (minipool_pad): New.\n+\t(add_minipool_forward_ref): Unclude pool alignment padding in address\n+\tcalculation.\n+\t(push_minipool_fix): Set minipool_pad.\n+\t(minipool_pad): Ditto.\n+\n 2006-03-15  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n \n \t* config/vax/vax.c (split_quadword_operands): Use MEM_P()"}, {"sha": "2e5c9c43bb8fbdba72fab7375cf6f507851d8bf6", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a9f549fd2e5f15666cb384a507ef7b2d39e1f3/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a9f549fd2e5f15666cb384a507ef7b2d39e1f3/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=34a9f549fd2e5f15666cb384a507ef7b2d39e1f3", "patch": "@@ -7308,6 +7308,7 @@ struct minipool_fixup\n static Mnode *\tminipool_vector_head;\n static Mnode *\tminipool_vector_tail;\n static rtx\tminipool_vector_label;\n+static int\tminipool_pad;\n \n /* The linked list of all minipool fixes required for this function.  */\n Mfix * \t\tminipool_fix_head;\n@@ -7419,7 +7420,7 @@ add_minipool_forward_ref (Mfix *fix)\n   /* If set, max_mp is the first pool_entry that has a lower\n      constraint than the one we are trying to add.  */\n   Mnode *       max_mp = NULL;\n-  HOST_WIDE_INT max_address = fix->address + fix->forwards;\n+  HOST_WIDE_INT max_address = fix->address + fix->forwards - minipool_pad;\n   Mnode *       mp;\n \n   /* If this fix's address is greater than the address of the first\n@@ -7997,12 +7998,11 @@ push_minipool_fix (rtx insn, HOST_WIDE_INT address, rtx *loc,\n      to generate duff assembly code.  */\n   gcc_assert (fix->forwards || fix->backwards);\n \n-  /* With AAPCS/iWMMXt enabled, the pool is aligned to an 8-byte boundary.\n-     So there might be an empty word before the start of the pool.\n-     Hence we reduce the forward range by 4 to allow for this\n-     possibility.  */\n+  /* If an entry requires 8-byte alignment then assume all constant pools\n+     require 4 bytes of padding.  Trying to do this later on a per-pool\n+     basis is awkward becuse existing pool entries have to be modified.  */\n   if (ARM_DOUBLEWORD_ALIGN && fix->fix_size == 8)\n-    fix->forwards -= 4;\n+    minipool_pad = 4;\n \n   if (dump_file)\n     {\n@@ -8179,6 +8179,7 @@ arm_reorg (void)\n      scan it properly.  */\n   insn = get_insns ();\n   gcc_assert (GET_CODE (insn) == NOTE);\n+  minipool_pad = 0;\n \n   /* Scan all the insns and record the operands that will need fixing.  */\n   for (insn = next_nonnote_insn (insn); insn; insn = next_nonnote_insn (insn))"}]}