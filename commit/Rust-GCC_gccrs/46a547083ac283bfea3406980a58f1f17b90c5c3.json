{"sha": "46a547083ac283bfea3406980a58f1f17b90c5c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZhNTQ3MDgzYWMyODNiZmVhMzQwNjk4MGE1OGYxZjE3YjkwYzVjMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-10-25T20:21:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-10-25T20:21:47Z"}, "message": "re PR tree-optimization/63641 (Invalid shift leads to incorrect code on 32-bit system)\n\n\tPR tree-optimization/63641\n\t* tree-ssa-reassoc.c (optimize_range_tests_to_bit_test): Set high\n\tto low + prec - 1 - clz (mask) instead of low + prec - clz (mask).\n\n\t* gcc.c-torture/execute/pr63641.c: New test.\n\nFrom-SVN: r216693", "tree": {"sha": "be8c1c5907e40185f6fcf7140f52f1d62ac08896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be8c1c5907e40185f6fcf7140f52f1d62ac08896"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46a547083ac283bfea3406980a58f1f17b90c5c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46a547083ac283bfea3406980a58f1f17b90c5c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46a547083ac283bfea3406980a58f1f17b90c5c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46a547083ac283bfea3406980a58f1f17b90c5c3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "608b9c889efe2b27282ced89114d07e7e9b013ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/608b9c889efe2b27282ced89114d07e7e9b013ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/608b9c889efe2b27282ced89114d07e7e9b013ad"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "1cb0cdc55693db1c5f410eafa65271a34edfdcfc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46a547083ac283bfea3406980a58f1f17b90c5c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46a547083ac283bfea3406980a58f1f17b90c5c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46a547083ac283bfea3406980a58f1f17b90c5c3", "patch": "@@ -1,3 +1,9 @@\n+2014-10-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/63641\n+\t* tree-ssa-reassoc.c (optimize_range_tests_to_bit_test): Set high\n+\tto low + prec - 1 - clz (mask) instead of low + prec - clz (mask).\n+\n 2014-10-25  Alan Modra  <amodra@gmail.com>\n \n \tPR rtl-optimization/63615"}, {"sha": "788786c068eed6fcc7f0b0e2f2b3fef4f359751a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46a547083ac283bfea3406980a58f1f17b90c5c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46a547083ac283bfea3406980a58f1f17b90c5c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46a547083ac283bfea3406980a58f1f17b90c5c3", "patch": "@@ -1,3 +1,8 @@\n+2014-10-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/63641\n+\t* gcc.c-torture/execute/pr63641.c: New test.\n+\n 2014-10-24  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/coarray_collectives_9.f90: Remove dg-error."}, {"sha": "d08c50b4f14baf07d1db485bfff6f69d6d8c5a32", "filename": "gcc/testsuite/gcc.c-torture/execute/pr63641.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46a547083ac283bfea3406980a58f1f17b90c5c3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr63641.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46a547083ac283bfea3406980a58f1f17b90c5c3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr63641.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr63641.c?ref=46a547083ac283bfea3406980a58f1f17b90c5c3", "patch": "@@ -0,0 +1,54 @@\n+/* PR tree-optimization/63641 */\n+\n+__attribute__ ((noinline, noclone)) int\n+foo (unsigned char b)\n+{\n+  if (0x0 <= b && b <= 0x8)\n+    goto lab;\n+  if (b == 0x0b)\n+    goto lab;\n+  if (0x0e <= b && b <= 0x1a)\n+    goto lab;\n+  if (0x1c <= b && b <= 0x1f)\n+    goto lab;\n+  return 0;\n+lab:\n+  return 1;\n+}\n+\n+__attribute__ ((noinline, noclone)) int\n+bar (unsigned char b)\n+{\n+  if (0x0 <= b && b <= 0x8)\n+    goto lab;\n+  if (b == 0x0b)\n+    goto lab;\n+  if (0x0e <= b && b <= 0x1a)\n+    goto lab;\n+  if (0x3c <= b && b <= 0x3f)\n+    goto lab;\n+  return 0;\n+lab:\n+  return 1;\n+}\n+\n+char tab1[] = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1,\n+\t\t1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1 };\n+char tab2[] = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1,\n+\t\t1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n+\t\t0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+\t\t0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1 };\n+\n+int\n+main ()\n+{\n+  int i;\n+  asm volatile (\"\" : : : \"memory\");\n+  for (i = 0; i < 256; i++)\n+    if (foo (i) != (i < 32 ? tab1[i] : 0))\n+      __builtin_abort ();\n+  for (i = 0; i < 256; i++)\n+    if (bar (i) != (i < 64 ? tab2[i] : 0))\n+      __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "a760595a1fdf5496fe351189c390b81bcb397519", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46a547083ac283bfea3406980a58f1f17b90c5c3/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46a547083ac283bfea3406980a58f1f17b90c5c3/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=46a547083ac283bfea3406980a58f1f17b90c5c3", "patch": "@@ -2513,7 +2513,7 @@ optimize_range_tests_to_bit_test (enum tree_code opcode, int first, int length,\n \t{\n \t  tree high = wide_int_to_tree (TREE_TYPE (lowi),\n \t\t\t\t\twi::to_widest (lowi)\n-\t\t\t\t\t+ prec - wi::clz (mask));\n+\t\t\t\t\t+ prec - 1 - wi::clz (mask));\n \t  operand_entry_t oe = (*ops)[ranges[i].idx];\n \t  tree op = oe->op;\n \t  gimple stmt = op ? SSA_NAME_DEF_STMT (op)"}]}