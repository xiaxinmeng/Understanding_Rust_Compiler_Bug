{"sha": "ff1e982113fddef5be552aeead54fc53df0832b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYxZTk4MjExM2ZkZGVmNWJlNTUyYWVlYWQ1NGZjNTNkZjA4MzJiMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-04T01:33:42Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-04T01:33:42Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r876", "tree": {"sha": "80a4f21b781f14bc526e6db95f4b371481caa264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80a4f21b781f14bc526e6db95f4b371481caa264"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff1e982113fddef5be552aeead54fc53df0832b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff1e982113fddef5be552aeead54fc53df0832b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff1e982113fddef5be552aeead54fc53df0832b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff1e982113fddef5be552aeead54fc53df0832b0/comments", "author": null, "committer": null, "parents": [{"sha": "4d613828c5e8d5eb027aedc336d71365c846ed99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d613828c5e8d5eb027aedc336d71365c846ed99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d613828c5e8d5eb027aedc336d71365c846ed99"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "90a4f670ee9b846fc5e2eaee34e5a814be4160bc", "filename": "gcc/calls.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff1e982113fddef5be552aeead54fc53df0832b0/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff1e982113fddef5be552aeead54fc53df0832b0/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=ff1e982113fddef5be552aeead54fc53df0832b0", "patch": "@@ -323,8 +323,6 @@ emit_call_1 (funexp, funtype, stack_size, struct_value_size, next_arg_reg,\n   if (is_const)\n     CONST_CALL_P (call_insn) = 1;\n \n-  inhibit_defer_pop = old_inhibit_defer_pop;\n-\n #ifndef ACCUMULATE_OUTGOING_ARGS\n   /* If returning from the subroutine does not automatically pop the args,\n      we need an instruction to pop them sooner or later.\n@@ -349,6 +347,8 @@ emit_call_1 (funexp, funtype, stack_size, struct_value_size, next_arg_reg,\n \tadjust_stack (stack_size_rtx);\n     }\n #endif\n+\n+  inhibit_defer_pop = old_inhibit_defer_pop;\n }\n \n /* Generate all the code for a function call"}]}