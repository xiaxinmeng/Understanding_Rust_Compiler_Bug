{"sha": "5fc0e5dfb43ae87c4afc11879efedc9845cae6a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZjMGU1ZGZiNDNhZTg3YzRhZmMxMTg3OWVmZWRjOTg0NWNhZTZhOQ==", "commit": {"author": {"name": "Krister Walfridsson", "email": "cato@df.lth.se", "date": "2002-09-06T20:34:41Z"}, "committer": {"name": "Krister Walfridsson", "email": "kristerw@gcc.gnu.org", "date": "2002-09-06T20:34:41Z"}, "message": "i386.h (GOT_SYMBOL_NAME): Define.\n\n\t* config/i386/i386.h (GOT_SYMBOL_NAME): Define.\n\t* config/i386/i386.c (output_set_got): Use GOT_SYMBOL_NAME.\n\t(ix86_output_addr_diff_elt) Likewise.\n\t(x86_output_mi_thunk) Likewise.\n\t* config/i386/netbsd.h (GOT_SYMBOL_NAME): Redefine.\n\nFrom-SVN: r56904", "tree": {"sha": "9937ff935185254f989cd3841dd895dcf99f0e7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9937ff935185254f989cd3841dd895dcf99f0e7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fc0e5dfb43ae87c4afc11879efedc9845cae6a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fc0e5dfb43ae87c4afc11879efedc9845cae6a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fc0e5dfb43ae87c4afc11879efedc9845cae6a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fc0e5dfb43ae87c4afc11879efedc9845cae6a9/comments", "author": null, "committer": null, "parents": [{"sha": "09ff0ee4cfca14a22887eb8c22fcc0fd7404a4c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09ff0ee4cfca14a22887eb8c22fcc0fd7404a4c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09ff0ee4cfca14a22887eb8c22fcc0fd7404a4c9"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "86f3fb225699a8ef3a68257e92ba8b33d1235085", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc0e5dfb43ae87c4afc11879efedc9845cae6a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc0e5dfb43ae87c4afc11879efedc9845cae6a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fc0e5dfb43ae87c4afc11879efedc9845cae6a9", "patch": "@@ -142,6 +142,14 @@ Thu Sep  5 16:27:47 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* config/h8300/h8300.c (asm_file_start): Add a missing\n \tsemicolon.\n \n+2002-09-04  Krister Walfridsson  <cato@df.lth.se>\n+\n+\t* config/i386/i386.h (GOT_SYMBOL_NAME): Define.\n+\t* config/i386/i386.c (output_set_got): Use GOT_SYMBOL_NAME.\n+\t(ix86_output_addr_diff_elt) Likewise.\n+\t(x86_output_mi_thunk) Likewise.\n+\t* config/i386/netbsd.h (GOT_SYMBOL_NAME): Redefine.\n+\n 2002-09-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* frv.c (frv_encode_section_info): Fix error in last change."}, {"sha": "a000bae754c3ec43d13567f87f21fa70dbbc4ab3", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc0e5dfb43ae87c4afc11879efedc9845cae6a9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc0e5dfb43ae87c4afc11879efedc9845cae6a9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5fc0e5dfb43ae87c4afc11879efedc9845cae6a9", "patch": "@@ -3963,7 +3963,7 @@ output_set_got (dest)\n   rtx xops[3];\n \n   xops[0] = dest;\n-  xops[1] = gen_rtx_SYMBOL_REF (Pmode, \"_GLOBAL_OFFSET_TABLE_\");\n+  xops[1] = gen_rtx_SYMBOL_REF (Pmode, GOT_SYMBOL_NAME);\n \n   if (! TARGET_DEEP_BRANCH_PREDICTION || !flag_pic)\n     {\n@@ -7335,8 +7335,8 @@ ix86_output_addr_diff_elt (file, value, rel)\n \t     machopic_function_base_name () + 1);\n #endif\n   else\n-    asm_fprintf (file, \"%s%U_GLOBAL_OFFSET_TABLE_+[.-%s%d]\\n\",\n-\t\t ASM_LONG, LPREFIX, value);\n+    asm_fprintf (file, \"%s%U%s+[.-%s%d]\\n\",\n+\t\t ASM_LONG, GOT_SYMBOL_NAME, LPREFIX, value);\n }\n \f\n /* Generate either \"mov $0, reg\" or \"xor reg, reg\", as appropriate\n@@ -13800,7 +13800,7 @@ x86_output_mi_thunk (file, delta, function)\n \t{\n \t  xops[0] = pic_offset_table_rtx;\n \t  xops[1] = gen_label_rtx ();\n-\t  xops[2] = gen_rtx_SYMBOL_REF (Pmode, \"_GLOBAL_OFFSET_TABLE_\");\n+\t  xops[2] = gen_rtx_SYMBOL_REF (Pmode, GOT_SYMBOL_NAME);\n \n \t  if (ix86_regparm > 2)\n \t    abort ();"}, {"sha": "1c75c20591f8c0ca82a2c5ddcea471b1d4675de5", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc0e5dfb43ae87c4afc11879efedc9845cae6a9/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc0e5dfb43ae87c4afc11879efedc9845cae6a9/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=5fc0e5dfb43ae87c4afc11879efedc9845cae6a9", "patch": "@@ -1105,6 +1105,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n    : reload_completed ? REGNO (pic_offset_table_rtx)\t\\\n    : REAL_PIC_OFFSET_TABLE_REGNUM)\n \n+#define GOT_SYMBOL_NAME \"_GLOBAL_OFFSET_TABLE_\"\n+\n /* Register in which address to store a structure value\n    arrives in the function.  On the 386, the prologue\n    copies this from the stack to register %eax.  */"}, {"sha": "ab0af773bd176a3353bc2b2402a4792b27d4beee", "filename": "gcc/config/i386/netbsd.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc0e5dfb43ae87c4afc11879efedc9845cae6a9/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc0e5dfb43ae87c4afc11879efedc9845cae6a9/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd.h?ref=5fc0e5dfb43ae87c4afc11879efedc9845cae6a9", "patch": "@@ -62,3 +62,8 @@\n /* Until they use ELF or something that handles dwarf2 unwinds\n    and initialization stuff better.  */\n #define DWARF2_UNWIND_INFO 0\n+\n+/* Redefine this so that it becomes \"_GLOBAL_OFFSET_TABLE_\" when the label\n+   prefix is added.  */\n+#undef GOT_SYMBOL_NAME\n+#define GOT_SYMBOL_NAME \"GLOBAL_OFFSET_TABLE_\""}]}