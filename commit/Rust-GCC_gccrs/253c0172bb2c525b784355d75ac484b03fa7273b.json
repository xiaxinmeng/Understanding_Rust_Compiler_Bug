{"sha": "253c0172bb2c525b784355d75ac484b03fa7273b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUzYzAxNzJiYjJjNTI1Yjc4NDM1NWQ3NWFjNDg0YjAzZmE3MjczYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-12-14T08:33:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-12-14T08:33:12Z"}, "message": "re PR tree-optimization/78788 (ICE (segfault) on s390x-linux-gnu)\n\n2016-12-14  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/78788\n\t* tree-vrp.c (set_value_range): Allow [-INF(OVF), +INF(OVF)].\n\t(set_and_canonicalize_value_range): Do not drop the above to\n\tVARYING.\n\n\t* gcc.dg/torture/pr78788.c: New testcase.\n\nFrom-SVN: r243631", "tree": {"sha": "c0c0de27fbcdd70345b0d5501ec9f5177536e412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0c0de27fbcdd70345b0d5501ec9f5177536e412"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/253c0172bb2c525b784355d75ac484b03fa7273b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/253c0172bb2c525b784355d75ac484b03fa7273b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/253c0172bb2c525b784355d75ac484b03fa7273b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/253c0172bb2c525b784355d75ac484b03fa7273b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "803312a7609cb71b12fc5118c6ec892f9d1fa7bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/803312a7609cb71b12fc5118c6ec892f9d1fa7bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/803312a7609cb71b12fc5118c6ec892f9d1fa7bb"}], "stats": {"total": 44, "additions": 32, "deletions": 12}, "files": [{"sha": "17a33618b5ec06649afc093cc2d57c16a9c82519", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/253c0172bb2c525b784355d75ac484b03fa7273b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/253c0172bb2c525b784355d75ac484b03fa7273b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=253c0172bb2c525b784355d75ac484b03fa7273b", "patch": "@@ -1,3 +1,10 @@\n+2016-12-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78788\n+\t* tree-vrp.c (set_value_range): Allow [-INF(OVF), +INF(OVF)].\n+\t(set_and_canonicalize_value_range): Do not drop the above to\n+\tVARYING.\n+\n 2016-12-13  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs600.c (rs6000_builtin_vectorization_cost):"}, {"sha": "2be6da24268a4c48054c97a2e01255ac00b2b8c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/253c0172bb2c525b784355d75ac484b03fa7273b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/253c0172bb2c525b784355d75ac484b03fa7273b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=253c0172bb2c525b784355d75ac484b03fa7273b", "patch": "@@ -1,3 +1,8 @@\n+2016-12-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78788\n+\t* gcc.dg/torture/pr78788.c: New testcase.\n+\n 2016-12-13  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/69481"}, {"sha": "9861260b4ed9b753d633e490dc2a5b976e653f9b", "filename": "gcc/testsuite/gcc.dg/torture/pr78788.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/253c0172bb2c525b784355d75ac484b03fa7273b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78788.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/253c0172bb2c525b784355d75ac484b03fa7273b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78788.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78788.c?ref=253c0172bb2c525b784355d75ac484b03fa7273b", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+\n+int a;\n+long b;\n+long c;\n+void d()\n+{\n+  int e = 0;\n+  for (; b; b++)\n+    if (c)\n+      {\n+\te++;\n+\te++;\n+      }\n+  while (e)\n+    a = e -= 2;\n+}"}, {"sha": "3535d7a4d83f0a44c5715808b166298f4c8524fd", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/253c0172bb2c525b784355d75ac484b03fa7273b/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/253c0172bb2c525b784355d75ac484b03fa7273b/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=253c0172bb2c525b784355d75ac484b03fa7273b", "patch": "@@ -365,10 +365,6 @@ set_value_range (value_range *vr, enum value_range_type t, tree min,\n \n       cmp = compare_values (min, max);\n       gcc_assert (cmp == 0 || cmp == -1 || cmp == -2);\n-\n-      if (needs_overflow_infinity (TREE_TYPE (min)))\n-\tgcc_assert (!is_overflow_infinity (min)\n-\t\t    || !is_overflow_infinity (max));\n     }\n \n   if (flag_checking\n@@ -506,14 +502,9 @@ set_and_canonicalize_value_range (value_range *vr, enum value_range_type t,\n         }\n     }\n \n-  /* Drop [-INF(OVF), +INF(OVF)] to varying.  */\n-  if (needs_overflow_infinity (TREE_TYPE (min))\n-      && is_overflow_infinity (min)\n-      && is_overflow_infinity (max))\n-    {\n-      set_value_range_to_varying (vr);\n-      return;\n-    }\n+  /* Do not drop [-INF(OVF), +INF(OVF)] to varying.  (OVF) has to be sticky\n+     to make sure VRP iteration terminates, otherwise we can get into\n+     oscillations.  */\n \n   set_value_range (vr, t, min, max, equiv);\n }"}]}