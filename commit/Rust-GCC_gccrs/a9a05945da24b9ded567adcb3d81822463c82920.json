{"sha": "a9a05945da24b9ded567adcb3d81822463c82920", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlhMDU5NDVkYTI0YjlkZWQ1NjdhZGNiM2Q4MTgyMjQ2M2M4MjkyMA==", "commit": {"author": {"name": "Doug Evans", "email": "devans@canuck.cygnus.com", "date": "1998-04-20T16:42:50Z"}, "committer": {"name": "Doug Evans", "email": "devans@gcc.gnu.org", "date": "1998-04-20T16:42:50Z"}, "message": "* flow.c (sbitmap_vector_alloc): Ensure sbitmaps properly aligned.\n\nFrom-SVN: r19347", "tree": {"sha": "0a1c56e419640ae571c7e34d557df873827296e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a1c56e419640ae571c7e34d557df873827296e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9a05945da24b9ded567adcb3d81822463c82920", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9a05945da24b9ded567adcb3d81822463c82920", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9a05945da24b9ded567adcb3d81822463c82920", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9a05945da24b9ded567adcb3d81822463c82920/comments", "author": null, "committer": null, "parents": [{"sha": "dc0f0eb82e44c834c5a0552a036d5e87c7b524aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc0f0eb82e44c834c5a0552a036d5e87c7b524aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc0f0eb82e44c834c5a0552a036d5e87c7b524aa"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "871f04dfbf1448efc22bc76cae9c3a5c15f8c78d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9a05945da24b9ded567adcb3d81822463c82920/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9a05945da24b9ded567adcb3d81822463c82920/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9a05945da24b9ded567adcb3d81822463c82920", "patch": "@@ -1,3 +1,7 @@\n+Mon Apr 20 12:43:09 1998  Doug Evans  <devans@canuck.cygnus.com>\n+\n+\t* flow.c (sbitmap_vector_alloc): Ensure sbitmaps properly aligned.\n+\n Mon Apr 20 15:04:14 1998  John Wehle  (john@feith.com)\n \n \t* i386.md (movsf_push, movdf_push, movxf_push): Allow memory"}, {"sha": "d9cd7615f2f681beae9fcb2d6c37c7643b09c3d8", "filename": "gcc/flow.c", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9a05945da24b9ded567adcb3d81822463c82920/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9a05945da24b9ded567adcb3d81822463c82920/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=a9a05945da24b9ded567adcb3d81822463c82920", "patch": "@@ -3492,20 +3492,31 @@ sbitmap *\n sbitmap_vector_alloc (n_vecs, n_elms)\n      int n_vecs, n_elms;\n {\n-  int i, bytes, offset, elm_bytes, size, amt;\n+  int i, bytes, offset, elm_bytes, size, amt, vector_bytes;\n   sbitmap *bitmap_vector;\n \n   size = SBITMAP_SET_SIZE (n_elms);\n   bytes = size * sizeof (SBITMAP_ELT_TYPE);\n   elm_bytes = (sizeof (struct simple_bitmap_def)\n \t       + bytes - sizeof (SBITMAP_ELT_TYPE));\n-  amt = (n_vecs * sizeof (sbitmap *)) + (n_vecs * elm_bytes);\n-  bitmap_vector = (sbitmap *) xmalloc (amt);\n+  vector_bytes = n_vecs * sizeof (sbitmap *);\n \n-  /* ??? There may be alignment problems, `offset' should be rounded up\n-     each time to account for alignment.  Later [if ever].  */\n+  /* Round up `vector_bytes' to account for the alignment requirements\n+     of an sbitmap.  One could allocate the vector-table and set of sbitmaps\n+     separately, but that requires maintaining two pointers or creating\n+     a cover struct to hold both pointers (so our result is still just\n+     one pointer).  Neither is a bad idea, but this is simpler for now.  */\n+  {\n+    /* Based on DEFAULT_ALIGNMENT computation in obstack.c.  */\n+    struct { char x; SBITMAP_ELT_TYPE y; } align;\n+    int alignment = (char *) & align.y - & align.x;\n+    vector_bytes = (vector_bytes + alignment - 1) & ~ (alignment - 1);\n+  }\n+\n+  amt = vector_bytes + (n_vecs * elm_bytes);\n+  bitmap_vector = (sbitmap *) xmalloc (amt);\n \n-  for (i = 0, offset = n_vecs * sizeof (sbitmap *);\n+  for (i = 0, offset = vector_bytes;\n        i < n_vecs;\n        i++, offset += elm_bytes)\n     {"}]}