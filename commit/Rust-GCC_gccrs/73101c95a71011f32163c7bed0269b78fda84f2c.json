{"sha": "73101c95a71011f32163c7bed0269b78fda84f2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMxMDFjOTVhNzEwMTFmMzIxNjNjN2JlZDAyNjliNzhmZGE4NGYyYw==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-05-09T16:04:25Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-05-09T16:04:25Z"}, "message": "fixinc.sco is not needed any more\n\nFrom-SVN: r33799", "tree": {"sha": "e67736fcb9539d932dd333216e997039d9c379c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e67736fcb9539d932dd333216e997039d9c379c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73101c95a71011f32163c7bed0269b78fda84f2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73101c95a71011f32163c7bed0269b78fda84f2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73101c95a71011f32163c7bed0269b78fda84f2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73101c95a71011f32163c7bed0269b78fda84f2c/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d393a0b06f992af5eb476b5d02d3bbafacb9774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d393a0b06f992af5eb476b5d02d3bbafacb9774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d393a0b06f992af5eb476b5d02d3bbafacb9774"}], "stats": {"total": 449, "additions": 4, "deletions": 445}, "files": [{"sha": "a2a1e126153c4cdd10f93f1d37a184a7532d8a52", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73101c95a71011f32163c7bed0269b78fda84f2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73101c95a71011f32163c7bed0269b78fda84f2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73101c95a71011f32163c7bed0269b78fda84f2c", "patch": "@@ -1,3 +1,7 @@\n+2000-05-09  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/fixinc.sco:  Oh, yes, we don't need this any more.\n+\n Tue May  9 16:30:27 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* calls.c (expand_call): Reorganize somewhat in order"}, {"sha": "77d96e34f411141d5576592083020023e42e0e3f", "filename": "gcc/fixinc/fixinc.sco", "status": "removed", "additions": 0, "deletions": 445, "changes": 445, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d393a0b06f992af5eb476b5d02d3bbafacb9774/gcc%2Ffixinc%2Ffixinc.sco", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d393a0b06f992af5eb476b5d02d3bbafacb9774/gcc%2Ffixinc%2Ffixinc.sco", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.sco?ref=4d393a0b06f992af5eb476b5d02d3bbafacb9774", "patch": "@@ -1,445 +0,0 @@\n-#! /bin/sh\n-#\n-#   fixinc.sco  --  Install modified versions of SCO system include\n-#   files.\n-#\n-#   Based on fixinc.svr4 script by Ron Guilmette (rfg@ncd.com) (SCO\n-#   modifications by Ian Lance Taylor (ian@airs.com)).\n-#\n-# Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n-#\n-# This file is part of GNU CC.\n-# \n-# GNU CC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-# \n-# GNU CC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with GNU CC; see the file COPYING.  If not, write to\n-# the Free Software Foundation, 59 Temple Place - Suite 330,\n-# Boston, MA 02111-1307, USA.\n-#\n-#\tThis script munges the native include files provided with SCO\n-#\t3.2v4 systems so as to provide a reasonable namespace when\n-#\tcompiling with gcc.  The header files by default do not\n-#\tprovide many essential definitions and declarations if\n-#\t__STDC__ is 1.  This script modifies the header files to check\n-#\tfor __STRICT_ANSI__ being defined instead.  Once munged, the\n-#\tresulting new system include files are placed in a directory\n-#\tthat GNU C will search *before* searching the /usr/include\n-#\tdirectory.  This script should work properly for most SCO\n-#\t3.2v4 systems.  For other types of systems, you should use the\n-#\t`fixincludes' or the `fixinc.svr4' script instead.\n-#\n-#\tSee README-fixinc for more information.\n-\n-# Fail if no arg to specify a directory for the output.\n-if [ x$1 = x ]\n-then echo fixincludes: no output directory specified\n-exit 1\n-fi\n-\n-# Directory in which to store the results.\n-LIB=${1?\"fixincludes: output directory not specified\"}\n-\n-# Make sure it exists.\n-if [ ! -d $LIB ]; then\n-  mkdir $LIB || exit 1\n-fi\n-\n-ORIG_DIR=`${PWDCMD-pwd}`\n-\n-# Make LIB absolute if it is relative.\n-# Don't do this if not necessary, since may screw up automounters.\n-case $LIB in\n-/*)\n-\t;;\n-*)\n-\tcd $LIB; LIB=`${PWDCMD-pwd}`\n-\t;;\n-esac\n-\n-echo 'Building fixincludes in ' ${LIB}\n-\n-# Determine whether this filesystem has symbolic links.\n-if ln -s X $LIB/ShouldNotExist 2>/dev/null; then\n-  rm -f $LIB/ShouldNotExist\n-  LINKS=true\n-else\n-  LINKS=false\n-fi\n-\n-echo 'Making directories:'\n-# Directory containing the original header files.\n-shift\n-if [ $# -eq 0 ] ; then\n-  set /usr/include\n-fi\n-\n-INLIST=\"$@\"\n-\n-for INPUT in ${INLIST} ; do\n-cd ${ORIG_DIR}\n-cd ${INPUT}\n-\n-if $LINKS; then\n-  files=`ls -LR | sed -n s/:$//p`\n-else\n-  files=`find . -type d -print | sed '/^.$/d'`\n-fi\n-for file in $files; do\n-  rm -rf $LIB/$file\n-  if [ ! -d $LIB/$file ]\n-  then mkdir $LIB/$file\n-  fi\n-done\n-\n-# treetops gets an alternating list\n-# of old directories to copy\n-# and the new directories to copy to.\n-treetops=\"${INPUT} ${LIB}\"\n-\n-if $LINKS; then\n-  echo 'Making internal symbolic directory links'\n-  for file in $files; do\n-    dest=`ls -ld $file | sed -n 's/.*-> //p'`\n-    if [ \"$dest\" ]; then    \n-      cwd=`pwd`\n-      # In case $dest is relative, get to $file's dir first.\n-      cd ${INPUT}\n-      cd `echo ./$file | sed -n 's&[^/]*$&&p'`\n-      # Check that the target directory exists.\n-      # Redirections changed to avoid bug in sh on Ultrix.\n-      (cd $dest) > /dev/null 2>&1\n-      if [ $? = 0 ]; then\n-\tcd $dest\n-\t# X gets the dir that the link actually leads to.\n-\tx=`pwd`\n-\t# If link leads back into ${INPUT},\n-\t# make a similar link here.\n-\tif expr $x : \"${INPUT}/.*\" > /dev/null; then\n-\t  # Y gets the actual target dir name, relative to ${INPUT}.\n-\t  y=`echo $x | sed -n \"s&${INPUT}/&&p\"`\n-\t  echo $file '->' $y ': Making link'\n-\t  rm -fr ${LIB}/$file > /dev/null 2>&1\n-\t  ln -s ${LIB}/$y ${LIB}/$file > /dev/null 2>&1\n-\telse\n-\t  # If the link is to outside ${INPUT},\n-\t  # treat this directory as if it actually contained the files.\n-# This line used to have $dest instead of $x.\n-# $dest seemed to be wrong for links found in subdirectories\n-# of ${INPUT}.  Does this change break anything?\n-\t  treetops=\"$treetops $x ${LIB}/$file\"\n-\tfi\n-      fi\n-      cd $cwd\n-    fi\n-  done\n-fi\n-\n-set - $treetops\n-while [ $# != 0 ]; do\n-  # $1 is an old directory to copy, and $2 is the new directory to copy to.\n-  echo \"Finding header files in $1:\"\n-  cd ${INPUT}\n-  cd $1\n-  files=`find . -name '*.h' -type f -print`\n-  echo 'Checking header files:'\n-  for file in $files; do\n-    if egrep '!__STDC__' $file >/dev/null; then\n-      if [ -r $file ]; then\n-\tcp $file $2/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n-\tchmod +w $2/$file\n-\tchmod a+r $2/$file\n-\n-# The following have been removed from the sed command below\n-# because it is more useful to leave these things in.\n-# The only reason to remove them was for -pedantic,\n-# which isn't much of a reason. -- rms.\n-#\t  /^[ \t]*#[ \t]*ident/d\n-\n-\tsed -e '\n-\t  s/!__STDC__/!defined (__STRICT_ANSI__)/g\n-\t' $2/$file > $2/$file.sed\n-\tmv $2/$file.sed $2/$file\n-\tif cmp $file $2/$file >/dev/null 2>&1; then\n-\t   rm $2/$file\n-\telse\n-\t   echo Fixed $file\n-\tfi\n-      fi\n-    fi\n-  done\n-  shift; shift\n-done\n-\n-# We shouldn't stay in the directory we just copied.\n-cd ${INPUT}\n-\n-# Fix first broken decl of getcwd present on some svr4 systems.\n-\n-file=stdlib.h\n-base=`basename $file`.$$\n-if [ -r ${LIB}/$file ]; then\n-  file_to_fix=${LIB}/$file\n-else\n-  if [ -r ${INPUT}/$file ]; then\n-    file_to_fix=${INPUT}/$file\n-  else\n-    file_to_fix=\"\"\n-  fi\n-fi\n-if [ \\! -z \"$file_to_fix\" ]; then\n-  echo Checking $file_to_fix\n-  sed -e 's/getcwd(char \\{0,\\}\\*, int)/getcwd(char *, size_t)/' $file_to_fix > /tmp/$base\n-  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n-    true\n-  else\n-    echo Fixed $file_to_fix\n-    rm -f ${LIB}/$file\n-    cp /tmp/$base ${LIB}/$file\n-    chmod a+r ${LIB}/$file\n-  fi\n-  rm -f /tmp/$base\n-fi\n-\n-# Fix second broken decl of getcwd present on some svr4 systems.  Also\n-# fix the incorrect decl of profil present on some svr4 systems.\n-\n-file=unistd.h\n-base=`basename $file`.$$\n-if [ -r ${LIB}/$file ]; then\n-  file_to_fix=${LIB}/$file\n-else\n-  if [ -r ${INPUT}/$file ]; then\n-    file_to_fix=${INPUT}/$file\n-  else\n-    file_to_fix=\"\"\n-  fi\n-fi\n-if [ \\! -z \"$file_to_fix\" ]; then\n-  echo Checking $file_to_fix\n-  sed -e 's/getcwd(char \\*, int)/getcwd(char *, size_t)/' $file_to_fix \\\n-    | sed -e 's/profil(unsigned short \\*, unsigned int, unsigned int, unsigned int)/profil(unsigned short *, size_t, int, unsigned)/' > /tmp/$base\n-  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n-    true\n-  else\n-    echo Fixed $file_to_fix\n-    rm -f ${LIB}/$file\n-    cp /tmp/$base ${LIB}/$file\n-    chmod a+r ${LIB}/$file\n-  fi\n-  rm -f /tmp/$base\n-fi\n-\n-# Fix third broken decl of getcwd on SCO.  Also fix incorrect decl of\n-# link.\n-file=prototypes.h\n-base=`basename $file`.$$\n-if [ -r ${LIB}/$file ]; then\n-  file_to_fix=${LIB}/$file\n-else\n-  if [ -r ${INPUT}/$file ]; then\n-    file_to_fix=${INPUT}/$file\n-  else\n-    file_to_fix=\"\"\n-  fi\n-fi\n-if [ \\! -z \"$file_to_fix\" ]; then\n-  echo Checking $file_to_fix\n-  sed -e 's/getcwd(char \\*, int)/getcwd(char *, size_t)/' $file_to_fix \\\n-    | sed -e 's/const  int\tlink(const char \\*, char \\*)/extern  int\tlink(const char *, const char *)/' > /tmp/$base\n-  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n-    true\n-  else\n-    echo Fixed $file_to_fix\n-    rm -f ${LIB}/$file\n-    cp /tmp/$base ${LIB}/$file\n-    chmod a+r ${LIB}/$file\n-  fi\n-  rm -f /tmp/$base\n-fi\n-\n-# Fix an error in this file: the #if says _cplusplus, not the double\n-# underscore __cplusplus that it should be\n-file=tinfo.h\n-if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n-  mkdir ${LIB}/rpcsvc 2>/dev/null\n-  cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n-  chmod +w ${LIB}/$file 2>/dev/null\n-  chmod a+r ${LIB}/$file 2>/dev/null\n-fi\n-\n-if [ -r ${LIB}/$file ]; then\n-  echo Fixing $file, __cplusplus macro\n-  sed -e 's/[ \t]_cplusplus/ __cplusplus/' ${LIB}/$file > ${LIB}/${file}.sed\n-  rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n-  if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n-    rm ${LIB}/$file\n-  fi\n-fi\n-\n-# Fix prototype declaration of utime in sys/times.h.  In 3.2v4.0 the\n-# const is missing.\n-file=sys/times.h\n-if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n-  cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n-  chmod +w ${LIB}/$file 2>/dev/null\n-  chmod a+r ${LIB}/$file 2>/dev/null\n-fi\n-\n-if [ -r ${LIB}/$file ]; then\n-  echo Fixing $file, utime prototype\n-  sed -e 's/(const char \\*, struct utimbuf \\*);/(const char *, const struct utimbuf *);/' ${LIB}/$file > ${LIB}/${file}.sed\n-  rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n-  if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n-    rm ${LIB}/$file\n-  fi\n-fi\n-\n-# This function is borrowed from fixinclude.svr4\n-# The OpenServer math.h defines struct exception, which conflicts with\n-# the class exception defined in the C++ file std/stdexcept.h.  We\n-# redefine it to __math_exception.  This is not a great fix, but I\n-# haven't been able to think of anything better.\n-#\n-# OpenServer's math.h declares abs as inline int abs...  Unfortunately,\n-# we blow over that one (with C++ linkage) and stick a new one in stdlib.h\n-# with C linkage.   So we eat the one out of math.h.\n-file=math.h\n-base=`basename $file`.$$\n-if [ -r ${LIB}/$file ]; then\n-  file_to_fix=${LIB}/$file\n-else\n-  if [ -r ${INPUT}/$file ]; then\n-    file_to_fix=${INPUT}/$file\n-  else\n-    file_to_fix=\"\"\n-  fi\n-fi\n-if [ \\! -z \"$file_to_fix\" ]; then\n-  echo Checking $file_to_fix\n-  sed -e '/struct exception/i\\\n-#ifdef __cplusplus\\\n-#define exception __math_exception\\\n-#endif'\\\n-      -e '/struct exception/a\\\n-#ifdef __cplusplus\\\n-#undef exception\\\n-#endif' \\\n-      -e 's@inline int abs(int [a-z][a-z]*) {.*}@extern \"C\" int abs(int);@' \\\n- $file_to_fix > /tmp/$base\n-  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n-    true\n-  else\n-    echo Fixed $file_to_fix\n-    rm -f ${LIB}/$file\n-    cp /tmp/$base ${LIB}/$file\n-    chmod a+r ${LIB}/$file\n-  fi\n-  rm -f /tmp/$base\n-fi\n-\n-#\n-# Also, the static functions lstat() and fchmod() in <sys/stat.h> \n-# cause G++ grief since they're not wrapped in \"if __cplusplus\".   \n-# Fix that up now.\n-#\n-file=sys/stat.h\n-if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n-  cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n-  chmod +w ${LIB}/$file 2>/dev/null\n-  chmod a+r ${LIB}/$file 2>/dev/null\n-fi\n-\n-if [ -r ${LIB}/$file ]; then\n-  echo Fixing $file, static definitions not C++-aware.\n-  sed -e '/^static int[ \t]*/i\\\n-#if __cplusplus\\\n-extern \"C\"\\\n-{\\\n-#endif /* __cplusplus */ \\\n-' \\\n--e '/^}$/a\\\n-#if __cplusplus\\\n-}\\\n-#endif /* __cplusplus */ \\\n-' ${LIB}/$file > ${LIB}/${file}.sed\n-  rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n-  if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n-    rm -f ${LIB}/$file\n-  fi\n-fi\n-\n-# This fix has the regex modified from the from fixinc.wrap\n-# Avoid the definition of the bool type in the following files when using\n-# g++, since it's now an official type in the C++ language.\n-for file in term.h tinfo.h\n-do\n-  if [ -r $INPUT/$file ]; then\n-    echo Checking $INPUT/$file\n-    w='[\t ]'\n-    if grep \"typedef$w.*char$w.*bool$w*;\" $INPUT/$file >/dev/null\n-    then\n-      echo Fixed $file\n-      rm -f $LIB/$file\n-      cat <<__EOF__ >$LIB/$file\n-#ifndef _CURSES_H_WRAPPER\n-#ifdef __cplusplus\n-# define bool __curses_bool_t\n-#endif\n- #include_next <$file>\n-#ifdef __cplusplus\n-# undef bool\n-#endif\n-#define _CURSES_H_WRAPPER\n-#endif /* _CURSES_H_WRAPPER */\n-__EOF__\n-      # Define _CURSES_H_WRAPPER at the end of the wrapper, not the start,\n-      # so that if #include_next gets another instance of the wrapper,\n-      # this will follow the #include_next chain until we arrive at\n-      # the real system include file.\n-      chmod a+r $LIB/$file\n-    fi\n-  fi\n-done\n-\n-echo 'Removing unneeded directories:'\n-cd $LIB\n-files=`find . -type d -print | sort -r`\n-for file in $files; do\n-  rmdir $LIB/$file > /dev/null 2>&1\n-done\n-\n-if $LINKS; then\n-  echo 'Making internal symbolic non-directory links'\n-  cd ${INPUT}\n-  files=`find . -type l -print`\n-  for file in $files; do\n-    dest=`ls -ld $file | sed -n 's/.*-> //p'`\n-    if expr \"$dest\" : '[^/].*' > /dev/null; then    \n-      target=${LIB}/`echo file | sed \"s|[^/]*\\$|$dest|\"`\n-      if [ -f $target ]; then\n-        ln -s $dest ${LIB}/$file >/dev/null 2>&1\n-      fi\n-    fi\n-  done\n-fi\n-\n-done\n-\n-if [ x${INSTALL_ASSERT_H} != x ]\n-then\n-  cd ${ORIG_DIR}\n-  rm -f include/assert.h\n-  cp ${srcdir}/assert.h include/assert.h || exit 1\n-  chmod a+r include/assert.h\n-fi\n-\n-exit 0"}]}