{"sha": "e429bb493195630da7530aad22ccbe50bac0587f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQyOWJiNDkzMTk1NjMwZGE3NTMwYWFkMjJjY2JlNTBiYWMwNTg3Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-04-15T08:53:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-04-15T08:53:41Z"}, "message": "trans-decl.c (gfc_build_qualified_array): Clear DECL_IGNORED_P on VAR_DECL LBOUND and/or UBOUND, even for -O1.\n\n\t* trans-decl.c (gfc_build_qualified_array): Clear DECL_IGNORED_P\n\ton VAR_DECL LBOUND and/or UBOUND, even for -O1.\n\nFrom-SVN: r158366", "tree": {"sha": "fed4df35394b3be738af9bbe9f79eb56b2fc7147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fed4df35394b3be738af9bbe9f79eb56b2fc7147"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e429bb493195630da7530aad22ccbe50bac0587f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e429bb493195630da7530aad22ccbe50bac0587f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e429bb493195630da7530aad22ccbe50bac0587f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e429bb493195630da7530aad22ccbe50bac0587f/comments", "author": null, "committer": null, "parents": [{"sha": "f36ae44d4fad2910ffedfa33d6f2c154230edd0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36ae44d4fad2910ffedfa33d6f2c154230edd0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f36ae44d4fad2910ffedfa33d6f2c154230edd0a"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "fdf4e992f9d238b09abe625323f77ed6524f52e0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e429bb493195630da7530aad22ccbe50bac0587f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e429bb493195630da7530aad22ccbe50bac0587f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e429bb493195630da7530aad22ccbe50bac0587f", "patch": "@@ -1,6 +1,11 @@\n+2010-04-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* trans-decl.c (gfc_build_qualified_array): Clear DECL_IGNORED_P\n+\ton VAR_DECL LBOUND and/or UBOUND, even for -O1.\n+\n 2010-04-14  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n-\t* fortran/intrinsic.texi: Add the missing specific name of intrinsic\n+\t* intrinsic.texi: Add the missing specific name of intrinsic\n \tprocedure where the specific name is identical to the generic name.\n \tFix inconsistent or mismatch in the argument names in intrinsic\n \tprocedure descriptions.  Add the SCALAR allocatable description to"}, {"sha": "9e79a9adfabde219eb58c7f67c1b9e5797e19bf1", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e429bb493195630da7530aad22ccbe50bac0587f/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e429bb493195630da7530aad22ccbe50bac0587f/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=e429bb493195630da7530aad22ccbe50bac0587f", "patch": "@@ -775,16 +775,15 @@ gfc_build_qualified_array (tree decl, gfc_symbol * sym)\n \t\t\t\t    GFC_TYPE_ARRAY_LBOUND (type, dim),\n \t\t\t\t    GFC_TYPE_ARRAY_UBOUND (type, dim));\n \t  gtype = build_array_type (gtype, rtype);\n-\t  /* Ensure the bound variables aren't optimized out at -O0.  */\n-\t  if (!optimize)\n-\t    {\n-\t      if (GFC_TYPE_ARRAY_LBOUND (type, dim)\n-\t\t  && TREE_CODE (GFC_TYPE_ARRAY_LBOUND (type, dim)) == VAR_DECL)\n-\t\tDECL_IGNORED_P (GFC_TYPE_ARRAY_LBOUND (type, dim)) = 0;\n-\t      if (GFC_TYPE_ARRAY_UBOUND (type, dim)\n-\t\t  && TREE_CODE (GFC_TYPE_ARRAY_UBOUND (type, dim)) == VAR_DECL)\n-\t\tDECL_IGNORED_P (GFC_TYPE_ARRAY_UBOUND (type, dim)) = 0;\n-\t    }\n+\t  /* Ensure the bound variables aren't optimized out at -O0.\n+\t     For -O1 and above they often will be optimized out, but\n+\t     can be tracked by VTA.  */\n+\t  if (GFC_TYPE_ARRAY_LBOUND (type, dim)\n+\t      && TREE_CODE (GFC_TYPE_ARRAY_LBOUND (type, dim)) == VAR_DECL)\n+\t    DECL_IGNORED_P (GFC_TYPE_ARRAY_LBOUND (type, dim)) = 0;\n+\t  if (GFC_TYPE_ARRAY_UBOUND (type, dim)\n+\t      && TREE_CODE (GFC_TYPE_ARRAY_UBOUND (type, dim)) == VAR_DECL)\n+\t    DECL_IGNORED_P (GFC_TYPE_ARRAY_UBOUND (type, dim)) = 0;\n \t}\n       TYPE_NAME (type) = type_decl = build_decl (input_location,\n \t\t\t\t\t\t TYPE_DECL, NULL, gtype);"}]}