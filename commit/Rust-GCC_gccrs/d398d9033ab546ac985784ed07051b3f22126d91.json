{"sha": "d398d9033ab546ac985784ed07051b3f22126d91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM5OGQ5MDMzYWI1NDZhYzk4NTc4NGVkMDcwNTFiM2YyMjEyNmQ5MQ==", "commit": {"author": {"name": "Gunther Nikl", "email": "gnikl@users.sourceforge.net", "date": "2010-06-17T19:54:16Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-06-17T19:54:16Z"}, "message": "rs6000.c (print_operand): Also use print_operand_address and puts to output the operand for CONST.\n\n\t* config/rs6000/rs6000.c (print_operand) <'K'>: Also use\n\tprint_operand_address and puts to output the operand for CONST.\n\nFrom-SVN: r160945", "tree": {"sha": "431ecbdcb290a0b7c2bb3b9947af3371e0325543", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/431ecbdcb290a0b7c2bb3b9947af3371e0325543"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d398d9033ab546ac985784ed07051b3f22126d91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d398d9033ab546ac985784ed07051b3f22126d91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d398d9033ab546ac985784ed07051b3f22126d91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d398d9033ab546ac985784ed07051b3f22126d91/comments", "author": null, "committer": null, "parents": [{"sha": "654bbfea483dbbcb0ce8556cdb532f6570756912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/654bbfea483dbbcb0ce8556cdb532f6570756912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/654bbfea483dbbcb0ce8556cdb532f6570756912"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "f68d673b2707cffe1f2b8c6e1a91703246808e69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d398d9033ab546ac985784ed07051b3f22126d91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d398d9033ab546ac985784ed07051b3f22126d91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d398d9033ab546ac985784ed07051b3f22126d91", "patch": "@@ -1,3 +1,8 @@\n+2010-06-17  Gunther Nikl  <gnikl@users.sourceforge.net>\n+\n+\t* config/rs6000/rs6000.c (print_operand) <'K'>: Also use\n+\tprint_operand_address and puts to output the operand for CONST.\n+\n 2010-06-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/44572"}, {"sha": "55dd0a6118b189d200441dee61657a7bb9983c50", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d398d9033ab546ac985784ed07051b3f22126d91/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d398d9033ab546ac985784ed07051b3f22126d91/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d398d9033ab546ac985784ed07051b3f22126d91", "patch": "@@ -14885,27 +14885,16 @@ print_operand (FILE *file, rtx x, int code)\n       /* X must be a symbolic constant on ELF.  Write an\n \t expression suitable for an 'addi' that adds in the low 16\n \t bits of the MEM.  */\n-      if (GET_CODE (x) != CONST)\n-\t{\n-\t  print_operand_address (file, x);\n-\t  fputs (\"@l\", file);\n-\t}\n-      else\n+      if (GET_CODE (x) == CONST)\n \t{\n \t  if (GET_CODE (XEXP (x, 0)) != PLUS\n \t      || (GET_CODE (XEXP (XEXP (x, 0), 0)) != SYMBOL_REF\n \t\t  && GET_CODE (XEXP (XEXP (x, 0), 0)) != LABEL_REF)\n \t      || GET_CODE (XEXP (XEXP (x, 0), 1)) != CONST_INT)\n \t    output_operand_lossage (\"invalid %%K value\");\n-\t  print_operand_address (file, XEXP (XEXP (x, 0), 0));\n-\t  fputs (\"@l\", file);\n-\t  /* For GNU as, there must be a non-alphanumeric character\n-\t     between 'l' and the number.  The '-' is added by\n-\t     print_operand() already.  */\n-\t  if (INTVAL (XEXP (XEXP (x, 0), 1)) >= 0)\n-\t    fputs (\"+\", file);\n-\t  print_operand (file, XEXP (XEXP (x, 0), 1), 0);\n \t}\n+      print_operand_address (file, x);\n+      fputs (\"@l\", file);\n       return;\n \n       /* %l is output_asm_label.  */"}]}