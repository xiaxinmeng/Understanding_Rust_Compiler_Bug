{"sha": "1e26ff7391c54c6d30760aea427b6bc2bdb46124", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUyNmZmNzM5MWM1NGM2ZDMwNzYwYWVhNDI3YjZiYzJiZGI0NjEyNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-01-22T18:21:05Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-01-28T11:06:43Z"}, "message": "vect: Pattern-matched calls in reduction chains\n\ngcc.dg/pr56350.c started ICEing for SVE in GCC 10 because we\npattern-matched a division reduction:\n\n      a /= 8;\n\ninto a signed shift with division semantics:\n\n      ... = IFN_SDIV_POW2 (..., 3);\n\nwhereas the reduction code expected it still to be a gassign.\n\nOne fix would be to check for a reduction in the pattern matcher\n(but current patterns don't generally do that).  Another would be\nto fail gracefully for reductions involving calls.  Since we can't\nvectorise the reduction either way, and probably have a better shot\nwith the shift form, this patch goes for the \"fail gracefully\" approach.\n\n2020-01-28  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vect-loop.c (vectorizable_reduction): Fail gracefully\n\tfor reduction chains that (now) include a call.", "tree": {"sha": "426722890ce5b7cdb4f2e2f754bb53ed4e353a90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/426722890ce5b7cdb4f2e2f754bb53ed4e353a90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e26ff7391c54c6d30760aea427b6bc2bdb46124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e26ff7391c54c6d30760aea427b6bc2bdb46124", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e26ff7391c54c6d30760aea427b6bc2bdb46124", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e26ff7391c54c6d30760aea427b6bc2bdb46124/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "627d59b6b3062de921fbdd80b2b48de18f599d03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/627d59b6b3062de921fbdd80b2b48de18f599d03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/627d59b6b3062de921fbdd80b2b48de18f599d03"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "4d6ceb69258fd03175dc2cc5bb9024d9efb780ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e26ff7391c54c6d30760aea427b6bc2bdb46124/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e26ff7391c54c6d30760aea427b6bc2bdb46124/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e26ff7391c54c6d30760aea427b6bc2bdb46124", "patch": "@@ -1,3 +1,8 @@\n+2020-01-28  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-loop.c (vectorizable_reduction): Fail gracefully\n+\tfor reduction chains that (now) include a call.\n+\n 2020-01-28  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/92822"}, {"sha": "53fccb715efef2521e499e5f764025dc80355f3d", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e26ff7391c54c6d30760aea427b6bc2bdb46124/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e26ff7391c54c6d30760aea427b6bc2bdb46124/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=1e26ff7391c54c6d30760aea427b6bc2bdb46124", "patch": "@@ -6026,10 +6026,18 @@ vectorizable_reduction (stmt_vec_info stmt_info, slp_tree slp_node,\n \t info_for_reduction to work.  */\n       if (STMT_VINFO_LIVE_P (vdef))\n \tSTMT_VINFO_REDUC_DEF (def) = phi_info;\n-      if (CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (vdef->stmt)))\n+      gassign *assign = dyn_cast <gassign *> (vdef->stmt);\n+      if (!assign)\n \t{\n-\t  if (!tree_nop_conversion_p (TREE_TYPE (gimple_assign_lhs (vdef->stmt)),\n-\t\t\t\t      TREE_TYPE (gimple_assign_rhs1 (vdef->stmt))))\n+\t  if (dump_enabled_p ())\n+\t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t     \"reduction chain includes calls.\\n\");\n+\t  return false;\n+\t}\n+      if (CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (assign)))\n+\t{\n+\t  if (!tree_nop_conversion_p (TREE_TYPE (gimple_assign_lhs (assign)),\n+\t\t\t\t      TREE_TYPE (gimple_assign_rhs1 (assign))))\n \t    {\n \t      if (dump_enabled_p ())\n \t\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,"}]}