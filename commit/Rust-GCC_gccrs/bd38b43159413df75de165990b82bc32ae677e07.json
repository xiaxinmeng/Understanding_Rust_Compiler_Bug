{"sha": "bd38b43159413df75de165990b82bc32ae677e07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQzOGI0MzE1OTQxM2RmNzVkZTE2NTk5MGI4MmJjMzJhZTY3N2UwNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T10:10:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T10:10:35Z"}, "message": "[multiple changes]\n\n2011-09-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch4.adb, sem_ch6.adb: Minor reformatting.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\n2011-09-02  Marc Sango  <sango@adacore.com>\n\n\t* sem_ch3.adb (Analyze_Object_Declaration): Change\n\tcomment and add additional check to differentiate constant of\n\ttype string from others unconstrained type.\n\nFrom-SVN: r178462", "tree": {"sha": "3d2e6d96e6901ec268fe78be655e2c8a0744ab63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d2e6d96e6901ec268fe78be655e2c8a0744ab63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd38b43159413df75de165990b82bc32ae677e07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd38b43159413df75de165990b82bc32ae677e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd38b43159413df75de165990b82bc32ae677e07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd38b43159413df75de165990b82bc32ae677e07/comments", "author": null, "committer": null, "parents": [{"sha": "99d520ade527dcb82b6f3057ea571caaeb00c2b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d520ade527dcb82b6f3057ea571caaeb00c2b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99d520ade527dcb82b6f3057ea571caaeb00c2b7"}], "stats": {"total": 116, "additions": 67, "deletions": 49}, "files": [{"sha": "ebf6ca9c371c06303652945fe840c9a93d546bec", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd38b43159413df75de165990b82bc32ae677e07/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd38b43159413df75de165990b82bc32ae677e07/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bd38b43159413df75de165990b82bc32ae677e07", "patch": "@@ -1,3 +1,14 @@\n+2011-09-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch4.adb, sem_ch6.adb: Minor reformatting.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n+2011-09-02  Marc Sango  <sango@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Object_Declaration): Change\n+\tcomment and add additional check to differentiate constant of\n+\ttype string from others unconstrained type.\n+\n 2011-09-02  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sinfo.ads, sinfo.adb: New semantic attribute Premature_Use,"}, {"sha": "826bdcca1c75bc2ab794d877b9d0d399d97df302", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 36, "deletions": 34, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd38b43159413df75de165990b82bc32ae677e07/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd38b43159413df75de165990b82bc32ae677e07/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=bd38b43159413df75de165990b82bc32ae677e07", "patch": "@@ -1506,13 +1506,14 @@ ada/bindgen.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n \n ada/bindusg.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/bindusg.ads ada/bindusg.adb \\\n-   ada/debug.ads ada/hostparm.ads ada/interfac.ads ada/namet.ads \\\n-   ada/namet.adb ada/opt.ads ada/osint.ads ada/output.ads ada/system.ads \\\n-   ada/s-exctab.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n-   ada/s-secsta.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/tree_io.ads ada/types.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/widechar.ads \n+   ada/debug.ads ada/gnatvsn.ads ada/hostparm.ads ada/interfac.ads \\\n+   ada/namet.ads ada/namet.adb ada/opt.ads ada/osint.ads ada/output.ads \\\n+   ada/switch.ads ada/system.ads ada/s-exctab.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-secsta.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/tree_io.ads ada/types.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/widechar.ads \n \n ada/butil.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/butil.ads ada/butil.adb \\\n@@ -2562,21 +2563,21 @@ ada/exp_smem.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n ada/exp_strm.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n    ada/atree.adb ada/casing.ads ada/debug.ads ada/einfo.ads ada/einfo.adb \\\n-   ada/elists.ads ada/exp_strm.ads ada/exp_strm.adb ada/exp_tss.ads \\\n-   ada/exp_util.ads ada/get_targ.ads ada/gnat.ads ada/g-htable.ads \\\n-   ada/hostparm.ads ada/interfac.ads ada/lib.ads ada/namet.ads \\\n-   ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb \\\n-   ada/opt.ads ada/output.ads ada/restrict.ads ada/rident.ads \\\n-   ada/rtsfind.ads ada/sem_aux.ads ada/sem_aux.adb ada/sem_util.ads \\\n-   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/stand.ads \\\n-   ada/stringt.ads ada/system.ads ada/s-exctab.ads ada/s-htable.ads \\\n-   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n-   ada/s-rident.ads ada/s-secsta.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tbuild.ads \\\n-   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n-   ada/uintp.ads ada/uintp.adb ada/unchconv.ads ada/unchdeal.ads \\\n-   ada/urealp.ads ada/widechar.ads \n+   ada/elists.ads ada/elists.adb ada/exp_strm.ads ada/exp_strm.adb \\\n+   ada/exp_tss.ads ada/exp_util.ads ada/get_targ.ads ada/gnat.ads \\\n+   ada/g-htable.ads ada/hostparm.ads ada/interfac.ads ada/lib.ads \\\n+   ada/namet.ads ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads \\\n+   ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n+   ada/rident.ads ada/rtsfind.ads ada/sem_aux.ads ada/sem_aux.adb \\\n+   ada/sem_util.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/snames.ads ada/stand.ads ada/stringt.ads ada/system.ads \\\n+   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n+   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n ada/exp_tss.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -2624,18 +2625,19 @@ ada/exp_util.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/sem_ch8.ads ada/sem_ch9.ads ada/sem_disp.ads ada/sem_eval.ads \\\n    ada/sem_eval.adb ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads \\\n    ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/sprint.ads \\\n-   ada/stand.ads ada/stringt.ads ada/stringt.adb ada/style.ads \\\n-   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n-   ada/s-carun8.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n-   ada/ttypes.ads ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb \\\n-   ada/uname.ads ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \\\n-   ada/urealp.adb ada/validsw.ads ada/widechar.ads \n+   ada/sinfo.adb ada/sinput.ads ada/sinput.adb ada/snames.ads \\\n+   ada/sprint.ads ada/stand.ads ada/stringt.ads ada/stringt.adb \\\n+   ada/style.ads ada/styleg.ads ada/styleg.adb ada/stylesw.ads \\\n+   ada/system.ads ada/s-carun8.ads ada/s-exctab.ads ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n+   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/types.adb \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/urealp.adb ada/validsw.ads \\\n+   ada/widechar.ads \n \n ada/exp_vfpt.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\"}, {"sha": "3e5665f37ce09cbfc3a9b3aa699cb897cedbc979", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd38b43159413df75de165990b82bc32ae677e07/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd38b43159413df75de165990b82bc32ae677e07/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=bd38b43159413df75de165990b82bc32ae677e07", "patch": "@@ -3320,12 +3320,11 @@ package body Sem_Ch3 is\n                --  In SPARK, a declaration of unconstrained type is allowed\n                --  only for constants of type string.\n \n-               --  Why no check for Comes_From_Source here, seems wrong ???\n-               --  Where is check to differentiate string case ???\n-\n-               Check_SPARK_Restriction\n-                 (\"declaration of object of unconstrained type not allowed\",\n-                  E);\n+               if Nkind (E) = N_String_Literal then\n+                  Check_SPARK_Restriction\n+                    (\"declaration of object of unconstrained type not allowed\",\n+                     E);\n+               end if;\n \n                --  Unconstrained variables not allowed in Ada 83 mode\n "}, {"sha": "5f404f3c45b91f5a3e9a13bff40d0b4e5277da2f", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd38b43159413df75de165990b82bc32ae677e07/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd38b43159413df75de165990b82bc32ae677e07/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=bd38b43159413df75de165990b82bc32ae677e07", "patch": "@@ -4322,7 +4322,8 @@ package body Sem_Ch4 is\n             Error_Msg_Node_2 := First_Subtype (Prefix_Type);\n             Error_Msg_NE (\"no selector& for}\", N, Sel);\n \n-            --  If prefix is incomplete, dd information.\n+            --  If prefix is incomplete, dd information\n+            --  What is dd???\n \n             if Is_Incomplete_Type (Type_To_Use) then\n                declare\n@@ -4332,11 +4333,13 @@ package body Sem_Ch4 is\n                   if From_With_Type (Scope (Type_To_Use)) then\n                      Error_Msg_NE\n                        (\"\\limited view of& has no components\", N, Inc);\n+\n                   else\n                      Error_Msg_NE\n                        (\"\\premature usage of incomplete type&\", N, Inc);\n-                     if\n-                       Nkind (Parent (Inc)) = N_Incomplete_Type_Declaration\n+\n+                     if Nkind (Parent (Inc)) =\n+                                          N_Incomplete_Type_Declaration\n                      then\n                         Set_Premature_Use (Parent (Inc), N);\n                      end if;"}, {"sha": "88c226b19447847dd55e924a58b58dfb8458ec26", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd38b43159413df75de165990b82bc32ae677e07/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd38b43159413df75de165990b82bc32ae677e07/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=bd38b43159413df75de165990b82bc32ae677e07", "patch": "@@ -5550,17 +5550,20 @@ package body Sem_Ch6 is\n \n                declare\n                   E : constant Entity_Id := Entity (N);\n+\n                begin\n-                  --  ???Quantified expressions get analyzed later, so E can be\n-                  --  empty at this point. In this case, we suppress the\n+                  --  ???Quantified expressions get analyzed later, so E can\n+                  --  be empty at this point. In this case, we suppress the\n                   --  warning, just in case E is assignable. It seems better to\n                   --  have false negatives than false positives. At some point,\n                   --  we should make the warning more accurate, either by\n-                  --  analyzing quantified expressions earlier, or moving this\n-                  --  processing later.\n+                  --  analyzing quantified expressions earlier, or moving\n+                  --  this processing later.\n \n-                  if No (E) or else\n-                    (Is_Entity_Name (N) and then Ekind (E) in Assignable_Kind)\n+                  if No (E)\n+                    or else\n+                      (Is_Entity_Name (N)\n+                        and then Ekind (E) in Assignable_Kind)\n                   then\n                      Found := True;\n                   end if;"}]}