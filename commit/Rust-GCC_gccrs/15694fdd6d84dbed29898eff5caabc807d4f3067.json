{"sha": "15694fdd6d84dbed29898eff5caabc807d4f3067", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU2OTRmZGQ2ZDg0ZGJlZDI5ODk4ZWZmNWNhYWJjODA3ZDRmMzA2Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-11-01T04:02:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-11-01T04:02:56Z"}, "message": "* c.opt (-fdeduce-init-list): Off by default.\n\nFrom-SVN: r180728", "tree": {"sha": "9be46ffc212bb0b65d9fb954a357a2e2252fb64f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9be46ffc212bb0b65d9fb954a357a2e2252fb64f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15694fdd6d84dbed29898eff5caabc807d4f3067", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15694fdd6d84dbed29898eff5caabc807d4f3067", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15694fdd6d84dbed29898eff5caabc807d4f3067", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15694fdd6d84dbed29898eff5caabc807d4f3067/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a7d5d7e221f85f6afc574beaa9d2dcabc67368d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7d5d7e221f85f6afc574beaa9d2dcabc67368d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7d5d7e221f85f6afc574beaa9d2dcabc67368d7"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "028163ccefbd837d3926470c9b9ebbba4b4fe48e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15694fdd6d84dbed29898eff5caabc807d4f3067/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15694fdd6d84dbed29898eff5caabc807d4f3067/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=15694fdd6d84dbed29898eff5caabc807d4f3067", "patch": "@@ -1,5 +1,7 @@\n 2011-10-31  Jason Merrill  <jason@redhat.com>\n \n+\t* c.opt (-fdeduce-init-list): Off by default.\n+\n \tPR c++/50920\n \t* c-common.h (cxx_dialect): Add cxx11 and cxx03.\n \t* c.opt: Add -std=c++11, -std=gnu++11, -std=gnu++03,"}, {"sha": "6d5009758986d754cbece8cd18c044baad25a50a", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15694fdd6d84dbed29898eff5caabc807d4f3067/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15694fdd6d84dbed29898eff5caabc807d4f3067/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=15694fdd6d84dbed29898eff5caabc807d4f3067", "patch": "@@ -752,8 +752,8 @@ C ObjC C++ ObjC++\n Emit debug annotations during preprocessing\n \n fdeduce-init-list\n-C++ ObjC++ Var(flag_deduce_init_list) Init(1)\n--fno-deduce-init-list\tdisable deduction of std::initializer_list for a template type parameter from a brace-enclosed initializer-list\n+C++ ObjC++ Var(flag_deduce_init_list) Init(0)\n+-fdeduce-init-list\tenable deduction of std::initializer_list for a template type parameter from a brace-enclosed initializer-list\n \n fdefault-inline\n C++ ObjC++ Ignore"}, {"sha": "2836b74cb6540f2663b71c775bea66d57a47ef52", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15694fdd6d84dbed29898eff5caabc807d4f3067/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15694fdd6d84dbed29898eff5caabc807d4f3067/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=15694fdd6d84dbed29898eff5caabc807d4f3067", "patch": "@@ -1907,9 +1907,9 @@ to @var{n}.  A limit is needed to detect endless recursion during\n constant expression evaluation.  The minimum specified by the standard\n is 512.\n \n-@item -fno-deduce-init-list\n-@opindex fno-deduce-init-list\n-Disable deduction of a template type parameter as\n+@item -fdeduce-init-list\n+@opindex fdeduce-init-list\n+Enable deduction of a template type parameter as\n std::initializer_list from a brace-enclosed initializer list, i.e.\n \n @smallexample\n@@ -1924,9 +1924,10 @@ void f()\n @}\n @end smallexample\n \n-This option is present because this deduction is an extension to the\n-current specification in the C++0x working draft, and there was\n-some concern about potential overload resolution problems.\n+This deduction was implemented as a possible extension to the\n+originally proposed semantics for the C++11 standard, but was not part\n+of the final standard, so it is disabled by default.  This option is\n+deprecated, and may be removed in a future version of G++.\n \n @item -ffriend-injection\n @opindex ffriend-injection"}, {"sha": "373044f765a1cd629639da2b3a41edbd1b7b216b", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist-deduce.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15694fdd6d84dbed29898eff5caabc807d4f3067/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-deduce.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15694fdd6d84dbed29898eff5caabc807d4f3067/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-deduce.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-deduce.C?ref=15694fdd6d84dbed29898eff5caabc807d4f3067", "patch": "@@ -2,7 +2,7 @@\n // supported by the working draft, but is necessary for perfect forwarding\n // of initializer-lists to things that can take a std::initializer_list.\n \n-// { dg-options -std=c++0x }\n+// { dg-options \"-std=c++0x -fdeduce-init-list\" }\n // { dg-do run }\n \n #include <initializer_list>"}]}