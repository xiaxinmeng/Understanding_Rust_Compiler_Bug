{"sha": "9f4524f299d5c40498269b23c4fe32a4058b6ca1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY0NTI0ZjI5OWQ1YzQwNDk4MjY5YjIzYzRmZTMyYTQwNThiNmNhMQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2001-12-08T10:49:49Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2001-12-08T10:49:49Z"}, "message": "final.c (cleanup_subreg_operands): Use recog_data.operand_loc in test for a subreg.\n\n* final.c (cleanup_subreg_operands):  Use recog_data.operand_loc\nin test for a subreg.\n\nFrom-SVN: r47788", "tree": {"sha": "0fd986d73d5cc0578ed4e8e81f41b1dab65eee04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fd986d73d5cc0578ed4e8e81f41b1dab65eee04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f4524f299d5c40498269b23c4fe32a4058b6ca1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4524f299d5c40498269b23c4fe32a4058b6ca1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f4524f299d5c40498269b23c4fe32a4058b6ca1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4524f299d5c40498269b23c4fe32a4058b6ca1/comments", "author": null, "committer": null, "parents": [{"sha": "da8c84e8df220e3bfb60a750905b2e4a07ef0f1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8c84e8df220e3bfb60a750905b2e4a07ef0f1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da8c84e8df220e3bfb60a750905b2e4a07ef0f1f"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "a17c3ac2c84fe7881c43f7fb78db7b5738994f63", "filename": "gcc/final.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4524f299d5c40498269b23c4fe32a4058b6ca1/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4524f299d5c40498269b23c4fe32a4058b6ca1/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=9f4524f299d5c40498269b23c4fe32a4058b6ca1", "patch": "@@ -2726,7 +2726,12 @@ cleanup_subreg_operands (insn)\n   extract_insn_cached (insn);\n   for (i = 0; i < recog_data.n_operands; i++)\n     {\n-      if (GET_CODE (recog_data.operand[i]) == SUBREG)\n+      /* The following test cannot use recog_data.operand when tesing\n+\t for a SUBREG: the underlying object might have been changed\n+\t already if we are inside a match_operator expression that\n+\t matches the else clause.  Instead we test the underlying\n+\t expression directly.  */\n+      if (GET_CODE (*recog_data.operand_loc[i]) == SUBREG)\n \trecog_data.operand[i] = alter_subreg (recog_data.operand_loc[i]);\n       else if (GET_CODE (recog_data.operand[i]) == PLUS\n \t       || GET_CODE (recog_data.operand[i]) == MULT"}]}