{"sha": "a8250bbaeb2e8250c20db477fe67fd085214be7c", "node_id": "C_kwDOANBUbNoAKGE4MjUwYmJhZWIyZTgyNTBjMjBkYjQ3N2ZlNjdmZDA4NTIxNGJlN2M", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-02-25T13:19:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-02-28T07:02:49Z"}, "message": "rtl-optimization/104686 - speed up conflict iteration\n\nThe following replaces\n\n       /* Skip bits that are zero.  */\n       for (; (word & 1) == 0; word >>= 1)\n         bit_num++;\n\nidioms in ira-int.h in the attempt to speedup update_conflict_hard_regno_costs\nwhich we're bound on in PR104686.  The trick is to use ctz_hwi here\nwhich should pay off even with dense bitmaps on architectures that\nhave HW support for this.\n\nFor the PR in question this speeds up compile-time from 31s to 24s for\nme.\n\n2022-02-25  Richard Biener  <rguenther@suse.de>\n\n\tPR rtl-optimization/104686\n\t* ira-int.h (minmax_set_iter_cond): Use ctz_hwi to elide loop\n\tskipping bits that are zero.\n\t(ira_object_conflict_iter_cond): Likewise.", "tree": {"sha": "6f7fe1d471af7fad959a475aad7a78f404be361b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f7fe1d471af7fad959a475aad7a78f404be361b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8250bbaeb2e8250c20db477fe67fd085214be7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8250bbaeb2e8250c20db477fe67fd085214be7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8250bbaeb2e8250c20db477fe67fd085214be7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8250bbaeb2e8250c20db477fe67fd085214be7c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50d9ca7104d40f0a331d0dd01e3c069ecf7f6c97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d9ca7104d40f0a331d0dd01e3c069ecf7f6c97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50d9ca7104d40f0a331d0dd01e3c069ecf7f6c97"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "f42a314fa7f4f4bc75ecbdcaa0118179cb989f18", "filename": "gcc/ira-int.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8250bbaeb2e8250c20db477fe67fd085214be7c/gcc%2Fira-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8250bbaeb2e8250c20db477fe67fd085214be7c/gcc%2Fira-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-int.h?ref=a8250bbaeb2e8250c20db477fe67fd085214be7c", "patch": "@@ -764,8 +764,9 @@ minmax_set_iter_cond (minmax_set_iterator *i, int *n)\n     }\n \n   /* Skip bits that are zero.  */\n-  for (; (i->word & 1) == 0; i->word >>= 1)\n-    i->bit_num++;\n+  int off = ctz_hwi (i->word);\n+  i->bit_num += off;\n+  i->word >>= off;\n \n   *n = (int) i->bit_num + i->start_val;\n \n@@ -1379,8 +1380,9 @@ ira_object_conflict_iter_cond (ira_object_conflict_iterator *i,\n \t}\n \n       /* Skip bits that are zero.  */\n-      for (; (word & 1) == 0; word >>= 1)\n-\tbit_num++;\n+      int off = ctz_hwi (word);\n+      bit_num += off;\n+      word >>= off;\n \n       obj = ira_object_id_map[bit_num + i->base_conflict_id];\n       i->bit_num = bit_num + 1;"}]}