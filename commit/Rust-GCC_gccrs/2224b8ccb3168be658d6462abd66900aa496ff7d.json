{"sha": "2224b8ccb3168be658d6462abd66900aa496ff7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIyNGI4Y2NiMzE2OGJlNjU4ZDY0NjJhYmQ2NjkwMGFhNDk2ZmY3ZA==", "commit": {"author": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-08-24T10:00:49Z"}, "committer": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-08-24T10:00:49Z"}, "message": "(nil_method): Don't define it, import it from sendmsg.c.\n\n(arglist_t): Data-definition changed.\n\nFrom-SVN: r5204", "tree": {"sha": "9ab75e61f20fda30e95c802f881175434b222e42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ab75e61f20fda30e95c802f881175434b222e42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2224b8ccb3168be658d6462abd66900aa496ff7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2224b8ccb3168be658d6462abd66900aa496ff7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2224b8ccb3168be658d6462abd66900aa496ff7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2224b8ccb3168be658d6462abd66900aa496ff7d/comments", "author": null, "committer": null, "parents": [{"sha": "62b9a7120685798499b35a04a5d24af7d85400b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b9a7120685798499b35a04a5d24af7d85400b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62b9a7120685798499b35a04a5d24af7d85400b5"}], "stats": {"total": 47, "additions": 17, "deletions": 30}, "files": [{"sha": "6f0f3aedfd18fd06121119fd90fe3b98cad92012", "filename": "gcc/objc/objc.h", "status": "modified", "additions": 17, "deletions": 30, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2224b8ccb3168be658d6462abd66900aa496ff7d/gcc%2Fobjc%2Fobjc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2224b8ccb3168be658d6462abd66900aa496ff7d/gcc%2Fobjc%2Fobjc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc.h?ref=2224b8ccb3168be658d6462abd66900aa496ff7d", "patch": "@@ -123,51 +123,38 @@ typedef struct objc_protocol {\n   struct objc_method_description_list *instance_methods, *class_methods; \n } Protocol; \n \n-#else\n-\n+#else /* __OBJC__ */\n @class Protocol;\n #endif \n \n typedef void* retval_t;\t\t/* return value */\n typedef void(*apply_t)(void);\t/* function pointer */\n+typedef union {\n+  char *arg_ptr;\n+  char arg_regs[sizeof (char*)];\n+} *arglist_t;\t\t\t/* argument frame */\n \n-#if defined(REG_ARGS) || defined(STACK_ARGS) \n-\n-typedef struct {\n-  char* arg_pointer;\n-#ifdef STRUCT_RETURN\n-  void* struct_return;\n-#endif\n-#ifdef REG_ARGS\n-  void* regs[2];\n-#endif\n-} *arglist_t;\n-\n-#ifdef REG_ARGS\n-#define __objc_frame_receiver(FRAME)  (FRAME)->regs[0]\n-#define __objc_frame_selector(FRAME)  ((SEL)(FRAME)->regs[1])\n-\n-#else\n-#define __objc_frame_receiver(FRAME) ((id*)(FRAME)->arg_pointer)[0]\n-#define __objc_frame_selector(FRAME) ((SEL*)(FRAME)->arg_pointer)[1]\n-#endif\n-#else\n-\n-typedef void* arglist_t;\n-\n-#endif\n \n #if defined(__OBJC__) \n-\n #include \"objc/sarray.h\"\n \n-static id nil_method(id rcv, SEL op, ...) { return rcv; }\n+/*\n+  This is the function called when messages are send to nil.  You may\n+  set a breakpoint in your debugger at this function to catch messages\n+  too nil.\n+*/\n+extern id nil_method(id rcv, SEL op, ...);\n \n+/*\n+  The messager is inlined, thus it is defined here directly.  The\n+  inlining is quite time-consuming when optimizing.  This will be\n+  taken care of later by hand-coding the messager in the compiler.\n+*/\n extern __inline__ IMP\n objc_msg_lookup(id receiver, SEL op)\n {\n   if(receiver)\n-    return sarray_get(receiver->class_pointer->dtable, (size_t) op);\n+    return sarray_get(receiver->class_pointer->dtable, (size_t)(op));\n   else\n     return nil_method;\n }"}]}