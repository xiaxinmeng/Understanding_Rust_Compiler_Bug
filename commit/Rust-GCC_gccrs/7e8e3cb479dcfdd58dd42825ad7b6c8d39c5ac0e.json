{"sha": "7e8e3cb479dcfdd58dd42825ad7b6c8d39c5ac0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U4ZTNjYjQ3OWRjZmRkNThkZDQyODI1YWQ3YjZjOGQzOWM1YWMwZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-06-28T10:24:26Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-16T07:31:29Z"}, "message": "[Ada] Finalization of uninitialized object with build in place call\n\ngcc/ada/\n\n\t* exp_ch6.adb (Make_Build_In_Place_Call_In_Object_Declaration):\n\tCall Set_BIP_Initialization_Call systematically.\n\t* exp_ch7.adb (Process_Transient_In_Scope): Take\n\tBIP_Initialization_Call into account to decide where to insert\n\tthe Hook.", "tree": {"sha": "ac5dea861317ab57503b83042726bbc5cc0c0ddd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac5dea861317ab57503b83042726bbc5cc0c0ddd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e8e3cb479dcfdd58dd42825ad7b6c8d39c5ac0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e8e3cb479dcfdd58dd42825ad7b6c8d39c5ac0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e8e3cb479dcfdd58dd42825ad7b6c8d39c5ac0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e8e3cb479dcfdd58dd42825ad7b6c8d39c5ac0e/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b87042ccc5d066af9de71e215364d40959e11849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87042ccc5d066af9de71e215364d40959e11849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b87042ccc5d066af9de71e215364d40959e11849"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "1059459df45889e04e5ef9308741d2f3046c3766", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e8e3cb479dcfdd58dd42825ad7b6c8d39c5ac0e/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e8e3cb479dcfdd58dd42825ad7b6c8d39c5ac0e/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=7e8e3cb479dcfdd58dd42825ad7b6c8d39c5ac0e", "patch": "@@ -9593,7 +9593,7 @@ package body Exp_Ch6 is\n          --  which prompted the generation of the transient block. To resolve\n          --  this scenario, store the build-in-place call.\n \n-         if Scope_Is_Transient and then Node_To_Be_Wrapped = Obj_Decl then\n+         if Scope_Is_Transient then\n             Set_BIP_Initialization_Call (Obj_Def_Id, Res_Decl);\n          end if;\n "}, {"sha": "1264eebeb85ecb3b9d7a0d761276863a333971d4", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e8e3cb479dcfdd58dd42825ad7b6c8d39c5ac0e/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e8e3cb479dcfdd58dd42825ad7b6c8d39c5ac0e/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=7e8e3cb479dcfdd58dd42825ad7b6c8d39c5ac0e", "patch": "@@ -5668,10 +5668,18 @@ package body Exp_Ch7 is\n                --      <or>\n                --    Hook := Obj_Id'Unrestricted_Access;\n \n-               if Ekind (Obj_Id) in E_Constant | E_Variable\n-                 and then Present (Last_Aggregate_Assignment (Obj_Id))\n-               then\n-                  Hook_Insert := Last_Aggregate_Assignment (Obj_Id);\n+               --  Similarly if we have a build in place call: we must\n+               --  initialize Hook only after the call has happened, otherwise\n+               --  Obj_Id will not be initialized yet.\n+\n+               if Ekind (Obj_Id) in E_Constant | E_Variable then\n+                  if Present (Last_Aggregate_Assignment (Obj_Id)) then\n+                     Hook_Insert := Last_Aggregate_Assignment (Obj_Id);\n+                  elsif Present (BIP_Initialization_Call (Obj_Id)) then\n+                     Hook_Insert := BIP_Initialization_Call (Obj_Id);\n+                  else\n+                     Hook_Insert := Obj_Decl;\n+                  end if;\n \n                --  Otherwise the hook seizes the related object immediately\n "}]}