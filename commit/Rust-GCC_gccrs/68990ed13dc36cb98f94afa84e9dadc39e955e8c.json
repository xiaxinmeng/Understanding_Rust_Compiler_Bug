{"sha": "68990ed13dc36cb98f94afa84e9dadc39e955e8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg5OTBlZDEzZGMzNmNiOThmOTRhZmE4NGU5ZGFkYzM5ZTk1NWU4Yw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-29T09:09:44Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-29T09:09:44Z"}, "message": "libstdc++: Rename _UniformRandomNumberGenerator parameters\n\nThe paper P0346R1 renamed uniform random number generators to\nuniform random bit generators, to describe their purpose more\naccurately. This makes that same change in one of the relevant\nfiles (but not the others).\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/uniform_int_dist.h (uniform_int_distribution):\n\tRename _UniformRandomNumberGenerator template parameters to\n\t_UniformRandomBitGenerator, as per P0346R1.", "tree": {"sha": "1b0f71625e5928a9a23c85038f2bff88ae497d7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b0f71625e5928a9a23c85038f2bff88ae497d7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68990ed13dc36cb98f94afa84e9dadc39e955e8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68990ed13dc36cb98f94afa84e9dadc39e955e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68990ed13dc36cb98f94afa84e9dadc39e955e8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68990ed13dc36cb98f94afa84e9dadc39e955e8c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "632a2f50b8be2fe998aba28d22c30a67a0566e7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/632a2f50b8be2fe998aba28d22c30a67a0566e7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/632a2f50b8be2fe998aba28d22c30a67a0566e7b"}], "stats": {"total": 48, "additions": 22, "deletions": 26}, "files": [{"sha": "cf6ba35c675675ac85eda490716e4be487c8e7e7", "filename": "libstdc++-v3/include/bits/uniform_int_dist.h", "status": "modified", "additions": 22, "deletions": 26, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68990ed13dc36cb98f94afa84e9dadc39e955e8c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funiform_int_dist.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68990ed13dc36cb98f94afa84e9dadc39e955e8c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funiform_int_dist.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funiform_int_dist.h?ref=68990ed13dc36cb98f94afa84e9dadc39e955e8c", "patch": "@@ -184,35 +184,35 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Generating functions.\n        */\n-      template<typename _UniformRandomNumberGenerator>\n+      template<typename _UniformRandomBitGenerator>\n \tresult_type\n-\toperator()(_UniformRandomNumberGenerator& __urng)\n+\toperator()(_UniformRandomBitGenerator& __urng)\n         { return this->operator()(__urng, _M_param); }\n \n-      template<typename _UniformRandomNumberGenerator>\n+      template<typename _UniformRandomBitGenerator>\n \tresult_type\n-\toperator()(_UniformRandomNumberGenerator& __urng,\n+\toperator()(_UniformRandomBitGenerator& __urng,\n \t\t   const param_type& __p);\n \n       template<typename _ForwardIterator,\n-\t       typename _UniformRandomNumberGenerator>\n+\t       typename _UniformRandomBitGenerator>\n \tvoid\n \t__generate(_ForwardIterator __f, _ForwardIterator __t,\n-\t\t   _UniformRandomNumberGenerator& __urng)\n+\t\t   _UniformRandomBitGenerator& __urng)\n \t{ this->__generate(__f, __t, __urng, _M_param); }\n \n       template<typename _ForwardIterator,\n-\t       typename _UniformRandomNumberGenerator>\n+\t       typename _UniformRandomBitGenerator>\n \tvoid\n \t__generate(_ForwardIterator __f, _ForwardIterator __t,\n-\t\t   _UniformRandomNumberGenerator& __urng,\n+\t\t   _UniformRandomBitGenerator& __urng,\n \t\t   const param_type& __p)\n \t{ this->__generate_impl(__f, __t, __urng, __p); }\n \n-      template<typename _UniformRandomNumberGenerator>\n+      template<typename _UniformRandomBitGenerator>\n \tvoid\n \t__generate(result_type* __f, result_type* __t,\n-\t\t   _UniformRandomNumberGenerator& __urng,\n+\t\t   _UniformRandomBitGenerator& __urng,\n \t\t   const param_type& __p)\n \t{ this->__generate_impl(__f, __t, __urng, __p); }\n \n@@ -227,10 +227,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     private:\n       template<typename _ForwardIterator,\n-\t       typename _UniformRandomNumberGenerator>\n+\t       typename _UniformRandomBitGenerator>\n \tvoid\n \t__generate_impl(_ForwardIterator __f, _ForwardIterator __t,\n-\t\t\t_UniformRandomNumberGenerator& __urng,\n+\t\t\t_UniformRandomBitGenerator& __urng,\n \t\t\tconst param_type& __p);\n \n       param_type _M_param;\n@@ -265,17 +265,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     };\n \n   template<typename _IntType>\n-    template<typename _UniformRandomNumberGenerator>\n+    template<typename _UniformRandomBitGenerator>\n       typename uniform_int_distribution<_IntType>::result_type\n       uniform_int_distribution<_IntType>::\n-      operator()(_UniformRandomNumberGenerator& __urng,\n+      operator()(_UniformRandomBitGenerator& __urng,\n \t\t const param_type& __param)\n       {\n-\ttypedef typename _UniformRandomNumberGenerator::result_type\n-\t  _Gresult_type;\n-\ttypedef typename std::make_unsigned<result_type>::type __utype;\n-\ttypedef typename std::common_type<_Gresult_type, __utype>::type\n-\t  __uctype;\n+\ttypedef typename _UniformRandomBitGenerator::result_type _Gresult_type;\n+\ttypedef typename make_unsigned<result_type>::type __utype;\n+\ttypedef typename common_type<_Gresult_type, __utype>::type __uctype;\n \n \tconst __uctype __urngmin = __urng.min();\n \tconst __uctype __urngmax = __urng.max();\n@@ -351,19 +349,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   template<typename _IntType>\n     template<typename _ForwardIterator,\n-\t     typename _UniformRandomNumberGenerator>\n+\t     typename _UniformRandomBitGenerator>\n       void\n       uniform_int_distribution<_IntType>::\n       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,\n-\t\t      _UniformRandomNumberGenerator& __urng,\n+\t\t      _UniformRandomBitGenerator& __urng,\n \t\t      const param_type& __param)\n       {\n \t__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)\n-\ttypedef typename _UniformRandomNumberGenerator::result_type\n-\t  _Gresult_type;\n-\ttypedef typename std::make_unsigned<result_type>::type __utype;\n-\ttypedef typename std::common_type<_Gresult_type, __utype>::type\n-\t  __uctype;\n+\ttypedef typename _UniformRandomBitGenerator::result_type _Gresult_type;\n+\ttypedef typename make_unsigned<result_type>::type __utype;\n+\ttypedef typename common_type<_Gresult_type, __utype>::type __uctype;\n \n \tconst __uctype __urngmin = __urng.min();\n \tconst __uctype __urngmax = __urng.max();"}]}