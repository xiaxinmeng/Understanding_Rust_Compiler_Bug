{"sha": "f06ecc4bbaf059ac29c480a7de77c5132eb23c17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA2ZWNjNGJiYWYwNTlhYzI5YzQ4MGE3ZGU3N2M1MTMyZWIyM2MxNw==", "commit": {"author": {"name": "Riyadh Baghdadi", "email": "baghdadi.mr@gmail.com", "date": "2010-09-30T21:17:33Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-09-30T21:17:33Z"}, "message": "Dump each scop in a separate file.\n\n2010-08-17  Riyadh Baghdadi <baghdadi.mr@gmail.com>\n\n\t* graphite-poly.c (init_graphite_out_file): New.\n\t(init_graphite_in_file): New.\n\t(apply_poly_transforms): Updated to enable reading and writing of\n\tmultiple scop files.\n\t* toplev.c (init_asm_output): Remove graphite in/out file initialization.\n\nFrom-SVN: r164781", "tree": {"sha": "82ad581be416bb7cd12abc39c1c913b4104172ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82ad581be416bb7cd12abc39c1c913b4104172ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f06ecc4bbaf059ac29c480a7de77c5132eb23c17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06ecc4bbaf059ac29c480a7de77c5132eb23c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f06ecc4bbaf059ac29c480a7de77c5132eb23c17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06ecc4bbaf059ac29c480a7de77c5132eb23c17/comments", "author": {"login": "rbaghdadi", "id": 9944372, "node_id": "MDQ6VXNlcjk5NDQzNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9944372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbaghdadi", "html_url": "https://github.com/rbaghdadi", "followers_url": "https://api.github.com/users/rbaghdadi/followers", "following_url": "https://api.github.com/users/rbaghdadi/following{/other_user}", "gists_url": "https://api.github.com/users/rbaghdadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbaghdadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbaghdadi/subscriptions", "organizations_url": "https://api.github.com/users/rbaghdadi/orgs", "repos_url": "https://api.github.com/users/rbaghdadi/repos", "events_url": "https://api.github.com/users/rbaghdadi/events{/privacy}", "received_events_url": "https://api.github.com/users/rbaghdadi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9ae79067cae7151a068f2c7a993011beff7f568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9ae79067cae7151a068f2c7a993011beff7f568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9ae79067cae7151a068f2c7a993011beff7f568"}], "stats": {"total": 83, "additions": 81, "deletions": 2}, "files": [{"sha": "685f0d0da9b481026c60824c7b0072c2ad6ef576", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06ecc4bbaf059ac29c480a7de77c5132eb23c17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06ecc4bbaf059ac29c480a7de77c5132eb23c17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f06ecc4bbaf059ac29c480a7de77c5132eb23c17", "patch": "@@ -1,3 +1,10 @@\n+2010-09-30  Riyadh Baghdadi <baghdadi.mr@gmail.com>\n+\n+\t* graphite-poly.c (init_graphite_out_file): New.\n+\t(init_graphite_in_file): New.\n+\t(apply_poly_transforms): Updated to enable reading and writing of\n+\tmultiple scop files.\n+\n 2010-09-30  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n \t* graphite-scop-detection.c (graphite_can_represent_scev): Remove"}, {"sha": "e61bee61f955f6671c7188a39e2b7ef70e408335", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06ecc4bbaf059ac29c480a7de77c5132eb23c17/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06ecc4bbaf059ac29c480a7de77c5132eb23c17/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=f06ecc4bbaf059ac29c480a7de77c5132eb23c17", "patch": "@@ -1,3 +1,11 @@\n+2010-08-17  Riyadh Baghdadi <baghdadi.mr@gmail.com>\n+\n+\t* graphite-poly.c (init_graphite_out_file): New.\n+\t(init_graphite_in_file): New.\n+\t(apply_poly_transforms): Updated to enable reading and writing of\n+\tmultiple scop files.\n+\t* toplev.c (init_asm_output): Remove graphite in/out file initialization.\n+\n 2010-08-17  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n \t* graphite-scop-detection.c (graphite_can_represent_scev): Remove"}, {"sha": "27215e1398863b28b57203f4820d5a97a10f4301", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 66, "deletions": 2, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06ecc4bbaf059ac29c480a7de77c5132eb23c17/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06ecc4bbaf059ac29c480a7de77c5132eb23c17/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=f06ecc4bbaf059ac29c480a7de77c5132eb23c17", "patch": "@@ -683,18 +683,78 @@ graphite_read_scop_file (FILE *file, scop_p scop)\n   return transform_done;\n }\n \n+/* Initialize and return a file that will be used to write a scop.  SCOP_NUMBER\n+   is a sequential number (identifier) used to differentiate scop files.\n+   Examples of the generated file names: dump_base_name.0.graphite,\n+   dump_base_name.1.graphite, dump_base_name.2.graphite, etc.  */\n+\n+static FILE *\n+init_graphite_out_file (int scop_number)\n+{\n+  FILE *graphite_out_file;\n+  int len = strlen (dump_base_name);\n+  char *dumpname = XNEWVEC (char, len + 25);\n+  char *s_scop_number = XNEWVEC (char, 15);\n+\n+  memcpy (dumpname, dump_base_name, len + 1);\n+  strip_off_ending (dumpname, len);\n+  sprintf (s_scop_number, \".%d\", scop_number);\n+  strcat (dumpname, s_scop_number);\n+  strcat (dumpname, \".graphite\");\n+  graphite_out_file = fopen (dumpname, \"w+b\");\n+\n+  if (graphite_out_file == 0)\n+    fatal_error (\"can%'t open %s for writing: %m\", dumpname);\n+\n+  free (dumpname);\n+\n+  return graphite_out_file;\n+}\n+\n+/* Open and return a file used for scop reading.  SCOP_NUMBER is a sequential\n+   number (identifier) used to differentiate scop files.  Examples of the\n+   generated file names: dump_base_name.0.graphite, dump_base_name.1.graphite,\n+   dump_base_name.2.graphite, etc.  */\n+\n+static FILE *\n+init_graphite_in_file (int scop_number)\n+{\n+  FILE *graphite_in_file;\n+  int len = strlen (dump_base_name);\n+  char *dumpname = XNEWVEC (char, len + 25);\n+  char *s_scop_number = XNEWVEC (char, 15);\n+\n+  memcpy (dumpname, dump_base_name, len + 1);\n+  strip_off_ending (dumpname, len);\n+  sprintf (s_scop_number, \".%d\", scop_number);\n+  strcat (dumpname, s_scop_number);\n+  strcat (dumpname, \".graphite\");\n+  graphite_in_file = fopen (dumpname, \"r+b\");\n+\n+  if (graphite_in_file == 0)\n+    fatal_error (\"can%'t open %s for reading: %m\", dumpname);\n+\n+  free (dumpname);\n+\n+  return graphite_in_file;\n+}\n+\n /* Apply graphite transformations to all the basic blocks of SCOP.  */\n \n bool\n apply_poly_transforms (scop_p scop)\n {\n   bool transform_done = false;\n+  FILE *graphite_file;\n+  static size_t file_scop_number = 0;\n \n   /* This feature is only enabled in the Graphite branch.  */\n   if (0)\n     {\n-      transform_done |= graphite_read_scop_file (dump_file, scop);\n+      graphite_file = init_graphite_in_file (file_scop_number);\n+      transform_done |= graphite_read_scop_file (graphite_file, scop);\n       gcc_assert (graphite_legal_transform (scop));\n+      file_scop_number++;\n     }\n \n   /* Generate code even if we did not apply any real transformation.\n@@ -721,7 +781,11 @@ apply_poly_transforms (scop_p scop)\n \n   /* This feature is only enabled in the Graphite branch.  */\n   if (0)\n-    print_scop (dump_file, scop, 1);\n+    {\n+      graphite_file = init_graphite_out_file (file_scop_number);\n+      print_scop (graphite_file, scop, 1);\n+      file_scop_number++;\n+    }\n \n   return transform_done;\n }"}]}