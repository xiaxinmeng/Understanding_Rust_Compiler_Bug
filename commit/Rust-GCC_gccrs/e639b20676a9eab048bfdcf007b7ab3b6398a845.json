{"sha": "e639b20676a9eab048bfdcf007b7ab3b6398a845", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYzOWIyMDY3NmE5ZWFiMDQ4YmZkY2YwMDdiN2FiM2I2Mzk4YTg0NQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-11-10T16:06:47Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-11-10T16:06:47Z"}, "message": "Fix PR45971: do not predicate condition phi nodes that are scev analyzable.\n\n2010-11-10  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR tree-optimization/45971\n\t* tree-if-conv.c (predicate_scalar_phi): Do not generate a COND_EXPR\n\tfor phi nodes analyzable by scev.\n\n\t* gcc.dg/vect/O3-pr45971.c: New.\n\nFrom-SVN: r166544", "tree": {"sha": "ed8ed8365eea43b3d72b37435d34a18cb7900de2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed8ed8365eea43b3d72b37435d34a18cb7900de2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e639b20676a9eab048bfdcf007b7ab3b6398a845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e639b20676a9eab048bfdcf007b7ab3b6398a845", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e639b20676a9eab048bfdcf007b7ab3b6398a845", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e639b20676a9eab048bfdcf007b7ab3b6398a845/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59e0c6b70fdb0c9683597f470d8f795b59812aa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e0c6b70fdb0c9683597f470d8f795b59812aa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59e0c6b70fdb0c9683597f470d8f795b59812aa8"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "09dd6ccd0c97eb531d29cdc493e98c3a22a68560", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e639b20676a9eab048bfdcf007b7ab3b6398a845/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e639b20676a9eab048bfdcf007b7ab3b6398a845/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e639b20676a9eab048bfdcf007b7ab3b6398a845", "patch": "@@ -1,3 +1,9 @@\n+2010-11-10  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/45971\n+\t* tree-if-conv.c (predicate_scalar_phi): Do not generate a COND_EXPR\n+\tfor phi nodes analyzable by scev.\n+\n 2010-11-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/44964"}, {"sha": "e8fe4c48c13386e2f171a23c96bf5ac0ae97bcd6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e639b20676a9eab048bfdcf007b7ab3b6398a845/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e639b20676a9eab048bfdcf007b7ab3b6398a845/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e639b20676a9eab048bfdcf007b7ab3b6398a845", "patch": "@@ -1,3 +1,8 @@\n+2010-11-10  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/45971\n+\t* gcc.dg/vect/O3-pr45971.c: New.\n+\n 2010-11-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/44964"}, {"sha": "1b7c65c806662bdcb62ad9d9bcdf936b9c817bef", "filename": "gcc/testsuite/gcc.dg/vect/O3-pr45971.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e639b20676a9eab048bfdcf007b7ab3b6398a845/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO3-pr45971.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e639b20676a9eab048bfdcf007b7ab3b6398a845/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO3-pr45971.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO3-pr45971.c?ref=e639b20676a9eab048bfdcf007b7ab3b6398a845", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+void\n+foo (int *x, int *y)\n+{\n+  int i;\n+  for (i = 0; i < 11; i++)\n+    y[i] = (x[i] == 1) ? i + 1 : -(i + 1);\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "fc6584584c14763e6fcccb2ba025369967f61452", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e639b20676a9eab048bfdcf007b7ab3b6398a845/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e639b20676a9eab048bfdcf007b7ab3b6398a845/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=e639b20676a9eab048bfdcf007b7ab3b6398a845", "patch": "@@ -1224,7 +1224,7 @@ predicate_scalar_phi (gimple phi, tree cond,\n {\n   gimple new_stmt;\n   basic_block bb;\n-  tree rhs, res, arg;\n+  tree rhs, res, arg, scev;\n \n   gcc_assert (gimple_code (phi) == GIMPLE_PHI\n \t      && gimple_phi_num_args (phi) == 2);\n@@ -1236,8 +1236,12 @@ predicate_scalar_phi (gimple phi, tree cond,\n \n   bb = gimple_bb (phi);\n \n-  arg = degenerate_phi_result (phi);\n-  if (arg)\n+  if ((arg = degenerate_phi_result (phi))\n+      || ((scev = analyze_scalar_evolution (gimple_bb (phi)->loop_father,\n+\t\t\t\t\t    res))\n+\t  && !chrec_contains_undetermined (scev)\n+\t  && scev != res\n+\t  && (arg = gimple_phi_arg_def (phi, 0))))\n     rhs = arg;\n   else\n     {"}]}