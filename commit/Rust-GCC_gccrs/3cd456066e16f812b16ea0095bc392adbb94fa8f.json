{"sha": "3cd456066e16f812b16ea0095bc392adbb94fa8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NkNDU2MDY2ZTE2ZjgxMmIxNmVhMDA5NWJjMzkyYWRiYjk0ZmE4Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-05-17T21:24:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-05-17T21:24:12Z"}, "message": "(store_split_bit_field): Don't assume the alignment of VALUE is the\nsame as the record.\n\nFrom-SVN: r12017", "tree": {"sha": "c53d1a128f09f0e27d67b8ca83f374ea2e6ce629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c53d1a128f09f0e27d67b8ca83f374ea2e6ce629"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cd456066e16f812b16ea0095bc392adbb94fa8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd456066e16f812b16ea0095bc392adbb94fa8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cd456066e16f812b16ea0095bc392adbb94fa8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd456066e16f812b16ea0095bc392adbb94fa8f/comments", "author": null, "committer": null, "parents": [{"sha": "8a5d3064fb8b6f15ff667623f9e16b6eac8d5cbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a5d3064fb8b6f15ff667623f9e16b6eac8d5cbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a5d3064fb8b6f15ff667623f9e16b6eac8d5cbe"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "be27f855ae84011130696f2f85cc2a773e5cac93", "filename": "gcc/expmed.c", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd456066e16f812b16ea0095bc392adbb94fa8f/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd456066e16f812b16ea0095bc392adbb94fa8f/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=3cd456066e16f812b16ea0095bc392adbb94fa8f", "patch": "@@ -781,10 +781,19 @@ store_split_bit_field (op0, bitsize, bitpos, value, align)\n \t  else\n \t    /* The args are chosen so that the last part includes the\n \t       lsb.  Give extract_bit_field the value it needs (with\n-\t       endianness compensation) to fetch the piece we want.  */\n-\t    part = extract_fixed_bit_field (word_mode, value, 0, thissize,\n-\t\t\t\t\t    total_bits - bitsize + bitsdone,\n-\t\t\t\t\t    NULL_RTX, 1, align);\n+\t       endianness compensation) to fetch the piece we want.\n+\n+\t       ??? We have no idea what the alignment of VALUE is, so\n+\t       we have to use a guess.  */\n+\t    part\n+\t      = extract_fixed_bit_field\n+\t\t(word_mode, value, 0, thissize,\n+\t\t total_bits - bitsize + bitsdone, NULL_RTX, 1,\n+\t\t GET_MODE (value) == VOIDmode\n+\t\t ? UNITS_PER_WORD\n+\t\t : (GET_MODE (value) == BLKmode\n+\t\t    ? 1\n+\t\t    : GET_MODE_ALIGNMENT (GET_MODE (value)) / BITS_PER_UNIT));\n \t}\n       else\n \t{\n@@ -794,8 +803,14 @@ store_split_bit_field (op0, bitsize, bitpos, value, align)\n \t\t\t     >> bitsdone)\n \t\t\t    & (((HOST_WIDE_INT) 1 << thissize) - 1));\n \t  else\n-\t    part = extract_fixed_bit_field (word_mode, value, 0, thissize,\n-\t\t\t\t\t    bitsdone, NULL_RTX, 1, align);\n+\t    part\n+\t      = extract_fixed_bit_field\n+\t\t(word_mode, value, 0, thissize, bitsdone, NULL_RTX, 1,\n+\t\t GET_MODE (value) == VOIDmode\n+\t\t ? UNITS_PER_WORD\n+\t\t : (GET_MODE (value) == BLKmode\n+\t\t    ? 1\n+\t\t    : GET_MODE_ALIGNMENT (GET_MODE (value)) / BITS_PER_UNIT));\n \t}\n \n       /* If OP0 is a register, then handle OFFSET here."}]}