{"sha": "78a8b16bad41d3d358ea1fe9e5c44d9270a377bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhhOGIxNmJhZDQxZDNkMzU4ZWExZmU5ZTVjNDRkOTI3MGEzNzdiZg==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-03-04T19:09:34Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-03-04T19:09:34Z"}, "message": "In gcc/testsuite/: 2011-03-04 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/testsuite/:\n2011-03-04  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc.dg/property/property-encoding-1.m: Tidied up testcase.\n\t* obj-c++.dg/property/property-encoding-1.mm: Likewise.\n\nFrom-SVN: r170684", "tree": {"sha": "8fb0ad1ab0297d7ed5e1f723043edf97ec6923b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fb0ad1ab0297d7ed5e1f723043edf97ec6923b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78a8b16bad41d3d358ea1fe9e5c44d9270a377bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a8b16bad41d3d358ea1fe9e5c44d9270a377bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78a8b16bad41d3d358ea1fe9e5c44d9270a377bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a8b16bad41d3d358ea1fe9e5c44d9270a377bf/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "246a2730176b7ad6bc24e9397cf41ccda733f460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/246a2730176b7ad6bc24e9397cf41ccda733f460", "html_url": "https://github.com/Rust-GCC/gccrs/commit/246a2730176b7ad6bc24e9397cf41ccda733f460"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "06b9e1d61a856998f5ace77d771d76f632a7a6a1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a8b16bad41d3d358ea1fe9e5c44d9270a377bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a8b16bad41d3d358ea1fe9e5c44d9270a377bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=78a8b16bad41d3d358ea1fe9e5c44d9270a377bf", "patch": "@@ -1,3 +1,8 @@\n+2011-03-04  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc.dg/property/property-encoding-1.m: Tidied up testcase.\n+\t* obj-c++.dg/property/property-encoding-1.mm: Likewise.\n+\n 2011-03-04  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/gnu-api-2-property.m: Added tests for property_getName()"}, {"sha": "dc12c3137b93f2de2ec816b1b22ebbf55fd43e0b", "filename": "gcc/testsuite/obj-c++.dg/property/property-encoding-1.mm", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a8b16bad41d3d358ea1fe9e5c44d9270a377bf/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-encoding-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a8b16bad41d3d358ea1fe9e5c44d9270a377bf/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-encoding-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-encoding-1.mm?ref=78a8b16bad41d3d358ea1fe9e5c44d9270a377bf", "patch": "@@ -89,22 +89,21 @@ void error (objc_property_t p)\n }\n \n /* Concatenate 3 strings and return the result.  */\n-char *concat (char *a, char *b, char *c)\n+char *concat (const char *a, const char *b, const char *c)\n {\n   /* We happily leak memory here.  This is a test.  */\n-  char *x = malloc (sizeof (char) * 128);\n+  char *x = (char *)malloc (sizeof (char) * 128);\n   snprintf (x, 128, \"%s%s%s\", a, b, c);\n   return x;\n }\n \n #endif\n \n-int main(int argc, char **args)\n+int main (void)\n {\n #ifdef __OBJC2__\n   Class c = objc_getClass (\"MySubClass\");\n   objc_property_t p;\n-  const char *expected_result;\n \n   p = class_getProperty (c, \"char_property\");\n   /* Usually we expect \"Tc,Vchar_property\", but if a char is of"}, {"sha": "dc12c3137b93f2de2ec816b1b22ebbf55fd43e0b", "filename": "gcc/testsuite/objc.dg/property/property-encoding-1.m", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a8b16bad41d3d358ea1fe9e5c44d9270a377bf/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fproperty-encoding-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a8b16bad41d3d358ea1fe9e5c44d9270a377bf/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fproperty-encoding-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fproperty-encoding-1.m?ref=78a8b16bad41d3d358ea1fe9e5c44d9270a377bf", "patch": "@@ -89,22 +89,21 @@ void error (objc_property_t p)\n }\n \n /* Concatenate 3 strings and return the result.  */\n-char *concat (char *a, char *b, char *c)\n+char *concat (const char *a, const char *b, const char *c)\n {\n   /* We happily leak memory here.  This is a test.  */\n-  char *x = malloc (sizeof (char) * 128);\n+  char *x = (char *)malloc (sizeof (char) * 128);\n   snprintf (x, 128, \"%s%s%s\", a, b, c);\n   return x;\n }\n \n #endif\n \n-int main(int argc, void **args)\n+int main (void)\n {\n #ifdef __OBJC2__\n   Class c = objc_getClass (\"MySubClass\");\n   objc_property_t p;\n-  const char *expected_result;\n \n   p = class_getProperty (c, \"char_property\");\n   /* Usually we expect \"Tc,Vchar_property\", but if a char is of"}]}