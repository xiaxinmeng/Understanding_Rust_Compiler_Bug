{"sha": "bd066fbfb974eea649cb4828850d4777acb06f58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQwNjZmYmZiOTc0ZWVhNjQ5Y2I0ODI4ODUwZDQ3NzdhY2IwNmY1OA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-28T23:26:17Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-28T23:26:17Z"}, "message": "Initial revision\n\nFrom-SVN: r19482", "tree": {"sha": "fa89274709d38025d472d4feb283f89a64003f8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa89274709d38025d472d4feb283f89a64003f8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd066fbfb974eea649cb4828850d4777acb06f58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd066fbfb974eea649cb4828850d4777acb06f58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd066fbfb974eea649cb4828850d4777acb06f58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd066fbfb974eea649cb4828850d4777acb06f58/comments", "author": null, "committer": null, "parents": [{"sha": "7342b050ae24d051f33dc3d1999ba850df6c1620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7342b050ae24d051f33dc3d1999ba850df6c1620", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7342b050ae24d051f33dc3d1999ba850df6c1620"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "cacb38e479f8553cc97425f611845a34fab98647", "filename": "gcc/intl/hash-string.h", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd066fbfb974eea649cb4828850d4777acb06f58/gcc%2Fintl%2Fhash-string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd066fbfb974eea649cb4828850d4777acb06f58/gcc%2Fintl%2Fhash-string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2Fhash-string.h?ref=bd066fbfb974eea649cb4828850d4777acb06f58", "patch": "@@ -0,0 +1,59 @@\n+/* Implements a string hashing function.\n+   Copyright (C) 1995, 1997 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU Library General Public\n+   License along with the GNU C Library; see the file COPYING.LIB.  If not,\n+   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n+   Boston, MA 02111-1307, USA.  */\n+\n+/* @@ end of prolog @@ */\n+\n+#ifndef PARAMS\n+# if __STDC__\n+#  define PARAMS(Args) Args\n+# else\n+#  define PARAMS(Args) ()\n+# endif\n+#endif\n+\n+/* We assume to have `unsigned long int' value with at least 32 bits.  */\n+#define HASHWORDBITS 32\n+\n+\n+/* Defines the so called `hashpjw' function by P.J. Weinberger\n+   [see Aho/Sethi/Ullman, COMPILERS: Principles, Techniques and Tools,\n+   1986, 1987 Bell Telephone Laboratories, Inc.]  */\n+static unsigned long hash_string PARAMS ((const char *__str_param));\n+\n+static inline unsigned long\n+hash_string (str_param)\n+     const char *str_param;\n+{\n+  unsigned long int hval, g;\n+  const char *str = str_param;\n+\n+  /* Compute the hash value for the given string.  */\n+  hval = 0;\n+  while (*str != '\\0')\n+    {\n+      hval <<= 4;\n+      hval += (unsigned long) *str++;\n+      g = hval & ((unsigned long) 0xf << (HASHWORDBITS - 4));\n+      if (g != 0)\n+\t{\n+\t  hval ^= g >> (HASHWORDBITS - 8);\n+\t  hval ^= g;\n+\t}\n+    }\n+  return hval;\n+}"}]}