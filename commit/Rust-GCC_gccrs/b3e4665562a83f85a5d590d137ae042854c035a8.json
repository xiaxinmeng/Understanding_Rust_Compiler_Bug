{"sha": "b3e4665562a83f85a5d590d137ae042854c035a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNlNDY2NTU2MmE4M2Y4NWE1ZDU5MGQxMzdhZTA0Mjg1NGMwMzVhOA==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-12-03T15:46:57Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-12-03T15:46:57Z"}, "message": "Empty the redirect_edge_var_map after each pass\n\n\tAlan Lawrence  <alan.lawrence@arm.com>\n\tRichard Biener  <richard.guenther@gmail.com>\n\n\t* cfgexpand.c (pass_expand::execute): Replace call to\n\tredirect_edge_var_map_destroy with redirect_edge_var_map_empty.\n\t* tree-ssa.c (delete_tree_ssa): Likewise.\n\t* function.c (set_cfun): Call redirect_edge_var_map_empty.\n\t* passes.c (execute_one_ipa_transform_pass, execute_one_pass): Likewise.\n\t* tree-ssa.h (redirect_edge_var_map_destroy): Remove.\n\t(redirect_edge_var_map_empty): New.\n\t* tree-ssa.c (redirect_edge_var_map_destroy): Remove.\n\t(redirect_edge_var_map_empty): New.\n\nCo-Authored-By: Richard Biener <richard.guenther@gmail.com>\n\nFrom-SVN: r231232", "tree": {"sha": "a53c2da1b8f2239b2465b32c4052b33f45ae7e76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a53c2da1b8f2239b2465b32c4052b33f45ae7e76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3e4665562a83f85a5d590d137ae042854c035a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e4665562a83f85a5d590d137ae042854c035a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3e4665562a83f85a5d590d137ae042854c035a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e4665562a83f85a5d590d137ae042854c035a8/comments", "author": null, "committer": null, "parents": [{"sha": "46bd784bfb29e94841b7d2702277d77445a7a47f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46bd784bfb29e94841b7d2702277d77445a7a47f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46bd784bfb29e94841b7d2702277d77445a7a47f"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "de8ae8a40c9fea53994520cba01a82887433a052", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e4665562a83f85a5d590d137ae042854c035a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e4665562a83f85a5d590d137ae042854c035a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3e4665562a83f85a5d590d137ae042854c035a8", "patch": "@@ -1,3 +1,16 @@\n+2015-12-03  Alan Lawrence  <alan.lawrence@arm.com>\n+\t    Richard Biener  <richard.guenther@gmail.com>\n+\n+\t* cfgexpand.c (pass_expand::execute): Replace call to\n+\tredirect_edge_var_map_destroy with redirect_edge_var_map_empty.\n+\t* tree-ssa.c (delete_tree_ssa): Likewise.\n+\t* function.c (set_cfun): Call redirect_edge_var_map_empty.\n+\t* passes.c (execute_one_ipa_transform_pass, execute_one_pass): Likewise.\n+\t* tree-ssa.h (redirect_edge_var_map_destroy): Remove.\n+\t(redirect_edge_var_map_empty): New.\n+\t* tree-ssa.c (redirect_edge_var_map_destroy): Remove.\n+\t(redirect_edge_var_map_empty): New.\n+\n 2015-12-03  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/68599"}, {"sha": "0cf417270e956ab9c3888c7d398ebcdf5fe33ee3", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e4665562a83f85a5d590d137ae042854c035a8/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e4665562a83f85a5d590d137ae042854c035a8/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=b3e4665562a83f85a5d590d137ae042854c035a8", "patch": "@@ -6294,7 +6294,7 @@ pass_expand::execute (function *fun)\n   expand_phi_nodes (&SA);\n \n   /* Release any stale SSA redirection data.  */\n-  redirect_edge_var_map_destroy ();\n+  redirect_edge_var_map_empty ();\n \n   /* Register rtl specific functions for cfg.  */\n   rtl_register_cfg_hooks ();"}, {"sha": "e4528655917d81d975bf5d650f961fbaf467a99d", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e4665562a83f85a5d590d137ae042854c035a8/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e4665562a83f85a5d590d137ae042854c035a8/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=b3e4665562a83f85a5d590d137ae042854c035a8", "patch": "@@ -75,6 +75,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-chkp.h\"\n #include \"rtl-chkp.h\"\n #include \"tree-dfa.h\"\n+#include \"tree-ssa.h\"\n \n /* So we can assign to cfun in this file.  */\n #undef cfun\n@@ -4798,6 +4799,7 @@ set_cfun (struct function *new_cfun)\n     {\n       cfun = new_cfun;\n       invoke_set_current_function_hook (new_cfun ? new_cfun->decl : NULL_TREE);\n+      redirect_edge_var_map_empty ();\n     }\n }\n "}, {"sha": "ba9bfc276b193099eb4a99cc6b4c7c9afd03568e", "filename": "gcc/passes.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e4665562a83f85a5d590d137ae042854c035a8/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e4665562a83f85a5d590d137ae042854c035a8/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=b3e4665562a83f85a5d590d137ae042854c035a8", "patch": "@@ -2218,6 +2218,7 @@ execute_one_ipa_transform_pass (struct cgraph_node *node,\n   pass_fini_dump_file (pass);\n \n   current_pass = NULL;\n+  redirect_edge_var_map_empty ();\n \n   /* Signal this is a suitable GC collection point.  */\n   if (!(todo_after & TODO_do_not_ggc_collect))\n@@ -2370,6 +2371,7 @@ execute_one_pass (opt_pass *pass)\n \t\t|| pass->type != RTL_PASS);\n \n   current_pass = NULL;\n+  redirect_edge_var_map_empty ();\n \n   if (todo_after & TODO_discard_function)\n     {"}, {"sha": "ddc7a657cbdffe2d99fd41386ad9cb82fbdf70fe", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e4665562a83f85a5d590d137ae042854c035a8/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e4665562a83f85a5d590d137ae042854c035a8/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=b3e4665562a83f85a5d590d137ae042854c035a8", "patch": "@@ -119,10 +119,10 @@ redirect_edge_var_map_vector (edge e)\n /* Clear the edge variable mappings.  */\n \n void\n-redirect_edge_var_map_destroy (void)\n+redirect_edge_var_map_empty (void)\n {\n-  delete edge_var_maps;\n-  edge_var_maps = NULL;\n+  if (edge_var_maps)\n+    edge_var_maps->empty ();\n }\n \n \n@@ -1128,7 +1128,7 @@ delete_tree_ssa (struct function *fn)\n   fn->gimple_df = NULL;\n \n   /* We no longer need the edge variable maps.  */\n-  redirect_edge_var_map_destroy ();\n+  redirect_edge_var_map_empty ();\n }\n \n /* Return true if EXPR is a useless type conversion, otherwise return"}, {"sha": "d33eb9c82fe25a0d7dd13126ce137c8aa9922c9f", "filename": "gcc/tree-ssa.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e4665562a83f85a5d590d137ae042854c035a8/gcc%2Ftree-ssa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e4665562a83f85a5d590d137ae042854c035a8/gcc%2Ftree-ssa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.h?ref=b3e4665562a83f85a5d590d137ae042854c035a8", "patch": "@@ -35,7 +35,7 @@ extern void redirect_edge_var_map_add (edge, tree, tree, source_location);\n extern void redirect_edge_var_map_clear (edge);\n extern void redirect_edge_var_map_dup (edge, edge);\n extern vec<edge_var_map> *redirect_edge_var_map_vector (edge);\n-extern void redirect_edge_var_map_destroy (void);\n+extern void redirect_edge_var_map_empty (void);\n extern edge ssa_redirect_edge (edge, basic_block);\n extern void flush_pending_stmts (edge);\n extern void gimple_replace_ssa_lhs (gimple *, tree);"}]}