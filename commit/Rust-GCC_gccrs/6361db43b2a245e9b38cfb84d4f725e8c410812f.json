{"sha": "6361db43b2a245e9b38cfb84d4f725e8c410812f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM2MWRiNDNiMmEyNDVlOWIzOGNmYjg0ZDRmNzI1ZThjNDEwODEyZg==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-16T09:56:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-16T09:56:46Z"}, "message": "[multiple changes]\n\n2017-11-16  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Process_Subtype): If the subtype indication does not\n\tsyntactically denote a type, return Any_Type to prevent subsequent\n\tcompiler crashes or infinite loops.\n\n2017-11-16  Steve Baird  <baird@adacore.com>\n\n\t* lib-writ.adb: Fix bug which causes Program_Error to be raised in some\n\tcases when writing out a .ali file when a Rename_Pragma pragma is in\n\teffect.\n\t* lib-writ.adb (Write_Unit_Information): Replace call to\n\tPragma_Name_Unmapped with call to Pragma_Name.\n\n2017-11-16  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_elab.adb: Minor typo fixes.\n\n2017-11-16  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_res.adb (Resolve_Allocator): Correct warning messages and make\n\tthem more explicit.\n\nFrom-SVN: r254803", "tree": {"sha": "9b31fcde99b84700cb1395608bae6c4441c52b4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b31fcde99b84700cb1395608bae6c4441c52b4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6361db43b2a245e9b38cfb84d4f725e8c410812f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6361db43b2a245e9b38cfb84d4f725e8c410812f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6361db43b2a245e9b38cfb84d4f725e8c410812f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6361db43b2a245e9b38cfb84d4f725e8c410812f/comments", "author": null, "committer": null, "parents": [{"sha": "8dce7371d32ee41acc6b154dedcbc35ce57bd915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dce7371d32ee41acc6b154dedcbc35ce57bd915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dce7371d32ee41acc6b154dedcbc35ce57bd915"}], "stats": {"total": 87, "additions": 52, "deletions": 35}, "files": [{"sha": "58291deed8c5f27cc6d9a874d986f05a43f08bcb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6361db43b2a245e9b38cfb84d4f725e8c410812f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6361db43b2a245e9b38cfb84d4f725e8c410812f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6361db43b2a245e9b38cfb84d4f725e8c410812f", "patch": "@@ -1,3 +1,26 @@\n+2017-11-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Process_Subtype): If the subtype indication does not\n+\tsyntactically denote a type, return Any_Type to prevent subsequent\n+\tcompiler crashes or infinite loops.\n+\n+2017-11-16  Steve Baird  <baird@adacore.com>\n+\n+\t* lib-writ.adb: Fix bug which causes Program_Error to be raised in some\n+\tcases when writing out a .ali file when a Rename_Pragma pragma is in\n+\teffect.\n+\t* lib-writ.adb (Write_Unit_Information): Replace call to\n+\tPragma_Name_Unmapped with call to Pragma_Name.\n+\n+2017-11-16  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_elab.adb: Minor typo fixes.\n+\n+2017-11-16  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Allocator): Correct warning messages and make\n+\tthem more explicit.\n+\n 2017-11-16  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* atree.ads (Nkind_In): Add 10 and 11 parameter versions."}, {"sha": "1ee329ee7f1a890e3d1b562d87a0ec6ebb80f77c", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6361db43b2a245e9b38cfb84d4f725e8c410812f/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6361db43b2a245e9b38cfb84d4f725e8c410812f/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=6361db43b2a245e9b38cfb84d4f725e8c410812f", "patch": "@@ -694,7 +694,7 @@ package body Lib.Writ is\n                   Write_Info_Initiate ('N');\n                   Write_Info_Char (' ');\n \n-                  case Pragma_Name_Unmapped (N) is\n+                  case Pragma_Name (N) is\n                      when Name_Annotate =>\n                         C := 'A';\n                      when Name_Comment =>"}, {"sha": "5ff3ed12215efe812c78f741a0de3326f28f7606", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6361db43b2a245e9b38cfb84d4f725e8c410812f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6361db43b2a245e9b38cfb84d4f725e8c410812f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=6361db43b2a245e9b38cfb84d4f725e8c410812f", "patch": "@@ -21338,6 +21338,16 @@ package body Sem_Ch3 is\n \n       if Nkind (S) /= N_Subtype_Indication then\n          Find_Type (S);\n+\n+         --  No way to proceed if the subtype indication is malformed.\n+         --  This will happen for example when the subtype indication in\n+         --  an object declaration is missing altogether and the expression\n+         --  is analyzed as if it were that indication.\n+\n+         if not Is_Entity_Name (S) then\n+            return Any_Type;\n+         end if;\n+\n          Check_Incomplete (S);\n          P := Parent (S);\n "}, {"sha": "1217a2cc688a00d3d88a4a9a7dc4677fee2b8be3", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6361db43b2a245e9b38cfb84d4f725e8c410812f/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6361db43b2a245e9b38cfb84d4f725e8c410812f/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=6361db43b2a245e9b38cfb84d4f725e8c410812f", "patch": "@@ -775,7 +775,7 @@ package body Sem_Elab is\n    --  Obtain the hash value of entity Key\n \n    Early_Call_Regions_In_Use : Boolean := False;\n-   --  This flag flag determines whether table Early_Call_Regions contains at\n+   --  This flag determines whether table Early_Call_Regions contains at least\n    --  least one key/value pair.\n \n    Early_Call_Regions_No_Element : constant Node_Id := Empty;\n@@ -953,7 +953,7 @@ package body Sem_Elab is\n \n    procedure Check_SPARK_Scenario (N : Node_Id);\n    pragma Inline (Check_SPARK_Scenario);\n-   --  Top level dispatcher for verifying SPARK scenarios which are not always\n+   --  Top-level dispatcher for verifying SPARK scenarios which are not always\n    --  executable during elaboration but still need elaboration-related checks.\n \n    procedure Check_SPARK_Refined_State_Pragma (N : Node_Id);\n@@ -1463,7 +1463,7 @@ package body Sem_Elab is\n       --  Perform ABE checks and diagnostics for task activation call Call\n       --  which activates task Obj_Id. Call_Attrs are the attributes of the\n       --  activation call. Task_Attrs are the attributes of the task type.\n-      --  The flags should be set when the processing was initated as follows:\n+      --  The flags should be set when the processing was initiated as follows:\n       --\n       --    In_Init_Cond   - initial condition procedure\n       --    In_Partial_Fin - partial finalization procedure\n@@ -2274,7 +2274,7 @@ package body Sem_Elab is\n       end loop;\n \n       --  Examine each SPARK scenario saved during the Recording phase which\n-      --  isnot necessarily executable during elaboration, but still requires\n+      --  is not necessarily executable during elaboration, but still requires\n       --  elaboration-related checks.\n \n       for Index in SPARK_Scenarios.First .. SPARK_Scenarios.Last loop\n@@ -2602,8 +2602,8 @@ package body Sem_Elab is\n          --  The suggestion applies only when the subprogram body resides in a\n          --  compilation package body, and a pragma Elaborate_Body would allow\n          --  for the node to appear in the early call region of the subprogram\n-         --  body. This implies that all code from the subprogram body upto the\n-         --  node is preelaborable.\n+         --  body. This implies that all code from the subprogram body up to\n+         --  the node is preelaborable.\n \n          if Nkind (Unt) = N_Package_Body then\n \n@@ -2618,7 +2618,7 @@ package body Sem_Elab is\n                  Assume_Elab_Body => True,\n                  Skip_Memoization => True);\n \n-            --  If the node appears within the early call region assuming that\n+            --  If the node appears within the early call region, assuming that\n             --  the package spec carries pragma Elaborate_Body, then it is safe\n             --  to suggest the pragma.\n "}, {"sha": "84f19a7a8edada6544468ccd0c6e587e66d75b13", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 11, "deletions": 27, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6361db43b2a245e9b38cfb84d4f725e8c410812f/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6361db43b2a245e9b38cfb84d4f725e8c410812f/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=6361db43b2a245e9b38cfb84d4f725e8c410812f", "patch": "@@ -5156,32 +5156,14 @@ package body Sem_Res is\n                --  of coextensions properly so let's at least warn the user\n                --  about it.\n \n-               if Is_Controlled_Active (Desig_T) then\n-                  if Is_Controlled_Active\n-                       (Defining_Identifier\n-                         (Parent (Associated_Node_For_Itype (Typ))))\n-                  then\n-                     Error_Msg_N\n-                       (\"??coextension will not be finalized when its \"\n-                        & \"associated owner is finalized\", N);\n-                  else\n-                     Error_Msg_N\n-                       (\"??coextension will not be finalized when its \"\n-                        & \"associated owner is deallocated\", N);\n-                  end if;\n+               if Is_Controlled (Desig_T) then\n+                  Error_Msg_N\n+                    (\"??coextension will not be finalized when its \"\n+                     & \"associated owner is deallocated or finalized\", N);\n                else\n-                  if Is_Controlled_Active\n-                       (Defining_Identifier\n-                          (Parent (Associated_Node_For_Itype (Typ))))\n-                  then\n-                     Error_Msg_N\n-                       (\"??coextension will not be deallocated when \"\n-                        & \"its associated owner is finalized\", N);\n-                  else\n-                     Error_Msg_N\n-                       (\"??coextension will not be deallocated when \"\n-                        & \"its associated owner is deallocated\", N);\n-                  end if;\n+                  Error_Msg_N\n+                    (\"??coextension will not be deallocated when its \"\n+                     & \"associated owner is deallocated\", N);\n                end if;\n             end if;\n \n@@ -5200,8 +5182,10 @@ package body Sem_Res is\n               and then Is_Controlled_Active (Desig_T)\n             then\n                Error_Msg_N\n-                 (\"??anonymous access-to-controlled object will be finalized \"\n-                  & \"when its enclosing unit goes out of scope\", N);\n+                 (\"??object designated by anonymous access object might not \"\n+                  & \"be finalized until its enclosing library unit goes out \"\n+                  & \"of scope\", N);\n+               Error_Msg_N (\"\\use named access type instead\", N);\n             end if;\n          end if;\n       end if;"}]}