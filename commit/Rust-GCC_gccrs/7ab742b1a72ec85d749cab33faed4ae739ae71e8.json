{"sha": "7ab742b1a72ec85d749cab33faed4ae739ae71e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FiNzQyYjFhNzJlYzg1ZDc0OWNhYjMzZmFlZDRhZTczOWFlNzFlOA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-10-01T23:34:31Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-10-01T23:34:31Z"}, "message": "entered into RCS\n\nFrom-SVN: r5554", "tree": {"sha": "2ee380b39d6dbba7cfdfb183d85bc2f69de1ea9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ee380b39d6dbba7cfdfb183d85bc2f69de1ea9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ab742b1a72ec85d749cab33faed4ae739ae71e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab742b1a72ec85d749cab33faed4ae739ae71e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ab742b1a72ec85d749cab33faed4ae739ae71e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab742b1a72ec85d749cab33faed4ae739ae71e8/comments", "author": null, "committer": null, "parents": [{"sha": "1a78c1015f592b9a4fc2a99729c0f2ff976b6eee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a78c1015f592b9a4fc2a99729c0f2ff976b6eee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a78c1015f592b9a4fc2a99729c0f2ff976b6eee"}], "stats": {"total": 112, "additions": 112, "deletions": 0}, "files": [{"sha": "ca02de142840183c9c2fb28210278c1b66c83e19", "filename": "gcc/README.APOLLO", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab742b1a72ec85d749cab33faed4ae739ae71e8/gcc%2FREADME.APOLLO", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab742b1a72ec85d749cab33faed4ae739ae71e8/gcc%2FREADME.APOLLO", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME.APOLLO?ref=7ab742b1a72ec85d749cab33faed4ae739ae71e8", "patch": "@@ -0,0 +1,112 @@\n+README.apollo\n+\n+Building GCC 2.0 for 680x0 based Apollo systems requires the GNU\n+assembler (GAS) version 1.38.1, with John Vasta's patches applied.\n+\n+If you haven't done so yet, get `gas-1.38.1.tar.Z' from your favourite\n+GNU distribution site.  Furthermore, get `apollo-gas-1.38.1.diffs'\n+from `labrea.stanford.edu:/pub/gnu', apply the patches, compile and\n+install gas (under the name as).  This should go through without any\n+problems.\n+\n+After switching into the BSD environment, you can configure GCC 2.0\n+with the command \n+\n+% ./configure m68k-apollo-bsd\n+\n+The Apollo's `/usr/include/setjmp.h' uses a nonstandard `#options()'\n+construct.  You should create a local copy of this file and remove\n+these constructs from the declarations of SIGSETJMP and SIGLONGJMP.\n+\n+The Apollo's `/usr/include/sys/types.h' (BSD Version) doesn't allow\n+to test for the definition of `size_t'.  This should be fixed by\n+\n+  #ifndef _SIZE_T\n+  #define _SIZE_T\n+  typedef\tlong\tsize_t;\n+  #endif\n+\n+The script `patch-apollo-includes' fixes these two problems, but does\n+_not_ pretend to be a full fledged `fixincludes' for this system.\n+\n+If you now follow the standard GCC installation instructions, building\n+GCC 2.0 (including G++ 2.0) should proceed without any problems.\n+\n+NB: Debugging is not yet supported for the Apollo.  If someone wants\n+    to do a _big_ favour to the Apollo users, he/she should consider\n+    porting the Binary File Description library (BFD) to the Apollo.\n+    This library can be found in the gdb-4.x distributions or in the\n+    binutils-1.9x distributions.\n+\n+\n+\n+\n+#!/bin/sh\n+# patch-apollo-includes -- fix some (but not all!) Apollo brain damage.\n+\n+FILES_TO_PATCH='sys/types.h setjmp.h'\n+\n+mkdir sys\n+\n+for i in $FILES_TO_PATCH;\n+do\n+  cp /bsd4.3/usr/include/$i ./$i\n+done\n+\n+patch -b -apollo <<'EOP'\n+*** /bsd4.3/usr/include/sys/types.h\tFri Apr  8 20:29:06 1988\n+--- sys/types.h\tWed Feb 26 21:17:57 1992\n+***************\n+*** 38,44 ****\n+--- 38,47 ----\n+  typedef\tchar *\tcaddr_t;\n+  typedef\tu_long\tino_t;\n+  typedef\tlong\tswblk_t;\n++ #ifndef _SIZE_T\n++ #define _SIZE_T\n+  typedef\tlong\tsize_t;\n++ #endif\n+  typedef\tlong\ttime_t;\n+  typedef\tlong\tdev_t;\n+  typedef\tlong\toff_t;\n+*** /bsd4.3/usr/include/setjmp.h\tFri Feb  3 21:40:21 1989\n+--- setjmp.h\tSun Feb 23 19:06:55 1992\n+***************\n+*** 24,30 ****\n+--- 24,39 ----\n+  #endif\n+  \n+  \n++ #ifdef __GNUC__\n+  #ifdef _PROTOTYPES\n++ extern int sigsetjmp (sigjmp_buf env, int savemask);\n++ extern void siglongjmp (sigjmp_buf env, int val);\n++ #else\n++ extern int sigsetjmp();\n++ extern void siglongjmp();\n++ #endif /* _PROTOTYPES */\n++ #else /* not __GNUC__ */\n++ #ifdef _PROTOTYPES\n+  extern int sigsetjmp(\n+          sigjmp_buf env,\n+          int savemask\n+***************\n+*** 37,43 ****\n+  extern int sigsetjmp() #options(abnormal);\n+  extern void siglongjmp() #options(noreturn);\n+  #endif /* _PROTOTYPES */\n+! \n+  #undef _PROTOTYPES\n+  \n+  #ifdef __cplusplus\n+--- 46,52 ----\n+  extern int sigsetjmp() #options(abnormal);\n+  extern void siglongjmp() #options(noreturn);\n+  #endif /* _PROTOTYPES */\n+! #endif /* not __GNUC__ */\n+  #undef _PROTOTYPES\n+  \n+  #ifdef __cplusplus\n+EOP\n+\n+exit 0"}]}