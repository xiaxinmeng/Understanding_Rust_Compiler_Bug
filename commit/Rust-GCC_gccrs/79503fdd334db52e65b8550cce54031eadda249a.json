{"sha": "79503fdd334db52e65b8550cce54031eadda249a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk1MDNmZGQzMzRkYjUyZTY1Yjg1NTBjY2U1NDAzMWVhZGRhMjQ5YQ==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-17T21:19:32Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-17T21:19:32Z"}, "message": "* make.adb:\n\n\t(Switches_Of): New function\n\t(Test_If_Relative_Path): New procedure\n\t(Add_Switches): Use new function Switches_Of\n\t(Collect_Arguments_And_Compile): Use new function Switches_Of.\n\tWhen using a project file, test if there are any relative\n\tsearch path. Fail if there are any.\n\t(Gnatmake): Only add switches for the primary directory when not using\n\ta project file. When using a project file, change directory to the\n\tobject directory of the main project file. When using a project file,\n\ttest if there are any relative search path. Fail if there are any.\n\tWhen using a project file, fail if specified executable is relative\n\tpath with directory information, and prepend executable, if not\n\tspecified as an absolute path, with the exec directory.  Make sure\n\tthat only one -o switch is transmitted to the linker.\n\n\t* prj-attr.adb (Initialization_Data): Add project attribute Exec_Dir\n\n\t* prj-nmsc.adb:\n\t(Ada_Check): Get Spec_Suffix_Loc and Impl_Suffix_Loc,\n\twhen using a non standard naming scheme.\n\t(Check_Ada_Naming_Scheme): Make sure that error messages\n\tdo not raise exceptions.\n\t(Is_Illegal_Append): Return True if there is no dot in the suffix.\n\t(Language_Independent_Check): Check the exec directory.\n\n\t* prj.adb (Project_Empty): Add new component Exec_Directory\n\n\t* prj.ads:\n\t(Default_Ada_Spec_Suffix, Default_Ada_Impl_Suffix): Add defaults.\n\t(Project_Data): Add component Exec_Directory\n\n\t* snames.adb: Updated to match snames.ads revision 1.215\n\n\t* snames.ads: Added Exec_Dir\n\n\t* make.adb: Minor reformatting\n\n\t* prj-nmsc.adb: Minor reformatting\n\n\t* snames.adb: Updated to match snames.ads\n\n\t* snames.ads: Alphebetize entries for project file\n\n\t* trans.c (process_freeze_entity): Do nothing if the entity is a\n\tsubprogram that was already elaborated.\n\n\t* decl.c (gnat_to_gnu_entity, object): Do not back-annotate Alignment\n\tand Esize if object is referenced via pointer.\n\nFrom-SVN: r48127", "tree": {"sha": "405209476eafde3f87744b76bb4787227777129a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/405209476eafde3f87744b76bb4787227777129a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79503fdd334db52e65b8550cce54031eadda249a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79503fdd334db52e65b8550cce54031eadda249a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79503fdd334db52e65b8550cce54031eadda249a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79503fdd334db52e65b8550cce54031eadda249a/comments", "author": null, "committer": null, "parents": [{"sha": "855ff2e1e447affef1e407fe68b9e10d525f41f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/855ff2e1e447affef1e407fe68b9e10d525f41f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/855ff2e1e447affef1e407fe68b9e10d525f41f5"}], "stats": {"total": 685, "additions": 516, "deletions": 169}, "files": [{"sha": "69ad3d716110d981f46a8bd2c3dea2a8aef1ba08", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=79503fdd334db52e65b8550cce54031eadda249a", "patch": "@@ -1,3 +1,61 @@\n+2001-12-17  Vincent Celier <celier@gnat.com>\n+\n+\t* make.adb:\n+\t(Switches_Of): New function\n+\t(Test_If_Relative_Path): New procedure\n+\t(Add_Switches): Use new function Switches_Of\n+\t(Collect_Arguments_And_Compile): Use new function Switches_Of.\n+\tWhen using a project file, test if there are any relative\n+\tsearch path. Fail if there are any.\n+\t(Gnatmake): Only add switches for the primary directory when not using \n+\ta project file. When using a project file, change directory to the \n+\tobject directory of the main project file. When using a project file, \n+\ttest if there are any relative search path. Fail if there are any. \n+\tWhen using a project file, fail if specified executable is relative \n+\tpath with directory information, and prepend executable, if not \n+\tspecified as an absolute path, with the exec directory.  Make sure \n+\tthat only one -o switch is transmitted to the linker.\n+\t\n+\t* prj-attr.adb (Initialization_Data): Add project attribute Exec_Dir\n+\t\n+\t* prj-nmsc.adb:\n+\t(Ada_Check): Get Spec_Suffix_Loc and Impl_Suffix_Loc,\n+\twhen using a non standard naming scheme.\n+\t(Check_Ada_Naming_Scheme): Make sure that error messages\n+\tdo not raise exceptions.\n+\t(Is_Illegal_Append): Return True if there is no dot in the suffix.\n+\t(Language_Independent_Check): Check the exec directory.\n+\t\n+\t* prj.adb (Project_Empty): Add new component Exec_Directory\n+\t\n+\t* prj.ads:\n+\t(Default_Ada_Spec_Suffix, Default_Ada_Impl_Suffix): Add defaults.\n+\t(Project_Data): Add component Exec_Directory\n+\t\n+\t* snames.adb: Updated to match snames.ads revision 1.215\n+\t\n+\t* snames.ads: Added Exec_Dir\n+\t\n+2001-12-17  Robert Dewar <dewar@gnat.com>\n+\n+\t* make.adb: Minor reformatting\n+\t\n+\t* prj-nmsc.adb: Minor reformatting\n+\t\n+\t* snames.adb: Updated to match snames.ads\n+\t\n+\t* snames.ads: Alphebetize entries for project file\n+\n+2001-12-17  Ed Schonberg <schonber@gnat.com>\n+\n+\t* trans.c (process_freeze_entity): Do nothing if the entity is a \n+\tsubprogram that was already elaborated.\n+\t\n+2001-12-17  Richard Kenner <kenner@gnat.com>\n+\t\n+\t* decl.c (gnat_to_gnu_entity, object): Do not back-annotate Alignment \n+\tand Esize if object is referenced via pointer.\n+\n 2001-12-17  Ed Schonberg <schonber@gnat.com>\n \n \t* sem_ch3.adb (Analyze_Variant_Part): check that type of discriminant "}, {"sha": "9cf7815b7c0d2959f7b85c42edc69b08a9a8b894", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=79503fdd334db52e65b8550cce54031eadda249a", "patch": "@@ -1060,12 +1060,15 @@ gnat_to_gnu_entity (gnat_entity, gnu_expr, definition)\n \t  }\n \n \t/* Back-annotate the Alignment of the object if not already in the\n-\t   tree.  Likewise for Esize if the object is of a constant size.  */\n-\tif (Unknown_Alignment (gnat_entity))\n+\t   tree.  Likewise for Esize if the object is of a constant size.\n+\t   But if the \"object\" is actually a pointer to an object, the\n+\t   alignment and size are the same as teh type, so don't back-annotate\n+\t   the values for the pointer.  */\n+\tif (! used_by_ref && Unknown_Alignment (gnat_entity))\n \t  Set_Alignment (gnat_entity,\n \t\t\t UI_From_Int (DECL_ALIGN (gnu_decl) / BITS_PER_UNIT));\n \n-\tif (Unknown_Esize (gnat_entity)\n+\tif (! used_by_ref && Unknown_Esize (gnat_entity)\n \t    && DECL_SIZE (gnu_decl) != 0)\n \t  {\n \t    tree gnu_back_size = DECL_SIZE (gnu_decl);"}, {"sha": "a18c81e68cd1b9ca057543d2f0cc5af7bd9210d0", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 298, "deletions": 91, "changes": 389, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=79503fdd334db52e65b8550cce54031eadda249a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.5 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -28,7 +28,9 @@\n \n with Ada.Exceptions;   use Ada.Exceptions;\n with Ada.Command_Line; use Ada.Command_Line;\n-with GNAT.OS_Lib;      use GNAT.OS_Lib;\n+\n+with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n+with GNAT.OS_Lib;               use GNAT.OS_Lib;\n \n with ALI;              use ALI;\n with ALI.Util;         use ALI.Util;\n@@ -376,6 +378,25 @@ package body Make is\n    --  The caller process ADA_INCLUDE_PATH and ADA_OBJECTS_PATH are\n    --  not affected.\n \n+   function Switches_Of\n+     (Source_File      : Name_Id;\n+      Source_File_Name : String;\n+      Naming           : Naming_Data;\n+      In_Package       : Package_Id;\n+      Allow_ALI        : Boolean)\n+      return             Variable_Value;\n+   --  Return the switches for the source file in the specified package\n+   --  of a project file. If the Source_File ends with a standard GNAT\n+   --  extension (\".ads\" or \".adb\"), try first the full name, then the\n+   --  name without the extension. If there is no switches for either\n+   --  names, try the default switches for Ada. If all failed, return\n+   --  No_Variable_Value.\n+\n+   procedure Test_If_Relative_Path (Switch : String_Access);\n+   --  Test if Switch is a relative search path switch.\n+   --  Fail if it is. This subprogram is only called\n+   --  when using project files.\n+\n    procedure Set_Library_For\n      (Project             : Project_Id;\n       There_Are_Libraries : in out Boolean);\n@@ -630,27 +651,18 @@ package body Make is\n       Switch_List   : String_List_Id;\n       Element       : String_Element;\n \n-      Switches_Array : constant Array_Element_Id :=\n-        Prj.Util.Value_Of\n-        (Name => Name_Switches,\n-         In_Arrays => Packages.Table (The_Package).Decl.Arrays);\n-      Default_Switches_Array : constant Array_Element_Id :=\n-        Prj.Util.Value_Of\n-        (Name => Name_Default_Switches,\n-         In_Arrays => Packages.Table (The_Package).Decl.Arrays);\n-\n    begin\n       if File_Name'Length > 0 then\n          Name_Len := File_Name'Length;\n          Name_Buffer (1 .. Name_Len) := File_Name;\n          Switches :=\n-           Prj.Util.Value_Of (Index => Name_Find, In_Array => Switches_Array);\n-\n-         if Switches = Nil_Variable_Value then\n-            Switches := Prj.Util.Value_Of\n-              (Index => Name_Ada,\n-               In_Array => Default_Switches_Array);\n-         end if;\n+           Switches_Of\n+           (Source_File      => Name_Find,\n+            Source_File_Name => File_Name,\n+            Naming           => Projects.Table (Main_Project).Naming,\n+            In_Package       => The_Package,\n+            Allow_ALI        =>\n+              Program = Binder or else Program = Linker);\n \n          case Switches.Kind is\n             when Undefined =>\n@@ -861,30 +873,30 @@ package body Make is\n       -- Data declarations for Check --\n       ---------------------------------\n \n-      Full_Lib_File    : File_Name_Type;\n+      Full_Lib_File : File_Name_Type;\n       --  Full name of current library file\n \n-      Full_Obj_File    : File_Name_Type;\n+      Full_Obj_File : File_Name_Type;\n       --  Full name of the object file corresponding to Lib_File.\n \n-      Lib_Stamp        : Time_Stamp_Type;\n+      Lib_Stamp : Time_Stamp_Type;\n       --  Time stamp of the current ada library file.\n \n-      Obj_Stamp        : Time_Stamp_Type;\n+      Obj_Stamp : Time_Stamp_Type;\n       --  Time stamp of the current object file.\n \n-      Modified_Source  : File_Name_Type;\n+      Modified_Source : File_Name_Type;\n       --  The first source in Lib_File whose current time stamp differs\n       --  from that stored in Lib_File.\n \n-      New_Spec         : File_Name_Type;\n+      New_Spec : File_Name_Type;\n       --  If Lib_File contains in its W (with) section a body (for a\n       --  subprogram) for which there exists a spec and the spec did not\n       --  appear in the Sdep section of Lib_File, New_Spec contains the file\n       --  name of this new spec.\n \n       Source_Name : Name_Id;\n-      Text : Text_Buffer_Ptr;\n+      Text        : Text_Buffer_Ptr;\n \n       Prev_Switch : Character;\n       --  First character of previous switch processed\n@@ -1034,6 +1046,8 @@ package body Make is\n                   end if;\n                end loop;\n \n+            --  Special_Arg is non-null\n+\n             else\n                for J in Special_Arg'Range loop\n \n@@ -1679,34 +1693,14 @@ package body Make is\n                      --  the specific switches for the current source,\n                      --  or the global switches, if any.\n \n-                     declare\n-                        Defaults : constant Array_Element_Id :=\n-                                     Prj.Util.Value_Of\n-                                      (Name => Name_Default_Switches,\n-                                       In_Arrays =>\n-                                         Packages.Table\n-                                           (Compiler_Package) .Decl.Arrays);\n-\n-                        Switches_Array : constant Array_Element_Id :=\n-                                           Prj.Util.Value_Of\n-                                             (Name => Name_Switches,\n-                                              In_Arrays =>\n-                                                Packages.Table\n-                                                  (Compiler_Package).\n-                                                              Decl.Arrays);\n+                     Switches := Switches_Of\n+                       (Source_File      => Source_File,\n+                        Source_File_Name => Source_File_Name,\n+                        Naming           =>\n+                          Projects.Table (Current_Project).Naming,\n+                        In_Package       => Compiler_Package,\n+                        Allow_ALI        => False);\n \n-                     begin\n-                        Switches :=\n-                          Prj.Util.Value_Of\n-                             (Index => Source_File,\n-                              In_Array => Switches_Array);\n-\n-                        if Switches = Nil_Variable_Value then\n-                           Switches :=\n-                             Prj.Util.Value_Of\n-                               (Index => Name_Ada, In_Array => Defaults);\n-                        end if;\n-                     end;\n                   end if;\n \n                   case Switches.Kind is\n@@ -1739,6 +1733,7 @@ package body Make is\n                                  String_To_Name_Buffer (Element.Value);\n                                  New_Args (Index) :=\n                                    new String' (Name_Buffer (1 .. Name_Len));\n+                                 Test_If_Relative_Path (New_Args (Index));\n                                  Current := Element.Next;\n                               end loop;\n \n@@ -1764,6 +1759,7 @@ package body Make is\n                                                 (Name_Buffer (1 .. Name_Len)));\n \n                         begin\n+                           Test_If_Relative_Path (New_Args (1));\n                            Pid := Compile\n                              (Path_Name,\n                               Lib_File,\n@@ -2388,7 +2384,6 @@ package body Make is\n             end loop;\n          end;\n       end if;\n-\n    end Compile_Sources;\n \n    -------------\n@@ -2551,11 +2546,11 @@ package body Make is\n          declare\n             Main_Id : constant Name_Id := Name_Find;\n \n-            Mains   : constant Prj.Variable_Value :=\n-                        Prj.Util.Value_Of\n-                         (Variable_Name => Main_Id,\n-                          In_Variables  =>\n-                            Projects.Table (Main_Project).Decl.Attributes);\n+            Mains : constant Prj.Variable_Value :=\n+                      Prj.Util.Value_Of\n+                        (Variable_Name => Main_Id,\n+                         In_Variables  =>\n+                           Projects.Table (Main_Project).Decl.Attributes);\n \n             Value : String_List_Id := Mains.Values;\n \n@@ -2615,21 +2610,22 @@ package body Make is\n       if Project_File_Name = null then\n          Add_Switch (\"-I-\", Compiler, And_Save => True);\n          Add_Switch (\"-I-\", Binder, And_Save => True);\n-      end if;\n \n-      if Opt.Look_In_Primary_Dir then\n+         if Opt.Look_In_Primary_Dir then\n \n-         Add_Switch\n-           (\"-I\" &\n-            Normalize_Directory_Name\n-              (Get_Primary_Src_Search_Directory.all).all,\n-            Compiler, Append_Switch => False,\n-            And_Save => False);\n+            Add_Switch\n+              (\"-I\" &\n+               Normalize_Directory_Name\n+               (Get_Primary_Src_Search_Directory.all).all,\n+               Compiler, Append_Switch => False,\n+               And_Save => False);\n+\n+            Add_Switch (\"-aO\" & Normalized_CWD,\n+                        Binder,\n+                        Append_Switch => False,\n+                        And_Save => False);\n+         end if;\n \n-         Add_Switch (\"-aO\" & Normalized_CWD,\n-                     Binder,\n-                     Append_Switch => False,\n-                     And_Save => False);\n       end if;\n \n       --  If the user wants a program without a main subprogram, add the\n@@ -2641,6 +2637,9 @@ package body Make is\n \n       if Main_Project /= No_Project then\n \n+         Change_Dir\n+           (Get_Name_String (Projects.Table (Main_Project).Object_Directory));\n+\n          --  Find the file name of the main unit\n \n          declare\n@@ -2859,12 +2858,26 @@ package body Make is\n \n          for J in 1 .. Saved_Gcc_Switches.Last loop\n             The_Saved_Gcc_Switches (J) := Saved_Gcc_Switches.Table (J);\n+            Test_If_Relative_Path (The_Saved_Gcc_Switches (J));\n          end loop;\n \n          --  We never use gnat.adc when a project file is used\n \n          The_Saved_Gcc_Switches (The_Saved_Gcc_Switches'Last) :=\n            No_gnat_adc;\n+\n+         for J in 1 .. Gcc_Switches.Last loop\n+            Test_If_Relative_Path (Gcc_Switches.Table (J));\n+         end loop;\n+\n+         for J in 1 .. Binder_Switches.Last loop\n+            Test_If_Relative_Path (Binder_Switches.Table (J));\n+         end loop;\n+\n+         for J in 1 .. Linker_Switches.Last loop\n+            Test_If_Relative_Path (Linker_Switches.Table (J));\n+         end loop;\n+\n       end if;\n \n       --  If there was a --GCC, --GNATBIND or --GNATLINK switch on\n@@ -2939,7 +2952,9 @@ package body Make is\n                --  Look inside the linker switches to see if the name\n                --  of the final executable program was specified.\n \n-               for J in Linker_Switches.First .. Linker_Switches.Last loop\n+               for\n+                 J in reverse Linker_Switches.First .. Linker_Switches.Last\n+               loop\n                   if Linker_Switches.Table (J).all = Output_Flag.all then\n                      pragma Assert (J < Linker_Switches.Last);\n \n@@ -2998,6 +3013,7 @@ package body Make is\n                                           (Projects.Table\n                                            (Main_Project).\n                                             Naming.Current_Impl_Suffix);\n+\n                         Spec_Append : constant String :=\n                                         Get_Name_String\n                                           (Projects.Table\n@@ -3013,12 +3029,10 @@ package body Make is\n                                            Body_Append\n                         then\n                            --  We have found the body termination. We remove it\n-                           --  add the executable termination (if any) and set\n-                           --  Non_Std_Executable.\n+                           --  add the executable termination, if any.\n \n                            Name_Len := Name_Len - Body_Append'Length;\n                            Executable := Executable_Name (Name_Find);\n-                           Non_Std_Executable := True;\n \n                         elsif Name_Len > Spec_Append'Length\n                           and then\n@@ -3027,21 +3041,57 @@ package body Make is\n                                                                    Spec_Append\n                         then\n                            --  We have found the spec termination. We remove\n-                           --  it, add the executable termination (if any),\n-                           --  and set Non_Std_Executable.\n+                           --  it, add the executable termination, if any.\n \n                            Name_Len := Name_Len - Spec_Append'Length;\n                            Executable := Executable_Name (Name_Find);\n-                           Non_Std_Executable := True;\n \n                         else\n                            Executable :=\n                              Executable_Name (Strip_Suffix (Main_Source_File));\n                         end if;\n+\n                      end;\n                   end if;\n                end if;\n \n+               if Main_Project /= No_Project then\n+                  declare\n+                     Exec_File_Name : constant String :=\n+                       Get_Name_String (Executable);\n+\n+                  begin\n+                     if not Is_Absolute_Path (Exec_File_Name) then\n+                        for Index in Exec_File_Name'Range loop\n+                           if Exec_File_Name (Index) = Directory_Separator then\n+                              Fail (\"relative executable (\"\"\" &\n+                                    Exec_File_Name &\n+                                    \"\"\") with directory part not allowed \" &\n+                                    \"when using project files\");\n+                           end if;\n+                        end loop;\n+\n+                        Get_Name_String (Projects.Table\n+                                         (Main_Project).Exec_Directory);\n+\n+                        if\n+                          Name_Buffer (Name_Len) /= Directory_Separator\n+                        then\n+                           Name_Len := Name_Len + 1;\n+                           Name_Buffer (Name_Len) := Directory_Separator;\n+                        end if;\n+\n+                        Name_Buffer (Name_Len + 1 ..\n+                                     Name_Len + Exec_File_Name'Length) :=\n+                          Exec_File_Name;\n+                        Name_Len := Name_Len + Exec_File_Name'Length;\n+                        Executable := Name_Find;\n+                        Non_Std_Executable := True;\n+                     end if;\n+                  end;\n+\n+               end if;\n+\n                --  Now we invoke Compile_Sources for the current main\n \n                Compile_Sources\n@@ -3212,7 +3262,6 @@ package body Make is\n                   end if;\n                end if;\n             end Recursive_Compilation_Step;\n-\n          end if;\n \n          --  If we are here, it means that we need to rebuilt the current\n@@ -3243,7 +3292,10 @@ package body Make is\n                Main_ALI_File := Full_Lib_File_Name (Main_ALI_File);\n             end if;\n \n-            pragma Assert (Main_ALI_File /= No_File);\n+            if Main_ALI_File = No_File then\n+               Fail (\"could not find the main ALI file\");\n+            end if;\n+\n          end Main_ALI_In_Place_Mode_Step;\n \n          if Do_Bind_Step then\n@@ -3268,7 +3320,6 @@ package body Make is\n \n                Bind (Main_ALI_File, Args);\n             end Bind_Step;\n-\n          end if;\n \n          if Do_Link_Step then\n@@ -3278,7 +3329,6 @@ package body Make is\n                Linker_Switches_Last : constant Integer := Linker_Switches.Last;\n \n             begin\n-\n                if Main_Project /= No_Project then\n \n                   if MLib.Tgt.Libraries_Are_Supported then\n@@ -3310,9 +3360,7 @@ package body Make is\n                            Linker_Switches.Table (Linker_Switches.Last) :=\n                              Option;\n                         end if;\n-\n                      end;\n-\n                   end if;\n \n                   --  Put the object directories in ADA_OBJECTS_PATH\n@@ -3322,34 +3370,50 @@ package body Make is\n \n                declare\n                   Args : Argument_List\n-                         (Linker_Switches.First .. Linker_Switches.Last + 2);\n+                           (Linker_Switches.First .. Linker_Switches.Last + 2);\n+\n+                  Last_Arg : Integer := Linker_Switches.First - 1;\n+                  Skip     : Boolean := False;\n \n                begin\n                   --  Get all the linker switches\n \n                   for J in Linker_Switches.First .. Linker_Switches.Last loop\n-                     Args (J) := Linker_Switches.Table (J);\n+                     if Skip then\n+                        Skip := False;\n+\n+                     elsif Non_Std_Executable\n+                       and then Linker_Switches.Table (J).all = \"-o\"\n+                     then\n+                        Skip := True;\n+\n+                     else\n+                        Last_Arg := Last_Arg + 1;\n+                        Args (Last_Arg) := Linker_Switches.Table (J);\n+                     end if;\n+\n                   end loop;\n \n                   --  And invoke the linker\n \n                   if Non_Std_Executable then\n-                     Args (Linker_Switches.Last + 1) := new String'(\"-o\");\n-                     Args (Linker_Switches.Last + 2) :=\n+                     Last_Arg := Last_Arg + 1;\n+                     Args (Last_Arg) := new String'(\"-o\");\n+                     Last_Arg := Last_Arg + 1;\n+                     Args (Last_Arg) :=\n                        new String'(Get_Name_String (Executable));\n-                     Link (Main_ALI_File, Args);\n+                     Link (Main_ALI_File, Args (Args'First .. Last_Arg));\n \n                   else\n                      Link\n                        (Main_ALI_File,\n-                        Args (Linker_Switches.First .. Linker_Switches.Last));\n+                        Args (Args'First .. Last_Arg));\n                   end if;\n \n                end;\n \n                Linker_Switches.Set_Last (Linker_Switches_Last);\n             end Link_Step;\n-\n          end if;\n \n          --  We go to here when we skip the bind and link steps.\n@@ -3592,7 +3656,6 @@ package body Make is\n          when Err : SFN_Scan.Syntax_Error_In_GNAT_ADC =>\n             Osint.Fail (Exception_Message (Err));\n       end;\n-\n    end Initialize;\n \n    -----------------------------------\n@@ -4515,6 +4578,150 @@ package body Make is\n       end if;\n    end Set_Library_For;\n \n+   -----------------\n+   -- Switches_Of --\n+   -----------------\n+\n+   function Switches_Of\n+     (Source_File      : Name_Id;\n+      Source_File_Name : String;\n+      Naming           : Naming_Data;\n+      In_Package       : Package_Id;\n+      Allow_ALI        : Boolean)\n+      return             Variable_Value\n+   is\n+      Switches : Variable_Value;\n+\n+      Defaults : constant Array_Element_Id :=\n+                   Prj.Util.Value_Of\n+                     (Name      => Name_Default_Switches,\n+                      In_Arrays =>\n+                      Packages.Table (In_Package).Decl.Arrays);\n+\n+      Switches_Array : constant Array_Element_Id :=\n+                         Prj.Util.Value_Of\n+                           (Name      => Name_Switches,\n+                            In_Arrays =>\n+                              Packages.Table (In_Package).Decl.Arrays);\n+\n+   begin\n+      Switches :=\n+        Prj.Util.Value_Of\n+        (Index => Source_File,\n+         In_Array => Switches_Array);\n+\n+      if Switches = Nil_Variable_Value then\n+         declare\n+            Name        : String (1 .. Source_File_Name'Length + 3);\n+            Last        : Positive := Source_File_Name'Length;\n+            Spec_Suffix : constant String :=\n+                            Get_Name_String (Naming.Current_Spec_Suffix);\n+            Impl_Suffix : constant String :=\n+                            Get_Name_String (Naming.Current_Impl_Suffix);\n+            Truncated   : Boolean := False;\n+\n+         begin\n+            Name (1 .. Last) := Source_File_Name;\n+\n+            if Last > Impl_Suffix'Length\n+               and then Name (Last - Impl_Suffix'Length + 1 .. Last) =\n+                                                                  Impl_Suffix\n+            then\n+               Truncated := True;\n+               Last := Last - Impl_Suffix'Length;\n+            end if;\n+\n+            if not Truncated\n+              and then Last > Spec_Suffix'Length\n+              and then Name (Last - Spec_Suffix'Length + 1 .. Last) =\n+                                                                 Spec_Suffix\n+            then\n+               Truncated := True;\n+               Last := Last - Spec_Suffix'Length;\n+            end if;\n+\n+            if Truncated then\n+               Name_Len := Last;\n+               Name_Buffer (1 .. Name_Len) := Name (1 .. Last);\n+               Switches :=\n+                 Prj.Util.Value_Of\n+                 (Index => Name_Find,\n+                  In_Array => Switches_Array);\n+\n+               if Switches = Nil_Variable_Value then\n+                  Last := Source_File_Name'Length;\n+\n+                  while Name (Last) /= '.' loop\n+                     Last := Last - 1;\n+                  end loop;\n+\n+                  Name (Last + 1 .. Last + 3) := \"ali\";\n+                  Name_Len := Last + 3;\n+                  Name_Buffer (1 .. Name_Len) := Name (1 .. Name_Len);\n+                                 Switches :=\n+                 Prj.Util.Value_Of\n+                    (Index => Name_Find,\n+                     In_Array => Switches_Array);\n+               end if;\n+            end if;\n+         end;\n+      end if;\n+\n+      if Switches = Nil_Variable_Value then\n+         Switches := Prj.Util.Value_Of\n+                                (Index => Name_Ada, In_Array => Defaults);\n+      end if;\n+\n+      return Switches;\n+   end Switches_Of;\n+\n+   ---------------------------\n+   -- Test_If_Relative_Path --\n+   ---------------------------\n+\n+   procedure Test_If_Relative_Path (Switch : String_Access) is\n+   begin\n+      if Switch /= null then\n+\n+         declare\n+            Sw : String (1 .. Switch'Length);\n+            Start : Positive;\n+\n+         begin\n+            Sw := Switch.all;\n+\n+            if Sw (1) = '-' then\n+               if Sw'Length >= 3\n+                 and then (Sw (2) = 'A'\n+                           or else Sw (2) = 'I'\n+                           or else Sw (2) = 'L')\n+               then\n+                  Start := 3;\n+\n+                  if Sw = \"-I-\" then\n+                     return;\n+                  end if;\n+\n+               elsif Sw'Length >= 4\n+                 and then (Sw (2 .. 3) = \"aL\"\n+                           or else Sw (2 .. 3) = \"aO\"\n+                           or else Sw (2 .. 3) = \"aI\")\n+               then\n+                  Start := 4;\n+\n+               else\n+                  return;\n+               end if;\n+\n+               if not Is_Absolute_Path (Sw (Start .. Sw'Last)) then\n+                  Fail (\"relative search path switches (\"\"\" &\n+                        Sw & \"\"\") are not allowed when using project files\");\n+               end if;\n+            end if;\n+         end;\n+      end if;\n+   end Test_If_Relative_Path;\n+\n    ------------\n    -- Unmark --\n    ------------"}, {"sha": "b9ed55b6eb68e676b7681c11267c3d681d33760e", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=79503fdd334db52e65b8550cce54031eadda249a", "patch": "@@ -54,6 +54,7 @@ package body Prj.Attr is\n    --  project attributes\n \n      \"SVobject_dir#\" &\n+     \"SVexec_dir#\" &\n      \"LVsource_dirs#\" &\n      \"LVsource_files#\" &\n      \"SVsource_list_file#\" &"}, {"sha": "9f11f6f01708acd91264b9b0ce1f32b3daf4ee64", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 82, "deletions": 16, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=79503fdd334db52e65b8550cce54031eadda249a", "patch": "@@ -628,14 +628,18 @@ package body Prj.Nmsc is\n             --  Check Specification_Suffix\n \n             declare\n-               Ada_Spec_Suffix : constant Name_Id :=\n+               Ada_Spec_Suffix : constant Variable_Value :=\n                  Prj.Util.Value_Of\n                    (Index => Name_Ada,\n                     In_Array => Data.Naming.Specification_Suffix);\n \n             begin\n-               if Ada_Spec_Suffix /= No_Name then\n-                  Data.Naming.Current_Spec_Suffix := Ada_Spec_Suffix;\n+               if Ada_Spec_Suffix.Kind = Single\n+                 and then String_Length (Ada_Spec_Suffix.Value) /= 0\n+               then\n+                  String_To_Name_Buffer (Ada_Spec_Suffix.Value);\n+                  Data.Naming.Current_Spec_Suffix := Name_Find;\n+                  Data.Naming.Spec_Suffix_Loc := Ada_Spec_Suffix.Location;\n \n                else\n                   Data.Naming.Current_Spec_Suffix := Default_Ada_Spec_Suffix;\n@@ -652,14 +656,18 @@ package body Prj.Nmsc is\n             --  Check Implementation_Suffix\n \n             declare\n-               Ada_Impl_Suffix : constant Name_Id :=\n+               Ada_Impl_Suffix : constant Variable_Value :=\n                  Prj.Util.Value_Of\n                    (Index => Name_Ada,\n                     In_Array => Data.Naming.Implementation_Suffix);\n \n             begin\n-               if Ada_Impl_Suffix /= No_Name then\n-                  Data.Naming.Current_Impl_Suffix := Ada_Impl_Suffix;\n+               if Ada_Impl_Suffix.Kind = Single\n+                 and then String_Length (Ada_Impl_Suffix.Value) /= 0\n+               then\n+                  String_To_Name_Buffer (Ada_Impl_Suffix.Value);\n+                  Data.Naming.Current_Impl_Suffix := Name_Find;\n+                  Data.Naming.Impl_Suffix_Loc := Ada_Impl_Suffix.Location;\n \n                else\n                   Data.Naming.Current_Impl_Suffix := Default_Ada_Impl_Suffix;\n@@ -920,9 +928,9 @@ package body Prj.Nmsc is\n       end if;\n    end Check_Ada_Name;\n \n-   -------------------------\n-   -- Check_Naming_Scheme --\n-   -------------------------\n+   -----------------------------\n+   -- Check_Ada_Naming_Scheme --\n+   -----------------------------\n \n    procedure Check_Ada_Naming_Scheme (Naming : Naming_Data) is\n    begin\n@@ -982,24 +990,24 @@ package body Prj.Nmsc is\n             --   - start with an '_' followed by an alphanumeric\n \n             if Is_Illegal_Append (Specification_Suffix) then\n+               Error_Msg_Name_1 := Naming.Current_Spec_Suffix;\n                Error_Msg\n-                 ('\"' & Specification_Suffix &\n-                  \"\"\" is illegal for Specification_Suffix.\",\n+                 (\"{ is illegal for Specification_Suffix\",\n                   Naming.Spec_Suffix_Loc);\n             end if;\n \n             if Is_Illegal_Append (Implementation_Suffix) then\n+               Error_Msg_Name_1 := Naming.Current_Impl_Suffix;\n                Error_Msg\n-                 ('\"' & Implementation_Suffix &\n-                  \"\"\" is illegal for Implementation_Suffix.\",\n+                 (\"% is illegal for Implementation_Suffix\",\n                   Naming.Impl_Suffix_Loc);\n             end if;\n \n             if Implementation_Suffix /= Separate_Suffix then\n                if Is_Illegal_Append (Separate_Suffix) then\n+                  Error_Msg_Name_1 := Naming.Separate_Suffix;\n                   Error_Msg\n-                    ('\"' & Separate_Suffix &\n-                     \"\"\" is illegal for Separate_Append.\",\n+                    (\"{ is illegal for Separate_Append\",\n                      Naming.Sep_Suffix_Loc);\n                end if;\n             end if;\n@@ -1039,6 +1047,7 @@ package body Prj.Nmsc is\n             end if;\n          end;\n       end if;\n+\n    end Check_Ada_Naming_Scheme;\n \n    ---------------\n@@ -1430,6 +1439,7 @@ package body Prj.Nmsc is\n    begin\n       return This'Length = 0\n         or else Is_Alphanumeric (This (This'First))\n+        or else Index (This, \".\") = 0\n         or else (This'Length >= 2\n                  and then This (This'First) = '_'\n                  and then Is_Alphanumeric (This (This'First + 1)));\n@@ -1701,7 +1711,7 @@ package body Prj.Nmsc is\n          Write_Line (\"Starting to look for directories\");\n       end if;\n \n-      --  Let's check the object directory\n+      --  Check the object directory\n \n       declare\n          Object_Dir : Variable_Value :=\n@@ -1757,6 +1767,62 @@ package body Prj.Nmsc is\n          end if;\n       end if;\n \n+      --  Check the exec directory\n+\n+      declare\n+         Exec_Dir : Variable_Value :=\n+                      Util.Value_Of (Name_Exec_Dir, Data.Decl.Attributes);\n+\n+      begin\n+         pragma Assert (Exec_Dir.Kind = Single,\n+                        \"Exec_Dir is not a single string\");\n+\n+         --  We set the object directory to its default\n+\n+         Data.Exec_Directory := Data.Object_Directory;\n+\n+         if not String_Equal (Exec_Dir.Value, Empty_String) then\n+\n+            String_To_Name_Buffer (Exec_Dir.Value);\n+\n+            if Name_Len = 0 then\n+               Error_Msg (\"Exec_Dir cannot be empty\",\n+                          Exec_Dir.Location);\n+\n+            else\n+               --  We check that the specified object directory\n+               --  does exist.\n+\n+               Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n+\n+               declare\n+                  Dir_Id : constant Name_Id := Name_Find;\n+\n+               begin\n+                  Data.Exec_Directory :=\n+                    Locate_Directory (Dir_Id, Data.Directory);\n+\n+                  if Data.Exec_Directory = No_Name then\n+                     Error_Msg_Name_1 := Dir_Id;\n+                     Error_Msg\n+                       (\"the exec directory { cannot be found\",\n+                        Data.Location);\n+                  end if;\n+               end;\n+            end if;\n+         end if;\n+      end;\n+\n+      if Current_Verbosity = High then\n+         if Data.Exec_Directory = No_Name then\n+            Write_Line (\"No exec directory\");\n+         else\n+            Write_Str (\"Exec directory: \"\"\");\n+            Write_Str (Get_Name_String (Data.Exec_Directory));\n+            Write_Line (\"\"\"\");\n+         end if;\n+      end if;\n+\n       --  Look for the source directories\n \n       declare"}, {"sha": "e03d83884f724ba0913735cd6395c665ade5fdc4", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=79503fdd334db52e65b8550cce54031eadda249a", "patch": "@@ -89,6 +89,7 @@ package body Prj is\n       Sources                      => Nil_String,\n       Source_Dirs                  => Nil_String,\n       Object_Directory             => No_Name,\n+      Exec_Directory               => No_Name,\n       Modifies                     => No_Project,\n       Modified_By                  => No_Project,\n       Naming                       => Std_Naming_Data,"}, {"sha": "d121c2dd5f21ba116cd169ee2a8f407795f41bda", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=79503fdd334db52e65b8550cce54031eadda249a", "patch": "@@ -40,11 +40,11 @@ with Types;       use Types;\n \n package Prj is\n \n-   Default_Ada_Spec_Suffix : Name_Id := No_Name;\n+   Default_Ada_Spec_Suffix : Name_Id;\n    --  The Name_Id for the standard GNAT suffix for Ada spec source file\n    --  name \".ads\". Initialized by Prj.Initialize.\n \n-   Default_Ada_Impl_Suffix : Name_Id := No_Name;\n+   Default_Ada_Impl_Suffix : Name_Id;\n    --  The Name_Id for the standard GNAT suffix for Ada body source file\n    --  name \".adb\". Initialized by Prj.Initialize.\n \n@@ -366,6 +366,11 @@ package Prj is\n       --  The object directory of this project file.\n       --  Set by Prj.Nmsc.Check_Naming_Scheme.\n \n+      Exec_Directory   : Name_Id := No_Name;\n+      --  The exec directory of this project file.\n+      --  Default is equal to Object_Directory.\n+      --  Set by Prj.Nmsc.Check_Naming_Scheme.\n+\n       Modifies : Project_Id := No_Project;\n       --  The reference of the project file, if any, that this\n       --  project file modifies."}, {"sha": "5ffb23d99222379f7f9df6b37446eeb6872a585d", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=79503fdd334db52e65b8550cce54031eadda249a", "patch": "@@ -566,36 +566,37 @@ package body Snames is\n      \"requeue#\" &\n      \"tagged#\" &\n      \"raise_exception#\" &\n-     \"project#\" &\n+     \"binder#\" &\n+     \"builder#\" &\n+     \"compiler#\" &\n+     \"cross_reference#\" &\n+     \"default_switches#\" &\n+     \"exec_dir#\" &\n      \"extends#\" &\n-     \"naming#\" &\n-     \"object_dir#\" &\n-     \"source_dirs#\" &\n-     \"specification#\" &\n+     \"finder#\" &\n+     \"gnatls#\" &\n+     \"gnatstub#\" &\n      \"implementation#\" &\n-     \"specification_exceptions#\" &\n      \"implementation_exceptions#\" &\n-     \"specification_suffix#\" &\n      \"implementation_suffix#\" &\n-     \"separate_suffix#\" &\n-     \"source_files#\" &\n-     \"source_list_file#\" &\n-     \"default_switches#\" &\n-     \"switches#\" &\n+     \"languages#\" &\n      \"library_dir#\" &\n-     \"library_name#\" &\n+     \"library_elaboration#\" &\n      \"library_kind#\" &\n+     \"library_name#\" &\n      \"library_version#\" &\n-     \"library_elaboration#\" &\n-     \"languages#\" &\n-     \"builder#\" &\n-     \"gnatls#\" &\n-     \"cross_reference#\" &\n-     \"finder#\" &\n-     \"binder#\" &\n      \"linker#\" &\n-     \"compiler#\" &\n-     \"gnatstub#\" &\n+     \"naming#\" &\n+     \"object_dir#\" &\n+     \"project#\" &\n+     \"separate_suffix#\" &\n+     \"source_dirs#\" &\n+     \"source_files#\" &\n+     \"source_list_file#\" &\n+     \"specification#\" &\n+     \"specification_exceptions#\" &\n+     \"specification_suffix#\" &\n+     \"switches#\" &\n       \"#\";\n \n    ---------------------"}, {"sha": "f1e29eab1758bd27156dab978f5b97bd9fc62c2f", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 31, "deletions": 35, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=79503fdd334db52e65b8550cce54031eadda249a", "patch": "@@ -861,44 +861,40 @@ package Snames is\n    --  Additional reserved words in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Project                        : constant Name_Id := N + 523;\n-   Name_Extends                        : constant Name_Id := N + 524;\n-\n-   --  Names used in GNAT Project Files\n-\n-   Name_Naming                         : constant Name_Id := N + 525;\n-   Name_Object_Dir                     : constant Name_Id := N + 526;\n-   Name_Source_Dirs                    : constant Name_Id := N + 527;\n-   Name_Specification                  : constant Name_Id := N + 528;\n-   Name_Implementation                 : constant Name_Id := N + 529;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 530;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 531;\n-   Name_Specification_Suffix           : constant Name_Id := N + 532;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 533;\n-   Name_Separate_Suffix                : constant Name_Id := N + 534;\n-   Name_Source_Files                   : constant Name_Id := N + 535;\n-   Name_Source_List_File               : constant Name_Id := N + 536;\n-   Name_Default_Switches               : constant Name_Id := N + 537;\n-   Name_Switches                       : constant Name_Id := N + 538;\n-   Name_Library_Dir                    : constant Name_Id := N + 539;\n+   Name_Binder                         : constant Name_Id := N + 523;\n+   Name_Builder                        : constant Name_Id := N + 524;\n+   Name_Compiler                       : constant Name_Id := N + 525;\n+   Name_Cross_Reference                : constant Name_Id := N + 526;\n+   Name_Default_Switches               : constant Name_Id := N + 527;\n+   Name_Exec_Dir                       : constant Name_Id := N + 528;\n+   Name_Extends                        : constant Name_Id := N + 529;\n+   Name_Finder                         : constant Name_Id := N + 530;\n+   Name_Gnatls                         : constant Name_Id := N + 531;\n+   Name_Gnatstub                       : constant Name_Id := N + 532;\n+   Name_Implementation                 : constant Name_Id := N + 533;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 534;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 535;\n+   Name_Languages                      : constant Name_Id := N + 536;\n+   Name_Library_Dir                    : constant Name_Id := N + 537;\n+   Name_Library_Elaboration            : constant Name_Id := N + 538;\n+   Name_Library_Kind                   : constant Name_Id := N + 539;\n    Name_Library_Name                   : constant Name_Id := N + 540;\n-   Name_Library_Kind                   : constant Name_Id := N + 541;\n-   Name_Library_Version                : constant Name_Id := N + 542;\n-   Name_Library_Elaboration            : constant Name_Id := N + 543;\n-   Name_Languages                      : constant Name_Id := N + 544;\n-\n-   Name_Builder                        : constant Name_Id := N + 545;\n-   Name_Gnatls                         : constant Name_Id := N + 546;\n-   Name_Cross_Reference                : constant Name_Id := N + 547;\n-   Name_Finder                         : constant Name_Id := N + 548;\n-   Name_Binder                         : constant Name_Id := N + 549;\n-   Name_Linker                         : constant Name_Id := N + 550;\n-   Name_Compiler                       : constant Name_Id := N + 551;\n-   Name_Gnatstub                       : constant Name_Id := N + 552;\n-\n+   Name_Library_Version                : constant Name_Id := N + 541;\n+   Name_Linker                         : constant Name_Id := N + 542;\n+   Name_Naming                         : constant Name_Id := N + 543;\n+   Name_Object_Dir                     : constant Name_Id := N + 544;\n+   Name_Project                        : constant Name_Id := N + 545;\n+   Name_Separate_Suffix                : constant Name_Id := N + 546;\n+   Name_Source_Dirs                    : constant Name_Id := N + 547;\n+   Name_Source_Files                   : constant Name_Id := N + 548;\n+   Name_Source_List_File               : constant Name_Id := N + 549;\n+   Name_Specification                  : constant Name_Id := N + 550;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 551;\n+   Name_Specification_Suffix           : constant Name_Id := N + 552;\n+   Name_Switches                       : constant Name_Id := N + 553;\n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 552;\n+   Last_Predefined_Name                : constant Name_Id := N + 553;\n \n    subtype Any_Operator_Name is Name_Id range\n      First_Operator_Name .. Last_Operator_Name;"}, {"sha": "1d6bf9825595b8d15b8bcc3308c9d21d113928ce", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79503fdd334db52e65b8550cce54031eadda249a/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=79503fdd334db52e65b8550cce54031eadda249a", "patch": "@@ -3993,6 +3993,15 @@ process_freeze_entity (gnat_node)\n \t  && Present (Equivalent_Type (gnat_entity))))\n     return;\n \n+  /* Don't do anything for subprograms that may have been elaborated before\n+     their freeze nodes.  This can happen, for example because of an inner call\n+     in an instance body.  */\n+  if (gnu_old != 0\n+       && TREE_CODE (gnu_old) == FUNCTION_DECL\n+       && (Ekind (gnat_entity) == E_Function\n+          || Ekind (gnat_entity) == E_Procedure))\n+    return;\n+\n   /* If we have a non-dummy type old tree, we have nothing to do.   Unless\n      this is the public view of a private type whose full view was not\n      delayed, this node was never delayed as it should have been."}]}