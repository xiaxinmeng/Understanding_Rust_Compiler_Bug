{"sha": "2148f2996ae76a7773eb7d8e30c02bd036ec7b3c", "node_id": "C_kwDOANBUbNoAKDIxNDhmMjk5NmFlNzZhNzc3M2ViN2Q4ZTMwYzAyYmQwMzZlYzdiM2M", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2022-06-21T13:50:06Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-12T12:24:11Z"}, "message": "[Ada] Clean up scanner\n\nThis patch removes some obsolete code in the scanner and related files,\nand corrects some comments. Tok_Special is used only by the\npreprocessor, and uses only the two characters '#' and '$'.\n\nIt might be simpler to have a single flag indicating we're scanning for\npreprocessing, instead of the Special_Characters array and the\nEnd_Of_Line_Is_Token flag, but that's for another day.\n\ngcc/ada/\n\n\t* scans.ads: Fix obsolete comments about Tok_Special, and give\n\tSpecial_Character a predicate assuring it is one of the two\n\tcharacters used in preprocessing.\n\t* scng.ads: Clean up comments.\n\t* scng.adb: Clean up handling of Tok_Special.  Remove comment\n\tabout '@' (target_name), which doesn't seem very helpful.\n\tSet_Special_Character will now blow up if given anything other\n\tthan '#' and '$', because of the predicate on Special_Character;\n\tit's not clear why it used to say \"when others => null;\".\n\tRemove Comment_Is_Token, which is not used.\n\t* scn.ads: Remove commented-out use clause.  Remove redundant\n\tcomment.\n\t* ali-util.adb: Use \"is null\" for do-nothing procedures.\n\t* gprep.adb (Post_Scan): Use \"is null\".", "tree": {"sha": "7aaa816d7c8d7e80b59386ddc2efda9f4ad8e39a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7aaa816d7c8d7e80b59386ddc2efda9f4ad8e39a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe6f256d5ba85a588493a489af1bdbe8087e368a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe6f256d5ba85a588493a489af1bdbe8087e368a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe6f256d5ba85a588493a489af1bdbe8087e368a"}], "stats": {"total": 220, "additions": 37, "deletions": 183}, "files": [{"sha": "6435905ea5c9fa93d19c3dd42ebf8f6d396ed5c4", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 5, "deletions": 58, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=2148f2996ae76a7773eb7d8e30c02bd036ec7b3c", "patch": "@@ -42,15 +42,12 @@ package body ALI.Util is\n    --  empty, because we don't want to report any errors when computing\n    --  a source checksum.\n \n-   procedure Post_Scan;\n+   procedure Post_Scan is null;\n \n-   procedure Error_Msg (Msg : String; Flag_Location : Source_Ptr);\n-\n-   procedure Error_Msg_S (Msg : String);\n-\n-   procedure Error_Msg_SC (Msg : String);\n-\n-   procedure Error_Msg_SP (Msg : String);\n+   procedure Error_Msg (Msg : String; Flag_Location : Source_Ptr) is null;\n+   procedure Error_Msg_S (Msg : String) is null;\n+   procedure Error_Msg_SC (Msg : String) is null;\n+   procedure Error_Msg_SP (Msg : String) is null;\n \n    --  Instantiation of Styleg, needed to instantiate Scng\n \n@@ -85,47 +82,6 @@ package body ALI.Util is\n       return Checksum1 = Checksum2 and then Checksum1 /= Checksum_Error;\n    end Checksums_Match;\n \n-   ---------------\n-   -- Error_Msg --\n-   ---------------\n-\n-   procedure Error_Msg (Msg : String; Flag_Location : Source_Ptr) is\n-      pragma Warnings (Off, Msg);\n-      pragma Warnings (Off, Flag_Location);\n-   begin\n-      null;\n-   end Error_Msg;\n-\n-   -----------------\n-   -- Error_Msg_S --\n-   -----------------\n-\n-   procedure Error_Msg_S (Msg : String) is\n-      pragma Warnings (Off, Msg);\n-   begin\n-      null;\n-   end Error_Msg_S;\n-\n-   ------------------\n-   -- Error_Msg_SC --\n-   ------------------\n-\n-   procedure Error_Msg_SC (Msg : String) is\n-      pragma Warnings (Off, Msg);\n-   begin\n-      null;\n-   end Error_Msg_SC;\n-\n-   ------------------\n-   -- Error_Msg_SP --\n-   ------------------\n-\n-   procedure Error_Msg_SP (Msg : String) is\n-      pragma Warnings (Off, Msg);\n-   begin\n-      null;\n-   end Error_Msg_SP;\n-\n    -----------------------\n    -- Get_File_Checksum --\n    -----------------------\n@@ -192,15 +148,6 @@ package body ALI.Util is\n       Interfaces.Reset;\n    end Initialize_ALI_Source;\n \n-   ---------------\n-   -- Post_Scan --\n-   ---------------\n-\n-   procedure Post_Scan is\n-   begin\n-      null;\n-   end Post_Scan;\n-\n    ----------------------\n    -- Read_Withed_ALIs --\n    ----------------------"}, {"sha": "34575c203dd7f8dc3ee083e5b6c08ca6156b3e7c", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=2148f2996ae76a7773eb7d8e30c02bd036ec7b3c", "patch": "@@ -93,8 +93,8 @@ package body GPrep is\n    procedure Display_Copyright;\n    --  Display the copyright notice\n \n-   procedure Post_Scan;\n-   --  Null procedure, needed by instantiation of Scng below\n+   procedure Post_Scan is null;\n+   --  Needed by instantiation of Scng below\n \n    package Scanner is new Scng\n      (Post_Scan,\n@@ -327,15 +327,6 @@ package body GPrep is\n       New_Line (Outfile.all);\n    end New_EOL_To_Outfile;\n \n-   ---------------\n-   -- Post_Scan --\n-   ---------------\n-\n-   procedure Post_Scan is\n-   begin\n-      null;\n-   end Post_Scan;\n-\n    ----------------------------\n    -- Preprocess_Infile_Name --\n    ----------------------------"}, {"sha": "dbe9e5a7242c237bd8831b71ba91bfc2137f77ac", "filename": "gcc/ada/scans.ads", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/gcc%2Fada%2Fscans.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/gcc%2Fada%2Fscans.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscans.ads?ref=2148f2996ae76a7773eb7d8e30c02bd036ec7b3c", "patch": "@@ -210,15 +210,11 @@ package Scans is\n \n       Tok_End_Of_Line,\n       --  Represents an end of line. Not used during normal compilation scans\n-      --  where end of line is ignored. Active for preprocessor scanning and\n-      --  also when scanning project files (where it is needed because of ???)\n+      --  where end of line is ignored. Active for preprocessor scanning.\n \n       Tok_Special,\n-      --  AI12-0125-03 : target name as abbreviation for LHS\n-\n-      --  Otherwise used only in preprocessor scanning (to represent one of\n-      --  the characters '#', '$', '?', '@', '`', '\\', '^', '~', or '_'. The\n-      --  character value itself is stored in Scans.Special_Character.\n+      --  Special character used by the preprocessor. The character itself is\n+      --  stored in Special_Character below.\n \n       No_Token);\n       --  No_Token is used for initializing Token values to indicate that\n@@ -466,12 +462,9 @@ package Scans is\n    --  character found (i.e. a character that does not fit in Character or\n    --  Wide_Character).\n \n-   Special_Character : Character;\n-   --  AI12-0125-03 : '@' as target name is handled elsewhere.\n-   --  Valid only when Token = Tok_Special. Returns one of the characters\n-   --  '#', '$', '?', '`', '\\', '^', '~', or '_'.\n-   --\n-   --  Why only this set? What about wide characters???\n+   subtype Special_Preprocessor_Character is Character with\n+     Predicate => Special_Preprocessor_Character in '#' | '$';\n+   Special_Character : Special_Preprocessor_Character;\n \n    Comment_Id : Name_Id := No_Name;\n    --  Valid only when Token = Tok_Comment. Store the string that follows"}, {"sha": "40ece8ff9b53727f73d0dcb301ead7a2da1caf9d", "filename": "gcc/ada/scn.ads", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/gcc%2Fada%2Fscn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/gcc%2Fada%2Fscn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscn.ads?ref=2148f2996ae76a7773eb7d8e30c02bd036ec7b3c", "patch": "@@ -29,7 +29,7 @@\n with Casing; use Casing;\n with Errout; use Errout;\n with Scng;\n-with Style;  --  use Style;\n+with Style;\n with Types;  use Types;\n \n package Scn is\n@@ -75,9 +75,5 @@ package Scn is\n       Style        => Style.Style_Inst);\n \n    procedure Scan renames Scanner.Scan;\n-   --  Scan scans out the next token, and advances the scan state accordingly\n-   --  (see package Scans for details). If the scan encounters an illegal\n-   --  token, then an error message is issued pointing to the bad character,\n-   --  and Scan returns a reasonable substitute token of some kind.\n \n end Scn;"}, {"sha": "f2cf41396f8e495743cf591be3559aad37469839", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 13, "deletions": 80, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=2148f2996ae76a7773eb7d8e30c02bd036ec7b3c", "patch": "@@ -29,7 +29,6 @@ with Errout;   use Errout;\n with Hostparm; use Hostparm;\n with Namet;    use Namet;\n with Opt;      use Opt;\n-with Scans;    use Scans;\n with Sinput;   use Sinput;\n with Snames;   use Snames;\n with Stringt;  use Stringt;\n@@ -53,9 +52,6 @@ package body Scng is\n    Special_Characters : array (Character) of Boolean := (others => False);\n    --  For characters that are Special token, the value is True\n \n-   Comment_Is_Token : Boolean := False;\n-   --  True if comments are tokens\n-\n    End_Of_Line_Is_Token : Boolean := False;\n    --  True if End_Of_Line is a token\n \n@@ -259,9 +255,6 @@ package body Scng is\n \n    procedure Scan is\n \n-      Start_Of_Comment : Source_Ptr;\n-      --  Record start of comment position\n-\n       Underline_Found : Boolean;\n       --  During scanning of an identifier, set to True if last character\n       --  scanned was an underline or other punctuation character. This\n@@ -1609,10 +1602,6 @@ package body Scng is\n                   return;\n                end if;\n \n-               --  Otherwise scan out the comment\n-\n-               Start_Of_Comment := Scan_Ptr;\n-\n                --  Loop to scan comment (this loop runs more than once only if\n                --  a horizontal tab or other non-graphic character is scanned)\n \n@@ -1711,18 +1700,8 @@ package body Scng is\n                   end if;\n                end loop;\n \n-               --  Note that, except when comments are tokens, we do NOT\n-               --  execute a return here, instead we fall through to reexecute\n-               --  the scan loop to look for a token.\n-\n-               if Comment_Is_Token then\n-                  Name_Len := Integer (Scan_Ptr - Start_Of_Comment);\n-                  Name_Buffer (1 .. Name_Len) :=\n-                    String (Source (Start_Of_Comment .. Scan_Ptr - 1));\n-                  Comment_Id := Name_Find;\n-                  Token := Tok_Comment;\n-                  return;\n-               end if;\n+               --  Note that we do not return here; instead we fall through to\n+               --  reexecute the scan loop to look for a token.\n             end if;\n          end Minus_Case;\n \n@@ -2072,14 +2051,6 @@ package body Scng is\n          --  Underline character\n \n          when '_' =>\n-            if Special_Characters ('_') then\n-               Token_Ptr := Scan_Ptr;\n-               Scan_Ptr := Scan_Ptr + 1;\n-               Token := Tok_Special;\n-               Special_Character := '_';\n-               return;\n-            end if;\n-\n             Error_Msg_S (\"identifier cannot start with underline\");\n             Name_Len := 1;\n             Name_Buffer (1) := '_';\n@@ -2132,42 +2103,19 @@ package body Scng is\n                Error_Illegal_Character;\n             end if;\n \n-         --  Invalid control characters\n-\n-         when ACK\n-            | ASCII.SO\n-            | BEL\n-            | BS\n-            | CAN\n-            | DC1\n-            | DC2\n-            | DC3\n-            | DC4\n-            | DEL\n-            | DLE\n-            | EM\n-            | ENQ\n-            | EOT\n-            | ETB\n-            | ETX\n-            | FS\n-            | GS\n-            | NAK\n-            | NUL\n-            | RS\n-            | SI\n-            | SOH\n-            | STX\n-            | SYN\n-            | US\n+         --  Illegal characters\n+\n+         when ACK | ASCII.SO | BEL | BS | CAN | DC1 | DC2 | DC3 | DC4 | DEL\n+           | DLE | EM | ENQ | EOT | ETB | ETX | FS | GS | NAK | NUL | RS | SI\n+           | SOH | STX | SYN | US\n+           | '?' | '`' | '\\' | '^' | '~'\n          =>\n             Error_Illegal_Character;\n \n-         --  Invalid graphic characters\n-         --  Note that '@' is handled elsewhere, because following AI12-125\n-         --  it denotes the target_name of an assignment.\n+         --  Special preprocessor characters. If Set_Special_Character has been\n+         --  called, return a Special token. Otherwise give an error.\n \n-         when '#' | '$' | '?' | '`' | '\\' | '^' | '~' =>\n+         when Special_Preprocessor_Character =>\n \n             --  If Set_Special_Character has been called for this character,\n             --  set Scans.Special_Character and return a Special token.\n@@ -2710,15 +2658,6 @@ package body Scng is\n          end if;\n    end Scan;\n \n-   --------------------------\n-   -- Set_Comment_As_Token --\n-   --------------------------\n-\n-   procedure Set_Comment_As_Token (Value : Boolean) is\n-   begin\n-      Comment_Is_Token := Value;\n-   end Set_Comment_As_Token;\n-\n    ------------------------------\n    -- Set_End_Of_Line_As_Token --\n    ------------------------------\n@@ -2732,15 +2671,9 @@ package body Scng is\n    -- Set_Special_Character --\n    ---------------------------\n \n-   procedure Set_Special_Character (C : Character) is\n+   procedure Set_Special_Character (C : Special_Preprocessor_Character) is\n    begin\n-      case C is\n-         when '#' | '$' | '_' | '?' | '@' | '`' | '\\' | '^' | '~' =>\n-            Special_Characters (C) := True;\n-\n-         when others =>\n-            null;\n-      end case;\n+      Special_Characters (C) := True;\n    end Set_Special_Character;\n \n    ----------------------"}, {"sha": "fcce36bf111cd05bb7d32a0ad64b68d0f0569988", "filename": "gcc/ada/scng.ads", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/gcc%2Fada%2Fscng.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c/gcc%2Fada%2Fscng.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.ads?ref=2148f2996ae76a7773eb7d8e30c02bd036ec7b3c", "patch": "@@ -23,11 +23,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package contains a generic lexical analyzer. This is used for scanning\n---  Ada source files or text files with an Ada-like syntax, such as project\n---  files. It is instantiated in Scn and Prj.Err.\n+--  This is a generic lexical analyzer, used for scanning Ada source files, and\n+--  also for preprocessor files.\n \n with Casing; use Casing;\n+with Scans;  use Scans;\n with Styleg;\n with Types;  use Types;\n \n@@ -68,33 +68,27 @@ package Scng is\n    --  Scan scans out the next token, and advances the scan state accordingly\n    --  (see package Scan_State for details). If the scan encounters an illegal\n    --  token, then an error message is issued pointing to the bad character,\n-   --  and Scan returns a reasonable substitute token of some kind.\n-   --  For tokens Char_Literal, Identifier, Real_Literal, Integer_Literal,\n-   --  String_Literal and Operator_Symbol, Post_Scan is called after scanning.\n+   --  and Scan returns a reasonable substitute token. For tokens Char_Literal,\n+   --  Identifier, Real_Literal, Integer_Literal, String_Literal and\n+   --  Operator_Symbol, Post_Scan is called after scanning.\n \n    function Determine_Token_Casing return Casing_Type;\n    pragma Inline (Determine_Token_Casing);\n    --  Determines the casing style of the current token, which is\n    --  either a keyword or an identifier. See also package Casing.\n \n-   procedure Set_Special_Character (C : Character);\n-   --  Indicate that one of the following character '#', '$', '?',  '`',\n-   --  '\\', '^', '_' or '~', when found is a Special token.\n-   --  AI12-0125-03 : target name (ES) is not in this list because '@' is\n-   --  handled as a special token as abbreviation of LHS of assignment.\n+   procedure Set_Special_Character (C : Special_Preprocessor_Character);\n+   --  Called when the preprocessor is active to indicate that Scan should\n+   --  return a Special token for C.\n \n    procedure Reset_Special_Characters;\n-   --  Indicate that there is no characters that are Special tokens., which\n+   --  Indicate that there are no characters that are Special tokens, which\n    --  is the default.\n \n    procedure Set_End_Of_Line_As_Token (Value : Boolean);\n    --  Indicate if End_Of_Line is a token or not.\n    --  By default, End_Of_Line is not a token.\n \n-   procedure Set_Comment_As_Token (Value : Boolean);\n-   --  Indicate if a comment is a token or not.\n-   --  By default, a comment is not a token.\n-\n    function Set_Start_Column return Column_Number;\n    --  This routine is called with Scan_Ptr pointing to the first character\n    --  of a line. On exit, Scan_Ptr is advanced to the first non-blank"}]}