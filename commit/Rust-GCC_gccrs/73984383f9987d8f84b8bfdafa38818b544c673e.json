{"sha": "73984383f9987d8f84b8bfdafa38818b544c673e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM5ODQzODNmOTk4N2Q4Zjg0YjhiZmRhZmEzODgxOGI1NDRjNjczZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2017-12-06T23:50:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2017-12-06T23:50:58Z"}, "message": "re PR tree-optimization/69224 (-Warray-bounds false positive with -O3 and struct pointer parameter)\n\n\tPR tree-optimization/69224\n\tPR tree-optimization/80907\n\tPR tree-optimization/82286\n\t* gcc.dg/pr69224.c: New test.\n\t* gcc.dg/pr80907.c: New test.\n\t* gcc.dg/pr82286.c: New test.\n\nFrom-SVN: r255457", "tree": {"sha": "b430f85fc4270fa09f05f7f49aef5e290b27c2bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b430f85fc4270fa09f05f7f49aef5e290b27c2bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73984383f9987d8f84b8bfdafa38818b544c673e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73984383f9987d8f84b8bfdafa38818b544c673e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73984383f9987d8f84b8bfdafa38818b544c673e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73984383f9987d8f84b8bfdafa38818b544c673e/comments", "author": null, "committer": null, "parents": [{"sha": "91c95da87e9a4944f145f988ecbc0926bf68e452", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91c95da87e9a4944f145f988ecbc0926bf68e452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91c95da87e9a4944f145f988ecbc0926bf68e452"}], "stats": {"total": 108, "additions": 108, "deletions": 0}, "files": [{"sha": "3298549a9caca0777f148e4dbbb020c7e7b026f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73984383f9987d8f84b8bfdafa38818b544c673e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73984383f9987d8f84b8bfdafa38818b544c673e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=73984383f9987d8f84b8bfdafa38818b544c673e", "patch": "@@ -1,3 +1,12 @@\n+2017-12-04  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/69224\n+\tPR tree-optimization/80907\n+\tPR tree-optimization/82286\n+\t* gcc.dg/pr69224.c: New test.\n+\t* gcc.dg/pr80907.c: New test.\n+\t* gcc.dg/pr82286.c: New test.\n+\n 2017-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/80259"}, {"sha": "606b7fee2ae66f6e3c5c8011ffe8501cc09f225b", "filename": "gcc/testsuite/gcc.dg/pr69224.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73984383f9987d8f84b8bfdafa38818b544c673e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69224.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73984383f9987d8f84b8bfdafa38818b544c673e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69224.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69224.c?ref=73984383f9987d8f84b8bfdafa38818b544c673e", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -Warray-bounds\" } */\n+\n+struct S {\n+        int a;\n+        int b;\n+        int c;\n+        int d;\n+        int e;\n+        float x[5];\n+        float y[5];      // Comment these two lines out to\n+        float z[5 - 1];  // remove the warning\n+};\n+void f(struct S *s, float a[], float **b, float c[]) {\n+        if ((s->b == 1) && (s->d > 0)) {\n+                for (int i = 0; i < s->a; i++) {\n+                        if (a[i] != 0.0) {\n+                                for (int j = 0; j < s->d - 1; j++) {\n+                                        if ((c[i] >= s->x[j]) && (c[i] <= s->x[j + 1])) {\n+                                                b[2*j][i] = s->x[j];\n+                                                break;\n+                                        }\n+                                }\n+                        }\n+                }\n+        }\n+}"}, {"sha": "56e1d3625936345f5c0c990228f4a0fd558fcbce", "filename": "gcc/testsuite/gcc.dg/pr80907.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73984383f9987d8f84b8bfdafa38818b544c673e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80907.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73984383f9987d8f84b8bfdafa38818b544c673e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80907.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80907.c?ref=73984383f9987d8f84b8bfdafa38818b544c673e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -Warray-bounds\" } */\n+\n+\n+\n+int x[3];\n+int n=2;\n+void foo() \n+{\n+    for(int i=0;i<n;i++) for(int j=0;j<=i;j++) x[i+j]++;\n+}\n+"}, {"sha": "13e22501d4884fb90df80fac1b08a960293d4a9d", "filename": "gcc/testsuite/gcc.dg/pr82286.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73984383f9987d8f84b8bfdafa38818b544c673e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82286.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73984383f9987d8f84b8bfdafa38818b544c673e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82286.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82286.c?ref=73984383f9987d8f84b8bfdafa38818b544c673e", "patch": "@@ -0,0 +1,60 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -Warray-bounds\" } */\n+\n+#include <stdio.h>\n+#include <math.h>\n+\n+#define MAX_MATRIX_SIZE      (10)\n+\n+typedef struct\n+{\n+  unsigned int nof_rows;\n+  unsigned int nof_cols;\n+  float data[MAX_MATRIX_SIZE][MAX_MATRIX_SIZE];\n+} MATRIX_TYPE;\n+\n+extern void mtrx_decompose_matrix (MATRIX_TYPE * p_input_matrix);\n+\n+void\n+mtrx_decompose_matrix (MATRIX_TYPE * p_input_matrix)\n+{\n+  unsigned int row;\n+  unsigned int col;\n+  unsigned int sub;\n+  float sum;\n+  MATRIX_TYPE tmp;\n+\n+  for (row = 0; row < MAX_MATRIX_SIZE; row++) {\n+    for (col = 0; col < MAX_MATRIX_SIZE; col++) {\n+      tmp.data[row][col] = 0.0;\n+    }\n+  }\n+  tmp.nof_cols = 0;\n+  tmp.nof_rows = 0;\n+\n+  for (row = 0; row < p_input_matrix->nof_rows; row++) {\n+    for (col = row; col < p_input_matrix->nof_cols; col++) {\n+      sum = 0.0f;\n+      for (sub = 0; sub < row; sub++) {\n+\tsum += tmp.data[row][sub] * tmp.data[col][sub];\n+      }\n+      sum = p_input_matrix->data[col][row] - sum;\n+      if (row == col) {\n+\tif (sum >= 0.0) {\n+#if ERROR\n+\t  tmp.data[row][col] = sqrtf (sum);\n+#else\n+\t  tmp.data[row][col] = sum;\n+#endif\n+\t}\n+\telse {\n+\t  tmp.data[row][col] = 0.0f;\n+\t}\n+      }\n+      else {\n+\ttmp.data[col][row] = sum / tmp.data[row][row];\n+      }\n+    }\n+  }\n+}\n+"}]}