{"sha": "baffad1f3d30a473263e56f86b1420dbc7371ab3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFmZmFkMWYzZDMwYTQ3MzI2M2U1NmY4NmIxNDIwZGJjNzM3MWFiMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2006-05-19T08:05:39Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2006-05-19T08:05:39Z"}, "message": "re PR target/22209 (libgfortran unresolvable symbols on irix6.5)\n\n\t* libgcc2.c (MIN_UNITS_PER_WORD): Move default definition from\n\tlibgcc2.h.\n\t(LIBGCC2_UNITS_PER_WORD): Provide default definition, using old\n\tMIN_UNITS_PER_WORD logic from libgcc2.h.  Do nothing if\n\tLIBGCC2_UNITS_PER_WORD > MIN_UNITS_PER_WORD.\n\t* libgcc2.h (MIN_UNITS_PER_WORD): Remove definition from here.\n\tUse LIBGCC2_UNITS_PER_WORD rather than MIN_UNITS_PER_WORD to\n\tdetermine the size of Wtype, etc.\n\t* mklibgcc.in (LIB2_SIDITI_CONV_FUNCS): New argument.\n\t(swfloatfuncs): New variable.\n\t(dwfloatfuncs): Likewise.\n\t(lib2funcs): Remove floating-point conversion functions from\n\tinitial assignment.  Use LIB2_SIDITI_CONV_FUNCS to determine\n\tthe set of conversion routines needed.  Allow entries to specify\n\tan object name, filename and word size.  Update users accordingly.\n\t* Makefile.in (libgcc.mk): Pass LIB2_SIDITI_CONV_FUNCS.\n\t* config/mips/t-mips (LIB2_SIDITI_CONV_FUNCS): Define.\n\n\tRevert:\n\n\t2006-02-08  Roger Sayle  <roger@eyesopen.com>\n\n\tPR target/22209\n\t* config/fixtfdi.c: New libgcc source file.\n\t* config/fixunstfdi.c: New source file.\n\t* config/floatditf.c: New source file.\n\t* config/floatunditf.c: New souce file.\n\t* config/mips/t-iris6 (LIB2FUNCS_EXTRA): Include the new source\n\tfiles above instead of config/mips/_tilib.c.\n\t* config/mips/t-linux64 (LIB2FUNCS_EXTRA): Likewise.\n\nFrom-SVN: r113903", "tree": {"sha": "cf643de5bba2d973c8fea4043b4125197d2df44c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf643de5bba2d973c8fea4043b4125197d2df44c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/baffad1f3d30a473263e56f86b1420dbc7371ab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baffad1f3d30a473263e56f86b1420dbc7371ab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baffad1f3d30a473263e56f86b1420dbc7371ab3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baffad1f3d30a473263e56f86b1420dbc7371ab3/comments", "author": null, "committer": null, "parents": [{"sha": "41990f964687332cd2ea2ad59a02c18ed499db6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41990f964687332cd2ea2ad59a02c18ed499db6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41990f964687332cd2ea2ad59a02c18ed499db6c"}], "stats": {"total": 232, "additions": 108, "deletions": 124}, "files": [{"sha": "c507925cec3d15154b85ed002c836e35c57d67b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=baffad1f3d30a473263e56f86b1420dbc7371ab3", "patch": "@@ -1,3 +1,36 @@\n+2006-05-19  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* libgcc2.c (MIN_UNITS_PER_WORD): Move default definition from\n+\tlibgcc2.h.\n+\t(LIBGCC2_UNITS_PER_WORD): Provide default definition, using old\n+\tMIN_UNITS_PER_WORD logic from libgcc2.h.  Do nothing if\n+\tLIBGCC2_UNITS_PER_WORD > MIN_UNITS_PER_WORD.\n+\t* libgcc2.h (MIN_UNITS_PER_WORD): Remove definition from here.\n+\tUse LIBGCC2_UNITS_PER_WORD rather than MIN_UNITS_PER_WORD to\n+\tdetermine the size of Wtype, etc.\n+\t* mklibgcc.in (LIB2_SIDITI_CONV_FUNCS): New argument.\n+\t(swfloatfuncs): New variable.\n+\t(dwfloatfuncs): Likewise.\n+\t(lib2funcs): Remove floating-point conversion functions from\n+\tinitial assignment.  Use LIB2_SIDITI_CONV_FUNCS to determine\n+\tthe set of conversion routines needed.  Allow entries to specify\n+\tan object name, filename and word size.  Update users accordingly.\n+\t* Makefile.in (libgcc.mk): Pass LIB2_SIDITI_CONV_FUNCS.\n+\t* config/mips/t-mips (LIB2_SIDITI_CONV_FUNCS): Define.\n+\n+\tRevert:\n+\n+\t2006-02-08  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/22209\n+\t* config/fixtfdi.c: New libgcc source file.\n+\t* config/fixunstfdi.c: New source file.\n+\t* config/floatditf.c: New source file.\n+\t* config/floatunditf.c: New souce file.\n+\t* config/mips/t-iris6 (LIB2FUNCS_EXTRA): Include the new source\n+\tfiles above instead of config/mips/_tilib.c.\n+\t* config/mips/t-linux64 (LIB2FUNCS_EXTRA): Likewise.\n+\n 2006-05-18  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa/t-hpux-shlib (SHLIB_LINK): Remove `-lc'."}, {"sha": "c0ee0be18c4df2df6664d7d7c4a89b392af6bb41", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=baffad1f3d30a473263e56f86b1420dbc7371ab3", "patch": "@@ -1418,6 +1418,7 @@ libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD) $(LIB2ADD_ST) specs \\\n \tLIB2ADDEHSTATIC='$(LIB2ADDEHSTATIC)' \\\n \tLIB2ADDEHSHARED='$(LIB2ADDEHSHARED)' \\\n \tLIB2ADDEHDEP='$(LIB2ADDEHDEP)' \\\n+\tLIB2_SIDITI_CONV_FUNCS='$(LIB2_SIDITI_CONV_FUNCS)' \\\n \tLIBUNWIND='$(LIBUNWIND)' \\\n \tLIBUNWINDDEP='$(LIBUNWINDDEP)' \\\n \tSHLIBUNWIND_LINK='$(SHLIBUNWIND_LINK)' \\"}, {"sha": "42b8c2301c1c0cfdea7e4d8be6cdcdc18827bd55", "filename": "gcc/config/fixtfdi.c", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41990f964687332cd2ea2ad59a02c18ed499db6c/gcc%2Fconfig%2Ffixtfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41990f964687332cd2ea2ad59a02c18ed499db6c/gcc%2Fconfig%2Ffixtfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffixtfdi.c?ref=41990f964687332cd2ea2ad59a02c18ed499db6c", "patch": "@@ -1,18 +0,0 @@\n-/* Public domain.  */\n-#if __LDBL_MANT_DIG__ == 106 || __LDBL_MANT_DIG__ == 113\n-typedef int DItype __attribute__ ((mode (DI)));\n-typedef float TFtype __attribute__ ((mode (TF)));\n-\n-DItype __fixtfdi (TFtype);\n-DItype __fixunstfdi (TFtype);\n-\n-\n-DItype\n-__fixtfdi (TFtype x)\n-{\n-  if (x < 0)\n-    return - __fixunstfdi (-x);\n-  return __fixunstfdi (x);\n-}\n-\n-#endif"}, {"sha": "4a0012a1abd6c9b2c9e616a26423ddf74cfca3d4", "filename": "gcc/config/fixunstfdi.c", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41990f964687332cd2ea2ad59a02c18ed499db6c/gcc%2Fconfig%2Ffixunstfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41990f964687332cd2ea2ad59a02c18ed499db6c/gcc%2Fconfig%2Ffixunstfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffixunstfdi.c?ref=41990f964687332cd2ea2ad59a02c18ed499db6c", "patch": "@@ -1,35 +0,0 @@\n-/* Public domain.  */\n-#if __LDBL_MANT_DIG__ == 106 || __LDBL_MANT_DIG__ == 113\n-typedef int DItype __attribute__ ((mode (DI)));\n-typedef int SItype __attribute__ ((mode (SI)));\n-typedef unsigned int UDItype __attribute__ ((mode (DI)));\n-typedef unsigned int USItype __attribute__ ((mode (SI)));\n-typedef float TFtype __attribute__ ((mode (TF)));\n-\n-DItype __fixunstfdi (TFtype);\n-\n-DItype\n-__fixunstfdi (TFtype a)\n-{\n-  if (a < 0)\n-    return 0;\n-\n-  /* Compute high word of result, as a flonum.  */\n-  const TFtype b = (a / (((UDItype) 1) << (sizeof (SItype) * 8)));\n-  /* Convert that to fixed (but not to DItype!),\n-     and shift it into the high word.  */\n-  UDItype v = (USItype) b;\n-  v <<= (sizeof (SItype) * 8);\n-  /* Remove high part from the TFtype, leaving the low part as flonum.  */\n-  a -= (TFtype) v;\n-  /* Convert that to fixed (but not to DItype!) and add it in.\n-     Sometimes A comes out negative.  This is significant, since\n-     A has more bits than a long int does.  */\n-  if (a < 0)\n-    v -= (USItype) (-a);\n-  else\n-    v += (USItype) a;\n-  return v;\n-}\n-\n-#endif"}, {"sha": "9671ac710f13438202e05ec1127237387285a9a1", "filename": "gcc/config/floatditf.c", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41990f964687332cd2ea2ad59a02c18ed499db6c/gcc%2Fconfig%2Ffloatditf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41990f964687332cd2ea2ad59a02c18ed499db6c/gcc%2Fconfig%2Ffloatditf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloatditf.c?ref=41990f964687332cd2ea2ad59a02c18ed499db6c", "patch": "@@ -1,25 +0,0 @@\n-/* Public domain.  */\n-#if __LDBL_MANT_DIG__ == 106 || __LDBL_MANT_DIG__ == 113\n-typedef int DItype __attribute__ ((mode (DI)));\n-typedef int SItype __attribute__ ((mode (SI)));\n-typedef unsigned int UDItype __attribute__ ((mode (DI)));\n-typedef unsigned int USItype __attribute__ ((mode (SI)));\n-typedef float DFtype __attribute__ ((mode (DF)));\n-typedef float TFtype __attribute__ ((mode (TF)));\n-\n-TFtype __floatditf (UDItype);\n-\n-TFtype\n-__floatditf (UDItype u)\n-{\n-  DFtype dh, dl;\n-\n-  dh = (SItype) (u >> (sizeof (SItype) * 8));\n-  dh *= 2.0 * (((UDItype) 1) << ((sizeof (SItype) * 8) - 1));\n-  dl = (USItype) (u & ((((UDItype) 1) << (sizeof (SItype) * 8)) - 1));\n-\n-  return (TFtype) dh + (TFtype) dl;\n-}\n-\n-#endif\n-"}, {"sha": "1583e2a2e5684c2967a9c04cde6dbc6309c2f0b6", "filename": "gcc/config/floatunditf.c", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41990f964687332cd2ea2ad59a02c18ed499db6c/gcc%2Fconfig%2Ffloatunditf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41990f964687332cd2ea2ad59a02c18ed499db6c/gcc%2Fconfig%2Ffloatunditf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloatunditf.c?ref=41990f964687332cd2ea2ad59a02c18ed499db6c", "patch": "@@ -1,25 +0,0 @@\n-/* Public domain.  */\n-#if __LDBL_MANT_DIG__ == 106 || __LDBL_MANT_DIG__ == 113\n-typedef int DItype __attribute__ ((mode (DI)));\n-typedef int SItype __attribute__ ((mode (SI)));\n-typedef unsigned int UDItype __attribute__ ((mode (DI)));\n-typedef unsigned int USItype __attribute__ ((mode (SI)));\n-typedef float DFtype __attribute__ ((mode (DF)));\n-typedef float TFtype __attribute__ ((mode (TF)));\n-\n-TFtype __floatunditf (UDItype);\n-\n-TFtype\n-__floatunditf (UDItype u)\n-{\n-  DFtype dh, dl;\n-\n-  dh = (USItype) (u >> (sizeof (SItype) * 8));\n-  dh *= 2.0 * (((UDItype) 1) << ((sizeof (SItype) * 8) - 1));\n-  dl = (USItype) (u & ((((UDItype) 1) << (sizeof (SItype) * 8)) - 1));\n-\n-  return (TFtype) dh + (TFtype) dl;\n-}\n-\n-#endif\n-"}, {"sha": "515547206981a1d417cf83a74c77dbeb0972f318", "filename": "gcc/config/mips/t-iris6", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2Fconfig%2Fmips%2Ft-iris6", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2Fconfig%2Fmips%2Ft-iris6", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-iris6?ref=baffad1f3d30a473263e56f86b1420dbc7371ab3", "patch": "@@ -6,8 +6,6 @@ MULTILIB_OSDIRNAMES=../lib32 ../lib ../lib64\n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n-LIB2FUNCS_EXTRA = $(srcdir)/config/fixtfdi.c $(srcdir)/config/fixunstfdi.c $(srcdir)/config/floatditf.c $(srcdir)/config/floatunditf.c\n-\n TPBIT = tp-bit.c\n \n tp-bit.c: $(srcdir)/config/fp-bit.c"}, {"sha": "4f820ff2a56217fbfcac10c318a6c6e8afed5c8e", "filename": "gcc/config/mips/t-linux64", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2Fconfig%2Fmips%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2Fconfig%2Fmips%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-linux64?ref=baffad1f3d30a473263e56f86b1420dbc7371ab3", "patch": "@@ -4,8 +4,6 @@ MULTILIB_OSDIRNAMES = ../lib32 ../lib ../lib64\n \n EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o\n \n-LIB2FUNCS_EXTRA = $(srcdir)/config/fixtfdi.c $(srcdir)/config/fixunstfdi.c $(srcdir)/config/floatditf.c $(srcdir)/config/floatunditf.c\n-\n TPBIT = tp-bit.c\n \n tp-bit.c: $(srcdir)/config/fp-bit.c"}, {"sha": "c431dcc0e8ef6f0f6d86dbc9889ba5b1ef35f7da", "filename": "gcc/config/mips/t-mips", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2Fconfig%2Fmips%2Ft-mips", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2Fconfig%2Fmips%2Ft-mips", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-mips?ref=baffad1f3d30a473263e56f86b1420dbc7371ab3", "patch": "@@ -19,3 +19,5 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#endif' >> fp-bit.c\n \techo '#define QUIET_NAN_NEGATED' >> fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n+\n+LIB2_SIDITI_CONV_FUNCS=yes"}, {"sha": "3fce731ef601352b39256c37470a13a95a80ce78", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=baffad1f3d30a473263e56f86b1420dbc7371ab3", "patch": "@@ -40,6 +40,23 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #define ATTRIBUTE_HIDDEN\n #endif\n \n+#ifndef MIN_UNITS_PER_WORD\n+#define MIN_UNITS_PER_WORD UNITS_PER_WORD\n+#endif\n+\n+#ifndef LIBGCC2_UNITS_PER_WORD\n+# if MIN_UNITS_PER_WORD > 4\n+#  define LIBGCC2_UNITS_PER_WORD 8\n+# elif (MIN_UNITS_PER_WORD > 2 \\\n+        || (MIN_UNITS_PER_WORD > 1 && LONG_LONG_TYPE_SIZE > 32))\n+#  define LIBGCC2_UNITS_PER_WORD 4\n+# else\n+#  define LIBGCC2_UNITS_PER_WORD MIN_UNITS_PER_WORD\n+# endif\n+#endif\n+\n+#if LIBGCC2_UNITS_PER_WORD <= MIN_UNITS_PER_WORD\n+\n #include \"libgcc2.h\"\n \f\n #ifdef DECLARE_LIBRARY_RENAMES\n@@ -2162,3 +2179,4 @@ func_ptr __DTOR_LIST__[2];\n #endif\n #endif /* no INIT_SECTION_ASM_OP and not CTOR_LISTS_DEFINED_EXTERNALLY */\n #endif /* L_ctors */\n+#endif /* LIBGCC2_UNITS_PER_WORD <= MIN_UNITS_PER_WORD */"}, {"sha": "5b3a9e14cd14a4fcbc63c6ec3cf938d6a258642a", "filename": "gcc/libgcc2.h", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2Flibgcc2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2Flibgcc2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.h?ref=baffad1f3d30a473263e56f86b1420dbc7371ab3", "patch": "@@ -125,10 +125,6 @@ extern short int __get_eh_table_version (struct exception_descriptor *);\n #define IS_IBM_EXTENDED(SIZE) 0\n #endif\n \n-#ifndef MIN_UNITS_PER_WORD\n-#define MIN_UNITS_PER_WORD UNITS_PER_WORD\n-#endif\n-\n /* In the first part of this file, we are interfacing to calls generated\n    by the compiler itself.  These calls pass values into these routines\n    which have very specific modes (rather than very specific types), and\n@@ -201,7 +197,7 @@ typedef int word_type __attribute__ ((mode (__word__)));\n    turns out that no platform would define COMPAT_DIMODE_TRAPPING_ARITHMETIC\n    if it existed.  */\n \n-#if MIN_UNITS_PER_WORD > 4\n+#if LIBGCC2_UNITS_PER_WORD == 8\n #define W_TYPE_SIZE (8 * BITS_PER_UNIT)\n #define Wtype\tDItype\n #define UWtype\tUDItype\n@@ -212,8 +208,7 @@ typedef int word_type __attribute__ ((mode (__word__)));\n #define __NW(a,b)\t__ ## a ## di ## b\n #define __NDW(a,b)\t__ ## a ## ti ## b\n #define COMPAT_SIMODE_TRAPPING_ARITHMETIC\n-#elif MIN_UNITS_PER_WORD > 2 \\\n-      || (MIN_UNITS_PER_WORD > 1 && LONG_LONG_TYPE_SIZE > 32)\n+#elif LIBGCC2_UNITS_PER_WORD == 4\n #define W_TYPE_SIZE (4 * BITS_PER_UNIT)\n #define Wtype\tSItype\n #define UWtype\tUSItype\n@@ -223,7 +218,7 @@ typedef int word_type __attribute__ ((mode (__word__)));\n #define UDWtype\tUDItype\n #define __NW(a,b)\t__ ## a ## si ## b\n #define __NDW(a,b)\t__ ## a ## di ## b\n-#elif MIN_UNITS_PER_WORD > 1\n+#elif LIBGCC2_UNITS_PER_WORD == 2\n #define W_TYPE_SIZE (2 * BITS_PER_UNIT)\n #define Wtype\tHItype\n #define UWtype\tUHItype"}, {"sha": "7699cf3f7c2f31f7dd2443a4d099f1b446565dee", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 51, "deletions": 9, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baffad1f3d30a473263e56f86b1420dbc7371ab3/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=baffad1f3d30a473263e56f86b1420dbc7371ab3", "patch": "@@ -26,6 +26,7 @@\n # FPBIT\n # FPBIT_FUNCS\n # LIB2_DIVMOD_FUNCS\n+# LIB2_SIDITI_CONV_FUNCS\n # DFP_ENABLE\n # DFP_CFLAGS\n # DPBIT\n@@ -64,16 +65,48 @@ echo 'dirs = libgcc'\n echo\n \n # Library members defined in libgcc2.c.\n+\n+# The floating-point conversion routines that involve a single-word integer.\n+# XX stands for the integer mode.\n+swfloatfuncs=\n+for mode in sf df xf; do\n+  swfloatfuncs=\"$swfloatfuncs _fixuns${mode}XX\"\n+done\n+\n+# Likewise double-word routines.\n+dwfloatfuncs=\n+for mode in sf df xf tf; do\n+  dwfloatfuncs=\"$dwfloatfuncs _fix${mode}XX _fixuns${mode}XX\"\n+  dwfloatfuncs=\"$dwfloatfuncs _floatXX${mode} _floatunXX${mode}\"\n+done\n+\n+# Entries of the form <objfile>:<func>:<wordsize> indicate that libgcc2.c\n+# should be compiled with L<func> defined and with LIBGCC2_UNITS_PER_WORD\n+# set to <wordsize>.  <objfile> is the name of the associated object file\n+\n lib2funcs='_muldi3 _negdi2 _lshrdi3 _ashldi3 _ashrdi3\n-\t_cmpdi2 _ucmpdi2 _floatdidf _floatdisf _fixunsdfsi _fixunssfsi\n-\t_fixunsdfdi _fixdfdi _fixunssfdi _fixsfdi _fixxfdi _fixunsxfdi\n-\t_floatdixf _fixunsxfsi _fixtfdi _fixunstfdi _floatditf _clear_cache\n+\t_cmpdi2 _ucmpdi2 _floatdidf _clear_cache\n \t_enable_execute_stack _trampoline __main _absvsi2 _absvdi2 _addvsi3\n \t_addvdi3 _subvsi3 _subvdi3 _mulvsi3 _mulvdi3 _negvsi2 _negvdi2 _ctors\n \t_ffssi2 _ffsdi2 _clz _clzsi2 _clzdi2 _ctzsi2 _ctzdi2 _popcount_tab\n \t_popcountsi2 _popcountdi2 _paritysi2 _paritydi2 _powisf2 _powidf2\n \t_powixf2 _powitf2 _mulsc3 _muldc3 _mulxc3 _multc3 _divsc3 _divdc3\n-\t_divxc3 _divtc3 _floatundidf _floatundisf _floatundixf _floatunditf'\n+\t_divxc3 _divtc3'\n+\n+if [ \"$LIB2_SIDITI_CONV_FUNCS\" ]; then\n+  for func in $swfloatfuncs; do\n+    sifunc=`echo $func | sed -e 's/XX/si/'`\n+    lib2funcs=\"$lib2funcs $sifunc:$sifunc:4\"\n+  done\n+  for func in $dwfloatfuncs; do\n+    difunc=`echo $func | sed -e 's/XX/di/'`\n+    tifunc=`echo $func | sed -e 's/XX/ti/'`\n+    lib2funcs=\"$lib2funcs $difunc:$difunc:4 $tifunc:$difunc:8\"\n+  done\n+else\n+  lib2funcs=\"$lib2funcs `echo $swfloatfuncs | sed -e 's/XX/si/g'`\"\n+  lib2funcs=\"$lib2funcs `echo $dwfloatfuncs | sed -e 's/XX/di/g'`\"\n+fi\n \n # Disable SHLIB_LINK if shared libgcc not enabled.\n if [ \"@enable_shared@\" = \"no\" ]; then\n@@ -162,8 +195,8 @@ fi\n # defined as optimized assembly code in LIB1ASMFUNCS or as C code\n # in LIB2FUNCS_EXCLUDE.\n for name in $LIB1ASMFUNCS $LIB2FUNCS_EXCLUDE; do\n-  lib2funcs=`echo $lib2funcs | sed -e 's/^'$name' //' \\\n-\t\t\t\t   -e 's/ '$name' / /' \\\n+  lib2funcs=`echo $lib2funcs | sed -e 's/^'$name'[ :]//' \\\n+\t\t\t\t   -e 's/ '$name'[ :]/ /' \\\n \t\t\t\t   -e 's/ '$name'$//'`\n   LIB2_DIVMOD_FUNCS=`echo $LIB2_DIVMOD_FUNCS | sed -e 's/^'$name' //' \\\n \t\t\t\t                   -e 's/ '$name' / /' \\\n@@ -265,16 +298,25 @@ for ml in $MULTILIBS; do\n   #\n \n   for name in $lib2funcs; do\n+    case $name in\n+      *:*:*)\n+\tdefines=`echo $name | sed -e 's/.*:\\(.*\\):\\(.*\\)/-DL\\1 -DLIBGCC2_UNITS_PER_WORD=\\2/'`\n+\tname=`echo $name | sed -e 's/\\(.*\\):.*:.*/\\1/'`\n+\t;;\n+      *)\n+\tdefines=\"-DL$name\"\n+\t;;\n+    esac\n     if [ \"$libgcc_s_so\" ]; then\n       out=\"libgcc/${dir}/${name}${objext}\"\n       outS=\"libgcc/${dir}/${name}_s${objext}\"\n \n       echo $outS: $libgcc2_c_dep\n-      echo \"\t$gcc_s_compile\" $flags -DL$name -c '$(srcdir)/libgcc2.c' \\\n+      echo \"\t$gcc_s_compile\" $flags $defines -c '$(srcdir)/libgcc2.c' \\\n \t-o $outS\n \n       echo $out: $libgcc2_c_dep\n-      echo \"\t$gcc_compile\" $flags -DL$name '$(vis_hide)' \\\n+      echo \"\t$gcc_compile\" $flags $defines '$(vis_hide)' \\\n         -c '$(srcdir)/libgcc2.c' -o $out\n \n       echo $libgcc_a: $out\n@@ -285,7 +327,7 @@ for ml in $MULTILIBS; do\n     else\n       out=\"libgcc/${dir}/${name}${objext}\"\n       echo ${out}: stmp-dirs '$(srcdir)/config/$(LIB1ASMSRC)'\n-      echo \"\t$gcc_compile\" $flags -DL$name -c '$(srcdir)/libgcc2.c' -o $out\n+      echo \"\t$gcc_compile\" $flags $defines -c '$(srcdir)/libgcc2.c' -o $out\n       echo $libgcc_a: $out\n     fi\n   done"}]}