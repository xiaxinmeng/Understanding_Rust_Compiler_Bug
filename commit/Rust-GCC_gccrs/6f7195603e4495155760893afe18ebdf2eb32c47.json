{"sha": "6f7195603e4495155760893afe18ebdf2eb32c47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY3MTk1NjAzZTQ0OTUxNTU3NjA4OTNhZmUxOGViZGYyZWIzMmM0Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-04-26T07:32:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-04-26T07:32:27Z"}, "message": "re PR c++/31598 (g++ does not accept some OpenMP code)\n\n\tPR c++/31598\n\t* tree-inline.c (copy_body_r): Don't touch TREE_TYPE of OMP_CLAUSE.\n\n\t* semantics.c (finish_omp_clauses): Don't create CP_OMP_CLAUSE_INFO\n\tfor type dependent OMP_CLAUSE_DECLs.\n\n\t* g++.dg/gomp/pr31598.C: New test.\n\nFrom-SVN: r124178", "tree": {"sha": "83233f4c14ba224f71a2d720e233e2716977bfeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83233f4c14ba224f71a2d720e233e2716977bfeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f7195603e4495155760893afe18ebdf2eb32c47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f7195603e4495155760893afe18ebdf2eb32c47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f7195603e4495155760893afe18ebdf2eb32c47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f7195603e4495155760893afe18ebdf2eb32c47/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0eb05eaa18608b8aacd94d1c74ceac2ea581191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0eb05eaa18608b8aacd94d1c74ceac2ea581191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0eb05eaa18608b8aacd94d1c74ceac2ea581191"}], "stats": {"total": 76, "additions": 74, "deletions": 2}, "files": [{"sha": "bc48621e093326536c901a9fd694b27db646299b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7195603e4495155760893afe18ebdf2eb32c47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7195603e4495155760893afe18ebdf2eb32c47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f7195603e4495155760893afe18ebdf2eb32c47", "patch": "@@ -1,5 +1,8 @@\n 2007-04-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/31598\n+\t* tree-inline.c (copy_body_r): Don't touch TREE_TYPE of OMP_CLAUSE.\n+\n \tPR tree-optimization/30558\n \t* tree-eh.c (lower_eh_filter): If EH_FILTER_MUST_NOT_THROW\n \tclear this_state.prev_try."}, {"sha": "6fea3c6b649f63fa2e35fdc56f9652bab8011369", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7195603e4495155760893afe18ebdf2eb32c47/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7195603e4495155760893afe18ebdf2eb32c47/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f7195603e4495155760893afe18ebdf2eb32c47", "patch": "@@ -1,3 +1,9 @@\n+2007-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/31598\n+\t* semantics.c (finish_omp_clauses): Don't create CP_OMP_CLAUSE_INFO\n+\tfor type dependent OMP_CLAUSE_DECLs.\n+\n 2007-04-24  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/31338"}, {"sha": "a920bfb6ce7fae8743ddc044e87f4928a1259dd5", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7195603e4495155760893afe18ebdf2eb32c47/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7195603e4495155760893afe18ebdf2eb32c47/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=6f7195603e4495155760893afe18ebdf2eb32c47", "patch": "@@ -3627,7 +3627,8 @@ finish_omp_clauses (tree clauses)\n \t Save the results, because later we won't be in the right context\n \t for making these queries.  */\n       if (CLASS_TYPE_P (inner_type)\n-\t  && (need_default_ctor || need_copy_ctor || need_copy_assignment))\n+\t  && (need_default_ctor || need_copy_ctor || need_copy_assignment)\n+\t  && !type_dependent_expression_p (t))\n \t{\n \t  int save_errorcount = errorcount;\n \t  tree info;"}, {"sha": "4667c9da9b78c04933c8ba8bebcc1b5c5d456279", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7195603e4495155760893afe18ebdf2eb32c47/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7195603e4495155760893afe18ebdf2eb32c47/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f7195603e4495155760893afe18ebdf2eb32c47", "patch": "@@ -1,5 +1,8 @@\n 2007-04-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/31598\n+\t* g++.dg/gomp/pr31598.C: New test.\n+\n \tPR tree-optimization/30558\n \t* g++.dg/gomp/pr30558.C: New test.\n "}, {"sha": "3ebcead5ac999f67bb264a2ff760f88bc4290552", "filename": "gcc/testsuite/g++.dg/gomp/pr31598.C", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7195603e4495155760893afe18ebdf2eb32c47/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr31598.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7195603e4495155760893afe18ebdf2eb32c47/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr31598.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr31598.C?ref=6f7195603e4495155760893afe18ebdf2eb32c47", "patch": "@@ -0,0 +1,59 @@\n+// PR c++/31598\n+// { dg-do compile }\n+//\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Contributed by Theodore.Papadopoulo\n+//   16 Apr 2007 <Theodore.Papadopoulo@sophia.inria.fr>\n+\n+int i;\n+template <typename> struct A { A() {} };\n+template <typename> struct C { C() { i++; } C(const C &) { i += 2; } };\n+struct D { D() {} };\n+\n+struct M { typedef double E; };\n+\n+template <typename T>\n+struct R\n+{\n+  R()\n+  {\n+    typedef A<typename T::E> B;\n+    B b;\n+    #pragma omp parallel for firstprivate(b) schedule(guided)\n+      for (int t = 0; t < 10; ++t)\n+\t;\n+  }\n+};\n+\n+template <typename T>\n+struct S\n+{\n+  S()\n+  {\n+    typedef C<typename T::E> B;\n+    B b;\n+    #pragma omp parallel for firstprivate(b)\n+      for (int t = 0; t < 10; ++t)\n+\t;\n+  }\n+};\n+\n+struct U\n+{\n+  U()\n+  {\n+    D b;\n+    #pragma omp parallel for firstprivate(b)\n+      for (int t = 0; t < 10; ++t)\n+\t;\n+  }\n+};\n+\n+int\n+main ()\n+{\n+  R<M> r;\n+  S<M> s;\n+  U u;\n+  return 0;\n+}"}, {"sha": "77d3864605438b4c4d8985f9ac17c72453f786f5", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7195603e4495155760893afe18ebdf2eb32c47/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7195603e4495155760893afe18ebdf2eb32c47/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=6f7195603e4495155760893afe18ebdf2eb32c47", "patch": "@@ -731,7 +731,7 @@ copy_body_r (tree *tp, int *walk_subtrees, void *data)\n \t    (NULL_TREE,\n \t     id->eh_region_offset + TREE_INT_CST_LOW (TREE_OPERAND (*tp, 0)));\n \n-      if (!GIMPLE_TUPLE_P (*tp))\n+      if (!GIMPLE_TUPLE_P (*tp) && TREE_CODE (*tp) != OMP_CLAUSE)\n \tTREE_TYPE (*tp) = remap_type (TREE_TYPE (*tp), id);\n \n       /* The copied TARGET_EXPR has never been expanded, even if the"}]}