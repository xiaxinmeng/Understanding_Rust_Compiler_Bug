{"sha": "db19e39b823e3f3ad9695c03366cbb644bb80265", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIxOWUzOWI4MjNlM2YzYWQ5Njk1YzAzMzY2Y2JiNjQ0YmI4MDI2NQ==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2004-01-13T20:54:46Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2004-01-13T20:54:46Z"}, "message": "2004-01-13  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java\n\t(initializeInsets): Remove method.\n\t(GtkComponentPeer): Initialize insets field.  Remove call to\n\tinitializeInsets.\n\t* gnu/java/awt/peer/gtk/GtkDialogPeer.java (initializeInsets):\n\tRemove method.\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (initializeInsets):\n\tRemove method.\n\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c:\n\t(latestInsets): Remove field.\n\t(native create): Add insets parameter.  Call\n\twindow_get_frame_extents.  Set the window's default size and\n\tsize request based on its frame extents.\n\t(create): Initialize insets.\n\t(postInsetsChangedEvent): New method.\n\t(postConfigureEvent): Remove parameters top, left, bottom,\n\tright.  Remove insets-related logic.\n\t(connectJObject): Handle property-notify-event.\n\t(window_get_frame_extents, request_frame_extents,\n\tproperty_notify_predicate, window_property_changed_cb): New\n\tstatic functions.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n\t(pre_event_handler): Remove insets-related logic for configure\n\tevents.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c (gtkInit):\n\tUpdate postConfigureEvent signature.\n\nFrom-SVN: r75816", "tree": {"sha": "017b0a898a627715d917aa1f6bdaa0447165abbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/017b0a898a627715d917aa1f6bdaa0447165abbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db19e39b823e3f3ad9695c03366cbb644bb80265", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db19e39b823e3f3ad9695c03366cbb644bb80265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db19e39b823e3f3ad9695c03366cbb644bb80265", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db19e39b823e3f3ad9695c03366cbb644bb80265/comments", "author": null, "committer": null, "parents": [{"sha": "a4d8ec652b4ebc18b2ac56aac881993b8ba42fb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d8ec652b4ebc18b2ac56aac881993b8ba42fb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4d8ec652b4ebc18b2ac56aac881993b8ba42fb4"}], "stats": {"total": 416, "additions": 267, "deletions": 149}, "files": [{"sha": "cd143a77ca8f87013d2a8cd5b2a68ada9c1274be", "filename": "libjava/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=db19e39b823e3f3ad9695c03366cbb644bb80265", "patch": "@@ -1,3 +1,33 @@\n+2004-01-13  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java\n+\t(initializeInsets): Remove method.\n+\t(GtkComponentPeer): Initialize insets field.  Remove call to\n+\tinitializeInsets.\n+\t* gnu/java/awt/peer/gtk/GtkDialogPeer.java (initializeInsets):\n+\tRemove method.\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (initializeInsets):\n+\tRemove method.\n+\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c:\n+\t(latestInsets): Remove field.\n+\t(native create): Add insets parameter.  Call\n+\twindow_get_frame_extents.  Set the window's default size and\n+\tsize request based on its frame extents.\n+\t(create): Initialize insets.\n+\t(postInsetsChangedEvent): New method.\n+\t(postConfigureEvent): Remove parameters top, left, bottom,\n+\tright.  Remove insets-related logic.\n+\t(connectJObject): Handle property-notify-event.\n+\t(window_get_frame_extents, request_frame_extents,\n+\tproperty_notify_predicate, window_property_changed_cb): New\n+\tstatic functions.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n+\t(pre_event_handler): Remove insets-related logic for configure\n+\tevents.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c (gtkInit):\n+\tUpdate postConfigureEvent signature.\n+\n 2004-01-12  Fernando Nasser  <fnasser@redhat.com>\n  \n \t* gnu/java/awt/peer/gtk/TestAWT.java (DialogWindow): Add WindowAdapter"}, {"sha": "6f71db9f17ab73e30800f1d6ea3b9566bb893b30", "filename": "libjava/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=db19e39b823e3f3ad9695c03366cbb644bb80265", "patch": "@@ -96,18 +96,14 @@ void create ()\n     throw new RuntimeException ();\n   }\n \n-  void initializeInsets ()\n-  {\n-    insets = new Insets (0, 0, 0, 0);\n-  }\n-\n   native void connectJObject ();\n   native void connectSignals ();\n \n   protected GtkComponentPeer (Component awtComponent)\n   {\n     super (awtComponent);\n     this.awtComponent = awtComponent;\n+    insets = new Insets (0, 0, 0, 0);\n \n     /* temporary try/catch block until all peers use this creation method */\n     try {\n@@ -127,8 +123,6 @@ protected GtkComponentPeer (Component awtComponent)\n       if (awtComponent.getFont() != null)\n \tsetFont(awtComponent.getFont());\n \n-      initializeInsets ();\n-\n       setCursor (awtComponent.getCursor ());\n       Rectangle bounds = awtComponent.getBounds ();\n       setBounds (bounds.x, bounds.y, bounds.width, bounds.height);"}, {"sha": "6aefba608e6aaccce2f5a91cbcfb3893055d59d1", "filename": "libjava/gnu/java/awt/peer/gtk/GtkDialogPeer.java", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java?ref=db19e39b823e3f3ad9695c03366cbb644bb80265", "patch": "@@ -41,7 +41,6 @@\n import java.awt.AWTEvent;\n import java.awt.Component;\n import java.awt.Dialog;\n-import java.awt.Insets;\n import java.awt.peer.DialogPeer;\n \n public class GtkDialogPeer extends GtkWindowPeer\n@@ -52,17 +51,6 @@ public GtkDialogPeer (Dialog dialog)\n     super (dialog);\n   }\n \n-  void initializeInsets ()\n-  {\n-    synchronized (latestInsets)\n-      {\n-\tinsets = new Insets (latestInsets.top,\n-\t\t\t     latestInsets.left,\n-\t\t\t     latestInsets.bottom,\n-\t\t\t     latestInsets.right);\n-      }\n-  }\n-\n   void create ()\n   {\n     // Create a decorated dialog window."}, {"sha": "33d0fccd64f4490444878177265d976087f0ee08", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=db19e39b823e3f3ad9695c03366cbb644bb80265", "patch": "@@ -43,7 +43,6 @@\n import java.awt.Graphics;\n import java.awt.Graphics2D;\n import java.awt.Image;\n-import java.awt.Insets;\n import java.awt.MenuBar;\n import java.awt.Rectangle;\n import java.awt.event.PaintEvent;\n@@ -71,21 +70,6 @@ public GtkFramePeer (Frame frame)\n     super (frame);\n   }\n \n-  void initializeInsets ()\n-  {\n-    // Unfortunately, X does not provide a clean way to calculate the\n-    // dimensions of a frame's borders before it has been displayed.\n-    // So we guess and then fix the dimensions upon receipt of the\n-    // first configure event.\n-    synchronized (latestInsets)\n-      {\n-\tinsets = new Insets (latestInsets.top,\n-\t\t\t     latestInsets.left,\n-\t\t\t     latestInsets.bottom,\n-\t\t\t     latestInsets.right);\n-      }\n-  }\n-\n   void create ()\n   {\n     // Create a normal decorated window."}, {"sha": "7e77e0dcbf009c4cda0a631fe4a42c6e11ded758", "filename": "libjava/gnu/java/awt/peer/gtk/GtkWindowPeer.java", "status": "modified", "additions": 34, "deletions": 73, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java?ref=db19e39b823e3f3ad9695c03366cbb644bb80265", "patch": "@@ -40,7 +40,6 @@\n \n import java.awt.Component;\n import java.awt.Dimension;\n-import java.awt.Insets;\n import java.awt.Window;\n import java.awt.Frame;\n import java.awt.event.WindowEvent;\n@@ -61,30 +60,30 @@ public class GtkWindowPeer extends GtkContainerPeer\n   private boolean hasBeenShown = false;\n   private int oldState = Frame.NORMAL;\n \n-  // Unfortunately, X does not provide a clean way to calculate the\n-  // dimensions of a window's borders before it has been displayed.\n-  // So when creating the application's first window we guess the\n-  // border dimensions.  Then if need be for that window, we fix the\n-  // dimensions upon receipt of the first configure event.  Windows\n-  // created after the first one will use the latest inset values\n-  // received in postConfigureEvent.\n-  static Insets latestInsets = new Insets (20, 6, 6, 6);\n-\n   native void create (int type, boolean decorated,\n \t\t      int width, int height,\n-\t\t      GtkWindowPeer parent);\n+\t\t      GtkWindowPeer parent,\n+\t\t      int[] insets);\n \n   void create (int type, boolean decorated)\n   {\n     GtkWindowPeer parent_peer = null;\n     Component parent = awtComponent.getParent();\n+    int[] insets = new int [] { 0, 0, 0, 0 };\n+\n     if (parent != null)\n       parent_peer = (GtkWindowPeer) awtComponent.getParent().getPeer();\n \n     create (type, decorated,\n \t    awtComponent.getWidth(),\n \t    awtComponent.getHeight(),\n-\t    parent_peer);\n+\t    parent_peer,\n+\t    insets);\n+\n+    this.insets.top = insets [0];\n+    this.insets.left = insets [1];\n+    this.insets.bottom = insets [2];\n+    this.insets.right = insets [3];\n   }\n \n   void create ()\n@@ -132,7 +131,7 @@ public void setResizable (boolean resizable)\n     // false the window will shrink to the dimensions it had before it\n     // was resizable.\n     setSize (awtComponent.getWidth() - insets.left - insets.right,\n-    \t     awtComponent.getHeight() - insets.top - insets.bottom);\n+\t     awtComponent.getHeight() - insets.top - insets.bottom);\n     set (\"allow_shrink\", resizable);\n     set (\"allow_grow\", resizable);\n   }\n@@ -141,67 +140,29 @@ native void setBoundsCallback (Window window,\n \t\t\t\t int x, int y,\n \t\t\t\t int width, int height);\n \n-  protected void postConfigureEvent (int x, int y, int width, int height,\n-\t\t\t\t     int top, int left, int bottom, int right)\n+  protected void postInsetsChangedEvent (int top, int left,\n+\t\t\t\t\t int bottom, int right)\n   {\n-    // Configure events tell us the location and dimensions of the\n-    // window within the frame borders, and the dimensions of the\n-    // frame borders (top, left, bottom, right).\n-\n-    // If our borders change we need to make sure that a new layout\n-    // will happen, since Sun forgets to handle this case.\n-    if (insets.top != top\n-\t|| insets.left != left\n-\t|| insets.bottom != bottom\n-\t|| insets.right != right)\n-      {\n-\t// When our insets change, we receive a configure event with\n-\t// the new insets, the old window location and the old window\n-\t// dimensions.  We update our Window object's location and\n-\t// size using our old inset values.\n-\tsetBoundsCallback ((Window) awtComponent,\n-\t\t\t   x - insets.left,\n-\t\t\t   y - insets.top,\n-\t\t\t   width + insets.left + insets.right,\n-\t\t\t   height + insets.top + insets.bottom);\n-\n-\t// The peer's dimensions do not get updated automatically when\n-\t// insets change so we need to do it manually.\n-\tsetSize (width + (insets.left - left) + (insets.right - right),\n-\t\t height + (insets.top - top) + (insets.bottom - bottom));\n-\n-\tinsets.top = top;\n-\tinsets.left = left;\n-\tinsets.bottom = bottom;\n-\tinsets.right = right;\n-\n-\tsynchronized (latestInsets)\n-\t  {\n-\t    latestInsets.top = top;\n-\t    latestInsets.left = left;\n-\t    latestInsets.bottom = bottom;\n-\t    latestInsets.right = right;\n-\t  }\n-      }\n-    else\n-      {\n-\tint frame_x = x - insets.left;\n-\tint frame_y = y - insets.top;\n-\tint frame_width = width + insets.left + insets.right;\n-\tint frame_height = height + insets.top + insets.bottom;\n-\n-\tif (frame_x != awtComponent.getX()\n-\t    || frame_y != awtComponent.getY()\n-\t    || frame_width != awtComponent.getWidth()\n-\t    || frame_height != awtComponent.getHeight())\n-\t  {\n-\t    setBoundsCallback ((Window) awtComponent,\n-\t\t\t       frame_x,\n-\t\t\t       frame_y,\n-\t\t\t       frame_width,\n-\t\t\t       frame_height);\n-\t  }\n-      }\n+    insets.top = top;\n+    insets.left = left;\n+    insets.bottom = bottom;\n+    insets.right = right;\n+  }\n+\n+  protected void postConfigureEvent (int x, int y, int width, int height)\n+  {\n+    int frame_x = x - insets.left;\n+    int frame_y = y - insets.top;\n+    int frame_width = width + insets.left + insets.right;\n+    int frame_height = height + insets.top + insets.bottom;\n+\n+    if (frame_x != awtComponent.getX()\n+\t|| frame_y != awtComponent.getY()\n+\t|| frame_width != awtComponent.getWidth()\n+\t|| frame_height != awtComponent.getHeight())\n+      setBoundsCallback ((Window) awtComponent,\n+\t\t\t frame_x, frame_y, frame_width, frame_height);\n+\n     awtComponent.validate();\n   }\n "}, {"sha": "42f45b4ea0d40e610c395741d9818ae94f22581e", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c?ref=db19e39b823e3f3ad9695c03366cbb644bb80265", "patch": "@@ -989,40 +989,18 @@ pre_event_handler (GtkWidget *widget, GdkEvent *event, jobject peer)\n \t    \n \tif (widget && GTK_WIDGET_TOPLEVEL (widget))\n \t  {\n-\t    gint top, left, right, bottom;\n-\n \t    /* Configure events are not posted to the AWT event\n \t       queue, and as such, the gdk/gtk peer functions will\n \t       be called back before postConfigureEvent\n \t       returns. */\n \t    gdk_threads_leave ();\n \n-\t    /* FIXME: hard-code these values for now. */\n-\t    if (GTK_IS_PLUG (widget))\n-\t      {\n-\t\ttop = 0;\n-\t\tleft = 0;\n-\t\tbottom = 0;\n-\t\tright = 0;\n-\t      }\n-\t    else\n-\t      {\n-\t\ttop = 20;\n-\t\tleft = 6;\n-\t\tbottom = 6;\n-\t\tright = 6;\n-\t      }\n-\n  \t    (*gdk_env)->CallVoidMethod (gdk_env, peer,\n \t\t\t\t\tpostConfigureEventID,\n \t\t\t\t\t(jint) event->configure.x,\n \t\t\t\t\t(jint) event->configure.y,\n \t\t\t\t\t(jint) event->configure.width,\n-\t\t\t\t\t(jint) event->configure.height,\n-\t\t\t\t\t(jint) top,\n-\t\t\t\t\t(jint) left,\n-\t\t\t\t\t(jint) bottom,\n-\t\t\t\t\t(jint) right);\n+\t\t\t\t\t(jint) event->configure.height);\n \t    gdk_threads_enter ();\n \t  }\n       }"}, {"sha": "0b4c6fee452af64d17a27721e6978f4871d10e01", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c?ref=db19e39b823e3f3ad9695c03366cbb644bb80265", "patch": "@@ -168,7 +168,7 @@ Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit (JNIEnv *env, jclass clazz)\n   postMouseEventID = (*env)->GetMethodID (env, gtkcomponentpeer, \n \t\t\t\t\t  \"postMouseEvent\", \"(IJIIIIZ)V\");\n   postConfigureEventID = (*env)->GetMethodID (env, gtkwindowpeer, \n-\t\t\t\t\t  \"postConfigureEvent\", \"(IIIIIIII)V\");\n+\t\t\t\t\t      \"postConfigureEvent\", \"(IIII)V\");\n   postWindowEventID = (*env)->GetMethodID (env, gtkwindowpeer,\n \t\t\t\t\t   \"postWindowEvent\",\n \t\t\t\t\t   \"(ILjava/awt/Window;I)V\");"}, {"sha": "c0f528a39830911efbf15779c655a95334286dd8", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c", "status": "modified", "additions": 200, "deletions": 17, "changes": 217, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db19e39b823e3f3ad9695c03366cbb644bb80265/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c?ref=db19e39b823e3f3ad9695c03366cbb644bb80265", "patch": "@@ -44,6 +44,16 @@ exception statement from your version. */\n #include <gdk/gdkx.h>\n #include <X11/Xatom.h>\n \n+static void window_get_frame_extents (GtkWidget *window,\n+                                      int *top, int *left,\n+                                      int *bottom, int *right);\n+\n+static void request_frame_extents (GtkWidget *window);\n+\n+static int property_notify_predicate (Display *xdisplay,\n+                                      XEvent  *event,\n+                                      XPointer window_id);\n+\n static void window_delete_cb (GtkWidget *widget, GdkEvent *event,\n \t\t\t      jobject peer);\n static void window_destroy_cb (GtkWidget *widget, GdkEvent *event,\n@@ -59,6 +69,9 @@ static gboolean window_window_state_cb (GtkWidget *widget,\n \t\t\t\t\tGdkEvent *event,\n \t\t\t\t\tjobject peer);\n static jint window_get_new_state (GtkWidget *widget);\n+static gboolean window_property_changed_cb (GtkWidget *widget,\n+\t\t\t\t\t    GdkEventProperty *event,\n+\t\t\t\t\t    jobject peer);\n \n /*\n  * Make a new window.\n@@ -67,12 +80,21 @@ static jint window_get_new_state (GtkWidget *widget);\n JNIEXPORT void JNICALL \n Java_gnu_java_awt_peer_gtk_GtkWindowPeer_create \n   (JNIEnv *env, jobject obj, jint type, jboolean decorated,\n-   jint width, jint height, jobject parent)\n+   jint width, jint height, jobject parent, jintArray jinsets)\n {\n   GtkWidget *window_widget;\n   GtkWindow *window;\n   void *window_parent;\n-  GtkWidget *vbox, *layout;\n+  GtkWidget *vbox;\n+  GtkWidget *layout;\n+  int top = 0;\n+  int left = 0;\n+  int bottom = 0;\n+  int right = 0;\n+  jint *insets;\n+\n+  insets = (*env)->GetIntArrayElements (env, jinsets, 0);\n+  insets[0] = insets[1] = insets[2] = insets[3] = 0;\n \n   /* Create global reference and save it for future use */\n   NSA_SET_GLOBAL_REF (env, obj);\n@@ -82,19 +104,6 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_create\n   window_widget = gtk_window_new (GTK_WINDOW_TOPLEVEL);\n   window = GTK_WINDOW (window_widget);\n \n-  // Avoid GTK runtime assertion failures.\n-  width = (width < 1) ? 1 : width;\n-  height = (height < 1) ? 1 : height;\n-\n-  gtk_window_set_default_size (window, width, height);\n-\n-  /* We must set this window's size requisition.  Otherwise when a\n-     resize is queued (when gtk_widget_queue_resize is called) the\n-     window will snap to its default requisition of 0x0.  If we omit\n-     this call, Frames and Dialogs shrink to degenerate 1x1 windows\n-     when their resizable property changes. */\n-  gtk_widget_set_size_request (window_widget, width, height);\n-\n   /* Keep this window in front of its parent, if it has one. */\n   if (parent)\n     {\n@@ -115,9 +124,33 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_create\n \n   gtk_widget_show (layout);\n   gtk_widget_show (vbox);\n+  gtk_widget_realize (window_widget);\n+\n+  if (decorated)\n+    window_get_frame_extents (window_widget, &top, &left, &bottom, &right);\n+\n+  gtk_window_set_default_size (window,\n+\t\t\t       MAX (1, width - left - right),\n+\t\t\t       MAX (1, height - top - bottom));\n+\n+  /* We must set this window's size requisition.  Otherwise when a\n+     resize is queued (when gtk_widget_queue_resize is called) the\n+     window will snap to its default requisition of 0x0.  If we omit\n+     this call, Frames and Dialogs shrink to degenerate 1x1 windows\n+     when their resizable property changes. */\n+  gtk_widget_set_size_request (window_widget,\n+\t\t\t       MAX (1, width - left - right),\n+\t\t\t       MAX (1, height - top - bottom));\n+\n+  insets[0] = top;\n+  insets[1] = left;\n+  insets[2] = bottom;\n+  insets[3] = right;\n \n   gdk_threads_leave ();\n \n+  (*env)->ReleaseIntArrayElements (env, jinsets, insets, 0);\n+\n   NSA_SET_PTR (env, obj, window_widget);\n }\n \n@@ -176,6 +209,9 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_connectJObject\n \n   connect_awt_hook (env, obj, 1, GTK_WIDGET (ptr)->window);\n \n+  g_signal_connect (G_OBJECT (ptr), \"property-notify-event\",\n+\t\t    G_CALLBACK (window_property_changed_cb), obj);\n+\n   gdk_threads_leave ();\n }\n \n@@ -291,7 +327,7 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setSize\n {\n   void *ptr = NSA_GET_PTR (env, obj);\n \n-  // Avoid GTK runtime assertion failures.\n+  /* Avoid GTK runtime assertion failures. */\n   width = (width < 1) ? 1 : width;\n   height = (height < 1) ? 1 : height;\n \n@@ -306,7 +342,7 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_nativeSetBounds\n {\n   void *ptr = NSA_GET_PTR (env, obj);\n \n-  // Avoid GTK runtime assertion failures.\n+  /* Avoid GTK runtime assertion failures. */\n   width = (width < 1) ? 1 : width;\n   height = (height < 1) ? 1 : height;\n \n@@ -364,6 +400,112 @@ Java_gnu_java_awt_peer_gtk_GtkFramePeer_getMenuBarHeight\n   return height;\n }\n \n+static void\n+window_get_frame_extents (GtkWidget *window,\n+                          int *top, int *left, int *bottom, int *right)\n+{\n+  unsigned long *extents = NULL;\n+\n+  /* Guess frame extents in case _NET_FRAME_EXTENTS is not\n+     supported. */\n+  *top = 23;\n+  *left = 6;\n+  *bottom = 6;\n+  *right = 6;\n+\n+  /* Request that the window manager set window's\n+     _NET_FRAME_EXTENTS property. */\n+  request_frame_extents (window);\n+\n+  /* Attempt to retrieve window's frame extents. */\n+  if (gdk_property_get (window->window,\n+                        gdk_atom_intern (\"_NET_FRAME_EXTENTS\", FALSE),\n+                        gdk_atom_intern (\"CARDINAL\", FALSE),\n+                        0,\n+                        sizeof (unsigned long) * 4,\n+                        FALSE,\n+                        NULL,\n+                        NULL,\n+                        NULL,\n+                        (guchar **)&extents))\n+    {\n+      *left = extents [0];\n+      *right = extents [1];\n+      *top = extents [2];\n+      *bottom = extents [3];\n+    }\n+}\n+\n+static Atom extents_atom = 0;\n+\n+/* Requests that the window manager set window's\n+   _NET_FRAME_EXTENTS property. */\n+static void\n+request_frame_extents (GtkWidget *window)\n+{\n+  const char *request_str = \"_NET_REQUEST_FRAME_EXTENTS\";\n+  GdkAtom request_extents = gdk_atom_intern (request_str, FALSE);\n+\n+  /* Check if the current window manager supports\n+     _NET_REQUEST_FRAME_EXTENTS. */\n+  if (gdk_net_wm_supports (request_extents))\n+    {\n+      GdkDisplay *display = gtk_widget_get_display (window);\n+      Display *xdisplay = GDK_DISPLAY_XDISPLAY (display);\n+\n+      GdkWindow *root_window = gdk_get_default_root_window ();\n+      Window xroot_window = GDK_WINDOW_XID (root_window);\n+\n+      Atom extents_request_atom =\n+\tgdk_x11_get_xatom_by_name_for_display (display, request_str);\n+\n+      XEvent xevent;\n+      XEvent notify_xevent;\n+\n+      unsigned long window_id = GDK_WINDOW_XID (GDK_DRAWABLE(window->window));\n+\n+      if (!extents_atom)\n+\t{\n+\t  const char *extents_str = \"_NET_FRAME_EXTENTS\";\n+\t  extents_atom =\n+\t    gdk_x11_get_xatom_by_name_for_display (display, extents_str);\n+\t}\n+\n+      xevent.xclient.type = ClientMessage;\n+      xevent.xclient.message_type = extents_request_atom;\n+      xevent.xclient.display = xdisplay;\n+      xevent.xclient.window = window_id;\n+      xevent.xclient.format = 32;\n+      xevent.xclient.data.l[0] = 0;\n+      xevent.xclient.data.l[1] = 0;\n+      xevent.xclient.data.l[2] = 0;\n+      xevent.xclient.data.l[3] = 0;\n+      xevent.xclient.data.l[4] = 0;\n+\n+      XSendEvent (xdisplay, xroot_window, False,\n+\t\t  (SubstructureRedirectMask | SubstructureNotifyMask),\n+                  &xevent);\n+\n+      XIfEvent(xdisplay, &notify_xevent,\n+\t       property_notify_predicate, (XPointer) &window_id);\n+    }\n+}\n+\n+static int\n+property_notify_predicate (Display *xdisplay __attribute__((unused)),\n+                           XEvent  *event,\n+                           XPointer window_id)\n+{\n+  unsigned long *window = (unsigned long *) window_id;\n+\n+  if (event->xany.type == PropertyNotify\n+      && event->xany.window == *window\n+      && event->xproperty.atom == extents_atom)\n+        return True;\n+\n+  return False;\n+}\n+\n static void\n window_delete_cb (GtkWidget *widget __attribute__((unused)),\n \t\t  GdkEvent *event __attribute__((unused)),\n@@ -514,3 +656,44 @@ window_get_new_state (GtkWidget *widget)\n     }\n   return new_state;\n }\n+\n+static gboolean\n+window_property_changed_cb (GtkWidget *widget __attribute__((unused)),\n+                            GdkEventProperty *event,\n+                            jobject peer)\n+{\n+  unsigned long *extents;\n+\n+  static int id_set = 0;\n+  static jmethodID postInsetsChangedEventID;\n+\n+  if (!id_set)\n+    {\n+      jclass gtkwindowpeer = (*gdk_env)->FindClass (gdk_env,\n+\t\t\t\t \"gnu/java/awt/peer/gtk/GtkWindowPeer\");\n+      postInsetsChangedEventID = (*gdk_env)->GetMethodID (gdk_env,\n+\t\t\t\t\t\t      gtkwindowpeer,\n+\t\t\t\t\t\t      \"postInsetsChangedEvent\",\n+\t\t\t\t\t\t      \"(IIII)V\");\n+    }\n+\n+  if (gdk_atom_intern (\"_NET_FRAME_EXTENTS\", FALSE) == event->atom\n+      && gdk_property_get (event->window,\n+                           gdk_atom_intern (\"_NET_FRAME_EXTENTS\", FALSE),\n+                           gdk_atom_intern (\"CARDINAL\", FALSE),\n+                           0,\n+                           sizeof (unsigned long) * 4,\n+                           FALSE,\n+                           NULL,\n+                           NULL,\n+                           NULL,\n+                           (guchar **)&extents))\n+    (*gdk_env)->CallVoidMethod (gdk_env, peer,\n+\t\t\t\tpostInsetsChangedEventID,\n+\t\t\t\t(jint) extents[2],  /* top */\n+\t\t\t\t(jint) extents[0],  /* left */\n+\t\t\t\t(jint) extents[3],  /* bottom */\n+\t\t\t\t(jint) extents[1]); /* right */\n+\n+  return FALSE;\n+}"}]}