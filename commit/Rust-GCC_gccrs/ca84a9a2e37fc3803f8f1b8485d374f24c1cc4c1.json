{"sha": "ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E4NGE5YTJlMzdmYzM4MDNmOGYxYjg0ODVkMzc0ZjI0YzFjYzRjMQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-06-19T21:13:13Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-06-19T21:13:13Z"}, "message": "tree.c (variably_modified_type_p): VM arguments don't make the type a VM type.\n\n\t* tree.c (variably_modified_type_p): VM arguments don't make the\n\ttype a VM type.\n\ntestsuite:\n\t* gcc.dg/vla-8.c: Add.\n\nFrom-SVN: r114787", "tree": {"sha": "eee05720492e143f4558176ab46c8b33a8bfa5f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eee05720492e143f4558176ab46c8b33a8bfa5f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1/comments", "author": null, "committer": null, "parents": [{"sha": "73617bce35915afa940389526d44d3bf74a7f31b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73617bce35915afa940389526d44d3bf74a7f31b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73617bce35915afa940389526d44d3bf74a7f31b"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "c664415734ad9f6800132954dfe9d7eece65c1c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1", "patch": "@@ -1,3 +1,8 @@\n+2006-06-19  Mike Stump  <mrs@apple.com>\n+\n+\t* tree.c (variably_modified_type_p): VM arguments don't make the\n+\ttype a VM type.\n+\n 2006-06-19  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-pre.c (try_combine_conversion): Strip useless"}, {"sha": "c3f298a93c53a4805c81833e4b18db9c00a2c35e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1", "patch": "@@ -1,3 +1,7 @@\n+2006-06-19  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/vla-8.c: Add.\n+\n 2006-06-19  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/27090"}, {"sha": "a5b8113a73d925bbb8bc5c73a7ff4700fdb9a166", "filename": "gcc/testsuite/gcc.dg/vla-8.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1/gcc%2Ftestsuite%2Fgcc.dg%2Fvla-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1/gcc%2Ftestsuite%2Fgcc.dg%2Fvla-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvla-8.c?ref=ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile  } */\n+/* { dg-options \"-std=c99 -pedantic-errors\" } */\n+/* Radar 4336222 */\n+\n+int a;\n+struct s { void (*f)(int (*)[a]); };"}, {"sha": "0d40a517fe97831cc8764c797ebe54b391014029", "filename": "gcc/tree.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=ca84a9a2e37fc3803f8f1b8485d374f24c1cc4c1", "patch": "@@ -5602,8 +5602,10 @@ find_var_from_fn (tree *tp, int *walk_subtrees, void *data)\n }\n \n /* Returns true if T is, contains, or refers to a type with variable\n-   size.  If FN is nonzero, only return true if a modifier of the type\n-   or position of FN is a variable or parameter inside FN.\n+   size.  For METHOD_TYPEs and FUNCTION_TYPEs we exclude the\n+   arguments, but not the return type.  If FN is nonzero, only return\n+   true if a modifier of the type or position of FN is a variable or\n+   parameter inside FN.\n \n    This concept is more general than that of C99 'variably modified types':\n    in C99, a struct type is never variably modified because a VLA may not\n@@ -5644,16 +5646,10 @@ variably_modified_type_p (tree type, tree fn)\n \n     case FUNCTION_TYPE:\n     case METHOD_TYPE:\n-      /* If TYPE is a function type, it is variably modified if any of the\n-         parameters or the return type are variably modified.  */\n+      /* If TYPE is a function type, it is variably modified if the\n+\t return type is variably modified.  */\n       if (variably_modified_type_p (TREE_TYPE (type), fn))\n \t  return true;\n-\n-      for (t = TYPE_ARG_TYPES (type);\n-\t   t && t != void_list_node;\n-\t   t = TREE_CHAIN (t))\n-\tif (variably_modified_type_p (TREE_VALUE (t), fn))\n-\t  return true;\n       break;\n \n     case INTEGER_TYPE:"}]}