{"sha": "060fca4a44e24baebe7575b9119518b7821c1c45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYwZmNhNGE0NGUyNGJhZWJlNzU3NWI5MTE5NTE4Yjc4MjFjMWM0NQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-04-05T14:00:27Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-04-05T14:00:27Z"}, "message": "re PR fortran/31292 (ICE with module procedure interface in a procedure body)\n\n2007-04-05  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/31292\n\t* decl.c (gfc_match_modproc): Go up to the top of the namespace\n\ttree to find the module namespace for gfc_get_symbol.\n\n2007-04-05  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/31292\n\t* gfortran.dg/contained_module_proc_1.f90: New test.\n\nFrom-SVN: r123517", "tree": {"sha": "df13ebdde93460ad65add194cc1c5525e7975da8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df13ebdde93460ad65add194cc1c5525e7975da8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/060fca4a44e24baebe7575b9119518b7821c1c45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/060fca4a44e24baebe7575b9119518b7821c1c45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/060fca4a44e24baebe7575b9119518b7821c1c45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/060fca4a44e24baebe7575b9119518b7821c1c45/comments", "author": null, "committer": null, "parents": [{"sha": "7706ca5daabf10746160ca86f93fb97c77017863", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7706ca5daabf10746160ca86f93fb97c77017863", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7706ca5daabf10746160ca86f93fb97c77017863"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "6e1be68f416d10f3c3a3ea4bf82eabadc887c43c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060fca4a44e24baebe7575b9119518b7821c1c45/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060fca4a44e24baebe7575b9119518b7821c1c45/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=060fca4a44e24baebe7575b9119518b7821c1c45", "patch": "@@ -1,3 +1,9 @@\n+2007-04-05  Paul Thomas  <pault@gcc.gnu.org>\r\n+\r\n+\tPR fortran/31292\r\n+\t* decl.c (gfc_match_modproc): Go up to the top of the namespace\r\n+\ttree to find the module namespace for gfc_get_symbol.\r\n+\r\n 2007-04-03  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/31304"}, {"sha": "c9383ccce69d97bb7e723586c075649341835582", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060fca4a44e24baebe7575b9119518b7821c1c45/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060fca4a44e24baebe7575b9119518b7821c1c45/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=060fca4a44e24baebe7575b9119518b7821c1c45", "patch": "@@ -4241,6 +4241,7 @@ gfc_match_modproc (void)\n   char name[GFC_MAX_SYMBOL_LEN + 1];\n   gfc_symbol *sym;\n   match m;\n+  gfc_namespace *module_ns;\n \n   if (gfc_state_stack->state != COMP_INTERFACE\n       || gfc_state_stack->previous == NULL\n@@ -4251,6 +4252,14 @@ gfc_match_modproc (void)\n       return MATCH_ERROR;\n     }\n \n+  module_ns = gfc_current_ns->parent;\n+  for (; module_ns; module_ns = module_ns->parent)\n+    if (module_ns->proc_name->attr.flavor == FL_MODULE)\n+      break;\n+\n+  if (module_ns == NULL)\n+    return MATCH_ERROR;\n+\n   for (;;)\n     {\n       m = gfc_match_name (name);\n@@ -4259,7 +4268,7 @@ gfc_match_modproc (void)\n       if (m != MATCH_YES)\n \treturn MATCH_ERROR;\n \n-      if (gfc_get_symbol (name, gfc_current_ns->parent, &sym))\n+      if (gfc_get_symbol (name, module_ns, &sym))\n \treturn MATCH_ERROR;\n \n       if (sym->attr.proc != PROC_MODULE"}, {"sha": "c3fccfa979e0e9f6d8d7f5fd2199fda510e892f7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060fca4a44e24baebe7575b9119518b7821c1c45/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060fca4a44e24baebe7575b9119518b7821c1c45/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=060fca4a44e24baebe7575b9119518b7821c1c45", "patch": "@@ -1,3 +1,8 @@\n+2007-04-05  Paul Thomas  <pault@gcc.gnu.org>\r\n+\r\n+\tPR fortran/31292\r\n+\t* gfortran.dg/contained_module_proc_1.f90: New test.\r\n+\r\n 2007-04-04  Stuart Hastings  <stuart@apple.com>\n \n \tPR 31281"}, {"sha": "a1e58929378b2b8942af5d48cae8d5507990ed6a", "filename": "gcc/testsuite/gfortran.dg/contained_module_proc_1.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060fca4a44e24baebe7575b9119518b7821c1c45/gcc%2Ftestsuite%2Fgfortran.dg%2Fcontained_module_proc_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060fca4a44e24baebe7575b9119518b7821c1c45/gcc%2Ftestsuite%2Fgfortran.dg%2Fcontained_module_proc_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcontained_module_proc_1.f90?ref=060fca4a44e24baebe7575b9119518b7821c1c45", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do run }\n+! Tests the check for PR31292, in which the module procedure\n+! statement would put the symbol for assign_t in the wrong\n+! namespace and this caused the interface checking to fail.\n+!\n+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\n+!\n+module chk_gfortran\n+   implicit none\n+   type t\n+      integer x\n+   end type t\n+   contains\n+      function is_gfortran()\n+         logical is_gfortran\n+         interface assignment(=)\n+            module procedure assign_t\n+         end interface assignment(=)\n+         type(t) y(3)\n+\n+         y%x = (/1,2,3/)\n+         y = y((/2,3,1/))\n+         is_gfortran = y(3)%x == 1\n+      end function is_gfortran\n+\n+      elemental subroutine assign_t(lhs,rhs)\n+         type(t), intent(in) :: rhs\n+         type(t), intent(out) :: lhs\n+\n+         lhs%x = rhs%x\n+      end subroutine assign_t\n+end module chk_gfortran\n+\n+program fire\n+   use chk_gfortran\n+   implicit none\n+   if(.not. is_gfortran()) call abort()\n+end program fire\n+! { dg-final { cleanup-modules \"chk_gfortran\" } }\n+"}]}