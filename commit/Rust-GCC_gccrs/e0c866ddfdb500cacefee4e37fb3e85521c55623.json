{"sha": "e0c866ddfdb500cacefee4e37fb3e85521c55623", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBjODY2ZGRmZGI1MDBjYWNlZmVlNGUzN2ZiM2U4NTUyMWM1NTYyMw==", "commit": {"author": {"name": "Kamlesh Kumar", "email": "kamleshbhalui@gmail.com", "date": "2019-11-04T23:24:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-11-04T23:24:25Z"}, "message": "PR c++/91979 - mangling nullptr expression\n\n2019-11-04  Kamlesh Kumar  <kamleshbhalui@gmail.com>\n\ngcc/cp\n        * cp/mangle.c (write_template_arg_literal): Handle nullptr\n        mangling.\ngcc\n\t* common.opt (-fabi-version): Document =14.\n\t* doc/invoke.texi (C++ Dialect Options): Likewise.\ngcc/c-family\n        * c-opts.c (c_common_post_options): Update\n        latest_abi_version.\nlibiberty\n        * cp-demangle.c (d_expr_primary): Handle\n        nullptr demangling.\n        * testsuite/demangle-expected: Added test.\n\nFrom-SVN: r277801", "tree": {"sha": "97bd2e1b1e838cc820f21aaee225bf416616c1e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97bd2e1b1e838cc820f21aaee225bf416616c1e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0c866ddfdb500cacefee4e37fb3e85521c55623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c866ddfdb500cacefee4e37fb3e85521c55623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0c866ddfdb500cacefee4e37fb3e85521c55623", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c866ddfdb500cacefee4e37fb3e85521c55623/comments", "author": {"login": "kamleshbhalui", "id": 22392991, "node_id": "MDQ6VXNlcjIyMzkyOTkx", "avatar_url": "https://avatars.githubusercontent.com/u/22392991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamleshbhalui", "html_url": "https://github.com/kamleshbhalui", "followers_url": "https://api.github.com/users/kamleshbhalui/followers", "following_url": "https://api.github.com/users/kamleshbhalui/following{/other_user}", "gists_url": "https://api.github.com/users/kamleshbhalui/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamleshbhalui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamleshbhalui/subscriptions", "organizations_url": "https://api.github.com/users/kamleshbhalui/orgs", "repos_url": "https://api.github.com/users/kamleshbhalui/repos", "events_url": "https://api.github.com/users/kamleshbhalui/events{/privacy}", "received_events_url": "https://api.github.com/users/kamleshbhalui/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "04373f9288435fa2980dda99ad988fa5ce99331a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04373f9288435fa2980dda99ad988fa5ce99331a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04373f9288435fa2980dda99ad988fa5ce99331a"}], "stats": {"total": 76, "additions": 72, "deletions": 4}, "files": [{"sha": "e726ff6d0a0f5a6b5b47e1204b1f3df6e66d3491", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -1,3 +1,8 @@\n+2019-11-04  Kamlesh Kumar  <kamleshbhalui@gmail.com>\n+\n+\t* common.opt (-fabi-version): Document =14.\n+\t* doc/invoke.texi (C++ Dialect Options): Likewise.\n+\n 2019-11-04  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* tree-vrp.c (value_range_base::set): Do not special case pointers."}, {"sha": "d95424537a9874d07eeaeb483a69b73c9695866f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -1,3 +1,8 @@\n+2019-11-04  Kamlesh Kumar  <kamleshbhalui@gmail.com>\n+\n+\t* c-opts.c (c_common_post_options): Update\n+\tlatest_abi_version.\n+\n 2019-11-02  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-common.h (c_omp_get_context_selector): Remove."}, {"sha": "d4c77be5cd56477312148511deb02ed7af12b3fb", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -937,7 +937,7 @@ c_common_post_options (const char **pfilename)\n \n   /* Change flag_abi_version to be the actual current ABI level, for the\n      benefit of c_cpp_builtins, and to make comparison simpler.  */\n-  const int latest_abi_version = 13;\n+  const int latest_abi_version = 14;\n   /* Generate compatibility aliases for ABI v11 (7.1) by default.  */\n   const int abi_compat_default = 11;\n "}, {"sha": "fdd923e3c35679f48f5e202c3eb4e0db67ef3807", "filename": "gcc/common.opt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -951,6 +951,8 @@ Driver Undocumented\n ; 13: Fixes the accidental change in 12 to the calling convention for classes\n ;     with deleted copy constructor and trivial move constructor.\n ;     Default in G++ 8.2.\n+; 14: Corrects the mangling of nullptr expression.\n+;     Default in G++ 10.\n ;\n ; Additional positive integers will be assigned as new versions of\n ; the ABI become the default version of the ABI."}, {"sha": "0f7571633a7213204ed9e84c90a8db36a621d00c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -1,3 +1,9 @@\n+2019-11-04  Kamlesh Kumar  <kamleshbhalui@gmail.com>\n+\n+\tPR c++/91979 - mangling nullptr expression\n+\t* cp/mangle.c (write_template_arg_literal): Handle nullptr\n+\tmangling.\n+\n 2019-11-04  Jason Merrill  <jason@redhat.com>\n \n \t* typeck.c (check_return_expr): Avoid redundant error."}, {"sha": "0ac04514e8e8a38b6d02f7947a571810afd645cf", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -3400,7 +3400,9 @@ write_template_arg_literal (const tree value)\n       case INTEGER_CST:\n \tgcc_assert (!same_type_p (TREE_TYPE (value), boolean_type_node)\n \t\t    || integer_zerop (value) || integer_onep (value));\n-\twrite_integer_cst (value);\n+\tif (!(abi_version_at_least (14)\n+\t      && NULLPTR_TYPE_P (TREE_TYPE (value))))\n+\t  write_integer_cst (value);\n \tbreak;\n \n       case REAL_CST:"}, {"sha": "cf7cf206193d96e3b90b43d42c04a8673c13f987", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -2413,6 +2413,9 @@ trivial move constructor.\n Version 13, which first appeared in G++ 8.2, fixes the accidental\n change in version 12.\n \n+Version 14, which first appeared in G++ 10, corrects the mangling of\n+the nullptr expression.\n+\n See also @option{-Wabi}.\n \n @item -fabi-compat-version=@var{n}"}, {"sha": "08106004c4d0a1ec348ea0a20a2bb4594754275a", "filename": "gcc/testsuite/g++.dg/abi/macro0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmacro0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmacro0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmacro0.C?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -1,6 +1,6 @@\n // This testcase will need to be kept in sync with c_common_post_options.\n // { dg-options \"-fabi-version=0\" }\n \n-#if __GXX_ABI_VERSION != 1013\n+#if __GXX_ABI_VERSION != 1014\n #error \"Incorrect value of __GXX_ABI_VERSION\"\n #endif"}, {"sha": "edd116062660b2a29ccec0e29149bebeef55c3bd", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr27.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr27.C?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -1,7 +1,7 @@\n // PR c++/52706\n // { dg-do compile { target c++11 } }\n // { dg-options \"-fabi-version=0\" }\n-// { dg-final { scan-assembler \"_Z1fIDnLDn0EEiT_\" } }\n+// { dg-final { scan-assembler \"_Z1fIDnLDnEEiT_\" } }\n \n template<class T, decltype(nullptr) = nullptr>\n int f(T);"}, {"sha": "fbdb6cd8e9d6a1db87fffb4b97e91d87a569861f", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr43.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr43.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr43.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr43.C?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/91979\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fabi-version=13\" }\n+// { dg-final { scan-assembler \"_Z1fIDnLDn0EEiT_\" } }\n+\n+template<class T, decltype(nullptr) = nullptr>\n+int f(T);\n+\n+int i2 = f(nullptr);"}, {"sha": "9ceba14fc98017f3bedd69e6c2af9cdf581f59fc", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr44.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr44.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr44.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr44.C?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/91979\n+// { dg-do compile { target c++11 } }\n+// { dg-final { scan-assembler \"_Z3fooILPv0EEvPN9enable_ifIXeqT_LDnEEvE4typeE\" } }\n+\n+template <bool, typename T = void>\n+struct enable_if {};\n+\n+template <typename T>\n+struct enable_if<true, T> { typedef T type; };\n+\n+template <void *P>\n+void foo(typename enable_if<P == nullptr>::type* = 0) {}\n+\n+template void foo<(void *)0>(void *);\n+"}, {"sha": "b6f9e2de60d3ddc8080e13add8fe955aa310b5c3", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -1,3 +1,9 @@\n+2019-11-04  Kamlesh Kumar  <kamleshbhalui@gmail.com>\n+\n+\t* cp-demangle.c (d_expr_primary): Handle\n+\tnullptr demangling.\n+\t* testsuite/demangle-expected: Added test.\n+\n 2019-10-29 Paul Pluzhnikov  <ppluzhnikov@google.com>\n \n \t* cp-demangle.c (d_number): Avoid signed int overflow."}, {"sha": "963217c37bd66b9c3f2b9e281f7999c1e741b428", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -3577,6 +3577,17 @@ d_expr_primary (struct d_info *di)\n \t  && type->u.s_builtin.type->print != D_PRINT_DEFAULT)\n \tdi->expansion -= type->u.s_builtin.type->len;\n \n+      if (type->type == DEMANGLE_COMPONENT_BUILTIN_TYPE\n+\t  && strcmp (type->u.s_builtin.type->name,\n+\t\t     cplus_demangle_builtin_types[33].name) == 0)\n+\t{\n+\t  if (d_peek_char (di) == 'E')\n+\t    {\n+\t      d_advance (di, 1);\n+\t      return type;\n+\t    }\n+\t}\n+\n       /* Rather than try to interpret the literal value, we just\n \t collect it as a string.  Note that it's possible to have a\n \t floating point literal here.  The ABI specifies that the"}, {"sha": "f68a8a71aaf2dafd9e67c4c1adad90fbe09c3283", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c866ddfdb500cacefee4e37fb3e85521c55623/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c866ddfdb500cacefee4e37fb3e85521c55623/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=e0c866ddfdb500cacefee4e37fb3e85521c55623", "patch": "@@ -1446,3 +1446,7 @@ Foo<int>()::X::fn\n _ZZZ3FooIiEfvENKUlT_E_clIcEEDaS0_EN1X2fnEv\n Foo<int>()::{lambda(auto:1)#1}::operator()<char>(char) const::X::fn()\n Foo<int>()::{lambda(auto:1)#1}::operator()<char>(char) const::X::fn\n+#PR91979 demangling nullptr expression\n+\n+_Z3fooILPv0EEvPN9enable_ifIXeqT_LDnEEvE4typeE\n+void foo<(void*)0>(enable_if<((void*)0)==((decltype(nullptr))), void>::type*)"}]}