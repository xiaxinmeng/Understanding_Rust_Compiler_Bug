{"sha": "aa5661e6b41e781f2e7b6b3e3fc163174f0687a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE1NjYxZTZiNDFlNzgxZjJlN2I2YjNlM2ZjMTYzMTc0ZjA2ODdhOA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-07-02T19:43:06Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-07-02T19:43:06Z"}, "message": "2002-07-02  Tom Tromey  <tromey@redhat.com>\n            David Hovemeyer  <daveho@cs.umd.edu>\n\n\t* java/text/ChoiceFormat.java\n\t(format(double,StringBuffer,FieldPosition)): Fix fencepost error\n\tin check loop.\n\t* java/text/MessageFormat.java\n\t(format(Object[],StringBuffer,FieldPosition): Pass all arguments\n\tto MessageFormat.\n\nCo-Authored-By: David Hovemeyer <daveho@cs.umd.edu>\n\nFrom-SVN: r55191", "tree": {"sha": "f83a49525563be9ea4e280422308112655a95719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f83a49525563be9ea4e280422308112655a95719"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa5661e6b41e781f2e7b6b3e3fc163174f0687a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5661e6b41e781f2e7b6b3e3fc163174f0687a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa5661e6b41e781f2e7b6b3e3fc163174f0687a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5661e6b41e781f2e7b6b3e3fc163174f0687a8/comments", "author": null, "committer": null, "parents": [{"sha": "40165636b5fb904a609e01051c2ecfd52e5617e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40165636b5fb904a609e01051c2ecfd52e5617e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40165636b5fb904a609e01051c2ecfd52e5617e3"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "24696fd1b87b0af76b268905a6a9a2e636dbde97", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5661e6b41e781f2e7b6b3e3fc163174f0687a8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5661e6b41e781f2e7b6b3e3fc163174f0687a8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=aa5661e6b41e781f2e7b6b3e3fc163174f0687a8", "patch": "@@ -1,3 +1,13 @@\n+2002-07-02  Tom Tromey  <tromey@redhat.com>\n+            David Hovemeyer  <daveho@cs.umd.edu>\n+\n+\t* java/text/ChoiceFormat.java\n+\t(format(double,StringBuffer,FieldPosition)): Fix fencepost error\n+\tin check loop.\n+\t* java/text/MessageFormat.java\n+\t(format(Object[],StringBuffer,FieldPosition): Pass all arguments\n+\tto MessageFormat.\n+\n 2002-07-01  Tom Tromey  <tromey@redhat.com>\n \n \t* javax/naming/spi/NamingManager.java (getPlusPath): Don't create"}, {"sha": "f7bdde1e294401509eb8517b51d6f9a05b8801a1", "filename": "libjava/java/text/ChoiceFormat.java", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5661e6b41e781f2e7b6b3e3fc163174f0687a8/libjava%2Fjava%2Ftext%2FChoiceFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5661e6b41e781f2e7b6b3e3fc163174f0687a8/libjava%2Fjava%2Ftext%2FChoiceFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FChoiceFormat.java?ref=aa5661e6b41e781f2e7b6b3e3fc163174f0687a8", "patch": "@@ -1,5 +1,5 @@\n /* ChoiceFormat.java -- Format over a range of numbers\n-   Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -259,14 +259,12 @@ public StringBuffer format (double num, StringBuffer appendBuf,\n     if (choiceLimits.length == 0)\n       return appendBuf;\n \n-    int index =  0;\n+    int index = 0;\n     if (! Double.isNaN(num) && num >= choiceLimits[0])\n       {\n \tfor (; index < choiceLimits.length - 1; ++index)\n \t  {\n-\t    if (choiceLimits[index] <= num\n-\t\t&& index != choiceLimits.length - 2\n-\t\t&& num < choiceLimits[index + 1])\n+\t    if (choiceLimits[index] <= num && num < choiceLimits[index + 1])\n \t      break;\n \t  }\n       }"}, {"sha": "f5ee3492974ff9068023915dc772ba2bbd82ca1c", "filename": "libjava/java/text/MessageFormat.java", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5661e6b41e781f2e7b6b3e3fc163174f0687a8/libjava%2Fjava%2Ftext%2FMessageFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5661e6b41e781f2e7b6b3e3fc163174f0687a8/libjava%2Fjava%2Ftext%2FMessageFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FMessageFormat.java?ref=aa5661e6b41e781f2e7b6b3e3fc163174f0687a8", "patch": "@@ -1,5 +1,5 @@\n /* MessageFormat.java - Localized message formatting.\n-   Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -373,17 +373,14 @@ else if (thisArg instanceof Date)\n \t    if (formatter instanceof ChoiceFormat)\n \t      {\n \t\tStringBuffer buf = new StringBuffer ();\n-\t\t// FIXME: don't actually know what is correct here.\n-\t\t// Can a sub-format refer to any argument, or just\n-\t\t// the single argument passed to it?  Must test\n-\t\t// against JDK.\n \t\tformatter.format(thisArg, buf, ignore);\n \t\tMessageFormat mf = new MessageFormat ();\n \t\tmf.setLocale(locale);\n \t\tmf.applyPattern(buf.toString());\n-\t\tformatter = mf;\n+\t\tmf.format(arguments, appendBuf, ignore);\n \t      }\n-\t    formatter.format(thisArg, appendBuf, ignore);\n+\t    else\n+\t      formatter.format(thisArg, appendBuf, ignore);\n \t  }\n \n \tappendBuf.append(elements[i].trailer);"}]}