{"sha": "daec8eebdb7a3cfd3e59771455d24fac9adb151e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFlYzhlZWJkYjdhM2NmZDNlNTk3NzE0NTVkMjRmYWM5YWRiMTUxZQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2011-08-01T15:34:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T15:34:50Z"}, "message": "par-endh.adb (Check_End): issue a syntax error in SPARK mode for missing label at end of declaration...\n\n2011-08-01  Yannick Moy  <moy@adacore.com>\n\n\t* par-endh.adb (Check_End): issue a syntax error in SPARK mode for\n\tmissing label at end of declaration (subprogram or package)\n\t* par-ch4.adb (P_Name): issue a syntax error in SPARK mode for mixing\n\tof positional and named parameter association\n\t* par.adb, par-util.adb (Formal_Error_Msg_SP): new wrapper on\n\tError_Msg_SP which adds a prefix to the error message giving the name\n\tof the formal language analyzed\n\t* sem_ch6.adb (Analyze_Return_Type): issue an error in formal mode for\n\taccess result type in subprogram, unconstrained array as result type,.\n\t(Analyze_Subprogram_Declaration): issue an error in formal mode for null\n\tprocedure\n\t* sem_ch8.adb: Code clean up.\n\nFrom-SVN: r177048", "tree": {"sha": "2a264b7837f396b312381a19e0207683a26cce01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a264b7837f396b312381a19e0207683a26cce01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/daec8eebdb7a3cfd3e59771455d24fac9adb151e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daec8eebdb7a3cfd3e59771455d24fac9adb151e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daec8eebdb7a3cfd3e59771455d24fac9adb151e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daec8eebdb7a3cfd3e59771455d24fac9adb151e/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38171f43f1339cf9d2f02ded8b41f5c4a3828b42"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "868af9bb1df649b7329119cfdded0f1eb1543a22", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=daec8eebdb7a3cfd3e59771455d24fac9adb151e", "patch": "@@ -1,3 +1,18 @@\n+2011-08-01  Yannick Moy  <moy@adacore.com>\n+\n+\t* par-endh.adb (Check_End): issue a syntax error in SPARK mode for\n+\tmissing label at end of declaration (subprogram or package)\n+\t* par-ch4.adb (P_Name): issue a syntax error in SPARK mode for mixing\n+\tof positional and named parameter association\n+\t* par.adb, par-util.adb (Formal_Error_Msg_SP): new wrapper on\n+\tError_Msg_SP which adds a prefix to the error message giving the name\n+\tof the formal language analyzed\n+\t* sem_ch6.adb (Analyze_Return_Type): issue an error in formal mode for\n+\taccess result type in subprogram, unconstrained array as result type,.\n+\t(Analyze_Subprogram_Declaration): issue an error in formal mode for null\n+\tprocedure\n+\t* sem_ch8.adb: Code clean up.\n+\n 2011-08-01  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch7.adb (Uninstall_Declarations): Remove useless code."}, {"sha": "a351446841f2087d8b3ca62944193addfc5afc7c", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=daec8eebdb7a3cfd3e59771455d24fac9adb151e", "patch": "@@ -669,6 +669,10 @@ package body Ch4 is\n             --  Test for => (allow := as error substitute)\n \n             if Token = Tok_Arrow or else Token = Tok_Colon_Equal then\n+               if SPARK_Mode then\n+                  Formal_Error_Msg_SP (\"no mixing of positional and named \"\n+                                       & \"parameter association\");\n+               end if;\n                Restore_Scan_State (Scan_State); -- to Id\n                goto LP_State_Call;\n "}, {"sha": "ae18703e8ed967939982735c70787a31b89d6868", "filename": "gcc/ada/par-endh.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2Fpar-endh.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2Fpar-endh.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-endh.adb?ref=daec8eebdb7a3cfd3e59771455d24fac9adb151e", "patch": "@@ -371,6 +371,17 @@ package body Endh is\n                   Set_Comes_From_Source (End_Labl, False);\n                   End_Labl_Present := False;\n \n+                  --  In SPARK mode, no missing label is allowed\n+\n+                  if SPARK_Mode\n+                    and then End_Type = E_Name\n+                    and then Explicit_Start_Label (Scope.Last)\n+                  then\n+                     Error_Msg_Node_1 := Scope.Table (Scope.Last).Labl;\n+                     Formal_Error_Msg_SP -- CODEFIX\n+                       (\"`END &` required\");\n+                  end if;\n+\n                   --  Do style check for missing label\n \n                   if Style_Check"}, {"sha": "eeb93af639a2a4a0ef7720eb3ebfeead8794072f", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=daec8eebdb7a3cfd3e59771455d24fac9adb151e", "patch": "@@ -377,6 +377,16 @@ package body Util is\n       null;\n    end Discard_Junk_Node;\n \n+   -------------------------\n+   -- Formal_Error_Msg_SP --\n+   -------------------------\n+\n+   procedure Formal_Error_Msg_SP (Msg : String) is\n+   begin\n+      pragma Assert (Formal_Verification_Mode);\n+      Error_Msg_SP (\"(\" & Formal_Language & \") \" & Msg);\n+   end Formal_Error_Msg_SP;\n+\n    ------------\n    -- Ignore --\n    ------------"}, {"sha": "da84343b53a29e5f5096307e56e05b259999d5fb", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=daec8eebdb7a3cfd3e59771455d24fac9adb151e", "patch": "@@ -1158,6 +1158,10 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n       --  the argument. A typical use is to skip by some junk that is not\n       --  expected in the current context.\n \n+      procedure Formal_Error_Msg_SP (Msg : String);\n+      --  Wrapper on Errout.Error_Msg_SP which adds a prefix to Msg giving\n+      --  the name of the formal language analyzed (spark or alfa)\n+\n       procedure Ignore (T : Token_Type);\n       --  If current token matches T, then give an error message and skip\n       --  past it, otherwise the call has no effect at all. T may be any"}, {"sha": "8e2e2793ffc3ebc15d19d94919a6126c17e5f894", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=daec8eebdb7a3cfd3e59771455d24fac9adb151e", "patch": "@@ -1398,6 +1398,13 @@ package body Sem_Ch6 is\n       if Result_Definition (N) /= Error then\n          if Nkind (Result_Definition (N)) = N_Access_Definition then\n \n+            --  Access result is not allowed in SPARK or ALFA\n+\n+            if Formal_Verification_Mode then\n+               Formal_Error_Msg_N\n+                 (\"access result is not allowed\", Result_Definition (N));\n+            end if;\n+\n             --  Ada 2005 (AI-254): Handle anonymous access to subprograms\n \n             declare\n@@ -1426,6 +1433,17 @@ package body Sem_Ch6 is\n             Typ := Entity (Result_Definition (N));\n             Set_Etype (Designator, Typ);\n \n+            --  Unconstrained array as result is not allowed in SPARK or ALFA\n+\n+            if Formal_Verification_Mode\n+              and then Is_Array_Type (Typ)\n+              and then not Is_Constrained (Typ)\n+            then\n+               Formal_Error_Msg_N\n+                 (\"returning an unconstrained array is not allowed\",\n+                 Result_Definition (N));\n+            end if;\n+\n             --  Ada 2005 (AI-231): Ensure proper usage of null exclusion\n \n             Null_Exclusion_Static_Checks (N);\n@@ -2806,6 +2824,15 @@ package body Sem_Ch6 is\n    --  Start of processing for Analyze_Subprogram_Declaration\n \n    begin\n+      --  Null procedures are not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode\n+        and then Nkind (Specification (N)) = N_Procedure_Specification\n+        and then Null_Present (Specification (N))\n+      then\n+         Formal_Error_Msg_N (\"null procedure not allowed\", N);\n+      end if;\n+\n       --  For a null procedure, capture the profile before analysis, for\n       --  expansion at the freeze point and at each point of call. The body\n       --  will only be used if the procedure has preconditions. In that case"}, {"sha": "56f57d177a5b02c25f03b1d50d52b8c65f965e81", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daec8eebdb7a3cfd3e59771455d24fac9adb151e/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=daec8eebdb7a3cfd3e59771455d24fac9adb151e", "patch": "@@ -6300,6 +6300,7 @@ package body Sem_Ch8 is\n       end loop;\n \n       pragma Assert (False);  --  unreachable\n+      raise Program_Error;\n    end Has_Loop_In_Inner_Open_Scopes;\n \n    --------------------"}]}