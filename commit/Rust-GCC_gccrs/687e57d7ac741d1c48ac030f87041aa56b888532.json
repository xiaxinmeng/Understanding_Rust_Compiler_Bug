{"sha": "687e57d7ac741d1c48ac030f87041aa56b888532", "node_id": "C_kwDOANBUbNoAKDY4N2U1N2Q3YWM3NDFkMWM0OGFjMDMwZjg3MDQxYWE1NmI4ODg1MzI", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2022-02-17T03:00:00Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2022-02-17T03:00:00Z"}, "message": "Define __SIZEOF_FLOAT128__ and __SIZEOF_IBM128__.\n\nDefine the sizes of the PowerPC specific types __float128 and __ibm128 if those\ntypes are enabled.\n\nThis patch will define __SIZEOF_IBM128__ and __SIZEOF_FLOAT128__ if their\nrespective types are created in the compiler.  Currently, this means both of\nthese will be defined if float128 support is enabled.  But at some point in\nthe future, __ibm128 could be enabled without enabling float128 support and\n__SIZEOF_IBM128__ would be defined.\n\n2022-02-16  Michael Meissner  <meissner@the-meissners.org>\n\ngcc/\n\tPR target/99708\n\t* config/rs6000/rs6000-c.cc (rs6000_cpu_cpp_builtins): Define\n\t__SIZEOF_IBM128__ if the IBM 128-bit long double type is created.\n\tDefine __SIZEOF_FLOAT128__ if the IEEE 128-bit floating point type\n\tis created.\n\ngcc/testsuite/\n\tPR target/99708\n\t* gcc.target/powerpc/pr99708.c: New test.", "tree": {"sha": "e1df40a1a9996fb9ade858a29ce67ab994ed85bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1df40a1a9996fb9ade858a29ce67ab994ed85bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/687e57d7ac741d1c48ac030f87041aa56b888532", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/687e57d7ac741d1c48ac030f87041aa56b888532", "html_url": "https://github.com/Rust-GCC/gccrs/commit/687e57d7ac741d1c48ac030f87041aa56b888532", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/687e57d7ac741d1c48ac030f87041aa56b888532/comments", "author": null, "committer": null, "parents": [{"sha": "5fbcbcaff7248604e04b39464f4fbd64fbf6e43b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fbcbcaff7248604e04b39464f4fbd64fbf6e43b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fbcbcaff7248604e04b39464f4fbd64fbf6e43b"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "d2e480ad7df087f2e9b3172363f0fd7827f8b36c", "filename": "gcc/config/rs6000/rs6000-c.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/687e57d7ac741d1c48ac030f87041aa56b888532/gcc%2Fconfig%2Frs6000%2Frs6000-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/687e57d7ac741d1c48ac030f87041aa56b888532/gcc%2Fconfig%2Frs6000%2Frs6000-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.cc?ref=687e57d7ac741d1c48ac030f87041aa56b888532", "patch": "@@ -623,7 +623,11 @@ rs6000_cpu_cpp_builtins (cpp_reader *pfile)\n   if (TARGET_FRSQRTES)\n     builtin_define (\"__RSQRTEF__\");\n   if (TARGET_FLOAT128_TYPE)\n-    builtin_define (\"__FLOAT128_TYPE__\");\n+      builtin_define (\"__FLOAT128_TYPE__\");\n+  if (ibm128_float_type_node)\n+    builtin_define (\"__SIZEOF_IBM128__=16\");\n+  if (ieee128_float_type_node)\n+    builtin_define (\"__SIZEOF_FLOAT128__=16\");\n #ifdef TARGET_LIBC_PROVIDES_HWCAP_IN_TCB\n   builtin_define (\"__BUILTIN_CPU_SUPPORTS__\");\n #endif"}, {"sha": "d478f7bc4c04aaf0312ee924ee4473c4a853b632", "filename": "gcc/testsuite/gcc.target/powerpc/pr99708.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/687e57d7ac741d1c48ac030f87041aa56b888532/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr99708.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/687e57d7ac741d1c48ac030f87041aa56b888532/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr99708.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr99708.c?ref=687e57d7ac741d1c48ac030f87041aa56b888532", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do run } */\n+/* { require-effective-target ppc_float128_sw } */\n+/* { dg-options \"-O2 -mvsx -mfloat128\" } */\n+\n+/*\n+ * PR target/99708\n+ *\n+ * Verify that __SIZEOF_FLOAT128__ and __SIZEOF_IBM128__ are properly defined.\n+ */\n+\n+#include <stdlib.h>\n+\n+int main (void)\n+{\n+  if (__SIZEOF_FLOAT128__ != sizeof (__float128)\n+      || __SIZEOF_IBM128__ != sizeof (__ibm128))\n+    abort ();\n+\n+  return 0;\n+}\n+"}]}