{"sha": "de515ce0b209cc7e5a780d9846e5154d380a763e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU1MTVjZTBiMjA5Y2M3ZTVhNzgwZDk4NDZlNTE1NGQzODBhNzYzZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-09-09T14:23:16Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-09-09T15:42:35Z"}, "message": "x86-64: Update AVX512FP16 ABI tests for x32\n\nOn x32, long is the same as int and pointer is 32 bits.  Update AVX512FP16\nABI tests:\n\n1. Replace long with long long for 64-bit integers.\n2. Update type and alignment for long and pointer.\n3. Skip tests for long on x32.\n\n\t* gcc.target/x86_64/abi/avx512fp16/args.h: Replace long with\n\tlong long.\n\t(XMM_T): Rename _long to _longlong and _ulong to _ulonglong.\n\t(X87_T): Rename _ulong to _ulonglong.\n\t* gcc.target/x86_64/abi/avx512fp16/defines.h (TYPE_SIZE_LONG):\n\tDefine to 4 if __ILP32__ is defined.\n\t(TYPE_SIZE_POINTER): Likewise.\n\t(TYPE_ALIGN_LONG): Likewise.\n\t(TYPE_ALIGN_POINTER): Likewise.\n\t* gcc.target/x86_64/abi/avx512fp16/test_3_element_struct_and_unions.c\n\t(main): Skip test for long if __ILP32__ is defined.\n\t* gcc.target/x86_64/abi/avx512fp16/test_m64m128_returning.c\n\t(do_test): Replace _long with _longlong.\n\t* gcc.target/x86_64/abi/avx512fp16/test_struct_returning.c:\n\t(check_300): Replace _ulong with _ulonglong.\n\t* gcc.target/x86_64/abi/avx512fp16/m256h/args.h: Replace long\n\twith long long.\n\t(YMM_T): Rename _long to _longlong and _ulong to _ulonglong.\n\t(X87_T): Rename _ulong to _ulonglong.\n\t* gcc.target/x86_64/abi/avx512fp16/m512h/args.h: Replace long\n\twith long long.\n\t(ZMM_T): Rename _long to _longlong and _ulong to _ulonglong.\n\t(X87_T): Rename _ulong to _ulonglong.", "tree": {"sha": "54c68b42850f19d14e80b9e38724032f6a72030b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54c68b42850f19d14e80b9e38724032f6a72030b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de515ce0b209cc7e5a780d9846e5154d380a763e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de515ce0b209cc7e5a780d9846e5154d380a763e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de515ce0b209cc7e5a780d9846e5154d380a763e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de515ce0b209cc7e5a780d9846e5154d380a763e/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "013cfc648405a8a118d07436f103e4d70224fe00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/013cfc648405a8a118d07436f103e4d70224fe00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/013cfc648405a8a118d07436f103e4d70224fe00"}], "stats": {"total": 178, "additions": 148, "deletions": 30}, "files": [{"sha": "425cc3f5e2b8e992496a52e6b1068e485baf4160", "filename": "gcc/testsuite/gcc.target/x86_64/abi/avx512fp16/args.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Fargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Fargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Fargs.h?ref=de515ce0b209cc7e5a780d9846e5154d380a763e", "patch": "@@ -23,9 +23,9 @@ typedef union {\n   _Float16 __Float16[8];\n   float _float[4];\n   double _double[2];\n-  long _long[2];\n+  long long _longlong[2];\n   int _int[4];\n-  unsigned long _ulong[2];\n+  ulonglong _ulonglong[2];\n #ifdef CHECK_M64_M128\n   __m64 _m64[2];\n   __m128 _m128[1];\n@@ -38,13 +38,13 @@ typedef union {\n   float _float;\n   double _double;\n   ldouble _ldouble;\n-  ulong _ulong[2];\n+  ulonglong _ulonglong[2];\n } X87_T;\n extern void (*callthis)(void);\n-extern unsigned long rax,rbx,rcx,rdx,rsi,rdi,rsp,rbp,r8,r9,r10,r11,r12,r13,r14,r15;\n+extern unsigned long long rax,rbx,rcx,rdx,rsi,rdi,rsp,rbp,r8,r9,r10,r11,r12,r13,r14,r15;\n XMM_T xmm_regs[16];\n X87_T x87_regs[8];\n-extern volatile unsigned long volatile_var;\n+extern volatile unsigned long long volatile_var;\n extern void snapshot (void);\n extern void snapshot_ret (void);\n #define WRAP_CALL(N) \\\n@@ -75,7 +75,7 @@ extern void snapshot_ret (void);\n    these are used or even really available.  */\n struct IntegerRegisters\n {\n-  unsigned long rax, rbx, rcx, rdx, rsi, rdi, r8, r9, r10, r11, r12, r13, r14, r15;\n+  unsigned long long rax, rbx, rcx, rdx, rsi, rdi, r8, r9, r10, r11, r12, r13, r14, r15;\n };\n struct FloatRegisters\n {"}, {"sha": "892a66eb2795cbbf439cac45c75c08454acefbb8", "filename": "gcc/testsuite/gcc.target/x86_64/abi/avx512fp16/defines.h", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Fdefines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Fdefines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Fdefines.h?ref=de515ce0b209cc7e5a780d9846e5154d380a763e", "patch": "@@ -4,7 +4,7 @@\n /* Get __m64 and __m128. */\n #include <immintrin.h>\n \n-typedef unsigned long ulong;\n+typedef unsigned long long ulonglong;\n typedef long double ldouble;\n \n /* These defines determines what part of the test should be run.  When\n@@ -47,7 +47,11 @@ typedef long double ldouble;\n #define TYPE_SIZE_CHAR         1\n #define TYPE_SIZE_SHORT        2\n #define TYPE_SIZE_INT          4\n-#define TYPE_SIZE_LONG         8\n+#ifdef __ILP32__\n+# define TYPE_SIZE_LONG        4\n+#else\n+# define TYPE_SIZE_LONG        8\n+#endif\n #define TYPE_SIZE_LONG_LONG    8\n #define TYPE_SIZE_INT128       16\n #define TYPE_SIZE_FLOAT16      2\n@@ -58,12 +62,20 @@ typedef long double ldouble;\n #define TYPE_SIZE_M64          8\n #define TYPE_SIZE_M128         16\n #define TYPE_SIZE_ENUM         4\n-#define TYPE_SIZE_POINTER      8\n+#ifdef __ILP32__\n+# define TYPE_SIZE_POINTER     4\n+#else\n+# define TYPE_SIZE_POINTER     8\n+#endif\n \n #define TYPE_ALIGN_CHAR        1\n #define TYPE_ALIGN_SHORT       2\n #define TYPE_ALIGN_INT         4\n-#define TYPE_ALIGN_LONG        8\n+#ifdef __ILP32__\n+# define TYPE_ALIGN_LONG       4\n+#else\n+# define TYPE_ALIGN_LONG       8\n+#endif\n #define TYPE_ALIGN_LONG_LONG   8\n #define TYPE_ALIGN_INT128      16\n #define TYPE_ALIGN_FLOAT16     2\n@@ -74,7 +86,11 @@ typedef long double ldouble;\n #define TYPE_ALIGN_M64         8\n #define TYPE_ALIGN_M128        16\n #define TYPE_ALIGN_ENUM        4\n-#define TYPE_ALIGN_POINTER     8\n+#ifdef __ILP32__\n+# define TYPE_ALIGN_POINTER    4\n+#else\n+# define TYPE_ALIGN_POINTER    8\n+#endif\n \n /* These defines control the building of the list of types to check. There\n    is a string identifying the type (with a comma after), a size of the type"}, {"sha": "add109587d695a5a38f4bb7548fb262ea4240629", "filename": "gcc/testsuite/gcc.target/x86_64/abi/avx512fp16/m256h/args.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Fm256h%2Fargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Fm256h%2Fargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Fm256h%2Fargs.h?ref=de515ce0b209cc7e5a780d9846e5154d380a763e", "patch": "@@ -33,9 +33,9 @@ typedef union {\n   _Float16 __Float16[16];\n   float _float[8];\n   double _double[4];\n-  long _long[4];\n+  long long _longlong[4];\n   int _int[8];\n-  unsigned long _ulong[4];\n+  unsigned long long _ulonglong[4];\n   __m64 _m64[4];\n   __m128 _m128[2];\n   __m256 _m256[1];\n@@ -46,13 +46,13 @@ typedef union {\n   float _float;\n   double _double;\n   long double _ldouble;\n-  unsigned long _ulong[2];\n+  unsigned long long _ulonglong[2];\n } X87_T;\n extern void (*callthis)(void);\n-extern unsigned long rax,rbx,rcx,rdx,rsi,rdi,rsp,rbp,r8,r9,r10,r11,r12,r13,r14,r15;\n+extern unsigned long long rax,rbx,rcx,rdx,rsi,rdi,rsp,rbp,r8,r9,r10,r11,r12,r13,r14,r15;\n YMM_T ymm_regs[16];\n X87_T x87_regs[8];\n-extern volatile unsigned long volatile_var;\n+extern volatile unsigned long long volatile_var;\n extern void snapshot (void);\n extern void snapshot_ret (void);\n #define WRAP_CALL(N) \\\n@@ -83,7 +83,7 @@ extern void snapshot_ret (void);\n    these are used or even really available.  */\n struct IntegerRegisters\n {\n-  unsigned long rax, rbx, rcx, rdx, rsi, rdi, r8, r9, r10, r11, r12, r13, r14, r15;\n+  unsigned long long rax, rbx, rcx, rdx, rsi, rdi, r8, r9, r10, r11, r12, r13, r14, r15;\n };\n struct FloatRegisters\n {"}, {"sha": "d59c3373694c3d72988c8e9238f034f08e46dfd4", "filename": "gcc/testsuite/gcc.target/x86_64/abi/avx512fp16/m512h/args.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Fm512h%2Fargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Fm512h%2Fargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Fm512h%2Fargs.h?ref=de515ce0b209cc7e5a780d9846e5154d380a763e", "patch": "@@ -33,9 +33,9 @@ typedef union {\n   _Float16 __Float16[32];\n   float _float[16];\n   double _double[8];\n-  long _long[8];\n+  long long _longlong[8];\n   int _int[16];\n-  unsigned long _ulong[8];\n+  unsigned long long _ulonglong[8];\n   __m64 _m64[8];\n   __m128 _m128[4];\n   __m256 _m256[2];\n@@ -47,13 +47,13 @@ typedef union {\n   float _float;\n   double _double;\n   long double _ldouble;\n-  unsigned long _ulong[2];\n+  unsigned long long _ulonglong[2];\n } X87_T;\n extern void (*callthis)(void);\n-extern unsigned long rax,rbx,rcx,rdx,rsi,rdi,rsp,rbp,r8,r9,r10,r11,r12,r13,r14,r15;\n+extern unsigned long long rax,rbx,rcx,rdx,rsi,rdi,rsp,rbp,r8,r9,r10,r11,r12,r13,r14,r15;\n ZMM_T zmm_regs[32];\n X87_T x87_regs[8];\n-extern volatile unsigned long volatile_var;\n+extern volatile unsigned long long volatile_var;\n extern void snapshot (void);\n extern void snapshot_ret (void);\n #define WRAP_CALL(N) \\\n@@ -84,7 +84,7 @@ extern void snapshot_ret (void);\n    these are used or even really available.  */\n struct IntegerRegisters\n {\n-  unsigned long rax, rbx, rcx, rdx, rsi, rdi, r8, r9, r10, r11, r12, r13, r14, r15;\n+  unsigned long long rax, rbx, rcx, rdx, rsi, rdi, r8, r9, r10, r11, r12, r13, r14, r15;\n };\n struct FloatRegisters\n {"}, {"sha": "869eec52d703e5520510ab7eb7f04e4e7b970003", "filename": "gcc/testsuite/gcc.target/x86_64/abi/avx512fp16/test_3_element_struct_and_unions.c", "status": "modified", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Ftest_3_element_struct_and_unions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Ftest_3_element_struct_and_unions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Ftest_3_element_struct_and_unions.c?ref=de515ce0b209cc7e5a780d9846e5154d380a763e", "patch": "@@ -10,27 +10,34 @@ main (void)\n   check_struct_and_union3(char, char, char, 3, 1);\n   check_struct_and_union3(char, char, short, 4, 2);\n   check_struct_and_union3(char, char, int, 8, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(char, char, long, 16, 8);\n+#endif\n   check_struct_and_union3(char, char, long long, 16, 8);\n   check_struct_and_union3(char, char, float, 8, 4);\n   check_struct_and_union3(char, char, double, 16, 8);\n   check_struct_and_union3(char, char, long double, 32, 16);\n   check_struct_and_union3(char, short, char, 6, 2);\n   check_struct_and_union3(char, short, short, 6, 2);\n   check_struct_and_union3(char, short, int, 8, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(char, short, long, 16, 8);\n+#endif\n   check_struct_and_union3(char, short, long long, 16, 8);\n   check_struct_and_union3(char, short, float, 8, 4);\n   check_struct_and_union3(char, short, double, 16, 8);\n   check_struct_and_union3(char, short, long double, 32, 16);\n   check_struct_and_union3(char, int, char, 12, 4);\n   check_struct_and_union3(char, int, short, 12, 4);\n   check_struct_and_union3(char, int, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(char, int, long, 16, 8);\n+#endif\n   check_struct_and_union3(char, int, long long, 16, 8);\n   check_struct_and_union3(char, int, float, 12, 4);\n   check_struct_and_union3(char, int, double, 16, 8);\n   check_struct_and_union3(char, int, long double, 32, 16);\n+#ifndef __ILP32__\n   check_struct_and_union3(char, long, char, 24, 8);\n   check_struct_and_union3(char, long, short, 24, 8);\n   check_struct_and_union3(char, long, int, 24, 8);\n@@ -39,6 +46,7 @@ main (void)\n   check_struct_and_union3(char, long, float, 24, 8);\n   check_struct_and_union3(char, long, double, 24, 8);\n   check_struct_and_union3(char, long, long double, 32, 16);\n+#endif\n   check_struct_and_union3(char, long long, char, 24, 8);\n   check_struct_and_union3(char, long long, short, 24, 8);\n   check_struct_and_union3(char, long long, int, 24, 8);\n@@ -50,7 +58,9 @@ main (void)\n   check_struct_and_union3(char, float, char, 12, 4);\n   check_struct_and_union3(char, float, short, 12, 4);\n   check_struct_and_union3(char, float, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(char, float, long, 16, 8);\n+#endif\n   check_struct_and_union3(char, float, long long, 16, 8);\n   check_struct_and_union3(char, float, float, 12, 4);\n   check_struct_and_union3(char, float, double, 16, 8);\n@@ -74,27 +84,34 @@ main (void)\n   check_struct_and_union3(short, char, char, 4, 2);\n   check_struct_and_union3(short, char, short, 6, 2);\n   check_struct_and_union3(short, char, int, 8, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(short, char, long, 16, 8);\n+#endif \n   check_struct_and_union3(short, char, long long, 16, 8);\n   check_struct_and_union3(short, char, float, 8, 4);\n   check_struct_and_union3(short, char, double, 16, 8);\n   check_struct_and_union3(short, char, long double, 32, 16);\n   check_struct_and_union3(short, short, char, 6, 2);\n   check_struct_and_union3(short, short, short, 6, 2);\n   check_struct_and_union3(short, short, int, 8, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(short, short, long, 16, 8);\n+#endif\n   check_struct_and_union3(short, short, long long, 16, 8);\n   check_struct_and_union3(short, short, float, 8, 4);\n   check_struct_and_union3(short, short, double, 16, 8);\n   check_struct_and_union3(short, short, long double, 32, 16);\n   check_struct_and_union3(short, int, char, 12, 4);\n   check_struct_and_union3(short, int, short, 12, 4);\n   check_struct_and_union3(short, int, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(short, int, long, 16, 8);\n+#endif\n   check_struct_and_union3(short, int, long long, 16, 8);\n   check_struct_and_union3(short, int, float, 12, 4);\n   check_struct_and_union3(short, int, double, 16, 8);\n   check_struct_and_union3(short, int, long double, 32, 16);\n+#ifndef __ILP32__\n   check_struct_and_union3(short, long, char, 24, 8);\n   check_struct_and_union3(short, long, short, 24, 8);\n   check_struct_and_union3(short, long, int, 24, 8);\n@@ -103,6 +120,7 @@ main (void)\n   check_struct_and_union3(short, long, float, 24, 8);\n   check_struct_and_union3(short, long, double, 24, 8);\n   check_struct_and_union3(short, long, long double, 32, 16);\n+#endif\n   check_struct_and_union3(short, long long, char, 24, 8);\n   check_struct_and_union3(short, long long, short, 24, 8);\n   check_struct_and_union3(short, long long, int, 24, 8);\n@@ -114,7 +132,9 @@ main (void)\n   check_struct_and_union3(short, float, char, 12, 4);\n   check_struct_and_union3(short, float, short, 12, 4);\n   check_struct_and_union3(short, float, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(short, float, long, 16, 8);\n+#endif\n   check_struct_and_union3(short, float, long long, 16, 8);\n   check_struct_and_union3(short, float, float, 12, 4);\n   check_struct_and_union3(short, float, double, 16, 8);\n@@ -138,34 +158,42 @@ main (void)\n   check_struct_and_union3(int, char, char, 8, 4);\n   check_struct_and_union3(int, char, short, 8, 4);\n   check_struct_and_union3(int, char, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(int, char, long, 16, 8);\n+#endif\n   check_struct_and_union3(int, char, long long, 16, 8);\n   check_struct_and_union3(int, char, float, 12, 4);\n   check_struct_and_union3(int, char, double, 16, 8);\n   check_struct_and_union3(int, char, long double, 32, 16);\n   check_struct_and_union3(int, short, char, 8, 4);\n   check_struct_and_union3(int, short, short, 8, 4);\n   check_struct_and_union3(int, short, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(int, short, long, 16, 8);\n+#endif\n   check_struct_and_union3(int, short, long long, 16, 8);\n   check_struct_and_union3(int, short, float, 12, 4);\n   check_struct_and_union3(int, short, double, 16, 8);\n   check_struct_and_union3(int, short, long double, 32, 16);\n   check_struct_and_union3(int, int, char, 12, 4);\n   check_struct_and_union3(int, int, short, 12, 4);\n   check_struct_and_union3(int, int, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(int, int, long, 16, 8);\n+#endif\n   check_struct_and_union3(int, int, long long, 16, 8);\n   check_struct_and_union3(int, int, float, 12, 4);\n   check_struct_and_union3(int, int, double, 16, 8);\n   check_struct_and_union3(int, int, long double, 32, 16);\n+#ifndef __ILP32__\n   check_struct_and_union3(int, long, char, 24, 8);\n   check_struct_and_union3(int, long, short, 24, 8);\n   check_struct_and_union3(int, long, int, 24, 8);\n   check_struct_and_union3(int, long, long, 24, 8);\n   check_struct_and_union3(int, long, long long, 24, 8);\n   check_struct_and_union3(int, long, float, 24, 8);\n   check_struct_and_union3(int, long, double, 24, 8);\n+#endif\n   check_struct_and_union3(int, long, long double, 32, 16);\n   check_struct_and_union3(int, long long, char, 24, 8);\n   check_struct_and_union3(int, long long, short, 24, 8);\n@@ -178,7 +206,9 @@ main (void)\n   check_struct_and_union3(int, float, char, 12, 4);\n   check_struct_and_union3(int, float, short, 12, 4);\n   check_struct_and_union3(int, float, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(int, float, long, 16, 8);\n+#endif\n   check_struct_and_union3(int, float, long long, 16, 8);\n   check_struct_and_union3(int, float, float, 12, 4);\n   check_struct_and_union3(int, float, double, 16, 8);\n@@ -199,6 +229,7 @@ main (void)\n   check_struct_and_union3(int, long double, float, 48, 16);\n   check_struct_and_union3(int, long double, double, 48, 16);\n   check_struct_and_union3(int, long double, long double, 48, 16);\n+#ifndef __ILP32__\n   check_struct_and_union3(long, char, char, 16, 8);\n   check_struct_and_union3(long, char, short, 16, 8);\n   check_struct_and_union3(long, char, int, 16, 8);\n@@ -222,7 +253,9 @@ main (void)\n   check_struct_and_union3(long, int, long long, 24, 8);\n   check_struct_and_union3(long, int, float, 16, 8);\n   check_struct_and_union3(long, int, double, 24, 8);\n+#endif\n   check_struct_and_union3(long, int, long double, 32, 16);\n+#ifndef  __ILP32__\n   check_struct_and_union3(long, long, char, 24, 8);\n   check_struct_and_union3(long, long, short, 24, 8);\n   check_struct_and_union3(long, long, int, 24, 8);\n@@ -263,37 +296,48 @@ main (void)\n   check_struct_and_union3(long, long double, float, 48, 16);\n   check_struct_and_union3(long, long double, double, 48, 16);\n   check_struct_and_union3(long, long double, long double, 48, 16);\n+#endif\n   check_struct_and_union3(long long, char, char, 16, 8);\n   check_struct_and_union3(long long, char, short, 16, 8);\n   check_struct_and_union3(long long, char, int, 16, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(long long, char, long, 24, 8);\n+#endif\n   check_struct_and_union3(long long, char, long long, 24, 8);\n   check_struct_and_union3(long long, char, float, 16, 8);\n   check_struct_and_union3(long long, char, double, 24, 8);\n   check_struct_and_union3(long long, char, long double, 32, 16);\n   check_struct_and_union3(long long, short, char, 16, 8);\n   check_struct_and_union3(long long, short, short, 16, 8);\n   check_struct_and_union3(long long, short, int, 16, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(long long, short, long, 24, 8);\n+#endif\n   check_struct_and_union3(long long, short, long long, 24, 8);\n   check_struct_and_union3(long long, short, float, 16, 8);\n   check_struct_and_union3(long long, short, double, 24, 8);\n   check_struct_and_union3(long long, short, long double, 32, 16);\n   check_struct_and_union3(long long, int, char, 16, 8);\n   check_struct_and_union3(long long, int, short, 16, 8);\n   check_struct_and_union3(long long, int, int, 16, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(long long, int, long, 24, 8);\n+#endif\n   check_struct_and_union3(long long, int, long long, 24, 8);\n   check_struct_and_union3(long long, int, float, 16, 8);\n   check_struct_and_union3(long long, int, double, 24, 8);\n   check_struct_and_union3(long long, int, long double, 32, 16);\n+#ifndef __ILP32__\n   check_struct_and_union3(long long, long, char, 24, 8);\n   check_struct_and_union3(long long, long, short, 24, 8);\n   check_struct_and_union3(long long, long, int, 24, 8);\n   check_struct_and_union3(long long, long, long, 24, 8);\n+#endif\n   check_struct_and_union3(long long, long, long long, 24, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(long long, long, float, 24, 8);\n   check_struct_and_union3(long long, long, double, 24, 8);\n+#endif\n   check_struct_and_union3(long long, long, long double, 32, 16);\n   check_struct_and_union3(long long, long long, char, 24, 8);\n   check_struct_and_union3(long long, long long, short, 24, 8);\n@@ -306,7 +350,9 @@ main (void)\n   check_struct_and_union3(long long, float, char, 16, 8);\n   check_struct_and_union3(long long, float, short, 16, 8);\n   check_struct_and_union3(long long, float, int, 16, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(long long, float, long, 24, 8);\n+#endif\n   check_struct_and_union3(long long, float, long long, 24, 8);\n   check_struct_and_union3(long long, float, float, 16, 8);\n   check_struct_and_union3(long long, float, double, 24, 8);\n@@ -330,34 +376,42 @@ main (void)\n   check_struct_and_union3(float, char, char, 8, 4);\n   check_struct_and_union3(float, char, short, 8, 4);\n   check_struct_and_union3(float, char, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(float, char, long, 16, 8);\n+#endif\n   check_struct_and_union3(float, char, long long, 16, 8);\n   check_struct_and_union3(float, char, float, 12, 4);\n   check_struct_and_union3(float, char, double, 16, 8);\n   check_struct_and_union3(float, char, long double, 32, 16);\n   check_struct_and_union3(float, short, char, 8, 4);\n   check_struct_and_union3(float, short, short, 8, 4);\n   check_struct_and_union3(float, short, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(float, short, long, 16, 8);\n+#endif\n   check_struct_and_union3(float, short, long long, 16, 8);\n   check_struct_and_union3(float, short, float, 12, 4);\n   check_struct_and_union3(float, short, double, 16, 8);\n   check_struct_and_union3(float, short, long double, 32, 16);\n   check_struct_and_union3(float, int, char, 12, 4);\n   check_struct_and_union3(float, int, short, 12, 4);\n   check_struct_and_union3(float, int, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(float, int, long, 16, 8);\n+#endif\n   check_struct_and_union3(float, int, long long, 16, 8);\n   check_struct_and_union3(float, int, float, 12, 4);\n   check_struct_and_union3(float, int, double, 16, 8);\n   check_struct_and_union3(float, int, long double, 32, 16);\n+#ifndef __ILP32__\n   check_struct_and_union3(float, long, char, 24, 8);\n   check_struct_and_union3(float, long, short, 24, 8);\n   check_struct_and_union3(float, long, int, 24, 8);\n   check_struct_and_union3(float, long, long, 24, 8);\n   check_struct_and_union3(float, long, long long, 24, 8);\n   check_struct_and_union3(float, long, float, 24, 8);\n   check_struct_and_union3(float, long, double, 24, 8);\n+#endif\n   check_struct_and_union3(float, long, long double, 32, 16);\n   check_struct_and_union3(float, long long, char, 24, 8);\n   check_struct_and_union3(float, long long, short, 24, 8);\n@@ -370,7 +424,9 @@ main (void)\n   check_struct_and_union3(float, float, char, 12, 4);\n   check_struct_and_union3(float, float, short, 12, 4);\n   check_struct_and_union3(float, float, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(float, float, long, 16, 8);\n+#endif\n   check_struct_and_union3(float, float, long long, 16, 8);\n   check_struct_and_union3(float, float, float, 12, 4);\n   check_struct_and_union3(float, float, double, 16, 8);\n@@ -394,33 +450,43 @@ main (void)\n   check_struct_and_union3(double, char, char, 16, 8);\n   check_struct_and_union3(double, char, short, 16, 8);\n   check_struct_and_union3(double, char, int, 16, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(double, char, long, 24, 8);\n+#endif\n   check_struct_and_union3(double, char, long long, 24, 8);\n   check_struct_and_union3(double, char, float, 16, 8);\n   check_struct_and_union3(double, char, double, 24, 8);\n   check_struct_and_union3(double, char, long double, 32, 16);\n   check_struct_and_union3(double, short, char, 16, 8);\n   check_struct_and_union3(double, short, short, 16, 8);\n   check_struct_and_union3(double, short, int, 16, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(double, short, long, 24, 8);\n+#endif\n   check_struct_and_union3(double, short, long long, 24, 8);\n   check_struct_and_union3(double, short, float, 16, 8);\n   check_struct_and_union3(double, short, double, 24, 8);\n   check_struct_and_union3(double, short, long double, 32, 16);\n   check_struct_and_union3(double, int, char, 16, 8);\n   check_struct_and_union3(double, int, short, 16, 8);\n   check_struct_and_union3(double, int, int, 16, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(double, int, long, 24, 8);\n+#endif\n   check_struct_and_union3(double, int, long long, 24, 8);\n   check_struct_and_union3(double, int, float, 16, 8);\n   check_struct_and_union3(double, int, double, 24, 8);\n   check_struct_and_union3(double, int, long double, 32, 16);\n+#ifndef __ILP32__\n   check_struct_and_union3(double, long, char, 24, 8);\n   check_struct_and_union3(double, long, short, 24, 8);\n   check_struct_and_union3(double, long, int, 24, 8);\n   check_struct_and_union3(double, long, long, 24, 8);\n+#endif\n   check_struct_and_union3(double, long, long long, 24, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(double, long, float, 24, 8);\n+#endif\n   check_struct_and_union3(double, long, double, 24, 8);\n   check_struct_and_union3(double, long, long double, 32, 16);\n   check_struct_and_union3(double, long long, char, 24, 8);\n@@ -434,7 +500,9 @@ main (void)\n   check_struct_and_union3(double, float, char, 16, 8);\n   check_struct_and_union3(double, float, short, 16, 8);\n   check_struct_and_union3(double, float, int, 16, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(double, float, long, 24, 8);\n+#endif\n   check_struct_and_union3(double, float, long long, 24, 8);\n   check_struct_and_union3(double, float, float, 16, 8);\n   check_struct_and_union3(double, float, double, 24, 8);\n@@ -523,48 +591,60 @@ main (void)\n   check_struct_and_union3(char, _Float16, char, 6, 2);\n   check_struct_and_union3(char, _Float16, _Float16, 6, 2);\n   check_struct_and_union3(char, _Float16, int, 8, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(char, _Float16, long, 16, 8);\n+#endif\n   check_struct_and_union3(char, _Float16, long long, 16, 8);\n   check_struct_and_union3(char, _Float16, float, 8, 4);\n   check_struct_and_union3(char, _Float16, double, 16, 8);\n   check_struct_and_union3(char, _Float16, long double, 32, 16);\n   check_struct_and_union3(char, int, _Float16, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(char, long, _Float16, 24, 8);\n+#endif\n   check_struct_and_union3(char, long long, _Float16, 24, 8);\n   check_struct_and_union3(char, float, _Float16, 12, 4);\n   check_struct_and_union3(char, double, _Float16, 24, 8);\n   check_struct_and_union3(char, long double, _Float16, 48, 16);\n   check_struct_and_union3(_Float16, char, char, 4, 2);\n   check_struct_and_union3(_Float16, char, _Float16, 6, 2);\n   check_struct_and_union3(_Float16, char, int, 8, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(_Float16, char, long, 16, 8);\n+#endif\n   check_struct_and_union3(_Float16, char, long long, 16, 8);\n   check_struct_and_union3(_Float16, char, float, 8, 4);\n   check_struct_and_union3(_Float16, char, double, 16, 8);\n   check_struct_and_union3(_Float16, char, long double, 32, 16);\n   check_struct_and_union3(_Float16, _Float16, char, 6, 2);\n   check_struct_and_union3(_Float16, _Float16, _Float16, 6, 2);\n   check_struct_and_union3(_Float16, _Float16, int, 8, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(_Float16, _Float16, long, 16, 8);\n+#endif\n   check_struct_and_union3(_Float16, _Float16, long long, 16, 8);\n   check_struct_and_union3(_Float16, _Float16, float, 8, 4);\n   check_struct_and_union3(_Float16, _Float16, double, 16, 8);\n   check_struct_and_union3(_Float16, _Float16, long double, 32, 16);\n   check_struct_and_union3(_Float16, int, char, 12, 4);\n   check_struct_and_union3(_Float16, int, _Float16, 12, 4);\n   check_struct_and_union3(_Float16, int, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(_Float16, int, long, 16, 8);\n+#endif\n   check_struct_and_union3(_Float16, int, long long, 16, 8);\n   check_struct_and_union3(_Float16, int, float, 12, 4);\n   check_struct_and_union3(_Float16, int, double, 16, 8);\n   check_struct_and_union3(_Float16, int, long double, 32, 16);\n+#ifndef __ILP32__\n   check_struct_and_union3(_Float16, long, char, 24, 8);\n   check_struct_and_union3(_Float16, long, _Float16, 24, 8);\n   check_struct_and_union3(_Float16, long, int, 24, 8);\n   check_struct_and_union3(_Float16, long, long, 24, 8);\n   check_struct_and_union3(_Float16, long, long long, 24, 8);\n   check_struct_and_union3(_Float16, long, float, 24, 8);\n   check_struct_and_union3(_Float16, long, double, 24, 8);\n+#endif\n   check_struct_and_union3(_Float16, long, long double, 32, 16);\n   check_struct_and_union3(_Float16, long long, char, 24, 8);\n   check_struct_and_union3(_Float16, long long, _Float16, 24, 8);\n@@ -577,7 +657,9 @@ main (void)\n   check_struct_and_union3(_Float16, float, char, 12, 4);\n   check_struct_and_union3(_Float16, float, _Float16, 12, 4);\n   check_struct_and_union3(_Float16, float, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(_Float16, float, long, 16, 8);\n+#endif\n   check_struct_and_union3(_Float16, float, long long, 16, 8);\n   check_struct_and_union3(_Float16, float, float, 12, 4);\n   check_struct_and_union3(_Float16, float, double, 16, 8);\n@@ -602,17 +684,22 @@ main (void)\n   check_struct_and_union3(int, _Float16, char, 8, 4);\n   check_struct_and_union3(int, _Float16, _Float16, 8, 4);\n   check_struct_and_union3(int, _Float16, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(int, _Float16, long, 16, 8);\n+#endif\n   check_struct_and_union3(int, _Float16, long long, 16, 8);\n   check_struct_and_union3(int, _Float16, float, 12, 4);\n   check_struct_and_union3(int, _Float16, double, 16, 8);\n   check_struct_and_union3(int, _Float16, long double, 32, 16);\n   check_struct_and_union3(int, int, _Float16, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(int, long, _Float16, 24, 8);\n+#endif\n   check_struct_and_union3(int, long long, _Float16, 24, 8);\n   check_struct_and_union3(int, float, _Float16, 12, 4);\n   check_struct_and_union3(int, double, _Float16, 24, 8);\n   check_struct_and_union3(int, long double, _Float16, 48, 16);\n+#ifndef __ILP32__\n   check_struct_and_union3(long, char, _Float16, 16, 8);\n   check_struct_and_union3(long, _Float16, char, 16, 8);\n   check_struct_and_union3(long, _Float16, _Float16, 16, 8);\n@@ -621,24 +708,31 @@ main (void)\n   check_struct_and_union3(long, _Float16, long long, 24, 8);\n   check_struct_and_union3(long, _Float16, float, 16, 8);\n   check_struct_and_union3(long, _Float16, double, 24, 8);\n+#endif\n   check_struct_and_union3(long, _Float16, long double, 32, 16);\n+#ifndef __ILP32__\n   check_struct_and_union3(long, int, _Float16, 16, 8);\n   check_struct_and_union3(long, long, _Float16, 24, 8);\n   check_struct_and_union3(long, long long, _Float16, 24, 8);\n   check_struct_and_union3(long, float, _Float16, 16, 8);\n   check_struct_and_union3(long, double, _Float16, 24, 8);\n+#endif\n   check_struct_and_union3(long, long double, _Float16, 48, 16);\n   check_struct_and_union3(long long, char, _Float16, 16, 8);\n   check_struct_and_union3(long long, _Float16, char, 16, 8);\n   check_struct_and_union3(long long, _Float16, _Float16, 16, 8);\n   check_struct_and_union3(long long, _Float16, int, 16, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(long long, _Float16, long, 24, 8);\n+#endif\n   check_struct_and_union3(long long, _Float16, long long, 24, 8);\n   check_struct_and_union3(long long, _Float16, float, 16, 8);\n   check_struct_and_union3(long long, _Float16, double, 24, 8);\n   check_struct_and_union3(long long, _Float16, long double, 32, 16);\n   check_struct_and_union3(long long, int, _Float16, 16, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(long long, long, _Float16, 24, 8);\n+#endif\n   check_struct_and_union3(long long, long long, _Float16, 24, 8);\n   check_struct_and_union3(long long, float, _Float16, 16, 8);\n   check_struct_and_union3(long long, double, _Float16, 24, 8);\n@@ -647,13 +741,17 @@ main (void)\n   check_struct_and_union3(float, _Float16, char, 8, 4);\n   check_struct_and_union3(float, _Float16, _Float16, 8, 4);\n   check_struct_and_union3(float, _Float16, int, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(float, _Float16, long, 16, 8);\n+#endif\n   check_struct_and_union3(float, _Float16, long long, 16, 8);\n   check_struct_and_union3(float, _Float16, float, 12, 4);\n   check_struct_and_union3(float, _Float16, double, 16, 8);\n   check_struct_and_union3(float, _Float16, long double, 32, 16);\n   check_struct_and_union3(float, int, _Float16, 12, 4);\n+#ifndef __ILP32__\n   check_struct_and_union3(float, long, _Float16, 24, 8);\n+#endif\n   check_struct_and_union3(float, long long, _Float16, 24, 8);\n   check_struct_and_union3(float, float, _Float16, 12, 4);\n   check_struct_and_union3(float, double, _Float16, 24, 8);\n@@ -662,13 +760,17 @@ main (void)\n   check_struct_and_union3(double, _Float16, char, 16, 8);\n   check_struct_and_union3(double, _Float16, _Float16, 16, 8);\n   check_struct_and_union3(double, _Float16, int, 16, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(double, _Float16, long, 24, 8);\n+#endif\n   check_struct_and_union3(double, _Float16, long long, 24, 8);\n   check_struct_and_union3(double, _Float16, float, 16, 8);\n   check_struct_and_union3(double, _Float16, double, 24, 8);\n   check_struct_and_union3(double, _Float16, long double, 32, 16);\n   check_struct_and_union3(double, int, _Float16, 16, 8);\n+#ifndef __ILP32__\n   check_struct_and_union3(double, long, _Float16, 24, 8);\n+#endif\n   check_struct_and_union3(double, long long, _Float16, 24, 8);\n   check_struct_and_union3(double, float, _Float16, 16, 8);\n   check_struct_and_union3(double, double, _Float16, 24, 8);"}, {"sha": "363dfa9bbf718da74397331fab5394530c6b9ae0", "filename": "gcc/testsuite/gcc.target/x86_64/abi/avx512fp16/test_m64m128_returning.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Ftest_m64m128_returning.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Ftest_m64m128_returning.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Ftest_m64m128_returning.c?ref=de515ce0b209cc7e5a780d9846e5154d380a763e", "patch": "@@ -47,25 +47,25 @@ do_test (void)\n   test_64 = (__m64){72,0};\n   xmmt1._m64[0] = test_64;\n   xmmt2._m64[0] = WRAP_RET (fun_test_returning___m64)();\n-  if (xmmt1._long[0] != xmmt2._long[0]\n-      || xmmt1._long[0] != xmm_regs[0]._long[0])\n+  if (xmmt1._longlong[0] != xmmt2._longlong[0]\n+      || xmmt1._longlong[0] != xmm_regs[0]._longlong[0])\n     printf (\"fail m64\\n\"), failed++;\n \n   clear_struct_registers;\n   test_128 = (__m128){73,0};\n   xmmt1._m128[0] = test_128;\n   xmmt2._m128[0] = WRAP_RET (fun_test_returning___m128)();\n-  if (xmmt1._long[0] != xmmt2._long[0]\n-      || xmmt1._long[0] != xmm_regs[0]._long[0])\n+  if (xmmt1._longlong[0] != xmmt2._longlong[0]\n+      || xmmt1._longlong[0] != xmm_regs[0]._longlong[0])\n     printf (\"fail m128\\n\"), failed++;\n \n   clear_struct_registers;\n   test_128h = (__m128h){1.1f16, 2.2f16, 3.3f16, 4.4f16, 5.5f16,\n                         6.6f16, 7.7f16, 8.8f16};\n   xmmt1._m128h[0] = test_128h;\n   xmmt2._m128h[0] = WRAP_RET (fun_test_returning___m128h)();\n-  if (xmmt1._long[0] != xmmt2._long[0]\n-      || xmmt1._long[0] != xmm_regs[0]._long[0])\n+  if (xmmt1._longlong[0] != xmmt2._longlong[0]\n+      || xmmt1._longlong[0] != xmm_regs[0]._longlong[0])\n     printf (\"fail m128h\\n\"), failed++;\n \n   if (failed)"}, {"sha": "5de18ee5e0a3c9578cb34ba7a2eb71e209e6199c", "filename": "gcc/testsuite/gcc.target/x86_64/abi/avx512fp16/test_struct_returning.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Ftest_struct_returning.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de515ce0b209cc7e5a780d9846e5154d380a763e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Ftest_struct_returning.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx512fp16%2Ftest_struct_returning.c?ref=de515ce0b209cc7e5a780d9846e5154d380a763e", "patch": "@@ -124,7 +124,7 @@ D(313,long long m1; _Float16 m2)\n void check_300 (void)\n {\n   XMM_T x;\n-  x._ulong[0] = rax;\n+  x._ulonglong[0] = rax;\n   switch (current_test) {\n     case 300: assert ((rax & 0xff) == 42 && x._float[1] == 43); break;\n     case 301: assert ((rax & 0xff) == 42 && xmm0d[0] == 43); break;"}]}