{"sha": "cd6baa162d29845341b74e61c36a61614a36b204", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2YmFhMTYyZDI5ODQ1MzQxYjc0ZTYxYzM2YTYxNjE0YTM2YjIwNA==", "commit": {"author": {"name": "Torvald Riegel", "email": "triegel@redhat.com", "date": "2011-11-21T22:29:31Z"}, "committer": {"name": "Torvald Riegel", "email": "torvald@gcc.gnu.org", "date": "2011-11-21T22:29:31Z"}, "message": "PR47747: Fix error messages for calls to unsafe virtual functions.\n\n\tgcc/\n\t* trans-mem.c (diagnose_tm_1): Print an expression instead of a\n\tdeclaration in error messages for indirect calls.\n\n\ttestsuite/\n\tg++.dg/tm/pr47747.C: New test.\n\nFrom-SVN: r181602", "tree": {"sha": "34a48a93c32d86a3671f6aa53cd162dbd27c0c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34a48a93c32d86a3671f6aa53cd162dbd27c0c21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd6baa162d29845341b74e61c36a61614a36b204", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6baa162d29845341b74e61c36a61614a36b204", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd6baa162d29845341b74e61c36a61614a36b204", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6baa162d29845341b74e61c36a61614a36b204/comments", "author": {"login": "triegelrh", "id": 62400967, "node_id": "MDQ6VXNlcjYyNDAwOTY3", "avatar_url": "https://avatars.githubusercontent.com/u/62400967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/triegelrh", "html_url": "https://github.com/triegelrh", "followers_url": "https://api.github.com/users/triegelrh/followers", "following_url": "https://api.github.com/users/triegelrh/following{/other_user}", "gists_url": "https://api.github.com/users/triegelrh/gists{/gist_id}", "starred_url": "https://api.github.com/users/triegelrh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/triegelrh/subscriptions", "organizations_url": "https://api.github.com/users/triegelrh/orgs", "repos_url": "https://api.github.com/users/triegelrh/repos", "events_url": "https://api.github.com/users/triegelrh/events{/privacy}", "received_events_url": "https://api.github.com/users/triegelrh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e159409fcacfdfcb7046c3d870ee60d9e4131e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e159409fcacfdfcb7046c3d870ee60d9e4131e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e159409fcacfdfcb7046c3d870ee60d9e4131e8"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "8c776dc3c730522a1a47a17b11f0a58b9a9321ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6baa162d29845341b74e61c36a61614a36b204/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6baa162d29845341b74e61c36a61614a36b204/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd6baa162d29845341b74e61c36a61614a36b204", "patch": "@@ -1,3 +1,8 @@\n+2011-11-21  Torvald Riegel  <triegel@redhat.com>\n+\n+\t* trans-mem.c (diagnose_tm_1): Print an expression instead of a\n+\tdeclaration in error messages for indirect calls.\n+\n 2011-11-21  David S. Miller  <davem@davemloft.net>\n \n \t* config/sparc/sparc.c (sparc_regmode_natural_size): New function"}, {"sha": "0f3216e6da2adc21ce2cd52f9f8bf5d76d5b68c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6baa162d29845341b74e61c36a61614a36b204/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6baa162d29845341b74e61c36a61614a36b204/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd6baa162d29845341b74e61c36a61614a36b204", "patch": "@@ -1,3 +1,7 @@\n+2011-11-21  Torvald Riegel  <triegel@redhat.com>\n+\n+\t* g++.dg/tm/pr47747.C: New test.\n+\n 2011-11-21  Torvald Riegel  <triegel@redhat.com>\n \n \t* g++.dg/tm/template-2.C: New test."}, {"sha": "3b50904b5d966b9be277ffaca7a80ca736734d73", "filename": "gcc/testsuite/g++.dg/tm/pr47747.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6baa162d29845341b74e61c36a61614a36b204/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fpr47747.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6baa162d29845341b74e61c36a61614a36b204/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fpr47747.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fpr47747.C?ref=cd6baa162d29845341b74e61c36a61614a36b204", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+// { dg-options \"-fgnu-tm -O\" }\n+\n+class InputStream\n+{\n+        public:\n+//        __attribute__((transaction_safe))\n+        virtual unsigned int readUint32 () = 0;\n+};\n+\n+class Building\n+{\n+        public:\n+        __attribute__((transaction_safe))\n+        Building (InputStream *stream);\n+};\n+\n+Building::Building (InputStream *stream)\n+{\n+        stream->readUint32 (); /* { dg-error \"InputStream::readUint32\" } */\n+}"}, {"sha": "347183b15689b8e3b49e7cb4224cd320dff91639", "filename": "gcc/trans-mem.c", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6baa162d29845341b74e61c36a61614a36b204/gcc%2Ftrans-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6baa162d29845341b74e61c36a61614a36b204/gcc%2Ftrans-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.c?ref=cd6baa162d29845341b74e61c36a61614a36b204", "patch": "@@ -659,13 +659,27 @@ diagnose_tm_1 (gimple_stmt_iterator *gsi, bool *handled_ops_p,\n \t\tif (TREE_CODE (fn) == ADDR_EXPR)\n \t\t  fn = TREE_OPERAND (fn, 0);\n \t\tif (d->block_flags & DIAG_TM_SAFE)\n-\t\t  error_at (gimple_location (stmt),\n-\t\t\t    \"unsafe function call %qD within \"\n-\t\t\t    \"atomic transaction\", fn);\n+\t\t  {\n+\t\t    if (direct_call_p)\n+\t\t      error_at (gimple_location (stmt),\n+\t\t\t\t\"unsafe function call %qD within \"\n+\t\t\t\t\"atomic transaction\", fn);\n+\t\t    else\n+\t\t      error_at (gimple_location (stmt),\n+\t\t\t\t\"unsafe function call %qE within \"\n+\t\t\t\t\"atomic transaction\", fn);\n+\t\t  }\n \t\telse\n-\t\t  error_at (gimple_location (stmt),\n-\t\t\t    \"unsafe function call %qD within \"\n-\t\t\t    \"%<transaction_safe%> function\", fn);\n+\t\t  {\n+\t\t    if (direct_call_p)\n+\t\t      error_at (gimple_location (stmt),\n+\t\t\t\t\"unsafe function call %qD within \"\n+\t\t\t\t\"%<transaction_safe%> function\", fn);\n+\t\t    else\n+\t\t      error_at (gimple_location (stmt),\n+\t\t\t\t\"unsafe function call %qE within \"\n+\t\t\t\t\"%<transaction_safe%> function\", fn);\n+\t\t  }\n \t      }\n \t  }\n       }"}]}