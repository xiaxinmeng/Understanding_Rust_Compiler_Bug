{"sha": "6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmViMjA4YTY5Y2QwYjdkOTNjM2YyMmY0Mjk4MDYyY2NkYzJmN2M4Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-09-18T21:22:10Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-09-18T21:22:10Z"}, "message": "call.c (compare_ics): Do lvalue/rvalue reference binding comparison for ck_list, too.\n\n\t* call.c (compare_ics): Do lvalue/rvalue reference binding\n\tcomparison for ck_list, too.\n\nFrom-SVN: r164401", "tree": {"sha": "ee2d660a38aa69b21010ac19f588c48841332b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee2d660a38aa69b21010ac19f588c48841332b8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a78fd06c54495e0f8dc5c5941c9313fa5046f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a78fd06c54495e0f8dc5c5941c9313fa5046f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a78fd06c54495e0f8dc5c5941c9313fa5046f54"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "cedf5312014fab7b3c2d4975ebc489cee2506825", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83", "patch": "@@ -1,3 +1,8 @@\n+2010-09-18  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (compare_ics): Do lvalue/rvalue reference binding\n+\tcomparison for ck_list, too.\n+\n 2010-09-15  Jason Merrill  <jason@redhat.com>\n \n \t* semantics.c (finish_id_expression): Diagnose use of function"}, {"sha": "89ab75723f49a477dd5d8a1f6b97857268ba20d4", "filename": "gcc/cp/call.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83", "patch": "@@ -6859,9 +6859,8 @@ compare_ics (conversion *ics1, conversion *ics2)\n       /* We couldn't make up our minds; try to figure it out below.  */\n     }\n \n-  if (ics1->ellipsis_p || ics1->kind == ck_list)\n-    /* Both conversions are ellipsis conversions or both are building a\n-       std::initializer_list.  */\n+  if (ics1->ellipsis_p)\n+    /* Both conversions are ellipsis conversions.  */\n     return 0;\n \n   /* User-defined  conversion sequence U1 is a better conversion sequence\n@@ -6870,16 +6869,24 @@ compare_ics (conversion *ics1, conversion *ics2)\n      ond standard conversion sequence of U1 is  better  than  the  second\n      standard conversion sequence of U2.  */\n \n-  if (ics1->user_conv_p)\n+  /* Handle list-conversion with the same code even though it isn't always\n+     ranked as a user-defined conversion and it doesn't have a second\n+     standard conversion sequence; it will still have the desired effect.\n+     Specifically, we need to do the reference binding comparison at the\n+     end of this function.  */\n+\n+  if (ics1->user_conv_p || ics1->kind == ck_list)\n     {\n       conversion *t1;\n       conversion *t2;\n \n       for (t1 = ics1; t1->kind != ck_user; t1 = t1->u.next)\n-\tif (t1->kind == ck_ambig || t1->kind == ck_aggr)\n+\tif (t1->kind == ck_ambig || t1->kind == ck_aggr\n+\t    || t1->kind == ck_list)\n \t  break;\n       for (t2 = ics2; t2->kind != ck_user; t2 = t2->u.next)\n-\tif (t2->kind == ck_ambig || t2->kind == ck_aggr)\n+\tif (t2->kind == ck_ambig || t2->kind == ck_aggr\n+\t    || t2->kind == ck_list)\n \t  break;\n \n       if (t1->kind != t2->kind)"}, {"sha": "56d0fbd50061d9a8e2841d9d0676e4ffbf4be230", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83", "patch": "@@ -1,3 +1,7 @@\n+2010-09-18  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/initlist44.C: New.\n+\n 2010-09-18  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45709"}, {"sha": "fbe0ea3fefe044e5ac534072b3f5d6870b93b87b", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist44.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist44.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist44.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist44.C?ref=6eb208a69cd0b7d93c3f22f4298062ccdc2f7c83", "patch": "@@ -0,0 +1,5 @@\n+// { dg-options -std=c++0x }\n+\n+#include <initializer_list>\n+\n+auto value = std::initializer_list<int>{ 1, 2, 3 };"}]}