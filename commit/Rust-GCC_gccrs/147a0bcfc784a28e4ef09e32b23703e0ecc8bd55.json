{"sha": "147a0bcfc784a28e4ef09e32b23703e0ecc8bd55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ3YTBiY2ZjNzg0YTI4ZTRlZjA5ZTMyYjIzNzAzZTBlY2M4YmQ1NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-01-25T16:22:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-01-25T16:22:34Z"}, "message": "re PR target/45701 (Fail to prefer using r3 for padding a push/pop multiple to 8-byte alignment)\n\n\tPR target/45701\n\t* config/arm/arm.c (any_sibcall_uses_r3): New function.\n\t(arm_get_frame_offsets): Use it.\n\n2011-01-25  Yao Qi  <yao@codesourcery.com>\n\n        PR target/45701\n        * gcc.target/arm/pr45701-1.c: New test.\n        * gcc.target/arm/pr45701-2.c: New test.\n\t* gcc.target/arm/pr45701-3.c: New test.\n\nFrom-SVN: r169240", "tree": {"sha": "6a328ab7d4f4bb2cbfff4134c3f6a1f217336905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a328ab7d4f4bb2cbfff4134c3f6a1f217336905"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/comments", "author": null, "committer": null, "parents": [{"sha": "e3bb089d5f7f4d615c3cf71acacbb89a89287a8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3bb089d5f7f4d615c3cf71acacbb89a89287a8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3bb089d5f7f4d615c3cf71acacbb89a89287a8e"}], "stats": {"total": 119, "additions": 117, "deletions": 2}, "files": [{"sha": "9b9700ef27bae5d7f4ff35ade4eb395231ab2541", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=147a0bcfc784a28e4ef09e32b23703e0ecc8bd55", "patch": "@@ -1,3 +1,9 @@\n+2011-01-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/45701\n+\t* config/arm/arm.c (any_sibcall_uses_r3): New function.\n+\t(arm_get_frame_offsets): Use it.\n+\n 2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "be09282c17d5e6d12ae93b4e7d4a4cc22c93dc8b", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=147a0bcfc784a28e4ef09e32b23703e0ecc8bd55", "patch": "@@ -1,6 +1,6 @@\n /* Output routines for GCC for ARM.\n    Copyright (C) 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,\n-   2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n    and Martin Simmons (@harleqn.co.uk).\n@@ -15188,6 +15188,31 @@ thumb_force_lr_save (void)\n }\n \n \n+/* Return true if r3 is used by any of the tail call insns in the\n+   current function.  */\n+\n+static bool\n+any_sibcall_uses_r3 (void)\n+{\n+  edge_iterator ei;\n+  edge e;\n+\n+  if (!crtl->tail_call_emit)\n+    return false;\n+  FOR_EACH_EDGE (e, ei, EXIT_BLOCK_PTR->preds)\n+    if (e->flags & EDGE_SIBCALL)\n+      {\n+\trtx call = BB_END (e->src);\n+\tif (!CALL_P (call))\n+\t  call = prev_nonnote_nondebug_insn (call);\n+\tgcc_assert (CALL_P (call) && SIBLING_CALL_P (call));\n+\tif (find_regno_fusage (call, USE, 3))\n+\t  return true;\n+      }\n+  return false;\n+}\n+\n+\n /* Compute the distance from register FROM to register TO.\n    These can be the arg pointer (26), the soft frame pointer (25),\n    the stack pointer (13) or the hard frame pointer (11).\n@@ -15352,7 +15377,7 @@ arm_get_frame_offsets (void)\n \t  /* If it is safe to use r3, then do so.  This sometimes \n \t     generates better code on Thumb-2 by avoiding the need to\n \t     use 32-bit push/pop instructions.  */\n-\t  if (!crtl->tail_call_emit\n+ \t  if (! any_sibcall_uses_r3 ()\n \t      && arm_size_return_regs () <= 12\n \t      && (offsets->saved_regs_mask & (1 << 3)) == 0)\n \t    {"}, {"sha": "904695998877ce65eeb232f9ec8b2edad0da87fc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=147a0bcfc784a28e4ef09e32b23703e0ecc8bd55", "patch": "@@ -1,3 +1,10 @@\n+2011-01-25  Yao Qi  <yao@codesourcery.com>\n+\n+        PR target/45701\n+        * gcc.target/arm/pr45701-1.c: New test.\n+        * gcc.target/arm/pr45701-2.c: New test.\n+\t* gcc.target/arm/pr45701-3.c: New test.\n+\n 2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "f94f5784b3e2dca8380ffb3f554a662a7cc55aac", "filename": "gcc/testsuite/gcc.target/arm/pr45701-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr45701-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr45701-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr45701-1.c?ref=147a0bcfc784a28e4ef09e32b23703e0ecc8bd55", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv7-a -mthumb -Os\" }  */\n+/* { dg-final { scan-assembler \"push\\t\\{r3\" } } */\n+/* { dg-final { scan-assembler-not \"r8\" } } */\n+\n+extern int hist_verify;\n+extern char *pre_process_line (char*);\n+extern char* str_cpy (char*, char*);\n+extern int str_len (char*);\n+extern char* x_malloc (int);\n+#define savestring(x) (char *)str_cpy (x_malloc (1 + str_len (x)), (x))\n+\n+char *\n+history_expand_line_internal (char* line)\n+{\n+  char *new_line;\n+  int old_verify;\n+\n+  old_verify = hist_verify;\n+  hist_verify = 0;\n+  new_line = pre_process_line (line);\n+  hist_verify = old_verify;\n+  return (new_line == line) ? savestring (line) : new_line;\n+}"}, {"sha": "68d51781a944c290a7f2de040f36d95b38109c08", "filename": "gcc/testsuite/gcc.target/arm/pr45701-2.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr45701-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr45701-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr45701-2.c?ref=147a0bcfc784a28e4ef09e32b23703e0ecc8bd55", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv7-a -mthumb -Os\" }  */\n+/* { dg-final { scan-assembler \"push\\t\\{r3\" } } */\n+/* { dg-final { scan-assembler-not \"r8\" } } */\n+\n+extern int hist_verify;\n+extern char *pre_process_line (char*);\n+extern char* savestring1 (char*, char*);\n+extern char* str_cpy (char*, char*);\n+extern int str_len (char*);\n+extern char* x_malloc (int);\n+#define savestring(x) (char *)str_cpy (x_malloc (1 + str_len (x)), (x))\n+\n+char *\n+history_expand_line_internal (char* line)\n+{\n+  char *new_line;\n+  int old_verify;\n+\n+  old_verify = hist_verify;\n+  hist_verify = 0;\n+  new_line = pre_process_line (line);\n+  hist_verify = old_verify;\n+  /* Two tail calls here, but r3 is not used to pass values.  */\n+  return (new_line == line) ? savestring (line) : savestring1 (new_line, line);\n+}"}, {"sha": "8255bae1143b2d6fdcd62c7e1277e0b97c49f0c2", "filename": "gcc/testsuite/gcc.target/arm/pr45701-3.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr45701-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/147a0bcfc784a28e4ef09e32b23703e0ecc8bd55/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr45701-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr45701-3.c?ref=147a0bcfc784a28e4ef09e32b23703e0ecc8bd55", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv7-a -mthumb -Os\" }  */\n+/* { dg-final { scan-assembler \"push\\t.*r8\" } } */\n+/* { dg-final { scan-assembler-not \"push\\t*r3\" } } */\n+\n+extern int hist_verify;\n+extern char *pre_process_line (char*);\n+extern char* savestring1 (char*, char*, int, int);\n+extern char* str_cpy (char*, char*);\n+extern int str_len (char*);\n+extern char* x_malloc (int);\n+#define savestring(x) (char *)str_cpy (x_malloc (1 + str_len (x)), (x))\n+\n+char *\n+history_expand_line_internal (char* line)\n+{\n+  char *new_line;\n+  int old_verify;\n+\n+  old_verify = hist_verify;\n+  hist_verify = 0;\n+  new_line = pre_process_line (line);\n+  hist_verify = old_verify;\n+  /* Two tail calls here, but r3 is used to pass values.  */\n+  return (new_line == line) ? savestring (line) : \n+    savestring1 (new_line, line, 0, old_verify+1);\n+}"}]}