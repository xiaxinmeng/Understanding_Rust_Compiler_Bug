{"sha": "afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZiY2RmNWVhYWEyZjZhYjgyMGFkNTc1ODg0ZTJkOWI1MTUxMTBhZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-07T10:59:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-07T10:59:32Z"}, "message": "[multiple changes]\n\n2010-10-07  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_disp.adb, exp_dist.adb, exp_util.ads, exp_util.adb,\n\texp_ch11.adb: Rename Full_Qualified_Name to Fully_Qualified_Name_String\n\t* sem_util.adb, sem_util.ads (Full_Qualified_Name): Moved to\n\tExp_Util.Fully_Qualified_Name_String.\n\n2010-10-07  Robert Dewar  <dewar@adacore.com>\n\n\t* rtsfind.ads: Add entry for Ada.Real_Time.Timing_Events.Set_Handler\n\t* sem_res.adb (Resolve_Call): A call to\n\tAda.Real_Time.Timing_Events.Set_Handler violates restriction\n\tNo_Relative_Delay (AI-0211).\n\n2010-10-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch10.adb: Small change in error message.\n\nFrom-SVN: r165092", "tree": {"sha": "43fa49c2e06a2f4c4e26aa6306e98ea511c873bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43fa49c2e06a2f4c4e26aa6306e98ea511c873bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/comments", "author": null, "committer": null, "parents": [{"sha": "dc017afa899182a43db9dc5f7b050815846ce98f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc017afa899182a43db9dc5f7b050815846ce98f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc017afa899182a43db9dc5f7b050815846ce98f"}], "stats": {"total": 179, "additions": 98, "deletions": 81}, "files": [{"sha": "a46fb545bb63708af8bfb5860177e657812afeb7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "patch": "@@ -1,3 +1,21 @@\n+2010-10-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_disp.adb, exp_dist.adb, exp_util.ads, exp_util.adb,\n+\texp_ch11.adb: Rename Full_Qualified_Name to Fully_Qualified_Name_String\n+\t* sem_util.adb, sem_util.ads (Full_Qualified_Name): Moved to\n+\tExp_Util.Fully_Qualified_Name_String.\n+\n+2010-10-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* rtsfind.ads: Add entry for Ada.Real_Time.Timing_Events.Set_Handler\n+\t* sem_res.adb (Resolve_Call): A call to\n+\tAda.Real_Time.Timing_Events.Set_Handler violates restriction\n+\tNo_Relative_Delay (AI-0211).\n+\n+2010-10-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb: Small change in error message.\n+\n 2010-10-07  Robert Dewar  <dewar@adacore.com>\n \n \t* tbuild.ads: Minor reformatting."}, {"sha": "80d1d8d69986c52352b41d9cc0e1b1996839b27b", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "patch": "@@ -1265,7 +1265,7 @@ package body Exp_Ch11 is\n           Object_Definition   => New_Occurrence_Of (Standard_String, Loc),\n           Expression          =>\n             Make_String_Literal (Loc,\n-              Strval => Full_Qualified_Name (Id))));\n+              Strval => Fully_Qualified_Name_String (Id))));\n \n       Set_Is_Statically_Allocated (Exname);\n "}, {"sha": "c38bbe8bf5dab879ecbc2ddba94bc04eafd41949", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "patch": "@@ -4483,8 +4483,7 @@ package body Exp_Disp is\n          end loop;\n       end if;\n \n-      --  Get the _tag entity and the number of primitives of its dispatch\n-      --  table.\n+      --  Get the _tag entity and number of primitives of its dispatch table\n \n       DT_Ptr  := Node (First_Elmt (Access_Disp_Table (Typ)));\n       Nb_Prim := UI_To_Int (DT_Entry_Count (First_Tag_Component (Typ)));\n@@ -4654,7 +4653,7 @@ package body Exp_Disp is\n           Object_Definition   => New_Reference_To (Standard_String, Loc),\n           Expression =>\n             Make_String_Literal (Loc,\n-              Full_Qualified_Name (First_Subtype (Typ)))));\n+              Fully_Qualified_Name_String (First_Subtype (Typ)))));\n \n       Set_Is_Statically_Allocated (Exname);\n       Set_Is_True_Constant (Exname);\n@@ -4768,7 +4767,7 @@ package body Exp_Disp is\n                               New_External_Name (Tname, 'A'));\n \n             Full_Name   : constant String_Id :=\n-                            Full_Qualified_Name (First_Subtype (Typ));\n+                            Fully_Qualified_Name_String (First_Subtype (Typ));\n             Str1_Id     : String_Id;\n             Str2_Id     : String_Id;\n "}, {"sha": "06f32d9e7e587062d838ec8e69231a1cc4bec1b7", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "patch": "@@ -5541,7 +5541,7 @@ package body Exp_Dist is\n                --  Name\n \n                 Make_String_Literal (Loc,\n-                  Full_Qualified_Name (Desig)),\n+                  Fully_Qualified_Name_String (Desig)),\n \n                --  Handler\n \n@@ -5887,7 +5887,7 @@ package body Exp_Dist is\n                    Unchecked_Convert_To (RTE (RE_Address),\n                      New_Occurrence_Of (RACW_Parameter, Loc)),\n                    Make_String_Literal (Loc,\n-                     Strval => Full_Qualified_Name\n+                     Strval => Fully_Qualified_Name_String\n                                  (Etype (Designated_Type (RACW_Type)))),\n                    Build_Stub_Tag (Loc, RACW_Type),\n                    New_Occurrence_Of (Boolean_Literals (Is_RAS), Loc),\n@@ -6083,7 +6083,7 @@ package body Exp_Dist is\n                  Parameter_Associations => New_List (\n                    Unchecked_Convert_To (RTE (RE_Address), Object),\n                   Make_String_Literal (Loc,\n-                    Strval => Full_Qualified_Name\n+                    Strval => Fully_Qualified_Name_String\n                                 (Etype (Designated_Type (RACW_Type)))),\n                   Build_Stub_Tag (Loc, RACW_Type),\n                   New_Occurrence_Of (Boolean_Literals (Is_RAS), Loc),"}, {"sha": "ae8a8e6e13b0b6b799167df14f8a108db37beaa1", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "patch": "@@ -24,6 +24,7 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n+with Casing;   use Casing;\n with Checks;   use Checks;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n@@ -1753,6 +1754,62 @@ package body Exp_Util is\n       Remove_Side_Effects (Exp, Name_Req, Variable_Ref => True);\n    end Force_Evaluation;\n \n+   ---------------------------------\n+   -- Fully_Qualified_Name_String --\n+   ---------------------------------\n+\n+   function Fully_Qualified_Name_String (E : Entity_Id) return String_Id is\n+      procedure Internal_Full_Qualified_Name (E : Entity_Id);\n+      --  Compute recursively the qualified name without NUL at the end, adding\n+      --  it to the currently started string being generated\n+\n+      ----------------------------------\n+      -- Internal_Full_Qualified_Name --\n+      ----------------------------------\n+\n+      procedure Internal_Full_Qualified_Name (E : Entity_Id) is\n+         Ent : Entity_Id;\n+\n+      begin\n+         --  Deal properly with child units\n+\n+         if Nkind (E) = N_Defining_Program_Unit_Name then\n+            Ent := Defining_Identifier (E);\n+         else\n+            Ent := E;\n+         end if;\n+\n+         --  Compute qualification recursively (only \"Standard\" has no scope)\n+\n+         if Present (Scope (Scope (Ent))) then\n+            Internal_Full_Qualified_Name (Scope (Ent));\n+            Store_String_Char (Get_Char_Code ('.'));\n+         end if;\n+\n+         --  Every entity should have a name except some expanded blocks\n+         --  don't bother about those.\n+\n+         if Chars (Ent) = No_Name then\n+            return;\n+         end if;\n+\n+         --  Generates the entity name in upper case\n+\n+         Get_Decoded_Name_String (Chars (Ent));\n+         Set_All_Upper_Case;\n+         Store_String_Chars (Name_Buffer (1 .. Name_Len));\n+         return;\n+      end Internal_Full_Qualified_Name;\n+\n+   --  Start of processing for Full_Qualified_Name\n+\n+   begin\n+      Start_String;\n+      Internal_Full_Qualified_Name (E);\n+      Store_String_Char (Get_Char_Code (ASCII.NUL));\n+      return End_String;\n+   end Fully_Qualified_Name_String;\n+\n    ------------------------\n    -- Generate_Poll_Call --\n    ------------------------"}, {"sha": "520e0da0c81d1f0c3b44edfdc31bb73b3f932d0f", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "patch": "@@ -403,6 +403,10 @@ package Exp_Util is\n    --  Force_Evaluation further guarantees that all evaluations will yield\n    --  the same result.\n \n+   function Fully_Qualified_Name_String (E : Entity_Id) return String_Id;\n+   --  Generates the string literal corresponding to the fully qualified name\n+   --  of entity E with an ASCII.NUL appended at the end of the name.\n+\n    procedure Generate_Poll_Call (N : Node_Id);\n    --  If polling is active, then a call to the Poll routine is built,\n    --  and then inserted before the given node N and analyzed."}, {"sha": "177f1feb5a2a605822eeb8b2afe42ecf9bee3322", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "patch": "@@ -536,7 +536,8 @@ package Rtsfind is\n      RO_RT_Delay_Until,                  -- Ada.Real_Time.Delays\n      RO_RT_To_Duration,                  -- Ada.Real_Time.Delays\n \n-     RE_Timing_Event,                    -- Ada_Real_Time_Timing_Events\n+     RE_Set_Handler,                     -- Ada_Real_Time.Timing_Events\n+     RE_Timing_Event,                    -- Ada_Real_Time.Timing_Events\n \n      RE_Root_Stream_Type,                -- Ada.Streams\n      RE_Stream_Element,                  -- Ada.Streams\n@@ -1707,6 +1708,7 @@ package Rtsfind is\n      RO_RT_Delay_Until                   => Ada_Real_Time_Delays,\n      RO_RT_To_Duration                   => Ada_Real_Time_Delays,\n \n+     RE_Set_Handler                      => Ada_Real_Time_Timing_Events,\n      RE_Timing_Event                     => Ada_Real_Time_Timing_Events,\n \n      RE_Root_Stream_Type                 => Ada_Streams,"}, {"sha": "50bbcc591700fca0de9d5c2857f3eb3127e699ce", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "patch": "@@ -1419,8 +1419,8 @@ package body Sem_Ch10 is\n                      P := Parent_Spec (Unit (N));\n                      loop\n                         if Unit (P) = Lib_U then\n-                           Error_Msg_N (\"limited with_clause of immediate \"\n-                                        & \"ancestor not allowed\", Item);\n+                           Error_Msg_N (\"limited with_clause cannot \"\n+                                        & \"name ancestor\", Item);\n                            exit;\n                         end if;\n "}, {"sha": "9dafd6429d313dc8b9f7dcaa8b554a8a510f6f95", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "patch": "@@ -5554,6 +5554,13 @@ package body Sem_Res is\n          Check_Potentially_Blocking_Operation (N);\n       end if;\n \n+      --  A call to Ada.Real_Time.Timing_Events.Set_Handler violates\n+      --  restriction No_Relative_Delay (AI-0211).\n+\n+      if Is_RTE (Nam, RE_Set_Handler) then\n+         Check_Restriction (No_Relative_Delay, N);\n+      end if;\n+\n       --  Issue an error for a call to an eliminated subprogram. We skip this\n       --  in a spec expression, e.g. a call in a default parameter value, since\n       --  we are not really doing a call at this time. That's important because"}, {"sha": "917104c1f6ce15260cad19a63f893f67b35394a8", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "patch": "@@ -3468,71 +3468,6 @@ package body Sem_Util is\n       end if;\n    end First_Actual;\n \n-   -------------------------\n-   -- Full_Qualified_Name --\n-   -------------------------\n-\n-   function Full_Qualified_Name (E : Entity_Id) return String_Id is\n-      Res : String_Id;\n-      pragma Warnings (Off, Res);\n-\n-      function Internal_Full_Qualified_Name (E : Entity_Id) return String_Id;\n-      --  Compute recursively the qualified name without NUL at the end\n-\n-      ----------------------------------\n-      -- Internal_Full_Qualified_Name --\n-      ----------------------------------\n-\n-      function Internal_Full_Qualified_Name (E : Entity_Id) return String_Id is\n-         Ent         : Entity_Id := E;\n-         Parent_Name : String_Id := No_String;\n-\n-      begin\n-         --  Deals properly with child units\n-\n-         if Nkind (Ent) = N_Defining_Program_Unit_Name then\n-            Ent := Defining_Identifier (Ent);\n-         end if;\n-\n-         --  Compute qualification recursively (only \"Standard\" has no scope)\n-\n-         if Present (Scope (Scope (Ent))) then\n-            Parent_Name := Internal_Full_Qualified_Name (Scope (Ent));\n-         end if;\n-\n-         --  Every entity should have a name except some expanded blocks\n-         --  don't bother about those.\n-\n-         if Chars (Ent) = No_Name then\n-            return Parent_Name;\n-         end if;\n-\n-         --  Add a period between Name and qualification\n-\n-         if Parent_Name /= No_String then\n-            Start_String (Parent_Name);\n-            Store_String_Char (Get_Char_Code ('.'));\n-\n-         else\n-            Start_String;\n-         end if;\n-\n-         --  Generates the entity name in upper case\n-\n-         Get_Decoded_Name_String (Chars (Ent));\n-         Set_All_Upper_Case;\n-         Store_String_Chars (Name_Buffer (1 .. Name_Len));\n-         return End_String;\n-      end Internal_Full_Qualified_Name;\n-\n-   --  Start of processing for Full_Qualified_Name\n-\n-   begin\n-      Res := Internal_Full_Qualified_Name (E);\n-      Store_String_Char (Get_Char_Code (ASCII.NUL));\n-      return End_String;\n-   end Full_Qualified_Name;\n-\n    -----------------------\n    -- Gather_Components --\n    -----------------------"}, {"sha": "439748b4ec6c9744c0927f6a864bc3da0886fb95", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbcdf5eaaa2f6ab820ad575884e2d9b515110ad/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=afbcdf5eaaa2f6ab820ad575884e2d9b515110ad", "patch": "@@ -379,11 +379,6 @@ package Sem_Util is\n    --  is always the expression (not the N_Parameter_Association nodes,\n    --  even if named association is used).\n \n-   function Full_Qualified_Name (E : Entity_Id) return String_Id;\n-   --  Generates the string literal corresponding to the E's full qualified\n-   --  name in upper case. An ASCII.NUL is appended as the last character.\n-   --  The names in the string are generated by Namet.Get_Decoded_Name_String.\n-\n    procedure Gather_Components\n      (Typ           : Entity_Id;\n       Comp_List     : Node_Id;"}]}