{"sha": "1194911fff810ed28b05c9077371585f3e416645", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE5NDkxMWZmZjgxMGVkMjhiMDVjOTA3NzM3MTU4NWYzZTQxNjY0NQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2005-03-31T18:36:30Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2005-03-31T18:36:30Z"}, "message": "profopt.exp: Treat prof_ext as a list.\n\n\t* lib/profopt.exp: Treat prof_ext as a list.\n\t* gcc.misc-tests/bprob.exp: Ditto.\n\t* g++.dg/bprob/bprob.exp: Ditto.\n\nFrom-SVN: r97343", "tree": {"sha": "7bcd664bdc70831e7da8746fdaa745ef7550f552", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bcd664bdc70831e7da8746fdaa745ef7550f552"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1194911fff810ed28b05c9077371585f3e416645", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1194911fff810ed28b05c9077371585f3e416645", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1194911fff810ed28b05c9077371585f3e416645", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1194911fff810ed28b05c9077371585f3e416645/comments", "author": null, "committer": null, "parents": [{"sha": "6491eb15e1824b543f60a7ba391f9ac497accbce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6491eb15e1824b543f60a7ba391f9ac497accbce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6491eb15e1824b543f60a7ba391f9ac497accbce"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "6c6043e7a0b5def39f50c46af69fa2929c8882ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1194911fff810ed28b05c9077371585f3e416645/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1194911fff810ed28b05c9077371585f3e416645/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1194911fff810ed28b05c9077371585f3e416645", "patch": "@@ -1,5 +1,9 @@\n 2005-03-31  Janis Johnson  <janis187@us.ibm.com>\n \n+\t* lib/profopt.exp: Treat prof_ext as a list.\n+\t* gcc.misc-tests/bprob.exp: Ditto.\n+\t* g++.dg/bprob/bprob.exp: Ditto.\n+\n \t* g++.dg/opt/nothrow1.C: Use cleanup-tree-dump.\n \tg++.dg/tree-ssa/empty-1.C, g++.dg/tree-ssa/nothrow-1.C,\n \tg++.dg/tree-ssa/pointer-reference-alias.C,"}, {"sha": "a6557c3d1fe4af2499aa28bddb6fb5e879c21fb1", "filename": "gcc/testsuite/g++.dg/bprob/bprob.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1194911fff810ed28b05c9077371585f3e416645/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fbprob%2Fbprob.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1194911fff810ed28b05c9077371585f3e416645/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fbprob%2Fbprob.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fbprob%2Fbprob.exp?ref=1194911fff810ed28b05c9077371585f3e416645", "patch": "@@ -27,7 +27,7 @@ if { ![check_profiling_available \"-fprofile-arcs\"] } {\n \n # The procedures in profopt.exp need these parameters.\n set tool g++\n-set prof_ext gcda\n+set prof_ext \"gcda gcno\"\n \n if $tracelevel then {\n     strace $tracelevel"}, {"sha": "28cebbded1f6b4f3905dffc19aeaf9db3e8c488f", "filename": "gcc/testsuite/gcc.misc-tests/bprob.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1194911fff810ed28b05c9077371585f3e416645/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1194911fff810ed28b05c9077371585f3e416645/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob.exp?ref=1194911fff810ed28b05c9077371585f3e416645", "patch": "@@ -27,7 +27,7 @@ if { ![check_profiling_available \"-fprofile-arcs\"] } {\n \n # The procedures in profopt.exp need these parameters.\n set tool gcc\n-set prof_ext gcda\n+set prof_ext \"gcda gcno\"\n set perf_ext tim\n \n # Override the list defined in profopt.exp."}, {"sha": "b24dfff74f00d1197aeacec54511f98239477dfa", "filename": "gcc/testsuite/lib/profopt.exp", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1194911fff810ed28b05c9077371585f3e416645/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1194911fff810ed28b05c9077371585f3e416645/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprofopt.exp?ref=1194911fff810ed28b05c9077371585f3e416645", "patch": "@@ -38,7 +38,7 @@ if ![info exists tool] {\n     error \"Tools is not specified.\"\n }\n if ![info exists prof_ext] {\n-    error \"No profile data file extension specified.\"\n+    error \"No profile data file extensions specified.\"\n }\n \n # The maximum perforance degradation can be defined in the including file.\n@@ -66,14 +66,16 @@ set prof_option_list $PROFOPT_OPTIONS\n # profopt-cleanup -- remove profiling or performance results files.\n #\n # TESTCASE is the name of the test\n-# EXT is the extension of file to remove\n+# EXT is the extensions of files to remove\n #\n-proc profopt-cleanup { testcase ext } {\n+proc profopt-cleanup { testcase extlist } {\n     set basename [file tail $testcase]\n     set base [file rootname $basename]\n-    set files [glob -nocomplain $base.$ext]\n-    if { $files != \"\" } {\n-\teval \"remote_file build delete $files\"\n+    foreach ext $extlist {\n+\tset files [glob -nocomplain $base.$ext]\n+\tif { $files != \"\" } {\n+\t    eval \"remote_file build delete $files\"\n+\t}\n     }\n }\n \n@@ -181,12 +183,14 @@ proc profopt-execute { src } {\n \tif { $status == \"pass\" } {\n \t    set basename [file tail $testcase]\n \t    set base [file rootname $basename]\n-\t    set files [glob -nocomplain $base.$prof_ext]\n-\t    if { $files == \"\" } {\n-\t\tset status \"fail\"\n-\t\tfail \"$testcase execution: file $base.$prof_ext does not exist, $option $profile_option\"\n-\t    } else {\n-\t        $status \"$testcase execution,   $optstr\"\n+\t    foreach ext $prof_ext {\n+\t\tset files [glob -nocomplain $base.$ext]\n+\t\tif { $files == \"\" } {\n+\t\t    set status \"fail\"\n+\t\t    fail \"$testcase execution: file $base.$ext does not exist, $option $profile_option\"\n+\t\t} else {\n+\t            $status \"$testcase execution,   $optstr\"\n+\t\t}\n \t    }\n \t} else {\n \t    $status \"$testcase execution,   $optstr\""}]}