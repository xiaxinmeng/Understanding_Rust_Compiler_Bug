{"sha": "f24b26edd3e791a71a81f5acaf0c10cb3685072e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI0YjI2ZWRkM2U3OTFhNzFhODFmNWFjYWYwYzEwY2IzNjg1MDcyZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-08-21T02:07:01Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-21T02:07:01Z"}, "message": "h8300.c (h8300_encode_label): Use '&' for tiny data items.\n\n        * h8300.c (h8300_encode_label): Use '&' for tiny data items.\n        * h8300.h (TINY_DATA_NAME_P): Likewise.\n        (STRIP_NAME_ENCODING): Handle '&'.\n\nFrom-SVN: r21892", "tree": {"sha": "1d72c6b622d795c182faf67ea4f27ef578a7f419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d72c6b622d795c182faf67ea4f27ef578a7f419"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f24b26edd3e791a71a81f5acaf0c10cb3685072e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f24b26edd3e791a71a81f5acaf0c10cb3685072e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f24b26edd3e791a71a81f5acaf0c10cb3685072e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f24b26edd3e791a71a81f5acaf0c10cb3685072e/comments", "author": null, "committer": null, "parents": [{"sha": "1df7c0ee2582f357f2b7b4a3436b04820d875f62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1df7c0ee2582f357f2b7b4a3436b04820d875f62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1df7c0ee2582f357f2b7b4a3436b04820d875f62"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "ed6d2dc9d3318178a55679be0ea14bbb4a5e98bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f24b26edd3e791a71a81f5acaf0c10cb3685072e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f24b26edd3e791a71a81f5acaf0c10cb3685072e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f24b26edd3e791a71a81f5acaf0c10cb3685072e", "patch": "@@ -1,5 +1,9 @@\n Thu Aug 20 19:43:44 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* h8300.c (h8300_encode_label): Use '&' for tiny data items.\n+\t* h8300.h (TINY_DATA_NAME_P): Likewise.\n+\t(STRIP_NAME_ENCODING): Handle '&'.\n+\n \t* mn10200.h (REG_OK_FOR_INDEX_P): Do not check the mode of the\n \tregister (it could be accessed via an outer SUBREG).\n \t(REG_OK_FOR_BASE_P): Likewwise."}, {"sha": "3f66b0630b5f48afeb30476ac74de4e046b4b7c6", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f24b26edd3e791a71a81f5acaf0c10cb3685072e/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f24b26edd3e791a71a81f5acaf0c10cb3685072e/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=f24b26edd3e791a71a81f5acaf0c10cb3685072e", "patch": "@@ -2996,7 +2996,7 @@ h8300_encode_label (decl)\n   newstr = obstack_alloc (saveable_obstack, len + 2);\n \n   strcpy (newstr + 1, str);\n-  *newstr = '*';\n+  *newstr = '&';\n   XSTR (XEXP (DECL_RTL (decl), 0), 0) = newstr;\n }\n "}, {"sha": "3d2d1e3a1f47a02823b7527cf94dfaffb2bc0f38", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f24b26edd3e791a71a81f5acaf0c10cb3685072e/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f24b26edd3e791a71a81f5acaf0c10cb3685072e/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=f24b26edd3e791a71a81f5acaf0c10cb3685072e", "patch": "@@ -1117,7 +1117,7 @@ readonly_data() \t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\\\n }\t\t\t\t\t\t \n \n-#define TINY_DATA_NAME_P(NAME) (*(NAME) == '*')\n+#define TINY_DATA_NAME_P(NAME) (*(NAME) == '&')\n \n /* If we are referencing a function that is supposed to be called\n    through the function vector, the SYMBOL_REF_FLAG in the rtl\n@@ -1138,7 +1138,7 @@ readonly_data() \t\t\t\t\t\t\\\n /* Store the user-specified part of SYMBOL_NAME in VAR.\n    This is sort of inverse to ENCODE_SECTION_INFO.  */\n #define STRIP_NAME_ENCODING(VAR,SYMBOL_NAME) \\\n-  (VAR) = (SYMBOL_NAME) + ((SYMBOL_NAME)[0] == '*' || (SYMBOL_NAME)[0] == '@');\n+  (VAR) = (SYMBOL_NAME) + ((SYMBOL_NAME)[0] == '*' || (SYMBOL_NAME)[0] == '@' || SYMBOL_NAME[0] == '&') \n \n /* How to refer to registers in assembler output.\n    This sequence is indexed by compiler's hard-register-number (see above).  */"}]}