{"sha": "a7a0564039252a5624ff3696f57c8e377a676c55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdhMDU2NDAzOTI1MmE1NjI0ZmYzNjk2ZjU3YzhlMzc3YTY3NmM1NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-03-08T22:49:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-03-08T22:49:48Z"}, "message": "(force_fit_type): Always propagate OVERFLOW.\n\nFrom-SVN: r9138", "tree": {"sha": "0805532a084445373d1ca060fdf47bae66c4af97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0805532a084445373d1ca060fdf47bae66c4af97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7a0564039252a5624ff3696f57c8e377a676c55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a0564039252a5624ff3696f57c8e377a676c55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7a0564039252a5624ff3696f57c8e377a676c55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a0564039252a5624ff3696f57c8e377a676c55/comments", "author": null, "committer": null, "parents": [{"sha": "a6108925a2c0e9742dec155d7ebbdbfb1820173b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6108925a2c0e9742dec155d7ebbdbfb1820173b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6108925a2c0e9742dec155d7ebbdbfb1820173b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f8e51ec0a8ff1573d14084fe55a53c2548ff62b0", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a0564039252a5624ff3696f57c8e377a676c55/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a0564039252a5624ff3696f57c8e377a676c55/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=a7a0564039252a5624ff3696f57c8e377a676c55", "patch": "@@ -187,7 +187,7 @@ force_fit_type (t, overflow)\n \n   /* Unsigned types do not suffer sign extension or overflow.  */\n   if (TREE_UNSIGNED (TREE_TYPE (t)))\n-    return 0;\n+    return overflow;\n \n   /* If the value's sign bit is set, extend the sign.  */\n   if (prec != 2 * HOST_BITS_PER_WIDE_INT"}]}