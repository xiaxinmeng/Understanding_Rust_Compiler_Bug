{"sha": "1313d87fd3b9ee56853aa911dee90e4882191de8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMxM2Q4N2ZkM2I5ZWU1Njg1M2FhOTExZGVlOTBlNDg4MjE5MWRlOA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-12-15T19:48:50Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-12-15T19:48:50Z"}, "message": "basic_string.h: Change _*_references to _*_refcount.\n\n\n2003-12-15  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/basic_string.h: Change _*_references to _*_refcount.\n\t* include/bits/locale_classes.h: Same.\n\t* src/locale.cc: Same.\n\t* src/locale_name.cc: Same.\n\t* src/locale_init.cc: Same.\n\nFrom-SVN: r74645", "tree": {"sha": "32ffbe60809154dd55ece6b42565361518fdf193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32ffbe60809154dd55ece6b42565361518fdf193"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1313d87fd3b9ee56853aa911dee90e4882191de8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1313d87fd3b9ee56853aa911dee90e4882191de8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1313d87fd3b9ee56853aa911dee90e4882191de8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1313d87fd3b9ee56853aa911dee90e4882191de8/comments", "author": null, "committer": null, "parents": [{"sha": "61a8f1edff4604fcb4238391de4ca033ab4d9de3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61a8f1edff4604fcb4238391de4ca033ab4d9de3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61a8f1edff4604fcb4238391de4ca033ab4d9de3"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "fc10ab7dc679c45a3f099dc33330d83b4125387e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1313d87fd3b9ee56853aa911dee90e4882191de8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1313d87fd3b9ee56853aa911dee90e4882191de8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1313d87fd3b9ee56853aa911dee90e4882191de8", "patch": "@@ -1,3 +1,11 @@\n+2003-12-15  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/basic_string.h: Change _*_references to _*_refcount.\n+\t* include/bits/locale_classes.h: Same.\n+\t* src/locale.cc: Same.\n+\t* src/locale_name.cc: Same.\t\n+\t* src/locale_init.cc: Same.\t\n+\t\n 2003-12-15  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/12855\t"}, {"sha": "e3d19b295a96d1340ba948c13908c247a103df3c", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1313d87fd3b9ee56853aa911dee90e4882191de8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1313d87fd3b9ee56853aa911dee90e4882191de8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=1313d87fd3b9ee56853aa911dee90e4882191de8", "patch": "@@ -134,7 +134,7 @@ namespace std\n       //      _CharT() where the interface does not require it.\n       //   2. _M_capacity >= _M_length\n       //      Allocated memory is always _M_capacity + (1 * sizeof(_CharT)).\n-      //   3. _M_references has three states:\n+      //   3. _M_refcount has three states:\n       //      -1: leaked, one reference, no ref-copies allowed, non-const.\n       //       0: one reference, non-const.\n       //     n>0: n + 1 references, operations require a lock, const.\n@@ -146,7 +146,7 @@ namespace std\n       {\n \tsize_type \t\t_M_length;\n \tsize_type \t\t_M_capacity;\n-\t_Atomic_word\t\t_M_references;\n+\t_Atomic_word\t\t_M_refcount;\n       };\n \n       struct _Rep : _Rep_base\n@@ -180,19 +180,19 @@ namespace std\n  \n         bool\n \t_M_is_leaked() const\n-        { return this->_M_references < 0; }\n+        { return this->_M_refcount < 0; }\n \n         bool\n \t_M_is_shared() const\n-        { return this->_M_references > 0; }\n+        { return this->_M_refcount > 0; }\n \n         void\n \t_M_set_leaked()\n-        { this->_M_references = -1; }\n+        { this->_M_refcount = -1; }\n \n         void\n \t_M_set_sharable()\n-        { this->_M_references = 0; }\n+        { this->_M_refcount = 0; }\n \n \t_CharT*\n \t_M_refdata() throw()\n@@ -217,7 +217,7 @@ namespace std\n \t_M_dispose(const _Alloc& __a)\n \t{\n \t  if (__builtin_expect(this != &_S_empty_rep(), false))\n-\t    if (__exchange_and_add(&this->_M_references, -1) <= 0)\n+\t    if (__exchange_and_add(&this->_M_refcount, -1) <= 0)\n \t      _M_destroy(__a);\n \t}  // XXX MT\n \n@@ -228,7 +228,7 @@ namespace std\n \t_M_refcopy() throw()\n \t{\n \t  if (__builtin_expect(this != &_S_empty_rep(), false))\n-            __atomic_add(&this->_M_references, 1);\n+            __atomic_add(&this->_M_refcount, 1);\n \t  return _M_refdata();\n \t}  // XXX MT\n "}, {"sha": "5d9722e86637d6c5c45ff7d3a51fc01fa71e8973", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1313d87fd3b9ee56853aa911dee90e4882191de8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1313d87fd3b9ee56853aa911dee90e4882191de8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=1313d87fd3b9ee56853aa911dee90e4882191de8", "patch": "@@ -191,7 +191,7 @@ namespace std\n     friend class locale;\n     friend class locale::_Impl;\n \n-    mutable _Atomic_word\t\t_M_references;\n+    mutable _Atomic_word\t\t_M_refcount;\n \n     // Contains data from the underlying \"C\" library for the classic locale.\n     static __c_locale                   _S_c_locale;\n@@ -208,7 +208,7 @@ namespace std\n \n   protected:\n     explicit \n-    facet(size_t __refs = 0) throw() : _M_references(__refs ? 1 : 0)\n+    facet(size_t __refs = 0) throw() : _M_refcount(__refs ? 1 : 0)\n     { }\n \n     virtual \n@@ -235,12 +235,12 @@ namespace std\n   private:\n     inline void\n     _M_add_reference() const throw()\n-    { __atomic_add(&_M_references, 1); }\n+    { __atomic_add(&_M_refcount, 1); }\n \n     inline void\n     _M_remove_reference() const throw()\n     {\n-      if (__exchange_and_add(&_M_references, -1) == 1)\n+      if (__exchange_and_add(&_M_refcount, -1) == 1)\n \t{\n \t  try \n \t    { delete this; }  \n@@ -277,7 +277,7 @@ namespace std\n     mutable size_t \t\t_M_index;\n \n     // Last id number assigned.\n-    static _Atomic_word \t_S_highwater;   \n+    static _Atomic_word \t_S_refcount;   \n \n     void \n     operator=(const id&);  // Not defined.\n@@ -315,7 +315,7 @@ namespace std\n \n   private:\n     // Data Members.\n-    _Atomic_word\t\t\t_M_references;\n+    _Atomic_word\t\t\t_M_refcount;\n     const facet**\t\t\t_M_facets;\n     size_t \t\t\t\t_M_facets_size;\n     const facet**\t\t\t_M_caches;\n@@ -330,12 +330,12 @@ namespace std\n \n     inline void \n     _M_add_reference() throw()\n-    { __atomic_add(&_M_references, 1); }\n+    { __atomic_add(&_M_refcount, 1); }\n \n     inline void \n     _M_remove_reference() throw()\n     {\n-      if (__exchange_and_add(&_M_references, -1) == 1)\n+      if (__exchange_and_add(&_M_refcount, -1) == 1)\n \t{\n \t  try \n \t    { delete this; } "}, {"sha": "c9562e213a7d4643695d200fe5dfef174d62b071", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1313d87fd3b9ee56853aa911dee90e4882191de8/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1313d87fd3b9ee56853aa911dee90e4882191de8/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=1313d87fd3b9ee56853aa911dee90e4882191de8", "patch": "@@ -211,7 +211,7 @@ namespace std\n   // Clone existing _Impl object.\n   locale::_Impl::\n   _Impl(const _Impl& __imp, size_t __refs)\n-  : _M_references(__refs), _M_facets_size(__imp._M_facets_size)\n+  : _M_refcount(__refs), _M_facets_size(__imp._M_facets_size)\n   {\n     _M_facets = _M_caches = 0;\n     _M_names = 0;\n@@ -350,13 +350,13 @@ namespace std\n \n   // locale::id\n   // Definitions for static const data members of locale::id\n-  _Atomic_word locale::id::_S_highwater;  // init'd to 0 by linker\n+  _Atomic_word locale::id::_S_refcount;  // init'd to 0 by linker\n \n   size_t\n   locale::id::_M_id() const\n   {\n     if (!_M_index)\n-      _M_index = 1 + __exchange_and_add(&_S_highwater, 1);\n+      _M_index = 1 + __exchange_and_add(&_S_refcount, 1);\n     return _M_index - 1;\n   }\n } // namespace std"}, {"sha": "a71bb5d60d81ba47f7e16b6c4ef74ab42a4b7633", "filename": "libstdc++-v3/src/locale_init.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1313d87fd3b9ee56853aa911dee90e4882191de8/libstdc%2B%2B-v3%2Fsrc%2Flocale_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1313d87fd3b9ee56853aa911dee90e4882191de8/libstdc%2B%2B-v3%2Fsrc%2Flocale_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale_init.cc?ref=1313d87fd3b9ee56853aa911dee90e4882191de8", "patch": "@@ -241,7 +241,7 @@ namespace std\n   // Construct \"C\" _Impl.\n   locale::_Impl::\n   _Impl(size_t __refs) throw() \n-  : _M_references(__refs), _M_facets_size(_GLIBCXX_NUM_FACETS)\n+  : _M_refcount(__refs), _M_facets_size(_GLIBCXX_NUM_FACETS)\n   {\n     _M_facets = new (&facet_vec) const facet*[_M_facets_size];\n     _M_caches = new (&cache_vec) const facet*[_M_facets_size];"}, {"sha": "c6a7de92be9a169016015c2ee0a4a9af658566eb", "filename": "libstdc++-v3/src/localename.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1313d87fd3b9ee56853aa911dee90e4882191de8/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1313d87fd3b9ee56853aa911dee90e4882191de8/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc?ref=1313d87fd3b9ee56853aa911dee90e4882191de8", "patch": "@@ -178,7 +178,7 @@ namespace std\n   // Construct named _Impl.\n   locale::_Impl::\n   _Impl(const char* __s, size_t __refs) \n-  : _M_references(__refs), _M_facets_size(_GLIBCXX_NUM_FACETS)\n+  : _M_refcount(__refs), _M_facets_size(_GLIBCXX_NUM_FACETS)\n   {\n     // Initialize the underlying locale model, which also checks to\n     // see if the given name is valid."}]}