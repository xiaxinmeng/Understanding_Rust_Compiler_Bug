{"sha": "566f27e42ca00f65d101e6a7b0096554a0cc452d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY2ZjI3ZTQyY2EwMGY2NWQxMDFlNmE3YjAwOTY1NTRhMGNjNDUyZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-01-05T08:40:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-01-05T08:40:50Z"}, "message": "re PR tree-optimization/42508 (wrong code with \"-O1 -fipa-sra\")\n\n\tPR tree-optimization/42508\n\t* tree-sra.c (convert_callers): Check for recursive call\n\tby comparing cgraph nodes instead of decls.\n\t(modify_function): Call ipa_modify_formal_parameters also\n\ton all same_body aliases.\n\n\t* g++.dg/opt/pr42508.C: New test.\n\n\t* cgraphunit.c (cgraph_materialize_all_clones): Compare\n\tcgraph nodes when checking for same_body aliases.\n\nFrom-SVN: r155640", "tree": {"sha": "53dddb0634d26df31297a6db047145d050b904b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53dddb0634d26df31297a6db047145d050b904b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/566f27e42ca00f65d101e6a7b0096554a0cc452d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566f27e42ca00f65d101e6a7b0096554a0cc452d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/566f27e42ca00f65d101e6a7b0096554a0cc452d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566f27e42ca00f65d101e6a7b0096554a0cc452d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11492349fe6f6a568b3aecdc1a503f80b8848070", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11492349fe6f6a568b3aecdc1a503f80b8848070", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11492349fe6f6a568b3aecdc1a503f80b8848070"}], "stats": {"total": 80, "additions": 63, "deletions": 17}, "files": [{"sha": "b45e59c549793b15e0b2265ece528d338b5e12f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566f27e42ca00f65d101e6a7b0096554a0cc452d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566f27e42ca00f65d101e6a7b0096554a0cc452d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=566f27e42ca00f65d101e6a7b0096554a0cc452d", "patch": "@@ -1,3 +1,14 @@\n+2010-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/42508\n+\t* tree-sra.c (convert_callers): Check for recursive call\n+\tby comparing cgraph nodes instead of decls.\n+\t(modify_function): Call ipa_modify_formal_parameters also\n+\ton all same_body aliases.\n+\n+\t* cgraphunit.c (cgraph_materialize_all_clones): Compare\n+\tcgraph nodes when checking for same_body aliases.\n+\n 2010-01-05  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-pre.c (get_or_alloc_expr_for_name): Avoid redundant"}, {"sha": "ebe662ad63939f191c9fde4f4728fb80d57066d0", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566f27e42ca00f65d101e6a7b0096554a0cc452d/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566f27e42ca00f65d101e6a7b0096554a0cc452d/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=566f27e42ca00f65d101e6a7b0096554a0cc452d", "patch": "@@ -1,5 +1,5 @@\n /* Callgraph based interprocedural optimizations.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Jan Hubicka\n \n@@ -2323,20 +2323,9 @@ cgraph_materialize_all_clones (void)\n \t\tgimple new_stmt;\n \t\tgimple_stmt_iterator gsi;\n \n-\t\tif (e->callee->same_body)\n-\t\t  {\n-\t\t    struct cgraph_node *alias;\n-\n-\t\t    for (alias = e->callee->same_body;\n-\t\t\t alias;\n-\t\t\t alias = alias->next)\n-\t\t      if (decl == alias->decl)\n-\t\t\tbreak;\n-\t\t    /* Don't update call from same body alias to the real\n-\t\t       function.  */\n-\t\t    if (alias)\n-\t\t      continue;\n-\t\t  }\n+\t\tif (cgraph_get_node (decl) == cgraph_get_node (e->callee->decl))\n+\t\t  /* Don't update call from same body alias to the real function.  */\n+\t\t  continue;\n \n \t\tif (cgraph_dump_file)\n \t\t  {"}, {"sha": "89358798c846f124e231a7e7bc5fe0fd9ac461ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566f27e42ca00f65d101e6a7b0096554a0cc452d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566f27e42ca00f65d101e6a7b0096554a0cc452d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=566f27e42ca00f65d101e6a7b0096554a0cc452d", "patch": "@@ -1,3 +1,8 @@\n+2010-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/42508\n+\t* g++.dg/opt/pr42508.C: New test.\n+\n 2010-01-05  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/41872"}, {"sha": "68dd4c693975047063776dc4486144c4feee9cfe", "filename": "gcc/testsuite/g++.dg/opt/pr42508.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566f27e42ca00f65d101e6a7b0096554a0cc452d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr42508.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566f27e42ca00f65d101e6a7b0096554a0cc452d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr42508.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr42508.C?ref=566f27e42ca00f65d101e6a7b0096554a0cc452d", "patch": "@@ -0,0 +1,33 @@\n+// PR tree-optimization/42508\n+// { dg-do run }\n+// { dg-options \"-O1 -fipa-sra\" }\n+\n+extern \"C\" void abort ();\n+\n+int v[10], vidx;\n+\n+struct A\n+{\n+  A *prev;\n+  int i;\n+  ~A()\n+  {\n+    v[vidx++] = i;\n+    delete prev;\n+  }\n+};\n+\n+int\n+main ()\n+{\n+  A *a1 = new A ();\n+  A *a2 = new A ();\n+  a1->prev = 0;\n+  a1->i = 1;\n+  a2->prev = a1;\n+  a2->i = 2;\n+  delete a2;\n+  if (vidx != 2 || v[0] != 2 || v[1] != 1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "f0e874f2053e3cb99b17bd99a9a2e43088b98f46", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566f27e42ca00f65d101e6a7b0096554a0cc452d/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566f27e42ca00f65d101e6a7b0096554a0cc452d/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=566f27e42ca00f65d101e6a7b0096554a0cc452d", "patch": "@@ -3800,8 +3800,11 @@ convert_callers (struct cgraph_node *node, ipa_parm_adjustment_vec adjustments)\n       for (gsi = gsi_start_bb (this_block); !gsi_end_p (gsi); gsi_next (&gsi))\n         {\n \t  gimple stmt = gsi_stmt (gsi);\n-\t  if (gimple_code (stmt) == GIMPLE_CALL\n-\t      && gimple_call_fndecl (stmt) == node->decl)\n+\t  tree call_fndecl;\n+\t  if (gimple_code (stmt) != GIMPLE_CALL)\n+\t    continue;\n+\t  call_fndecl = gimple_call_fndecl (stmt);\n+\t  if (call_fndecl && cgraph_get_node (call_fndecl) == node)\n \t    {\n \t      if (dump_file)\n \t\tfprintf (dump_file, \"Adjusting recursive call\");\n@@ -3819,6 +3822,11 @@ convert_callers (struct cgraph_node *node, ipa_parm_adjustment_vec adjustments)\n static void\n modify_function (struct cgraph_node *node, ipa_parm_adjustment_vec adjustments)\n {\n+  struct cgraph_node *alias;\n+  for (alias = node->same_body; alias; alias = alias->next)\n+    ipa_modify_formal_parameters (alias->decl, adjustments, \"ISRA\");\n+  /* current_function_decl must be handled last, after same_body aliases,\n+     as following functions will use what it computed.  */\n   ipa_modify_formal_parameters (current_function_decl, adjustments, \"ISRA\");\n   scan_function (sra_ipa_modify_expr, sra_ipa_modify_assign,\n \t\t replace_removed_params_ssa_names, false, adjustments);"}]}