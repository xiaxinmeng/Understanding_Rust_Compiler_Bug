{"sha": "d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhlYzViZjIzMTVjNDNmZjJjMzRkYzI0ODViYTgzMzMwMWQ2YjBiMQ==", "commit": {"author": {"name": "Aurelien Jarno", "email": "aurelien@aurel32.net", "date": "2008-04-07T20:08:33Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2008-04-07T20:08:33Z"}, "message": "Makefile.in: Add make ifeq define for mips/mipsel support.\n\n2008-04-07  Aurelien Jarno  <aurelien@aurel32.net>\n            Xavier Grave  <grave@ipno.in2p3.fr>\n\n        * Makefile.in: Add make ifeq define for mips/mipsel support.\n        * g-soccon-linux-mips.ads, system-linux-mipsel.ads, \n        system-linux-mips.ads: New files.\n\nCo-Authored-By: Xavier Grave <grave@ipno.in2p3.fr>\n\nFrom-SVN: r133986", "tree": {"sha": "1d091c069d301a6f9f81cbea3f09bc4946caa0b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d091c069d301a6f9f81cbea3f09bc4946caa0b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1/comments", "author": {"login": "aurel32", "id": 7688913, "node_id": "MDQ6VXNlcjc2ODg5MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7688913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aurel32", "html_url": "https://github.com/aurel32", "followers_url": "https://api.github.com/users/aurel32/followers", "following_url": "https://api.github.com/users/aurel32/following{/other_user}", "gists_url": "https://api.github.com/users/aurel32/gists{/gist_id}", "starred_url": "https://api.github.com/users/aurel32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aurel32/subscriptions", "organizations_url": "https://api.github.com/users/aurel32/orgs", "repos_url": "https://api.github.com/users/aurel32/repos", "events_url": "https://api.github.com/users/aurel32/events{/privacy}", "received_events_url": "https://api.github.com/users/aurel32/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46b71b0354e0eba0e0b176a80434bb3a953aadb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b71b0354e0eba0e0b176a80434bb3a953aadb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46b71b0354e0eba0e0b176a80434bb3a953aadb6"}], "stats": {"total": 560, "additions": 560, "deletions": 0}, "files": [{"sha": "6cfbe62b6ce992c4c762c58fe0908dc088e05036", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1", "patch": "@@ -1,3 +1,10 @@\n+2008-04-07  Aurelien Jarno  <aurelien@aurel32.net>\n+            Xavier Grave  <grave@ipno.in2p3.fr>\n+\n+\t* Makefile.in: Add make ifeq define for mips/mipsel support.\n+\t* g-soccon-linux-mips.ads, system-linux-mipsel.ads, \n+\tsystem-linux-mips.ads: New files.\n+\n 2008-04-07  Aurelien Jarno  <aurelien@aurel32.net>\n \n         * sysdep.c: add __GLIBC__ to the #ifdef preprocessor macros to"}, {"sha": "ec43bd2a77daeb1431907f452ce13336ce4f567c", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1", "patch": "@@ -1365,6 +1365,54 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+ifeq ($(strip $(filter-out mips linux%,$(arch) $(osys))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<a-intnam-linux.ads \\\n+  g-soccon.ads<g-soccon-linux-mips.ads \\\n+  s-inmaop.adb<s-inmaop-posix.adb \\\n+  s-intman.adb<s-intman-posix.adb \\\n+  s-osinte.adb<s-osinte-posix.adb \\\n+  s-osinte.ads<s-osinte-linux.ads \\\n+  s-osprim.adb<s-osprim-posix.adb \\\n+  s-taprop.adb<s-taprop-linux.adb \\\n+  s-tasinf.ads<s-tasinf-linux.ads \\\n+  s-tasinf.adb<s-tasinf-linux.adb \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n+  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n+  system.ads<system-linux-mips.ads\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  PREFIX_OBJS = $(PREFIX_REAL_OBJS)\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+ifeq ($(strip $(filter-out mipsel linux%,$(arch) $(osys))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<a-intnam-linux.ads \\\n+  g-soccon.ads<g-soccon-linux-mips.ads \\\n+  s-inmaop.adb<s-inmaop-posix.adb \\\n+  s-intman.adb<s-intman-posix.adb \\\n+  s-osinte.adb<s-osinte-posix.adb \\\n+  s-osinte.ads<s-osinte-linux.ads \\\n+  s-osprim.adb<s-osprim-posix.adb \\\n+  s-taprop.adb<s-taprop-linux.adb \\\n+  s-tasinf.ads<s-tasinf-linux.ads \\\n+  s-tasinf.adb<s-tasinf-linux.adb \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n+  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n+  system.ads<system-linux-mipsel.ads\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  PREFIX_OBJS = $(PREFIX_REAL_OBJS)\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n ifeq ($(strip $(filter-out powerpc% linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\"}, {"sha": "8fc50400e241f5f92a5fc9caed4507943656e154", "filename": "gcc/ada/g-soccon-linux-mips.ads", "status": "added", "additions": 197, "deletions": 0, "changes": 197, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1/gcc%2Fada%2Fg-soccon-linux-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1/gcc%2Fada%2Fg-soccon-linux-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-mips.ads?ref=d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1", "patch": "@@ -0,0 +1,197 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for mips-linux, manually edited for the first shot\n+--  no mips hardware at hand\n+--  using http://www.gelato.unsw.edu.au/lxr/source/include/asm-mips/socket.h\n+--  in order to find differents values\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n+\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           10; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            1; --  Stream socket\n+   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=           98; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=           99; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=           97; --  Addr family not supported\n+   EALREADY           : constant :=          114; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=          103; --  Connection aborted\n+   ECONNREFUSED       : constant :=          111; --  Connection refused\n+   ECONNRESET         : constant :=          104; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=           89; --  Destination addr required\n+   EFAULT             : constant :=           14; --  Bad address\n+   EHOSTDOWN          : constant :=          112; --  Host is down\n+   EHOSTUNREACH       : constant :=          113; --  No route to host\n+   EINPROGRESS        : constant :=          115; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=          106; --  Socket already connected\n+   ELOOP              : constant :=           40; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=           90; --  Message too long\n+   ENAMETOOLONG       : constant :=           36; --  Name too long\n+   ENETDOWN           : constant :=          100; --  Network is down\n+   ENETRESET          : constant :=          102; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=          101; --  Network is unreachable\n+   ENOBUFS            : constant :=          105; --  No buffer space available\n+   ENOPROTOOPT        : constant :=           92; --  Protocol not available\n+   ENOTCONN           : constant :=          107; --  Socket not connected\n+   ENOTSOCK           : constant :=           88; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=           95; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=           96; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=           93; --  Unknown protocol\n+   EPROTOTYPE         : constant :=           91; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=          108; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=           94; --  Socket type not supported\n+   ETIMEDOUT          : constant :=          110; --  Connection timed out\n+   ETOOMANYREFS       : constant :=          109; --  Too many references\n+   EWOULDBLOCK        : constant :=           11; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n+   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n+   NO_DATA            : constant :=            4; --  No data record for name\n+   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=     16#667e#; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=     16#467f#; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=            1; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=          128; --  Send end of record\n+   MSG_WAITALL        : constant :=          256; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=        16384; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant := MSG_NOSIGNAL;\n+   --  Flags set on all send(2) calls\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=       16#80#; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=       16#20#; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=     16#1001#; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=     16#1002#; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=     16#1005#; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=     16#1006#; --  Reception timeout\n+   SO_ERROR           : constant :=     16#1007#; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           32; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=           33; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           34; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=           35; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           36; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=   2147483647; --  Maximum writev iovcnt\n+\n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=            4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=            4; --  tv_usec\n+\n+   ----------------------------------------\n+   -- Properties of supported interfaces --\n+   ----------------------------------------\n+\n+   Need_Netdb_Buffer  : constant :=            1; --  Need buffer for Netdb ops\n+\n+   ----------------------\n+   -- Additional flags --\n+   ----------------------\n+\n+   Thread_Blocking_IO : constant Boolean := True;\n+   --  Set False for contexts where socket i/o are process blocking\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "e9a47c4bb030fafd1e1011faa58216d453a08cb2", "filename": "gcc/ada/system-linux-mips.ads", "status": "added", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1/gcc%2Fada%2Fsystem-linux-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1/gcc%2Fada%2Fsystem-linux-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-mips.ads?ref=d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1", "patch": "@@ -0,0 +1,154 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                          (GNU-Linux/MIPS Version)                        --\n+--                                                                          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.000_001;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := High_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority           : constant Positive := 30;\n+   Max_Interrupt_Priority : constant Positive := 31;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 31;\n+   subtype Priority           is Any_Priority range  0 .. 30;\n+   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n+\n+   Default_Priority : constant Priority := 15;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Compiler_System_Version   : constant Boolean := False;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := True;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n+end System;"}, {"sha": "80631f2f61131a1ed7a460b6ead49a5ff9b8e82f", "filename": "gcc/ada/system-linux-mipsel.ads", "status": "added", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1/gcc%2Fada%2Fsystem-linux-mipsel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1/gcc%2Fada%2Fsystem-linux-mipsel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-mipsel.ads?ref=d8ec5bf2315c43ff2c34dc2485ba833301d6b0b1", "patch": "@@ -0,0 +1,154 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                        (GNU-Linux/MIPSEL Version)                        --\n+--                                                                          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.000_001;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority           : constant Positive := 30;\n+   Max_Interrupt_Priority : constant Positive := 31;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 31;\n+   subtype Priority           is Any_Priority range  0 .. 30;\n+   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n+\n+   Default_Priority : constant Priority := 15;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Compiler_System_Version   : constant Boolean := False;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := True;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n+end System;"}]}