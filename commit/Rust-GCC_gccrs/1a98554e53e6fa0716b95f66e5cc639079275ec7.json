{"sha": "1a98554e53e6fa0716b95f66e5cc639079275ec7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE5ODU1NGU1M2U2ZmEwNzE2Yjk1ZjY2ZTVjYzYzOTA3OTI3NWVjNw==", "commit": {"author": {"name": "Roland McGrath", "email": "roland@gcc.gnu.org", "date": "1992-12-19T06:32:08Z"}, "committer": {"name": "Roland McGrath", "email": "roland@gcc.gnu.org", "date": "1992-12-19T06:32:08Z"}, "message": "entered into RCS\n\nFrom-SVN: r2894", "tree": {"sha": "5cfc9dce49bad1b35cadf437e437835709306506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cfc9dce49bad1b35cadf437e437835709306506"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a98554e53e6fa0716b95f66e5cc639079275ec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a98554e53e6fa0716b95f66e5cc639079275ec7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a98554e53e6fa0716b95f66e5cc639079275ec7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a98554e53e6fa0716b95f66e5cc639079275ec7/comments", "author": null, "committer": null, "parents": [{"sha": "3f1f8d8c042786aa794774d1b529a8f83d15c4c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1f8d8c042786aa794774d1b529a8f83d15c4c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f1f8d8c042786aa794774d1b529a8f83d15c4c0"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "922a9edb1123903451e367874f0e9904e242f2df", "filename": "gcc/getpwd.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a98554e53e6fa0716b95f66e5cc639079275ec7/gcc%2Fgetpwd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a98554e53e6fa0716b95f66e5cc639079275ec7/gcc%2Fgetpwd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgetpwd.c?ref=1a98554e53e6fa0716b95f66e5cc639079275ec7", "patch": "@@ -59,7 +59,9 @@ getpwd ()\n \t  {\n \t    int e = errno;\n \t    free (p);\n+#ifdef ERANGE\n \t    if (e != ERANGE)\n+#endif\n \t      {\n \t\terrno = failure_errno = e;\n \t\tp = 0;"}]}