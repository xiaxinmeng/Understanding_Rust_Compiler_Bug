{"sha": "ecd4a73b20577345fc2703e7e998b30b68bf75d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNkNGE3M2IyMDU3NzM0NWZjMjcwM2U3ZTk5OGIzMGI2OGJmNzVkNg==", "commit": {"author": {"name": "Jose Renau", "email": "renau@cs.uiuc.edu", "date": "2002-12-26T18:15:56Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2002-12-26T18:15:56Z"}, "message": "ssa-dce.c (EXECUTE_IF_UNNECESSARY): Verify INSN is an INSN_P before checking to see if it is dead.\n\n       * ssa-dce.c (EXECUTE_IF_UNNECESSARY): Verify INSN is an\n        INSN_P before checking to see if it is dead.\n        (mark_all_insn_unnecessary): Similarly.\n        (ssa_eliminate_dead_code): Similarly.\n        * rtl.h (struct rtx_def): Update comments for in_struct usage\n        in dead code elimination pass.\n        (INSN_DEAD_CODE_P): Allow JUMP_INSN and CALL_INSN as well.\n\nFrom-SVN: r60520", "tree": {"sha": "9a794edf33f5d0d6572f70b05a106554945370ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a794edf33f5d0d6572f70b05a106554945370ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecd4a73b20577345fc2703e7e998b30b68bf75d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd4a73b20577345fc2703e7e998b30b68bf75d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecd4a73b20577345fc2703e7e998b30b68bf75d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd4a73b20577345fc2703e7e998b30b68bf75d6/comments", "author": null, "committer": null, "parents": [{"sha": "b17bb466ac97a3a26568856d8cc2ea5482c92229", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b17bb466ac97a3a26568856d8cc2ea5482c92229", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b17bb466ac97a3a26568856d8cc2ea5482c92229"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "b2601b768caaa834068de599f41db6e17b0f8cdf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd4a73b20577345fc2703e7e998b30b68bf75d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd4a73b20577345fc2703e7e998b30b68bf75d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecd4a73b20577345fc2703e7e998b30b68bf75d6", "patch": "@@ -1,3 +1,13 @@\n+2002-12-26  Jose Renau <renau@cs.uiuc.edu>\n+\n+\t* ssa-dce.c (EXECUTE_IF_UNNECESSARY): Verify INSN is an\n+\tINSN_P before checking to see if it is dead.\n+\t(mark_all_insn_unnecessary): Similarly.\n+\t(ssa_eliminate_dead_code): Similarly.\n+\t* rtl.h (struct rtx_def): Update comments for in_struct usage\n+\tin dead code elimination pass.\n+\t(INSN_DEAD_CODE_P): Allow JUMP_INSN and CALL_INSN as well.\n+\n 2002-12-26  Andreas Schwab  <schwab@suse.de>\n \n \t* config.gcc (powerpc*-*-*, rs6000-*-*): Fix assignment syntax. "}, {"sha": "3cab166f527ed9a618c20ea226867b65087bf702", "filename": "gcc/rtl.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd4a73b20577345fc2703e7e998b30b68bf75d6/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd4a73b20577345fc2703e7e998b30b68bf75d6/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=ecd4a73b20577345fc2703e7e998b30b68bf75d6", "patch": "@@ -174,8 +174,9 @@ struct rtx_def GTY((chain_next (\"RTX_NEXT (&%h)\"),\n      1 in an INSN, JUMP_INSN, or CALL_INSN if insn is in a delay slot and\n      from the target of a branch.  Valid from reorg until end of compilation;\n      cleared before used.\n-     1 in an INSN or related rtx if this insn is dead code.  Valid only during\n-     dead-code elimination phase; cleared before use.  */\n+     1 in an INSN, JUMP_INSN or CALL_INSN or related rtx if this insn is\n+     dead code.  Valid only during dead-code elimination phase; cleared\n+     before use.  */\n   unsigned int in_struct : 1;\n   /* At the end of RTL generation, 1 if this rtx is used.  This is used for\n      copying shared structure.  See `unshare_all_rtl'.\n@@ -578,7 +579,7 @@ do {\t\t\t\t\\\n /* 1 if RTX is an insn that is dead code.  Valid only for dead-code\n    elimination phase.  */\n #define INSN_DEAD_CODE_P(RTX)\t\t\t\t\t\t\\\n-  (RTL_FLAG_CHECK1(\"INSN_DEAD_CODE_P\", (RTX), INSN)->in_struct)\n+  (RTL_FLAG_CHECK3(\"INSN_DEAD_CODE_P\", (RTX), INSN, CALL_INSN, JUMP_INSN)->in_struct)\n \n /* 1 if RTX is an insn in a delay slot and is from the target of the branch.\n    If the branch insn has INSN_ANNULLED_BRANCH_P set, this insn should only be"}, {"sha": "6ccc222cea669e84678747eb8b387a8fd49bb035", "filename": "gcc/ssa-dce.c", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd4a73b20577345fc2703e7e998b30b68bf75d6/gcc%2Fssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd4a73b20577345fc2703e7e998b30b68bf75d6/gcc%2Fssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa-dce.c?ref=ecd4a73b20577345fc2703e7e998b30b68bf75d6", "patch": "@@ -135,10 +135,12 @@ static void mark_all_insn_unnecessary\n   rtx INSN;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n   for (INSN = get_insns (); INSN != NULL_RTX; INSN = NEXT_INSN (INSN))\t\\\n-    if (INSN_DEAD_CODE_P (INSN)) {\t\t\t\t\\\n-      CODE;\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n+    if (INSN_P (insn) && INSN_DEAD_CODE_P (INSN))\t\t\\\n+      {\t\t\t\t\t\t\t\t\\\n+        CODE;\t\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\\\n }\n+\n /* Find the label beginning block BB.  */\n static rtx find_block_label\n   PARAMS ((basic_block bb));\n@@ -448,8 +450,11 @@ static void\n mark_all_insn_unnecessary ()\n {\n   rtx insn;\n-  for (insn = get_insns (); insn != NULL_RTX; insn = NEXT_INSN (insn))\n-    KILL_INSN (insn);\n+  for (insn = get_insns (); insn != NULL_RTX; insn = NEXT_INSN (insn)) {\n+    if (INSN_P (insn))\n+      KILL_INSN (insn);\n+  }\n+  \n }\n \n /* Find the label beginning block BB, adding one if necessary.  */\n@@ -522,7 +527,7 @@ ssa_eliminate_dead_code ()\n \n   /* Find inherently necessary instructions.  */\n   for (insn = get_insns (); insn != NULL_RTX; insn = NEXT_INSN (insn))\n-    if (find_inherently_necessary (insn))\n+    if (find_inherently_necessary (insn) && INSN_P (insn))\n       {\n \tRESURRECT_INSN (insn);\n \tVARRAY_PUSH_RTX (unprocessed_instructions, insn);\n@@ -725,8 +730,11 @@ ssa_eliminate_dead_code ()\n \t}\n     }\n   /* Release allocated memory.  */\n-  for (insn = get_insns (); insn != NULL_RTX; insn = NEXT_INSN (insn))\n-    RESURRECT_INSN (insn);\n+  for (insn = get_insns (); insn != NULL_RTX; insn = NEXT_INSN (insn)) {\n+    if (INSN_P (insn))\n+      RESURRECT_INSN (insn);\n+  }\n+  \n   if (VARRAY_ACTIVE_SIZE (unprocessed_instructions) != 0)\n     abort ();\n   control_dependent_block_to_edge_map_free (cdbte);"}]}