{"sha": "73068e369ffca55c491c6c519e7824eeb5011489", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMwNjhlMzY5ZmZjYTU1YzQ5MWM2YzUxOWU3ODI0ZWViNTAxMTQ4OQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2002-01-27T22:33:35Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-01-27T22:33:35Z"}, "message": "nogc.cc: Remove warnings.\n\n2002-01-26 Andreas Tobler <a.tobler@schweiz.ch>\n\n\t* nogc.cc: Remove warnings.\n\t(_Jv_GCRegisterDisappearingLink, _Jv_GCCanReclaimSoftReference):\n\tNew functions.\n\nFrom-SVN: r49273", "tree": {"sha": "5b6f63c599732df179d06038a98d323224f71f58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b6f63c599732df179d06038a98d323224f71f58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73068e369ffca55c491c6c519e7824eeb5011489", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73068e369ffca55c491c6c519e7824eeb5011489", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73068e369ffca55c491c6c519e7824eeb5011489", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73068e369ffca55c491c6c519e7824eeb5011489/comments", "author": null, "committer": null, "parents": [{"sha": "45a2b4f74e9bc5335b6a5be36329b49bf2efa2d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45a2b4f74e9bc5335b6a5be36329b49bf2efa2d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45a2b4f74e9bc5335b6a5be36329b49bf2efa2d6"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "8090624277f57dd8e62508a9abeeb40c7b3825fd", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73068e369ffca55c491c6c519e7824eeb5011489/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73068e369ffca55c491c6c519e7824eeb5011489/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=73068e369ffca55c491c6c519e7824eeb5011489", "patch": "@@ -1,3 +1,9 @@\n+2002-01-26 Andreas Tobler <a.tobler@schweiz.ch>\n+\n+\t* nogc.cc: Remove warnings.\n+\t(_Jv_GCRegisterDisappearingLink, _Jv_GCCanReclaimSoftReference):\n+\tNew functions.\n+\n 2002-01-25  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n \t* java/awt/image/MemoryImageSource.java (newPixels(byte[], ColorModel,"}, {"sha": "e81fbe18714cd7bb2d676c3ebfaccbaed0eb9655", "filename": "libjava/nogc.cc", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73068e369ffca55c491c6c519e7824eeb5011489/libjava%2Fnogc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73068e369ffca55c491c6c519e7824eeb5011489/libjava%2Fnogc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fnogc.cc?ref=73068e369ffca55c491c6c519e7824eeb5011489", "patch": "@@ -1,6 +1,6 @@\n // nogc.cc - Implement null garbage collector.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -20,7 +20,7 @@ details.  */\n static long total = 0;\n \n void *\n-_Jv_BuildGCDescr(jclass klass)\n+_Jv_BuildGCDescr(jclass)\n {\n   return 0;\n }\n@@ -39,7 +39,7 @@ void *\n _Jv_AllocPtrFreeObj (jsize size, jclass klass)\n {\n   total += size;\n-  ptr_t obj = malloc (size, 1);\n+  void *obj = calloc (size, 1);\n   if (!obj) _Jv_ThrowNoMemory();\n   *((_Jv_VTable **) obj) = klass->vtable;\n   return obj;\n@@ -59,7 +59,7 @@ void *\n _Jv_AllocBytes (jsize size)\n {\n   total += size;\n-  ptr_t obj = calloc (size, 1);\n+  void *obj = calloc (size, 1);\n   if (!obj) _Jv_ThrowNoMemory();\n   return obj;\n }\n@@ -112,12 +112,12 @@ _Jv_GCFreeMemory (void)\n }\n \n void\n-_Jv_GCSetInitialHeapSize (size_t size)\n+_Jv_GCSetInitialHeapSize (size_t)\n {\n }\n \n void\n-_Jv_GCSetMaximumHeapSize (size_t size)\n+_Jv_GCSetMaximumHeapSize (size_t)\n {\n }\n \n@@ -136,19 +136,31 @@ _Jv_InitGC (void)\n {\n }\n \n+void\n+_Jv_GCRegisterDisappearingLink (jobject *)\n+{\n+}\n+\n+jboolean\n+_Jv_GCCanReclaimSoftReference (jobject)\n+{\n+  // For now, always reclaim soft references.  FIXME.\n+  return true;\n+}\n+\n #ifdef JV_HASH_SYNCHRONIZATION\n void *\n _Jv_AllocTraceOne (jsize size /* includes vtable slot */) \n {\n-  ptr_t obj = calloc(size, 1);\n+  void *obj = calloc(size, 1);\n   if (!obj) _Jv_ThrowNoMemory();\n   return result;\n }\n \n void *\n _Jv_AllocTraceTwo (jsize size /* includes vtable slot */) \n {\n-  ptr_t obj = calloc(size, 1);\n+  void *obj = calloc(size, 1);\n   if (!obj) _Jv_ThrowNoMemory();\n   return result;\n }"}]}