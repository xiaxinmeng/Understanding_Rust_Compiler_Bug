{"sha": "9c3c3dcc1fbd186af72e62bc6d4579ec963611bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMzYzNkY2MxZmJkMTg2YWY3MmU2MmJjNmQ0NTc5ZWM5NjM2MTFiZA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2005-01-15T15:34:51Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-01-15T15:34:51Z"}, "message": "s390.md (\"reload_outti\"): Remove predicate for output operand.\n\n\t* config/s390/s390.md (\"reload_outti\"): Remove predicate for\n\toutput operand.  Abort if operand is not a MEM.\n\t(\"reload_outdi\", \"reload_outdf\"): Likewise.\n\nFrom-SVN: r93695", "tree": {"sha": "af229e66e5d88bf7940687f312d6562fdc326969", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af229e66e5d88bf7940687f312d6562fdc326969"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c3c3dcc1fbd186af72e62bc6d4579ec963611bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3c3dcc1fbd186af72e62bc6d4579ec963611bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c3c3dcc1fbd186af72e62bc6d4579ec963611bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3c3dcc1fbd186af72e62bc6d4579ec963611bd/comments", "author": null, "committer": null, "parents": [{"sha": "378b66d4767b14322d56b08119205d756841552e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/378b66d4767b14322d56b08119205d756841552e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/378b66d4767b14322d56b08119205d756841552e"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "d07cea1a2683b780ed6ad1e292d8474b4462df36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3c3dcc1fbd186af72e62bc6d4579ec963611bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3c3dcc1fbd186af72e62bc6d4579ec963611bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c3c3dcc1fbd186af72e62bc6d4579ec963611bd", "patch": "@@ -1,3 +1,9 @@\n+2005-01-15  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"reload_outti\"): Remove predicate for\n+\toutput operand.  Abort if operand is not a MEM.\n+\t(\"reload_outdi\", \"reload_outdf\"): Likewise.\n+\n 2005-01-15  Marc Espie  <espie@openbsd.org>\n \n \t* config.gcc (*-*-openbsd*): Set HAS_LIBC_R for OpenBSD <= 3.2."}, {"sha": "c61bde8fa01138f35c361d86d807a7474a671dcf", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3c3dcc1fbd186af72e62bc6d4579ec963611bd/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3c3dcc1fbd186af72e62bc6d4579ec963611bd/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=9c3c3dcc1fbd186af72e62bc6d4579ec963611bd", "patch": "@@ -1,5 +1,5 @@\n ;;- Machine description for GNU compiler -- S/390 / zSeries version.\n-;;  Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004\n+;;  Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005\n ;;  Free Software Foundation, Inc.\n ;;  Contributed by Hartmut Penner (hpenner@de.ibm.com) and\n ;;                 Ulrich Weigand (uweigand@de.ibm.com).\n@@ -827,11 +827,12 @@\n })\n \n (define_expand \"reload_outti\"\n-  [(parallel [(match_operand:TI 0 \"memory_operand\" \"\")\n+  [(parallel [(match_operand:TI 0 \"\" \"\")\n               (match_operand:TI 1 \"register_operand\" \"d\")\n               (match_operand:DI 2 \"register_operand\" \"=&a\")])]\n   \"TARGET_64BIT\"\n {\n+  gcc_assert (MEM_P (operands[0]));\n   s390_load_address (operands[2], XEXP (operands[0], 0));\n   operands[0] = replace_equiv_address (operands[0], operands[2]);\n   emit_move_insn (operands[0], operands[1]);\n@@ -985,11 +986,12 @@\n })\n \n (define_expand \"reload_outdi\"\n-  [(parallel [(match_operand:DI 0 \"memory_operand\" \"\")\n+  [(parallel [(match_operand:DI 0 \"\" \"\")\n               (match_operand:DI 1 \"register_operand\" \"d\")\n               (match_operand:SI 2 \"register_operand\" \"=&a\")])]\n   \"!TARGET_64BIT\"\n {\n+  gcc_assert (MEM_P (operands[0]));\n   s390_load_address (operands[2], XEXP (operands[0], 0));\n   operands[0] = replace_equiv_address (operands[0], operands[2]);\n   emit_move_insn (operands[0], operands[1]);\n@@ -1443,11 +1445,12 @@\n })\n \n (define_expand \"reload_outdf\"\n-  [(parallel [(match_operand:DF 0 \"memory_operand\" \"\")\n+  [(parallel [(match_operand:DF 0 \"\" \"\")\n               (match_operand:DF 1 \"register_operand\" \"d\")\n               (match_operand:SI 2 \"register_operand\" \"=&a\")])]\n   \"!TARGET_64BIT\"\n {\n+  gcc_assert (MEM_P (operands[0]));\n   s390_load_address (operands[2], XEXP (operands[0], 0));\n   operands[0] = replace_equiv_address (operands[0], operands[2]);\n   emit_move_insn (operands[0], operands[1]);"}]}