{"sha": "5f2322320155f42550aee3a0d899df5c7a93ba91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYyMzIyMzIwMTU1ZjQyNTUwYWVlM2EwZDg5OWRmNWM3YTkzYmE5MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-10-11T10:50:09Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-10-11T10:50:09Z"}, "message": "re PR libstdc++/33734 (iconv_t must not be assumed to be a pointer)\n\n2007-10-11  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/33734\n\t* include/ext/codecvt_specializations.h (encoding_state::good,\n\tinit, destroy): Use cast notation instead of reinterpret_cast.\n\nFrom-SVN: r129232", "tree": {"sha": "883f150586300b5e1f33c339e9cbca4ff900737d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/883f150586300b5e1f33c339e9cbca4ff900737d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f2322320155f42550aee3a0d899df5c7a93ba91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2322320155f42550aee3a0d899df5c7a93ba91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f2322320155f42550aee3a0d899df5c7a93ba91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2322320155f42550aee3a0d899df5c7a93ba91/comments", "author": null, "committer": null, "parents": [{"sha": "a6bda7d08bba0105f6e490bcbb8287684643990f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bda7d08bba0105f6e490bcbb8287684643990f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6bda7d08bba0105f6e490bcbb8287684643990f"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "9dc29aeea47f503850d437e1a58dd3c88786bc67", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2322320155f42550aee3a0d899df5c7a93ba91/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2322320155f42550aee3a0d899df5c7a93ba91/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5f2322320155f42550aee3a0d899df5c7a93ba91", "patch": "@@ -1,3 +1,9 @@\n+2007-10-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/33734\n+\t* include/ext/codecvt_specializations.h (encoding_state::good,\n+\tinit, destroy): Use cast notation instead of reinterpret_cast.\n+\n 2007-10-11  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/25_algorithms/heap/moveable.cc: Fix and extend."}, {"sha": "ea5b8a1cf3cc979a0d789bb7508a1089186637c3", "filename": "libstdc++-v3/include/ext/codecvt_specializations.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2322320155f42550aee3a0d899df5c7a93ba91/libstdc%2B%2B-v3%2Finclude%2Fext%2Fcodecvt_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2322320155f42550aee3a0d899df5c7a93ba91/libstdc%2B%2B-v3%2Finclude%2Fext%2Fcodecvt_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fcodecvt_specializations.h?ref=5f2322320155f42550aee3a0d899df5c7a93ba91", "patch": "@@ -121,7 +121,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     bool\n     good() const throw()\n     { \n-      const descriptor_type __err = reinterpret_cast<iconv_t>(-1);\n+      const descriptor_type __err = (iconv_t)(-1);\n       bool __test = _M_in_desc && _M_in_desc != __err; \n       __test &=  _M_out_desc && _M_out_desc != __err;\n       return __test;\n@@ -159,7 +159,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     void\n     init()\n     {\n-      const descriptor_type __err = reinterpret_cast<iconv_t>(-1);\n+      const descriptor_type __err = (iconv_t)(-1);\n       const bool __have_encodings = _M_int_enc.size() && _M_ext_enc.size();\n       if (!_M_in_desc && __have_encodings)\n \t{\n@@ -192,7 +192,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     void\n     destroy() throw()\n     {\n-      const descriptor_type __err = reinterpret_cast<iconv_t>(-1);\n+      const descriptor_type __err = (iconv_t)(-1);\n       if (_M_in_desc && _M_in_desc != __err) \n \t{\n \t  iconv_close(_M_in_desc);"}]}