{"sha": "2cfa504a0899b31068b37c5ab4bcaaed5c6973d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNmYTUwNGEwODk5YjMxMDY4YjM3YzVhYjRiY2FhZWQ1YzY5NzNkNQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2014-06-10T02:10:46Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2014-06-10T02:10:46Z"}, "message": "tree-ssa-math-opts.c (find_bswap_or_nop_load): Check return value of init_symbolic_number ().\n\n2014-06-09  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    * tree-ssa-math-opts.c (find_bswap_or_nop_load): Check return value of\n    init_symbolic_number ().\n\nFrom-SVN: r211395", "tree": {"sha": "f5ef35ac6a895c511f86a49b87b3cbcca571331a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5ef35ac6a895c511f86a49b87b3cbcca571331a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cfa504a0899b31068b37c5ab4bcaaed5c6973d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cfa504a0899b31068b37c5ab4bcaaed5c6973d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cfa504a0899b31068b37c5ab4bcaaed5c6973d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cfa504a0899b31068b37c5ab4bcaaed5c6973d5/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "816002df70d65b79158d45d5c690a4d7e061da03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/816002df70d65b79158d45d5c690a4d7e061da03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/816002df70d65b79158d45d5c690a4d7e061da03"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "0c63d04b52375d4860fa77d0ef593e7ce383ca27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cfa504a0899b31068b37c5ab4bcaaed5c6973d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cfa504a0899b31068b37c5ab4bcaaed5c6973d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2cfa504a0899b31068b37c5ab4bcaaed5c6973d5", "patch": "@@ -1,3 +1,8 @@\n+2014-06-09  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* tree-ssa-math-opts.c (find_bswap_or_nop_load): Check return value of\n+\tinit_symbolic_number ().\n+\n 2014-05-18  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR middle-end/61141"}, {"sha": "1f011a6f937604eca6fc8a3df40b9d0d6a080734", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cfa504a0899b31068b37c5ab4bcaaed5c6973d5/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cfa504a0899b31068b37c5ab4bcaaed5c6973d5/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=2cfa504a0899b31068b37c5ab4bcaaed5c6973d5", "patch": "@@ -1784,7 +1784,8 @@ find_bswap_or_nop_load (gimple stmt, tree ref, struct symbolic_number *n)\n   if (bitsize % BITS_PER_UNIT)\n     return false;\n \n-  init_symbolic_number (n, ref);\n+  if (!init_symbolic_number (n, ref))\n+    return false;\n   n->base_addr = base_addr;\n   n->offset = offset;\n   n->bytepos = bitpos / BITS_PER_UNIT;"}]}