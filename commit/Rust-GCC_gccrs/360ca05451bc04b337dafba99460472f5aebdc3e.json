{"sha": "360ca05451bc04b337dafba99460472f5aebdc3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYwY2EwNTQ1MWJjMDRiMzM3ZGFmYmE5OTQ2MDQ3MmY1YWViZGMzZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-03-29T12:08:54Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-03-29T12:08:54Z"}, "message": "re PR middle-end/20263 (Incorrect asm for global register vars)\n\n\tPR middle-end/20263\n\t* varasm.c (make_decl_rtl) [ASM_DECLARE_REGISTER_GLOBAL]: Use\n\tthe DECL_NAME, not the DECL_ASSEMBLER_NAME.\n\nFrom-SVN: r97157", "tree": {"sha": "514cd477a850012502ca1974a42b47cb3cb03d19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/514cd477a850012502ca1974a42b47cb3cb03d19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/360ca05451bc04b337dafba99460472f5aebdc3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360ca05451bc04b337dafba99460472f5aebdc3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/360ca05451bc04b337dafba99460472f5aebdc3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360ca05451bc04b337dafba99460472f5aebdc3e/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f1e85278aee66245bf2258c372216635436ced4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f1e85278aee66245bf2258c372216635436ced4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f1e85278aee66245bf2258c372216635436ced4"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "cc7dedd3c24cd0944ae282f4d4f528e6c62d3cad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360ca05451bc04b337dafba99460472f5aebdc3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360ca05451bc04b337dafba99460472f5aebdc3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=360ca05451bc04b337dafba99460472f5aebdc3e", "patch": "@@ -1,3 +1,9 @@\n+2005-03-29  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR middle-end/20263\n+\t* varasm.c (make_decl_rtl) [ASM_DECLARE_REGISTER_GLOBAL]: Use\n+\tthe DECL_NAME, not the DECL_ASSEMBLER_NAME.\n+\n 2005-03-29  Dale Johannesen <dalej@apple.com>\n \n \t* Makefile.in (value-prof.o): New dependencies on $(DIAGNOSTIC_H)"}, {"sha": "6ba4ac90b8dba0a18815283030c3b6e68d0f5c50", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360ca05451bc04b337dafba99460472f5aebdc3e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360ca05451bc04b337dafba99460472f5aebdc3e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=360ca05451bc04b337dafba99460472f5aebdc3e", "patch": "@@ -1,3 +1,7 @@\n+2005-03-29  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/sparc-reg-1.c: New test.\n+\n 2005-03-28  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR target/19890"}, {"sha": "860094299a109005fcc0d621595560359f0953cd", "filename": "gcc/testsuite/gcc.dg/sparc-reg-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360ca05451bc04b337dafba99460472f5aebdc3e/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-reg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360ca05451bc04b337dafba99460472f5aebdc3e/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-reg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-reg-1.c?ref=360ca05451bc04b337dafba99460472f5aebdc3e", "patch": "@@ -0,0 +1,11 @@\n+/* PR middle-end/20263 */\n+\n+/* { dg-do assemble { target sparc64-*-* } } */\n+/* { dg-options \"\" } */\n+\n+register void *tp __asm__(\"%g7\");\n+\n+void set_tp(void)\n+{\n+  tp = 0;\n+} "}, {"sha": "751c8bce959f6606c6b0c9cce72e056457908a29", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360ca05451bc04b337dafba99460472f5aebdc3e/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360ca05451bc04b337dafba99460472f5aebdc3e/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=360ca05451bc04b337dafba99460472f5aebdc3e", "patch": "@@ -897,7 +897,6 @@ make_decl_rtl (tree decl)\n \n   name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n \n-\n   if (TREE_CODE (decl) != FUNCTION_DECL && DECL_REGISTER (decl))\n     {\n       reg_number = decode_reg_name (name);\n@@ -940,6 +939,7 @@ make_decl_rtl (tree decl)\n \t      /* Make this register global, so not usable for anything\n \t\t else.  */\n #ifdef ASM_DECLARE_REGISTER_GLOBAL\n+\t      name = IDENTIFIER_POINTER (DECL_NAME (decl));\n \t      ASM_DECLARE_REGISTER_GLOBAL (asm_out_file, decl, reg_number, name);\n #endif\n \t      nregs = hard_regno_nregs[reg_number][DECL_MODE (decl)];"}]}