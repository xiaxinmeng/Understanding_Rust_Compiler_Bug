{"sha": "a2b63a20016d041e501d6c6541d059befbb244b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJiNjNhMjAwMTZkMDQxZTUwMWQ2YzY1NDFkMDU5YmVmYmIyNDRiOQ==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2011-01-13T20:01:57Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2011-01-13T20:01:57Z"}, "message": "re PR c++/47213 (ICE: SIGSEGV in determine_visibility (decl2.c:2076) with -fvisibility-ms-compat)\n\n2011-01-13  Kai Tietz  <kai.tietz@onevision.com>\n\n\tPR c++/47213\n\t* g++.dg/ext/pr47213.C: New.\n\n2011-01-13  Kai Tietz  <kai.tietz@onevision.com>\n\n\tPR c++/47213\n\t* cp-tree.h (CLASSTYPE_VISIBILITY): Use\n\tTYPE_MAIN_DECL instead of TYPE_NAME.\n\t(CLASSTYPE_VISIBILITY_SPECIFIED): Likewise.\n\t* decl2.c (determine_visibility): Add check\n\tof CLASS_TYPE_P for underlying_type.\n\n2011-01-13  Kai Tietz  <kai.tietz@onevision.com>\n\n\tPR c++/47213\n\t* config/i386/cygming.h (TARGET_ASM_ASSEMBLE_VISIBILITY):\n\tPE specific hook.\n\t* config/i386/i386-protos.h (i386_pe_assemble_visibility):\n\tNew function prototype.\n\t* config/i386/winnt.c (i386_pe_assemble_visibility):\n\tWarn only if attribute was specified by user.\n\nFrom-SVN: r168763", "tree": {"sha": "278e301a60748bc6875711d5bc89ab30014083bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/278e301a60748bc6875711d5bc89ab30014083bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2b63a20016d041e501d6c6541d059befbb244b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2b63a20016d041e501d6c6541d059befbb244b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2b63a20016d041e501d6c6541d059befbb244b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2b63a20016d041e501d6c6541d059befbb244b9/comments", "author": null, "committer": null, "parents": [{"sha": "3752f75a6d54bf6a19a29da309f5433f8889f69f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3752f75a6d54bf6a19a29da309f5433f8889f69f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3752f75a6d54bf6a19a29da309f5433f8889f69f"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "9d053ab0325a47e93a59045df63e731074645ddf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2b63a20016d041e501d6c6541d059befbb244b9", "patch": "@@ -1,3 +1,13 @@\n+2011-01-13  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\tPR c++/47213\n+\t* config/i386/cygming.h (TARGET_ASM_ASSEMBLE_VISIBILITY):\n+\tPE specific hook.\n+\t* config/i386/i386-protos.h (i386_pe_assemble_visibility):\n+\tNew function prototype.\n+\t* config/i386/winnt.c (i386_pe_assemble_visibility):\n+\tWarn only if attribute was specified by user.\n+\n 2011-01-13  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/47251"}, {"sha": "9c32dda2e96521965a6e1ba1a77a6596256c7478", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=a2b63a20016d041e501d6c6541d059befbb244b9", "patch": "@@ -465,6 +465,9 @@ do {\t\t\t\t\t\t\\\n #define TARGET_CXX_ADJUST_CLASS_AT_DEFINITION i386_pe_adjust_class_at_definition\n #define TARGET_MANGLE_DECL_ASSEMBLER_NAME i386_pe_mangle_decl_assembler_name\n \n+#undef TARGET_ASM_ASSEMBLE_VISIBILITY\n+#define TARGET_ASM_ASSEMBLE_VISIBILITY i386_pe_assemble_visibility\n+\n /* Static stack checking is supported by means of probes.  */\n #define STACK_CHECK_STATIC_BUILTIN 1\n "}, {"sha": "4f90b502167a580b094f806612fc38d05f2d1a56", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=a2b63a20016d041e501d6c6541d059befbb244b9", "patch": "@@ -225,6 +225,7 @@ extern void i386_pe_asm_output_aligned_decl_common (FILE *, tree,\n extern void i386_pe_file_end (void);\n extern void i386_pe_start_function (FILE *, const char *, tree);\n extern void i386_pe_end_function (FILE *, const char *, tree);\n+extern void i386_pe_assemble_visibility (tree, int);\n extern tree i386_pe_mangle_decl_assembler_name (tree, tree);\n extern tree i386_pe_mangle_assembler_name (const char *);\n "}, {"sha": "169832fd36a954f0076b1357e5af6cc26f7bb85c", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=a2b63a20016d041e501d6c6541d059befbb244b9", "patch": "@@ -232,6 +232,22 @@ i386_pe_maybe_mangle_decl_assembler_name (tree decl, tree id)\n   return new_id;\n }\n \n+/* Emit an assembler directive to set symbol for DECL visibility to\n+   the visibility type VIS, which must not be VISIBILITY_DEFAULT.\n+   As for PE there is no hidden support in gas, we just warn for\n+   user-specified visibility attributes.  */\n+\n+void\n+i386_pe_assemble_visibility (tree decl,\n+\t\t\t     int vis ATTRIBUTE_UNUSED)\n+{\n+  if (!decl\n+      || !lookup_attribute (\"visibility\", DECL_ATTRIBUTES (decl)))\n+    return;\n+  warning (OPT_Wattributes, \"visibility attribute not supported \"\n+\t   \"in this configuration; ignored\");\n+}\n+\n /* This is used as a target hook to modify the DECL_ASSEMBLER_NAME\n    in the language-independent default hook\n    langhooks,c:lhd_set_decl_assembler_name ()"}, {"sha": "a57f978716527248f08a54fcd2bdfb5c09525044", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a2b63a20016d041e501d6c6541d059befbb244b9", "patch": "@@ -1,3 +1,12 @@\n+2011-01-13  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\tPR c++/47213\n+\t* cp-tree.h (CLASSTYPE_VISIBILITY): Use\n+\tTYPE_MAIN_DECL instead of TYPE_NAME.\n+\t(CLASSTYPE_VISIBILITY_SPECIFIED): Likewise.\n+\t* decl2.c (determine_visibility): Add check\n+\tof CLASS_TYPE_P for underlying_type.\n+\n 2011-01-12  Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>\n \n \t* cp-tree.h (begin_for_scope): New prototype."}, {"sha": "3d39b5567c140fe9f6d31ce3e430c2129b64de12", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=a2b63a20016d041e501d6c6541d059befbb244b9", "patch": "@@ -1221,9 +1221,9 @@ enum languages { lang_c, lang_cplusplus, lang_java };\n \n /* Gives the visibility specification for a class type.  */\n #define CLASSTYPE_VISIBILITY(TYPE)\t\t\\\n-\tDECL_VISIBILITY (TYPE_NAME (TYPE))\n+\tDECL_VISIBILITY (TYPE_MAIN_DECL (TYPE))\n #define CLASSTYPE_VISIBILITY_SPECIFIED(TYPE)\t\\\n-\tDECL_VISIBILITY_SPECIFIED (TYPE_NAME (TYPE))\n+\tDECL_VISIBILITY_SPECIFIED (TYPE_MAIN_DECL (TYPE))\n \n typedef struct GTY (()) tree_pair_s {\n   tree purpose;"}, {"sha": "72570c3cbb6a9833efe10e18d736bd0cb1713d7e", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=a2b63a20016d041e501d6c6541d059befbb244b9", "patch": "@@ -2073,7 +2073,8 @@ determine_visibility (tree decl)\n \t  tree underlying_type = TREE_TYPE (DECL_NAME (decl));\n \t  int underlying_vis = type_visibility (underlying_type);\n \t  if (underlying_vis == VISIBILITY_ANON\n-\t      || CLASSTYPE_VISIBILITY_SPECIFIED (underlying_type))\n+\t      || (CLASS_TYPE_P (underlying_type)\n+\t\t  && CLASSTYPE_VISIBILITY_SPECIFIED (underlying_type)))\n \t    constrain_visibility (decl, underlying_vis);\n \t  else\n \t    DECL_VISIBILITY (decl) = VISIBILITY_DEFAULT;"}, {"sha": "8762f9ac31b045373960a49e7d23d9968dd32006", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a2b63a20016d041e501d6c6541d059befbb244b9", "patch": "@@ -1,3 +1,8 @@\n+2011-01-13  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\tPR c++/47213\n+\t* g++.dg/ext/pr47213.C: New.\n+\n 2011-01-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gfortran.dg/cray_pointers_2.f90: Use dg-timeout-factor 4."}, {"sha": "b39013c8f58e82597261332655c5fc361646957e", "filename": "gcc/testsuite/g++.dg/ext/pr47213.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr47213.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b63a20016d041e501d6c6541d059befbb244b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr47213.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr47213.C?ref=a2b63a20016d041e501d6c6541d059befbb244b9", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile }\n+// { dg-options \"-fvisibility-ms-compat\" }\n+#include <typeinfo>\n+\n+template < typename T > void\n+bar ()\n+{\n+  typeid (T);\n+}\n+\n+void\n+foo ()\n+{\n+  bar < int () > ();\n+}"}]}