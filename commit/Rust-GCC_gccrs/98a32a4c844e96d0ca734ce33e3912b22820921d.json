{"sha": "98a32a4c844e96d0ca734ce33e3912b22820921d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThhMzJhNGM4NDRlOTZkMGNhNzM0Y2UzM2UzOTEyYjIyODIwOTIxZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-11-10T16:49:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-11-10T16:49:08Z"}, "message": "gengtype.c (new_structure): Append to structures list.\n\n\t* gengtype.c (new_structure): Append to structures list.\n\n\t(find_structure): Likewise.\n\nFrom-SVN: r242040", "tree": {"sha": "0bcce0ee88da460e483f1eb3ce1440db69fa2fc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bcce0ee88da460e483f1eb3ce1440db69fa2fc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98a32a4c844e96d0ca734ce33e3912b22820921d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98a32a4c844e96d0ca734ce33e3912b22820921d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98a32a4c844e96d0ca734ce33e3912b22820921d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98a32a4c844e96d0ca734ce33e3912b22820921d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd18c8c32a865a5432338d1959afefa42bebb718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd18c8c32a865a5432338d1959afefa42bebb718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd18c8c32a865a5432338d1959afefa42bebb718"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "4a380cbf46053562356601fc62a62a0ba9070a5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a32a4c844e96d0ca734ce33e3912b22820921d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a32a4c844e96d0ca734ce33e3912b22820921d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98a32a4c844e96d0ca734ce33e3912b22820921d", "patch": "@@ -1,3 +1,8 @@\n+2016-11-10  Jason Merrill  <jason@redhat.com>\n+\n+\t* gengtype.c (new_structure): Append to structures list.\n+\t(find_structure): Likewise.\n+\n 2016-11-10  Jim Wilson  <jim.wilson@linaro.org>\n \n \t* tree-loop-distribution.c (pg_add_dependence_edges): Return 2 if"}, {"sha": "a5795473b737f41e3b5ef3fab7ef4ab3b4c472a7", "filename": "gcc/gengtype.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a32a4c844e96d0ca734ce33e3912b22820921d/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a32a4c844e96d0ca734ce33e3912b22820921d/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=98a32a4c844e96d0ca734ce33e3912b22820921d", "patch": "@@ -744,10 +744,11 @@ new_structure (const char *name, enum typekind kind, struct fileloc *pos,\n   type_p s = NULL;\n   lang_bitmap bitmap = get_lang_bitmap (pos->file);\n   bool isunion = (kind == TYPE_UNION);\n+  type_p *p = &structures;\n \n   gcc_assert (union_or_struct_p (kind));\n \n-  for (si = structures; si != NULL; si = si->next)\n+  for (si = structures; si != NULL; p = &si->next, si = *p)\n     if (strcmp (name, si->u.s.tag) == 0 && UNION_P (si) == isunion)\n       {\n \ttype_p ls = NULL;\n@@ -793,8 +794,7 @@ new_structure (const char *name, enum typekind kind, struct fileloc *pos,\n       type_count++;\n       s = XCNEW (struct type);\n       s->state_number = -type_count;\n-      s->next = structures;\n-      structures = s;\n+      *p = s;\n     }\n \n   if (s->u.s.lang_struct && (s->u.s.lang_struct->u.s.bitmap & bitmap))\n@@ -829,21 +829,20 @@ find_structure (const char *name, enum typekind kind)\n {\n   type_p s;\n   bool isunion = (kind == TYPE_UNION);\n+  type_p *p = &structures;\n \n   gcc_assert (kind == TYPE_UNDEFINED || union_or_struct_p (kind));\n \n-  for (s = structures; s != NULL; s = s->next)\n+  for (s = structures; s != NULL; p = &s->next, s = *p)\n     if (strcmp (name, s->u.s.tag) == 0 && UNION_P (s) == isunion)\n       return s;\n \n   type_count++;\n   s = XCNEW (struct type);\n-  s->next = structures;\n   s->state_number = -type_count;\n-  structures = s;\n   s->kind = kind;\n   s->u.s.tag = name;\n-  structures = s;\n+  *p = s;\n   return s;\n }\n "}]}