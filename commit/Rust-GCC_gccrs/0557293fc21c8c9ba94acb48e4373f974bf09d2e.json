{"sha": "0557293fc21c8c9ba94acb48e4373f974bf09d2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU1NzI5M2ZjMjFjOGM5YmE5NGFjYjQ4ZTQzNzNmOTc0YmYwOWQyZQ==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2016-05-30T14:37:02Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2016-05-30T14:37:02Z"}, "message": "match.pd: optimize unsigned mul overflow check\n\ngcc/\n2016-05-28  Alexander Monakov  <amonakov@ispras.ru>\n            Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR tree-optimization/71289\n\t* match.pd (-1 / B < A, A > -1 / B): New transformations.\n\ngcc/testsuite/\n2016-05-28  Alexander Monakov  <amonakov@ispras.ru>\n\n\tPR tree-optimization/71289\n\t* gcc.dg/pr71289.c: New test.\n\n\nCo-Authored-By: Marc Glisse <marc.glisse@inria.fr>\n\nFrom-SVN: r236882", "tree": {"sha": "09ffb39fe015722f03d20261e2515223b6538e85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09ffb39fe015722f03d20261e2515223b6538e85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0557293fc21c8c9ba94acb48e4373f974bf09d2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0557293fc21c8c9ba94acb48e4373f974bf09d2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0557293fc21c8c9ba94acb48e4373f974bf09d2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0557293fc21c8c9ba94acb48e4373f974bf09d2e/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5b1fae41b02c97227598559e6d3601a109d9e49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5b1fae41b02c97227598559e6d3601a109d9e49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5b1fae41b02c97227598559e6d3601a109d9e49"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "80e53bac6a3c249cf69ad9cc46c25e4b4c2d62c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0557293fc21c8c9ba94acb48e4373f974bf09d2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0557293fc21c8c9ba94acb48e4373f974bf09d2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0557293fc21c8c9ba94acb48e4373f974bf09d2e", "patch": "@@ -1,3 +1,9 @@\n+2016-05-30  Alexander Monakov  <amonakov@ispras.ru>\n+\t    Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/71289\n+\t* match.pd (-1 / B < A, A > -1 / B): New transformations.\n+\n 2016-05-30  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-vect-loop.c (vect_transform_loop): Update likely bounds."}, {"sha": "953c0703d9216d5f1f7826eca65b2758fc4fc048", "filename": "gcc/match.pd", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0557293fc21c8c9ba94acb48e4373f974bf09d2e/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0557293fc21c8c9ba94acb48e4373f974bf09d2e/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=0557293fc21c8c9ba94acb48e4373f974bf09d2e", "patch": "@@ -2657,6 +2657,25 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n        && types_match (TREE_TYPE (@0), TREE_TYPE (@1)))\n    (out (imagpart @2) { build_zero_cst (TREE_TYPE (@0)); }))))\n \n+/* For unsigned operands, A > -1 / B checks whether A * B would overflow.\n+   Simplify it to __builtin_mul_overflow (A, B, <unused>).  */\n+/* -1 / B < A */\n+(for cmp (lt ge)\n+     out (ne eq)\n+ (simplify\n+  (cmp (trunc_div:s integer_all_onesp @1) @0)\n+  (if (TYPE_UNSIGNED (TREE_TYPE (@0)) && !VECTOR_TYPE_P (TREE_TYPE (@0)))\n+   (with { tree t = TREE_TYPE (@0), cpx = build_complex_type (t); }\n+    (out (imagpart (IFN_MUL_OVERFLOW:cpx @0 @1)) { build_zero_cst (t); })))))\n+\n+/* A > -1 / B */\n+(for cmp (gt le)\n+     out (ne eq)\n+ (simplify\n+  (cmp @0 (trunc_div:s integer_all_onesp @1))\n+  (if (TYPE_UNSIGNED (TREE_TYPE (@0)) && !VECTOR_TYPE_P (TREE_TYPE (@0)))\n+   (with { tree t = TREE_TYPE (@0), cpx = build_complex_type (t); }\n+    (out (imagpart (IFN_MUL_OVERFLOW:cpx @0 @1)) { build_zero_cst (t); })))))\n \n /* Simplification of math builtins.  These rules must all be optimizations\n    as well as IL simplifications.  If there is a possibility that the new"}, {"sha": "ae0a6691cdf1e6a9d707a051b8e91459c99c2f94", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0557293fc21c8c9ba94acb48e4373f974bf09d2e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0557293fc21c8c9ba94acb48e4373f974bf09d2e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0557293fc21c8c9ba94acb48e4373f974bf09d2e", "patch": "@@ -1,3 +1,8 @@\n+2016-05-30  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\tPR tree-optimization/71289\n+\t* gcc.dg/pr71289.c: New test.\n+\n 2016-05-30  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR middle-end/71269"}, {"sha": "39837b93365f352249d6e0354f5b5f872fc45e5f", "filename": "gcc/testsuite/gcc.dg/pr71289.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0557293fc21c8c9ba94acb48e4373f974bf09d2e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71289.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0557293fc21c8c9ba94acb48e4373f974bf09d2e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71289.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71289.c?ref=0557293fc21c8c9ba94acb48e4373f974bf09d2e", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized-raw\" } */\n+\n+int f(unsigned a, unsigned b, unsigned *c)\n+{\n+  if (a > -1 / b)\n+    return -1;\n+  *c = a * b;\n+  return 0;\n+}\n+\n+void g(unsigned long long a, unsigned long long b, unsigned long long *c)\n+{\n+  if (a <= -1 / b)\n+    *c = a * b;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"trunc_div_expr\" \"optimized\" } } */"}]}