{"sha": "0844e4324e7a6a92d76ff781e61ab086f528881d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg0NGU0MzI0ZTdhNmE5MmQ3NmZmNzgxZTYxYWIwODZmNTI4ODgxZA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-10-22T07:29:03Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-10-22T07:29:03Z"}, "message": "i386: Enable AVX512 memory broadcast for INT logic\n\nMany AVX512 vector operations can broadcast from a scalar memory source.\nThis patch enables memory broadcast for INT logic operations.\n\ngcc/\n\n\tPR target/72782\n\t* config/i386/sse.md (*<code><mode>3_bcst): New.\n\ngcc/testsuite/\n\n\tPR target/72782\n\t* gcc.target/i386/avx512f-and-di-zmm-1.c: New test.\n\t* gcc.target/i386/avx512f-and-si-zmm-1.c: Likewise.\n\t* gcc.target/i386/avx512f-and-si-zmm-2.c: Likewise.\n\t* gcc.target/i386/avx512f-and-si-zmm-3.c: Likewise.\n\t* gcc.target/i386/avx512f-and-si-zmm-4.c: Likewise.\n\t* gcc.target/i386/avx512f-and-si-zmm-5.c: Likewise.\n\t* gcc.target/i386/avx512f-and-si-zmm-6.c: Likewise.\n\t* gcc.target/i386/avx512f-or-di-zmm-1.c: Likewise.\n\t* gcc.target/i386/avx512f-or-si-zmm-1.c: Likewise.\n\t* gcc.target/i386/avx512f-or-si-zmm-2.c: Likewise.\n\t* gcc.target/i386/avx512f-or-si-zmm-3.c: Likewise.\n\t* gcc.target/i386/avx512f-or-si-zmm-4.c: Likewise.\n\t* gcc.target/i386/avx512f-or-si-zmm-5.c: Likewise.\n\t* gcc.target/i386/avx512f-or-si-zmm-6.c: Likewise.\n\t* gcc.target/i386/avx512f-xor-di-zmm-1.c: Likewise.\n\t* gcc.target/i386/avx512f-xor-si-zmm-1.c: Likewise.\n\t* gcc.target/i386/avx512f-xor-si-zmm-2.c: Likewise.\n\t* gcc.target/i386/avx512f-xor-si-zmm-3.c: Likewise.\n\t* gcc.target/i386/avx512f-xor-si-zmm-4.c: Likewise.\n\t* gcc.target/i386/avx512f-xor-si-zmm-5.c: Likewise.\n\t* gcc.target/i386/avx512f-xor-si-zmm-6.c: Likewise.\n\t* gcc.target/i386/avx512vl-and-si-xmm-1.c: Likewise.\n\t* gcc.target/i386/avx512vl-and-si-ymm-1.c: Likewise.\n\t* gcc.target/i386/avx512vl-or-si-xmm-1.c: Likewise.\n\t* gcc.target/i386/avx512vl-or-si-ymm-1.c: Likewise.\n\t* gcc.target/i386/avx512vl-xor-si-xmm-1.c: Likewise.\n\t* gcc.target/i386/avx512vl-xor-si-ymm-1.c: Likewise.\n\nFrom-SVN: r265369", "tree": {"sha": "a386f0dff9a948e5c26b12b89ebead8a589bb1d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a386f0dff9a948e5c26b12b89ebead8a589bb1d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0844e4324e7a6a92d76ff781e61ab086f528881d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0844e4324e7a6a92d76ff781e61ab086f528881d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0844e4324e7a6a92d76ff781e61ab086f528881d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0844e4324e7a6a92d76ff781e61ab086f528881d/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26d50717b8fa7927e62f78092435db0e0c178035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d50717b8fa7927e62f78092435db0e0c178035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d50717b8fa7927e62f78092435db0e0c178035"}], "stats": {"total": 372, "additions": 372, "deletions": 0}, "files": [{"sha": "9b735458d7c667e178eb586e2963a14ceada77d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -1,3 +1,8 @@\n+2018-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/72782\n+\t* config/i386/sse.md (*<code><mode>3_bcst): New.\n+\n 2018-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/72782"}, {"sha": "e991da96aeea09167412d86b6ae763153366d494", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -12324,6 +12324,18 @@\n \t      ]\n \t      (const_string \"<sseinsnmode>\")))])\n \n+(define_insn \"*<code><mode>3_bcst\"\n+  [(set (match_operand:VI48_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(any_logic:VI48_AVX512VL\n+\t  (vec_duplicate:VI48_AVX512VL\n+\t    (match_operand:<ssescalarmode> 1 \"memory_operand\" \"m\"))\n+\t  (match_operand:VI48_AVX512VL 2 \"register_operand\" \"v\")))]\n+  \"TARGET_AVX512F && <mask_avx512vl_condition>\"\n+  \"vp<logic><ssemodesuffix>\\t{%1<avx512bcst>, %2, %0<mask_operand3>|%0<mask_operand3>, %2, %1<avx512bcst>}\"\n+  [(set_attr \"type\" \"sseiadd\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_insn \"<avx512>_testm<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n \t(unspec:<avx512fmaskmode>"}, {"sha": "43b0ab56ec19c11da3fffc31336a0e6f57f539eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -1,3 +1,34 @@\n+2018-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/72782\n+\t* gcc.target/i386/avx512f-and-di-zmm-1.c: New test.\n+\t* gcc.target/i386/avx512f-and-si-zmm-1.c: Likewise.\n+\t* gcc.target/i386/avx512f-and-si-zmm-2.c: Likewise.\n+\t* gcc.target/i386/avx512f-and-si-zmm-3.c: Likewise.\n+\t* gcc.target/i386/avx512f-and-si-zmm-4.c: Likewise.\n+\t* gcc.target/i386/avx512f-and-si-zmm-5.c: Likewise.\n+\t* gcc.target/i386/avx512f-and-si-zmm-6.c: Likewise.\n+\t* gcc.target/i386/avx512f-or-di-zmm-1.c: Likewise.\n+\t* gcc.target/i386/avx512f-or-si-zmm-1.c: Likewise.\n+\t* gcc.target/i386/avx512f-or-si-zmm-2.c: Likewise.\n+\t* gcc.target/i386/avx512f-or-si-zmm-3.c: Likewise.\n+\t* gcc.target/i386/avx512f-or-si-zmm-4.c: Likewise.\n+\t* gcc.target/i386/avx512f-or-si-zmm-5.c: Likewise.\n+\t* gcc.target/i386/avx512f-or-si-zmm-6.c: Likewise.\n+\t* gcc.target/i386/avx512f-xor-di-zmm-1.c: Likewise.\n+\t* gcc.target/i386/avx512f-xor-si-zmm-1.c: Likewise.\n+\t* gcc.target/i386/avx512f-xor-si-zmm-2.c: Likewise.\n+\t* gcc.target/i386/avx512f-xor-si-zmm-3.c: Likewise.\n+\t* gcc.target/i386/avx512f-xor-si-zmm-4.c: Likewise.\n+\t* gcc.target/i386/avx512f-xor-si-zmm-5.c: Likewise.\n+\t* gcc.target/i386/avx512f-xor-si-zmm-6.c: Likewise.\n+\t* gcc.target/i386/avx512vl-and-si-xmm-1.c: Likewise.\n+\t* gcc.target/i386/avx512vl-and-si-ymm-1.c: Likewise.\n+\t* gcc.target/i386/avx512vl-or-si-xmm-1.c: Likewise.\n+\t* gcc.target/i386/avx512vl-or-si-ymm-1.c: Likewise.\n+\t* gcc.target/i386/avx512vl-xor-si-xmm-1.c: Likewise.\n+\t* gcc.target/i386/avx512vl-xor-si-ymm-1.c: Likewise.\n+\n 2018-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/72782"}, {"sha": "e919b26c70b58330750dda846a137a2bbaa56add", "filename": "gcc/testsuite/gcc.target/i386/avx512f-and-di-zmm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-di-zmm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-di-zmm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-di-zmm-1.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpandq\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastq\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op and\n+#define suffix epi64\n+#define SCALAR long long\n+\n+#include \"avx512-binop-1.h\""}, {"sha": "0e7d85444770afd3427ad3dfe393982396b11100", "filename": "gcc/testsuite/gcc.target/i386/avx512f-and-si-zmm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-1.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpandd\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op and\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-1.h\""}, {"sha": "19596f65f775d4be5af304db2852345d0bee6588", "filename": "gcc/testsuite/gcc.target/i386/avx512f-and-si-zmm-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-2.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpandd\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op and\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-2.h\""}, {"sha": "a3de58a23d6084d7839a4184ee614c502b3c63a4", "filename": "gcc/testsuite/gcc.target/i386/avx512f-and-si-zmm-3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-3.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpandd\\[^\\n\\]*%zmm\\[0-9\\]+\" 1 } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op and\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-3.h\""}, {"sha": "ce50edd375f7d4079cc88de6fb1965338b0ef961", "filename": "gcc/testsuite/gcc.target/i386/avx512f-and-si-zmm-4.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-4.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpandd\\[ \\\\t\\]+%zmm\\[0-9\\]+, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op and\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-4.h\""}, {"sha": "d3fc8bac169ed605c97d48b87afe23100c39d677", "filename": "gcc/testsuite/gcc.target/i386/avx512f-and-si-zmm-5.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-5.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpandd\\[ \\\\t\\]+\\[^\\n\\]*\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op and\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-5.h\""}, {"sha": "dfc3f91bf479be4cf676463880cd88bf5583145a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-and-si-zmm-6.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-and-si-zmm-6.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpandd\\[ \\\\t\\]+\\[^\\n\\]*\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op and\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-6.h\""}, {"sha": "7bbd971c0e822bca18239e1fab2d2044b4e87fd3", "filename": "gcc/testsuite/gcc.target/i386/avx512f-or-di-zmm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-di-zmm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-di-zmm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-di-zmm-1.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vporq\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastq\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op or\n+#define suffix epi64\n+#define SCALAR long long\n+\n+#include \"avx512-binop-1.h\""}, {"sha": "6e5583d0ae66735973a81b9d57d3462d72ccb97e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-or-si-zmm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-1.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpord\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op or\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-1.h\""}, {"sha": "c631b40f98584dc5d2e129bcae4063d79f7fce16", "filename": "gcc/testsuite/gcc.target/i386/avx512f-or-si-zmm-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-2.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpord\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op or\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-2.h\""}, {"sha": "3d669e3c7c8f46dd72012f931f8a0abf63a70495", "filename": "gcc/testsuite/gcc.target/i386/avx512f-or-si-zmm-3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-3.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpord\\[^\\n\\]*%zmm\\[0-9\\]+\" 1 } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op or\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-3.h\""}, {"sha": "78c11ae3a69590931b6fc095b11d29316378dc4e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-or-si-zmm-4.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-4.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpord\\[ \\\\t\\]+%zmm\\[0-9\\]+, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op or\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-4.h\""}, {"sha": "2002688e075e0a551d845d1f0a61e24044fe9a4c", "filename": "gcc/testsuite/gcc.target/i386/avx512f-or-si-zmm-5.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-5.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpord\\[ \\\\t\\]+\\[^\\n\\]*\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op or\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-5.h\""}, {"sha": "031e193eb9e184b07a5d835a3e68dbb934b354db", "filename": "gcc/testsuite/gcc.target/i386/avx512f-or-si-zmm-6.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-or-si-zmm-6.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpord\\[ \\\\t\\]+\\[^\\n\\]*\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op or\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-6.h\""}, {"sha": "6ea551fb60398d2b469ceb502f4fada2cb5fc0a8", "filename": "gcc/testsuite/gcc.target/i386/avx512f-xor-di-zmm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-di-zmm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-di-zmm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-di-zmm-1.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpxorq\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastq\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op xor\n+#define suffix epi64\n+#define SCALAR long long\n+\n+#include \"avx512-binop-1.h\""}, {"sha": "d0cb66c117994ef6b5a1f3ed13bdab0d98150b4e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-xor-si-zmm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-1.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpxord\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op xor\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-1.h\""}, {"sha": "5d241e4326401f4356f6ffdc6281d340b416d86c", "filename": "gcc/testsuite/gcc.target/i386/avx512f-xor-si-zmm-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-2.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpxord\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op xor\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-2.h\""}, {"sha": "50289701bcca134a920ee1daaead6370303117e2", "filename": "gcc/testsuite/gcc.target/i386/avx512f-xor-si-zmm-3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-3.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpxord\\[^\\n\\]*%zmm\\[0-9\\]+\" 1 } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op xor\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-3.h\""}, {"sha": "55f0e1b7cfc88c7b4f3201e26971ea8edcafa089", "filename": "gcc/testsuite/gcc.target/i386/avx512f-xor-si-zmm-4.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-4.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpxord\\[ \\\\t\\]+%zmm\\[0-9\\]+, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op xor\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-4.h\""}, {"sha": "efd62cbb8d2af72a4ceb5a55be43b33c3ba7be15", "filename": "gcc/testsuite/gcc.target/i386/avx512f-xor-si-zmm-5.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-5.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpxord\\[ \\\\t\\]+\\[^\\n\\]*\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op xor\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-5.h\""}, {"sha": "cc7a44ba53de35378d74372f4a75ab26a40df95c", "filename": "gcc/testsuite/gcc.target/i386/avx512f-xor-si-zmm-6.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-xor-si-zmm-6.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpxord\\[ \\\\t\\]+\\[^\\n\\]*\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512i\n+#define vec 512\n+#define op xor\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-6.h\""}, {"sha": "da295152fa6a53719f4d8a727e77e77d0acfde99", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-and-si-xmm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-and-si-xmm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-and-si-xmm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-and-si-xmm-1.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512vl -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpandd\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %xmm\\[0-9\\]+, %xmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%xmm\\[0-9\\]+\" } } */\n+\n+#include <immintrin.h>\n+\n+__m128i\n+foo (__m128i x, int *f)\n+{\n+  return (__m128i) ((__v4su) x & (__v4su) _mm_set1_epi32 (*f));\n+}"}, {"sha": "f2ba6c6eb867135ea40a354478036206a5af7431", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-and-si-ymm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-and-si-ymm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-and-si-ymm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-and-si-ymm-1.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512vl -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpandd\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %ymm\\[0-9\\]+, %ymm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%ymm\\[0-9\\]+\" } } */\n+\n+#include <immintrin.h>\n+\n+__m256i\n+foo (__m256i x, int *f)\n+{\n+  return (__m256i) ((__v8su) x & (__v8su) _mm256_set1_epi32 (*f));\n+}"}, {"sha": "66ab5504ce7a84031d39a59618dda1f29e9e726c", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-or-si-xmm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-or-si-xmm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-or-si-xmm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-or-si-xmm-1.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512vl -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpord\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %xmm\\[0-9\\]+, %xmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%xmm\\[0-9\\]+\" } } */\n+\n+#define type __m128i\n+#define vec\n+#define op or\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-1.h\""}, {"sha": "3a87c34439fd9508349fe1d15cc16a096526ac03", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-or-si-ymm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-or-si-ymm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-or-si-ymm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-or-si-ymm-1.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512vl -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpord\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %ymm\\[0-9\\]+, %ymm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%ymm\\[0-9\\]+\" } } */\n+\n+#define type __m256i\n+#define vec 256\n+#define op or\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-1.h\""}, {"sha": "8197568ccf79ff8fdaa1eee22ceb1f674146f62c", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-xor-si-xmm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-xor-si-xmm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-xor-si-xmm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-xor-si-xmm-1.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512vl -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpxord\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %xmm\\[0-9\\]+, %xmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%xmm\\[0-9\\]+\" } } */\n+\n+#define type __m128i\n+#define vec\n+#define op xor\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-1.h\""}, {"sha": "06933fe60c45953fe67249e8cd10bf5c5877defe", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-xor-si-ymm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-xor-si-ymm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0844e4324e7a6a92d76ff781e61ab086f528881d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-xor-si-ymm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-xor-si-ymm-1.c?ref=0844e4324e7a6a92d76ff781e61ab086f528881d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512vl -O2\" } */\n+/* { dg-final { scan-assembler-times \"vpxord\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %ymm\\[0-9\\]+, %ymm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vpbroadcastd\\[^\\n\\]*%ymm\\[0-9\\]+\" } } */\n+\n+#define type __m256i\n+#define vec 256\n+#define op xor\n+#define suffix epi32\n+#define SCALAR int\n+\n+#include \"avx512-binop-1.h\""}]}