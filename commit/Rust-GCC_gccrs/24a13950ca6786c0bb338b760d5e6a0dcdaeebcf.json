{"sha": "24a13950ca6786c0bb338b760d5e6a0dcdaeebcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRhMTM5NTBjYTY3ODZjMGJiMzM4Yjc2MGQ1ZTZhMGRjZGFlZWJjZg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-07-13T20:35:03Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-07-13T20:35:03Z"}, "message": "(store_field): Set MEM_IN_STRUCT_P on object and\nblk_object.\n\nFrom-SVN: r7767", "tree": {"sha": "db75d08543ff2bdef2941c943b4db580e2bdf2ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db75d08543ff2bdef2941c943b4db580e2bdf2ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24a13950ca6786c0bb338b760d5e6a0dcdaeebcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24a13950ca6786c0bb338b760d5e6a0dcdaeebcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24a13950ca6786c0bb338b760d5e6a0dcdaeebcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24a13950ca6786c0bb338b760d5e6a0dcdaeebcf/comments", "author": null, "committer": null, "parents": [{"sha": "6d9f1f5f63493bfe17c9b648084abe348d842834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d9f1f5f63493bfe17c9b648084abe348d842834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d9f1f5f63493bfe17c9b648084abe348d842834"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "e7649868eda2c1472d01a5234252ed44a5138c41", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24a13950ca6786c0bb338b760d5e6a0dcdaeebcf/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24a13950ca6786c0bb338b760d5e6a0dcdaeebcf/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=24a13950ca6786c0bb338b760d5e6a0dcdaeebcf", "patch": "@@ -3054,6 +3054,8 @@ store_field (target, bitsize, bitpos, mode, exp, value_mode,\n \t\t\t\t      GET_MODE_SIZE (GET_MODE (target)), 0);\n       rtx blk_object = copy_rtx (object);\n \n+      MEM_IN_STRUCT_P (object) = 1;\n+      MEM_IN_STRUCT_P (blk_object) = 1;\n       PUT_MODE (blk_object, BLKmode);\n \n       if (bitsize != GET_MODE_BITSIZE (GET_MODE (target)))"}]}