{"sha": "7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RjODNlYmM0YTE1YmVlYmE0MWUwMWEwZTFhOWQzOTgxYmM2MTgyYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-10-04T14:35:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-10-04T14:35:32Z"}, "message": "re PR middle-end/33641 (perlbmk gets type mismatch in pointer plus expression)\n\n2007-10-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/33641\n\t* tree-cfg.c (verify_gimple_expr): Operand one of POINTER_PLUS_EXPR\n\tdoes not need to be of INTEGER_TYPE.\n\t(verify_gimple_2): New function split out from ...\n\t(verify_gimple_1): ... here.  ICE if there was an error during\n\tverification.\n\n\t* gcc.c-torture/compile/pr33641.c: New testcase.\n\nFrom-SVN: r129010", "tree": {"sha": "a77d8c7c1813aa4bbe02c77ff19a52f0fd970cda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a77d8c7c1813aa4bbe02c77ff19a52f0fd970cda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa33a305e27551c4dd02a603725f4fd649844daa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa33a305e27551c4dd02a603725f4fd649844daa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa33a305e27551c4dd02a603725f4fd649844daa"}], "stats": {"total": 65, "additions": 54, "deletions": 11}, "files": [{"sha": "eef16c56a44552cd26ad181d67c1849449992f81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c", "patch": "@@ -1,3 +1,12 @@\n+2007-10-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/33641\n+\t* tree-cfg.c (verify_gimple_expr): Operand one of POINTER_PLUS_EXPR\n+\tdoes not need to be of INTEGER_TYPE.\n+\t(verify_gimple_2): New function split out from ...\n+\t(verify_gimple_1): ... here.  ICE if there was an error during\n+\tverification.\n+\n 2007-10-04  Michael Matz  <matz@suse.de>\n \n \tPR rtl-optimization/33653"}, {"sha": "5f1e3d7eaa3428276c2626ada2700eb18703686d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c", "patch": "@@ -1,3 +1,8 @@\n+2007-10-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/33641\n+\t* gcc.c-torture/compile/pr33641.c: New testcase.\n+\n 2007-10-04  Michael Matz  <matz@suse.de>\n \n \tPR rtl-optimization/33653"}, {"sha": "112f7032792bf6a5f2a4125ba4882e6c61526dd2", "filename": "gcc/testsuite/gcc.c-torture/compile/pr33641.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33641.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33641.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33641.c?ref=7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c", "patch": "@@ -0,0 +1,12 @@\n+/* This failed with type checking enabled.  */\n+\n+typedef enum { one, two } exp;\n+extern exp pe;\n+extern char pt[256];\n+void psd (void (*f) (void *), void *p);\n+static void rle (void *e) { }\n+void\n+foo (void)\n+{\n+  psd ((void (*)(void *)) (rle), (void *) (pt + pe));\n+}"}, {"sha": "ad319244c4d264c660b6847d8e6c1a6cdcd9718a", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 28, "deletions": 11, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=7dc83ebc4a15beeba41e01a0e1a9d3981bc6182c", "patch": "@@ -3724,7 +3724,6 @@ verify_gimple_expr (tree expr)\n \t    return true;\n \t  }\n \tif (!POINTER_TYPE_P (TREE_TYPE (op0))\n-\t    || TREE_CODE (TREE_TYPE (op1)) != INTEGER_TYPE\n \t    || !useless_type_conversion_p (type, TREE_TYPE (op0))\n \t    || !useless_type_conversion_p (sizetype, TREE_TYPE (op1)))\n \t  {\n@@ -4023,12 +4022,14 @@ verify_gimple_stmt (tree stmt)\n     }\n }\n \n-/* Verify the GIMPLE statements inside the statement list STMTS.  */\n+/* Verify the GIMPLE statements inside the statement list STMTS.\n+   Returns true if there were any errors.  */\n \n-void\n-verify_gimple_1 (tree stmts)\n+static bool\n+verify_gimple_2 (tree stmts)\n {\n   tree_stmt_iterator tsi;\n+  bool err = false;\n \n   for (tsi = tsi_start (stmts); !tsi_end_p (tsi); tsi_next (&tsi))\n     {\n@@ -4037,28 +4038,44 @@ verify_gimple_1 (tree stmts)\n       switch (TREE_CODE (stmt))\n \t{\n \tcase BIND_EXPR:\n-\t  verify_gimple_1 (BIND_EXPR_BODY (stmt));\n+\t  err |= verify_gimple_2 (BIND_EXPR_BODY (stmt));\n \t  break;\n \n \tcase TRY_CATCH_EXPR:\n \tcase TRY_FINALLY_EXPR:\n-\t  verify_gimple_1 (TREE_OPERAND (stmt, 0));\n-\t  verify_gimple_1 (TREE_OPERAND (stmt, 1));\n+\t  err |= verify_gimple_2 (TREE_OPERAND (stmt, 0));\n+\t  err |= verify_gimple_2 (TREE_OPERAND (stmt, 1));\n \t  break;\n \n \tcase CATCH_EXPR:\n-\t  verify_gimple_1 (CATCH_BODY (stmt));\n+\t  err |= verify_gimple_2 (CATCH_BODY (stmt));\n \t  break;\n \n \tcase EH_FILTER_EXPR:\n-\t  verify_gimple_1 (EH_FILTER_FAILURE (stmt));\n+\t  err |= verify_gimple_2 (EH_FILTER_FAILURE (stmt));\n \t  break;\n \n \tdefault:\n-\t  if (verify_gimple_stmt (stmt))\n-\t    debug_generic_expr (stmt);\n+\t  {\n+\t    bool err2 = verify_gimple_stmt (stmt);\n+\t    if (err2)\n+\t      debug_generic_expr (stmt);\n+\t    err |= err2;\n+\t  }\n \t}\n     }\n+\n+  return err;\n+}\n+\n+\n+/* Verify the GIMPLE statements inside the statement list STMTS.  */\n+\n+void\n+verify_gimple_1 (tree stmts)\n+{\n+  if (verify_gimple_2 (stmts))\n+    internal_error (\"verify_gimple failed\");\n }\n \n /* Verify the GIMPLE statements inside the current function.  */"}]}