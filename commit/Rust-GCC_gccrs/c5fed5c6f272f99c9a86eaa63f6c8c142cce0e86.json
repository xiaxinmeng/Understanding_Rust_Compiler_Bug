{"sha": "c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVmZWQ1YzZmMjcyZjk5YzlhODZlYWE2M2Y2YzhjMTQyY2NlMGU4Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-10-31T17:08:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-10-31T17:08:36Z"}, "message": "re PR c++/78089 (__builtin_shuffle parsing bug)\n\n\tPR c++/78089\n\t* parser.c (cp_parser_postfix_expression): Replace return statement in\n\tthe first switch with setting postfix_expression to the return\n\texpression and break;.\n\n\t* c-c++-common/builtin-shuffle-1.c: New test.\n\t* g++.dg/cpp0x/addressof3.C: New test.\n\nFrom-SVN: r241710", "tree": {"sha": "ae96439c0919731e3e449e96f7e324ec170d665f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae96439c0919731e3e449e96f7e324ec170d665f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f04c1e0a56efa150b061810437f14bec45e85783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04c1e0a56efa150b061810437f14bec45e85783", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f04c1e0a56efa150b061810437f14bec45e85783"}], "stats": {"total": 87, "additions": 73, "deletions": 14}, "files": [{"sha": "b657f62f402489f9432c8dae984402187df35a6a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86", "patch": "@@ -1,5 +1,10 @@\n 2016-10-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/78089\n+\t* parser.c (cp_parser_postfix_expression): Replace return statement in\n+\tthe first switch with setting postfix_expression to the return\n+\texpression and break;.\n+\n \tPR c++/77886\n \t* g++.dg/warn/Wimplicit-fallthrough-2.C: New test.\n "}, {"sha": "e44364850537736539e029f22513fb8ca13456b7", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 31, "deletions": 14, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86", "patch": "@@ -6441,7 +6441,10 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t   can be used in constant-expressions.  */\n \tif (!cast_valid_in_integral_constant_expression_p (type)\n \t    && cp_parser_non_integral_constant_expression (parser, NIC_CAST))\n-\t  return error_mark_node;\n+\t  {\n+\t    postfix_expression = error_mark_node;\n+\t    break;\n+\t  }\n \n \tswitch (keyword)\n \t  {\n@@ -6521,7 +6524,7 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \tparser->type_definition_forbidden_message = saved_message;\n \t/* `typeid' may not appear in an integral constant expression.  */\n \tif (cp_parser_non_integral_constant_expression (parser, NIC_TYPEID))\n-\t  return error_mark_node;\n+\t  postfix_expression = error_mark_node;\n       }\n       break;\n \n@@ -6615,7 +6618,10 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t\t    /*cast_p=*/false, /*allow_expansion_p=*/true,\n \t\t    /*non_constant_p=*/NULL);\n \tif (vec == NULL)\n-\t  return error_mark_node;\n+\t  {\n+\t    postfix_expression = error_mark_node;\n+\t    break;\n+\t  }\n \n \tFOR_EACH_VEC_ELT (*vec, i, p)\n \t  mark_exp_read (p);\n@@ -6624,10 +6630,15 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t  {\n \t  case RID_ADDRESSOF:\n \t    if (vec->length () == 1)\n-\t      return cp_build_addressof (loc, (*vec)[0], tf_warning_or_error);\n-\t    error_at (loc, \"wrong number of arguments to \"\n-\t\t\t   \"%<__builtin_addressof%>\");\n-\t    return error_mark_node;\n+\t      postfix_expression\n+\t\t= cp_build_addressof (loc, (*vec)[0], tf_warning_or_error);\n+\t    else\n+\t      {\n+\t\terror_at (loc, \"wrong number of arguments to \"\n+\t\t\t       \"%<__builtin_addressof%>\");\n+\t\tpostfix_expression = error_mark_node;\n+\t      }\n+\t    break;\n \n \t  case RID_BUILTIN_LAUNDER:\n \t    if (vec->length () == 1)\n@@ -6643,14 +6654,20 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \n \t  case RID_BUILTIN_SHUFFLE:\n \t    if (vec->length () == 2)\n-\t      return build_x_vec_perm_expr (loc, (*vec)[0], NULL_TREE,\n-\t\t\t\t\t    (*vec)[1], tf_warning_or_error);\n+\t      postfix_expression\n+\t\t= build_x_vec_perm_expr (loc, (*vec)[0], NULL_TREE,\n+\t\t\t\t\t (*vec)[1], tf_warning_or_error);\n \t    else if (vec->length () == 3)\n-\t      return build_x_vec_perm_expr (loc, (*vec)[0], (*vec)[1],\n-\t\t\t\t\t    (*vec)[2], tf_warning_or_error);\n-\t    error_at (loc, \"wrong number of arguments to \"\n-\t\t\t   \"%<__builtin_shuffle%>\");\n-\t    return error_mark_node;\n+\t      postfix_expression\n+\t\t= build_x_vec_perm_expr (loc, (*vec)[0], (*vec)[1],\n+\t\t\t\t\t (*vec)[2], tf_warning_or_error);\n+\t    else\n+\t      {\n+\t\terror_at (loc, \"wrong number of arguments to \"\n+\t\t\t       \"%<__builtin_shuffle%>\");\n+\t\tpostfix_expression = error_mark_node;\n+\t      }\n+\t    break;\n \n \t  default:\n \t    gcc_unreachable ();"}, {"sha": "0d1a01395a83e7a775dbef77f5052209bf8082e8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86", "patch": "@@ -1,3 +1,9 @@\n+2016-10-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/78089\n+\t* c-c++-common/builtin-shuffle-1.c: New test.\n+\t* g++.dg/cpp0x/addressof3.C: New test.\n+\n 2016-10-31  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tAdd tests for a const member and a reference member for launder."}, {"sha": "30fd69082dd9db7aedddec4bb56e174ade27b063", "filename": "gcc/testsuite/c-c++-common/builtin-shuffle-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-shuffle-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-shuffle-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-shuffle-1.c?ref=c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86", "patch": "@@ -0,0 +1,22 @@\n+/* PR c++/78089 */\n+/* { dg-do run } */\n+\n+typedef int V __attribute__((vector_size (16)));\n+V a, b, c;\n+\n+int\n+foo ()\n+{\n+  return __builtin_shuffle (a, b, c)[3];\n+}\n+\n+int\n+main ()\n+{\n+  a = (V) { 1, 2, 3, 4 };\n+  b = (V) { 5, 6, 7, 8 };\n+  c = (V) { 7, 2, 5, 6 };\n+  if (foo () != 7)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "fa517908ae3ce9f1deec339ed1542384fb57080a", "filename": "gcc/testsuite/g++.dg/cpp0x/addressof3.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Faddressof3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Faddressof3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Faddressof3.C?ref=c5fed5c6f272f99c9a86eaa63f6c8c142cce0e86", "patch": "@@ -0,0 +1,9 @@\n+// { dg-do compile }\n+\n+struct S { int foo (); int s; };\n+int a[10];\n+int b;\n+S c;\n+int d = __builtin_addressof (a)[0][0];\n+int e = __builtin_addressof (b)[0];\n+int f = __builtin_addressof (c)->foo ();"}]}