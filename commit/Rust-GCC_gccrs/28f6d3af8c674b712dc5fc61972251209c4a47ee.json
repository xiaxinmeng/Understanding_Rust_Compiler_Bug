{"sha": "28f6d3af8c674b712dc5fc61972251209c4a47ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhmNmQzYWY4YzY3NGI3MTJkYzVmYzYxOTcyMjUxMjA5YzRhNDdlZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-05-01T10:32:59Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-05-01T10:32:59Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r864", "tree": {"sha": "ebae6f1e4d843dee5918ca3ee124336e76c70fe4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebae6f1e4d843dee5918ca3ee124336e76c70fe4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28f6d3af8c674b712dc5fc61972251209c4a47ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28f6d3af8c674b712dc5fc61972251209c4a47ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28f6d3af8c674b712dc5fc61972251209c4a47ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28f6d3af8c674b712dc5fc61972251209c4a47ee/comments", "author": null, "committer": null, "parents": [{"sha": "95ca4f96774ac127b28da0f31e8b04a8df1d6e3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95ca4f96774ac127b28da0f31e8b04a8df1d6e3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95ca4f96774ac127b28da0f31e8b04a8df1d6e3a"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "8db1fb9fef1cb1fae8b236d135e063cd786bde61", "filename": "gcc/combine.c", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f6d3af8c674b712dc5fc61972251209c4a47ee/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f6d3af8c674b712dc5fc61972251209c4a47ee/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=28f6d3af8c674b712dc5fc61972251209c4a47ee", "patch": "@@ -8054,14 +8054,33 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t\t    if (! refers_to_regno_p (i, i + 1, PATTERN (place), 0))\n \t\t      {\n \t\t\trtx piece = gen_rtx (REG, word_mode, i);\n-\t\t\trtx use_insn\n-\t\t\t  = emit_insn_before (gen_rtx (USE, VOIDmode, piece),\n-\t\t\t\t\t      place);\n+\t\t\trtx p;\n+\n+\t\t\t/* See if we already placed a USE note for this\n+\t\t\t   register in front of PLACE.  */\n+\t\t\tfor (p = place;\n+\t\t\t     GET_CODE (PREV_INSN (p)) == INSN\n+\t\t\t     && GET_CODE (PATTERN (PREV_INSN (p))) == USE;\n+\t\t\t     p = PREV_INSN (p))\n+\t\t\t  if (rtx_equal_p (piece,\n+\t\t\t\t\t   XEXP (PATTERN (PREV_INSN (p)), 0)))\n+\t\t\t    {\n+\t\t\t      p = 0;\n+\t\t\t      break;\n+\t\t\t    }\n+\n+\t\t\tif (p)\n+\t\t\t  {\n+\t\t\t    rtx use_insn\n+\t\t\t      = emit_insn_before (gen_rtx (USE, VOIDmode,\n+\t\t\t\t\t\t\t   piece),\n+\t\t\t\t\t\t  p);\n+\t\t\t    REG_NOTES (use_insn)\n+\t\t\t      = gen_rtx (EXPR_LIST, REG_DEAD, piece,\n+\t\t\t\t\t REG_NOTES (use_insn));\n+\t\t\t  }\n \n \t\t\tall_used = 0;\n-\t\t\tREG_NOTES (use_insn)\n-\t\t\t  = gen_rtx (EXPR_LIST, REG_DEAD, piece,\n-\t\t\t\t     REG_NOTES (use_insn));\n \t\t      }\n \n \t\t  if (! all_used)"}]}