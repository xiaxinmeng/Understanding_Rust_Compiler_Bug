{"sha": "fbdd5d87150536650a23886c85473b6cbf9857cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJkZDVkODcxNTA1MzY2NTBhMjM4ODZjODU0NzNiNmNiZjk4NTdjZg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-07-07T09:24:16Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-07-07T09:24:16Z"}, "message": "re PR bootstrap/39150 (Configure scripts have no 64-Bit Solaris defined (only i386-solaris*).)\n\n\tgcc:\n\tPR target/39150\n\t* configure.ac (gcc_cv_as_hidden): Also accept\n\tx86_64-*-solaris2.1[0-9]*.\n\t(gcc_cv_as_cfi_directive): Likewise.\n\t(gcc_cv_as_comdat_group_group): Likewise.\n\t(set_have_as_tls): Likewise.\n\t* configure: Regenerate.\n\t* config.gcc (i[34567]86-*-solaris2*): Also handle\n\tx86_64-*-solaris2.1[0-9]*.\n\t* config.host (i[34567]86-*-solaris2*): Likewise.\n\t* config/sparc/sol2.h (ASM_CPU_DEFAULT_SPEC): Remove.\n\t* config/sol2-bi.h (ASM_CPU_DEFAULT_SPEC): Redefine.\n\t[USE_GLD] (ARCH_DEFAULT_EMULATION): Define.\n\t(TARGET_LD_EMULATION): Use it.\n\t* config/i386/sol2.h (ASM_CPU_DEFAULT_SPEC): Define.\n\t(SUBTARGET_CPU_EXTRA_SPECS): Add asm_cpu_default.\n\t* config/i386/sol2-bi.h (ASM_CPU32_DEFAULT_SPEC): Define.\n\t(ASM_CPU64_DEFAULT_SPEC): Define.\n\t(ASM_CPU_SPEC): Use %(asm_cpu_default).\n\t(ASM_SPEC): Redefine.\n\t(DEFAULT_ARCH32_P): Define using TARGET_64BIT_DEFAULT.\n\t* config/host-solaris.c [__x86_64__] (TRY_EMPTY_VM_SPACE): Reduce.\n\t* doc/install.texi (Specific, amd64-*-solaris2.1[0-9]*):\n\tDocument.\n\t(Specific, i?86-*-solaris2.10): Mention x86_64-*-solaris2.1[0-9]*\n\tconfiguration.\n\t(Specific, x86_64-*-solaris2.1[0-9]*): Document.\n\n\tgcc/ada:\n\tPR target/39150\n\t* gcc-interface/Makefile.in: Handle x86_64-solaris2.\n\n\tlibgcc:\n\tPR target/39150\n\t* config.host (*-*-solaris2*): Handle x86_64-*-solaris2.1[0-9]*\n\tlike i?86-*-solaris2.1[0-9]*.\n\t(i[34567]86-*-solaris2*): Also handle x86_64-*-solaris2.1[0-9]*.\n\t* configure.ac (i?86-*-solaris2*): Likewise.\n\t* configure: Regenerate.\n\n\tgcc/testsuite:\n\tPR target/39150\n\t* gcc.misc-tests/linkage.exp: Handle x86_64-*-solaris2.1[0-9]*.\n\n\ttoplevel:\n\tPR target/39150\n\t* configure.ac (i[3456789]86-*-solaris2*): Also accept\n\tx86_64-*-solaris2.1[0-9]*.\n\t* configure: Regenerate.\n\n\tboehm-gc:\n\tPR target/39150\n\t* configure.ac (i?86-*-solaris2.[89]): Also accept\n\tx86_64-*-solaris2.1?.\n\t* configure: Regenerate.\n\n\tgnattools:\n\tPR target/39150\n\t* configure.ac (*86-*-solaris2*): Also accept\n\tx86_64-*-solaris2.1[0-9]*.\n\t* configure: Regenerate.\n\n\tlibcpp:\n\tPR target/39150\n\t* configure.ac (host_wide_int): Handle x86_64-*-solaris2.1[0-9]\n\tlike i[34567]86-*-solaris2.1[0-9]*.\n\t* configure: Regenerate.\n\n\tlibgo:\n\tPR target/39150\n\t* config/libtool.m4: Handle x86_64-*-solaris2.1[0-9]* like\n\ti?86-*-solaris*.\n\t* configure: Regenerate.\n\n\tlibjava:\n\tPR target/39150\n\t* configure.host (x86_64-*): Add -Usun to libgcj_flags.\n\t(x86_64-*-solaris2.1[0-9]*): New case.\n\t(i?86-*-solaris2*): Also accept x86_64-*-solaris2.1[0-9]*.\n\nFrom-SVN: r175958", "tree": {"sha": "956f88376a78ba7c74e120eba2dc7073144bc5ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/956f88376a78ba7c74e120eba2dc7073144bc5ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbdd5d87150536650a23886c85473b6cbf9857cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbdd5d87150536650a23886c85473b6cbf9857cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbdd5d87150536650a23886c85473b6cbf9857cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbdd5d87150536650a23886c85473b6cbf9857cf/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fcf7471a39854c6bf17a6b59beca52cd56a03ce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcf7471a39854c6bf17a6b59beca52cd56a03ce2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcf7471a39854c6bf17a6b59beca52cd56a03ce2"}], "stats": {"total": 271, "additions": 213, "deletions": 58}, "files": [{"sha": "ec1b42bd20b90f56c81d2bef27aaac864adde619", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -1,3 +1,10 @@\n+2011-07-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/39150\n+\t* configure.ac (i[3456789]86-*-solaris2*): Also accept\n+\tx86_64-*-solaris2.1[0-9]*.\n+\t* configure: Regenerate.\n+\n 2011-06-29  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* MAINTAINERS (RTL optimizers): Add self."}, {"sha": "34e3882e50601bf17a62f1faf90a8c333e8eac2e", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -1,3 +1,10 @@\n+2011-07-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/39150\n+\t* configure.ac (i?86-*-solaris2.[89]): Also accept\n+\tx86_64-*-solaris2.1?.\n+\t* configure: Regenerate.\n+\n 2011-06-29  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libgcj/49451"}, {"sha": "66bb3e7f06a99cef8deb44693c20d49e89439835", "filename": "boehm-gc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -15163,7 +15163,7 @@ $as_echo \"$as_me: WARNING: OpenBSD/Alpha without dlopen(). Shared library suppor\n  alpha*-*-linux*)\n     machdep=\"alpha_mach_dep.lo\"\n     ;;\n- i?86-*-solaris2.[89] | i?86-*-solaris2.1?)\n+ i?86-*-solaris2.[89] | i?86-*-solaris2.1? | x86_64-*-solaris2.1?)\n \n $as_echo \"#define SOLARIS25_PROC_VDB_BUG_FIXED 1\" >>confdefs.h\n "}, {"sha": "799959a0e0f00638d59b40d8ce285f0bf2c619f5", "filename": "boehm-gc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/boehm-gc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/boehm-gc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.ac?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -400,7 +400,7 @@ case \"$host\" in\n  alpha*-*-linux*)\n     machdep=\"alpha_mach_dep.lo\"\n     ;;\n- i?86-*-solaris2.[[89]] | i?86-*-solaris2.1?)\n+ i?86-*-solaris2.[[89]] | i?86-*-solaris2.1? | x86_64-*-solaris2.1?)\n     AC_DEFINE(SOLARIS25_PROC_VDB_BUG_FIXED,1,[PROC_VDB in Solaris 2.5 gives wrong values for dirty bits])\n     ;;\n  mipstx39-*-elf*)"}, {"sha": "f4bb255560956e23a9de81fa7d24dddba025529c", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -3477,7 +3477,7 @@ case \"${target}\" in\n   i[3456789]86-*-sco*)\n     noconfigdirs=\"$noconfigdirs gprof target-libgloss\"\n     ;;\n-  i[3456789]86-*-solaris2*)\n+  i[3456789]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n     noconfigdirs=\"$noconfigdirs target-libgloss\"\n     ;;\n   i[3456789]86-*-sysv4*)"}, {"sha": "31a5bdf67bdc2271b66ba60d41e3714b01955e9e", "filename": "configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -923,7 +923,7 @@ case \"${target}\" in\n   i[[3456789]]86-*-sco*)\n     noconfigdirs=\"$noconfigdirs gprof target-libgloss\"\n     ;;\n-  i[[3456789]]86-*-solaris2*)\n+  i[[3456789]]86-*-solaris2* | x86_64-*-solaris2.1[[0-9]]*)\n     noconfigdirs=\"$noconfigdirs target-libgloss\"\n     ;;\n   i[[3456789]]86-*-sysv4*)"}, {"sha": "b44a29fe614cd487cc7e93883e3884446d895145", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -1,3 +1,33 @@\n+2011-07-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/39150\n+\t* configure.ac (gcc_cv_as_hidden): Also accept\n+\tx86_64-*-solaris2.1[0-9]*.\n+\t(gcc_cv_as_cfi_directive): Likewise.\n+\t(gcc_cv_as_comdat_group_group): Likewise.\n+\t(set_have_as_tls): Likewise.\n+\t* configure: Regenerate.\n+\t* config.gcc (i[34567]86-*-solaris2*): Also handle\n+\tx86_64-*-solaris2.1[0-9]*.\n+\t* config.host (i[34567]86-*-solaris2*): Likewise.\n+\t* config/sparc/sol2.h (ASM_CPU_DEFAULT_SPEC): Remove.\n+\t* config/sol2-bi.h (ASM_CPU_DEFAULT_SPEC): Redefine.\n+\t[USE_GLD] (ARCH_DEFAULT_EMULATION): Define.\n+\t(TARGET_LD_EMULATION): Use it.\n+\t* config/i386/sol2.h (ASM_CPU_DEFAULT_SPEC): Define.\n+\t(SUBTARGET_CPU_EXTRA_SPECS): Add asm_cpu_default.\n+\t* config/i386/sol2-bi.h (ASM_CPU32_DEFAULT_SPEC): Define.\n+\t(ASM_CPU64_DEFAULT_SPEC): Define.\n+\t(ASM_CPU_SPEC): Use %(asm_cpu_default).\n+\t(ASM_SPEC): Redefine.\n+\t(DEFAULT_ARCH32_P): Define using TARGET_64BIT_DEFAULT.\n+\t* config/host-solaris.c [__x86_64__] (TRY_EMPTY_VM_SPACE): Reduce.\n+\t* doc/install.texi (Specific, amd64-*-solaris2.1[0-9]*):\n+\tDocument.\n+\t(Specific, i?86-*-solaris2.10): Mention x86_64-*-solaris2.1[0-9]*\n+\tconfiguration.\n+\t(Specific, x86_64-*-solaris2.1[0-9]*): Document.\n+\n 2011-07-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/sol2.h (ASM_SPEC): Split into ..."}, {"sha": "686aad137fd49333b36d7e494008e134f419a65d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -1,3 +1,8 @@\n+2011-07-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/39150\n+\t* gcc-interface/Makefile.in: Handle x86_64-solaris2.\n+\n 2011-07-06  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc-interface/misc.c (gnat_init):"}, {"sha": "0b5c8795a7aaf0cb7b855845d9e86e8085695fba", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -1011,8 +1011,8 @@ ifeq ($(strip $(filter-out sparc% sun solaris%,$(targ))),)\n   endif\n endif\n \n-ifeq ($(strip $(filter-out %86 solaris2%,$(arch) $(osys))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n+ifeq ($(strip $(filter-out %86 %x86_64 solaris2%,$(arch) $(osys))),)\n+  LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-numaux.adb<a-numaux-x86.adb \\\n   a-numaux.ads<a-numaux-x86.ads \\\n   a-intnam.ads<a-intnam-solaris.ads \\\n@@ -1028,13 +1028,29 @@ ifeq ($(strip $(filter-out %86 solaris2%,$(arch) $(osys))),)\n   s-tpopsp.adb<s-tpopsp-solaris.adb \\\n   g-soliop.ads<g-soliop-solaris.ads\n \n-  ifeq ($(strip $(MULTISUBDIR)),/amd64)\n-    LIBGNAT_TARGET_PAIRS += \\\n-    system.ads<system-solaris-x86_64.ads\n+  LIBGNAT_TARGET_PAIRS_32 = \\\n+  g-bytswa.adb<g-bytswa-x86.adb \\\n+  system.ads<system-solaris-x86.ads\n+\n+  LIBGNAT_TARGET_PAIRS_64 = \\\n+  system.ads<system-solaris-x86_64.ads\n+\n+  ifeq ($(strip $(filter-out %86 solaris2%,$(arch) $(osys))),)\n+    ifeq ($(strip $(MULTISUBDIR)),/amd64)\n+      LIBGNAT_TARGET_PAIRS = \\\n+      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n+    else\n+      LIBGNAT_TARGET_PAIRS = \\\n+      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n+    endif\n   else\n-    LIBGNAT_TARGET_PAIRS += \\\n-    g-bytswa.adb<g-bytswa-x86.adb \\\n-    system.ads<system-solaris-x86.ads\n+    ifeq ($(strip $(MULTISUBDIR)),/32)\n+      LIBGNAT_TARGET_PAIRS = \\\n+      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n+    else\n+      LIBGNAT_TARGET_PAIRS = \\\n+      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n+    endif\n   endif\n \n   TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-solaris.adb"}, {"sha": "d73cb459bb01826f6e9ea6fc06eb131303383430", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -1369,7 +1369,7 @@ i[34567]86-*-rtems*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/i386elf.h i386/rtemself.h rtems.h newlib-stdint.h\"\n \ttmake_file=\"${tmake_file} i386/t-rtems t-rtems\"\n \t;;\n-i[34567]86-*-solaris2*)\n+i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h ${sol2_tm_file}\"\n \t# Set default arch_32 to pentium4, tune_32 to generic like the other\n \t# i386 targets, although config.guess defaults to i386-pc-solaris2*.\n@@ -3529,7 +3529,7 @@ case ${target} in\n \t  i[34567]86-*-gnu*)\n \t\ttmake_file=\"${tmake_file} i386/t-fprules-softfp soft-fp/t-softfp i386/t-linux\"\n \t\t;;\n-\ti[34567]86-*-solaris2*)\n+\ti[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n \t\ttmake_file=\"${tmake_file} i386/t-fprules-softfp soft-fp/t-softfp\"\n \t\t;;\n \ti[34567]86-*-cygwin* | i[34567]86-*-mingw* | x86_64-*-mingw*)"}, {"sha": "d55447cb80cfc18db9487bbb5e4300edefe19e91", "filename": "gcc/config.host", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -197,7 +197,7 @@ case ${host} in\n   i370-*-opened* | i370-*-mvs* ) # IBM 360/370/390 Architecture\n     host_xm_defines='FATAL_EXIT_CODE=12'\n     ;;\n-  i[34567]86-*-solaris2*)\n+  i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n     out_host_hook_obj=host-solaris.o\n     host_xmake_file=\"${host_xmake_file} x-solaris\"\n     ;;"}, {"sha": "15f1d782e95ad0417f10b8822813df3634da10c9", "filename": "gcc/config/host-solaris.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig%2Fhost-solaris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig%2Fhost-solaris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fhost-solaris.c?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -73,7 +73,7 @@ mmap_fixed (void *addr, size_t len, int prot, int flags, int fd, off_t off)\n #elif defined(__sparc__)\n # define TRY_EMPTY_VM_SPACE\t0x80000000\n #elif defined(__x86_64__)\n-# define TRY_EMPTY_VM_SPACE\t0x8000000000000000\n+# define TRY_EMPTY_VM_SPACE\t0x80000000000\n #elif defined(__i386__)\n # define TRY_EMPTY_VM_SPACE\t0xB0000000\n #else"}, {"sha": "04feeb907aebf0f3cd6a911b016891c493f43546", "filename": "gcc/config/i386/sol2-bi.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig%2Fi386%2Fsol2-bi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig%2Fi386%2Fsol2-bi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-bi.h?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -31,13 +31,17 @@ along with GCC; see the file COPYING3.  If not see\n \n /* GNU as understands --32 and --64, but the native Solaris\n    assembler requires -xarch=generic or -xarch=generic64 instead.  */\n-#undef ASM_CPU_SPEC\n #ifdef USE_GAS\n-#define ASM_CPU_SPEC \"%{m32:--32} %{m64:--64}\"\n+#define ASM_CPU32_DEFAULT_SPEC \"--32\"\n+#define ASM_CPU64_DEFAULT_SPEC \"--64\"\n #else\n-#define ASM_CPU_SPEC \"%{m32:-xarch=generic} %{m64:-xarch=generic64}\"\n+#define ASM_CPU32_DEFAULT_SPEC \"-xarch=generic\"\n+#define ASM_CPU64_DEFAULT_SPEC \"-xarch=generic64\"\n #endif\n \n+#undef ASM_CPU_SPEC\n+#define ASM_CPU_SPEC \"%(asm_cpu_default)\"\n+\n /* Don't let i386/x86-64.h override i386/sol2.h version.  Still cannot use\n    -K PIC with the Solaris 10+ assembler, it gives many warnings:\n \tAbsolute relocation is used for symbol \"<symbol>\"  */\n@@ -47,8 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n /* We do not need to search a special directory for startup files.  */\n #undef MD_STARTFILE_PREFIX\n \n-/* No 64-bit default configurations.  */\n-#define DEFAULT_ARCH32_P 1\n+#define DEFAULT_ARCH32_P !TARGET_64BIT_DEFAULT\n \n #define ARCH64_SUBDIR \"amd64\"\n "}, {"sha": "5b4e3d78f584c0a57b7dfc434e80101d811a5b33", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -59,6 +59,8 @@ along with GCC; see the file COPYING3.  If not see\n #undef CPP_SPEC\n #define CPP_SPEC \"%{,assembler-with-cpp:-P} %(cpp_subtarget)\"\n \n+#define ASM_CPU_DEFAULT_SPEC \"\"\n+\n #define ASM_CPU_SPEC \"\"\n  \n /* Don't include ASM_PIC_SPEC.  While the Solaris 8 and 9 assembler accepts\n@@ -70,7 +72,8 @@ along with GCC; see the file COPYING3.  If not see\n \n #define SUBTARGET_CPU_EXTRA_SPECS \\\n   { \"cpp_subtarget\",\t CPP_SUBTARGET_SPEC },\t\t\\\n-  { \"asm_cpu\",\t\t ASM_CPU_SPEC }\n+  { \"asm_cpu\",\t\t ASM_CPU_SPEC },\t\t\\\n+  { \"asm_cpu_default\",\t ASM_CPU_DEFAULT_SPEC },\t\\\n \n #undef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS \\"}, {"sha": "5e41efd81d4cbf7d54466e15aa5165134ceefd22", "filename": "gcc/config/sol2-bi.h", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig%2Fsol2-bi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig%2Fsol2-bi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-bi.h?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -56,6 +56,16 @@\n #define DEF_ARCH64_SPEC(__str) \"%{!m32:\" __str \"}\"\n #endif\n \n+#undef ASM_CPU_DEFAULT_SPEC\n+#define ASM_CPU_DEFAULT_SPEC \\\n+(DEFAULT_ARCH32_P ? \"\\\n+%{m64:\" ASM_CPU64_DEFAULT_SPEC \"} \\\n+%{!m64:\" ASM_CPU32_DEFAULT_SPEC \"} \\\n+\" : \"\\\n+%{m32:\" ASM_CPU32_DEFAULT_SPEC \"} \\\n+%{!m32:\" ASM_CPU64_DEFAULT_SPEC \"} \\\n+\")\n+\n /* This should be the same as LINK_ARCH32_SPEC_BASE, except with\n    ARCH64_SUBDIR appended to the paths and /usr/ccs/lib is no longer\n    necessary.  */\n@@ -78,8 +88,14 @@\n #endif\n \n #ifdef USE_GLD\n+#if DEFAULT_ARCH32_P\n+#define ARCH_DEFAULT_EMULATION ARCH32_EMULATION\n+#else\n+#define ARCH_DEFAULT_EMULATION ARCH64_EMULATION\n+#endif\n #define TARGET_LD_EMULATION \"%{m32:-m \" ARCH32_EMULATION \"}\" \\\n-\t\t\t    \"%{m64:-m \" ARCH64_EMULATION \"} \"\n+\t\t\t    \"%{m64:-m \" ARCH64_EMULATION \"}\" \\\n+\t\t\t    \"%{!m32:%{!m64:-m \" ARCH_DEFAULT_EMULATION \"}} \"\n #else\n #define TARGET_LD_EMULATION \"\"\n #endif"}, {"sha": "6661c21945c4c37fd4a48c88099a245d80280502", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -205,16 +205,6 @@ along with GCC; see the file COPYING3.  If not see\n %{!mcpu*:%(asm_cpu_default)} \\\n \"\n \n-#undef ASM_CPU_DEFAULT_SPEC\n-#define ASM_CPU_DEFAULT_SPEC \\\n-(DEFAULT_ARCH32_P ? \"\\\n-%{m64:\" ASM_CPU64_DEFAULT_SPEC \"} \\\n-%{!m64:\" ASM_CPU32_DEFAULT_SPEC \"} \\\n-\" : \"\\\n-%{m32:\" ASM_CPU32_DEFAULT_SPEC \"} \\\n-%{!m32:\" ASM_CPU64_DEFAULT_SPEC \"} \\\n-\")\n-\n #undef ASM_ARCH32_SPEC\n #define ASM_ARCH32_SPEC \"\"\n "}, {"sha": "3c717c086b7b010bfa5062a8030f3f61268aaf7d", "filename": "gcc/configure", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -21784,7 +21784,7 @@ foobar:' > conftest.s\n # Solaris 9/x86 as incorrectly emits an alias for a hidden symbol with\n # STV_HIDDEN, so disable .hidden support if so.\n case \"${target}\" in\n-  i?86-*-solaris2*)\n+  i?86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n     if test x$gcc_cv_as != x && test x$gcc_cv_objdump != x; then\n       cat > conftest.s <<EOF\n .globl hidden\n@@ -22099,7 +22099,7 @@ else\n \t  gcc_cv_as_cfi_directive=no\n \telse\n \t  case \"$target\" in\n-\t    i?86-*-solaris2.1[0-9]*)\n+\t    i?86-*-solaris2.1[0-9]* | x86_64-*-solaris2.1[0-9]*)\n \t      # On Solaris/x86, make sure that GCC and gas agree on using\n \t      # read-only .eh_frame sections for 64-bit.\n \t      if $gcc_cv_as --64 -o conftest.o conftest.s > /dev/null 2>&1 && \\\n@@ -22530,7 +22530,7 @@ $as_echo \"$gcc_cv_as_comdat_group_percent\" >&6; }\n              foo:\n \t     '\n            ;;\n-         i?86-*-solaris2*)\n+         i?86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n \t   conftest_s='\n                .group foo,.text%foo,#comdat\n                .section .text%foo, \"ax\", @progbits\n@@ -22760,12 +22760,16 @@ foo:\t.long\t25\n \ttls_first_major=2\n \ttls_first_minor=17\n \t;;\n-  i[34567]86-*-*)\n+  i[34567]86-*-* | x86_64-*-solaris2.1[0-9]*)\n     case \"$target\" in\n       i[34567]86-*-solaris2.*)\n \ton_solaris=yes\n \ttga_func=___tls_get_addr\n \t;;\n+      x86_64-*-solaris2.1[0-9]*)\n+\ton_solaris=yes\n+\ttga_func=__tls_get_addr\n+        ;;\n       *)\n \ton_solaris=no\n \t;;"}, {"sha": "f899991083dfe641dbea72517448badebe499d52", "filename": "gcc/configure.ac", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -2173,7 +2173,7 @@ foobar:],[\n # Solaris 9/x86 as incorrectly emits an alias for a hidden symbol with\n # STV_HIDDEN, so disable .hidden support if so.\n case \"${target}\" in\n-  i?86-*-solaris2*)\n+  i?86-*-solaris2* | x86_64-*-solaris2.1[[0-9]]*)\n     if test x$gcc_cv_as != x && test x$gcc_cv_objdump != x; then\n       cat > conftest.s <<EOF\n .globl hidden\n@@ -2428,7 +2428,7 @@ gcc_GAS_CHECK_FEATURE([cfi directives], gcc_cv_as_cfi_directive,\n \t  gcc_cv_as_cfi_directive=no\n \telse\n \t  case \"$target\" in\n-\t    i?86-*-solaris2.1[[0-9]]*)\n+\t    i?86-*-solaris2.1[[0-9]]* | x86_64-*-solaris2.1[[0-9]]*)\n \t      # On Solaris/x86, make sure that GCC and gas agree on using\n \t      # read-only .eh_frame sections for 64-bit.\n \t      if $gcc_cv_as --64 -o conftest.o conftest.s > /dev/null 2>&1 && \\\n@@ -2632,7 +2632,7 @@ else\n              foo:\n \t     '\n            ;;\n-         i?86-*-solaris2*)\n+         i?86-*-solaris2* | x86_64-*-solaris2.1[[0-9]]*)\n \t   conftest_s='\n                .group foo,.text%foo,#comdat\n                .section .text%foo, \"ax\", @progbits\n@@ -2810,12 +2810,16 @@ foo:\t.long\t25\n \ttls_first_major=2\n \ttls_first_minor=17\n \t;;\n-  i[34567]86-*-*)\n+  i[34567]86-*-* | x86_64-*-solaris2.1[0-9]*)\n     case \"$target\" in\n       i[34567]86-*-solaris2.*)\n \ton_solaris=yes\n \ttga_func=___tls_get_addr\n \t;;\n+      x86_64-*-solaris2.1[0-9]*)\n+\ton_solaris=yes\n+\ttga_func=__tls_get_addr\n+        ;;\n       *)\n \ton_solaris=no\n \t;;"}, {"sha": "f93413fb7b8af96f96c1bac388de6cd9ed51b8e6", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -2957,6 +2957,8 @@ information are.\n @item\n @uref{#alpha-dec-osf51,,alpha*-dec-osf5.1}\n @item\n+@uref{#amd64-x-solaris210,,amd64-*-solaris2.10}\n+@item\n @uref{#arm-x-elf,,arm-*-elf}\n @item\n @uref{#avr,,avr}\n@@ -3057,6 +3059,8 @@ information are.\n @item\n @uref{#x86-64-x-x,,x86_64-*-*, amd64-*-*}\n @item\n+@uref{#x86-64-x-solaris210,,x86_64-*-solaris2.1[0-9]*}\n+@item\n @uref{#xtensa-x-elf,,xtensa*-*-elf}\n @item\n @uref{#xtensa-x-linux,,xtensa*-*-linux*}\n@@ -3154,6 +3158,13 @@ provide a fix shortly.\n \n @c FIXME: still applicable?\n \n+@html\n+<hr />\n+@end html\n+@heading @anchor{amd64-x-solaris210}amd64-*-solaris2.1[0-9]*\n+\n+This is a synonym for @samp{x86_64-*-solaris2.1[0-9]*}.\n+\n @html\n <hr />\n @end html\n@@ -3537,10 +3548,10 @@ you have the patch installed, you can configure GCC with an appropriate\n @end html\n @heading @anchor{ix86-x-solaris210}i?86-*-solaris2.10\n Use this for Solaris 10 or later on x86 and x86-64 systems.  This\n-configuration is supported by GCC 4.0 and later versions only.  Unlike\n-@samp{sparcv9-sun-solaris2*}, there is no corresponding 64-bit\n-configuration like @samp{amd64-*-solaris2*} or @samp{x86_64-*-solaris2*}.\n-@c FIXME: will there ever be?\n+configuration is supported by GCC 4.0 and later versions only.  Starting\n+with GCC 4.7, there is also a 64-bit @samp{amd64-*-solaris2.1[0-9]*} or\n+@samp{x86_64-*-solaris2.1[0-9]*} configuration that corresponds to\n+@samp{sparcv9-sun-solaris2*}.\n \n It is recommended that you configure GCC to use the GNU assembler, in\n @file{/usr/sfw/bin/gas}.  The versions included in Solaris 10, from GNU\n@@ -4397,6 +4408,22 @@ GCC supports the x86-64 architecture implemented by the AMD64 processor\n On GNU/Linux the default is a bi-arch compiler which is able to generate\n both 64-bit x86-64 and 32-bit x86 code (via the @option{-m32} switch).\n \n+@html\n+<hr />\n+@end html\n+@heading @anchor{x86-64-x-solaris2.10}x86_64-*-solaris2.1[0-9]*\n+\n+GCC also supports the x86-64 architecture implemented by the AMD64\n+processor (@samp{amd64-*-*} is an alias for @samp{x86_64-*-*}) on\n+Solaris 10 or later.  Unlike other systems, without special options a\n+bi-arch compiler is built which generates 32-bit code by default, but\n+can generate 64-bit x86-64 code with the @option{-m64} switch.  Since\n+GCC 4.7, there is also configuration that defaults to 64-bit code, but\n+can generate 32-bit code with @option{-m32}.  To configure and build\n+this way, you have to provide all support libraries like @file{libgmp}\n+as 64-bit code, configure with @option{--target=x86_64-pc-solaris2.1x}\n+and @samp{CC=gcc -m64}.\n+\n @html\n <hr />\n @end html"}, {"sha": "a1b8bb810b7d57308095a67a42c36277cd85ddd4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -1,3 +1,8 @@\n+2011-07-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/39150\n+\t* gcc.misc-tests/linkage.exp: Handle x86_64-*-solaris2.1[0-9]*.\n+\n 2011-07-06  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/no-r11-1.c: New test for -mr11, -mno-r11."}, {"sha": "f6702e4d024e03ff97ff661c5412092894aef4ae", "filename": "gcc/testsuite/gcc.misc-tests/linkage.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -46,7 +46,8 @@ if { [isnative] && ![is_remote host] } then {\n \t\tset native_cflags \"-xarch=v9\"\n \t    }\n \t}\n-\tif  [istarget \"i?86*-*-solaris2*\"] {\n+\tif  {[istarget \"i?86*-*-solaris2*\"]\n+\t     || [istarget \"x86_64-*-solaris2.1\\[0-9\\]*\"]} {\n \t    set file_string [exec file \"linkage-x.o\"]\n \t    if [ string match \"*64*\" $file_string ] {\n \t\tset native_cflags \"-xarch=amd64\""}, {"sha": "9bcd621323020836016a7500b80afa558d26ee66", "filename": "gnattools/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gnattools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gnattools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gnattools%2FChangeLog?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -1,3 +1,10 @@\n+2011-07-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/39150\n+\t* configure.ac (*86-*-solaris2*): Also accept\n+\tx86_64-*-solaris2.1[0-9]*.\n+\t* configure: Regenerate.\n+\n 2010-11-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR other/46202"}, {"sha": "8667058788f45541e242e4c84885bfb57c59395b", "filename": "gnattools/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gnattools%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gnattools%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gnattools%2Fconfigure?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -2041,7 +2041,7 @@ case \"${target}\" in\n   sparc-sun-solaris*)\n     TOOLS_TARGET_PAIRS=\"mlib-tgt-specific.adb<mlib-tgt-specific-solaris.adb\"\n     ;;\n-  *86-*-solaris2*)\n+  *86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n     TOOLS_TARGET_PAIRS=\"mlib-tgt-specific.adb<mlib-tgt-specific-solaris.adb\"\n     ;;\n   *86-*-linux* \\"}, {"sha": "450cb72724305c7ef777ea8f73b4fcddf13f6bf6", "filename": "gnattools/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/gnattools%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/gnattools%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gnattools%2Fconfigure.ac?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -81,7 +81,7 @@ case \"${target}\" in\n   sparc-sun-solaris*)\n     TOOLS_TARGET_PAIRS=\"mlib-tgt-specific.adb<mlib-tgt-specific-solaris.adb\"\n     ;;\n-  *86-*-solaris2*)\n+  *86-*-solaris2* | x86_64-*-solaris2.1[[0-9]]*)\n     TOOLS_TARGET_PAIRS=\"mlib-tgt-specific.adb<mlib-tgt-specific-solaris.adb\"\n     ;;\n   *86-*-linux* \\"}, {"sha": "6abcb25081c671c115e4c7bac966c5250ccbe651", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -1,3 +1,10 @@\n+2011-07-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/39150\n+\t* configure.ac (host_wide_int): Handle x86_64-*-solaris2.1[0-9]\n+\tlike i[34567]86-*-solaris2.1[0-9]*.\n+\t* configure: Regenerate.\n+\n 2011-06-16  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/45399"}, {"sha": "d261f2a09f6632f20d62b021a7a43bb41281d41f", "filename": "libcpp/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -7095,7 +7095,7 @@ case $target in\n \tia64-*-* | \\\n \thppa*64*-*-* | \\\n \ti[34567]86-*-darwin* | \\\n-\ti[34567]86-*-solaris2.1[0-9]* | \\\n+\ti[34567]86-*-solaris2.1[0-9]* | x86_64-*-solaris2.1[0-9]* | \\\n \ti[34567]86-w64-mingw* | \\\n \tmips*-*-* | \\\n \tmmix-*-* | \\"}, {"sha": "ce8cae61bf01d4777b676f2b251cc4e61d80e54f", "filename": "libcpp/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -145,7 +145,7 @@ case $target in\n \tia64-*-* | \\\n \thppa*64*-*-* | \\\n \ti[34567]86-*-darwin* | \\\n-\ti[34567]86-*-solaris2.1[0-9]* | \\\n+\ti[34567]86-*-solaris2.1[0-9]* | x86_64-*-solaris2.1[0-9]* | \\\n \ti[34567]86-w64-mingw* | \\\n \tmips*-*-* | \\\n \tmmix-*-* | \\"}, {"sha": "54b1f3d739305c41c6cdec107208b0c46d041ce3", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -1,3 +1,12 @@\n+2011-07-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/39150\n+\t* config.host (*-*-solaris2*): Handle x86_64-*-solaris2.1[0-9]*\n+\tlike i?86-*-solaris2.1[0-9]*.\n+\t(i[34567]86-*-solaris2*): Also handle x86_64-*-solaris2.1[0-9]*.\n+\t* configure.ac (i?86-*-solaris2*): Likewise.\n+\t* configure: Regenerate.\n+\n 2011-07-06  Thomas Schwinge  <thomas@schwinge.name>\n \n \t* config.host (i[34567]86-*-kfreebsd*-gnu, i[34567]86-*-knetbsd*-gnu)"}, {"sha": "8faeee3ee01a0147b564c6d7f8094ebdfe21de3c", "filename": "libgcc/config.host", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -188,7 +188,7 @@ case ${host} in\n   tmake_file=\"$tmake_file $cpu_type/t-sol2\"\n   extra_parts=\"gmon.o crtbegin.o crtend.o\"\n   case ${host} in\n-    i?86-*-solaris2.1[0-9]*)\n+    i?86-*-solaris2.1[0-9]* | x86_64-*-solaris2.1[0-9]*)\n       # Solaris 10+/x86 provides crt1.o, crti.o, crtn.o, and gcrt1.o as\n       # part of the base system.\n       ;;\n@@ -386,7 +386,7 @@ i[34567]86-*-rtems*)\n \textra_parts=\"crtbegin.o crtend.o crti.o crtn.o\"\n \ttmake_file=\"${tmake_file} t-crtin i386/t-softfp i386/t-crtstuff t-rtems\"\n \t;;\n-i[34567]86-*-solaris2*)\n+i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n \ttmake_file=\"$tmake_file i386/t-crtfm\"\n \textra_parts=\"$extra_parts crtfastmath.o\"\n \tmd_unwind_header=i386/sol2-unwind.h\n@@ -700,7 +700,7 @@ i[34567]86-*-darwin* | x86_64-*-darwin* | \\\n   i[34567]86-*-kfreebsd*-gnu | x86_64-*-kfreebsd*-gnu | \\\n   i[34567]86-*-linux* | x86_64-*-linux* | \\\n   i[34567]86-*-gnu* | \\\n-  i[34567]86-*-solaris2* | \\\n+  i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]* | \\\n   i[34567]86-*-cygwin* | i[34567]86-*-mingw* | x86_64-*-mingw* | \\\n   i[34567]86-*-freebsd* | x86_64-*-freebsd*)\n \tif test \"${host_address}\" = 32; then"}, {"sha": "45fe914ddf9df5ce3038b5fab4fcd25264c3b75c", "filename": "libgcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -3813,7 +3813,7 @@ esac\n # Link with -nostartfiles -nodefaultlibs since neither are present while\n # building libgcc.\n case ${host} in\n-i?86-*-solaris2*)\n+i?86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n   cat > conftest.s <<EOF\n \t.section\t.eh_frame,\"a\",@unwind\n \t.zero\t4"}, {"sha": "20536c7152d19ca9cfec61b6d61f7a5c913b4d6b", "filename": "libgcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -207,7 +207,7 @@ esac\n # Link with -nostartfiles -nodefaultlibs since neither are present while\n # building libgcc.\n case ${host} in\n-i?86-*-solaris2*)\n+i?86-*-solaris2* | x86_64-*-solaris2.1[[0-9]]*)\n   cat > conftest.s <<EOF\n \t.section\t.eh_frame,\"a\",@unwind\n \t.zero\t4"}, {"sha": "1a667d31a5a9e1ef1743a9b887cee0a0fb774cba", "filename": "libgo/config/libtool.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/libgo%2Fconfig%2Flibtool.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/libgo%2Fconfig%2Flibtool.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfig%2Flibtool.m4?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -1296,7 +1296,7 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n       case $lt_cv_prog_gnu_ld in\n       yes*)\n         case $host in\n-        i?86-*-solaris*)\n+        i?86-*-solaris* | x86_64-*-solaris2.1[[0-9]]*)\n           LD=\"${LD-ld} -m elf_x86_64\"\n           ;;\n         sparc*-*-solaris*)"}, {"sha": "607533d0e386a9e0350df6a92602bf8fa281a1e5", "filename": "libgo/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -6422,7 +6422,7 @@ $as_echo \"$lt_cv_cc_needs_belf\" >&6; }\n       case $lt_cv_prog_gnu_ld in\n       yes*)\n         case $host in\n-        i?86-*-solaris*)\n+        i?86-*-solaris* | x86_64-*-solaris2.1[0-9]*)\n           LD=\"${LD-ld} -m elf_x86_64\"\n           ;;\n         sparc*-*-solaris*)"}, {"sha": "cac38751080ffe23bbfc38e0b694624515d5a044", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -1,3 +1,10 @@\n+2011-07-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/39150\n+\t* configure.host (x86_64-*): Add -Usun to libgcj_flags.\n+\t(x86_64-*-solaris2.1[0-9]*): New case.\n+\t(i?86-*-solaris2*): Also accept x86_64-*-solaris2.1[0-9]*.\n+\n 2011-06-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libgcj/49314"}, {"sha": "105785e5434f844a55e9db1ef069627c6e028506", "filename": "libjava/configure.host", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdd5d87150536650a23886c85473b6cbf9857cf/libjava%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdd5d87150536650a23886c85473b6cbf9857cf/libjava%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.host?ref=fbdd5d87150536650a23886c85473b6cbf9857cf", "patch": "@@ -141,6 +141,9 @@ case \"${host}\" in\n \t\tlibgcj_flags=\"${libgcj_flags} -ffloat-store\" ;;\n \tesac\n \tlibgcj_flags=\"${libgcj_flags} -fomit-frame-pointer\"\n+\t# On Solaris we have defined 'sun' which later conflicts with \n+\t# namespace usage. So to work this away we use the below undefine.\n+\tlibgcj_flags=\"${libgcj_flags} -Usun\"\n \tlibgcj_cxxflags=\n \tlibgcj_cflags=\n \tDIVIDESPEC=-fno-use-divide-subroutine\n@@ -285,6 +288,10 @@ EOF\n \tsysdeps_dir=i386\n \tDIVIDESPEC=-f%{m32:no-}%{!m32:%{!m64:no-}}%{m64:}use-divide-subroutine\n \t;;\n+  x86_64-*-solaris2.1[0-9]* )\n+\tsysdeps_dir=i386\n+\tDIVIDESPEC=-f%{m32:no-}use-divide-subroutine\n+\t;;\n   mips-sgi-irix6* )\n \tcan_unwind_signal=yes\n \tsysdeps_dir=mips\n@@ -322,7 +329,7 @@ EOF\n \tDIVIDESPEC=-fuse-divide-subroutine\n \tCHECKREFSPEC=-fcheck-references\n \t;;\n-  i?86-*-solaris2*)\n+  i?86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n \tcan_unwind_signal=yes\n \t;;\n   *-*-freebsd*)"}]}