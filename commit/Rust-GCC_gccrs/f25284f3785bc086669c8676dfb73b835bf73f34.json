{"sha": "f25284f3785bc086669c8676dfb73b835bf73f34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI1Mjg0ZjM3ODViYzA4NjY2OWM4Njc2ZGZiNzNiODM1YmY3M2YzNA==", "commit": {"author": {"name": "David Billinghurst", "email": "billingd@gcc.gnu.org", "date": "2005-06-05T23:42:19Z"}, "committer": {"name": "David Billinghurst", "email": "billingd@gcc.gnu.org", "date": "2005-06-05T23:42:19Z"}, "message": "gfortran.exp (gfortran_target_compile): Call dg-additional-files-options\n\n2005-06-05  David Billinghurst  <David.Billinghurst@riotinto.com>\n\n\t* lib/gfortran.exp (gfortran_target_compile): Call\n\tdg-additional-files-options\n\t* gfortran.dg/f2c_4.f90: New file\n\t* gfortran.dg/f2c_4.c: New file\n\t* gfortran.dg/f2c_5.f90: New file\n\t* gfortran.dg/f2c_5.c: New file\n\nFrom-SVN: r100641", "tree": {"sha": "a831050c295ee23f7665e63285c0032152ce78fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a831050c295ee23f7665e63285c0032152ce78fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f25284f3785bc086669c8676dfb73b835bf73f34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f25284f3785bc086669c8676dfb73b835bf73f34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f25284f3785bc086669c8676dfb73b835bf73f34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f25284f3785bc086669c8676dfb73b835bf73f34/comments", "author": null, "committer": null, "parents": [{"sha": "9d997b96c2464e3ad89bef9fe123e36d62e6bbda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d997b96c2464e3ad89bef9fe123e36d62e6bbda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d997b96c2464e3ad89bef9fe123e36d62e6bbda"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "0d64fc89b149702b81714088dc25d0c70040daec", "filename": "gcc/testsuite/gfortran.dg/f2c_4.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25284f3785bc086669c8676dfb73b835bf73f34/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25284f3785bc086669c8676dfb73b835bf73f34/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_4.c?ref=f25284f3785bc086669c8676dfb73b835bf73f34", "patch": "@@ -0,0 +1,9 @@\n+extern double f2c_4b__(double *);\n+extern void abort (void);\n+\n+void f2c_4a__(void) {\n+  double a,b;\n+  a = 1023.0;\n+  b=f2c_4b__(&a);\n+  if ( a != b ) abort();\n+}"}, {"sha": "a03b4f8b5933ced797c1b4f334964b6c75820258", "filename": "gcc/testsuite/gfortran.dg/f2c_4.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25284f3785bc086669c8676dfb73b835bf73f34/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25284f3785bc086669c8676dfb73b835bf73f34/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_4.f90?ref=f25284f3785bc086669c8676dfb73b835bf73f34", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do run }\n+! { dg-additional-sources f2c_4.c }\n+! { dg-options \"-ff2c -w\" }\n+\n+! Check -ff2c calling conventions\n+!   Return value of REAL function is promoted to C type double\n+!   Addional underscore appended to function name  \n+call f2c_4a()\n+end\n+\n+real function f2c_4b(x)\n+  double precision x\n+  f2c_4b = x\n+end"}, {"sha": "bb57556d0116b22ac795360d45a22a3694117280", "filename": "gcc/testsuite/gfortran.dg/f2c_5.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25284f3785bc086669c8676dfb73b835bf73f34/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25284f3785bc086669c8676dfb73b835bf73f34/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_5.c?ref=f25284f3785bc086669c8676dfb73b835bf73f34", "patch": "@@ -0,0 +1,9 @@\n+extern float f2c_5b_(double *);\n+extern void abort (void);\n+\n+void f2c_5a_(void) {\n+  double a,b;\n+  a = 1023.0;\n+  b=f2c_5b_(&a);\n+  if ( a != b ) abort();\n+}"}, {"sha": "aa246845eb3032a705e7b18ee1df6ffbd0e8f91a", "filename": "gcc/testsuite/gfortran.dg/f2c_5.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25284f3785bc086669c8676dfb73b835bf73f34/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25284f3785bc086669c8676dfb73b835bf73f34/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_5.f90?ref=f25284f3785bc086669c8676dfb73b835bf73f34", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do run }\n+! { dg-additional-sources f2c_5.c }\n+! { dg-options \"-fno-f2c\" }\n+! Check calling conventions without -ff2c\n+program f2c_5  \n+  call f2c_5a()\n+end\n+\n+real function f2c_5b(x)\n+  double precision x\n+  f2c_5b = x\n+end"}, {"sha": "850df4f0f03c40615c6924f37f8d1657f173729e", "filename": "gcc/testsuite/lib/gfortran.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25284f3785bc086669c8676dfb73b835bf73f34/gcc%2Ftestsuite%2Flib%2Fgfortran.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25284f3785bc086669c8676dfb73b835bf73f34/gcc%2Ftestsuite%2Flib%2Fgfortran.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgfortran.exp?ref=f25284f3785bc086669c8676dfb73b835bf73f34", "patch": "@@ -188,6 +188,6 @@ proc gfortran_target_compile { source dest type options } {\n     lappend options \"compiler=$GFORTRAN_UNDER_TEST\"\n \n     set options [concat \"$ALWAYS_GFORTRANFLAGS\" $options]\n-\n+    set options [dg-additional-files-options $options $source]\n     return [target_compile $source $dest $type $options]\n }"}]}