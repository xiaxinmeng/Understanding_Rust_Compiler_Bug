{"sha": "54af3008b6f05985d378a48d337d9c70c708ecff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRhZjMwMDhiNmYwNTk4NWQzNzhhNDhkMzM3ZDljNzBjNzA4ZWNmZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-11-23T15:52:36Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-11-23T15:53:25Z"}, "message": "Do not leak SSANAMES in lto streamer\n\n\t* lto-streamer-in.c (input_cfg): Do not init ssa operands.\n\t(input_function): Do not init tree_ssa and set in_ssa_p.\n\t(input_ssa_names): Do it here.\n\t* tree-ssa.c (init_tree_ssa): Add additional SIZE parameter, default\n\tto 0\n\t* tree-ssanames.c (init_ssanames): Do not round size up to 50, allocate\n\tprecisely.\n\t* tree-ssa.h (init_tree_ssa): Update prototype.", "tree": {"sha": "c31e53f785aa5d8c97068be67ec8e3cce2c9a655", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c31e53f785aa5d8c97068be67ec8e3cce2c9a655"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54af3008b6f05985d378a48d337d9c70c708ecff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54af3008b6f05985d378a48d337d9c70c708ecff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54af3008b6f05985d378a48d337d9c70c708ecff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54af3008b6f05985d378a48d337d9c70c708ecff/comments", "author": null, "committer": null, "parents": [{"sha": "204b61b906f2f806eec2f7bb72d4dd79c88d688a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/204b61b906f2f806eec2f7bb72d4dd79c88d688a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/204b61b906f2f806eec2f7bb72d4dd79c88d688a"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "a20d64b008953af6d2d4cd495c9ef6b99b675ae3", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54af3008b6f05985d378a48d337d9c70c708ecff/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54af3008b6f05985d378a48d337d9c70c708ecff/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=54af3008b6f05985d378a48d337d9c70c708ecff", "patch": "@@ -1017,7 +1017,6 @@ input_cfg (class lto_input_block *ib, class data_in *data_in,\n   int index;\n \n   init_empty_tree_cfg_for_function (fn);\n-  init_ssa_operands (fn);\n \n   profile_status_for_fn (fn) = streamer_read_enum (ib, profile_status_d,\n \t\t\t\t\t\t   PROFILE_LAST);\n@@ -1144,7 +1143,9 @@ input_ssa_names (class lto_input_block *ib, class data_in *data_in,\n   unsigned int i, size;\n \n   size = streamer_read_uhwi (ib);\n-  init_ssanames (fn, size);\n+  init_tree_ssa (fn, size);\n+  cfun->gimple_df->in_ssa_p = true;\n+  init_ssa_operands (fn);\n \n   i = streamer_read_uhwi (ib);\n   while (i)\n@@ -1384,9 +1385,6 @@ input_function (tree fn_decl, class data_in *data_in,\n \n   push_struct_function (fn_decl);\n   fn = DECL_STRUCT_FUNCTION (fn_decl);\n-  init_tree_ssa (fn);\n-  /* We input IL in SSA form.  */\n-  cfun->gimple_df->in_ssa_p = true;\n \n   gimple_register_cfg_hooks ();\n "}, {"sha": "a575979aa13954e826c721765323d3d5e8a0d0dd", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54af3008b6f05985d378a48d337d9c70c708ecff/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54af3008b6f05985d378a48d337d9c70c708ecff/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=54af3008b6f05985d378a48d337d9c70c708ecff", "patch": "@@ -1218,15 +1218,16 @@ verify_ssa (bool check_modified_stmt, bool check_ssa_operands)\n #  pragma GCC diagnostic pop\n #endif\n \n-/* Initialize global DFA and SSA structures.  */\n+/* Initialize global DFA and SSA structures.\n+   If SIZE is non-zero allocated ssa names array of a given size.  */\n \n void\n-init_tree_ssa (struct function *fn)\n+init_tree_ssa (struct function *fn, int size)\n {\n   fn->gimple_df = ggc_cleared_alloc<gimple_df> ();\n   fn->gimple_df->default_defs = hash_table<ssa_name_hasher>::create_ggc (20);\n   pt_solution_reset (&fn->gimple_df->escaped);\n-  init_ssanames (fn, 0);\n+  init_ssanames (fn, size);\n }\n \n /* Deallocate memory associated with SSA data structures for FNDECL.  */"}, {"sha": "7e7fa4a6e69c7cb6907325d6b564e323932c8c55", "filename": "gcc/tree-ssa.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54af3008b6f05985d378a48d337d9c70c708ecff/gcc%2Ftree-ssa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54af3008b6f05985d378a48d337d9c70c708ecff/gcc%2Ftree-ssa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.h?ref=54af3008b6f05985d378a48d337d9c70c708ecff", "patch": "@@ -45,7 +45,7 @@ extern void insert_debug_temps_for_defs (gimple_stmt_iterator *);\n extern void reset_debug_uses (gimple *);\n extern void release_defs_bitset (bitmap toremove);\n extern void verify_ssa (bool, bool);\n-extern void init_tree_ssa (function *);\n+extern void init_tree_ssa (function *, int size = 0);\n extern void delete_tree_ssa (function *);\n extern bool tree_ssa_useless_type_conversion (tree);\n extern tree tree_ssa_strip_useless_type_conversions (tree);"}, {"sha": "ec4681f85cbd76b07f61a355b3a797cf5b7a870d", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54af3008b6f05985d378a48d337d9c70c708ecff/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54af3008b6f05985d378a48d337d9c70c708ecff/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=54af3008b6f05985d378a48d337d9c70c708ecff", "patch": "@@ -77,10 +77,10 @@ unsigned int ssa_name_nodes_created;\n void\n init_ssanames (struct function *fn, int size)\n {\n-  if (size < 50)\n-    size = 50;\n-\n-  vec_alloc (SSANAMES (fn), size);\n+  if (!size)\n+    vec_alloc (SSANAMES (fn), 50);\n+  else\n+    vec_safe_reserve (SSANAMES (fn), size, true);\n \n   /* Version 0 is special, so reserve the first slot in the table.  Though\n      currently unused, we may use version 0 in alias analysis as part of"}]}