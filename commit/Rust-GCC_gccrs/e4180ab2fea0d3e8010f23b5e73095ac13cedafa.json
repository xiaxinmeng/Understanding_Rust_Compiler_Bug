{"sha": "e4180ab2fea0d3e8010f23b5e73095ac13cedafa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQxODBhYjJmZWEwZDNlODAxMGYyM2I1ZTczMDk1YWMxM2NlZGFmYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-03-26T16:08:37Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-03-26T16:08:37Z"}, "message": "aarch64: Ignore inductions when costing vector code\n\nIn practice it seems to be better not to cost a vector induction.\nThe scalar code generally needs the same induction but doesn't\ncost it, making an apples-for-apples comparison harder.  Most\ninductions also have a low latency and their cost usually gets\nhidden by other operations.\n\nLike with the previous patches, this one only becomes active if\na CPU selects use_new_vector_costs.  It should therefore have\na very low impact on other CPUs.\n\ngcc/\n\t* config/aarch64/aarch64.c (aarch64_detect_vector_stmt_subtype):\n\tAssume a zero cost for induction phis.", "tree": {"sha": "c8c8314edec0ca3007c0215746407e06c998c742", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8c8314edec0ca3007c0215746407e06c998c742"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4180ab2fea0d3e8010f23b5e73095ac13cedafa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4180ab2fea0d3e8010f23b5e73095ac13cedafa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4180ab2fea0d3e8010f23b5e73095ac13cedafa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4180ab2fea0d3e8010f23b5e73095ac13cedafa/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99f94ae5018e915d0c1db1b6d4110d68bc4d242e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99f94ae5018e915d0c1db1b6d4110d68bc4d242e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99f94ae5018e915d0c1db1b6d4110d68bc4d242e"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "6d18d82079cb958b5ddaa6082f103daee74c0124", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4180ab2fea0d3e8010f23b5e73095ac13cedafa/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4180ab2fea0d3e8010f23b5e73095ac13cedafa/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=e4180ab2fea0d3e8010f23b5e73095ac13cedafa", "patch": "@@ -14541,6 +14541,12 @@ aarch64_detect_vector_stmt_subtype (vec_info *vinfo, vect_cost_for_stmt kind,\n   if (aarch64_sve_mode_p (TYPE_MODE (vectype)))\n     sve_costs = aarch64_tune_params.vec_costs->sve;\n \n+  /* It's generally better to avoid costing inductions, since the induction\n+     will usually be hidden by other operations.  This is particularly true\n+     for things like COND_REDUCTIONS.  */\n+  if (is_a<gphi *> (stmt_info->stmt))\n+    return 0;\n+\n   /* Detect cases in which vec_to_scalar is describing the extraction of a\n      vector element in preparation for a scalar store.  The store itself is\n      costed separately.  */"}]}