{"sha": "698425f5cc85ec83fa17ba08d6da0754ced198f7", "node_id": "C_kwDOANBUbNoAKDY5ODQyNWY1Y2M4NWVjODNmYTE3YmEwOGQ2ZGEwNzU0Y2VkMTk4Zjc", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@adacore.com", "date": "2021-08-11T17:12:55Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-01T06:13:37Z"}, "message": "[Ada] Add more node unions\n\ngcc/ada/\n\n\t* gen_il-gen-gen_nodes.adb (N_Alternative, N_Is_Case_Choice):\n\tAdd.\n\t(N_Is_Exception_Choice, N_Is_Range): Likewise.\n\t* gen_il-types.ads: Add above names.\n\t* gen_il-gen.adb (Put_Union_Membership): Write both declarations\n\tand definitions of union functions.", "tree": {"sha": "999806de582a5407e117d367a67fa873bedeebee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/999806de582a5407e117d367a67fa873bedeebee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/698425f5cc85ec83fa17ba08d6da0754ced198f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/698425f5cc85ec83fa17ba08d6da0754ced198f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/698425f5cc85ec83fa17ba08d6da0754ced198f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/698425f5cc85ec83fa17ba08d6da0754ced198f7/comments", "author": {"login": "richardkenner", "id": 56170968, "node_id": "MDQ6VXNlcjU2MTcwOTY4", "avatar_url": "https://avatars.githubusercontent.com/u/56170968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardkenner", "html_url": "https://github.com/richardkenner", "followers_url": "https://api.github.com/users/richardkenner/followers", "following_url": "https://api.github.com/users/richardkenner/following{/other_user}", "gists_url": "https://api.github.com/users/richardkenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardkenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardkenner/subscriptions", "organizations_url": "https://api.github.com/users/richardkenner/orgs", "repos_url": "https://api.github.com/users/richardkenner/repos", "events_url": "https://api.github.com/users/richardkenner/events{/privacy}", "received_events_url": "https://api.github.com/users/richardkenner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b1a5da38e00348dfc359ef8418de344356ef78e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b1a5da38e00348dfc359ef8418de344356ef78e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b1a5da38e00348dfc359ef8418de344356ef78e"}], "stats": {"total": 64, "additions": 51, "deletions": 13}, "files": [{"sha": "20d25ea83ac24f5cfd058d8ed66355c626c05af0", "filename": "gcc/ada/gen_il-gen-gen_nodes.adb", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/698425f5cc85ec83fa17ba08d6da0754ced198f7/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/698425f5cc85ec83fa17ba08d6da0754ced198f7/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb?ref=698425f5cc85ec83fa17ba08d6da0754ced198f7", "patch": "@@ -1686,4 +1686,31 @@ begin -- Gen_IL.Gen.Gen_Nodes\n              N_Subprogram_Specification));\n    --  Nodes that can be returned by Declaration_Node\n \n+   Union (N_Is_Range,\n+          Children =>\n+            (N_Character_Literal,\n+             N_Entity_Name,\n+             N_Has_Bounds,\n+             N_Integer_Literal,\n+             N_Subtype_Indication));\n+   --  Nodes that can be used to specify a range\n+\n+   Union (N_Is_Case_Choice,\n+          Children =>\n+            (N_Is_Range,\n+             N_Others_Choice));\n+   --  Nodes that can be in the choices of a case statement\n+\n+   Union (N_Is_Exception_Choice,\n+          Children =>\n+            (N_Entity_Name,\n+             N_Others_Choice));\n+   --  Nodes that can be in the choices of an exception handler\n+\n+   Union (N_Alternative,\n+          Children =>\n+            (N_Case_Statement_Alternative,\n+             N_Variant));\n+   --  Nodes that can be alternatives in case contructs\n+\n end Gen_IL.Gen.Gen_Nodes;"}, {"sha": "e3b034a8d69809dcc2b092c576258025ec6798f2", "filename": "gcc/ada/gen_il-gen.adb", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/698425f5cc85ec83fa17ba08d6da0754ced198f7/gcc%2Fada%2Fgen_il-gen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/698425f5cc85ec83fa17ba08d6da0754ced198f7/gcc%2Fada%2Fgen_il-gen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen.adb?ref=698425f5cc85ec83fa17ba08d6da0754ced198f7", "patch": "@@ -652,7 +652,7 @@ package body Gen_IL.Gen is\n       --  Used by Put_C_Getters to print out one high-level getter.\n \n       procedure Put_Union_Membership\n-        (S : in out Sink; Root : Root_Type);\n+        (S : in out Sink; Root : Root_Type; Only_Prototypes : Boolean);\n       --  Used by Put_Sinfo_Dot_H and Put_Einfo_Dot_H to print out functions to\n       --  test membership in a union type.\n \n@@ -3175,14 +3175,16 @@ package body Gen_IL.Gen is\n          end Put_Kind_Subtype;\n \n       begin\n+         Put_Union_Membership (S, Root, Only_Prototypes => True);\n+\n          Iterate_Types (Root, Pre => Put_Enum_Lit'Access);\n \n          Put (S, \"#define Number_\" & Node_Or_Entity (Root) & \"_Kinds \" &\n               Image (Cur_Pos) & \"\" & LF & LF);\n \n          Iterate_Types (Root, Pre => Put_Kind_Subtype'Access);\n \n-         Put_Union_Membership (S, Root);\n+         Put_Union_Membership (S, Root, Only_Prototypes => False);\n       end Put_C_Type_And_Subtypes;\n \n       ------------------\n@@ -3269,7 +3271,7 @@ package body Gen_IL.Gen is\n       --------------------------\n \n       procedure Put_Union_Membership\n-        (S : in out Sink; Root : Root_Type) is\n+        (S : in out Sink; Root : Root_Type; Only_Prototypes : Boolean) is\n \n          procedure Put_Ors (T : Abstract_Type);\n          --  Print the \"or\" (i.e. \"||\") of tests whether kind is in each child\n@@ -3303,22 +3305,27 @@ package body Gen_IL.Gen is\n          end Put_Ors;\n \n       begin\n-         Put (S, LF & \"// Membership tests for union types\" & LF & LF);\n+         if not Only_Prototypes then\n+            Put (S, LF & \"// Membership tests for union types\" & LF & LF);\n+         end if;\n \n          for T in First_Abstract (Root) .. Last_Abstract (Root) loop\n             if Type_Table (T) /= null and then Type_Table (T).Is_Union then\n                Put (S, \"INLINE Boolean\" & LF);\n                Put (S, \"Is_In_\" & Image (T) & \" (\" &\n-                    Node_Or_Entity (Root) & \"_Kind kind)\" & LF);\n+                    Node_Or_Entity (Root) & \"_Kind kind)\" &\n+                    (if Only_Prototypes then \";\" else \"\") & LF);\n \n-               Put (S, \"{\" & LF);\n-               Increase_Indent (S, 3);\n-               Put (S, \"return\" & LF);\n-               Increase_Indent (S, 3);\n-               Put_Ors (T);\n-               Decrease_Indent (S, 3);\n-               Decrease_Indent (S, 3);\n-               Put (S, \";\" & LF & \"}\" & LF);\n+               if not Only_Prototypes then\n+                  Put (S, \"{\" & LF);\n+                  Increase_Indent (S, 3);\n+                  Put (S, \"return\" & LF);\n+                  Increase_Indent (S, 3);\n+                  Put_Ors (T);\n+                  Decrease_Indent (S, 3);\n+                  Decrease_Indent (S, 3);\n+                  Put (S, \";\" & LF & \"}\" & LF);\n+               end if;\n \n                Put (S, \"\" & LF);\n             end if;"}, {"sha": "622bc1ffc73c87c9b28ed62cf0930e9cf2b6cd83", "filename": "gcc/ada/gen_il-types.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/698425f5cc85ec83fa17ba08d6da0754ced198f7/gcc%2Fada%2Fgen_il-types.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/698425f5cc85ec83fa17ba08d6da0754ced198f7/gcc%2Fada%2Fgen_il-types.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-types.ads?ref=698425f5cc85ec83fa17ba08d6da0754ced198f7", "patch": "@@ -77,6 +77,7 @@ package Gen_IL.Types is\n \n       Node_Kind, -- root of node type hierarchy\n       N_Access_To_Subprogram_Definition,\n+      N_Alternative,\n       N_Array_Type_Definition,\n       N_Binary_Op,\n       N_Body_Stub,\n@@ -94,8 +95,11 @@ package Gen_IL.Types is\n       N_Has_Condition,\n       N_Has_Entity,\n       N_Has_Etype,\n+      N_Is_Case_Choice,\n       N_Is_Decl,\n+      N_Is_Exception_Choice,\n       N_Is_Index,\n+      N_Is_Range,\n       N_Multiplying_Operator,\n       N_Later_Decl_Item,\n       N_Membership_Test,"}]}