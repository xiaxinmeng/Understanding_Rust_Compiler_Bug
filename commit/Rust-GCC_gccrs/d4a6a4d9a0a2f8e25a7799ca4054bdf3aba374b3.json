{"sha": "d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRhNmE0ZDlhMGEyZjhlMjVhNzc5OWNhNDA1NGJkZjNhYmEzNzRiMw==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2014-09-03T09:32:08Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2014-09-03T09:32:08Z"}, "message": "[NDS32] Implement TARGET_SETUP_INCOMING_VARARGS target hook.\n\n\t* config/nds32/nds32.c (nds32_setup_incoming_varargs): New\n\timplementation for TARGET_SETUP_INCOMING_VARARGS.\n\t(nds32_strict_argument_naming): Refine comment.\n\t* config/nds32/nds32.h (TARGET_SOFT_FLOAT, TARGET_HARD_FLOAT):\n\tDefine for future implementation.\n\nFrom-SVN: r214861", "tree": {"sha": "33ea55e625ec39ec2556b27bac874c594b7587b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33ea55e625ec39ec2556b27bac874c594b7587b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c6fb3ba59e1692160666e6ef21e654e6366af01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c6fb3ba59e1692160666e6ef21e654e6366af01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c6fb3ba59e1692160666e6ef21e654e6366af01"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "c8ac8b5295881d9d8ede52de7a9842f612cd696d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3", "patch": "@@ -1,3 +1,11 @@\n+2014-09-03  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32.c (nds32_setup_incoming_varargs): New\n+\timplementation for TARGET_SETUP_INCOMING_VARARGS.\n+\t(nds32_strict_argument_naming): Refine comment.\n+\t* config/nds32/nds32.h (TARGET_SOFT_FLOAT, TARGET_HARD_FLOAT):\n+\tDefine for future implementation.\n+\n 2014-09-03  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* config/i386/adxintrin.h (_subborrow_u32): New."}, {"sha": "a94d576d7eb0ec45dfd1812cddc848ce3139a709", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 47, "deletions": 3, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3", "patch": "@@ -1551,12 +1551,53 @@ nds32_warn_func_return (tree decl)\n \f\n /* Implementing the Varargs Macros.  */\n \n+static void\n+nds32_setup_incoming_varargs (cumulative_args_t ca,\n+\t\t\t      enum machine_mode mode,\n+\t\t\t      tree type,\n+\t\t\t      int *pretend_args_size,\n+\t\t\t      int second_time ATTRIBUTE_UNUSED)\n+{\n+  unsigned int total_args_regs;\n+  unsigned int num_of_used_regs;\n+  unsigned int remaining_reg_count;\n+  CUMULATIVE_ARGS *cum;\n+\n+  /* If we are under hard float abi, we do not need to set *pretend_args_size.\n+     So that all nameless arguments are pushed by caller and all situation\n+     can be handled by GCC itself.  */\n+  if (TARGET_HARD_FLOAT)\n+    return;\n+\n+  /* We are using NDS32_MAX_GPR_REGS_FOR_ARGS registers,\n+     counting from NDS32_GPR_ARG_FIRST_REGNUM, for saving incoming arguments.\n+     However, for nameless(anonymous) arguments, we should push them on the\n+     stack so that all the nameless arguments appear to have been passed\n+     consecutively in the memory for accessing.  Hence, we need to check and\n+     exclude the registers that are used for named arguments.  */\n+\n+  cum = get_cumulative_args (ca);\n+\n+  /* The MODE and TYPE describe the last argument.\n+     We need those information to determine the remaining registers\n+     for varargs.  */\n+  total_args_regs\n+    = NDS32_MAX_GPR_REGS_FOR_ARGS + NDS32_GPR_ARG_FIRST_REGNUM;\n+  num_of_used_regs\n+    = NDS32_AVAILABLE_REGNUM_FOR_GPR_ARG (cum->gpr_offset, mode, type)\n+      + NDS32_NEED_N_REGS_FOR_ARG (mode, type);\n+\n+  remaining_reg_count = total_args_regs - num_of_used_regs;\n+  *pretend_args_size = remaining_reg_count * UNITS_PER_WORD;\n+\n+  return;\n+}\n+\n static bool\n nds32_strict_argument_naming (cumulative_args_t ca ATTRIBUTE_UNUSED)\n {\n-  /* Return true so that all the named arguments for FUNCTION_ARG have named=1.\n-     If return false, for the variadic function, all named arguments EXCEPT\n-     the last are treated as named.  */\n+  /* If this hook returns true, the named argument of FUNCTION_ARG is always\n+     true for named arguments, and false for unnamed arguments.  */\n   return true;\n }\n \n@@ -3328,6 +3369,9 @@ nds32_target_alignment (rtx label)\n \f\n /* Implementing the Varargs Macros.  */\n \n+#undef TARGET_SETUP_INCOMING_VARARGS\n+#define TARGET_SETUP_INCOMING_VARARGS nds32_setup_incoming_varargs\n+\n #undef TARGET_STRICT_ARGUMENT_NAMING\n #define TARGET_STRICT_ARGUMENT_NAMING nds32_strict_argument_naming\n "}, {"sha": "3f4c3ae3d5cedca92db545839c12065d5e74ccc2", "filename": "gcc/config/nds32/nds32.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3/gcc%2Fconfig%2Fnds32%2Fnds32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3/gcc%2Fconfig%2Fnds32%2Fnds32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.h?ref=d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3", "patch": "@@ -336,6 +336,9 @@ enum nds32_builtins\n #define TARGET_ISA_V3   (nds32_arch_option == ARCH_V3)\n #define TARGET_ISA_V3M  (nds32_arch_option == ARCH_V3M)\n \n+#define TARGET_SOFT_FLOAT 1\n+#define TARGET_HARD_FLOAT 0\n+\n /* ------------------------------------------------------------------------ */\n \f\n /* Controlling the Compilation Driver.  */"}]}