{"sha": "a5504e99e147b0915009cb9db90202357dc60849", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU1MDRlOTllMTQ3YjA5MTUwMDljYjlkYjkwMjAyMzU3ZGM2MDg0OQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-20T21:03:49Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-20T21:03:49Z"}, "message": "[ARM/AArch64][testsuite] Add vldX_dup test.\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vldX_dup.c: New file.\n\nFrom-SVN: r219914", "tree": {"sha": "7e035282b2a08c57889e845edc25d6b81dcc6ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e035282b2a08c57889e845edc25d6b81dcc6ef6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5504e99e147b0915009cb9db90202357dc60849", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5504e99e147b0915009cb9db90202357dc60849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5504e99e147b0915009cb9db90202357dc60849", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5504e99e147b0915009cb9db90202357dc60849/comments", "author": null, "committer": null, "parents": [{"sha": "d302f41d4e9d04c5a153683b58b3bb754c736404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d302f41d4e9d04c5a153683b58b3bb754c736404", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d302f41d4e9d04c5a153683b58b3bb754c736404"}], "stats": {"total": 675, "additions": 675, "deletions": 0}, "files": [{"sha": "ae1974677430f81717eb56bf7c7f2f54ce828006", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5504e99e147b0915009cb9db90202357dc60849/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5504e99e147b0915009cb9db90202357dc60849/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5504e99e147b0915009cb9db90202357dc60849", "patch": "@@ -1,3 +1,7 @@\n+2015-01-20  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vldX_dup.c: New file.\n+\n 2015-01-20  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/guality/pr49888.c (v): Add __attribute__((used))."}, {"sha": "53cd8f39a248f372d7b3a95edef5c9a91766f08a", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vldX_dup.c", "status": "added", "additions": 671, "deletions": 0, "changes": 671, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5504e99e147b0915009cb9db90202357dc60849/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvldX_dup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5504e99e147b0915009cb9db90202357dc60849/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvldX_dup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvldX_dup.c?ref=a5504e99e147b0915009cb9db90202357dc60849", "patch": "@@ -0,0 +1,671 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+\n+/* vld2_dup/chunk 0.  */\n+VECT_VAR_DECL(expected_vld2_0,int,8,8) [] = { 0xf0, 0xf1, 0xf0, 0xf1,\n+\t\t\t\t       0xf0, 0xf1, 0xf0, 0xf1 };\n+VECT_VAR_DECL(expected_vld2_0,int,16,4) [] = { 0xfff0, 0xfff1, 0xfff0, 0xfff1 };\n+VECT_VAR_DECL(expected_vld2_0,int,32,2) [] = { 0xfffffff0, 0xfffffff1 };\n+VECT_VAR_DECL(expected_vld2_0,int,64,1) [] = { 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected_vld2_0,uint,8,8) [] = { 0xf0, 0xf1, 0xf0, 0xf1,\n+\t\t\t\t\t0xf0, 0xf1, 0xf0, 0xf1 };\n+VECT_VAR_DECL(expected_vld2_0,uint,16,4) [] = { 0xfff0, 0xfff1, 0xfff0, 0xfff1 };\n+VECT_VAR_DECL(expected_vld2_0,uint,32,2) [] = { 0xfffffff0, 0xfffffff1 };\n+VECT_VAR_DECL(expected_vld2_0,uint,64,1) [] = { 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected_vld2_0,poly,8,8) [] = { 0xf0, 0xf1, 0xf0, 0xf1,\n+\t\t\t\t\t0xf0, 0xf1, 0xf0, 0xf1 };\n+VECT_VAR_DECL(expected_vld2_0,poly,16,4) [] = { 0xfff0, 0xfff1, 0xfff0, 0xfff1 };\n+VECT_VAR_DECL(expected_vld2_0,hfloat,32,2) [] = { 0xc1800000, 0xc1700000 };\n+VECT_VAR_DECL(expected_vld2_0,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld2_0,int,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld2_0,int,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld2_0,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld2_0,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld2_0,uint,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld2_0,uint,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld2_0,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t 0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld2_0,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld2_0,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld2_0,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t   0x33333333, 0x33333333 };\n+\n+/* vld2_dup/chunk 1.  */\n+VECT_VAR_DECL(expected_vld2_1,int,8,8) [] = { 0xf0, 0xf1, 0xf0, 0xf1,\n+\t\t\t\t\t      0xf0, 0xf1, 0xf0, 0xf1 };\n+VECT_VAR_DECL(expected_vld2_1,int,16,4) [] = { 0xfff0, 0xfff1, 0xfff0, 0xfff1 };\n+VECT_VAR_DECL(expected_vld2_1,int,32,2) [] = { 0xfffffff0, 0xfffffff1 };\n+VECT_VAR_DECL(expected_vld2_1,int,64,1) [] = { 0xfffffffffffffff1 };\n+VECT_VAR_DECL(expected_vld2_1,uint,8,8) [] = { 0xf0, 0xf1, 0xf0, 0xf1,\n+\t\t\t\t\t       0xf0, 0xf1, 0xf0, 0xf1 };\n+VECT_VAR_DECL(expected_vld2_1,uint,16,4) [] = { 0xfff0, 0xfff1, 0xfff0, 0xfff1 };\n+VECT_VAR_DECL(expected_vld2_1,uint,32,2) [] = { 0xfffffff0, 0xfffffff1 };\n+VECT_VAR_DECL(expected_vld2_1,uint,64,1) [] = { 0xfffffffffffffff1 };\n+VECT_VAR_DECL(expected_vld2_1,poly,8,8) [] = { 0xf0, 0xf1, 0xf0, 0xf1,\n+\t\t\t\t\t       0xf0, 0xf1, 0xf0, 0xf1 };\n+VECT_VAR_DECL(expected_vld2_1,poly,16,4) [] = { 0xfff0, 0xfff1,\n+\t\t\t\t\t\t0xfff0, 0xfff1 };\n+VECT_VAR_DECL(expected_vld2_1,hfloat,32,2) [] = { 0xc1800000, 0xc1700000 };\n+VECT_VAR_DECL(expected_vld2_1,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld2_1,int,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t       0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld2_1,int,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t       0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld2_1,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t       0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld2_1,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld2_1,uint,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld2_1,uint,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld2_1,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld2_1,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld2_1,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld2_1,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t  0x33333333, 0x33333333 };\n+\n+/* vld3_dup/chunk 0.  */\n+VECT_VAR_DECL(expected_vld3_0,int,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf0,\n+\t\t\t\t\t      0xf1, 0xf2, 0xf0, 0xf1 };\n+VECT_VAR_DECL(expected_vld3_0,int,16,4) [] = { 0xfff0, 0xfff1,\n+\t\t\t\t\t       0xfff2, 0xfff0 };\n+VECT_VAR_DECL(expected_vld3_0,int,32,2) [] = { 0xfffffff0, 0xfffffff1 };\n+VECT_VAR_DECL(expected_vld3_0,int,64,1) [] = { 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected_vld3_0,uint,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf0,\n+\t\t\t\t\t       0xf1, 0xf2, 0xf0, 0xf1 };\n+VECT_VAR_DECL(expected_vld3_0,uint,16,4) [] = { 0xfff0, 0xfff1,\n+\t\t\t\t\t\t0xfff2, 0xfff0 };\n+VECT_VAR_DECL(expected_vld3_0,uint,32,2) [] = { 0xfffffff0, 0xfffffff1 };\n+VECT_VAR_DECL(expected_vld3_0,uint,64,1) [] = { 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected_vld3_0,poly,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf0,\n+\t\t\t\t\t       0xf1, 0xf2, 0xf0, 0xf1 };\n+VECT_VAR_DECL(expected_vld3_0,poly,16,4) [] = { 0xfff0, 0xfff1,\n+\t\t\t\t\t\t0xfff2, 0xfff0 };\n+VECT_VAR_DECL(expected_vld3_0,hfloat,32,2) [] = { 0xc1800000, 0xc1700000 };\n+VECT_VAR_DECL(expected_vld3_0,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld3_0,int,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t       0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld3_0,int,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t       0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld3_0,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t       0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld3_0,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld3_0,uint,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld3_0,uint,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld3_0,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld3_0,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld3_0,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld3_0,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t  0x33333333, 0x33333333 };\n+\n+/* vld3_dup/chunk 1.  */\n+VECT_VAR_DECL(expected_vld3_1,int,8,8) [] = { 0xf2, 0xf0, 0xf1, 0xf2,\n+\t\t\t\t\t      0xf0, 0xf1, 0xf2, 0xf0 };\n+VECT_VAR_DECL(expected_vld3_1,int,16,4) [] = { 0xfff1, 0xfff2,\n+\t\t\t\t\t       0xfff0, 0xfff1 };\n+VECT_VAR_DECL(expected_vld3_1,int,32,2) [] = { 0xfffffff2, 0xfffffff0 };\n+VECT_VAR_DECL(expected_vld3_1,int,64,1) [] = { 0xfffffffffffffff1 };\n+VECT_VAR_DECL(expected_vld3_1,uint,8,8) [] = { 0xf2, 0xf0, 0xf1, 0xf2,\n+\t\t\t\t\t       0xf0, 0xf1, 0xf2, 0xf0 };\n+VECT_VAR_DECL(expected_vld3_1,uint,16,4) [] = { 0xfff1, 0xfff2,\n+\t\t\t\t\t\t0xfff0, 0xfff1 };\n+VECT_VAR_DECL(expected_vld3_1,uint,32,2) [] = { 0xfffffff2, 0xfffffff0 };\n+VECT_VAR_DECL(expected_vld3_1,uint,64,1) [] = { 0xfffffffffffffff1 };\n+VECT_VAR_DECL(expected_vld3_1,poly,8,8) [] = { 0xf2, 0xf0, 0xf1, 0xf2,\n+\t\t\t\t\t       0xf0, 0xf1, 0xf2, 0xf0 };\n+VECT_VAR_DECL(expected_vld3_1,poly,16,4) [] = { 0xfff1, 0xfff2,\n+\t\t\t\t\t\t0xfff0, 0xfff1 };\n+VECT_VAR_DECL(expected_vld3_1,hfloat,32,2) [] = { 0xc1600000, 0xc1800000 };\n+VECT_VAR_DECL(expected_vld3_1,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld3_1,int,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t       0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld3_1,int,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t       0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld3_1,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t       0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld3_1,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld3_1,uint,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld3_1,uint,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld3_1,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld3_1,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld3_1,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld3_1,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t  0x33333333, 0x33333333 };\n+\n+/* vld3_dup/chunk 2.  */\n+VECT_VAR_DECL(expected_vld3_2,int,8,8) [] = { 0xf1, 0xf2, 0xf0, 0xf1,\n+\t\t\t\t\t      0xf2, 0xf0, 0xf1, 0xf2 };\n+VECT_VAR_DECL(expected_vld3_2,int,16,4) [] = { 0xfff2, 0xfff0,\n+\t\t\t\t\t       0xfff1, 0xfff2 };\n+VECT_VAR_DECL(expected_vld3_2,int,32,2) [] = { 0xfffffff1, 0xfffffff2 };\n+VECT_VAR_DECL(expected_vld3_2,int,64,1) [] = { 0xfffffffffffffff2 };\n+VECT_VAR_DECL(expected_vld3_2,uint,8,8) [] = { 0xf1, 0xf2, 0xf0, 0xf1,\n+\t\t\t\t\t       0xf2, 0xf0, 0xf1, 0xf2 };\n+VECT_VAR_DECL(expected_vld3_2,uint,16,4) [] = { 0xfff2, 0xfff0,\n+\t\t\t\t\t\t0xfff1, 0xfff2 };\n+VECT_VAR_DECL(expected_vld3_2,uint,32,2) [] = { 0xfffffff1, 0xfffffff2 };\n+VECT_VAR_DECL(expected_vld3_2,uint,64,1) [] = { 0xfffffffffffffff2 };\n+VECT_VAR_DECL(expected_vld3_2,poly,8,8) [] = { 0xf1, 0xf2, 0xf0, 0xf1,\n+\t\t\t\t\t       0xf2, 0xf0, 0xf1, 0xf2 };\n+VECT_VAR_DECL(expected_vld3_2,poly,16,4) [] = { 0xfff2, 0xfff0,\n+\t\t\t\t\t\t0xfff1, 0xfff2 };\n+VECT_VAR_DECL(expected_vld3_2,hfloat,32,2) [] = { 0xc1700000, 0xc1600000 };\n+VECT_VAR_DECL(expected_vld3_2,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld3_2,int,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t       0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld3_2,int,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t       0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld3_2,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t       0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld3_2,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld3_2,uint,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld3_2,uint,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld3_2,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld3_2,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld3_2,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld3_2,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t  0x33333333, 0x33333333 };\n+\n+/* vld4_dup/chunk 0.  */\n+VECT_VAR_DECL(expected_vld4_0,int,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t      0xf0, 0xf1, 0xf2, 0xf3 };\n+VECT_VAR_DECL(expected_vld4_0,int,16,4) [] = { 0xfff0, 0xfff1,\n+\t\t\t\t\t       0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected_vld4_0,int,32,2) [] = { 0xfffffff0, 0xfffffff1 };\n+VECT_VAR_DECL(expected_vld4_0,int,64,1) [] = { 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected_vld4_0,uint,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t       0xf0, 0xf1, 0xf2, 0xf3 };\n+VECT_VAR_DECL(expected_vld4_0,uint,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected_vld4_0,uint,32,2) [] = { 0xfffffff0, 0xfffffff1 };\n+VECT_VAR_DECL(expected_vld4_0,uint,64,1) [] = { 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected_vld4_0,poly,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t       0xf0, 0xf1, 0xf2, 0xf3 };\n+VECT_VAR_DECL(expected_vld4_0,poly,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected_vld4_0,hfloat,32,2) [] = { 0xc1800000, 0xc1700000 };\n+VECT_VAR_DECL(expected_vld4_0,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld4_0,int,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t       0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld4_0,int,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t       0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld4_0,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t       0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld4_0,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld4_0,uint,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld4_0,uint,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld4_0,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld4_0,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld4_0,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld4_0,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t  0x33333333, 0x33333333 };\n+\n+/* vld4_dup/chunk 1.  */\n+VECT_VAR_DECL(expected_vld4_1,int,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t      0xf0, 0xf1, 0xf2, 0xf3 };\n+VECT_VAR_DECL(expected_vld4_1,int,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected_vld4_1,int,32,2) [] = { 0xfffffff2, 0xfffffff3 };\n+VECT_VAR_DECL(expected_vld4_1,int,64,1) [] = { 0xfffffffffffffff1 };\n+VECT_VAR_DECL(expected_vld4_1,uint,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t       0xf0, 0xf1, 0xf2, 0xf3 };\n+VECT_VAR_DECL(expected_vld4_1,uint,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected_vld4_1,uint,32,2) [] = { 0xfffffff2, 0xfffffff3 };\n+VECT_VAR_DECL(expected_vld4_1,uint,64,1) [] = { 0xfffffffffffffff1 };\n+VECT_VAR_DECL(expected_vld4_1,poly,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t       0xf0, 0xf1, 0xf2, 0xf3 };\n+VECT_VAR_DECL(expected_vld4_1,poly,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected_vld4_1,hfloat,32,2) [] = { 0xc1600000, 0xc1500000 };\n+VECT_VAR_DECL(expected_vld4_1,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld4_1,int,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t       0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld4_1,int,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t       0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld4_1,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t       0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld4_1,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld4_1,uint,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld4_1,uint,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld4_1,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld4_1,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld4_1,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld4_1,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t  0x33333333, 0x33333333 };\n+\n+/* vld4_dup/chunk 2.  */\n+VECT_VAR_DECL(expected_vld4_2,int,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t      0xf0, 0xf1, 0xf2, 0xf3 };\n+VECT_VAR_DECL(expected_vld4_2,int,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected_vld4_2,int,32,2) [] = { 0xfffffff0, 0xfffffff1 };\n+VECT_VAR_DECL(expected_vld4_2,int,64,1) [] = { 0xfffffffffffffff2 };\n+VECT_VAR_DECL(expected_vld4_2,uint,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t       0xf0, 0xf1, 0xf2, 0xf3 };\n+VECT_VAR_DECL(expected_vld4_2,uint,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected_vld4_2,uint,32,2) [] = { 0xfffffff0, 0xfffffff1 };\n+VECT_VAR_DECL(expected_vld4_2,uint,64,1) [] = { 0xfffffffffffffff2 };\n+VECT_VAR_DECL(expected_vld4_2,poly,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t       0xf0, 0xf1, 0xf2, 0xf3 };\n+VECT_VAR_DECL(expected_vld4_2,poly,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected_vld4_2,hfloat,32,2) [] = { 0xc1800000, 0xc1700000 };\n+VECT_VAR_DECL(expected_vld4_2,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld4_2,int,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t       0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld4_2,int,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t       0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld4_2,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t       0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld4_2,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld4_2,uint,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld4_2,uint,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld4_2,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld4_2,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld4_2,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld4_2,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t  0x33333333, 0x33333333 };\n+\n+/* vld4_dup/chunk3.  */\n+VECT_VAR_DECL(expected_vld4_3,int,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t      0xf0, 0xf1, 0xf2, 0xf3 };\n+VECT_VAR_DECL(expected_vld4_3,int,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected_vld4_3,int,32,2) [] = { 0xfffffff2, 0xfffffff3 };\n+VECT_VAR_DECL(expected_vld4_3,int,64,1) [] = { 0xfffffffffffffff3 };\n+VECT_VAR_DECL(expected_vld4_3,uint,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t       0xf0, 0xf1, 0xf2, 0xf3 };\n+VECT_VAR_DECL(expected_vld4_3,uint,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected_vld4_3,uint,32,2) [] = { 0xfffffff2, 0xfffffff3 };\n+VECT_VAR_DECL(expected_vld4_3,uint,64,1) [] = { 0xfffffffffffffff3 };\n+VECT_VAR_DECL(expected_vld4_3,poly,8,8) [] = { 0xf0, 0xf1, 0xf2, 0xf3,\n+\t\t\t\t\t       0xf0, 0xf1, 0xf2, 0xf3 };\n+VECT_VAR_DECL(expected_vld4_3,poly,16,4) [] = { 0xfff0, 0xfff1, 0xfff2, 0xfff3 };\n+VECT_VAR_DECL(expected_vld4_3,hfloat,32,2) [] = { 0xc1600000, 0xc1500000 };\n+VECT_VAR_DECL(expected_vld4_3,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld4_3,int,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t       0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld4_3,int,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t       0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld4_3,int,64,2) [] = { 0x3333333333333333, 0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld4_3,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld4_3,uint,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld4_3,uint,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected_vld4_3,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected_vld4_3,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected_vld4_3,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected_vld4_3,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t\t  0x33333333, 0x33333333 };\n+\n+void exec_vldX_dup (void)\n+{\n+  /* In this case, input variables are arrays of vectors.  */\n+#define DECL_VLDX_DUP(T1, W, N, X)\t\t\t\t\t\\\n+  VECT_ARRAY_TYPE(T1, W, N, X) VECT_ARRAY_VAR(vector, T1, W, N, X);\t\\\n+  VECT_VAR_DECL(result_bis_##X, T1, W, N)[X * N]\n+\n+  /* We need to use a temporary result buffer (result_bis), because\n+     the one used for other tests is not large enough. A subset of the\n+     result data is moved from result_bis to result, and it is this\n+     subset which is used to check the actual behaviour. The next\n+     macro enables to move another chunk of data from result_bis to\n+     result.  */\n+#define TEST_VLDX_DUP(Q, T1, T2, W, N, X)\t\t\t\t\\\n+  VECT_ARRAY_VAR(vector, T1, W, N, X) =\t\t\t\t\t\\\n+    vld##X##Q##_dup_##T2##W(&VECT_VAR(buffer_dup, T1, W, N)[0]);\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  vst##X##Q##_##T2##W(VECT_VAR(result_bis_##X, T1, W, N),\t\t\\\n+\t\t      VECT_ARRAY_VAR(vector, T1, W, N, X));\t\t\\\n+  memcpy(VECT_VAR(result, T1, W, N), VECT_VAR(result_bis_##X, T1, W, N), \\\n+\t sizeof(VECT_VAR(result, T1, W, N)));\n+\n+\n+  /* Overwrite \"result\" with the contents of \"result_bis\"[Y].  */\n+#define TEST_EXTRA_CHUNK(T1, W, N, X,Y)\t\t\t\\\n+  memcpy(VECT_VAR(result, T1, W, N),\t\t\t\\\n+\t &(VECT_VAR(result_bis_##X, T1, W, N)[Y*N]),\t\\\n+\t sizeof(VECT_VAR(result, T1, W, N)));\n+\n+#define DECL_ALL_VLDX_DUP(X)\t\t\t\\\n+  DECL_VLDX_DUP(int, 8, 8, X);\t\t\t\\\n+  DECL_VLDX_DUP(int, 16, 4, X);\t\t\t\\\n+  DECL_VLDX_DUP(int, 32, 2, X);\t\t\t\\\n+  DECL_VLDX_DUP(int, 64, 1, X);\t\t\t\\\n+  DECL_VLDX_DUP(uint, 8, 8, X);\t\t\t\\\n+  DECL_VLDX_DUP(uint, 16, 4, X);\t\t\\\n+  DECL_VLDX_DUP(uint, 32, 2, X);\t\t\\\n+  DECL_VLDX_DUP(uint, 64, 1, X);\t\t\\\n+  DECL_VLDX_DUP(poly, 8, 8, X);\t\t\t\\\n+  DECL_VLDX_DUP(poly, 16, 4, X);\t\t\\\n+  DECL_VLDX_DUP(float, 32, 2, X)\n+\n+#define TEST_ALL_VLDX_DUP(X)\t\t\t\\\n+  TEST_VLDX_DUP(, int, s, 8, 8, X);\t\t\\\n+  TEST_VLDX_DUP(, int, s, 16, 4, X);\t\t\\\n+  TEST_VLDX_DUP(, int, s, 32, 2, X);\t\t\\\n+  TEST_VLDX_DUP(, int, s, 64, 1, X);\t\t\\\n+  TEST_VLDX_DUP(, uint, u, 8, 8, X);\t\t\\\n+  TEST_VLDX_DUP(, uint, u, 16, 4, X);\t\t\\\n+  TEST_VLDX_DUP(, uint, u, 32, 2, X);\t\t\\\n+  TEST_VLDX_DUP(, uint, u, 64, 1, X);\t\t\\\n+  TEST_VLDX_DUP(, poly, p, 8, 8, X);\t\t\\\n+  TEST_VLDX_DUP(, poly, p, 16, 4, X);\t\t\\\n+  TEST_VLDX_DUP(, float, f, 32, 2, X)\n+\n+#define TEST_ALL_EXTRA_CHUNKS(X, Y)\t\t\\\n+  TEST_EXTRA_CHUNK(int, 8, 8, X, Y);\t\t\\\n+  TEST_EXTRA_CHUNK(int, 16, 4, X, Y);\t\t\\\n+  TEST_EXTRA_CHUNK(int, 32, 2, X, Y);\t\t\\\n+  TEST_EXTRA_CHUNK(int, 64, 1, X, Y);\t\t\\\n+  TEST_EXTRA_CHUNK(uint, 8, 8, X, Y);\t\t\\\n+  TEST_EXTRA_CHUNK(uint, 16, 4, X, Y);\t\t\\\n+  TEST_EXTRA_CHUNK(uint, 32, 2, X, Y);\t\t\\\n+  TEST_EXTRA_CHUNK(uint, 64, 1, X, Y);\t\t\\\n+  TEST_EXTRA_CHUNK(poly, 8, 8, X, Y);\t\t\\\n+  TEST_EXTRA_CHUNK(poly, 16, 4, X, Y);\t\t\\\n+  TEST_EXTRA_CHUNK(float, 32, 2, X, Y)\n+\n+\n+  DECL_ALL_VLDX_DUP(2);\n+  DECL_ALL_VLDX_DUP(3);\n+  DECL_ALL_VLDX_DUP(4);\n+\n+  /* Special input buffers of suitable size are needed for vld2/vld3/vld4.  */\n+  /* Input buffers for vld2, 1 of each size */\n+  VECT_ARRAY_INIT2(buffer_vld2, int, 8, 8);\n+  PAD(buffer_vld2_pad, int, 8, 8);\n+  VECT_ARRAY_INIT2(buffer_vld2, int, 16, 4);\n+  PAD(buffer_vld2_pad, int, 16, 4);\n+  VECT_ARRAY_INIT2(buffer_vld2, int, 32, 2);\n+  PAD(buffer_vld2_pad, int, 32, 2);\n+  VECT_ARRAY_INIT2(buffer_vld2, int, 64, 1);\n+  PAD(buffer_vld2_pad, int, 64, 1);\n+  VECT_ARRAY_INIT2(buffer_vld2, uint, 8, 8);\n+  PAD(buffer_vld2_pad, uint, 8, 8);\n+  VECT_ARRAY_INIT2(buffer_vld2, uint, 16, 4);\n+  PAD(buffer_vld2_pad, uint, 16, 4);\n+  VECT_ARRAY_INIT2(buffer_vld2, uint, 32, 2);\n+  PAD(buffer_vld2_pad, uint, 32, 2);\n+  VECT_ARRAY_INIT2(buffer_vld2, uint, 64, 1);\n+  PAD(buffer_vld2_pad, uint, 64, 1);\n+  VECT_ARRAY_INIT2(buffer_vld2, poly, 8, 8);\n+  PAD(buffer_vld2_pad, poly, 8, 8);\n+  VECT_ARRAY_INIT2(buffer_vld2, poly, 16, 4);\n+  PAD(buffer_vld2_pad, poly, 16, 4);\n+  VECT_ARRAY_INIT2(buffer_vld2, float, 32, 2);\n+  PAD(buffer_vld2_pad, float, 32, 2);\n+\n+  VECT_ARRAY_INIT2(buffer_vld2, int, 8, 16);\n+  PAD(buffer_vld2_pad, int, 8, 16);\n+  VECT_ARRAY_INIT2(buffer_vld2, int, 16, 8);\n+  PAD(buffer_vld2_pad, int, 16, 8);\n+  VECT_ARRAY_INIT2(buffer_vld2, int, 32, 4);\n+  PAD(buffer_vld2_pad, int, 32, 4);\n+  VECT_ARRAY_INIT2(buffer_vld2, int, 64, 2);\n+  PAD(buffer_vld2_pad, int, 64, 2);\n+  VECT_ARRAY_INIT2(buffer_vld2, uint, 8, 16);\n+  PAD(buffer_vld2_pad, uint, 8, 16);\n+  VECT_ARRAY_INIT2(buffer_vld2, uint, 16, 8);\n+  PAD(buffer_vld2_pad, uint, 16, 8);\n+  VECT_ARRAY_INIT2(buffer_vld2, uint, 32, 4);\n+  PAD(buffer_vld2_pad, uint, 32, 4);\n+  VECT_ARRAY_INIT2(buffer_vld2, uint, 64, 2);\n+  PAD(buffer_vld2_pad, uint, 64, 2);\n+  VECT_ARRAY_INIT2(buffer_vld2, poly, 8, 16);\n+  PAD(buffer_vld2_pad, poly, 8, 16);\n+  VECT_ARRAY_INIT2(buffer_vld2, poly, 16, 8);\n+  PAD(buffer_vld2_pad, poly, 16, 8);\n+  VECT_ARRAY_INIT2(buffer_vld2, float, 32, 4);\n+  PAD(buffer_vld2_pad, float, 32, 4);\n+\n+  /* Input buffers for vld3, 1 of each size */\n+  VECT_ARRAY_INIT3(buffer_vld3, int, 8, 8);\n+  PAD(buffer_vld3_pad, int, 8, 8);\n+  VECT_ARRAY_INIT3(buffer_vld3, int, 16, 4);\n+  PAD(buffer_vld3_pad, int, 16, 4);\n+  VECT_ARRAY_INIT3(buffer_vld3, int, 32, 2);\n+  PAD(buffer_vld3_pad, int, 32, 2);\n+  VECT_ARRAY_INIT3(buffer_vld3, int, 64, 1);\n+  PAD(buffer_vld3_pad, int, 64, 1);\n+  VECT_ARRAY_INIT3(buffer_vld3, uint, 8, 8);\n+  PAD(buffer_vld3_pad, uint, 8, 8);\n+  VECT_ARRAY_INIT3(buffer_vld3, uint, 16, 4);\n+  PAD(buffer_vld3_pad, uint, 16, 4);\n+  VECT_ARRAY_INIT3(buffer_vld3, uint, 32, 2);\n+  PAD(buffer_vld3_pad, uint, 32, 2);\n+  VECT_ARRAY_INIT3(buffer_vld3, uint, 64, 1);\n+  PAD(buffer_vld3_pad, uint, 64, 1);\n+  VECT_ARRAY_INIT3(buffer_vld3, poly, 8, 8);\n+  PAD(buffer_vld3_pad, poly, 8, 8);\n+  VECT_ARRAY_INIT3(buffer_vld3, poly, 16, 4);\n+  PAD(buffer_vld3_pad, poly, 16, 4);\n+  VECT_ARRAY_INIT3(buffer_vld3, float, 32, 2);\n+  PAD(buffer_vld3_pad, float, 32, 2);\n+\n+  VECT_ARRAY_INIT3(buffer_vld3, int, 8, 16);\n+  PAD(buffer_vld3_pad, int, 8, 16);\n+  VECT_ARRAY_INIT3(buffer_vld3, int, 16, 8);\n+  PAD(buffer_vld3_pad, int, 16, 8);\n+  VECT_ARRAY_INIT3(buffer_vld3, int, 32, 4);\n+  PAD(buffer_vld3_pad, int, 32, 4);\n+  VECT_ARRAY_INIT3(buffer_vld3, int, 64, 2);\n+  PAD(buffer_vld3_pad, int, 64, 2);\n+  VECT_ARRAY_INIT3(buffer_vld3, uint, 8, 16);\n+  PAD(buffer_vld3_pad, uint, 8, 16);\n+  VECT_ARRAY_INIT3(buffer_vld3, uint, 16, 8);\n+  PAD(buffer_vld3_pad, uint, 16, 8);\n+  VECT_ARRAY_INIT3(buffer_vld3, uint, 32, 4);\n+  PAD(buffer_vld3_pad, uint, 32, 4);\n+  VECT_ARRAY_INIT3(buffer_vld3, uint, 64, 2);\n+  PAD(buffer_vld3_pad, uint, 64, 2);\n+  VECT_ARRAY_INIT3(buffer_vld3, poly, 8, 16);\n+  PAD(buffer_vld3_pad, poly, 8, 16);\n+  VECT_ARRAY_INIT3(buffer_vld3, poly, 16, 8);\n+  PAD(buffer_vld3_pad, poly, 16, 8);\n+  VECT_ARRAY_INIT3(buffer_vld3, float, 32, 4);\n+  PAD(buffer_vld3_pad, float, 32, 4);\n+\n+  /* Input buffers for vld4, 1 of each size */\n+  VECT_ARRAY_INIT4(buffer_vld4, int, 8, 8);\n+  PAD(buffer_vld4_pad, int, 8, 8);\n+  VECT_ARRAY_INIT4(buffer_vld4, int, 16, 4);\n+  PAD(buffer_vld4_pad, int, 16, 4);\n+  VECT_ARRAY_INIT4(buffer_vld4, int, 32, 2);\n+  PAD(buffer_vld4_pad, int, 32, 2);\n+  VECT_ARRAY_INIT4(buffer_vld4, int, 64, 1);\n+  PAD(buffer_vld4_pad, int, 64, 1);\n+  VECT_ARRAY_INIT4(buffer_vld4, uint, 8, 8);\n+  PAD(buffer_vld4_pad, uint, 8, 8);\n+  VECT_ARRAY_INIT4(buffer_vld4, uint, 16, 4);\n+  PAD(buffer_vld4_pad, uint, 16, 4);\n+  VECT_ARRAY_INIT4(buffer_vld4, uint, 32, 2);\n+  PAD(buffer_vld4_pad, uint, 32, 2);\n+  VECT_ARRAY_INIT4(buffer_vld4, uint, 64, 1);\n+  PAD(buffer_vld4_pad, uint, 64, 1);\n+  VECT_ARRAY_INIT4(buffer_vld4, poly, 8, 8);\n+  PAD(buffer_vld4_pad, poly, 8, 8);\n+  VECT_ARRAY_INIT4(buffer_vld4, poly, 16, 4);\n+  PAD(buffer_vld4_pad, poly, 16, 4);\n+  VECT_ARRAY_INIT4(buffer_vld4, float, 32, 2);\n+  PAD(buffer_vld4_pad, float, 32, 2);\n+\n+  VECT_ARRAY_INIT4(buffer_vld4, int, 8, 16);\n+  PAD(buffer_vld4_pad, int, 8, 16);\n+  VECT_ARRAY_INIT4(buffer_vld4, int, 16, 8);\n+  PAD(buffer_vld4_pad, int, 16, 8);\n+  VECT_ARRAY_INIT4(buffer_vld4, int, 32, 4);\n+  PAD(buffer_vld4_pad, int, 32, 4);\n+  VECT_ARRAY_INIT4(buffer_vld4, int, 64, 2);\n+  PAD(buffer_vld4_pad, int, 64, 2);\n+  VECT_ARRAY_INIT4(buffer_vld4, uint, 8, 16);\n+  PAD(buffer_vld4_pad, uint, 8, 16);\n+  VECT_ARRAY_INIT4(buffer_vld4, uint, 16, 8);\n+  PAD(buffer_vld4_pad, uint, 16, 8);\n+  VECT_ARRAY_INIT4(buffer_vld4, uint, 32, 4);\n+  PAD(buffer_vld4_pad, uint, 32, 4);\n+  VECT_ARRAY_INIT4(buffer_vld4, uint, 64, 2);\n+  PAD(buffer_vld4_pad, uint, 64, 2);\n+  VECT_ARRAY_INIT4(buffer_vld4, poly, 8, 16);\n+  PAD(buffer_vld4_pad, poly, 8, 16);\n+  VECT_ARRAY_INIT4(buffer_vld4, poly, 16, 8);\n+  PAD(buffer_vld4_pad, poly, 16, 8);\n+  VECT_ARRAY_INIT4(buffer_vld4, float, 32, 4);\n+  PAD(buffer_vld4_pad, float, 32, 4);\n+\n+  /* Check vld2_dup/vld2q_dup.  */\n+  clean_results ();\n+#define TEST_MSG \"VLD2_DUP/VLD2Q_DUP\"\n+  TEST_ALL_VLDX_DUP(2);\n+  CHECK_RESULTS_NAMED (TEST_MSG, expected_vld2_0, \"chunk 0\");\n+\n+  TEST_ALL_EXTRA_CHUNKS(2, 1);\n+  CHECK_RESULTS_NAMED (TEST_MSG, expected_vld2_1, \"chunk 1\");\n+\n+  /* Check vld3_dup/vld3q_dup.  */\n+  clean_results ();\n+#undef TEST_MSG\n+#define TEST_MSG \"VLD3_DUP/VLD3Q_DUP\"\n+  TEST_ALL_VLDX_DUP(3);\n+  CHECK_RESULTS_NAMED (TEST_MSG, expected_vld3_0, \"chunk 0\");\n+\n+  TEST_ALL_EXTRA_CHUNKS(3, 1);\n+  CHECK_RESULTS_NAMED (TEST_MSG, expected_vld3_1, \"chunk 1\");\n+\n+  TEST_ALL_EXTRA_CHUNKS(3, 2);\n+  CHECK_RESULTS_NAMED (TEST_MSG, expected_vld3_2, \"chunk 2\");\n+\n+  /* Check vld4_dup/vld4q_dup */\n+  clean_results ();\n+#undef TEST_MSG\n+#define TEST_MSG \"VLD4_DUP/VLD4Q_DUP\"\n+  TEST_ALL_VLDX_DUP(4);\n+  CHECK_RESULTS_NAMED (TEST_MSG, expected_vld4_0, \"chunk 0\");\n+\n+  TEST_ALL_EXTRA_CHUNKS(4, 1);\n+  CHECK_RESULTS_NAMED (TEST_MSG, expected_vld4_1, \"chunk 1\");\n+\n+  TEST_ALL_EXTRA_CHUNKS(4, 2);\n+  CHECK_RESULTS_NAMED (TEST_MSG, expected_vld4_2, \"chunk 2\");\n+\n+  TEST_ALL_EXTRA_CHUNKS(4, 3);\n+  CHECK_RESULTS_NAMED (TEST_MSG, expected_vld4_3, \"chunk 3\");\n+}\n+\n+int main (void)\n+{\n+  exec_vldX_dup ();\n+  return 0;\n+}"}]}