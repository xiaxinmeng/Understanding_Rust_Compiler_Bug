{"sha": "e11efa45bf12142b0599f017a8f07a1817375703", "node_id": "C_kwDOANBUbNoAKGUxMWVmYTQ1YmYxMjE0MmIwNTk5ZjAxN2E4ZjA3YTE4MTczNzU3MDM", "commit": {"author": {"name": "Charalampos Mitrodimas", "email": "charmitro@gmail.com", "date": "2023-06-03T18:09:26Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-06-06T12:46:02Z"}, "message": "ast: dump literals correctly\n\nThis commit fixes printing of literals based on their\ntype.\n\nPrevious implementation printed literals the same, regardless\ntheir type. Now we are printing:\n  * int, float, bool don't require special printing\n  * char        -> '<char>'\n  * string      -> \"<string>\"\n  * byte        -> b'<byte>'\n  * byte_string -> b\"<byte_string>\"\n\ngcc/rust/ChangeLog:\n\n\t* ast/rust-ast-dump.cc (Dump::visit):\n\tprint literals based on their type.\n\nSigned-off-by: Charalampos Mitrodimas <charmitro@gmail.com>", "tree": {"sha": "466e95562f42083a90eec26cc8005ad26e67ee08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/466e95562f42083a90eec26cc8005ad26e67ee08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e11efa45bf12142b0599f017a8f07a1817375703", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e11efa45bf12142b0599f017a8f07a1817375703", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e11efa45bf12142b0599f017a8f07a1817375703", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e11efa45bf12142b0599f017a8f07a1817375703/comments", "author": {"login": "charmitro", "id": 15256083, "node_id": "MDQ6VXNlcjE1MjU2MDgz", "avatar_url": "https://avatars.githubusercontent.com/u/15256083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charmitro", "html_url": "https://github.com/charmitro", "followers_url": "https://api.github.com/users/charmitro/followers", "following_url": "https://api.github.com/users/charmitro/following{/other_user}", "gists_url": "https://api.github.com/users/charmitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/charmitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charmitro/subscriptions", "organizations_url": "https://api.github.com/users/charmitro/orgs", "repos_url": "https://api.github.com/users/charmitro/repos", "events_url": "https://api.github.com/users/charmitro/events{/privacy}", "received_events_url": "https://api.github.com/users/charmitro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc09d0bf04fd87afb9f2b717d485a380a05e0a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc09d0bf04fd87afb9f2b717d485a380a05e0a73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc09d0bf04fd87afb9f2b717d485a380a05e0a73"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "5d5961171db45a5ab9422150518f3d0ab699ef93", "filename": "gcc/rust/ast/rust-ast-dump.cc", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e11efa45bf12142b0599f017a8f07a1817375703/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e11efa45bf12142b0599f017a8f07a1817375703/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.cc?ref=e11efa45bf12142b0599f017a8f07a1817375703", "patch": "@@ -507,7 +507,34 @@ Dump::visit (QualifiedPathInType &path)\n void\n Dump::visit (LiteralExpr &expr)\n {\n-  stream << expr.as_string ();\n+  switch (expr.get_lit_type ())\n+    {\n+    case Literal::CHAR:\n+      stream << \"'\" << expr.as_string () << \"'\";\n+      return;\n+\n+    case Literal::STRING:\n+      stream << \"\\\"\" << expr.as_string () << \"\\\"\";\n+      return;\n+\n+    case Literal::BYTE:\n+      stream << \"b'\" << expr.as_string () << \"'\";\n+      return;\n+\n+    case Literal::BYTE_STRING:\n+      stream << \"b\\\"\" << expr.as_string () << \"\\\"\";\n+      return;\n+\n+    case Literal::INT:\n+    case Literal::FLOAT:\n+    case Literal::BOOL:\n+      stream << expr.as_string ();\n+      return;\n+\n+    case Literal::ERROR:\n+      stream << \"/*ERROR*/\";\n+      return;\n+    }\n }\n \n void"}]}