{"sha": "3d247e852112788247f4d90c626a34838d02216f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QyNDdlODUyMTEyNzg4MjQ3ZjRkOTBjNjI2YTM0ODM4ZDAyMjE2Zg==", "commit": {"author": {"name": "Timothy Moore", "email": "moore@gnu.org", "date": "1992-09-17T19:08:30Z"}, "committer": {"name": "Timothy Moore", "email": "moore@gnu.org", "date": "1992-09-17T19:08:30Z"}, "message": "(FUNCTION_ARG_ADVANCE, FUNCTION_ARG): Fix double integer argument alignment.\n\n(FUNCTION_ARG_ADVANCE, FUNCTION_ARG): Fix double integer\n        argument alignment.\n        (SIZE_TYPE, PTRDIFF_TYPE, WCHAR_TYPE, WCHAR_SIZE): Define.\n\nFrom-SVN: r2142", "tree": {"sha": "0bc4600bf878a77c3825ab797de0971c59c49a24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bc4600bf878a77c3825ab797de0971c59c49a24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d247e852112788247f4d90c626a34838d02216f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d247e852112788247f4d90c626a34838d02216f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d247e852112788247f4d90c626a34838d02216f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d247e852112788247f4d90c626a34838d02216f/comments", "author": null, "committer": null, "parents": [{"sha": "68daafd46e0cbbfbca193893fbfe9053cf0eae80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68daafd46e0cbbfbca193893fbfe9053cf0eae80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68daafd46e0cbbfbca193893fbfe9053cf0eae80"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "818076cb4767b5cc51ad82b5490551e0844d8cfe", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d247e852112788247f4d90c626a34838d02216f/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d247e852112788247f4d90c626a34838d02216f/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=3d247e852112788247f4d90c626a34838d02216f", "patch": "@@ -56,6 +56,13 @@ enum cmp_type\t\t\t\t/* comparison type */\n #define LINK_SPEC \"-u main\"\n #endif\n \n+/* Make gcc agree with <machine/ansi.h> */\n+\n+#define SIZE_TYPE \"unsigned int\"\n+#define PTRDIFF_TYPE \"int\"\n+#define WCHAR_TYPE \"short unsigned int\"\n+#define WCHAR_TYPE_SIZE 16\n+\n /* Omit frame pointer at high optimization levels.  */\n   \n #define OPTIMIZATION_OPTIONS(OPTIMIZE) \\\n@@ -700,7 +707,7 @@ HP-PA immediate field sizes:\n    (TYPE is null for libcalls where that information may not be available.)  */\n \n #define FUNCTION_ARG_ADVANCE(CUM, MODE, TYPE, NAMED)\t\t\t\\\n-    (((((CUM) & 01) && (TYPE) != 0 && TYPE_ALIGN (TYPE) > BITS_PER_WORD)\\\n+    (((((CUM) & 01) && (TYPE) != 0 && FUNCTION_ARG_SIZE(MODE, TYPE) > 1)\\\n       && (CUM)++), (CUM) += FUNCTION_ARG_SIZE(MODE, TYPE))\n \n /* Determine where to put an argument to a function.\n@@ -718,20 +725,23 @@ HP-PA immediate field sizes:\n \n /* On the HP-PA the first four words of args are normally in registers\n    and the rest are pushed.  But any arg that won't entirely fit in regs\n-   is pushed.  */\n+   is pushed.\n+\n+   Arguments passed in registers are either 1 or 2 words long. */\n \n #define FUNCTION_ARG_PADDING(MODE, TYPE) function_arg_padding ((MODE), (TYPE))\n \n #define FUNCTION_ARG(CUM, MODE, TYPE, NAMED)\t\t      \t\t\\\n   (4 >= ((CUM) + FUNCTION_ARG_SIZE ((MODE), (TYPE)))\t\t\t\\\n-   ? gen_rtx (REG,\t\t\t\t\t\t\t\\\n-\t      (MODE),\t\t\t\t\t\t\t\\\n-\t      ((MODE) == SFmode ?\t\t\t\t\t\\\n-\t       (TARGET_SNAKE ? 56 + 2 * (CUM) : 36  + (CUM)) :\t\t\\\n-\t       ((MODE) == DFmode ? ((CUM) ?\t\t\t\t\\\n-\t\t\t\t    (TARGET_SNAKE ? 62 : 39) :\t\t\\\n-\t\t\t\t    (TARGET_SNAKE ? 58 : 37)) :        \t\\\n-\t\t(27 - (CUM) - FUNCTION_ARG_SIZE ((MODE), (TYPE))))))\t\\\n+   ? gen_rtx (REG, (MODE),\t\t\t\t\t\t\\\n+\t      (FUNCTION_ARG_SIZE ((MODE), (TYPE)) > 1\t\t\t\\\n+\t       ? ((MODE) == DFmode\t\t\t\t\t\\\n+\t\t  ? ((CUM) ? (TARGET_SNAKE ? 62 : 39)\t\t\t\\\n+\t\t     : (TARGET_SNAKE ? 58 : 37))\t\t\t\\\n+\t\t  : ((CUM) ? 23 : 25))\t\t\t\t\t\\\n+\t       : ((MODE) == SFmode\t\t\t\t\t\\\n+\t\t  ? (TARGET_SNAKE ? 56 + 2 * (CUM) : 36  + (CUM))\t\\\n+\t\t  : (27 - (CUM) - FUNCTION_ARG_SIZE ((MODE), (TYPE))))))\\\n    : 0)\n \n /* Define where a function finds its arguments."}]}