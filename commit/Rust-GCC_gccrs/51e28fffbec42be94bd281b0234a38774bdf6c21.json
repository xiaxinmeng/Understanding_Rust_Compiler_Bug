{"sha": "51e28fffbec42be94bd281b0234a38774bdf6c21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFlMjhmZmZiZWM0MmJlOTRiZDI4MWIwMjM0YTM4Nzc0YmRmNmMyMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-10-20T13:43:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-10-20T13:43:47Z"}, "message": "re PR tree-optimization/82473 (ICE in vect_get_vec_def_for_stmt_copy, at tree-vect-stmts.c:1524)\n\n2017-10-20  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82473\n\t* tree-vect-loop.c (vectorizable_reduction): Properly get at\n\tthe largest input type.\n\n\t* gcc.dg/torture/pr82473.c: New testcase.\n\nFrom-SVN: r253937", "tree": {"sha": "9feffb715cb9f02b75df4a6078b253ad11794539", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9feffb715cb9f02b75df4a6078b253ad11794539"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51e28fffbec42be94bd281b0234a38774bdf6c21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e28fffbec42be94bd281b0234a38774bdf6c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51e28fffbec42be94bd281b0234a38774bdf6c21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e28fffbec42be94bd281b0234a38774bdf6c21/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c5f0b65eebe36489d5c44a3d138c2844049d4c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c5f0b65eebe36489d5c44a3d138c2844049d4c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c5f0b65eebe36489d5c44a3d138c2844049d4c0"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "054907b3feef36694340d8eaf04db7416310cffd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e28fffbec42be94bd281b0234a38774bdf6c21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e28fffbec42be94bd281b0234a38774bdf6c21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51e28fffbec42be94bd281b0234a38774bdf6c21", "patch": "@@ -1,3 +1,9 @@\n+2017-10-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82473\n+\t* tree-vect-loop.c (vectorizable_reduction): Properly get at\n+\tthe largest input type.\n+\n 2017-10-20  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n \n \t* c-attribs.c (handle_nocf_check_attribute): New function."}, {"sha": "d3d10ddb2bd73a3c8c9d608e1d749ff341ac8356", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e28fffbec42be94bd281b0234a38774bdf6c21/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e28fffbec42be94bd281b0234a38774bdf6c21/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51e28fffbec42be94bd281b0234a38774bdf6c21", "patch": "@@ -1,3 +1,8 @@\n+2017-10-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82473\n+\t* gcc.dg/torture/pr82473.c: New testcase.\n+\n 2017-10-20  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82603"}, {"sha": "b12de21d7dbce802d84ff3cf4cc3c1ab8809aaf8", "filename": "gcc/testsuite/gcc.dg/torture/pr82473.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e28fffbec42be94bd281b0234a38774bdf6c21/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82473.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e28fffbec42be94bd281b0234a38774bdf6c21/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82473.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82473.c?ref=51e28fffbec42be94bd281b0234a38774bdf6c21", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-ftree-vectorize\" } */\n+\n+void\n+zz (int x9, short int gt)\n+{\n+  if (0)\n+    {\n+      while (gt < 1)\n+\t{\n+\t  int pz;\n+\n+k6:\n+\t  for (pz = 0; pz < 3; ++pz)\n+\t    x9 += gt;\n+\t  ++gt;\n+\t}\n+    }\n+\n+  if (x9 != 0)\n+    goto k6;\n+}"}, {"sha": "7fb09c466285328407e4ce53b9425db52980022f", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e28fffbec42be94bd281b0234a38774bdf6c21/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e28fffbec42be94bd281b0234a38774bdf6c21/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=51e28fffbec42be94bd281b0234a38774bdf6c21", "patch": "@@ -5836,9 +5836,12 @@ vectorizable_reduction (gimple *stmt, gimple_stmt_iterator *gsi,\n \t  reduc_index = i;\n \t  continue;\n \t}\n-      else\n+      else if (tem)\n \t{\n-\t  if (!vectype_in)\n+\t  /* To properly compute ncopies we are interested in the widest\n+\t     input type in case we're looking at a widening accumulation.  */\n+\t  if (!vectype_in\n+\t      || TYPE_VECTOR_SUBPARTS (vectype_in) > TYPE_VECTOR_SUBPARTS (tem))\n \t    vectype_in = tem;\n \t}\n "}]}