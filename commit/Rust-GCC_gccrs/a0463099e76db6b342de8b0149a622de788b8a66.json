{"sha": "a0463099e76db6b342de8b0149a622de788b8a66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA0NjMwOTllNzZkYjZiMzQyZGU4YjAxNDlhNjIyZGU3ODhiOGE2Ng==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2010-01-14T12:48:09Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-01-14T12:48:09Z"}, "message": "drivers-i386.c (detect_caches_intel): Add l2sizekb parameter and fill in.\n\n2010-01-14  Andi Kleen  <ak@linux.intel.com>\n\n\t* config/i386/drivers-i386.c (detect_caches_intel):\n\tAdd l2sizekb parameter and fill in.\n\t(host_detect_local_cpu): Add l2sizekb, fill in.\n\tAdd Atom small cache heuristic.\n\n2010-01-14  Andi Kleen  <ak@linux.intel.com>\n\n\t* config/i386/drivers-i386.c (detect_caches_cpuid4):\n\tAdd level3 parameter and fill in.\n\t(detect_caches_intel): Handle level3 cache.\n\n2010-01-14  Andi Kleen  <ak@linux.intel.com>\n\n\t* config/i386/drivers-i386.c (host_detect_local_cpu):\n\tFix core duo detection.\n\n2010-01-14  Andi Kleen  <ak@linux.intel.com>\n\n\t* config/i386/drivers-i386.c (host_detect_local_cpu):\n\tFix Atom detection.\n\nFrom-SVN: r155904", "tree": {"sha": "f6f90df8b614fa02b7785025086908413c1b6ef0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6f90df8b614fa02b7785025086908413c1b6ef0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0463099e76db6b342de8b0149a622de788b8a66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0463099e76db6b342de8b0149a622de788b8a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0463099e76db6b342de8b0149a622de788b8a66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0463099e76db6b342de8b0149a622de788b8a66/comments", "author": null, "committer": null, "parents": [{"sha": "dd6739e322c93ba685f80a89eab00c82b68f7976", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd6739e322c93ba685f80a89eab00c82b68f7976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd6739e322c93ba685f80a89eab00c82b68f7976"}], "stats": {"total": 94, "additions": 68, "deletions": 26}, "files": [{"sha": "47e06e5f8c0bb094973dade9fd5dab465da09959", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 11, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0463099e76db6b342de8b0149a622de788b8a66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0463099e76db6b342de8b0149a622de788b8a66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0463099e76db6b342de8b0149a622de788b8a66", "patch": "@@ -1,3 +1,26 @@\n+2010-01-14  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* config/i386/drivers-i386.c (detect_caches_intel):\n+\tAdd l2sizekb parameter and fill in.\n+\t(host_detect_local_cpu): Add l2sizekb, fill in.\n+\tAdd Atom small cache heuristic.\n+\n+2010-01-14  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* config/i386/drivers-i386.c (detect_caches_cpuid4):\n+\tAdd level3 parameter and fill in.\n+\t(detect_caches_intel): Handle level3 cache.\n+\n+2010-01-14  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* config/i386/drivers-i386.c (host_detect_local_cpu):\n+\tFix core duo detection.\n+\n+2010-01-14  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* config/i386/drivers-i386.c (host_detect_local_cpu):\n+\tFix Atom detection.\n+\n 2010-01-14  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* config/rs6000/rs6000.c (rs6000_variable_issue): Rename to...\n@@ -6,8 +29,9 @@\n \n 2010-01-14  Alexander Monakov  <amonakov@ispras.ru>\n \n-\t* sel-sched-ir.c (sel_restore_other_notes): Rename to sel_restore_notes.\n-\tUpdate all callers.  Call reemit_notes for all insns.\n+\t* sel-sched-ir.c (sel_restore_other_notes): Rename to\n+\tsel_restore_notes.  Update all callers.  Call reemit_notes\n+\tfor all insns.\n \n 2010-01-14  Andrey Belevantsev  <abel@ispras.ru>\n \n@@ -110,11 +134,10 @@\n 2010-01-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/42721\n-\tPort from no-undefined-overflow branch\n+\tPort from no-undefined-overflow branch:\n \t2009-03-09  Richard Guenther  <rguenther@suse.de>\n \n-\t* fold-const.c (add_double_with_sign): Fix unsigned overflow\n-\tdetection.\n+\t* fold-const.c (add_double_with_sign): Fix unsigned overflow detection.\n \n 2010-01-14  Richard Guenther  <rguenther@suse.de>\n \n@@ -241,9 +264,9 @@\n \n 2010-01-12  Julian Brown  <julian@codesourcery.com>\n \n-        * config/arm/neon-schedgen.ml (Utils): Don't try to\n+\t* config/arm/neon-schedgen.ml (Utils): Don't try to\n \topen missing module.\n-        (find_with_result): New.\n+\t(find_with_result): New.\n \n 2010-01-12  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -264,7 +287,7 @@\n \n 2010-01-11  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n \n-\t* config/avr/avr.h (LINKER_NAME): Remove. \n+\t* config/avr/avr.h (LINKER_NAME): Remove.\n \n 2010-01-11  Janis Johnson  <janis187@us.ibm.com>\n \n@@ -275,7 +298,7 @@\n \n 2010-01-11  Joseph Myers  <joseph@codesourcery.com>\n \t    Shujing Zhao  <pearly.zhao@oracle.com>\n-\t\n+\n \tPR translation/42469\n \t* common.opt (Wframe-larger-than=, fcompare-debug=, fdbg-cnt=,\n \tfira-verbose=, flto-compression-level=, fplugin-arg-): Use tab\n@@ -397,7 +420,7 @@\n \t(*rotw<mode>3): New.\n \t(*rotb<mode>3): New.\n \t* config/avr/avr.c (avr_rotate_bytes): New function.\n-\t* config/avr/avr-proto.h (avr_rotate_bytes): New function. \n+\t* config/avr/avr-proto.h (avr_rotate_bytes): New function.\n \n 2010-01-08  Steve Ellcey  <sje@cup.hp.com>\n \n@@ -505,7 +528,7 @@\n \t(concat_note_lists): ... here, and ...\n \t(unlink_other_notes, rm_other_notes): Merge into...\n \t(remove_notes): ... here.  Create REG_SAVE_NOTEs for\n-\tNOTE_INSN_EPILOGUE_BEG.  \n+\tNOTE_INSN_EPILOGUE_BEG.\n \n 2010-01-06  Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "17694ef37992b4702700a8d53d2a798587d0865d", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 29, "deletions": 10, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0463099e76db6b342de8b0149a622de788b8a66/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0463099e76db6b342de8b0149a622de788b8a66/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=a0463099e76db6b342de8b0149a622de788b8a66", "patch": "@@ -264,7 +264,8 @@ enum cache_type\n };\n \n static void\n-detect_caches_cpuid4 (struct cache_desc *level1, struct cache_desc *level2)\n+detect_caches_cpuid4 (struct cache_desc *level1, struct cache_desc *level2,\n+\t\t      struct cache_desc *level3)\n {\n   struct cache_desc *cache;\n \n@@ -289,6 +290,9 @@ detect_caches_cpuid4 (struct cache_desc *level1, struct cache_desc *level2)\n \t      case 2:\n \t\tcache = level2;\n \t\tbreak;\n+\t      case 3:\n+\t\tcache = level3;\n+\t\tbreak;\n \t      default:\n \t\tcache = NULL;\n \t      }\n@@ -303,7 +307,7 @@ detect_caches_cpuid4 (struct cache_desc *level1, struct cache_desc *level2)\n \n \t\tcache->sizekb = (cache->assoc * part\n \t\t\t\t * cache->line * sets) / 1024;\n-\t      }\t       \n+\t      }\n \t  }\n \tdefault:\n \t  break;\n@@ -314,12 +318,13 @@ detect_caches_cpuid4 (struct cache_desc *level1, struct cache_desc *level2)\n /* Returns the description of caches for an Intel processor.  */\n \n static const char *\n-detect_caches_intel (bool xeon_mp, unsigned max_level, unsigned max_ext_level)\n+detect_caches_intel (bool xeon_mp, unsigned max_level,\n+\t\t     unsigned max_ext_level, unsigned *l2sizekb)\n {\n-  struct cache_desc level1 = {0, 0, 0}, level2 = {0, 0, 0};\n+  struct cache_desc level1 = {0, 0, 0}, level2 = {0, 0, 0}, level3 = {0, 0, 0};\n \n   if (max_level >= 4)\n-    detect_caches_cpuid4 (&level1, &level2);\n+    detect_caches_cpuid4 (&level1, &level2, &level3);\n   else if (max_level >= 2)\n     detect_caches_cpuid2 (xeon_mp, &level1, &level2);\n   else\n@@ -328,11 +333,18 @@ detect_caches_intel (bool xeon_mp, unsigned max_level, unsigned max_ext_level)\n   if (level1.sizekb == 0)\n     return \"\";\n \n+  /* Let the L3 replace the L2. This assumes inclusive caches\n+     and single threaded program for now. */\n+  if (level3.sizekb)\n+    level2 = level3;\n+\n   /* Intel CPUs are equipped with AMD style L2 cache info.  Try this\n      method if other methods fail to provide L2 cache parameters.  */\n   if (level2.sizekb == 0 && max_ext_level >= 0x80000006)\n     detect_l2_cache (&level2);\n \n+  *l2sizekb = level2.sizekb;\n+\n   return describe_cache (level1, level2);\n }\n \n@@ -387,6 +399,8 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \n   bool arch;\n \n+  unsigned int l2sizekb = 0;\n+\n   if (argc < 1)\n     return NULL;\n \n@@ -459,7 +473,8 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       else if (vendor == SIG_INTEL)\n \t{\n \t  bool xeon_mp = (family == 15 && model == 6);\n-\t  cache = detect_caches_intel (xeon_mp, max_level, ext_level);\n+\t  cache = detect_caches_intel (xeon_mp, max_level,\n+\t\t\t\t       ext_level, &l2sizekb);\n \t}\n     }\n \n@@ -523,14 +538,18 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \tcpu = \"pentium\";\n       break;\n     case PROCESSOR_PENTIUMPRO:\n-      if (has_longmode)\n-\t/* It is Core 2 or Atom.  */\n-\tcpu = (model == 28) ? \"atom\" : \"core2\";\n+      if (model == 28)\n+\tcpu = \"atom\";\n+      else if (model >= 28 && l2sizekb < 2048)\n+\t/* Assume it's a small core if there's less than 2MB cache */\n+\tcpu = \"atom\";\n+      else if (has_longmode)\n+\tcpu = \"core2\";\n       else if (arch)\n \t{\n \t  if (has_sse3)\n \t    /* It is Core Duo.  */\n-\t    cpu = \"prescott\";\n+\t    cpu = \"pentium-m\";\n \t  else if (has_sse2)\n \t    /* It is Pentium M.  */\n \t    cpu = \"pentium-m\";"}, {"sha": "f7bbdfb35ffcef92bbac3687d9f5aa3e98d4bbfa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0463099e76db6b342de8b0149a622de788b8a66/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0463099e76db6b342de8b0149a622de788b8a66/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0463099e76db6b342de8b0149a622de788b8a66", "patch": "@@ -33,8 +33,8 @@\n \n 2010-01-14  Alexander Monakov <amonakov@ispras.ru>\n \n-        PR rtl-optimization/42249\n-        * gcc.dg/pr42249.c: New.\n+\tPR rtl-optimization/42249\n+\t* gcc.dg/pr42249.c: New.\n \n 2010-01-14  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -48,9 +48,9 @@\n \n 2010-01-14  Paul Thomas  <pault@gcc.gnu.org>\n \n-        PR fortran/41478\n-        * gfortran.dg/alloc_comp_scalar_1.f90: New test.\n-        * gfortran.dg/alloc_comp_transformational_1.f90: New test.\n+\tPR fortran/41478\n+\t* gfortran.dg/alloc_comp_scalar_1.f90: New test.\n+\t* gfortran.dg/alloc_comp_transformational_1.f90: New test.\n \n 2010-01-14  Paul Thomas  <pault@gcc.gnu.org>\n "}]}