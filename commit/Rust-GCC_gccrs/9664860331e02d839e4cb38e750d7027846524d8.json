{"sha": "9664860331e02d839e4cb38e750d7027846524d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY2NDg2MDMzMWUwMmQ4MzllNGNiMzhlNzUwZDcwMjc4NDY1MjRkOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-03-30T14:56:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-03-30T14:56:28Z"}, "message": "re PR middle-end/31023 (Fold is agnostic of integer sub-types)\n\n2008-03-30  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/31023\n\t* fold-const.c (fold_sign_changed_comparison): Do leave\n\tconversions to base-types alone.\n\nFrom-SVN: r133731", "tree": {"sha": "9d8e77bcbffd0b674ab6dd53b854bc1de6bab194", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d8e77bcbffd0b674ab6dd53b854bc1de6bab194"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9664860331e02d839e4cb38e750d7027846524d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9664860331e02d839e4cb38e750d7027846524d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9664860331e02d839e4cb38e750d7027846524d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9664860331e02d839e4cb38e750d7027846524d8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "23d1b451d0d02e953eaffadd977fca12d93a780a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d1b451d0d02e953eaffadd977fca12d93a780a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23d1b451d0d02e953eaffadd977fca12d93a780a"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "a008d0dcfed9b8709e88bab3f5179737620fd737", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9664860331e02d839e4cb38e750d7027846524d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9664860331e02d839e4cb38e750d7027846524d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9664860331e02d839e4cb38e750d7027846524d8", "patch": "@@ -1,3 +1,9 @@\n+2008-03-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/31023\n+\t* fold-const.c (fold_sign_changed_comparison): Do leave\n+\tconversions to base-types alone.\n+\n 2008-03-29  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \t* config/rs6000/rs6000.c (rs6000_stack_info): Don't force saving of"}, {"sha": "c420b79b75c513c3e77a85cd845e0770454ddccb", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9664860331e02d839e4cb38e750d7027846524d8/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9664860331e02d839e4cb38e750d7027846524d8/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=9664860331e02d839e4cb38e750d7027846524d8", "patch": "@@ -6807,6 +6807,11 @@ fold_sign_changed_comparison (enum tree_code code, tree type,\n   if (TYPE_PRECISION (inner_type) != TYPE_PRECISION (outer_type))\n     return NULL_TREE;\n \n+  /* If the conversion is from an integral subtype to its basetype\n+     leave it alone.  */\n+  if (TREE_TYPE (inner_type) == outer_type)\n+    return NULL_TREE;\n+\n   if (TREE_CODE (arg1) != INTEGER_CST\n       && !((TREE_CODE (arg1) == NOP_EXPR\n \t    || TREE_CODE (arg1) == CONVERT_EXPR)"}]}