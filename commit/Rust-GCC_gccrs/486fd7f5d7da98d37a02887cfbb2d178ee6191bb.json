{"sha": "486fd7f5d7da98d37a02887cfbb2d178ee6191bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg2ZmQ3ZjVkN2RhOThkMzdhMDI4ODdjZmJiMmQxNzhlZTYxOTFiYg==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2008-08-05T13:42:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T13:42:08Z"}, "message": "2008-08-05  Vincent Celier  <celier@adacore.com>\n\n\t* s-wchwts.adb:\n\t(Wide_String_To_String): Returns a String with the same 'First as its\n\tparameter S.\n\t(Wide_Wide_String_To_String): Ditto\n\t\n\t* s-wchwts.ads:\n\t(Wide_String_To_String): Document that the lowest index of the returned\n\tString is equal to S'First.\n\nFrom-SVN: r138708", "tree": {"sha": "41315687c8149a8c962459a87f301abcc4795770", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41315687c8149a8c962459a87f301abcc4795770"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/486fd7f5d7da98d37a02887cfbb2d178ee6191bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486fd7f5d7da98d37a02887cfbb2d178ee6191bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/486fd7f5d7da98d37a02887cfbb2d178ee6191bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486fd7f5d7da98d37a02887cfbb2d178ee6191bb/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c336d2c7ff465c4f262122895710874afa422e8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c336d2c7ff465c4f262122895710874afa422e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c336d2c7ff465c4f262122895710874afa422e8c"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "1dc2fce4a8771d111883c24e5d281d8388944c4f", "filename": "gcc/ada/s-wchwts.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486fd7f5d7da98d37a02887cfbb2d178ee6191bb/gcc%2Fada%2Fs-wchwts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486fd7f5d7da98d37a02887cfbb2d178ee6191bb/gcc%2Fada%2Fs-wchwts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchwts.adb?ref=486fd7f5d7da98d37a02887cfbb2d178ee6191bb", "patch": "@@ -88,16 +88,16 @@ package body System.WCh_WtS is\n      (S  : Wide_String;\n       EM : WC_Encoding_Method) return String\n    is\n-      R  : String (1 .. 5 * S'Length); -- worst case length!\n+      R  : String (S'First .. S'First + 5 * S'Length); -- worst case length!\n       RP : Natural;\n \n    begin\n-      RP := 0;\n+      RP := R'First - 1;\n       for SP in S'Range loop\n          Store_UTF_32_Character (Wide_Character'Pos (S (SP)), R, RP, EM);\n       end loop;\n \n-      return R (1 .. RP);\n+      return R (R'First .. RP);\n    end Wide_String_To_String;\n \n    --------------------------------\n@@ -108,17 +108,17 @@ package body System.WCh_WtS is\n      (S  : Wide_Wide_String;\n       EM : WC_Encoding_Method) return String\n    is\n-      R  : String (1 .. 7 * S'Length); -- worst case length!\n+      R  : String (S'First .. S'First + 7 * S'Length); -- worst case length!\n       RP : Natural;\n \n    begin\n-      RP := 0;\n+      RP := R'First - 1;\n \n       for SP in S'Range loop\n          Store_UTF_32_Character (Wide_Wide_Character'Pos (S (SP)), R, RP, EM);\n       end loop;\n \n-      return R (1 .. RP);\n+      return R (R'First .. RP);\n    end Wide_Wide_String_To_String;\n \n end System.WCh_WtS;"}, {"sha": "4f8bfcf40140ac714deb1294a64e968c9b175a86", "filename": "gcc/ada/s-wchwts.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486fd7f5d7da98d37a02887cfbb2d178ee6191bb/gcc%2Fada%2Fs-wchwts.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486fd7f5d7da98d37a02887cfbb2d178ee6191bb/gcc%2Fada%2Fs-wchwts.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchwts.ads?ref=486fd7f5d7da98d37a02887cfbb2d178ee6191bb", "patch": "@@ -54,7 +54,8 @@ package System.WCh_WtS is\n    --  that normal (non-wide character) mode holds at the start and end of\n    --  the result string. EM indicates the wide character encoding method.\n    --  Note: in the WCEM_Brackets case, we only use the brackets encoding\n-   --  for characters greater than 16#FF#.\n+   --  for characters greater than 16#FF#. The lowest index of the returned\n+   --  String is equal to S'First.\n \n    function Wide_Wide_String_To_String\n      (S  : Wide_Wide_String;"}]}