{"sha": "de78f58bcf356456bb015282fd844ef0ba81605d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU3OGY1OGJjZjM1NjQ1NmJiMDE1MjgyZmQ4NDRlZjBiYTgxNjA1ZA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-10-06T19:29:24Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-10-06T19:29:24Z"}, "message": "cplus-dem.c (ada_demangle): Get rid of unneeded variable and of strict-aliasing warning.\n\n\t* libiberty/cplus-dem.c (ada_demangle): Get rid of unneeded\n\tvariable and of strict-aliasing warning.\n\t(grow_vect): Use char as first parameter.\n\nFrom-SVN: r57866", "tree": {"sha": "81414498df5f202e2c1ae3671e2388ec8582a8b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81414498df5f202e2c1ae3671e2388ec8582a8b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de78f58bcf356456bb015282fd844ef0ba81605d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de78f58bcf356456bb015282fd844ef0ba81605d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de78f58bcf356456bb015282fd844ef0ba81605d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de78f58bcf356456bb015282fd844ef0ba81605d/comments", "author": null, "committer": null, "parents": [{"sha": "48b80d93d2c9c95fc4e9fb0dfca10b4b11141a3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b80d93d2c9c95fc4e9fb0dfca10b4b11141a3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48b80d93d2c9c95fc4e9fb0dfca10b4b11141a3c"}], "stats": {"total": 38, "additions": 21, "deletions": 17}, "files": [{"sha": "07c18dc1d7e1b12b0f756f75da9f98f9dde8dcb5", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de78f58bcf356456bb015282fd844ef0ba81605d/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de78f58bcf356456bb015282fd844ef0ba81605d/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=de78f58bcf356456bb015282fd844ef0ba81605d", "patch": "@@ -1,3 +1,9 @@\n+2002-10-06  Andreas Jaeger  <aj@suse.de>\n+\n+\t* libiberty/cplus-dem.c (ada_demangle): Get rid of unneeded\n+\tvariable and of strict-aliasing warning.\n+\t(grow_vect): Use char as first parameter.\n+\n 2002-09-22  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (all): Fix multilib parallel build.\n@@ -52,7 +58,7 @@\n 2002-07-29  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* cplus-dem.c (PREPEND_BLANK): Remove.\n-\t\n+\n 2002-07-10  Jason Merrill  <jason@redhat.com>\n \n \t* cp-demangle.c (demangle_identifier): Support extended Unicode\n@@ -61,7 +67,7 @@\n 2002-07-08  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* cp-demangle.c (demangle_v3_with_details): Wrap in\n-\t!defined IN_GLIBCPP_V3. \n+\t!defined IN_GLIBCPP_V3.\n \n 2002-07-01  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -135,7 +141,7 @@\n \n 2002-03-30  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n-\t* cp-demangle.c (java_demangle_v3): Don't try to release \"demangled\" \n+\t* cp-demangle.c (java_demangle_v3): Don't try to release \"demangled\"\n \tif it is NULL.\n \n 2002-03-27  DJ Delorie  <dj@redhat.com>\n@@ -549,10 +555,10 @@ Thu Nov 15 11:06:25 2001  Jeffrey A Law  (law@cygnus.com)\n \n 2001-08-22  Matt Kraai  <kraai@alumni.carnegiemellon.edu>\n \n- \t* fibheap.c (fibheap_init, fibnode_init): Remove.\n- \t(fibheap_new, fibnode_new): Use xcalloc to allocate and\n- \tinitialize memory.\n- \t(fibheap_insert): Remove check for node allocation failure.\n+\t* fibheap.c (fibheap_init, fibnode_init): Remove.\n+\t(fibheap_new, fibnode_new): Use xcalloc to allocate and\n+\tinitialize memory.\n+\t(fibheap_insert): Remove check for node allocation failure.\n \n 2001-08-21  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "f42d6181d403b2e06a4d180d769a5a3003c9fc54", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de78f58bcf356456bb015282fd844ef0ba81605d/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de78f58bcf356456bb015282fd844ef0ba81605d/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=de78f58bcf356456bb015282fd844ef0ba81605d", "patch": "@@ -514,7 +514,7 @@ recursively_demangle PARAMS ((struct work_stuff *, const char **, string *,\n \t\t\t      int));\n \n static void\n-grow_vect PARAMS ((void **, size_t *, size_t, int));\n+grow_vect PARAMS ((char **, size_t *, size_t, int));\n \n /* Translate count to integer, consuming tokens in the process.\n    Conversion terminates on the first non-digit character.\n@@ -936,7 +936,7 @@ cplus_demangle (mangled, options)\n \n static void\n grow_vect (old_vect, size, min_size, element_size)\n-     void **old_vect;\n+     char **old_vect;\n      size_t *size;\n      size_t min_size;\n      int element_size;\n@@ -969,8 +969,7 @@ ada_demangle (mangled, option)\n   char *demangled = NULL;\n   int at_start_name;\n   int changed;\n-  char *demangling_buffer = NULL;\n-  size_t demangling_buffer_size = 0;\n+  size_t demangled_size = 0;\n   \n   changed = 0;\n \n@@ -998,10 +997,9 @@ ada_demangle (mangled, option)\n     }\n   \n   /* Make demangled big enough for possible expansion by operator name.  */\n-  grow_vect ((void **) &(demangling_buffer),\n-\t     &demangling_buffer_size,  2 * len0 + 1,\n+  grow_vect (&demangled,\n+\t     &demangled_size,  2 * len0 + 1,\n \t     sizeof (char));\n-  demangled = demangling_buffer;\n   \n   if (ISDIGIT ((unsigned char) mangled[len0 - 1])) {\n     for (i = len0 - 2; i >= 0 && ISDIGIT ((unsigned char) mangled[i]); i -= 1)\n@@ -1051,10 +1049,10 @@ ada_demangle (mangled, option)\n     return demangled;\n   \n  Suppress:\n-  grow_vect ((void **) &(demangling_buffer),\n-\t     &demangling_buffer_size,  strlen (mangled) + 3,\n+  grow_vect (&demangled,\n+\t     &demangled_size,  strlen (mangled) + 3,\n \t     sizeof (char));\n-  demangled = demangling_buffer;\n+\n   if (mangled[0] == '<')\n      strcpy (demangled, mangled);\n   else"}]}