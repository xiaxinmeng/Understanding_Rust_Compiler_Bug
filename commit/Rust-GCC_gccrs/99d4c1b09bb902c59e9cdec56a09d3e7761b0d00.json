{"sha": "99d4c1b09bb902c59e9cdec56a09d3e7761b0d00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlkNGMxYjA5YmI5MDJjNTllOWNkZWM1NmEwOWQzZTc3NjFiMGQwMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-08-28T08:46:52Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-23T08:24:53Z"}, "message": "[Ada] Improve documentation of pragma Abort_Defer\n\ngcc/ada/\n\n\t* doc/gnat_rm/implementation_defined_pragmas.rst: Improve\n\tdocumentation of pragma Abort_Defer.\n\t* gnat_rm.texi: Regenerate.", "tree": {"sha": "455fc22ec179934ed2c762c9297f9a9864985e03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/455fc22ec179934ed2c762c9297f9a9864985e03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99d4c1b09bb902c59e9cdec56a09d3e7761b0d00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d4c1b09bb902c59e9cdec56a09d3e7761b0d00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99d4c1b09bb902c59e9cdec56a09d3e7761b0d00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d4c1b09bb902c59e9cdec56a09d3e7761b0d00/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cc203bf2a78be88d60fd250617e0c652451b8aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc203bf2a78be88d60fd250617e0c652451b8aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cc203bf2a78be88d60fd250617e0c652451b8aa"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "a5aff66c47b60a0c95e8402619247805fa924a58", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_pragmas.rst", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d4c1b09bb902c59e9cdec56a09d3e7761b0d00/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d4c1b09bb902c59e9cdec56a09d3e7761b0d00/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst?ref=99d4c1b09bb902c59e9cdec56a09d3e7761b0d00", "patch": "@@ -37,7 +37,21 @@ This pragma must appear at the start of the statement sequence of a\n handled sequence of statements (right after the ``begin``).  It has\n the effect of deferring aborts for the sequence of statements (but not\n for the declarations or handlers, if any, associated with this statement\n-sequence).\n+sequence). This can also be useful for adding a polling point in Ada code,\n+where asynchronous abort of tasks is checked when leaving the statement\n+sequence, and is lighter than, for example, using ``delay 0.0;``, since with\n+zero-cost exception handling, propagating exceptions (implicitly used to\n+implement task abort) cannot be done reliably in an asynchronous way.\n+\n+An example of usage would be:\n+\n+.. code-block:: ada\n+\n+  --  Add a polling point to check for task aborts\n+\n+  begin\n+     pragma Abort_Defer;\n+  end;\n \n .. _Pragma-Abstract_State:\n "}, {"sha": "d4016aaa223be6c895af4065cdaae3baa52e5c9f", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d4c1b09bb902c59e9cdec56a09d3e7761b0d00/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d4c1b09bb902c59e9cdec56a09d3e7761b0d00/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=99d4c1b09bb902c59e9cdec56a09d3e7761b0d00", "patch": "@@ -1394,7 +1394,21 @@ This pragma must appear at the start of the statement sequence of a\n handled sequence of statements (right after the @code{begin}).  It has\n the effect of deferring aborts for the sequence of statements (but not\n for the declarations or handlers, if any, associated with this statement\n-sequence).\n+sequence). This can also be useful for adding a polling point in Ada code,\n+where asynchronous abort of tasks is checked when leaving the statement\n+sequence, and is lighter than, for example, using @code{delay 0.0;}, since with\n+zero-cost exception handling, propagating exceptions (implicitly used to\n+implement task abort) cannot be done reliably in an asynchronous way.\n+\n+An example of usage would be:\n+\n+@example\n+--  Add a polling point to check for task aborts\n+\n+begin\n+   pragma Abort_Defer;\n+end;\n+@end example\n \n @node Pragma Abstract_State,Pragma Ada_83,Pragma Abort_Defer,Implementation Defined Pragmas\n @anchor{gnat_rm/implementation_defined_pragmas pragma-abstract-state}@anchor{1c}@anchor{gnat_rm/implementation_defined_pragmas id2}@anchor{1d}"}]}