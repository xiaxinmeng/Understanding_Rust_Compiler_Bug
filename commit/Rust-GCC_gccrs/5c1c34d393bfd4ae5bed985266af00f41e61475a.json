{"sha": "5c1c34d393bfd4ae5bed985266af00f41e61475a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMxYzM0ZDM5M2JmZDRhZTViZWQ5ODUyNjZhZjAwZjQxZTYxNDc1YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-19T21:33:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-19T21:33:48Z"}, "message": "(expand_call): If parm is transparent union, use type of first field.\n\nFrom-SVN: r7949", "tree": {"sha": "690daa53928f2f1379d2ae2095500bdaa5bc8e95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/690daa53928f2f1379d2ae2095500bdaa5bc8e95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c1c34d393bfd4ae5bed985266af00f41e61475a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c1c34d393bfd4ae5bed985266af00f41e61475a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c1c34d393bfd4ae5bed985266af00f41e61475a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c1c34d393bfd4ae5bed985266af00f41e61475a/comments", "author": null, "committer": null, "parents": [{"sha": "3f46679a3cf93a8755c10ba7ab10774112d9f28d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f46679a3cf93a8755c10ba7ab10774112d9f28d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f46679a3cf93a8755c10ba7ab10774112d9f28d"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "9e08558e8696ca94787fc6a437151bf7dccf7449", "filename": "gcc/calls.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c1c34d393bfd4ae5bed985266af00f41e61475a/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c1c34d393bfd4ae5bed985266af00f41e61475a/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=5c1c34d393bfd4ae5bed985266af00f41e61475a", "patch": "@@ -982,6 +982,12 @@ expand_call (exp, target, ignore)\n       if (type == error_mark_node || TYPE_SIZE (type) == 0)\n \targs[i].tree_value = integer_zero_node, type = integer_type_node;\n \n+      /* If TYPE is a transparent union, pass things the way we would\n+\t pass the first field of the union.  We have already verified that\n+\t the modes are the same.  */\n+      if (TYPE_TRANSPARENT_UNION (type))\n+\ttype = TREE_TYPE (TYPE_FIELDS (type));\n+\n       /* Decide where to pass this arg.\n \n \t args[i].reg is nonzero if all or part is passed in registers."}]}