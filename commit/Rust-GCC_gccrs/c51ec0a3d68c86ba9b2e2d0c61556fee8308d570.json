{"sha": "c51ec0a3d68c86ba9b2e2d0c61556fee8308d570", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUxZWMwYTNkNjhjODZiYTliMmUyZDBjNjE1NTZmZWU4MzA4ZDU3MA==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2012-02-08T15:26:02Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2012-02-08T15:26:02Z"}, "message": "optabs.c (expand_atomic_load): Do not assume compare_and_swap will succeed for larger than word integers.\n\n\n\t* optabs.c (expand_atomic_load): Do not assume compare_and_swap will\n\tsucceed for larger than word integers.\n\nFrom-SVN: r184009", "tree": {"sha": "e3024248b27228597cb8c312498b83acfe993d15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3024248b27228597cb8c312498b83acfe993d15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c51ec0a3d68c86ba9b2e2d0c61556fee8308d570", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c51ec0a3d68c86ba9b2e2d0c61556fee8308d570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c51ec0a3d68c86ba9b2e2d0c61556fee8308d570", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c51ec0a3d68c86ba9b2e2d0c61556fee8308d570/comments", "author": null, "committer": null, "parents": [{"sha": "ea72cc1dcab80a27beb22a2c9f0b4110392ec56d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea72cc1dcab80a27beb22a2c9f0b4110392ec56d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea72cc1dcab80a27beb22a2c9f0b4110392ec56d"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "1c56ebe37b8e0232f9859f0f8b9be81956b1586c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51ec0a3d68c86ba9b2e2d0c61556fee8308d570/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51ec0a3d68c86ba9b2e2d0c61556fee8308d570/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c51ec0a3d68c86ba9b2e2d0c61556fee8308d570", "patch": "@@ -1,3 +1,8 @@\n+2012-02-08  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* optabs.c (expand_atomic_load): Do not assume compare_and_swap will\n+\talways succeed for integers larger than a native word.\n+\n 2012-02-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR rtl-optimization/52170"}, {"sha": "b0ecdf0513eef86514f07b3f9df14e2d9de05d96", "filename": "gcc/optabs.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51ec0a3d68c86ba9b2e2d0c61556fee8308d570/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51ec0a3d68c86ba9b2e2d0c61556fee8308d570/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=c51ec0a3d68c86ba9b2e2d0c61556fee8308d570", "patch": "@@ -7665,9 +7665,12 @@ expand_atomic_load (rtx target, rtx mem, enum memmodel model)\n       /* Issue val = compare_and_swap (mem, 0, 0).\n \t This may cause the occasional harmless store of 0 when the value is\n \t already 0, but it seems to be OK according to the standards guys.  */\n-      expand_atomic_compare_and_swap (NULL, &target, mem, const0_rtx,\n-\t\t\t\t      const0_rtx, false, model, model);\n-      return target;\n+      if (expand_atomic_compare_and_swap (NULL, &target, mem, const0_rtx,\n+\t\t\t\t\t  const0_rtx, false, model, model))\n+\treturn target;\n+      else\n+      /* Otherwise there is no atomic load, leave the library call.  */\n+        return NULL_RTX;\n     }\n \n   /* Otherwise assume loads are atomic, and emit the proper barriers.  */"}]}