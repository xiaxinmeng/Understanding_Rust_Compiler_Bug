{"sha": "f25a140b6a8a27a1bfb2d2572b4963d098ff91ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI1YTE0MGI2YThhMjdhMWJmYjJkMjU3MmI0OTYzZDA5OGZmOTFhZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-10-02T08:11:07Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-10-02T08:11:07Z"}, "message": "[AArch64] PR71307: Define union class of POINTER+FP\n\nALL_REGS doesn't function as a union class of POINTER_REGS and FP_REGS\nsince it includes the CC register as well.  REGNO_REG_CLASS (CC_REGNUM)\nis NO_REGS, but of course NO_REGS rightly doesn't include CC_REGNUM.\n\nAdding a union class for POINTER+FP allows the RA to use it as the\npreferred or alternative class of a pseudo.  It also works as a\nunion class of GENERAL+FP for modes that aren't allowed in SP.\n\nThis is also needed for the SVE port, which adds predicate registers\nto the mix.\n\n2017-09-15  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\tPR target/71307\n\t* config/aarch64/aarch64.h (POINTER_AND_FP_REGS): New reg class.\n\t(REG_CLASS_NAMES, REG_CLASS_CONTENTS): Update accordingly.\n\t* config/aarch64/aarch64.c (aarch64_class_max_nregs): Handle\n\tPOINTER_AND_FP_REGS.\n\ngcc/testsuite/\n\tPR target/71307\n\t* gcc.target/aarch64/vect_copy_lane_1.c: Remove XFAIL.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r253337", "tree": {"sha": "82837fb50e3f7cc47707097144b55a86e3241788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82837fb50e3f7cc47707097144b55a86e3241788"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae/comments", "author": null, "committer": null, "parents": [{"sha": "0389d86c4e252df643f9c3539e5a114add56ec7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0389d86c4e252df643f9c3539e5a114add56ec7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0389d86c4e252df643f9c3539e5a114add56ec7f"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "451580258f730f03be0523ec43b8f70596dd555a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f25a140b6a8a27a1bfb2d2572b4963d098ff91ae", "patch": "@@ -1,3 +1,13 @@\n+2017-10-02  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\tPR target/71307\n+\t* config/aarch64/aarch64.h (POINTER_AND_FP_REGS): New reg class.\n+\t(REG_CLASS_NAMES, REG_CLASS_CONTENTS): Update accordingly.\n+\t* config/aarch64/aarch64.c (aarch64_class_max_nregs): Handle\n+\tPOINTER_AND_FP_REGS.\n+\n 2017-10-02  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82355"}, {"sha": "e89c8156976cecf200cd67c1e938c8156c1240c4", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=f25a140b6a8a27a1bfb2d2572b4963d098ff91ae", "patch": "@@ -6022,6 +6022,7 @@ aarch64_class_max_nregs (reg_class_t regclass, machine_mode mode)\n     case POINTER_REGS:\n     case GENERAL_REGS:\n     case ALL_REGS:\n+    case POINTER_AND_FP_REGS:\n     case FP_REGS:\n     case FP_LO_REGS:\n       return"}, {"sha": "1c3aff587d2ec354a29cfa8eaaa766016622ed09", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=f25a140b6a8a27a1bfb2d2572b4963d098ff91ae", "patch": "@@ -444,6 +444,7 @@ enum reg_class\n   POINTER_REGS,\n   FP_LO_REGS,\n   FP_REGS,\n+  POINTER_AND_FP_REGS,\n   ALL_REGS,\n   LIM_REG_CLASSES\t\t/* Last */\n };\n@@ -459,6 +460,7 @@ enum reg_class\n   \"POINTER_REGS\",\t\t\t\t\\\n   \"FP_LO_REGS\",\t\t\t\t\t\\\n   \"FP_REGS\",\t\t\t\t\t\\\n+  \"POINTER_AND_FP_REGS\",\t\t\t\\\n   \"ALL_REGS\"\t\t\t\t\t\\\n }\n \n@@ -471,6 +473,7 @@ enum reg_class\n   { 0xffffffff, 0x00000000, 0x00000003 },\t/* POINTER_REGS */\t\\\n   { 0x00000000, 0x0000ffff, 0x00000000 },       /* FP_LO_REGS  */\t\\\n   { 0x00000000, 0xffffffff, 0x00000000 },       /* FP_REGS  */\t\t\\\n+  { 0xffffffff, 0xffffffff, 0x00000003 },\t/* POINTER_AND_FP_REGS */\\\n   { 0xffffffff, 0xffffffff, 0x00000007 }\t/* ALL_REGS */\t\t\\\n }\n "}, {"sha": "992ac3ce16ab24da9c8803199789d9002357c2a1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f25a140b6a8a27a1bfb2d2572b4963d098ff91ae", "patch": "@@ -1,3 +1,10 @@\n+2017-10-02  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\tPR target/71307\n+\t* gcc.target/aarch64/vect_copy_lane_1.c: Remove XFAIL.\n+\n 2017-10-02  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82355"}, {"sha": "2848be564d550d24a9f5c15d9dc5ececb4e2e81a", "filename": "gcc/testsuite/gcc.target/aarch64/vect_copy_lane_1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect_copy_lane_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25a140b6a8a27a1bfb2d2572b4963d098ff91ae/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect_copy_lane_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect_copy_lane_1.c?ref=f25a140b6a8a27a1bfb2d2572b4963d098ff91ae", "patch": "@@ -45,8 +45,7 @@ BUILD_TEST (uint32x2_t,  uint32x4_t,  , q, u32, 1, 3)\n BUILD_TEST (float64x1_t, float64x2_t, , q, f64, 0, 1)\n BUILD_TEST (int64x1_t,  int64x2_t,    , q, s64, 0, 1)\n BUILD_TEST (uint64x1_t, uint64x2_t,   , q, u64, 0, 1)\n-/* XFAIL due to PR 71307.  */\n-/* { dg-final { scan-assembler-times \"dup\\\\td0, v1.d\\\\\\[1\\\\\\]\" 3 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"dup\\\\td0, v1.d\\\\\\[1\\\\\\]\" 3 } } */\n \n /* vcopyq_lane.  */\n BUILD_TEST (poly8x16_t, poly8x8_t, q, , p8, 15, 7)"}]}