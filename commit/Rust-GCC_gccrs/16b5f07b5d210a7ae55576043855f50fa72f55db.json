{"sha": "16b5f07b5d210a7ae55576043855f50fa72f55db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZiNWYwN2I1ZDIxMGE3YWU1NTU3NjA0Mzg1NWY1MGZhNzJmNTVkYg==", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2019-12-12T10:02:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-12T10:02:51Z"}, "message": "[Ada] Implement AI12-0036 (a new legality check for instantiations)\n\n2019-12-12  Steve Baird  <baird@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb\n\t(Instantiate_Type.Validate_Derived_Type_Instance): Implement the\n\tlegality check of AI12-0036\n\nFrom-SVN: r279292", "tree": {"sha": "5b8363e7055a15423f5e62e9bc3eba82a6ea37a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b8363e7055a15423f5e62e9bc3eba82a6ea37a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16b5f07b5d210a7ae55576043855f50fa72f55db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b5f07b5d210a7ae55576043855f50fa72f55db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b5f07b5d210a7ae55576043855f50fa72f55db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b5f07b5d210a7ae55576043855f50fa72f55db/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9312e3079094e6255f7b5603475f7cd1cb517aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9312e3079094e6255f7b5603475f7cd1cb517aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9312e3079094e6255f7b5603475f7cd1cb517aa"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "c2e4c36ab8951f62f7ba45ff60b632f17de23198", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b5f07b5d210a7ae55576043855f50fa72f55db/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b5f07b5d210a7ae55576043855f50fa72f55db/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=16b5f07b5d210a7ae55576043855f50fa72f55db", "patch": "@@ -1,3 +1,9 @@\n+2019-12-12  Steve Baird  <baird@adacore.com>\n+\n+\t* sem_ch12.adb\n+\t(Instantiate_Type.Validate_Derived_Type_Instance): Implement the\n+\tlegality check of AI12-0036\n+\n 2019-12-12  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch10.adb (Analyze_Subunit): Fix spurious visibility error"}, {"sha": "e54e3536121ed204e03a7fb6da840e5188aa481e", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b5f07b5d210a7ae55576043855f50fa72f55db/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b5f07b5d210a7ae55576043855f50fa72f55db/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=16b5f07b5d210a7ae55576043855f50fa72f55db", "patch": "@@ -13166,6 +13166,35 @@ package body Sem_Ch12 is\n                Abandon_Instantiation (Actual);\n             end if;\n          end if;\n+\n+         --  Don't check Ada_Version here (for now) because AI12-0036 is\n+         --  a binding interpretation; this decision may be reversed if\n+         --  the situation turns out to be similar to that of the preceding\n+         --  Is_Limited_Type test (see preceding comment).\n+\n+         declare\n+            Formal_Is_Private_Extension : constant Boolean :=\n+              Nkind (Parent (A_Gen_T)) = N_Private_Extension_Declaration;\n+\n+            Actual_Is_Tagged : constant Boolean := Is_Tagged_Type (Act_T);\n+         begin\n+            if Actual_Is_Tagged /= Formal_Is_Private_Extension then\n+               if In_Instance then\n+                  null;\n+               else\n+                  if Actual_Is_Tagged then\n+                     Error_Msg_NE\n+                       (\"actual for & cannot be a tagged type\",\n+                        Actual, Gen_T);\n+                  else\n+                     Error_Msg_NE\n+                       (\"actual for & must be a tagged type\",\n+                        Actual, Gen_T);\n+                  end if;\n+                  Abandon_Instantiation (Actual);\n+               end if;\n+            end if;\n+         end;\n       end Validate_Derived_Type_Instance;\n \n       ----------------------------------------"}]}