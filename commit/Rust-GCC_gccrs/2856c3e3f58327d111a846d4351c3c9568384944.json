{"sha": "2856c3e3f58327d111a846d4351c3c9568384944", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg1NmMzZTNmNTgzMjdkMTExYTg0NmQ0MzUxYzNjOTU2ODM4NDk0NA==", "commit": {"author": {"name": "Stephane Carrez", "email": "Stephane.Carrez@worldnet.fr", "date": "2000-09-13T19:23:35Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2000-09-13T19:23:35Z"}, "message": "Document 68hc11 & 68hc12 port\n\nFrom-SVN: r36393", "tree": {"sha": "05339a3d2969081ff54bb1788c579b12c45ff4a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05339a3d2969081ff54bb1788c579b12c45ff4a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2856c3e3f58327d111a846d4351c3c9568384944", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2856c3e3f58327d111a846d4351c3c9568384944", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2856c3e3f58327d111a846d4351c3c9568384944", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2856c3e3f58327d111a846d4351c3c9568384944/comments", "author": null, "committer": null, "parents": [{"sha": "58d2986d00c095e49498d7234559012879127f98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58d2986d00c095e49498d7234559012879127f98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58d2986d00c095e49498d7234559012879127f98"}], "stats": {"total": 121, "additions": 118, "deletions": 3}, "files": [{"sha": "39e07b281bdb1f0b4fd36e47b238247b2c1235f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2856c3e3f58327d111a846d4351c3c9568384944/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2856c3e3f58327d111a846d4351c3c9568384944/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2856c3e3f58327d111a846d4351c3c9568384944", "patch": "@@ -1,3 +1,9 @@\n+2000-09-13  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n+\n+\t* md.texi (Machine Constraints): Document the 68HC11 constraints.\n+\t* install.texi (Configurations): Document the 68HC11&68HC12 port.\n+\t* invoke.texi (Option Summary, M68hc1x Options): Document the options.\n+\n Tue Sep 12 13:51:13 2000  Denis Chertykov  <denisc@overta.ru>\n \n \t* config/avr/avr.h (ASSEMBLER_DIALECT): New macro declared."}, {"sha": "10b6e94d77a004dbe37c72ef88e6d754b3b360ea", "filename": "gcc/install.texi", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2856c3e3f58327d111a846d4351c3c9568384944/gcc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2856c3e3f58327d111a846d4351c3c9568384944/gcc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finstall.texi?ref=2856c3e3f58327d111a846d4351c3c9568384944", "patch": "@@ -751,9 +751,9 @@ Here are the possible CPU types:\n @c gmicro, fx80, spur and tahoe omitted since they don't work.\n 1750a, a29k, alpha, arm, avr, c@var{n}, clipper, dsp16xx, elxsi, fr30, h8300,\n hppa1.0, hppa1.1, i370, i386, i486, i586, i686, i786, i860, i960, m32r,\n-m68000, m68k, m88k, mcore, mips, mipsel, mips64, mips64el, mn10200, mn10300,\n-ns32k, pdp11, powerpc, powerpcle, romp, rs6000, sh, sparc, sparclite,\n-sparc64, v850, vax, we32k.\n+m68000, m68k, m6811, m6812, m88k, mcore, mips, mipsel, mips64, mips64el,\n+mn10200, mn10300, ns32k, pdp11, powerpc, powerpcle, romp, rs6000, sh, sparc,\n+sparclite, sparc64, v850, vax, we32k.\n @end quotation\n \n Here are the recognized company names.  As you can see, customary\n@@ -1343,6 +1343,14 @@ point traps inherently cannot work with the FPA.\n See @ref{Sun Install}, for information on installing GNU CC on Sun\n systems.\n \n+@item m6811-elf\n+Motorola 68HC11 family micro controllers.  These are used in embedded\n+applications.  There are no standard Unix configurations.\n+\n+@item m6812-elf\n+Motorola 68HC12 family micro controllers.  These are used in embedded\n+applications.  There are no standard Unix configurations.\n+\n @item m88k-*-svr3\n Motorola m88k running the AT&T/Unisoft/Motorola V.3 reference port.\n These systems tend to use the Green Hills C, revision 1.8.5, as the"}, {"sha": "acd8c53b9003cce414410d9ac26399acd8ca5056", "filename": "gcc/invoke.texi", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2856c3e3f58327d111a846d4351c3c9568384944/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2856c3e3f58327d111a846d4351c3c9568384944/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=2856c3e3f58327d111a846d4351c3c9568384944", "patch": "@@ -233,6 +233,10 @@ in the following sections.\n -mfpa -mnobitfield  -mrtd  -mshort  -msoft-float  -mpcrel\n -malign-int -mstrict-align\n \n+@emph{M68hc1x Options}\n+-m6811  -m6812  -m68hc11  -m68hc12\n+-mauto-incdec  -mshort  -msoft-reg-count=@var{count}\n+\n @emph{VAX Options}\n -mg  -mgnu  -munix\n \n@@ -2360,6 +2364,9 @@ standard error.\n Annotate the assembler output with a comment indicating which\n pattern and alternative was used.  The length of each instruction is\n also printed.\n+@item P\n+Dump the RTL in the assembler output as a comment before each instruction.\n+Also turns on @samp{-dp} annotation.\n @item v\n For each of the other indicated dump files (except for\n @file{@var{file}.00.rtl}), dump a representation of the control flow graph\n@@ -3889,6 +3896,7 @@ that macro, which enables you to change the defaults.\n \n @menu\n * M680x0 Options::\n+* M68hc1x Options::\n * VAX Options::\n * SPARC Options::\n * Convex Options::\n@@ -4069,6 +4077,41 @@ the system.\n \n @end table\n \n+@node M68hc1x Options\n+@subsection M68hc1x Options\n+@cindex M68hc1x options\n+\n+These are the @samp{-m} options defined for the 68hc11 and 68hc12\n+microcontrollers.  The default values for these options depends on \n+which style of microcontroller was selected when the compiler was configured;\n+the defaults for the most common choices are given below.\n+\n+@table @code\n+@item -m6811\n+@itemx -m68hc11\n+Generate output for a 68HC11.  This is the default\n+when the compiler is configured for 68HC11-based systems.\n+\n+@item -m6812\n+@itemx -m68hc12\n+Generate output for a 68HC12.  This is the default\n+when the compiler is configured for 68HC12-based systems.\n+\n+@item -mauto-incdec\n+Enable the use of 68HC12 pre and post auto-increment and auto-decrement\n+addressing modes.\n+\n+@item -mshort\n+Consider type @code{int} to be 16 bits wide, like @code{short int}.\n+\n+@item -msoft-reg-count=@var{count}\n+Specify the number of pseudo-soft registers which are used for the\n+code generation.  The maximum number is 32.  Using more pseudo-soft\n+register may or may not result in better code depending on the program.\n+The default is 4 for 68HC11 and 2 for 68HC12.\n+\n+@end table\n+\n @node VAX Options\n @subsection VAX Options\n @cindex VAX options"}, {"sha": "3b77c4b40208390ab17c22717743e9ed7859a9a9", "filename": "gcc/md.texi", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2856c3e3f58327d111a846d4351c3c9568384944/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2856c3e3f58327d111a846d4351c3c9568384944/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=2856c3e3f58327d111a846d4351c3c9568384944", "patch": "@@ -1660,6 +1660,64 @@ Floating point constant that is not a 68881 constant\n Floating point constant that can be used by Sun FPA\n @end table\n \n+@item Motorola 68HC11 & 68HC12 families---@file{m68hc11.h}\n+@table @code\n+@item a\n+Register 'a'\n+\n+@item b\n+Register 'b'\n+\n+@item d\n+Register 'd'\n+\n+@item q\n+An 8-bit register\n+\n+@item t\n+Temporary soft register _.tmp\n+\n+@item u\n+A soft register _.d1 to _.d31\n+\n+@item w\n+Stack pointer register\n+\n+@item x\n+Register 'x'\n+\n+@item y\n+Register 'y'\n+\n+@item z\n+Pseudo register 'z' (replaced by 'x' or 'y' at the end)\n+\n+@item A\n+An address register: x, y or z\n+\n+@item B\n+An address register: x or y\n+\n+@item D\n+Register pair (x:d) to form a 32-bit value\n+\n+@item L\n+Constants in the range -65536 to 65535\n+\n+@item M\n+Constants whose 16-bit low part is zero\n+\n+@item N\n+Constant integer 1 or -1\n+\n+@item O\n+Constant integer 16\n+\n+@item P\n+Constants in the range -8 to 2\n+\n+@end table\n+\n @need 1000\n @item SPARC---@file{sparc.h}\n @table @code"}]}