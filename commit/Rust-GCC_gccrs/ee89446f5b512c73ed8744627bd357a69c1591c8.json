{"sha": "ee89446f5b512c73ed8744627bd357a69c1591c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU4OTQ0NmY1YjUxMmM3M2VkODc0NDYyN2JkMzU3YTY5YzE1OTFjOA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-09T21:58:23Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-09T21:58:23Z"}, "message": "Add port done awhile ago for the ARC cpu.\n\n        * arc/arc.h: New file.\n        * arc/arc.c: New file.\n        * arc/arc.md: New file.\n        * arc/initfini.c: New file.\n        * arc/lib1funcs.asm: New file.\n        * arc/t-arc: New file.\n        * arc/xm-arc.h: New file.\n        * ginclude/va-arc.h: New file.\n        * ginclude/stdarg.h: Include va-arc.h ifdef __arc__.\n        * ginclude/varargs.h: Likewise.\n        * Makefile.in (USER_H): Add va-arc.h.\n        * configure.in (arc-*-elf*): Recognize.\n        * longlong.h: Add ARC support.\nMostly so I can test changes in snapshot scripts.\n\n        * expr.c (clear_storage): Use CONST0_RTX instead of const0_rtx.\n        when clearing non-BLKmode data.\nFixes sparc problem.\n\nFrom-SVN: r15190", "tree": {"sha": "588528263ea93fbae8ceafaf447e05360533cf86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/588528263ea93fbae8ceafaf447e05360533cf86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee89446f5b512c73ed8744627bd357a69c1591c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee89446f5b512c73ed8744627bd357a69c1591c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee89446f5b512c73ed8744627bd357a69c1591c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee89446f5b512c73ed8744627bd357a69c1591c8/comments", "author": null, "committer": null, "parents": [{"sha": "6eb70e69c43a51aa0d3a21ac548504cd0f5452ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eb70e69c43a51aa0d3a21ac548504cd0f5452ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eb70e69c43a51aa0d3a21ac548504cd0f5452ae"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "ba011e94be676940a25b788f5fec1d053d302e51", "filename": "gcc/config/arc/xm-arc.h", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee89446f5b512c73ed8744627bd357a69c1591c8/gcc%2Fconfig%2Farc%2Fxm-arc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee89446f5b512c73ed8744627bd357a69c1591c8/gcc%2Fconfig%2Farc%2Fxm-arc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fxm-arc.h?ref=ee89446f5b512c73ed8744627bd357a69c1591c8", "patch": "@@ -0,0 +1,47 @@\n+/* Configuration for GNU C-compiler for the ARC processor.\n+   Copyright (C) 1994, 1997 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* #defines that need visibility everywhere.  */\n+#define FALSE 0\n+#define TRUE 1\n+\n+/* This describes the machine the compiler is hosted on.  */\n+#define HOST_BITS_PER_CHAR 8\n+#define HOST_BITS_PER_SHORT 16\n+#define HOST_BITS_PER_INT 32\n+#define HOST_BITS_PER_LONG 32\n+#define HOST_BITS_PER_LONGLONG 64\n+\n+/* Doubles are stored in memory with the high order word first.  This\n+   matters when cross-compiling.  */\n+#define HOST_WORDS_BIG_ENDIAN 1\n+\n+/* target machine dependencies.\n+   tm.h is a symbolic link to the actual target specific file.   */\n+#include \"tm.h\"\n+\n+/* Arguments to use with `exit'.  */\n+#define SUCCESS_EXIT_CODE 0\n+#define FATAL_EXIT_CODE 33\n+\n+/* If compiled with Sun CC, the use of alloca requires this #include.  */\n+#ifndef __GNUC__\n+#include \"alloca.h\"\n+#endif"}]}