{"sha": "d9392bfa032b448839abadb523aff65b8ccb3dba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkzOTJiZmEwMzJiNDQ4ODM5YWJhZGI1MjNhZmY2NWI4Y2NiM2RiYQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2019-04-23T22:53:12Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-04-23T22:53:12Z"}, "message": "libphobos: Add D support for RISC-V Linux\n\n2019-04-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n\n\t* configure.tgt: Add riscv*-*-linux* as supported target.\n\t* libdruntime/gcc/sections/elf_shared.d (getDependencies): Adjust\n\tdlpi_addr on RISCV32 and RISCV64.\n\t* src/std/math.d: Add IEEE FPU control support for RISCV.\n\nFrom-SVN: r270522", "tree": {"sha": "1eaa98a40c61f1dcde726eeb560ca71882af7b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1eaa98a40c61f1dcde726eeb560ca71882af7b82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9392bfa032b448839abadb523aff65b8ccb3dba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9392bfa032b448839abadb523aff65b8ccb3dba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9392bfa032b448839abadb523aff65b8ccb3dba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9392bfa032b448839abadb523aff65b8ccb3dba/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1bacd25b0c2c6ce3f1f737a4a84dc9c806e9af4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bacd25b0c2c6ce3f1f737a4a84dc9c806e9af4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bacd25b0c2c6ce3f1f737a4a84dc9c806e9af4b"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "1f5ea28ddf765948586d73dbfe1da52603122d30", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9392bfa032b448839abadb523aff65b8ccb3dba/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9392bfa032b448839abadb523aff65b8ccb3dba/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=d9392bfa032b448839abadb523aff65b8ccb3dba", "patch": "@@ -1,3 +1,10 @@\n+2019-04-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* configure.tgt: Add linux/riscv as supported target.\n+\t* libdruntime/gcc/sections/elf_shared.d (getDependencies): Adjust\n+\tdlpi_addr on RISCV32 and RISCV64.\n+\t* src/std/math.d: Add IEEE FPU control support for RISC-V.\n+\n 2019-04-23  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \t    Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \t    Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "5deba2a9961e73088959e98b9cc8ae76f562c3ec", "filename": "libphobos/configure.tgt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9392bfa032b448839abadb523aff65b8ccb3dba/libphobos%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9392bfa032b448839abadb523aff65b8ccb3dba/libphobos%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.tgt?ref=d9392bfa032b448839abadb523aff65b8ccb3dba", "patch": "@@ -29,6 +29,9 @@ case \"${target}\" in\n   mips*-*-linux*)\n \tLIBPHOBOS_SUPPORTED=yes\n \t;;\n+  riscv*-*-linux*)\n+\tLIBPHOBOS_SUPPORTED=yes\n+\t;;\n   x86_64-*-kfreebsd*-gnu | i?86-*-kfreebsd*-gnu)\n \tLIBPHOBOS_SUPPORTED=yes\n \t;;"}, {"sha": "89adcea889e26f653ffa0ced65b08781b3b2f315", "filename": "libphobos/libdruntime/gcc/sections/elf_shared.d", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9392bfa032b448839abadb523aff65b8ccb3dba/libphobos%2Flibdruntime%2Fgcc%2Fsections%2Felf_shared.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9392bfa032b448839abadb523aff65b8ccb3dba/libphobos%2Flibdruntime%2Fgcc%2Fsections%2Felf_shared.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fgcc%2Fsections%2Felf_shared.d?ref=d9392bfa032b448839abadb523aff65b8ccb3dba", "patch": "@@ -22,6 +22,9 @@\n \n module gcc.sections.elf_shared;\n \n+version (RISCV32) version = RISCV_Any;\n+version (RISCV64) version = RISCV_Any;\n+\n version (CRuntime_Glibc) enum SharedELF = true;\n else version (CRuntime_Musl) enum SharedELF = true;\n else version (FreeBSD) enum SharedELF = true;\n@@ -723,7 +726,16 @@ version (Shared)\n                 version (CRuntime_Musl)\n                     strtab = cast(const(char)*)(info.dlpi_addr + dyn.d_un.d_ptr); // relocate\n                 else version (linux)\n-                    strtab = cast(const(char)*)dyn.d_un.d_ptr;\n+                {\n+                    // This might change in future glibc releases (after 2.29) as dynamic sections\n+                    // are not required to be read-only on RISC-V. This was copy & pasted from MIPS\n+                    // while upstreaming RISC-V support. Otherwise MIPS is the only arch which sets\n+                    // in glibc: #define DL_RO_DYN_SECTION 1\n+                    version (RISCV_Any)\n+                        strtab = cast(const(char)*)(info.dlpi_addr + dyn.d_un.d_ptr); // relocate\n+                    else\n+                        strtab = cast(const(char)*)dyn.d_un.d_ptr;\n+                }\n                 else version (FreeBSD)\n                     strtab = cast(const(char)*)(info.dlpi_addr + dyn.d_un.d_ptr); // relocate\n                 else version (NetBSD)"}, {"sha": "6dec9cee9a0e35303e845f4b553bb217ae87ffe7", "filename": "libphobos/src/std/math.d", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9392bfa032b448839abadb523aff65b8ccb3dba/libphobos%2Fsrc%2Fstd%2Fmath.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9392bfa032b448839abadb523aff65b8ccb3dba/libphobos%2Fsrc%2Fstd%2Fmath.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fmath.d?ref=d9392bfa032b448839abadb523aff65b8ccb3dba", "patch": "@@ -4757,6 +4757,15 @@ private:\n                     return result;\n                 }\n             }\n+            else version (RISCV_Any)\n+            {\n+                uint result = void;\n+                asm pure nothrow @nogc\n+                {\n+                    \"frflags %0\" : \"=r\" result;\n+                }\n+                return result;\n+            }\n             else\n                 assert(0, \"Not yet supported\");\n         }\n@@ -4831,6 +4840,14 @@ private:\n                     }\n                 }\n             }\n+            else version (RISCV_Any)\n+            {\n+                uint newValues = 0x0;\n+                asm pure nothrow @nogc\n+                {\n+                    \"fsflags %0\" : : \"r\" newValues;\n+                }\n+            }\n             else\n                 assert(0, \"Not yet supported\");\n         }\n@@ -5423,6 +5440,15 @@ private:\n                 }\n                 return cont;\n             }\n+            else version (RISCV_Any)\n+            {\n+                ControlState cont;\n+                asm pure nothrow @nogc\n+                {\n+                    \"frcsr %0\" : \"=r\" cont;\n+                }\n+                return cont;\n+            }\n             else\n                 assert(0, \"Not yet supported\");\n         }\n@@ -5508,6 +5534,13 @@ private:\n                     }\n                 }\n             }\n+            else version (RISCV_Any)\n+            {\n+                asm pure nothrow @nogc\n+                {\n+                    \"fscsr %0\" : : \"r\" (newState);\n+                }\n+            }\n             else\n                 assert(0, \"Not yet supported\");\n         }"}]}