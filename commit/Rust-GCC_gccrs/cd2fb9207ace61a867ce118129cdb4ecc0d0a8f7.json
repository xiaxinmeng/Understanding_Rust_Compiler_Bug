{"sha": "cd2fb9207ace61a867ce118129cdb4ecc0d0a8f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QyZmI5MjA3YWNlNjFhODY3Y2UxMTgxMjljZGI0ZWNjMGQwYThmNw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-05-20T12:51:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-20T12:51:06Z"}, "message": "2008-05-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_eval.adb\n\t(Eval_Slice): Warn when a slice whose discrete range is a subtype name\n\tdenotes the whole array of its prefix.\n\nFrom-SVN: r135643", "tree": {"sha": "58ffa095bc0a26a7fc70336e3aa0ee6d87556e53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58ffa095bc0a26a7fc70336e3aa0ee6d87556e53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd2fb9207ace61a867ce118129cdb4ecc0d0a8f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd2fb9207ace61a867ce118129cdb4ecc0d0a8f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd2fb9207ace61a867ce118129cdb4ecc0d0a8f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd2fb9207ace61a867ce118129cdb4ecc0d0a8f7/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b1c635450494b9aa044f355cb4fb87fcc0841eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1c635450494b9aa044f355cb4fb87fcc0841eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b1c635450494b9aa044f355cb4fb87fcc0841eb"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "c03f11ab0af0a0dfbf58790800dab247483baa6a", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2fb9207ace61a867ce118129cdb4ecc0d0a8f7/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2fb9207ace61a867ce118129cdb4ecc0d0a8f7/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=cd2fb9207ace61a867ce118129cdb4ecc0d0a8f7", "patch": "@@ -2678,6 +2678,35 @@ package body Sem_Eval is\n          Check_Non_Static_Context (Low_Bound (Drange));\n          Check_Non_Static_Context (High_Bound (Drange));\n       end if;\n+\n+      --  A slice of the form  A (subtype), when the subtype is the index of\n+      --  the type of A, is redundant, the slice can be replaced with A, and\n+      --  this is worth a warning.\n+\n+      if Is_Entity_Name (Prefix (N)) then\n+         declare\n+            E : constant Entity_Id := Entity (Prefix (N));\n+            T : constant Entity_Id := Etype (E);\n+         begin\n+            if Ekind (E) = E_Constant\n+              and then Is_Array_Type (T)\n+              and then Is_Entity_Name (Drange)\n+            then\n+               if Is_Entity_Name (Original_Node (First_Index (T)))\n+                 and then Entity (Original_Node (First_Index (T)))\n+                    = Entity (Drange)\n+               then\n+                  if Warn_On_Redundant_Constructs then\n+                     Error_Msg_N (\"redundant slice denotes whole array?\", N);\n+                  end if;\n+\n+                  --  The following might be a useful optimization ????\n+\n+                  --  Rewrite (N, New_Occurrence_Of (E, Sloc (N)));\n+               end if;\n+            end if;\n+         end;\n+      end if;\n    end Eval_Slice;\n \n    -------------------------\n@@ -3309,9 +3338,12 @@ package body Sem_Eval is\n \n       --  For a result of type integer, substitute an N_Integer_Literal node\n       --  for the result of the compile time evaluation of the expression.\n+      --  For ASIS use, set a link to the original named number when not in\n+      --  a generic context.\n \n       if Is_Integer_Type (Typ) then\n          Rewrite (N, Make_Integer_Literal (Loc, Val));\n+\n          Set_Original_Entity (N, Ent);\n \n       --  Otherwise we have an enumeration type, and we substitute either\n@@ -3355,6 +3387,9 @@ package body Sem_Eval is\n       end if;\n \n       Rewrite (N, Make_Real_Literal (Loc, Realval => Val));\n+\n+      --  Set link to original named number, for ASIS use.\n+\n       Set_Original_Entity (N, Ent);\n \n       --  Both the actual and expected type comes from the original expression"}]}