{"sha": "fdb3f82fb324c3ddd7464d11c8ea60a98f486a0e", "node_id": "C_kwDOANBUbNoAKGZkYjNmODJmYjMyNGMzZGRkNzQ2NGQxMWM4ZWE2MGE5OGY0ODZhMGU", "commit": {"author": {"name": "Philipp Fent", "email": "fent@in.tum.de", "date": "2022-04-14T16:06:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-04-19T13:18:33Z"}, "message": "libstdc++: Add pretty printer for std::span\n\nThis improves the debug output for C++20 spans.\n\nBefore:\n{static extent = 18446744073709551615, _M_ptr = 0x7fffffffb9a8, _M_extent = {_M_extent_value = 2}}\nNow with StdSpanPrinter:\nstd::span of length 2 = {1, 2}\n\nSigned-off-by: Philipp Fent <fent@in.tum.de>\n\nlibstdc++-v3/ChangeLog:\n\n\t* python/libstdcxx/v6/printers.py (StdSpanPrinter): Define.\n\t* testsuite/libstdc++-prettyprinters/cxx20.cc: Test it.", "tree": {"sha": "ca95582ee36253a4dbd38dc0fa0d3a255fdb9368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca95582ee36253a4dbd38dc0fa0d3a255fdb9368"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdb3f82fb324c3ddd7464d11c8ea60a98f486a0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdb3f82fb324c3ddd7464d11c8ea60a98f486a0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdb3f82fb324c3ddd7464d11c8ea60a98f486a0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdb3f82fb324c3ddd7464d11c8ea60a98f486a0e/comments", "author": {"login": "pfent", "id": 5686284, "node_id": "MDQ6VXNlcjU2ODYyODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5686284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfent", "html_url": "https://github.com/pfent", "followers_url": "https://api.github.com/users/pfent/followers", "following_url": "https://api.github.com/users/pfent/following{/other_user}", "gists_url": "https://api.github.com/users/pfent/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfent/subscriptions", "organizations_url": "https://api.github.com/users/pfent/orgs", "repos_url": "https://api.github.com/users/pfent/repos", "events_url": "https://api.github.com/users/pfent/events{/privacy}", "received_events_url": "https://api.github.com/users/pfent/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "214d2860f4e1573f04ef57bfea59da0cc66883ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/214d2860f4e1573f04ef57bfea59da0cc66883ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/214d2860f4e1573f04ef57bfea59da0cc66883ce"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "6d8b765f2da4b01c54394810a1aa28b0bff05783", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb3f82fb324c3ddd7464d11c8ea60a98f486a0e/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb3f82fb324c3ddd7464d11c8ea60a98f486a0e/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=fdb3f82fb324c3ddd7464d11c8ea60a98f486a0e", "patch": "@@ -1654,6 +1654,43 @@ def to_string (self):\n             s = \"{}, {}={}\".format(s, v, self.val['_M_' + v])\n         return \"{%s}\" % (s)\n \n+class StdSpanPrinter:\n+    \"Print a std::span\"\n+\n+    class _iterator(Iterator):\n+        def __init__(self, begin, size):\n+            self.count = 0\n+            self.begin = begin\n+            self.size = size\n+\n+        def __iter__ (self):\n+            return self\n+\n+        def __next__ (self):\n+            if self.count == self.size:\n+                raise StopIteration\n+\n+            count = self.count\n+            self.count = self.count + 1\n+            return '[%d]' % count, (self.begin + count).dereference()\n+\n+    def __init__(self, typename, val):\n+        self.typename = typename\n+        self.val = val\n+        if val.type.template_argument(1) == gdb.parse_and_eval('static_cast<std::size_t>(-1)'):\n+            self.size = val['_M_extent']['_M_extent_value']\n+        else:\n+            self.size = val.type.template_argument(1)\n+\n+    def to_string(self):\n+        return '%s of length %d' % (self.typename, self.size)\n+\n+    def children(self):\n+        return self._iterator(self.val['_M_ptr'], self.size)\n+\n+    def display_hint(self):\n+        return 'array'\n+\n # A \"regular expression\" printer which conforms to the\n # \"SubPrettyPrinter\" protocol from gdb.printing.\n class RxPrinter(object):\n@@ -2170,6 +2207,7 @@ def build_libstdcxx_dictionary ():\n     libstdcxx_printer.add_version('std::', 'partial_ordering', StdCmpCatPrinter)\n     libstdcxx_printer.add_version('std::', 'weak_ordering', StdCmpCatPrinter)\n     libstdcxx_printer.add_version('std::', 'strong_ordering', StdCmpCatPrinter)\n+    libstdcxx_printer.add_version('std::', 'span', StdSpanPrinter)\n \n     # Extensions.\n     libstdcxx_printer.add_version('__gnu_cxx::', 'slist', StdSlistPrinter)"}, {"sha": "76023df93faab00c2ebbd1dfda27e362e01cecaa", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/cxx20.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb3f82fb324c3ddd7464d11c8ea60a98f486a0e/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx20.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb3f82fb324c3ddd7464d11c8ea60a98f486a0e/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx20.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx20.cc?ref=fdb3f82fb324c3ddd7464d11c8ea60a98f486a0e", "patch": "@@ -18,8 +18,10 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+#include <array>\n #include <compare>\n #include <iostream>\n+#include <span>\n \n struct X\n {\n@@ -54,6 +56,15 @@ main()\n   auto c10 = 0.0 <=> __builtin_nan(\"\");\n // { dg-final { note-test c10 \"std::partial_ordering::unordered\" } }\n \n+  auto il = {1, 2};\n+  auto s1 = std::span(il);\n+  static_assert(s1.extent == std::size_t(-1));\n+// { dg-final { note-test s1 {std::span of length 2 = {1, 2}} } }\n+  auto a = std::array{3, 4};\n+  auto s2 = std::span(a);\n+  static_assert(s2.extent == std::size_t(2));\n+// { dg-final { note-test s2 {std::span of length 2 = {3, 4}} } }\n+\n   std::cout << \"\\n\";\n   return 0;\t\t\t// Mark SPOT\n }"}]}