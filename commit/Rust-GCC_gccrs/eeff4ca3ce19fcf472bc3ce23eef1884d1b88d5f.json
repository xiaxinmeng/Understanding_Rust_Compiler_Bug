{"sha": "eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVmZjRjYTNjZTE5ZmNmNDcyYmMzY2UyM2VlZjE4ODRkMWI4OGQ1Zg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-11-07T14:07:19Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-11-07T14:07:19Z"}, "message": "dostime.c: Rewrote from scratch.\n\n\t* dostime.c: Rewrote from scratch.\n\t* dostime.h (dostime): Removed.\n\nFrom-SVN: r58892", "tree": {"sha": "32a1ad241cc2665dc51be7b04c20c94b29b94704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32a1ad241cc2665dc51be7b04c20c94b29b94704"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f/comments", "author": null, "committer": null, "parents": [{"sha": "82396c2a26f207479b3ccfcb2c51852b22013abd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82396c2a26f207479b3ccfcb2c51852b22013abd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82396c2a26f207479b3ccfcb2c51852b22013abd"}], "stats": {"total": 159, "additions": 57, "deletions": 102}, "files": [{"sha": "bb02ab9ee1f2312a316ad641c0b3dc89f54e073a", "filename": "fastjar/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f/fastjar%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f/fastjar%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FChangeLog?ref=eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f", "patch": "@@ -1,3 +1,12 @@\n+2002-11-07  Tom Tromey  <tromey@redhat.com>\n+\n+\t* dostime.c: Rewrote from scratch.\n+\t* dostime.h (dostime): Removed.\n+\n+2002-10-24  Tom Tromey  <tromey@redhat.com>\n+\n+\t* dostime.c: Removed Id and Log.\n+\n 2002-10-20  Tom Tromey  <tromey@redhat.com>\n \n \t* jartool.c: Use mode 0666 when opening new file."}, {"sha": "b3c76e5220253419a2999b472c15951c758eb4de", "filename": "fastjar/dostime.c", "status": "modified", "additions": 47, "deletions": 100, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f/fastjar%2Fdostime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f/fastjar%2Fdostime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fdostime.c?ref=eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f", "patch": "@@ -1,129 +1,76 @@\n-/*\n-  dostime.c - routines for converting UNIX time to MS-DOS time.  \n-\n-  Borrowed from Info-zip's unzip\n+/* dostime.c - convert dos time to/from time_t.\n \n-  Copyright (C) 1999 Bryan Burns\n+   Copyright (C) 2002 Free Software Foundation\n \n   This program is free software; you can redistribute it and/or\n   modify it under the terms of the GNU General Public License\n   as published by the Free Software Foundation; either version 2\n   of the License, or (at your option) any later version.\n-\n+  \n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n-\n+  \n   You should have received a copy of the GNU General Public License\n   along with this program; if not, write to the Free Software\n   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n */\n \n-/* $Id: dostime.c,v 1.1 2000/12/09 03:08:23 apbianco Exp $\n-\n-   $Log: dostime.c,v $\n-   Revision 1.1  2000/12/09 03:08:23  apbianco\n-   2000-12-08  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n-\n-           * fastjar: Imported.\n-\n-   Revision 1.1.1.1  1999/12/06 03:09:12  toast\n-   initial checkin..\n-\n-\n-\n-   Revision 1.6  1999/05/10 08:32:26  burnsbr\n-   added dos2unixtime\n-\n-   Revision 1.5  1999/04/27 10:03:50  burnsbr\n-   configure support\n-\n-   Revision 1.4  1999/04/26 21:55:19  burnsbr\n-   switched from sys/time.h to time.h for better portability\n-\n-   Revision 1.3  1999/04/20 08:54:30  burnsbr\n-   added GPL comment\n-\n-   Revision 1.2  1999/04/20 05:10:53  burnsbr\n-   added RCS tags\n+#include <config.h>\n \n-\n-*/\n-#include \"config.h\"\n-\n-#ifdef TM_IN_SYS_TIME\n-#include <sys/time.h>\n-#else\n #include <time.h>\n-#endif\n \n #include \"dostime.h\"\n \n /*\n-\n- Copyright (C) 1990-1997 Mark Adler, Richard B. Wales, Jean-loup Gailly,\n- Kai Uwe Rommel, Onno van der Linden and Igor Mandrichenko.\n- Permission is granted to any individual or institution to use, copy, or\n- redistribute this software so long as all of the original files are included,\n- that it is not sold for profit, and that this copyright notice is retained.\n-\n-*/\n-\n-\n-time_t dos2unixtime(dostime)\n-     unsigned long dostime;            /* DOS time to convert */\n-     /* Return the Unix time_t value (GMT/UTC time) for the DOS format (local)\n-      * time dostime, where dostime is a four byte value (date in most\n-      * significant word, time in least significant word), see dostime() \n-      * function.\n-      */\n+ * The specification to which this was written.  From Joe Buck.\n+ * The DOS format appears to have only 2 second resolution.  It is an\n+ * unsigned long, and ORs together\n+ * \n+ * (year-1980)<<25\n+ * month<<21  (month is tm_mon + 1, 1=Jan through 12=Dec)\n+ * day<<16    (day is tm_mday, 1-31)\n+ * hour<<11   (hour is tm_hour, 0-23)\n+ * min<<5\t   (min is tm_min, 0-59)\n+ * sec>>1\t   (sec is tm_sec, 0-59, that's right, we throw away the LSB)\n+ * \n+ * DOS uses local time, so the localtime() call is used to turn the time_t\n+ * into a struct tm.\n+ */\n+\n+time_t\n+dos2unixtime (unsigned long dostime)\n {\n-  struct tm *t;         /* argument for mktime() */\n-  time_t clock = time(NULL);\n+  struct tm ltime;\n+  time_t now = time (NULL);\n \n-  t = localtime(&clock);\n-  t->tm_isdst = -1;     /* let mktime() determine if DST is in effect */\n-  /* Convert DOS time to UNIX time_t format */\n-  t->tm_sec  = (((int)dostime) <<  1) & 0x3e;\n-  t->tm_min  = (((int)dostime) >>  5) & 0x3f;\n-  t->tm_hour = (((int)dostime) >> 11) & 0x1f;\n-  t->tm_mday = (int)(dostime >> 16) & 0x1f;\n-  t->tm_mon  = ((int)(dostime >> 21) & 0x0f) - 1;\n-  t->tm_year = ((int)(dostime >> 25) & 0x7f) + 80;\n+  /* Call localtime to initialize timezone in TIME.  */\n+  ltime = *localtime (&now);\n \n-  return mktime(t);\n-}\n+  ltime.tm_year = (dostime >> 25) + 80;\n+  ltime.tm_mon = 1 + ((dostime >> 21) & 0x0f);\n+  ltime.tm_mday = (dostime >> 16) & 0x1f;\n+  ltime.tm_hour = (dostime >> 11) & 0x0f;\n+  ltime.tm_min = (dostime >> 5) & 0x3f;\n+  ltime.tm_sec = (dostime & 0x0f) << 1;\n \n-unsigned long dostime(y, n, d, h, m, s)\n-int y;                  /* year */\n-int n;                  /* month */\n-int d;                  /* day */\n-int h;                  /* hour */\n-int m;                  /* minute */\n-int s;                  /* second */\n-/* Convert the date y/n/d and time h:m:s to a four byte DOS date and\n-   time (date in high two bytes, time in low two bytes allowing magnitude\n-   comparison). */\n-{\n-  return y < 1980 ? dostime(1980, 1, 1, 0, 0, 0) :\n-    (((unsigned long)y - 1980) << 25) | ((unsigned long)n << 21) | \n-    ((unsigned long)d << 16) | ((unsigned long)h << 11) | \n-    ((unsigned long)m << 5) | ((unsigned long)s >> 1);\n-}\n+  ltime.tm_wday = -1;\n+  ltime.tm_yday = -1;\n+  ltime.tm_isdst = -1;\n \n+  return mktime (&ltime);\n+}\n \n-unsigned long unix2dostime(t)\n-time_t *t;             /* unix time to convert */\n-/* Return the Unix time t in DOS format, rounded up to the next two\n-   second boundary. */\n+unsigned long\n+unix2dostime (time_t *time)\n {\n-  time_t t_even;\n-  struct tm *s;         /* result of localtime() */\n-\n-  t_even = (*t + 1) & (~1);     /* Round up to even seconds. */\n-  s = localtime(&t_even);       /* Use local time since MSDOS does. */\n-  return dostime(s->tm_year + 1900, s->tm_mon + 1, s->tm_mday,\n-                 s->tm_hour, s->tm_min, s->tm_sec);\n+  struct tm *ltime = localtime (time);\n+\n+  return ((ltime->tm_year - 80) << 25\n+\t  | ltime->tm_mon << 21\n+\t  | (ltime->tm_mday - 1) << 16\n+\t  | ltime->tm_hour << 11\n+\t  | ltime->tm_min << 5\n+\t  | ltime->tm_sec >> 1);\n }\n-"}, {"sha": "822c8e0e83f550658ba668f87fcdef4f718b885b", "filename": "fastjar/dostime.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f/fastjar%2Fdostime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f/fastjar%2Fdostime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fdostime.h?ref=eeff4ca3ce19fcf472bc3ce23eef1884d1b88d5f", "patch": "@@ -1,6 +1,6 @@\n /*\n   dostime.h - function prototypes\n-  Copyright (C) 1999  Bryan Burns\n+  Copyright (C) 1999, 2002  Bryan Burns\n   \n   This program is free software; you can redistribute it and/or\n   modify it under the terms of the GNU General Public License\n@@ -18,5 +18,4 @@\n  */\n \n time_t dos2unixtime(unsigned long dostime);\n-unsigned long dostime(int, int, int, int, int, int);\n unsigned long unix2dostime(time_t*);"}]}