{"sha": "960224c3b740cedfefc3efeb3a19fa5f72d93051", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYwMjI0YzNiNzQwY2VkZmVmYzNlZmViM2ExOWZhNWY3MmQ5MzA1MQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-10-16T17:17:40Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-10-16T17:17:40Z"}, "message": "re PR go/63560 (__go_set_defer_retaddr shouldn't be split by IPA split)\n\n\tPR go/63560\ncompiler: Mark functions that call defer_retaddr as not inlinable.\n\nThis is to that the GCC middle-end won't split them.  See\nhttp://gcc.gnu.org/PR63560.\n\nFrom-SVN: r216341", "tree": {"sha": "06cda2f7f9645e6b615d5012520a22f8c9184c2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06cda2f7f9645e6b615d5012520a22f8c9184c2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/960224c3b740cedfefc3efeb3a19fa5f72d93051", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/960224c3b740cedfefc3efeb3a19fa5f72d93051", "html_url": "https://github.com/Rust-GCC/gccrs/commit/960224c3b740cedfefc3efeb3a19fa5f72d93051", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/960224c3b740cedfefc3efeb3a19fa5f72d93051/comments", "author": null, "committer": null, "parents": [{"sha": "01e4aecea8435f75dfb69c3b5fee1c309a9715b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01e4aecea8435f75dfb69c3b5fee1c309a9715b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01e4aecea8435f75dfb69c3b5fee1c309a9715b0"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "4c7eca4b247e412ab9953d258e8024d877ca675a", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/960224c3b740cedfefc3efeb3a19fa5f72d93051/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/960224c3b740cedfefc3efeb3a19fa5f72d93051/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=960224c3b740cedfefc3efeb3a19fa5f72d93051", "patch": "@@ -4945,6 +4945,14 @@ Function::get_or_make_decl(Gogo* gogo, Named_object* no)\n       // our return address comparison.\n       bool is_inlinable = !(this->calls_recover_ || this->is_recover_thunk_);\n \n+      // If a function calls __go_set_defer_retaddr, then mark it as\n+      // uninlinable.  This prevents the GCC backend from splitting\n+      // the function; splitting the function is a bad idea because we\n+      // want the return address label to be in the same function as\n+      // the call.\n+      if (this->calls_defer_retaddr_)\n+\tis_inlinable = false;\n+\n       // If this is a thunk created to call a function which calls\n       // the predeclared recover function, we need to disable\n       // stack splitting for the thunk."}, {"sha": "4453d13c835ab245299ebd085c4cc46973d6626f", "filename": "gcc/go/gofrontend/gogo.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/960224c3b740cedfefc3efeb3a19fa5f72d93051/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/960224c3b740cedfefc3efeb3a19fa5f72d93051/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.h?ref=960224c3b740cedfefc3efeb3a19fa5f72d93051", "patch": "@@ -1065,6 +1065,12 @@ class Function\n   set_has_recover_thunk()\n   { this->has_recover_thunk_ = true; }\n \n+  // Record that this function is a thunk created for a defer\n+  // statement that calls the __go_set_defer_retaddr runtime function.\n+  void\n+  set_calls_defer_retaddr()\n+  { this->calls_defer_retaddr_ = true; }\n+\n   // Mark the function as going into a unique section.\n   void\n   set_in_unique_section()\n@@ -1190,6 +1196,9 @@ class Function\n   bool is_recover_thunk_ : 1;\n   // True if this function already has a recover thunk.\n   bool has_recover_thunk_ : 1;\n+  // True if this is a thunk built for a defer statement that calls\n+  // the __go_set_defer_retaddr runtime function.\n+  bool calls_defer_retaddr_ : 1;\n   // True if this function should be put in a unique section.  This is\n   // turned on for field tracking.\n   bool in_unique_section_ : 1;"}, {"sha": "ccf5452371ddf14e9a0b2cc693a7494b80f30cfa", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/960224c3b740cedfefc3efeb3a19fa5f72d93051/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/960224c3b740cedfefc3efeb3a19fa5f72d93051/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=960224c3b740cedfefc3efeb3a19fa5f72d93051", "patch": "@@ -2376,6 +2376,8 @@ Thunk_statement::build_thunk(Gogo* gogo, const std::string& thunk_name)\n \t\t\t\t\t\t  location);\n       s->determine_types();\n       gogo->add_statement(s);\n+\n+      function->func_value()->set_calls_defer_retaddr();\n     }\n \n   // Get a reference to the parameter."}]}