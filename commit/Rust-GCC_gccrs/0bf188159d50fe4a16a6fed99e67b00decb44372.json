{"sha": "0bf188159d50fe4a16a6fed99e67b00decb44372", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJmMTg4MTU5ZDUwZmU0YTE2YTZmZWQ5OWU2N2IwMGRlY2I0NDM3Mg==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2002-02-22T13:53:23Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2002-02-22T13:53:23Z"}, "message": "Connection.java (conect): Open the input and/or output streams immediately here, instead of using File.exists.\n\n\n\t* gnu/gcj/protocol/file/Connection.java (conect):  Open the input\n\tand/or output streams immediately here, instead of using File.exists.\n\t(inputStream, outputStream):  New fields to save open streams.\n\t(getInputStream, getOutputStream):  Use already-opened streams.\n\nFrom-SVN: r49965", "tree": {"sha": "403487f3054f73980bce2587de7b1ce07c86d4f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/403487f3054f73980bce2587de7b1ce07c86d4f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bf188159d50fe4a16a6fed99e67b00decb44372", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bf188159d50fe4a16a6fed99e67b00decb44372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bf188159d50fe4a16a6fed99e67b00decb44372", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bf188159d50fe4a16a6fed99e67b00decb44372/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "696179ca62f0ae83ed5b86100d683b60dc83eb97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/696179ca62f0ae83ed5b86100d683b60dc83eb97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/696179ca62f0ae83ed5b86100d683b60dc83eb97"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "903ca65bc7c60de16e2e45c1ede2458dad400cdb", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf188159d50fe4a16a6fed99e67b00decb44372/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf188159d50fe4a16a6fed99e67b00decb44372/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0bf188159d50fe4a16a6fed99e67b00decb44372", "patch": "@@ -1,3 +1,10 @@\n+2002-02-20  Per Bothner  <per@bothner.com>\n+\n+\t* gnu/gcj/protocol/file/Connection.java (conect):  Open the input\n+\tand/or output streams immediately here, instead of using File.exists.\n+\t(inputStream, outputStream):  New fields to save open streams.\n+\t(getInputStream, getOutputStream):  Use already-opened streams.\n+\n 2002-02-22  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* acinclude.m4 (LIB_AC_PROG_CXX): Copied from libstdc++-v3."}, {"sha": "5510c5d74ea22bc3b37747175c537ad9baa943ec", "filename": "libjava/gnu/gcj/protocol/file/Connection.java", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf188159d50fe4a16a6fed99e67b00decb44372/libjava%2Fgnu%2Fgcj%2Fprotocol%2Ffile%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf188159d50fe4a16a6fed99e67b00decb44372/libjava%2Fgnu%2Fgcj%2Fprotocol%2Ffile%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fprotocol%2Ffile%2FConnection.java?ref=0bf188159d50fe4a16a6fed99e67b00decb44372", "patch": "@@ -33,6 +33,8 @@ class Connection extends URLConnection\n   private Vector hdrVec = new Vector();\n   private boolean gotHeaders = false;\n   private File fileIn;\n+  private InputStream inputStream;\n+  private OutputStream outputStream;\n \n   public Connection(URL url)\n   {\n@@ -47,34 +49,36 @@ public void connect() throws IOException\n       return;\n \n     // If not connected, then file needs to be openned.\n-    fileIn = new File(url.getFile());\n-    \n-    if (fileIn.exists())\n-      connected = true;\n-    else\n-      throw new FileNotFoundException(\"No such file or directory\");\n+    String fname = url.getFile();\n+    fileIn = new File(fname);\n+    if (doInput)\n+      inputStream = new BufferedInputStream(new FileInputStream(fileIn));\n+    if (doOutput)\n+      outputStream = new BufferedOutputStream(new FileOutputStream(fileIn));\n+    connected = true;\n   }\n \n   public InputStream getInputStream() throws IOException\n   {\n+    if (! doInput)\n+      throw new ProtocolException(\"Can't open InputStream if doInput is false\");\n     if (!connected)\n       connect();\n \n-    if (! doInput)\n-      throw new ProtocolException(\"Can't open InputStream if doInput is false\");\n-    return new BufferedInputStream(new FileInputStream(fileIn));\n+    return inputStream;\n   }\n \n   // Override default method in URLConnection.\n   public OutputStream getOutputStream() throws IOException\n   {\n-    if (!connected)\n-      connect();\n-\n     if (! doOutput)\n       throw new\n \tProtocolException(\"Can't open OutputStream if doOutput is false\");\n-    return new BufferedOutputStream(new FileOutputStream(fileIn));\n+\n+    if (!connected)\n+      connect();\n+\n+    return outputStream;\n   }\n \n   // Override default method in URLConnection."}]}