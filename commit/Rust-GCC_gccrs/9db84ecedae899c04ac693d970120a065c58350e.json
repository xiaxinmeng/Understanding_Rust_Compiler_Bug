{"sha": "9db84ecedae899c04ac693d970120a065c58350e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRiODRlY2VkYWU4OTljMDRhYzY5M2Q5NzAxMjBhMDY1YzU4MzUwZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-10-06T16:02:13Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-10-06T16:02:13Z"}, "message": "[PR c++/82424] Dont convert dependent types\n\nhttps://gcc.gnu.org/ml/gcc-patches/2017-10/msg00385.html\n\tcp/\n\tPR c++/82424\n\t* name-lookup.c (check_local_shadow): Don't try and convert\n\tdependent types.\n\n\ttestsuite/\n\tPR c++/82424\n\t* g++.dg/warn/pr82424.C: New.\n\nFrom-SVN: r253496", "tree": {"sha": "6e6aeb940d2d46d4759c66abf23c8d6b408dabc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e6aeb940d2d46d4759c66abf23c8d6b408dabc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9db84ecedae899c04ac693d970120a065c58350e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9db84ecedae899c04ac693d970120a065c58350e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9db84ecedae899c04ac693d970120a065c58350e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9db84ecedae899c04ac693d970120a065c58350e/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7260f6f79cd3aea6580013d386ce0fd8696a6b19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7260f6f79cd3aea6580013d386ce0fd8696a6b19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7260f6f79cd3aea6580013d386ce0fd8696a6b19"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "b2813ebf21187413f71a8c820f1f6992a74ab074", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9db84ecedae899c04ac693d970120a065c58350e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9db84ecedae899c04ac693d970120a065c58350e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9db84ecedae899c04ac693d970120a065c58350e", "patch": "@@ -1,3 +1,9 @@\n+2017-10-06  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/82424\n+\t* name-lookup.c (check_local_shadow): Don't try and convert\n+\tdependent types.\n+\n 2017-10-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/82299"}, {"sha": "a3da34d7549c8f44c6e936b33dc58be5440e6a94", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9db84ecedae899c04ac693d970120a065c58350e/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9db84ecedae899c04ac693d970120a065c58350e/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=9db84ecedae899c04ac693d970120a065c58350e", "patch": "@@ -2728,7 +2728,11 @@ check_local_shadow (tree decl)\n       else if (warn_shadow_local)\n \twarning_code = OPT_Wshadow_local;\n       else if (warn_shadow_compatible_local\n-\t       && can_convert (TREE_TYPE (old), TREE_TYPE (decl), tf_none))\n+\t       && (same_type_p (TREE_TYPE (old), TREE_TYPE (decl))\n+\t\t   || (!dependent_type_p (TREE_TYPE (decl))\n+\t\t       && !dependent_type_p (TREE_TYPE (old))\n+\t\t       && can_convert (TREE_TYPE (old), TREE_TYPE (decl),\n+\t\t\t\t       tf_none))))\n \twarning_code = OPT_Wshadow_compatible_local;\n       else\n \treturn;"}, {"sha": "97825c3319c4db18be2c718f0f3c6f332434f075", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9db84ecedae899c04ac693d970120a065c58350e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9db84ecedae899c04ac693d970120a065c58350e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9db84ecedae899c04ac693d970120a065c58350e", "patch": "@@ -1,3 +1,8 @@\n+2017-10-06  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/82424\n+\t* g++.dg/warn/pr82424.C: New.\n+\n 2017-10-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/82299"}, {"sha": "43dd5e4e3d2e24c1a7a6a6ee25e0bd8932c3d448", "filename": "gcc/testsuite/g++.dg/warn/pr82424.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9db84ecedae899c04ac693d970120a065c58350e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr82424.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9db84ecedae899c04ac693d970120a065c58350e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr82424.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr82424.C?ref=9db84ecedae899c04ac693d970120a065c58350e", "patch": "@@ -0,0 +1,20 @@\n+// { dg-additional-options \"-Wshadow=compatible-local\" }\n+\n+// pr c++/82424 we were trying to convert between dependent types.\n+template <typename T> class a\n+{\n+  struct b;\n+  template <typename, typename> void c ();\n+};\n+template <typename T>\n+template <typename, typename>\n+void\n+a<T>::c ()\n+{\n+  typedef typename T::b b; // Don't go looking inside the typename\n+  T thing;\n+  {\n+    T thing; // { dg-warning \"shadows a previous local\" }\n+  }\n+}\n+"}]}