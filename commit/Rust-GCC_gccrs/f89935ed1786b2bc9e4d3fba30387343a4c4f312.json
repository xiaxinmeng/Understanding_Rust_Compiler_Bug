{"sha": "f89935ed1786b2bc9e4d3fba30387343a4c4f312", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg5OTM1ZWQxNzg2YjJiYzllNGQzZmJhMzAzODczNDNhNGM0ZjMxMg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2007-11-23T15:38:29Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2007-11-23T15:38:29Z"}, "message": "reload.c (find_reloads_address_1): Call REG_OK_FOR_CONTEXT with the autoincdec code, not outer_code.\n\n\t* reload.c (find_reloads_address_1) <autoincdec cases>:\n\tCall REG_OK_FOR_CONTEXT with the autoincdec code, not\n\touter_code.\n\nFrom-SVN: r130380", "tree": {"sha": "524b6fbfc522c5fc6aa1cb518903cbbafd118a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/524b6fbfc522c5fc6aa1cb518903cbbafd118a73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f89935ed1786b2bc9e4d3fba30387343a4c4f312", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89935ed1786b2bc9e4d3fba30387343a4c4f312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f89935ed1786b2bc9e4d3fba30387343a4c4f312", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89935ed1786b2bc9e4d3fba30387343a4c4f312/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27fa4044f10f2a28e3e33b8b126462276f8fdc4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27fa4044f10f2a28e3e33b8b126462276f8fdc4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27fa4044f10f2a28e3e33b8b126462276f8fdc4f"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "730dec333298dc800b446a3a570aafb84b395fc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89935ed1786b2bc9e4d3fba30387343a4c4f312/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89935ed1786b2bc9e4d3fba30387343a4c4f312/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f89935ed1786b2bc9e4d3fba30387343a4c4f312", "patch": "@@ -1,3 +1,9 @@\n+2007-11-23  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* reload.c (find_reloads_address_1) <autoincdec cases>:\n+\tCall REG_OK_FOR_CONTEXT with the autoincdec code, not\n+\touter_code.\n+\n 2007-11-23  Richard Guenther  <rguenther@suse.de>\n \tMichael Matz  <matz@suse.de>\n "}, {"sha": "e80ae122a771b7d99fb44d634847258c4a1fbfa6", "filename": "gcc/reload.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89935ed1786b2bc9e4d3fba30387343a4c4f312/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89935ed1786b2bc9e4d3fba30387343a4c4f312/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=f89935ed1786b2bc9e4d3fba30387343a4c4f312", "patch": "@@ -5676,8 +5676,10 @@ find_reloads_address_1 (enum machine_mode mode, rtx x, int context,\n \t\t}\n \t    }\n \n-\t  /* If we have a hard register that is ok as an index,\n-\t     don't make a reload.  If an autoincrement of a nice register\n+\t  /* If we have a hard register that is ok in this incdec context,\n+\t     don't make a reload.  If the register isn't nice enough for\n+\t     autoincdec, we can reload it.  But, if an autoincrement of a\n+\t     register that we here verified as playing nice, still outside\n \t     isn't \"valid\", it must be that no autoincrement is \"valid\".\n \t     If that is true and something made an autoincrement anyway,\n \t     this must be a special context where one is allowed.\n@@ -5690,7 +5692,7 @@ find_reloads_address_1 (enum machine_mode mode, rtx x, int context,\n \t  if (reg_renumber[regno] >= 0)\n \t    regno = reg_renumber[regno];\n \t  if (regno >= FIRST_PSEUDO_REGISTER\n-\t      || !REG_OK_FOR_CONTEXT (context, regno, mode, outer_code,\n+\t      || !REG_OK_FOR_CONTEXT (context, regno, mode, code,\n \t\t\t\t      index_code))\n \t    {\n \t      int reloadnum;"}]}