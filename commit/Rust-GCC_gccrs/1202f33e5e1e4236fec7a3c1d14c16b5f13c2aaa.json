{"sha": "1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIwMmYzM2U1ZTFlNDIzNmZlYzdhM2MxZDE0YzE2YjVmMTNjMmFhYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-10-13T08:29:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-10-13T08:29:03Z"}, "message": "re PR target/77957 (Undefined .LCTOC0 with -fstack-protector-strong -mminimal-toc -O0 on ppc64)\n\n\tPR target/77957\n\t* hooks.h (hook_tree_void_null): Declare.\n\t* hooks.c (hook_tree_void_null): New function.\n\t* langhooks.c (lhd_return_null_tree_v): Remove.\n\t* langhooks-def.h (lhd_return_null_tree_v): Remove.\n\t* cfgexpand.c (stack_protect_prologue): If guard_decl is NULL,\n\tset y to const0_rtx.\n\t* function.c (stack_protect_epilogue): Likewise.\n\t* config/tilepro/tilepro.c (TARGET_STACK_PROTECT_GUARD): Redefine\n\tif TARGET_THREAD_SSP_OFFSET is defined.\n\t* config/s390/s390.c (TARGET_STACK_PROTECT_GUARD): Likewise.\n\t* config/sparc/sparc.c (TARGET_STACK_PROTECT_GUARD): Likewise.\n\t* config/tilegx/tilegx.c (TARGET_STACK_PROTECT_GUARD): Likewise.\n\t* config/rs6000/rs6000.c (TARGET_STACK_PROTECT_GUARD): Likewise.\n\t* config/i386/i386.c (TARGET_STACK_PROTECT_GUARD): Likewise.\n\t(ix86_stack_protect_guard): New function.\nc/\n\t* c-objc-common.h (LANG_HOOKS_GETDECLS): Use hook_tree_void_null\n\tinstead of lhd_return_null_tree_v.\nada/\n\t* gcc-interface/misc.c (LANG_HOOKS_GETDECLS): Use hook_tree_void_null\n\tinstead of lhd_return_null_tree_v.\n\nFrom-SVN: r241087", "tree": {"sha": "685fcc683b155fa909df23b9901c4825e6a36a60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/685fcc683b155fa909df23b9901c4825e6a36a60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90bca4ed80de6437b4101a65eb29fb034b793981", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90bca4ed80de6437b4101a65eb29fb034b793981", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90bca4ed80de6437b4101a65eb29fb034b793981"}], "stats": {"total": 104, "additions": 91, "deletions": 13}, "files": [{"sha": "843d06ad06234de5f3d95674eb9efa08127e8fac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -1,3 +1,22 @@\n+2016-10-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/77957\n+\t* hooks.h (hook_tree_void_null): Declare.\n+\t* hooks.c (hook_tree_void_null): New function.\n+\t* langhooks.c (lhd_return_null_tree_v): Remove.\n+\t* langhooks-def.h (lhd_return_null_tree_v): Remove.\n+\t* cfgexpand.c (stack_protect_prologue): If guard_decl is NULL,\n+\tset y to const0_rtx.\n+\t* function.c (stack_protect_epilogue): Likewise.\n+\t* config/tilepro/tilepro.c (TARGET_STACK_PROTECT_GUARD): Redefine\n+\tif TARGET_THREAD_SSP_OFFSET is defined.\n+\t* config/s390/s390.c (TARGET_STACK_PROTECT_GUARD): Likewise.\n+\t* config/sparc/sparc.c (TARGET_STACK_PROTECT_GUARD): Likewise.\n+\t* config/tilegx/tilegx.c (TARGET_STACK_PROTECT_GUARD): Likewise.\n+\t* config/rs6000/rs6000.c (TARGET_STACK_PROTECT_GUARD): Likewise.\n+\t* config/i386/i386.c (TARGET_STACK_PROTECT_GUARD): Likewise.\n+\t(ix86_stack_protect_guard): New function.\n+\n 2016-10-13  Richard Biener  <rguenther@suse.de>\n \n \t* dwarf2out.c (tree_add_const_value_attribute): Do not try"}, {"sha": "f088e8be235ba29960a31008d1c8124e0b2324f6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -1,3 +1,9 @@\n+2016-10-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/77957\n+\t* gcc-interface/misc.c (LANG_HOOKS_GETDECLS): Use hook_tree_void_null\n+\tinstead of lhd_return_null_tree_v.\n+\n 2016-10-12  Yannick Moy  <moy@adacore.com>\n \n \t* einfo.adb, einfo.ads (Partial_Refinement_Constituents): Take"}, {"sha": "cf2921046513b8d67fc54e5476f03a4d0de1cff4", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -1366,7 +1366,7 @@ get_lang_specific (tree node)\n #undef  LANG_HOOKS_TYPE_HASH_EQ\n #define LANG_HOOKS_TYPE_HASH_EQ\t\tgnat_type_hash_eq\n #undef  LANG_HOOKS_GETDECLS\n-#define LANG_HOOKS_GETDECLS\t\tlhd_return_null_tree_v\n+#define LANG_HOOKS_GETDECLS\t\thook_tree_void_null\n #undef  LANG_HOOKS_PUSHDECL\n #define LANG_HOOKS_PUSHDECL\t\tgnat_return_tree\n #undef  LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL"}, {"sha": "63fba12d818b6cbaf8ae7792bd82d3fe31fb5313", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -1,3 +1,9 @@\n+2016-10-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/77957\n+\t* c-objc-common.h (LANG_HOOKS_GETDECLS): Use hook_tree_void_null\n+\tinstead of lhd_return_null_tree_v.\n+\n 2016-10-07  Bernd Schmidt  <bschmidt@redhat.com>\n \n \tPR c++/69733"}, {"sha": "c86e40ebd6dc7a896470a73cf476ac7d631db352", "filename": "gcc/c/c-objc-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fc%2Fc-objc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fc%2Fc-objc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-objc-common.h?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -91,7 +91,7 @@ along with GCC; see the file COPYING3.  If not see\n    This means it must also provide its own write_globals.  */\n \n #undef LANG_HOOKS_GETDECLS\n-#define LANG_HOOKS_GETDECLS lhd_return_null_tree_v\n+#define LANG_HOOKS_GETDECLS hook_tree_void_null\n \n /* Hooks for tree gimplification.  */\n #undef LANG_HOOKS_GIMPLIFY_EXPR"}, {"sha": "c62e92046ff5a4f4bd7c19169fccfad8cbf1bdfd", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -6100,7 +6100,10 @@ stack_protect_prologue (void)\n   rtx x, y;\n \n   x = expand_normal (crtl->stack_protect_guard);\n-  y = expand_normal (guard_decl);\n+  if (guard_decl)\n+    y = expand_normal (guard_decl);\n+  else\n+    y = const0_rtx;\n \n   /* Allow the target to copy from Y to X without leaking Y into a\n      register.  */"}, {"sha": "eef6d7b53dc3c1d6c54864f18b37e129c931d8b7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -44023,6 +44023,18 @@ ix86_mangle_type (const_tree type)\n     }\n }\n \n+#ifdef TARGET_THREAD_SSP_OFFSET\n+/* If using TLS guards, don't waste time creating and expanding\n+   __stack_chk_guard decl and MEM as we are going to ignore it.  */\n+static tree\n+ix86_stack_protect_guard (void)\n+{\n+  if (TARGET_SSP_TLS_GUARD)\n+    return NULL_TREE;\n+  return default_stack_protect_guard ();\n+}\n+#endif\n+\n /* For 32-bit code we can save PIC register setup by using\n    __stack_chk_fail_local hidden function instead of calling\n    __stack_chk_fail directly.  64-bit code doesn't need to setup any PIC\n@@ -50614,6 +50626,11 @@ ix86_addr_space_zero_address_valid (addr_space_t as)\n #undef TARGET_MANGLE_TYPE\n #define TARGET_MANGLE_TYPE ix86_mangle_type\n \n+#ifdef TARGET_THREAD_SSP_OFFSET\n+#undef TARGET_STACK_PROTECT_GUARD\n+#define TARGET_STACK_PROTECT_GUARD ix86_stack_protect_guard\n+#endif\n+\n #if !TARGET_MACHO\n #undef TARGET_STACK_PROTECT_FAIL\n #define TARGET_STACK_PROTECT_FAIL ix86_stack_protect_fail"}, {"sha": "c688e8706041523e0c52e10ab09572173c90edad", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -1752,6 +1752,11 @@ static const struct attribute_spec rs6000_attribute_table[] =\n #define TARGET_VECTORIZE_BUILTIN_MD_VECTORIZED_FUNCTION \\\n   rs6000_builtin_md_vectorized_function\n \n+#ifdef TARGET_THREAD_SSP_OFFSET\n+#undef TARGET_STACK_PROTECT_GUARD\n+#define TARGET_STACK_PROTECT_GUARD hook_tree_void_null\n+#endif\n+\n #if !TARGET_MACHO\n #undef TARGET_STACK_PROTECT_FAIL\n #define TARGET_STACK_PROTECT_FAIL rs6000_stack_protect_fail"}, {"sha": "04d6d44bce352386b8c6dd9e34ddeae4a3a3924a", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -15124,6 +15124,11 @@ s390_invalid_binary_op (int op ATTRIBUTE_UNUSED, const_tree type1, const_tree ty\n #undef TARGET_OPTION_OVERRIDE\n #define TARGET_OPTION_OVERRIDE s390_option_override\n \n+#ifdef TARGET_THREAD_SSP_OFFSET\n+#undef TARGET_STACK_PROTECT_GUARD\n+#define TARGET_STACK_PROTECT_GUARD hook_tree_void_null\n+#endif\n+\n #undef\tTARGET_ENCODE_SECTION_INFO\n #define TARGET_ENCODE_SECTION_INFO s390_encode_section_info\n "}, {"sha": "ac05d96b97c6da9e05f341f2b86d5e0cad2fc834", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -798,6 +798,11 @@ char sparc_hard_reg_printed[8];\n #undef TARGET_OPTION_OVERRIDE\n #define TARGET_OPTION_OVERRIDE sparc_option_override\n \n+#ifdef TARGET_THREAD_SSP_OFFSET\n+#undef TARGET_STACK_PROTECT_GUARD\n+#define TARGET_STACK_PROTECT_GUARD hook_tree_void_null\n+#endif\n+\n #if TARGET_GNU_TLS && defined(HAVE_AS_SPARC_UA_PCREL)\n #undef TARGET_ASM_OUTPUT_DWARF_DTPREL\n #define TARGET_ASM_OUTPUT_DWARF_DTPREL sparc_output_dwarf_dtprel"}, {"sha": "0ef7559e88750034eab6570dac85612dc19504be", "filename": "gcc/config/tilegx/tilegx.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Ftilegx.c?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -5544,6 +5544,11 @@ tilegx_file_end (void)\n #undef  TARGET_OPTION_OVERRIDE\n #define TARGET_OPTION_OVERRIDE tilegx_option_override\n \n+#ifdef TARGET_THREAD_SSP_OFFSET\n+#undef TARGET_STACK_PROTECT_GUARD\n+#define TARGET_STACK_PROTECT_GUARD hook_tree_void_null\n+#endif\n+\n #undef  TARGET_SCALAR_MODE_SUPPORTED_P\n #define TARGET_SCALAR_MODE_SUPPORTED_P tilegx_scalar_mode_supported_p\n "}, {"sha": "505c7a4e5827b08b4f43603ed58a4775106a6bfb", "filename": "gcc/config/tilepro/tilepro.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Ftilepro.c?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -4948,6 +4948,11 @@ tilepro_file_end (void)\n #undef  TARGET_OPTION_OVERRIDE\n #define TARGET_OPTION_OVERRIDE tilepro_option_override\n \n+#ifdef TARGET_THREAD_SSP_OFFSET\n+#undef TARGET_STACK_PROTECT_GUARD\n+#define TARGET_STACK_PROTECT_GUARD hook_tree_void_null\n+#endif\n+\n #undef  TARGET_SCALAR_MODE_SUPPORTED_P\n #define TARGET_SCALAR_MODE_SUPPORTED_P tilepro_scalar_mode_supported_p\n "}, {"sha": "6f906ab0f42a97385bf598bdc112a3b3859df527", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -5058,7 +5058,10 @@ stack_protect_epilogue (void)\n   rtx_insn *seq;\n \n   x = expand_normal (crtl->stack_protect_guard);\n-  y = expand_normal (guard_decl);\n+  if (guard_decl)\n+    y = expand_normal (guard_decl);\n+  else\n+    y = const0_rtx;\n \n   /* Allow the target to compare Y with X without leaking either into\n      a register.  */"}, {"sha": "3995786d7c2a5ac09f1dfdb07f6d4e89f7d9d74d", "filename": "gcc/hooks.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fhooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fhooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.c?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -429,6 +429,13 @@ hook_tree_const_tree_null (const_tree)\n   return NULL;\n }\n \n+/* Generic hook that takes no arguments and returns a NULL_TREE.  */\n+tree\n+hook_tree_void_null (void)\n+{\n+  return NULL;\n+}\n+\n /* Generic hook that takes a rtx_insn * and an int and returns a bool.  */\n \n bool"}, {"sha": "a1d67769c44b779e5962b77c96f982c8e252080f", "filename": "gcc/hooks.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fhooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Fhooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.h?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -89,6 +89,7 @@ extern int hook_int_rtx_mode_as_bool_0 (rtx, machine_mode, addr_space_t,\n \t\t\t\t\tbool);\n \n extern tree hook_tree_const_tree_null (const_tree);\n+extern tree hook_tree_void_null (void);\n \n extern tree hook_tree_tree_tree_null (tree, tree);\n extern tree hook_tree_tree_tree_tree_null (tree, tree, tree);"}, {"sha": "fb6b5055f8ab3dc3633de10b2e0816e88ece3f35", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -41,7 +41,6 @@ extern void lhd_do_nothing_f (struct function *);\n extern tree lhd_pass_through_t (tree);\n extern bool lhd_post_options (const char **);\n extern alias_set_type lhd_get_alias_set (tree);\n-extern tree lhd_return_null_tree_v (void);\n extern tree lhd_return_null_tree (tree);\n extern tree lhd_return_null_const_tree (const_tree);\n extern tree lhd_do_nothing_iii_return_null_tree (int, int, int);"}, {"sha": "792eb4828e8816091b4cd4069dc3cbe6e3fe0018", "filename": "gcc/langhooks.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=1202f33e5e1e4236fec7a3c1d14c16b5f13c2aaa", "patch": "@@ -76,14 +76,6 @@ lhd_do_nothing_f (struct function * ARG_UNUSED (f))\n \n /* Do nothing (return NULL_TREE).  */\n \n-tree\n-lhd_return_null_tree_v (void)\n-{\n-  return NULL_TREE;\n-}\n-\n-/* Do nothing (return NULL_TREE).  */\n-\n tree\n lhd_return_null_tree (tree ARG_UNUSED (t))\n {"}]}