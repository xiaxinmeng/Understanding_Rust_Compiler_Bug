{"sha": "8ff40a74460169e5018406ca3f69293c279dd818", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZmNDBhNzQ0NjAxNjllNTAxODQwNmNhM2Y2OTI5M2MyNzlkZDgxOA==", "commit": {"author": {"name": "Stan Shebs", "email": "shebs@apple.com", "date": "2004-11-22T07:24:54Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2004-11-22T07:24:54Z"}, "message": "rs6000.c: (rs6000_darwin64_function_arg): Add UNION_TYPE case.\n\n        * config/rs6000/rs6000.c: (rs6000_darwin64_function_arg): Add UNION_TYPE case.\n        (function_arg): Move darwin test up, sniff mode first for efficiency, test\n        for union type.\n\nFrom-SVN: r91003", "tree": {"sha": "bd79b7c6d7139344f11f036775021151ecf912df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd79b7c6d7139344f11f036775021151ecf912df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ff40a74460169e5018406ca3f69293c279dd818", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff40a74460169e5018406ca3f69293c279dd818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ff40a74460169e5018406ca3f69293c279dd818", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff40a74460169e5018406ca3f69293c279dd818/comments", "author": null, "committer": null, "parents": [{"sha": "31492595c610b2d9468c0e8369b96accb61150a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31492595c610b2d9468c0e8369b96accb61150a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31492595c610b2d9468c0e8369b96accb61150a9"}], "stats": {"total": 41, "additions": 35, "deletions": 6}, "files": [{"sha": "d33f468a20b3ca482baa41aee26e0830a72ce5b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ff40a74460169e5018406ca3f69293c279dd818/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ff40a74460169e5018406ca3f69293c279dd818/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ff40a74460169e5018406ca3f69293c279dd818", "patch": "@@ -1,3 +1,9 @@\n+2004-11-21  Stan Shebs  <shebs@apple.com>\n+\n+\t* config/rs6000/rs6000.c: (rs6000_darwin64_function_arg): Add UNION_TYPE case.\n+\t(function_arg): Move darwin test up, sniff mode first for efficiency, test\n+\tfor union type.\n+\n 2004-11-21  Dale Johannesen  <dalej@apple.com>\n \n \t* config/darwin.h (JUMP_TABLES_IN_TEXT_SECTION):  Define."}, {"sha": "fd0b1413744935749532849af2f1438a2ef213b0", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ff40a74460169e5018406ca3f69293c279dd818/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ff40a74460169e5018406ca3f69293c279dd818/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8ff40a74460169e5018406ca3f69293c279dd818", "patch": "@@ -5177,6 +5177,23 @@ rs6000_darwin64_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n \t  }\n       break;\n \n+    case UNION_TYPE:\n+      tot = rs6000_arg_size (mode, type);\n+      if (tot <= 0)\n+\treturn NULL_RTX;\n+      bytepos = 0;\n+\n+      for (j = 0; j < tot; ++j)\n+\t{\n+\t  sub = gen_rtx_REG ((TARGET_64BIT ? DImode : SImode), GP_ARG_MIN_REG + cum->words++);\n+\t  roffset = gen_rtx_CONST_INT (SImode, bytepos);\n+\t  rvec[k++] = gen_rtx_EXPR_LIST (VOIDmode, sub, roffset);\n+\t  if (cum->words >= GP_ARG_NUM_REG)\n+\t    break;\n+\t  bytepos += (TARGET_64BIT ? 8 : 4);\n+\t}\n+      break;\n+\n     case ARRAY_TYPE:\n       tot = int_size_in_bytes (type);\n       if (tot <= 0)\n@@ -5340,6 +5357,18 @@ function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n       return GEN_INT (cum->call_cookie);\n     }\n \n+  if (mode == BLKmode\n+      && rs6000_darwin64_abi\n+      && (TREE_CODE (type) == RECORD_TYPE\n+\t  || TREE_CODE (type) == UNION_TYPE\n+\t  || TREE_CODE (type) == ARRAY_TYPE))\n+    {\n+      rtx rslt = rs6000_darwin64_function_arg (cum, mode, type, named);\n+      if (rslt != NULL_RTX)\n+\treturn rslt;\n+      /* Else fall through to usual handling.  */\n+    }\n+\n   if (USE_ALTIVEC_FOR_ARG_P (cum, mode, type, named))\n     if (TARGET_64BIT && ! cum->prototype)\n       {\n@@ -5414,12 +5443,6 @@ function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n \t\t\t\t\t  || mode == DCmode))))\n     return rs6000_spe_function_arg (cum, mode, type);\n \n-  else if (rs6000_darwin64_abi\n-\t   && mode == BLKmode\n-\t   && (TREE_CODE (type) == RECORD_TYPE\n-\t       || TREE_CODE (type) == ARRAY_TYPE))\n-    return rs6000_darwin64_function_arg (cum, mode, type, named);\n-\n   else if (abi == ABI_V4)\n     {\n       if (TARGET_HARD_FLOAT && TARGET_FPRS"}]}