{"sha": "d82f7df265f5df5c1769a954069cf8afb4952097", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgyZjdkZjI2NWY1ZGY1YzE3NjlhOTU0MDY5Y2Y4YWZiNDk1MjA5Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-05-18T12:09:20Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-05-18T12:09:20Z"}, "message": "(mov[qhs]i}): Add pair of constraints which allow offsetable memory\naddresses to be moved to the same for TARGET_5200.\n\nFrom-SVN: r14081", "tree": {"sha": "f3ed29b61bef1fe416f0e215406a4b99799d3cfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3ed29b61bef1fe416f0e215406a4b99799d3cfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d82f7df265f5df5c1769a954069cf8afb4952097", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82f7df265f5df5c1769a954069cf8afb4952097", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d82f7df265f5df5c1769a954069cf8afb4952097", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82f7df265f5df5c1769a954069cf8afb4952097/comments", "author": null, "committer": null, "parents": [{"sha": "9591220667b495ebc8bedd25ce2b159d6d4ab382", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9591220667b495ebc8bedd25ce2b159d6d4ab382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9591220667b495ebc8bedd25ce2b159d6d4ab382"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "15380971159868beb7ae232ecbfe834c5f5aa57a", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f7df265f5df5c1769a954069cf8afb4952097/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f7df265f5df5c1769a954069cf8afb4952097/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=d82f7df265f5df5c1769a954069cf8afb4952097", "patch": "@@ -935,8 +935,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"=r<>,g\")\n-\t(match_operand:SI 1 \"general_operand\" \"g,r<>\"))]\n+  [(set (match_operand:SI 0 \"general_operand\" \"=r<>,g,o\")\n+\t(match_operand:SI 1 \"general_operand\" \"g,r<>,o\"))]\n   \"TARGET_5200\"\n   \"* return output_move_simode (operands);\")\n \n@@ -953,8 +953,8 @@\n   \"* return output_move_himode (operands);\")\n \n  (define_insn \"\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=r<>,g\")\n-\t(match_operand:HI 1 \"general_operand\" \"g,r<>\"))]\n+  [(set (match_operand:HI 0 \"general_operand\" \"=r<>,g,o\")\n+\t(match_operand:HI 1 \"general_operand\" \"g,r<>,o\"))]\n   \"TARGET_5200\"\n   \"* return output_move_himode (operands);\")\n \n@@ -989,8 +989,8 @@\n   \"* return output_move_qimode (operands);\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=d*a<>,d*am\")\n-\t(match_operand:QI 1 \"general_operand\" \"d*ami,d*a<>\"))]\n+  [(set (match_operand:QI 0 \"general_operand\" \"=d*a<>,d*am,o\")\n+\t(match_operand:QI 1 \"general_operand\" \"d*ami,d*a<>,o\"))]\n   \"TARGET_5200\"\n   \"* return output_move_qimode (operands);\")\n "}]}