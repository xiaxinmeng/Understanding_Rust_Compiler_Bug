{"sha": "f819300fa7aa71a14efc86080d08d8e9db6192fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgxOTMwMGZhN2FhNzFhMTRlZmM4NjA4MGQwOGQ4ZTlkYjYxOTJmYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-05-19T18:06:46Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-05-19T18:06:46Z"}, "message": "stor-layout.c (finalize_type_size): Use AGGREGATE_TYPE_P.\n\n\t* stor-layout.c (finalize_type_size): Use AGGREGATE_TYPE_P.\n\t(layout_type): Use RECORD_OR_UNION_TYPE_P.\n\nFrom-SVN: r223407", "tree": {"sha": "b195215f578b93632639dbfc49cb3bb32959a384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b195215f578b93632639dbfc49cb3bb32959a384"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f819300fa7aa71a14efc86080d08d8e9db6192fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f819300fa7aa71a14efc86080d08d8e9db6192fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f819300fa7aa71a14efc86080d08d8e9db6192fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f819300fa7aa71a14efc86080d08d8e9db6192fb/comments", "author": null, "committer": null, "parents": [{"sha": "cb4c41dd4d9b0cf349e9c51c23492113dea975a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb4c41dd4d9b0cf349e9c51c23492113dea975a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb4c41dd4d9b0cf349e9c51c23492113dea975a6"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "d692d06376a5f47a58e4d3c01399b371b7789f0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f819300fa7aa71a14efc86080d08d8e9db6192fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f819300fa7aa71a14efc86080d08d8e9db6192fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f819300fa7aa71a14efc86080d08d8e9db6192fb", "patch": "@@ -1,3 +1,8 @@\n+2015-05-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* stor-layout.c (finalize_type_size): Use AGGREGATE_TYPE_P.\n+\t(layout_type): Use RECORD_OR_UNION_TYPE_P.\n+\n 2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/s390.c (s390_vector_bool_type_p): New function."}, {"sha": "82997ddc0bb02849636e334cea16466374a3339c", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f819300fa7aa71a14efc86080d08d8e9db6192fb/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f819300fa7aa71a14efc86080d08d8e9db6192fb/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=f819300fa7aa71a14efc86080d08d8e9db6192fb", "patch": "@@ -1757,12 +1757,9 @@ finalize_type_size (tree type)\n      However, where strict alignment is not required, avoid\n      over-aligning structures, since most compilers do not do this\n      alignment.  */\n-\n-  if (TYPE_MODE (type) != BLKmode && TYPE_MODE (type) != VOIDmode\n-      && (STRICT_ALIGNMENT\n-\t  || (TREE_CODE (type) != RECORD_TYPE && TREE_CODE (type) != UNION_TYPE\n-\t      && TREE_CODE (type) != QUAL_UNION_TYPE\n-\t      && TREE_CODE (type) != ARRAY_TYPE)))\n+  if (TYPE_MODE (type) != BLKmode\n+      && TYPE_MODE (type) != VOIDmode\n+      && (STRICT_ALIGNMENT || !AGGREGATE_TYPE_P (type)))\n     {\n       unsigned mode_align = GET_MODE_ALIGNMENT (TYPE_MODE (type));\n \n@@ -2431,9 +2428,7 @@ layout_type (tree type)\n   /* Compute the final TYPE_SIZE, TYPE_ALIGN, etc. for TYPE.  For\n      records and unions, finish_record_layout already called this\n      function.  */\n-  if (TREE_CODE (type) != RECORD_TYPE\n-      && TREE_CODE (type) != UNION_TYPE\n-      && TREE_CODE (type) != QUAL_UNION_TYPE)\n+  if (!RECORD_OR_UNION_TYPE_P (type))\n     finalize_type_size (type);\n \n   /* We should never see alias sets on incomplete aggregates.  And we"}]}