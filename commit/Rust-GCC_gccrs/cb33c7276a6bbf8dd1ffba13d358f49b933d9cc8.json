{"sha": "cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IzM2M3Mjc2YTZiYmY4ZGQxZmZiYTEzZDM1OGY0OWI5MzNkOWNjOA==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2021-03-10T14:57:01Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2021-03-10T14:59:49Z"}, "message": "Add LRA target selector.\n\ngcc/ChangeLog:\n\n\t* doc/sourcebuild.texi: Document LRA target selector.\n\ngcc/testsuite/ChangeLog:\n\n\tPR testsuite/99292\n\t* lib/target-supports.exp (check_effective_target_lra): New.\n\t* gcc.c-torture/compile/asmgoto-2.c: Use LRA target selector.\n\t* gcc.c-torture/compile/asmgoto-5.c: Likewise.\n\t* gcc.c-torture/compile/pr98096.c: Likewise.\n\t* gcc.dg/pr97954.c: Likewise.", "tree": {"sha": "e9ba4d3ef4fc12b60465452d81f95d259d18c25a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9ba4d3ef4fc12b60465452d81f95d259d18c25a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/comments", "author": null, "committer": null, "parents": [{"sha": "46b52b4ae118e4d682beb0bef4f51396cd40ebfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b52b4ae118e4d682beb0bef4f51396cd40ebfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46b52b4ae118e4d682beb0bef4f51396cd40ebfe"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "1fa36566453b6a3fdde610f1336996c970d0adfe", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8", "patch": "@@ -2525,6 +2525,9 @@ Target keeps null pointer checks, either due to the use of\n @item llvm_binutils\n Target is using an LLVM assembler and/or linker, instead of GNU Binutils.\n \n+@item lra\n+Target supports local register allocator (LRA).\n+\n @item lto\n Compiler has been configured to support link-time optimization (LTO).\n "}, {"sha": "43e597bc59f8fa04425979d59322fe2af82fd859", "filename": "gcc/testsuite/gcc.c-torture/compile/asmgoto-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fasmgoto-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fasmgoto-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fasmgoto-2.c?ref=cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8", "patch": "@@ -1,6 +1,5 @@\n /* This test should be switched off for a new target with less than 4 allocatable registers */\n-/* { dg-do compile } */\n-/* { dg-skip-if \"Reload target\" { hppa*-*-* } } */\n+/* { dg-do compile { target lra } } */\n int\n foo (void)\n {"}, {"sha": "e1574a2903afcc9691079de560f0760c8a591723", "filename": "gcc/testsuite/gcc.c-torture/compile/asmgoto-5.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fasmgoto-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fasmgoto-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fasmgoto-5.c?ref=cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8", "patch": "@@ -1,7 +1,6 @@\n /* Test to generate output reload in asm goto on x86_64.  */\n-/* { dg-do compile } */\n+/* { dg-do compile { target lra } } */\n /* { dg-skip-if \"no O0\" { { i?86-*-* x86_64-*-* } && { ! ia32 } } { \"-O0\" } { \"\" } } */\n-/* { dg-skip-if \"Reload target\" { hppa*-*-* } } */\n \n #if defined __x86_64__\n #define ASM(s) asm (s)"}, {"sha": "bba3fa5c619069e5c32ad455644110e5b94cdcd6", "filename": "gcc/testsuite/gcc.c-torture/compile/pr98096.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr98096.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr98096.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr98096.c?ref=cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8", "patch": "@@ -1,6 +1,6 @@\n /* Test for correct naming of label operands in asm goto in case of presence of\n    input/output operands. */\n-/* { dg-do compile } */\n+/* { dg-do compile { target lra } } */\n int i, j;\n int f(void) {\n   asm goto (\"# %0 %2\" : \"+r\" (i) ::: jmp);"}, {"sha": "0be60f500b663f6f850b31b41bcb56dd5f39e5db", "filename": "gcc/testsuite/gcc.dg/pr97954.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97954.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97954.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97954.c?ref=cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8", "patch": "@@ -1,5 +1,5 @@\n /* PR rtl-optimization/97954 */\n-/* { dg-do compile } */\n+/* { dg-do compile { target lra } } */\n /* { dg-options \"-O2\" } */\n \n int"}, {"sha": "a90c375b8fe28c3493276be6c108790c2cc97cf7", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=cb33c7276a6bbf8dd1ffba13d358f49b933d9cc8", "patch": "@@ -11005,3 +11005,13 @@ proc check_effective_target_o_flag_in_section { } {\n \t}\n     }]\n }\n+\n+# return 1 if LRA is supported.\n+\n+proc check_effective_target_lra { } {\n+    if { [istarget hppa*-*-*] } {\n+\treturn 0\n+    }\n+    return 1\n+}\n+"}]}