{"sha": "ae8803a8e1d21a5813775816ae915f4ccd92d6c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU4ODAzYThlMWQyMWE1ODEzNzc1ODE2YWU5MTVmNGNjZDkyZDZjNQ==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-09-16T15:27:51Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-09-16T15:27:51Z"}, "message": "re PR c++/7939 (ICE on function template specialization)\n\n\tPR c++/7939\n\t* typeck.c (comptypes): Don't ICE when its first argument is\n\terror_mark_node.\n\t(compparms): Reverse the arguments of same_type_p.\n\n\t* g++.dg/template/crash11.C: New test.\n\nFrom-SVN: r71432", "tree": {"sha": "3268e9ec73fc007a6eef8e295bc9f17a380ae9f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3268e9ec73fc007a6eef8e295bc9f17a380ae9f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae8803a8e1d21a5813775816ae915f4ccd92d6c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8803a8e1d21a5813775816ae915f4ccd92d6c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae8803a8e1d21a5813775816ae915f4ccd92d6c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8803a8e1d21a5813775816ae915f4ccd92d6c5/comments", "author": null, "committer": null, "parents": [{"sha": "6cd2fc59b0e76bbb11c1b81590d03477551ae07c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd2fc59b0e76bbb11c1b81590d03477551ae07c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cd2fc59b0e76bbb11c1b81590d03477551ae07c"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "5df525e3dc0a71acb22e9a36bc10db194a53b066", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8803a8e1d21a5813775816ae915f4ccd92d6c5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8803a8e1d21a5813775816ae915f4ccd92d6c5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ae8803a8e1d21a5813775816ae915f4ccd92d6c5", "patch": "@@ -1,3 +1,10 @@\n+2003-09-16  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/7939\n+\t* typeck.c (comptypes): Don't ICE when its first argument is\n+\terror_mark_node.\n+\t(compparms): Reverse the arguments of same_type_p.\n+\n 2003-09-15  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/12184"}, {"sha": "32447b6807bec83654fb45e9b972c5b07ca2390f", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8803a8e1d21a5813775816ae915f4ccd92d6c5/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8803a8e1d21a5813775816ae915f4ccd92d6c5/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=ae8803a8e1d21a5813775816ae915f4ccd92d6c5", "patch": "@@ -900,11 +900,8 @@ comptypes (tree t1, tree t2, int strict)\n   if (t1 == t2)\n     return true;\n \n-  /* This should never happen.  */\n-  my_friendly_assert (t1 != error_mark_node, 307);\n-\n   /* Suppress errors caused by previously reported errors */\n-  if (t2 == error_mark_node)\n+  if (t1 == error_mark_node || t2 == error_mark_node)\n     return false;\n   \n   my_friendly_assert (TYPE_P (t1) && TYPE_P (t2), 20030623);\n@@ -1170,7 +1167,7 @@ compparms (tree parms1, tree parms2)\n \t they fail to match.  */\n       if (!t1 || !t2)\n \treturn false;\n-      if (!same_type_p (TREE_VALUE (t2), TREE_VALUE (t1)))\n+      if (!same_type_p (TREE_VALUE (t1), TREE_VALUE (t2)))\n \treturn false;\n     }\n   return true;"}, {"sha": "e7cf798e7d8b07a91cf0f138224e133a7cd4b008", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8803a8e1d21a5813775816ae915f4ccd92d6c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8803a8e1d21a5813775816ae915f4ccd92d6c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae8803a8e1d21a5813775816ae915f4ccd92d6c5", "patch": "@@ -1,3 +1,8 @@\n+2003-09-16  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/7939\n+\t* g++.dg/template/crash11.C: New test.\n+\n 2003-09-16  Jason Merrill  <jason@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "3c69514e243e5ee402a4a62e781d689fc554a359", "filename": "gcc/testsuite/g++.dg/template/crash11.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8803a8e1d21a5813775816ae915f4ccd92d6c5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8803a8e1d21a5813775816ae915f4ccd92d6c5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash11.C?ref=ae8803a8e1d21a5813775816ae915f4ccd92d6c5", "patch": "@@ -0,0 +1,9 @@\n+// { dg-do compile }\n+\n+// Origin: kparz@iastate.edu\n+\n+// PR c++/7939: ICE for invalid function parameter after template\n+// substitution.\n+\n+template <class T, class U> void foo(T, U) {}\n+template <class T> void foo<T,void>(T, void) {} // { dg-error \"incomplete|invalid|partial\" }"}]}