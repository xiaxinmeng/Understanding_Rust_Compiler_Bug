{"sha": "7c323fbe3bdff58d4081e4706d24c17f4bb36f8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MzMjNmYmUzYmRmZjU4ZDQwODFlNDcwNmQyNGMxN2Y0YmIzNmY4YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-19T13:13:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-19T13:13:19Z"}, "message": "[multiple changes]\n\n2017-01-19  Javier Miranda  <miranda@adacore.com>\n\n\t* ghost.adb (Propagate_Ignored_Ghost_Code): Protect access to the\n\tidentifier attribute of a block-statement node. Required to avoid\n\tassertion failure when building the new containers library.\n\n2017-01-19  Bob Duff  <duff@adacore.com>\n\n\t* exp_ch3.adb: Update comment.\n\n2017-01-19  Vincent Celier  <celier@adacore.com>\n\n\t* gprep.adb (Gnatprep): Parse the definition file without\n\t\"replace in comments\" even when switch -C is used.\n\nFrom-SVN: r244633", "tree": {"sha": "bb3da6d076df7af45748014d6b0318c5b2013240", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb3da6d076df7af45748014d6b0318c5b2013240"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c323fbe3bdff58d4081e4706d24c17f4bb36f8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c323fbe3bdff58d4081e4706d24c17f4bb36f8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c323fbe3bdff58d4081e4706d24c17f4bb36f8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c323fbe3bdff58d4081e4706d24c17f4bb36f8a/comments", "author": null, "committer": null, "parents": [{"sha": "9849a7ea00a4af3f43a2c0df64484b7ae5a5f0e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9849a7ea00a4af3f43a2c0df64484b7ae5a5f0e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9849a7ea00a4af3f43a2c0df64484b7ae5a5f0e7"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "4553f1c1e247d1368b0c4f5f62cbfa63f72b07f9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c323fbe3bdff58d4081e4706d24c17f4bb36f8a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c323fbe3bdff58d4081e4706d24c17f4bb36f8a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7c323fbe3bdff58d4081e4706d24c17f4bb36f8a", "patch": "@@ -1,3 +1,18 @@\n+2017-01-19  Javier Miranda  <miranda@adacore.com>\n+\n+\t* ghost.adb (Propagate_Ignored_Ghost_Code): Protect access to the\n+\tidentifier attribute of a block-statement node. Required to avoid\n+\tassertion failure when building the new containers library.\n+\n+2017-01-19  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch3.adb: Update comment.\n+\n+2017-01-19  Vincent Celier  <celier@adacore.com>\n+\n+\t* gprep.adb (Gnatprep): Parse the definition file without\n+\t\"replace in comments\" even when switch -C is used.\n+\n 2017-01-19  Justin Squirek  <squirek@adacore.com>\n \n \t* exp_ch9.adb (Is_Pure_Barrier): Create function"}, {"sha": "4c34eb9dd6f7032c6fd306216ad803fb69a0fe8f", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c323fbe3bdff58d4081e4706d24c17f4bb36f8a/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c323fbe3bdff58d4081e4706d24c17f4bb36f8a/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=7c323fbe3bdff58d4081e4706d24c17f4bb36f8a", "patch": "@@ -5901,7 +5901,7 @@ package body Exp_Ch3 is\n          --  would otherwise make two copies. The RM allows removing redunant\n          --  Adjust/Finalize calls, but does not allow insertion of extra ones.\n \n-         --  This part is disabled for now, because it breaks GPS builds\n+         --  This part is disabled for now, because it breaks CodePeer runs\n \n          return (False -- ???\n              and then Nkind (Expr_Q) = N_Explicit_Dereference"}, {"sha": "fadb89159a27ef755d25ca58f3130067395665cb", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c323fbe3bdff58d4081e4706d24c17f4bb36f8a/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c323fbe3bdff58d4081e4706d24c17f4bb36f8a/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=7c323fbe3bdff58d4081e4706d24c17f4bb36f8a", "patch": "@@ -1490,7 +1490,9 @@ package body Ghost is\n       while Present (Nod) loop\n          Scop := Empty;\n \n-         if Nkind (Nod) = N_Block_Statement then\n+         if Nkind (Nod) = N_Block_Statement\n+           and then Present (Identifier (Nod))\n+         then\n             Scop := Entity (Identifier (Nod));\n \n          elsif Nkind_In (Nod, N_Package_Body,"}, {"sha": "cc7e24301bbb9f059c112271c904dfe5040d555d", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c323fbe3bdff58d4081e4706d24c17f4bb36f8a/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c323fbe3bdff58d4081e4706d24c17f4bb36f8a/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=7c323fbe3bdff58d4081e4706d24c17f4bb36f8a", "patch": "@@ -253,7 +253,15 @@ package body GPrep is\n \n             Scanner.Initialize_Scanner (Deffile);\n \n-            Prep.Parse_Def_File;\n+            --  Parse the definition file without \"replace in comments\"\n+\n+            declare\n+               Replace : constant Boolean := Opt.Replace_In_Comments;\n+            begin\n+               Opt.Replace_In_Comments := False;\n+               Prep.Parse_Def_File;\n+               Opt.Replace_In_Comments := Replace;\n+            end;\n          end;\n       end if;\n "}]}