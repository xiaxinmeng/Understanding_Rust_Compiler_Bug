{"sha": "8649149a3cdf939cf5d74da35eae6eb4802f9cd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY0OTE0OWEzY2RmOTM5Y2Y1ZDc0ZGEzNWVhZTZlYjQ4MDJmOWNkOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-10-13T09:58:23Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-10-13T09:58:23Z"}, "message": "Prevent invalid register mode changes in combine\n\nThis patch stops combine from changing the mode of an existing register\nin-place if doing so would change the size of the underlying register\nallocation size, as given by REGMODE_NATURAL_SIZE.  Without this,\nmany tests fail in adjust_reg_mode after SVE is added.  One example\nis gcc.c-torture/compile/20090401-1.c.\n\n2017-10-13  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\t* combine.c (can_change_dest_mode): Reject changes in\n\tREGMODE_NATURAL_SIZE.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r253717", "tree": {"sha": "00cfb30f3cf9eb032dc83d729b0f9afda961e1c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00cfb30f3cf9eb032dc83d729b0f9afda961e1c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8649149a3cdf939cf5d74da35eae6eb4802f9cd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8649149a3cdf939cf5d74da35eae6eb4802f9cd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8649149a3cdf939cf5d74da35eae6eb4802f9cd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8649149a3cdf939cf5d74da35eae6eb4802f9cd8/comments", "author": null, "committer": null, "parents": [{"sha": "250a60f3879d2d508d0d08e9da1dfa1648e1a369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/250a60f3879d2d508d0d08e9da1dfa1648e1a369", "html_url": "https://github.com/Rust-GCC/gccrs/commit/250a60f3879d2d508d0d08e9da1dfa1648e1a369"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "3b897e2dde741535068086fa58600dbd346aba88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8649149a3cdf939cf5d74da35eae6eb4802f9cd8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8649149a3cdf939cf5d74da35eae6eb4802f9cd8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8649149a3cdf939cf5d74da35eae6eb4802f9cd8", "patch": "@@ -1,3 +1,10 @@\n+2017-10-13  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* combine.c (can_change_dest_mode): Reject changes in\n+\tREGMODE_NATURAL_SIZE.\n+\n 2017-10-13  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "3b96d86bdb3711aa2923440e1f8dadf5486bfb2c", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8649149a3cdf939cf5d74da35eae6eb4802f9cd8/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8649149a3cdf939cf5d74da35eae6eb4802f9cd8/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=8649149a3cdf939cf5d74da35eae6eb4802f9cd8", "patch": "@@ -2475,6 +2475,12 @@ can_change_dest_mode (rtx x, int added_sets, machine_mode mode)\n   if (!REG_P (x))\n     return false;\n \n+  /* Don't change between modes with different underlying register sizes,\n+     since this could lead to invalid subregs.  */\n+  if (REGMODE_NATURAL_SIZE (mode)\n+      != REGMODE_NATURAL_SIZE (GET_MODE (x)))\n+    return false;\n+\n   regno = REGNO (x);\n   /* Allow hard registers if the new mode is legal, and occupies no more\n      registers than the old mode.  */"}]}