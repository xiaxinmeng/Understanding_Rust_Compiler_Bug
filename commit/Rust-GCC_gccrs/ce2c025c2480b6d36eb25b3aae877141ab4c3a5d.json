{"sha": "ce2c025c2480b6d36eb25b3aae877141ab4c3a5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UyYzAyNWMyNDgwYjZkMzZlYjI1YjNhYWU4NzcxNDFhYjRjM2E1ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-19T07:25:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-19T07:25:59Z"}, "message": "re PR target/89726 (Incorrect inlined version of 'ceil' for 32bit)\n\n\tPR target/89726\n\t* config/i386/i386.c (ix86_expand_floorceildf_32): In ceil\n\tcompensation use x2 += 1 instead of x2 -= -1 and when honoring\n\tsigned zeros, do another copysign after the compensation.\n\n\t* gcc.target/i386/fpprec-1.c (x): Add 6 new constants.\n\t(expect_round, expect_rint, expect_floor, expect_ceil, expect_trunc):\n\tAdd expected results for them.\n\nFrom-SVN: r269790", "tree": {"sha": "69f03b83883ad63d4bb303e381209b838c4642bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69f03b83883ad63d4bb303e381209b838c4642bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce2c025c2480b6d36eb25b3aae877141ab4c3a5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce2c025c2480b6d36eb25b3aae877141ab4c3a5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce2c025c2480b6d36eb25b3aae877141ab4c3a5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce2c025c2480b6d36eb25b3aae877141ab4c3a5d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "855cd9b166c70a6e5a90e342314e71203f15b8f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/855cd9b166c70a6e5a90e342314e71203f15b8f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/855cd9b166c70a6e5a90e342314e71203f15b8f4"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "568435819d7b26879e14ffe98e55dbcc91b33c4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2c025c2480b6d36eb25b3aae877141ab4c3a5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2c025c2480b6d36eb25b3aae877141ab4c3a5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce2c025c2480b6d36eb25b3aae877141ab4c3a5d", "patch": "@@ -1,3 +1,10 @@\n+2019-03-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/89726\n+\t* config/i386/i386.c (ix86_expand_floorceildf_32): In ceil\n+\tcompensation use x2 += 1 instead of x2 -= -1 and when honoring\n+\tsigned zeros, do another copysign after the compensation.\n+\n 2019-03-18  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/89720"}, {"sha": "184c5c18718bd21e92948c8da1734e4f31833ac3", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2c025c2480b6d36eb25b3aae877141ab4c3a5d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2c025c2480b6d36eb25b3aae877141ab4c3a5d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ce2c025c2480b6d36eb25b3aae877141ab4c3a5d", "patch": "@@ -45563,8 +45563,10 @@ ix86_expand_floorceildf_32 (rtx operand0, rtx operand1, bool do_floor)\n           x2 -= 1;\n      Compensate.  Ceil:\n         if (x2 < x)\n-          x2 -= -1;\n-        return x2;\n+          x2 += 1;\n+\tif (HONOR_SIGNED_ZEROS (mode))\n+\t  x2 = copysign (x2, x);\n+\treturn x2;\n    */\n   machine_mode mode = GET_MODE (operand0);\n   rtx xa, TWO52, tmp, one, res, mask;\n@@ -45590,17 +45592,16 @@ ix86_expand_floorceildf_32 (rtx operand0, rtx operand1, bool do_floor)\n   /* xa = copysign (xa, operand1) */\n   ix86_sse_copysign_to_positive (xa, xa, res, mask);\n \n-  /* generate 1.0 or -1.0 */\n-  one = force_reg (mode,\n-\t           const_double_from_real_value (do_floor\n-\t\t\t\t\t\t ? dconst1 : dconstm1, mode));\n+  /* generate 1.0 */\n+  one = force_reg (mode, const_double_from_real_value (dconst1, mode));\n \n   /* Compensate: xa = xa - (xa > operand1 ? 1 : 0) */\n   tmp = ix86_expand_sse_compare_mask (UNGT, xa, res, !do_floor);\n   emit_insn (gen_rtx_SET (tmp, gen_rtx_AND (mode, one, tmp)));\n-  /* We always need to subtract here to preserve signed zero.  */\n-  tmp = expand_simple_binop (mode, MINUS,\n+  tmp = expand_simple_binop (mode, do_floor ? MINUS : PLUS,\n \t\t\t     xa, tmp, NULL_RTX, 0, OPTAB_DIRECT);\n+  if (!do_floor && HONOR_SIGNED_ZEROS (mode))\n+    ix86_sse_copysign_to_positive (tmp, tmp, res, mask);\n   emit_move_insn (res, tmp);\n \n   emit_label (label);"}, {"sha": "ae077a1fc8e74bbdfa486709a244a941dc71d533", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2c025c2480b6d36eb25b3aae877141ab4c3a5d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2c025c2480b6d36eb25b3aae877141ab4c3a5d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce2c025c2480b6d36eb25b3aae877141ab4c3a5d", "patch": "@@ -1,5 +1,10 @@\n 2019-03-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/89726\n+\t* gcc.target/i386/fpprec-1.c (x): Add 6 new constants.\n+\t(expect_round, expect_rint, expect_floor, expect_ceil, expect_trunc):\n+\tAdd expected results for them.\n+\n \tPR c/89734\n \t* gcc.dg/pr89734.c: New test.\n "}, {"sha": "4e55a225bb85f812427fe71f8f20059b7eef5a6a", "filename": "gcc/testsuite/gcc.target/i386/fpprec-1.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2c025c2480b6d36eb25b3aae877141ab4c3a5d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffpprec-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2c025c2480b6d36eb25b3aae877141ab4c3a5d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffpprec-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffpprec-1.c?ref=ce2c025c2480b6d36eb25b3aae877141ab4c3a5d", "patch": "@@ -11,6 +11,9 @@ double x[] = { __builtin_nan(\"\"), __builtin_inf(), -__builtin_inf(),\n \t0x1.0000000000001p-1, 0x1.fffffffffffffp-2,\n \t0x1.0000000000001p+0, 0x1.fffffffffffffp-1,\n \t0x1.8000000000001p+0, 0x1.7ffffffffffffp+0,\n+\t-0x1.0000000000001p-1, -0x1.fffffffffffffp-2,\n+\t-0x1.0000000000001p+0, -0x1.fffffffffffffp-1,\n+\t-0x1.8000000000001p+0, -0x1.7ffffffffffffp+0,\n \t-0.0, 0.0, -0.5, 0.5, -1.0, 1.0, -1.5, 1.5, -2.0, 2.0,\n \t-2.5, 2.5 };\n #define NUM (sizeof(x)/sizeof(double))\n@@ -19,34 +22,39 @@ double expect_round[] = { __builtin_nan(\"\"), __builtin_inf(), -__builtin_inf(),\n \t-0x1.fffffffffffffp+1023, 0x1.fffffffffffffp+1023,\n \t-0.0, 0.0,\n \t1.0, 0.0, 1.0, 1.0, 2.0, 1.0,\n+\t-1.0, -0.0, -1.0, -1.0, -2.0, -1.0,\n \t-0.0, 0.0, -1.0, 1.0, -1.0, 1.0, -2.0, 2.0, -2.0, 2.0,\n \t-3.0, 3.0 };\n \n double expect_rint[] = { __builtin_nan(\"\"), __builtin_inf(), -__builtin_inf(),\n         -0x1.fffffffffffffp+1023, 0x1.fffffffffffffp+1023,\n         -0.0, 0.0,\n         1.0, 0.0, 1.0, 1.0, 2.0, 1.0,\n+        -1.0, -0.0, -1.0, -1.0, -2.0, -1.0,\n         -0.0, 0.0, -0.0, 0.0, -1.0, 1.0, -2.0, 2.0, -2.0, 2.0,\n         -2.0, 2.0 };\n \n double expect_floor[] = { __builtin_nan(\"\"), __builtin_inf(), -__builtin_inf(),\n         -0x1.fffffffffffffp+1023, 0x1.fffffffffffffp+1023,\n         -1.0, 0.0,\n         0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n+        -1.0, -1.0, -2.0, -1.0, -2.0, -2.0,\n         -0.0, 0.0, -1.0, 0.0, -1.0, 1.0, -2.0, 1.0, -2.0, 2.0,\n         -3.0, 2.0 };\n \n double expect_ceil[] = { __builtin_nan(\"\"), __builtin_inf(), -__builtin_inf(),\n         -0x1.fffffffffffffp+1023, 0x1.fffffffffffffp+1023,\n         -0.0, 1.0,\n         1.0, 1.0, 2.0, 1.0, 2.0, 2.0,\n+        -0.0, -0.0, -1.0, -0.0, -1.0, -1.0,\n         -0.0, 0.0, -0.0, 1.0, -1.0, 1.0, -1.0, 2.0, -2.0, 2.0,\n         -2.0, 3.0 };\n \n double expect_trunc[] = { __builtin_nan(\"\"), __builtin_inf(), -__builtin_inf(),\n         -0x1.fffffffffffffp+1023, 0x1.fffffffffffffp+1023,\n         -0.0, 0.0,\n         0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n+        -0.0, -0.0, -1.0, -0.0, -1.0, -1.0,\n         -0.0, 0.0, -0.0, 0.0, -1.0, 1.0, -1.0, 1.0, -2.0, 2.0,\n         -2.0, 2.0 };\n "}]}