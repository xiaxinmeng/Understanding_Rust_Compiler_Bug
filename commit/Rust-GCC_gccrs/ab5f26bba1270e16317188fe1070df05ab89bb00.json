{"sha": "ab5f26bba1270e16317188fe1070df05ab89bb00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI1ZjI2YmJhMTI3MGUxNjMxNzE4OGZlMTA3MGRmMDVhYjg5YmIwMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-02-27T02:44:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-02-27T02:44:26Z"}, "message": "PR c++/84520 - ICE with generic lambda in NSDMI.\n\n\t* lambda.c (lambda_expr_this_capture): Don't look for fake NSDMI\n\t'this' in a generic lambda instantiation.\n\nFrom-SVN: r258021", "tree": {"sha": "b8e572feaf9346ec92bb89192086de7eaa46822d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8e572feaf9346ec92bb89192086de7eaa46822d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab5f26bba1270e16317188fe1070df05ab89bb00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab5f26bba1270e16317188fe1070df05ab89bb00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab5f26bba1270e16317188fe1070df05ab89bb00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab5f26bba1270e16317188fe1070df05ab89bb00/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d36a19c78a67bb367ff24942db78299f24df2970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d36a19c78a67bb367ff24942db78299f24df2970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d36a19c78a67bb367ff24942db78299f24df2970"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "fe5c7864f3a2d0e45cca0ee17ddef540da0a0e07", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5f26bba1270e16317188fe1070df05ab89bb00/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5f26bba1270e16317188fe1070df05ab89bb00/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ab5f26bba1270e16317188fe1070df05ab89bb00", "patch": "@@ -1,5 +1,9 @@\n 2018-02-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/84520 - ICE with generic lambda in NSDMI.\n+\t* lambda.c (lambda_expr_this_capture): Don't look for fake NSDMI\n+\t'this' in a generic lambda instantiation.\n+\n \tPR c++/84559 - ICE with constexpr VLA.\n \t* constexpr.c (ensure_literal_type_for_constexpr_object): Check\n \tfor constexpr variable with VLA type."}, {"sha": "3f77df037a233f08ce66624a50352a9f1fb78af0", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5f26bba1270e16317188fe1070df05ab89bb00/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5f26bba1270e16317188fe1070df05ab89bb00/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=ab5f26bba1270e16317188fe1070df05ab89bb00", "patch": "@@ -758,11 +758,14 @@ lambda_expr_this_capture (tree lambda, bool add_capture_p)\n                                     lambda_stack);\n \n \t  if (LAMBDA_EXPR_EXTRA_SCOPE (tlambda)\n+\t      && !COMPLETE_TYPE_P (LAMBDA_EXPR_CLOSURE (tlambda))\n \t      && TREE_CODE (LAMBDA_EXPR_EXTRA_SCOPE (tlambda)) == FIELD_DECL)\n \t    {\n \t      /* In an NSDMI, we don't have a function to look up the decl in,\n \t\t but the fake 'this' pointer that we're using for parsing is\n-\t\t in scope_chain.  */\n+\t\t in scope_chain.  But if the closure is already complete, we're\n+\t         in an instantiation of a generic lambda, and the fake 'this'\n+\t         is gone.  */\n \t      init = scope_chain->x_current_class_ptr;\n \t      gcc_checking_assert\n \t\t(init && (TREE_TYPE (TREE_TYPE (init))"}, {"sha": "89ce519d8120a7c6ee86fbc13b0a1b8088dad16a", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-nsdmi1.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5f26bba1270e16317188fe1070df05ab89bb00/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-nsdmi1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5f26bba1270e16317188fe1070df05ab89bb00/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-nsdmi1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-nsdmi1.C?ref=ab5f26bba1270e16317188fe1070df05ab89bb00", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/84520\n+// { dg-do compile { target c++14 } }\n+\n+struct A\n+{\n+  static void foo(int);\n+  void (*f)(int) = [](auto i) { foo(i); };\n+};"}]}