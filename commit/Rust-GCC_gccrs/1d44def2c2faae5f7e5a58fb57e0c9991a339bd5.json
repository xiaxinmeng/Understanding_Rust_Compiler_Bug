{"sha": "1d44def2c2faae5f7e5a58fb57e0c9991a339bd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ0NGRlZjJjMmZhYWU1ZjdlNWE1OGZiNTdlMGM5OTkxYTMzOWJkNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-05-19T14:33:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-05-19T14:33:31Z"}, "message": "re PR tree-optimization/61221 (ICE on valid code at -O1 and above on x86_64-linux-gnu)\n\n2014-05-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/61221\n\t* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):\n\tDo nothing for unreachable blocks.\n\t* tree-ssa-sccvn.c (cond_dom_walker::before_dom_children):\n\tImprove unreachability detection.\n\n\t* gcc.dg/torture/pr61221.c: New testcase.\n\nFrom-SVN: r210614", "tree": {"sha": "e67c419dec0c9e20aaf8ed809ff91af44ab50f25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e67c419dec0c9e20aaf8ed809ff91af44ab50f25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "051351362bfe8552549443b77bdbd0ac5e003eac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/051351362bfe8552549443b77bdbd0ac5e003eac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/051351362bfe8552549443b77bdbd0ac5e003eac"}], "stats": {"total": 62, "additions": 59, "deletions": 3}, "files": [{"sha": "1cac5d27fb5b9984187297ef71e0faaae2bdeff5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d44def2c2faae5f7e5a58fb57e0c9991a339bd5", "patch": "@@ -1,3 +1,11 @@\n+2014-05-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/61221\n+\t* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):\n+\tDo nothing for unreachable blocks.\n+\t* tree-ssa-sccvn.c (cond_dom_walker::before_dom_children):\n+\tImprove unreachability detection.\n+\n 2014-05-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/61209"}, {"sha": "bb657c1b5a917b9f54bdc7a5228b834cd441acb8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1d44def2c2faae5f7e5a58fb57e0c9991a339bd5", "patch": "@@ -1,3 +1,8 @@\n+2014-05-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/61221\n+\t* gcc.dg/torture/pr61221.c: New testcase.\n+\n 2014-05-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/61209"}, {"sha": "2524382ba1a6b18473e7ad78b1a1cb2aaceb37bb", "filename": "gcc/testsuite/gcc.dg/torture/pr61221.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61221.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61221.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61221.c?ref=1d44def2c2faae5f7e5a58fb57e0c9991a339bd5", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile } */\n+\n+void __assert_fail (void);\n+\n+int **a, b, c, e, *j;\n+short *d, **f;\n+\n+int *\n+foo ()\n+{\n+  *a = j;\n+  if (!(1 & e)) \n+    __assert_fail ();\n+  return 0;\n+}\n+\n+void\n+bar ()\n+{\n+  int *g = &b;\n+  short **h = &d;\n+  if ((f = &d) != h)\n+    for (; b;)\n+      {\n+\tint i = 1;\n+\tif (i)\n+\t  g = foo ();\n+\tc = 0;\n+      }\n+  if (!g)\n+    __assert_fail ();\n+}"}, {"sha": "e487d283c28a513c2fd4390d229e80b63137a727", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=1d44def2c2faae5f7e5a58fb57e0c9991a339bd5", "patch": "@@ -4010,6 +4010,15 @@ eliminate_dom_walker::before_dom_children (basic_block b)\n   /* Mark new bb.  */\n   el_avail_stack.safe_push (NULL_TREE);\n \n+  /* If this block is not reachable do nothing.  */\n+  edge_iterator ei;\n+  edge e;\n+  FOR_EACH_EDGE (e, ei, b->preds)\n+    if (e->flags & EDGE_EXECUTABLE)\n+      break;\n+  if (!e)\n+    return;\n+\n   for (gsi = gsi_start_phis (b); !gsi_end_p (gsi);)\n     {\n       gimple stmt, phi = gsi_stmt (gsi);"}, {"sha": "fc00682fcd845a7d773259964c6f0a26b8b3d685", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d44def2c2faae5f7e5a58fb57e0c9991a339bd5/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=1d44def2c2faae5f7e5a58fb57e0c9991a339bd5", "patch": "@@ -4177,11 +4177,13 @@ cond_dom_walker::before_dom_children (basic_block bb)\n   if (fail)\n     return;\n \n-  /* If any of the predecessor edges are still marked as possibly\n-     executable consider this block reachable.  */\n+  /* If any of the predecessor edges that do not come from blocks dominated\n+     by us are still marked as possibly executable consider this block\n+     reachable.  */\n   bool reachable = bb == ENTRY_BLOCK_PTR_FOR_FN (cfun);\n   FOR_EACH_EDGE (e, ei, bb->preds)\n-    reachable |= (e->flags & EDGE_EXECUTABLE);\n+    if (!dominated_by_p (CDI_DOMINATORS, e->src, bb))\n+      reachable |= (e->flags & EDGE_EXECUTABLE);\n \n   /* If the block is not reachable all outgoing edges are not\n      executable.  */"}]}