{"sha": "81f4be3ce1fd9f08d811cf61413e374e0dc43166", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFmNGJlM2NlMWZkOWYwOGQ4MTFjZjYxNDEzZTM3NGUwZGM0MzE2Ng==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2004-05-18T16:06:09Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-05-18T16:06:09Z"}, "message": "re PR libfortran/15235 (libgfortran doesn't build on Solaris 10)\n\n\nPR fortran/15235\n* gfortran.h (offset_t): Rename to ...\n(gfc_offset): ... this.\n* io/backspace.c (formatted_backspace, unformatted_backspace),\nio/io.h (stream, gfc_unit, global_t, file_length, file_position),\ntransfer.c (us_read, us_write, next_record_r, next_record_w),\nio/unit.c (init_units), unix.c (unix_stream, fd_alloc,\nfd_alloc_r_at, fd_alloc_w_at, fd_seek, mmap_alloc,\nmmap_alloc_r_at, mmap_alloc_w_at, mmap_seek, mem_alloc_r_at,\nmem_alloc_w_at, mem_seek, file_length, file_position): Replace all\noccurences of offset_t by gfc_offset.\n\nFrom-SVN: r81994", "tree": {"sha": "23c4c98b07e24eaf1541c8090b2f9c1c5e2f219e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23c4c98b07e24eaf1541c8090b2f9c1c5e2f219e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81f4be3ce1fd9f08d811cf61413e374e0dc43166", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81f4be3ce1fd9f08d811cf61413e374e0dc43166", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81f4be3ce1fd9f08d811cf61413e374e0dc43166", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81f4be3ce1fd9f08d811cf61413e374e0dc43166/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d72d96efe1f576cbeea5e6c59724a8d47f476b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d72d96efe1f576cbeea5e6c59724a8d47f476b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d72d96efe1f576cbeea5e6c59724a8d47f476b9"}], "stats": {"total": 120, "additions": 67, "deletions": 53}, "files": [{"sha": "09f7427891af88663ad56687ddb0de3f97b67b15", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=81f4be3ce1fd9f08d811cf61413e374e0dc43166", "patch": "@@ -1,3 +1,17 @@\n+2004-05-18  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/15235\n+\t* gfortran.h (offset_t): Rename to ...\n+\t(gfc_offset): ... this.\n+\t* io/backspace.c (formatted_backspace, unformatted_backspace),\n+\tio/io.h (stream, gfc_unit, global_t, file_length, file_position),\n+\ttransfer.c (us_read, us_write, next_record_r, next_record_w),\n+\tio/unit.c (init_units), unix.c (unix_stream, fd_alloc,\n+\tfd_alloc_r_at, fd_alloc_w_at, fd_seek, mmap_alloc,\n+\tmmap_alloc_r_at, mmap_alloc_w_at, mmap_seek, mem_alloc_r_at,\n+\tmem_alloc_w_at, mem_seek, file_length, file_position): Replace all\n+\toccurences of offset_t by gfc_offset.\n+\n 2004-05-16  Paul Brook  <paul@codesourcery.com>\n \n \t* io/format.c (write_real): Don't include padding in format."}, {"sha": "aff4c5e29e3439031bd7c7ecd318d021e92d9f42", "filename": "libgfortran/io/backspace.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2Fio%2Fbackspace.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2Fio%2Fbackspace.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fbackspace.c?ref=81f4be3ce1fd9f08d811cf61413e374e0dc43166", "patch": "@@ -34,7 +34,7 @@ Boston, MA 02111-1307, USA.  */\n static void\n formatted_backspace (void)\n {\n-  offset_t base;\n+  gfc_offset base;\n   char *p;\n   int n;\n \n@@ -92,12 +92,12 @@ formatted_backspace (void)\n static void\n unformatted_backspace (void)\n {\n-  offset_t *p, new;\n+  gfc_offset *p, new;\n   int length;\n \n-  length = sizeof (offset_t);\n+  length = sizeof (gfc_offset);\n \n-  p = (offset_t *) salloc_r_at (current_unit->s, &length,\n+  p = (gfc_offset *) salloc_r_at (current_unit->s, &length,\n \t\t\t\tfile_position (current_unit->s) - length);\n   if (p == NULL)\n     goto io_error;"}, {"sha": "7658ec8f60500e34ebd952eae618fd73d4fb6c46", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=81f4be3ce1fd9f08d811cf61413e374e0dc43166", "patch": "@@ -42,11 +42,11 @@ try;\n \n typedef struct stream\n {\n-  char *(*alloc_w_at) (struct stream *, int *, offset_t);\n-  char *(*alloc_r_at) (struct stream *, int *, offset_t);\n+  char *(*alloc_w_at) (struct stream *, int *, gfc_offset);\n+  char *(*alloc_r_at) (struct stream *, int *, gfc_offset);\n     try (*sfree) (struct stream *);\n     try (*close) (struct stream *);\n-    try (*seek) (struct stream *, offset_t);\n+    try (*seek) (struct stream *, gfc_offset);\n     try (*truncate) (struct stream *);\n }\n stream;\n@@ -269,7 +269,7 @@ typedef struct gfc_unit\n   endfile;\n \n   unit_flags flags;\n-  offset_t recl, last_record, maxrec, bytes_left;\n+  gfc_offset recl, last_record, maxrec, bytes_left;\n \n   /* recl           -- Record length of the file.\n      last_record    -- Last record number read or written\n@@ -288,7 +288,7 @@ typedef struct\n {\n   int in_library;       /* Nonzero if a library call is being processed.  */\n   int size;\t/* Bytes processed by the current data-transfer statement.  */\n-  offset_t max_offset;\t/* Maximum file offset.  */\n+  gfc_offset max_offset;\t/* Maximum file offset.  */\n   int item_count;\t/* Item number in a formatted data transfer.  */\n   int reversion_flag;\t/* Format reversion has occurred.  */\n   int first_item;\n@@ -445,10 +445,10 @@ const char *inquire_write (const char *, int);\n const char *inquire_readwrite (const char *, int);\n \n #define file_length prefix(file_length)\n-offset_t file_length (stream *);\n+gfc_offset file_length (stream *);\n \n #define file_position prefix(file_position)\n-offset_t file_position (stream *);\n+gfc_offset file_position (stream *);\n \n #define is_seekable prefix(is_seekable)\n int is_seekable (stream *);"}, {"sha": "d5ef5c68d7fd03723841bec5e032d8222715ce1d", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=81f4be3ce1fd9f08d811cf61413e374e0dc43166", "patch": "@@ -792,13 +792,13 @@ transfer_complex (void *p, int kind)\n static void\n us_read (void)\n {\n-  offset_t *p;\n+  gfc_offset *p;\n   int n;\n \n-  n = sizeof (offset_t);\n-  p = (offset_t *) salloc_r (current_unit->s, &n);\n+  n = sizeof (gfc_offset);\n+  p = (gfc_offset *) salloc_r (current_unit->s, &n);\n \n-  if (p == NULL || n != sizeof (offset_t))\n+  if (p == NULL || n != sizeof (gfc_offset))\n     {\n       generate_error (ERROR_BAD_US, NULL);\n       return;\n@@ -815,11 +815,11 @@ us_read (void)\n static void\n us_write (void)\n {\n-  offset_t *p;\n+  gfc_offset *p;\n   int length;\n \n-  length = sizeof (offset_t);\n-  p = (offset_t *) salloc_w (current_unit->s, &length);\n+  length = sizeof (gfc_offset);\n+  p = (gfc_offset *) salloc_w (current_unit->s, &length);\n \n   if (p == NULL)\n     {\n@@ -1111,13 +1111,13 @@ static void\n next_record_r (int done)\n {\n   int rlength, length;\n-  offset_t new;\n+  gfc_offset new;\n   char *p;\n \n   switch (current_mode ())\n     {\n     case UNFORMATTED_SEQUENTIAL:\n-      current_unit->bytes_left += sizeof (offset_t);\t/* Skip over tail */\n+      current_unit->bytes_left += sizeof (gfc_offset);\t/* Skip over tail */\n \n       /* Fall through */\n \n@@ -1198,7 +1198,7 @@ next_record_r (int done)\n static void\n next_record_w (int done)\n {\n-  offset_t c, m;\n+  gfc_offset c, m;\n   int length;\n   char *p;\n \n@@ -1225,15 +1225,15 @@ next_record_w (int done)\n       m = current_unit->recl - current_unit->bytes_left; /* Bytes written */\n       c = file_position (current_unit->s);\n \n-      length = sizeof (offset_t);\n+      length = sizeof (gfc_offset);\n \n       /* Write the length tail */\n \n       p = salloc_w (current_unit->s, &length);\n       if (p == NULL)\n \tgoto io_error;\n \n-      *((offset_t *) p) = m;\n+      *((gfc_offset *) p) = m;\n       if (sfree (current_unit->s) == FAILURE)\n \tgoto io_error;\n \n@@ -1243,13 +1243,13 @@ next_record_w (int done)\n       if (p == NULL)\n \tgenerate_error (ERROR_OS, NULL);\n \n-      *((offset_t *) p) = m;\n+      *((gfc_offset *) p) = m;\n       if (sfree (current_unit->s) == FAILURE)\n \tgoto io_error;\n \n       /* Seek past the end of the current record */\n \n-      if (sseek (current_unit->s, c + sizeof (offset_t)) == FAILURE)\n+      if (sseek (current_unit->s, c + sizeof (gfc_offset)) == FAILURE)\n \tgoto io_error;\n \n       break;"}, {"sha": "c3d6e7eca1314ea72d1308754ef5294c3b28c6cb", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=81f4be3ce1fd9f08d811cf61413e374e0dc43166", "patch": "@@ -289,7 +289,7 @@ is_internal_unit ()\n void\n init_units (void)\n {\n-  offset_t m, n;\n+  gfc_offset m, n;\n   gfc_unit *u;\n   int i;\n \n@@ -336,13 +336,13 @@ init_units (void)\n     }\n \n   /* Calculate the maximum file offset in a portable manner.\n-   * max will be the largest signed number for the type offset_t.\n+   * max will be the largest signed number for the type gfc_offset.\n    *\n    * set a 1 in the LSB and keep a running sum, stopping at MSB-1 bit. */\n \n   g.max_offset = 0;\n   for (i=0; i < sizeof(g.max_offset) * 8 - 1; i++)\n-    g.max_offset = g.max_offset + ((offset_t) 1 << i);\n+    g.max_offset = g.max_offset + ((gfc_offset) 1 << i);\n \n }\n "}, {"sha": "fc25395ca5b05b82d24bbd8f897e8117b9ca01f0", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=81f4be3ce1fd9f08d811cf61413e374e0dc43166", "patch": "@@ -86,11 +86,11 @@ typedef struct\n   stream st;\n \n   int fd;\n-  offset_t buffer_offset;\t/* File offset of the start of the buffer */\n-  offset_t physical_offset;\t/* Current physical file offset */\n-  offset_t logical_offset;\t/* Current logical file offset */\n-  offset_t dirty_offset;\t/* Start of modified bytes in buffer */\n-  offset_t file_length;\t\t/* Length of the file, -1 if not seekable. */\n+  gfc_offset buffer_offset;\t/* File offset of the start of the buffer */\n+  gfc_offset physical_offset;\t/* Current physical file offset */\n+  gfc_offset logical_offset;\t/* Current logical file offset */\n+  gfc_offset dirty_offset;\t/* Start of modified bytes in buffer */\n+  gfc_offset file_length;\t\t/* Length of the file, -1 if not seekable. */\n \n   char *buffer;\n   int len;\t\t\t/* Physical length of the current buffer */\n@@ -293,7 +293,7 @@ fd_flush (unix_stream * s)\n  * to come next. */\n \n static void\n-fd_alloc (unix_stream * s, offset_t where, int *len)\n+fd_alloc (unix_stream * s, gfc_offset where, int *len)\n {\n   char *new_buffer;\n   int n, read_len;\n@@ -344,9 +344,9 @@ fd_alloc (unix_stream * s, offset_t where, int *len)\n  * NULL on I/O error. */\n \n static char *\n-fd_alloc_r_at (unix_stream * s, int *len, offset_t where)\n+fd_alloc_r_at (unix_stream * s, int *len, gfc_offset where)\n {\n-  offset_t m;\n+  gfc_offset m;\n   int n;\n \n   if (where == -1)\n@@ -389,9 +389,9 @@ fd_alloc_r_at (unix_stream * s, int *len, offset_t where)\n  * we've already buffered the data or we need to load it. */\n \n static char *\n-fd_alloc_w_at (unix_stream * s, int *len, offset_t where)\n+fd_alloc_w_at (unix_stream * s, int *len, gfc_offset where)\n {\n-  offset_t n;\n+  gfc_offset n;\n \n   if (where == -1)\n     where = s->logical_offset;\n@@ -444,7 +444,7 @@ fd_sfree (unix_stream * s)\n \n \n static int\n-fd_seek (unix_stream * s, offset_t offset)\n+fd_seek (unix_stream * s, gfc_offset offset)\n {\n \n   s->physical_offset = s->logical_offset = offset;\n@@ -551,9 +551,9 @@ mmap_flush (unix_stream * s)\n  * guaranteed to be mappable. */\n \n static try\n-mmap_alloc (unix_stream * s, offset_t where, int *len)\n+mmap_alloc (unix_stream * s, gfc_offset where, int *len)\n {\n-  offset_t offset;\n+  gfc_offset offset;\n   int length;\n   char *p;\n \n@@ -578,9 +578,9 @@ mmap_alloc (unix_stream * s, offset_t where, int *len)\n \n \n static char *\n-mmap_alloc_r_at (unix_stream * s, int *len, offset_t where)\n+mmap_alloc_r_at (unix_stream * s, int *len, gfc_offset where)\n {\n-  offset_t m;\n+  gfc_offset m;\n \n   if (where == -1)\n     where = s->logical_offset;\n@@ -605,7 +605,7 @@ mmap_alloc_r_at (unix_stream * s, int *len, offset_t where)\n \n \n static char *\n-mmap_alloc_w_at (unix_stream * s, int *len, offset_t where)\n+mmap_alloc_w_at (unix_stream * s, int *len, gfc_offset where)\n {\n   if (where == -1)\n     where = s->logical_offset;\n@@ -632,7 +632,7 @@ mmap_alloc_w_at (unix_stream * s, int *len, offset_t where)\n \n \n static int\n-mmap_seek (unix_stream * s, offset_t offset)\n+mmap_seek (unix_stream * s, gfc_offset offset)\n {\n \n   s->logical_offset = offset;\n@@ -719,9 +719,9 @@ mmap_open (unix_stream * s)\n \n \n static char *\n-mem_alloc_r_at (unix_stream * s, int *len, offset_t where)\n+mem_alloc_r_at (unix_stream * s, int *len, gfc_offset where)\n {\n-  offset_t n;\n+  gfc_offset n;\n \n   if (where == -1)\n     where = s->logical_offset;\n@@ -743,9 +743,9 @@ mem_alloc_r_at (unix_stream * s, int *len, offset_t where)\n \n \n static char *\n-mem_alloc_w_at (unix_stream * s, int *len, offset_t where)\n+mem_alloc_w_at (unix_stream * s, int *len, gfc_offset where)\n {\n-  offset_t m;\n+  gfc_offset m;\n \n   if (where == -1)\n     where = s->logical_offset;\n@@ -762,7 +762,7 @@ mem_alloc_w_at (unix_stream * s, int *len, offset_t where)\n \n \n static int\n-mem_seek (unix_stream * s, offset_t offset)\n+mem_seek (unix_stream * s, gfc_offset offset)\n {\n \n   if (offset > s->file_length)\n@@ -1366,7 +1366,7 @@ inquire_readwrite (const char *string, int len)\n \n /* file_length()-- Return the file length in bytes, -1 if unknown */\n \n-offset_t\n+gfc_offset\n file_length (stream * s)\n {\n \n@@ -1376,7 +1376,7 @@ file_length (stream * s)\n \n /* file_position()-- Return the current position of the file */\n \n-offset_t\n+gfc_offset\n file_position (stream * s)\n {\n "}, {"sha": "6234e25cb72f7aff439ad45483e155e7c037de63", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f4be3ce1fd9f08d811cf61413e374e0dc43166/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=81f4be3ce1fd9f08d811cf61413e374e0dc43166", "patch": "@@ -50,7 +50,7 @@ Boston, MA 02111-1307, USA.  */\n #if HAVE_SYS_TYPES_H\n #include <sys/types.h>\n #endif\n-typedef off_t offset_t;\n+typedef off_t gfc_offset;\n \n #ifndef NULL\n #define NULL (void *) 0"}]}