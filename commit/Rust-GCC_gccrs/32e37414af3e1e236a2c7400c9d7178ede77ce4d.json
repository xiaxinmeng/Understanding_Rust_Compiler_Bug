{"sha": "32e37414af3e1e236a2c7400c9d7178ede77ce4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJlMzc0MTRhZjNlMWUyMzZhMmM3NDAwYzlkNzE3OGVkZTc3Y2U0ZA==", "commit": {"author": {"name": "Yury Gribov", "email": "tetra2005@gmail.com", "date": "2017-06-16T07:16:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-06-16T07:16:34Z"}, "message": "re PR tree-optimization/81089 (ICE: tree check: expected ssa_name, have integer_cst in register_edge_assert_for_2, at tree-vrp.c:5023)\n\n2017-06-16  Yury Gribov  <tetra2005@gmail.com>\n\n\tPR tree-optimization/81089\n\t* tree-vrp.c (is_masked_range_test): Validate operands of\n\tsubexpression.\n\nFrom-SVN: r249237", "tree": {"sha": "33888cdb59100c208a9795f33d63006b1a8d4a98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33888cdb59100c208a9795f33d63006b1a8d4a98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32e37414af3e1e236a2c7400c9d7178ede77ce4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32e37414af3e1e236a2c7400c9d7178ede77ce4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32e37414af3e1e236a2c7400c9d7178ede77ce4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32e37414af3e1e236a2c7400c9d7178ede77ce4d/comments", "author": {"login": "yugr", "id": 1101391, "node_id": "MDQ6VXNlcjExMDEzOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1101391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yugr", "html_url": "https://github.com/yugr", "followers_url": "https://api.github.com/users/yugr/followers", "following_url": "https://api.github.com/users/yugr/following{/other_user}", "gists_url": "https://api.github.com/users/yugr/gists{/gist_id}", "starred_url": "https://api.github.com/users/yugr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yugr/subscriptions", "organizations_url": "https://api.github.com/users/yugr/orgs", "repos_url": "https://api.github.com/users/yugr/repos", "events_url": "https://api.github.com/users/yugr/events{/privacy}", "received_events_url": "https://api.github.com/users/yugr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0186cacf9560ba0572b23e01085c3b00fbe38f56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0186cacf9560ba0572b23e01085c3b00fbe38f56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0186cacf9560ba0572b23e01085c3b00fbe38f56"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "3f883c2b7a88c382013761adc2473cbcd5a416f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e37414af3e1e236a2c7400c9d7178ede77ce4d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e37414af3e1e236a2c7400c9d7178ede77ce4d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32e37414af3e1e236a2c7400c9d7178ede77ce4d", "patch": "@@ -1,3 +1,9 @@\n+2017-06-16  Yury Gribov  <tetra2005@gmail.com>\n+\n+\tPR tree-optimization/81089\n+\t* tree-vrp.c (is_masked_range_test): Validate operands of\n+\tsubexpression.\n+\n 2017-06-15  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/80560"}, {"sha": "9ca3924ea89c21645152347aabea48e606f60121", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e37414af3e1e236a2c7400c9d7178ede77ce4d/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e37414af3e1e236a2c7400c9d7178ede77ce4d/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=32e37414af3e1e236a2c7400c9d7178ede77ce4d", "patch": "@@ -5651,8 +5651,9 @@ is_masked_range_test (tree name, tree valt, enum tree_code cond_code,\n       || gimple_assign_rhs_code (def_stmt) != BIT_AND_EXPR)\n     return false;\n \n+  tree t = gimple_assign_rhs1 (def_stmt);\n   tree maskt = gimple_assign_rhs2 (def_stmt);\n-  if (TREE_CODE (maskt) != INTEGER_CST)\n+  if (TREE_CODE (t) != SSA_NAME || TREE_CODE (maskt) != INTEGER_CST)\n     return false;\n \n   wide_int mask = maskt;\n@@ -5663,11 +5664,9 @@ is_masked_range_test (tree name, tree valt, enum tree_code cond_code,\n       || (val & mask) != val)\n     return false;\n \n-  tree t = gimple_assign_rhs1 (def_stmt);\n-  tree type = TREE_TYPE (t);\n-\n   bool is_range = cond_code == EQ_EXPR;\n \n+  tree type = TREE_TYPE (t);\n   wide_int min = wi::min_value (type),\n     max = wi::max_value (type);\n "}]}