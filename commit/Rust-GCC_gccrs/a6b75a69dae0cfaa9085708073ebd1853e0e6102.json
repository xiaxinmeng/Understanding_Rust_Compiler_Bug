{"sha": "a6b75a69dae0cfaa9085708073ebd1853e0e6102", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZiNzVhNjlkYWUwY2ZhYTkwODU3MDgwNzNlYmQxODUzZTBlNjEwMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-09-03T13:35:35Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-09-03T13:35:35Z"}, "message": "Fix thinko (PR tree-optimization/87201).\n\n2018-09-03  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/87201\n\t* tree-switch-conversion.c (switch_decision_tree::balance_case_nodes):\n\tFix parenthesis in an expression.\n\nFrom-SVN: r264058", "tree": {"sha": "306fdefcf80f8139e2d47b85f76c73f23fb8d3f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/306fdefcf80f8139e2d47b85f76c73f23fb8d3f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6b75a69dae0cfaa9085708073ebd1853e0e6102", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6b75a69dae0cfaa9085708073ebd1853e0e6102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6b75a69dae0cfaa9085708073ebd1853e0e6102", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6b75a69dae0cfaa9085708073ebd1853e0e6102/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70fc129d86eeeea6f3f04892cec75119ba97b86e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70fc129d86eeeea6f3f04892cec75119ba97b86e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70fc129d86eeeea6f3f04892cec75119ba97b86e"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "40795e7ad39d8061e79baf6dba25d9ba310d2d78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6b75a69dae0cfaa9085708073ebd1853e0e6102/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6b75a69dae0cfaa9085708073ebd1853e0e6102/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6b75a69dae0cfaa9085708073ebd1853e0e6102", "patch": "@@ -1,3 +1,9 @@\n+2018-09-03  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/87201\n+\t* tree-switch-conversion.c (switch_decision_tree::balance_case_nodes):\n+\tFix parenthesis in an expression.\n+\n 2018-09-03  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87197"}, {"sha": "1f543b2ecc8a55329402712a3413a9648125895b", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6b75a69dae0cfaa9085708073ebd1853e0e6102/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6b75a69dae0cfaa9085708073ebd1853e0e6102/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=a6b75a69dae0cfaa9085708073ebd1853e0e6102", "patch": "@@ -1942,8 +1942,8 @@ switch_decision_tree::balance_case_nodes (case_tree_node **head,\n \t      /* Skip nodes while their probability does not reach\n \t\t that amount.  */\n \t      prob -= (*npp)->m_c->m_prob;\n-\t      if (prob.initialized_p ()\n-\t\t  && (prob < pivot_prob || ! (*npp)->m_right))\n+\t      if ((prob.initialized_p () && prob < pivot_prob)\n+\t\t  || ! (*npp)->m_right)\n \t\tbreak;\n \t      npp = &(*npp)->m_right;\n \t    }"}]}