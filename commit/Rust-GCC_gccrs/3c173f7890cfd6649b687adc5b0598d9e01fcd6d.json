{"sha": "3c173f7890cfd6649b687adc5b0598d9e01fcd6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MxNzNmNzg5MGNmZDY2NDliNjg3YWRjNWIwNTk4ZDllMDFmY2Q2ZA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-02-28T01:13:50Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-02-28T16:28:12Z"}, "message": "testsuite, coroutines : Mark final awaiters and co_await operators noexcept.\n\nThis is part of the requirement of [dcl.fct.def.coroutine]/15.\n\nIn addition to promise final_suspend() calls, the following cases must\nalso be noexcept as per discussion in PR95616.\n\n- finalSuspendObj.operator co_await()\n- finalSuspendAwaiter.await_ready()\n- finalSuspendAwaiter.await_suspend()\n- finalSuspendAwaiter.await_resume()\n- finalSuspedObj destructor\n- finalSuspendAwaiter destructor\n\nFixed for missing cases in the testsuite as a prerequisite to fixing\nPR95616.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/coroutines/pr94879-folly-1.C: Make final suspend\n\texpression components noexcept.\n\t* g++.dg/coroutines/pr94883-folly-2.C: Likewise.\n\t* g++.dg/coroutines/pr95345.C: Likewise.", "tree": {"sha": "8a8c7c19826206fd788ef54e6502451d8f71ab3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a8c7c19826206fd788ef54e6502451d8f71ab3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c173f7890cfd6649b687adc5b0598d9e01fcd6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c173f7890cfd6649b687adc5b0598d9e01fcd6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c173f7890cfd6649b687adc5b0598d9e01fcd6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c173f7890cfd6649b687adc5b0598d9e01fcd6d/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e5d7fc7e6f99b7332284e2fd07502f4a049acc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e5d7fc7e6f99b7332284e2fd07502f4a049acc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e5d7fc7e6f99b7332284e2fd07502f4a049acc1"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "11bcce04b7dcb110827820a06ff5e5bbc3b6b5b2", "filename": "gcc/testsuite/g++.dg/coroutines/pr94879-folly-1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c173f7890cfd6649b687adc5b0598d9e01fcd6d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94879-folly-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c173f7890cfd6649b687adc5b0598d9e01fcd6d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94879-folly-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94879-folly-1.C?ref=3c173f7890cfd6649b687adc5b0598d9e01fcd6d", "patch": "@@ -18,14 +18,14 @@ class i {\n namespace ac {\n template <typename> class ad {\n public:\n-  bool await_ready();\n-  void await_resume();\n-  void await_suspend(std::coroutine_handle<>);\n+  bool await_ready() noexcept;\n+  void await_resume() noexcept;\n+  void await_suspend(std::coroutine_handle<>) noexcept;\n   i ae;\n };\n } // namespace ac\n \n-template <typename ab> ac::ad<ab> operator co_await(ab);\n+template <typename ab> ac::ad<ab> operator co_await(ab) noexcept;\n class j {\n   class l {};\n "}, {"sha": "ce06cfddb0ad1da2c8a7c41b9a67a0fe7d23142b", "filename": "gcc/testsuite/g++.dg/coroutines/pr94883-folly-2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c173f7890cfd6649b687adc5b0598d9e01fcd6d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94883-folly-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c173f7890cfd6649b687adc5b0598d9e01fcd6d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94883-folly-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94883-folly-2.C?ref=3c173f7890cfd6649b687adc5b0598d9e01fcd6d", "patch": "@@ -16,9 +16,9 @@ int f;\n class h {\n   class j {\n   public:\n-    bool await_ready();\n-    void await_suspend(std::coroutine_handle<>);\n-    void await_resume();\n+    bool await_ready() noexcept;\n+    void await_suspend(std::coroutine_handle<>) noexcept;\n+    void await_resume() noexcept;\n   };\n \n public:"}, {"sha": "57b95cbebb200bc8c9a2fccd8e20eeadda118e8a", "filename": "gcc/testsuite/g++.dg/coroutines/pr95345.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c173f7890cfd6649b687adc5b0598d9e01fcd6d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95345.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c173f7890cfd6649b687adc5b0598d9e01fcd6d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95345.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95345.C?ref=3c173f7890cfd6649b687adc5b0598d9e01fcd6d", "patch": "@@ -9,9 +9,9 @@ using namespace std::experimental;\n struct dummy_coro\n {\n   using promise_type = dummy_coro;\n-  bool await_ready() { return false; }\n-  void await_suspend(std::coroutine_handle<>) { }\n-  void await_resume() { }\n+  bool await_ready() noexcept { return false; }\n+  void await_suspend(std::coroutine_handle<>) noexcept { }\n+  void await_resume() noexcept { }\n   dummy_coro get_return_object() { return {}; }\n   dummy_coro initial_suspend() { return {}; }\n   dummy_coro final_suspend() noexcept { return {}; }"}]}