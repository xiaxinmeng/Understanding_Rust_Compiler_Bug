{"sha": "aad2bccb9b17ca771009135da32d71ee9e1a83d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFkMmJjY2I5YjE3Y2E3NzEwMDkxMzVkYTMyZDcxZWU5ZTFhODNkMQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2009-04-04T10:37:10Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2009-04-04T10:37:10Z"}, "message": "re PR target/39501 (-O -ffinite-math-only gets min(x,y) optimization wrong for soft-float on arm-*-gnueabi)\n\n\tPR target/39501\n\t* arm.md (movsfcc): Disable if not TARGET_HARD_FLOAT.\n\t* testsuite/gcc.c-torture/execute/pr39501.c: New file.\n\t* testsuite/gcc.c-torture/execute/pr39501.x: New file.\n\nFrom-SVN: r145534", "tree": {"sha": "b59b6e4d346908091e5d52b7501cc28c9e6c3b5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b59b6e4d346908091e5d52b7501cc28c9e6c3b5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aad2bccb9b17ca771009135da32d71ee9e1a83d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad2bccb9b17ca771009135da32d71ee9e1a83d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aad2bccb9b17ca771009135da32d71ee9e1a83d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad2bccb9b17ca771009135da32d71ee9e1a83d1/comments", "author": null, "committer": null, "parents": [{"sha": "aa7069aa9faf250b01c10bb7c2c442d329c0bab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa7069aa9faf250b01c10bb7c2c442d329c0bab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa7069aa9faf250b01c10bb7c2c442d329c0bab8"}], "stats": {"total": 94, "additions": 93, "deletions": 1}, "files": [{"sha": "223ebafc47290962a95246c2cc1017c6ba4d643a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad2bccb9b17ca771009135da32d71ee9e1a83d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad2bccb9b17ca771009135da32d71ee9e1a83d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aad2bccb9b17ca771009135da32d71ee9e1a83d1", "patch": "@@ -1,3 +1,10 @@\n+2009-04-04  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/39501\n+\t* arm.md (movsfcc): Disable if not TARGET_HARD_FLOAT.\n+\t* testsuite/gcc.c-torture/execute/pr39501.c: New file.\n+\t* testsuite/gcc.c-torture/execute/pr39501.x: New file.\n+\n 2009-04-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/8781"}, {"sha": "ff217e02c193166ffbe55f4af650a629c7b324c8", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad2bccb9b17ca771009135da32d71ee9e1a83d1/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad2bccb9b17ca771009135da32d71ee9e1a83d1/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=aad2bccb9b17ca771009135da32d71ee9e1a83d1", "patch": "@@ -8260,7 +8260,7 @@\n \t(if_then_else:SF (match_operand 1 \"arm_comparison_operator\" \"\")\n \t\t\t (match_operand:SF 2 \"s_register_operand\" \"\")\n \t\t\t (match_operand:SF 3 \"nonmemory_operand\" \"\")))]\n-  \"TARGET_32BIT\"\n+  \"TARGET_32BIT && TARGET_HARD_FLOAT\"\n   \"\n   {\n     enum rtx_code code = GET_CODE (operands[1]);"}, {"sha": "3749d6e7889fdf662cdee9998a1977b57bed757c", "filename": "gcc/testsuite/gcc.c-torture/execute/pr39501.c", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad2bccb9b17ca771009135da32d71ee9e1a83d1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39501.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad2bccb9b17ca771009135da32d71ee9e1a83d1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39501.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39501.c?ref=aad2bccb9b17ca771009135da32d71ee9e1a83d1", "patch": "@@ -0,0 +1,83 @@\n+/* { dg-options \"-ffast-math\" } */\n+#define min1(a,b) ((a) < (b) ? (a) : (b))\n+#define max1(a,b) ((a) > (b) ? (a) : (b))\n+\n+#define min2(a,b) ((a) <= (b) ? (a) : (b))\n+#define max2(a,b) ((a) >= (b) ? (a) : (b))\n+\n+#define F(type,n)\t\t\t\t\t\t\\\n+  type __attribute__((noinline)) type##_##n(type a, type b)\t\\\n+  {\t\t\t\t\t\t\t\t\\\n+    return n(a, b);\t\t\t\t\t\t\\\n+  }\n+\n+F(float,min1)\n+F(float,min2)\n+F(float,max1)\n+F(float,max2)\n+\n+F(double,min1)\n+F(double,min2)\n+F(double,max1)\n+F(double,max2)\n+\n+int main()\n+{\n+  if (float_min1(0.f, -1.f) != -1.f) abort();\n+  if (float_min1(-1.f, 0.f) != -1.f) abort();\n+  if (float_min1(0.f, 1.f)  != 0.f)  abort();\n+  if (float_min1(1.f, 0.f)  != 0.f)  abort();\n+  if (float_min1(-1.f, 1.f) != -1.f) abort();\n+  if (float_min1(1.f, -1.f) != -1.f) abort();\n+  \n+  if (float_max1(0.f, -1.f) != 0.f)  abort();\n+  if (float_max1(-1.f, 0.f) != 0.f)  abort();\n+  if (float_max1(0.f, 1.f)  != 1.f)  abort();\n+  if (float_max1(1.f, 0.f)  != 1.f)  abort();\n+  if (float_max1(-1.f, 1.f) != 1.f)  abort();\n+  if (float_max1(1.f, -1.f) != 1.f)  abort();\n+  \n+  if (float_min2(0.f, -1.f) != -1.f) abort();\n+  if (float_min2(-1.f, 0.f) != -1.f) abort();\n+  if (float_min2(0.f, 1.f)  != 0.f)  abort();\n+  if (float_min2(1.f, 0.f)  != 0.f)  abort();\n+  if (float_min2(-1.f, 1.f) != -1.f) abort();\n+  if (float_min2(1.f, -1.f) != -1.f) abort();\n+  \n+  if (float_max2(0.f, -1.f) != 0.f)  abort();\n+  if (float_max2(-1.f, 0.f) != 0.f)  abort();\n+  if (float_max2(0.f, 1.f)  != 1.f)  abort();\n+  if (float_max2(1.f, 0.f)  != 1.f)  abort();\n+  if (float_max2(-1.f, 1.f) != 1.f)  abort();\n+  if (float_max2(1.f, -1.f) != 1.f)  abort();\n+  \n+  if (double_min1(0., -1.) != -1.) abort();\n+  if (double_min1(-1., 0.) != -1.) abort();\n+  if (double_min1(0., 1.)  != 0.)  abort();\n+  if (double_min1(1., 0.)  != 0.)  abort();\n+  if (double_min1(-1., 1.) != -1.) abort();\n+  if (double_min1(1., -1.) != -1.) abort();\n+  \n+  if (double_max1(0., -1.) != 0.)  abort();\n+  if (double_max1(-1., 0.) != 0.)  abort();\n+  if (double_max1(0., 1.)  != 1.)  abort();\n+  if (double_max1(1., 0.)  != 1.)  abort();\n+  if (double_max1(-1., 1.) != 1.)  abort();\n+  if (double_max1(1., -1.) != 1.)  abort();\n+  \n+  if (double_min2(0., -1.) != -1.) abort();\n+  if (double_min2(-1., 0.) != -1.) abort();\n+  if (double_min2(0., 1.)  != 0.)  abort();\n+  if (double_min2(1., 0.)  != 0.)  abort();\n+  if (double_min2(-1., 1.) != -1.) abort();\n+  if (double_min2(1., -1.) != -1.) abort();\n+  \n+  if (double_max2(0., -1.) != 0.)  abort();\n+  if (double_max2(-1., 0.) != 0.)  abort();\n+  if (double_max2(0., 1.)  != 1.)  abort();\n+  if (double_max2(1., 0.)  != 1.)  abort();\n+  if (double_max2(-1., 1.) != 1.)  abort();\n+  if (double_max2(1., -1.) != 1.)  abort();\n+  \n+  exit(0);\n+}"}, {"sha": "72527d7b4e9d7d1be85865e431f37da0c8c76219", "filename": "gcc/testsuite/gcc.c-torture/execute/pr39501.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad2bccb9b17ca771009135da32d71ee9e1a83d1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39501.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad2bccb9b17ca771009135da32d71ee9e1a83d1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39501.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39501.x?ref=aad2bccb9b17ca771009135da32d71ee9e1a83d1", "patch": "@@ -0,0 +1,2 @@\n+set additional_flags \"-ffast-math\"\n+return 0"}]}