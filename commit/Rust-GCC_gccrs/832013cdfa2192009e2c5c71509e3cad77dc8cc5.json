{"sha": "832013cdfa2192009e2c5c71509e3cad77dc8cc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMyMDEzY2RmYTIxOTIwMDllMmM1YzcxNTA5ZTNjYWQ3N2RjOGNjNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-03-17T23:05:06Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-03-17T23:05:06Z"}, "message": "update_web_docs: Handle -r and -d options to generate docs for a release or branch in a subdirectory.\n\n\t* update_web_docs: Handle -r and -d options to generate docs for a\n\trelease or branch in a subdirectory.  Determine names of G77 news\n\tand bugs files and contributors file after updated docs have been\n\tinstalled, not before.  Don't remove files from a subdirectory.\n\tDon't generate manuals for gcov (included in the GCC manual) or\n\tiostream (obsolete).  Do generate manuals for cppinternals, gcj\n\tand porting.  Update regular expressions for detecting whether\n\tfiles have really changed when regenerated.\n\nFrom-SVN: r40589", "tree": {"sha": "1fa43c207c14d1eeeaa5b18aca56c6dd821695e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fa43c207c14d1eeeaa5b18aca56c6dd821695e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/832013cdfa2192009e2c5c71509e3cad77dc8cc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/832013cdfa2192009e2c5c71509e3cad77dc8cc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/832013cdfa2192009e2c5c71509e3cad77dc8cc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/832013cdfa2192009e2c5c71509e3cad77dc8cc5/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d148b6aa8712b23a0a90d793799abf59507122f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d148b6aa8712b23a0a90d793799abf59507122f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d148b6aa8712b23a0a90d793799abf59507122f7"}], "stats": {"total": 117, "additions": 98, "deletions": 19}, "files": [{"sha": "1f4cedc83e9dee8bf6954da287492c0b73451ea3", "filename": "maintainer-scripts/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/832013cdfa2192009e2c5c71509e3cad77dc8cc5/maintainer-scripts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/832013cdfa2192009e2c5c71509e3cad77dc8cc5/maintainer-scripts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2FChangeLog?ref=832013cdfa2192009e2c5c71509e3cad77dc8cc5", "patch": "@@ -1,3 +1,14 @@\n+2001-03-17  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* update_web_docs: Handle -r and -d options to generate docs for a\n+\trelease or branch in a subdirectory.  Determine names of G77 news\n+\tand bugs files and contributors file after updated docs have been\n+\tinstalled, not before.  Don't remove files from a subdirectory.\n+\tDon't generate manuals for gcov (included in the GCC manual) or\n+\tiostream (obsolete).  Do generate manuals for cppinternals, gcj\n+\tand porting.  Update regular expressions for detecting whether\n+\tfiles have really changed when regenerated.\n+\n 2001-03-15  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* update_web_docs: Use /usr/local/bin/texi2html rather than"}, {"sha": "cfaf80f46043bbfeb146d1ec6d1e293451609395", "filename": "maintainer-scripts/update_web_docs", "status": "modified", "additions": 87, "deletions": 19, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/832013cdfa2192009e2c5c71509e3cad77dc8cc5/maintainer-scripts%2Fupdate_web_docs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/832013cdfa2192009e2c5c71509e3cad77dc8cc5/maintainer-scripts%2Fupdate_web_docs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fupdate_web_docs?ref=832013cdfa2192009e2c5c71509e3cad77dc8cc5", "patch": "@@ -7,6 +7,72 @@ export CVSROOT\n PATH=/usr/local/bin:$PATH\n WWWBASE=/www/gcc/htdocs\n \n+# Process options -rrelease and -ddirectory\n+RELEASE=\"\"\n+SUBDIR=\"\"\n+\n+while [ $# -gt 0 ]; do\n+  case $1 in\n+    -r*)\n+      if [ -n \"$RELEASE\" ]; then\n+        echo \"Multiple releases specified\" >&2\n+\texit 1\n+      fi\n+      RELEASE=\"${1#-r}\"\n+      if [ -z \"$RELEASE\" ]; then\n+\tshift\n+\tRELEASE=\"${1#-r}\"\n+\tif [ -z \"$RELEASE\" ]; then\n+\t  echo \"No release specified with -r\" >&2\n+\t  exit 1\n+\tfi\n+      fi\n+      ;;\n+    -d*)\n+      if [ -n \"$SUBDIR\" ]; then\n+        echo \"Multiple subdirectories specified\" >&2\n+\texit 1\n+      fi\n+      SUBDIR=\"${1#-d}\"\n+      if [ -z \"$SUBDIR\" ]; then\n+\tshift\n+\tSUBDIR=\"${1#-d}\"\n+\tif [ -z \"$SUBDIR\" ]; then\n+\t  echo \"No subdirectory specified with -d\" >&2\n+\t  exit 1\n+\tfi\n+      fi\n+      ;;\n+    *)\n+      echo \"Unknown argument \\\"$1\\\"\" >&2\n+      exit 1\n+      ;;\n+  esac\n+  shift\n+done\n+\n+if [ -n \"$RELEASE\" ] && [ -z \"$SUBDIR\" ]; then\n+  echo \"Release specified without subdirectory\" >&2\n+  exit 1\n+fi\n+\n+if [ -z \"$SUBDIR\" ]; then\n+  DOCSDIR=$WWWBASE/onlinedocs\n+else\n+  DOCSDIR=$WWWBASE/onlinedocs/$SUBDIR\n+fi\n+\n+if [ ! -d $DOCSDIR ]; then\n+  mkdir $DOCSDIR\n+fi\n+\n+if [ -z \"$RELEASE\" ]; then\n+  RELEASE=HEAD\n+  DO_THANKS_HTML=y\n+else\n+  DO_THANKS_HTML=n\n+fi\n+\n WORKDIR=/tmp/gcc-doc-update.$$\n \n /bin/rm -rf $WORKDIR\n@@ -21,11 +87,11 @@ find $CVSROOT/gcc -name \\*.texi,v -print | fgrep -v -f/home/gccadmin/scripts/doc\n # Checkout all the texi files and get them into a single directory.\n # If we ever have texi files with the same name we'll have to do this\n # differently.\n-cvs -Q co `cat FILES`\n+cvs -Q co -r$RELEASE `cat FILES`\n mv `find . -name \\*.texi -print` .\n \n # Now convert the relavent files from texi to html \n-for file in c-tree cpp chill gcc gcov gxxint g77 iostream objc-features; do \n+for file in c-tree cpp chill cppinternals gcc gcj gxxint g77 objc-features porting; do \n   /usr/local/bin/texi2html -glossary -menu -split_chapter ${file}.texi\n done\n \n@@ -34,33 +100,33 @@ for file in *.html; do\n   cat $file | gzip --best > $file.gz\n done\n \n-news_file=`grep \"News About GNU Fortran\" $WWWBASE/onlinedocs/g77_toc.html | sed -e '/HREF=.*[^.]/  s#^.*HREF=\"##g' | sed -e 's%#SEC.*%%g'`\n-bugs_file=`grep \"Known Causes of Trouble with GNU Fortran\" $WWWBASE/onlinedocs/g77_toc.html | sed -e '/HREF=.*[^.]/  s#^.*HREF=\"##g' | sed -e 's%#SEC.*%%g'`\n-contrib_file=`grep \"Contributors to GCC\" $WWWBASE/onlinedocs/gcc_toc.html | sed -e '/HREF=.*[^.]/  s#^.*HREF=\"##g' | sed -e 's%#SEC.*%%g'`\n-\n # On the 15th of the month, wipe all the old files from the\n # web server.\n today=`date +%d`\n if test $today = 15; then\n-  find $WWWBASE/onlinedocs -type f -print | grep -v index.html | xargs rm\n+  find $DOCSDIR -type f -maxdepth 1 -print | grep -v index.html | xargs rm\n fi\n \n # And copy the resulting html files to the web server\n for file in *.html; do\n-  cat $WWWBASE/onlinedocs/$file | \n-    sed -e '/^This document was generated on/d' \\\n-        -e '/^<!-- Created by texi/d' > file1\n+  cat $DOCSDIR/$file | \n+    sed -e '/^<!-- Created on/d' \\\n+        -e '/^by <I>GCC Administrator<\\/I> on/d' > file1\n   cat $file |\n-    sed -e '/^This document was generated on/d' \\\n-        -e '/^<!-- Created by texi/d' > file2\n+    sed -e '/^<!-- Created on/d' \\\n+        -e '/^by <I>GCC Administrator<\\/I> on/d' > file2\n   if cmp -s file1 file2; then\n     :\n   else\n-    cp $file ${file}.gz $WWWBASE/onlinedocs\n+    cp $file ${file}.gz $DOCSDIR\n   fi\n done\n \n-cd $WWWBASE/onlinedocs\n+news_file=`grep \"News About GNU Fortran\" $DOCSDIR/g77_toc.html | sed -e '/HREF=.*[^.]/  s#^.*HREF=\"##g' | sed -e 's%#SEC.*%%g'`\n+bugs_file=`grep \"Known Causes of Trouble with GNU Fortran\" $DOCSDIR/g77_toc.html | sed -e '/HREF=.*[^.]/  s#^.*HREF=\"##g' | sed -e 's%#SEC.*%%g'`\n+contrib_file=`grep \"Contributors to GCC\" $DOCSDIR/gcc_toc.html | sed -e '/HREF=.*[^.]/  s#^.*HREF=\"##g' | sed -e 's%#SEC.*%%g'`\n+\n+cd $DOCSDIR\n \n rm -f g77_news.html\n rm -f g77_bugs.html\n@@ -71,10 +137,12 @@ ln $bugs_file g77_bugs.html\n ln ${news_file}.gz g77_news.html.gz\n ln ${bugs_file}.gz g77_bugs.html.gz\n \n-cd $WWWBASE\n-rm -f thanks.html\n-rm -f thanks.html.gz\n-ln onlinedocs/$contrib_file thanks.html\n-ln onlinedocs/${contrib_file}.gz thanks.html.gz\n+if [ \"$DO_THANKS_HTML\" = y ]; then\n+  cd $WWWBASE\n+  rm -f thanks.html\n+  rm -f thanks.html.gz\n+  ln onlinedocs/$contrib_file thanks.html\n+  ln onlinedocs/${contrib_file}.gz thanks.html.gz\n+fi\n \n rm -rf $WORKDIR"}]}