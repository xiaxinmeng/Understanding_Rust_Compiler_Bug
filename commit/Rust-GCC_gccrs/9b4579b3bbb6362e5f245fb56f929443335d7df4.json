{"sha": "9b4579b3bbb6362e5f245fb56f929443335d7df4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI0NTc5YjNiYmI2MzYyZTVmMjQ1ZmI1NmY5Mjk0NDMzMzVkN2RmNA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-01-17T18:25:37Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-01-17T18:25:37Z"}, "message": "* gjavah.c (print_field_info): Allow non-static final fields.\n\nFrom-SVN: r31466", "tree": {"sha": "aaf1a5e37096c283389fd0ef7ce0a55933864b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaf1a5e37096c283389fd0ef7ce0a55933864b03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b4579b3bbb6362e5f245fb56f929443335d7df4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b4579b3bbb6362e5f245fb56f929443335d7df4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b4579b3bbb6362e5f245fb56f929443335d7df4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b4579b3bbb6362e5f245fb56f929443335d7df4/comments", "author": null, "committer": null, "parents": [{"sha": "9311a396bc5eda682ddca201dd92b931e1d371c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9311a396bc5eda682ddca201dd92b931e1d371c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9311a396bc5eda682ddca201dd92b931e1d371c3"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "85c0b05d292ab0ae450fe8e37ab322d7e7591bf4", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b4579b3bbb6362e5f245fb56f929443335d7df4/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b4579b3bbb6362e5f245fb56f929443335d7df4/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=9b4579b3bbb6362e5f245fb56f929443335d7df4", "patch": "@@ -1,3 +1,7 @@\n+2000-01-17  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* gjavah.c (print_field_info): Allow non-static final fields.\n+\n 2000-01-16  Anthony Green  <green@cygnus.com>\n \n \t* parse.y (build_string_concatenation): Only use"}, {"sha": "4f973171592a15655be08fe81050539a0367d673", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b4579b3bbb6362e5f245fb56f929443335d7df4/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b4579b3bbb6362e5f245fb56f929443335d7df4/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=9b4579b3bbb6362e5f245fb56f929443335d7df4", "patch": "@@ -1,7 +1,7 @@\n /* Program to write C++-suitable header files from a Java(TM) .class\n    file.  This is similar to SUN's javah.\n \n-Copyright (C) 1996, 1998, 1999 Free Software Foundation, Inc.\n+Copyright (C) 1996, 1998, 1999, 2000 Free Software Foundation, Inc.\n \n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -436,7 +436,11 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n       return;\n     }\n \n-  if (flags & ACC_FINAL)\n+  fputs (\"  \", out);\n+  if ((flags & ACC_STATIC))\n+    fputs (\"static \", out);\n+\n+  if ((flags & ACC_FINAL))\n     {\n       if (current_field_value > 0)\n \t{\n@@ -449,7 +453,7 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n \t      {\n \t\tjint num;\n \t\tint most_negative = 0;\n-\t\tfputs (\"  static const jint \", out);\n+\t\tfputs (\"const jint \", out);\n \t\tprint_field_name (out, jcf, name_index, 0);\n \t\tfputs (\" = \", out);\n \t\tnum = JPOOL_INT (jcf, current_field_value);\n@@ -468,7 +472,7 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n \t      {\n \t\tjlong num;\n \t\tint most_negative = 0;\n-\t\tfputs (\"  static const jlong \", out);\n+\t\tfputs (\"const jlong \", out);\n \t\tprint_field_name (out, jcf, name_index, 0);\n \t\tfputs (\" = \", out);\n \t\tnum = JPOOL_LONG (jcf, current_field_value);\n@@ -486,7 +490,7 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n \t    case CONSTANT_Float:\n \t      {\n \t\tjfloat fnum = JPOOL_FLOAT (jcf, current_field_value);\n-\t\tfputs (\"  static const jfloat \", out);\n+\t\tfputs (\"const jfloat \", out);\n \t\tprint_field_name (out, jcf, name_index, 0);\n \t\tif (! java_float_finite (fnum))\n \t\t  fputs (\";\\n\", out);\n@@ -497,7 +501,7 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n \t    case CONSTANT_Double:\n \t      {\n \t\tjdouble dnum = JPOOL_DOUBLE (jcf, current_field_value);\n-\t\tfputs (\"  static const jdouble \", out);\n+\t\tfputs (\"const jdouble \", out);\n \t\tprint_field_name (out, jcf, name_index, 0);\n \t\tif (! java_double_finite (dnum))\n \t\t  fputs (\";\\n\", out);\n@@ -517,10 +521,6 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n \t}\n     }\n \n-  fputs (\"  \", out);\n-  if ((flags & ACC_STATIC))\n-    fputs (\"static \", out);\n-\n   override = get_field_name (jcf, name_index, flags);\n   print_c_decl (out, jcf, name_index, sig_index, 0, override);\n   fputs (\";\\n\", out);"}]}