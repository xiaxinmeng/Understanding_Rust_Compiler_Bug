{"sha": "6c74ff23008028116fa0ee942d2905e56a55fbab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM3NGZmMjMwMDgwMjgxMTZmYTBlZTk0MmQyOTA1ZTU2YTU1ZmJhYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-03-27T03:01:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-03-27T03:01:41Z"}, "message": "re PR c++/52597 ([C++11] confusing diagnostics for invalid use of non-static member function in decltype)\n\n\tPR c++/52597\n\t* typeck.c (invalid_nonstatic_memfn_p): Use get_first_fn.  Take tree.\n\t* semantics.c (finish_decltype_type): Check it before type_unknown_p.\n\t* cp-tree.h: Adjust prototype.\n\nFrom-SVN: r197131", "tree": {"sha": "2e50cb35e78c966ced31e42dc6a61b9320d90a4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e50cb35e78c966ced31e42dc6a61b9320d90a4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c74ff23008028116fa0ee942d2905e56a55fbab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c74ff23008028116fa0ee942d2905e56a55fbab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c74ff23008028116fa0ee942d2905e56a55fbab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c74ff23008028116fa0ee942d2905e56a55fbab/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "845367eb3b3a6845a603e2d959c85fba9ce921da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845367eb3b3a6845a603e2d959c85fba9ce921da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/845367eb3b3a6845a603e2d959c85fba9ce921da"}], "stats": {"total": 56, "additions": 42, "deletions": 14}, "files": [{"sha": "3fe07d9711b75917281a5d443c4a4e540697590b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6c74ff23008028116fa0ee942d2905e56a55fbab", "patch": "@@ -1,5 +1,10 @@\n 2013-03-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/52597\n+\t* typeck.c (invalid_nonstatic_memfn_p): Use get_first_fn.  Take tree.\n+\t* semantics.c (finish_decltype_type): Check it before type_unknown_p.\n+\t* cp-tree.h: Adjust prototype.\n+\n \tPR c++/45282\n \t* typeck2.c (build_m_component_ref): Handle prvalue object.\n "}, {"sha": "36671d5c3a3f6f14d132c004df37ee09090663bd", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=6c74ff23008028116fa0ee942d2905e56a55fbab", "patch": "@@ -5988,7 +5988,7 @@ extern tree build_typed_address\t\t\t(tree, tree);\n extern tree build_nop\t\t\t\t(tree, tree);\n extern tree non_reference\t\t\t(tree);\n extern tree lookup_anon_field\t\t\t(tree, tree);\n-extern bool invalid_nonstatic_memfn_p\t\t(const_tree, tsubst_flags_t);\n+extern bool invalid_nonstatic_memfn_p\t\t(tree, tsubst_flags_t);\n extern tree convert_member_func_to_ptr\t\t(tree, tree, tsubst_flags_t);\n extern tree convert_ptrmem\t\t\t(tree, tree, bool, bool,\n \t\t\t\t\t\t tsubst_flags_t);"}, {"sha": "e8fc778dd2ec36325fefa92144b60b6764e99e85", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=6c74ff23008028116fa0ee942d2905e56a55fbab", "patch": "@@ -5275,16 +5275,16 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p,\n \n   expr = resolve_nondeduced_context (expr);\n \n+  if (invalid_nonstatic_memfn_p (expr, complain))\n+    return error_mark_node;\n+\n   if (type_unknown_p (expr))\n     {\n       if (complain & tf_error)\n \terror (\"decltype cannot resolve address of overloaded function\");\n       return error_mark_node;\n     }\n \n-  if (invalid_nonstatic_memfn_p (expr, complain))\n-    return error_mark_node;\n-\n   /* To get the size of a static data member declared as an array of\n      unknown bound, we need to instantiate it.  */\n   if (TREE_CODE (expr) == VAR_DECL"}, {"sha": "8778b2cf7b917e736289a51a0c671b576bbadab2", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=6c74ff23008028116fa0ee942d2905e56a55fbab", "patch": "@@ -1766,9 +1766,16 @@ cxx_alignas_expr (tree e)\n    violates these rules.  */\n \n bool\n-invalid_nonstatic_memfn_p (const_tree expr, tsubst_flags_t complain)\n+invalid_nonstatic_memfn_p (tree expr, tsubst_flags_t complain)\n {\n-  if (expr && DECL_NONSTATIC_MEMBER_FUNCTION_P (expr))\n+  if (expr == NULL_TREE)\n+    return false;\n+  /* Don't enforce this in MS mode.  */\n+  if (flag_ms_extensions)\n+    return false;\n+  if (is_overloaded_fn (expr) && !really_overloaded_fn (expr))\n+    expr = get_first_fn (expr);\n+  if (DECL_NONSTATIC_MEMBER_FUNCTION_P (expr))\n     {\n       if (complain & tf_error)\n         error (\"invalid use of non-static member function\");"}, {"sha": "dc3332ac5253f33f38878a64f9d05577454e4b5c", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype50.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype50.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype50.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype50.C?ref=6c74ff23008028116fa0ee942d2905e56a55fbab", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/52597\n+// { dg-require-effective-target c++11 }\n+\n+struct A {\n+   int zip();\n+\n+   decltype(zip) bar0; // { dg-error \"invalid use of non-static member function\" }\n+   void bar1() {\n+     typedef decltype(this->A::zip) x; // { dg-error \"invalid use of non-static member function\" }\n+   }\n+   void bar2() {\n+     typedef decltype(A::zip) x; // { dg-error \"invalid use of non-static member function\" }\n+   }\n+};\n+\n+typedef decltype(A().zip) x; // { dg-error \"invalid use of non-static member function\" }\n+\n+// { dg-prune-output \"invalid type in declaration\" }"}, {"sha": "8d574e73087bde73ef73fdf44d5e9b87e6782fe0", "filename": "gcc/testsuite/g++.dg/template/overload6.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload6.C?ref=6c74ff23008028116fa0ee942d2905e56a55fbab", "patch": "@@ -4,7 +4,7 @@\n // PR 21592:ICE\n // Origin:  Volker Reichelt <reichelt@gcc.gnu.org>\n \n-template<typename T> void unique(T,T); // { dg-message \"note\" }\n+template<typename T> void unique(T,T);\n \n struct A\n {\n@@ -13,6 +13,5 @@ struct A\n \n template<int> void foo()\n {\n-  unique(A().begin); // { dg-error \"no matching function\" \"\" }\n-  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 16 }\n+  unique(A().begin); // { dg-error \"invalid use of non-static member function\" }\n }"}, {"sha": "076503202c01fffa00f3a27e109419f37588a9f4", "filename": "gcc/testsuite/g++.dg/template/ptrmem4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C?ref=6c74ff23008028116fa0ee942d2905e56a55fbab", "patch": "@@ -6,7 +6,7 @@\n // Pointer to member function template argument deduction ICE.\n \n \n-template <class CONT> void queryAliases(CONT& fill_me); // { dg-message \"queryAliases|no known conversion\" }\n+template <class CONT> void queryAliases(CONT& fill_me);\n \n struct SpyExample\n {\n@@ -16,5 +16,5 @@ struct SpyExample\n \n void SpyExample::ready()\n {\n-  queryAliases(inputs); // { dg-error \"matching|unresolved\" }\n+  queryAliases(inputs); // { dg-error \"invalid\" }\n }"}, {"sha": "714f628f5efbea6bd4fb70914676c36a92228bd8", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p11110.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp11110.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c74ff23008028116fa0ee942d2905e56a55fbab/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp11110.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp11110.C?ref=6c74ff23008028116fa0ee942d2905e56a55fbab", "patch": "@@ -6,7 +6,7 @@ class data;\n class conatiner {\n public:\n   virtual void* first    ();\n-  virtual data* contents (void* i);     // { dg-message \"conatiner::contents|no known conversion\" }\n+  virtual data* contents (void* i);\n };\n \n class user {\n@@ -17,6 +17,5 @@ private:\n };\n \n data* user::data1() const {\n-  return (_c.contents (_c.first));\t// { dg-error \"match\" } \n-  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 20 }\n+  return (_c.contents (_c.first)); // { dg-error \"invalid use of non-static member function\" }\n }"}]}