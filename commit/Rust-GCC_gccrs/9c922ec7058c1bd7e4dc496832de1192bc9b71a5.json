{"sha": "9c922ec7058c1bd7e4dc496832de1192bc9b71a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM5MjJlYzcwNThjMWJkN2U0ZGM0OTY4MzJkZTExOTJiYzliNzFhNQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-06-02T15:42:19Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-06-02T15:42:19Z"}, "message": "Revert this change:\n\n        * fold-const.c (fold): STRIP_NOPS when deciding whether or not\n\tsomething is a candidate for optimize_bit_field_compare.\n\nFrom-SVN: r27318", "tree": {"sha": "ecc17b6f37b6d8b4b4fd57c8d398185dd0f0777e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecc17b6f37b6d8b4b4fd57c8d398185dd0f0777e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c922ec7058c1bd7e4dc496832de1192bc9b71a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c922ec7058c1bd7e4dc496832de1192bc9b71a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c922ec7058c1bd7e4dc496832de1192bc9b71a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c922ec7058c1bd7e4dc496832de1192bc9b71a5/comments", "author": null, "committer": null, "parents": [{"sha": "679dcddbfc91a633636f9e1036695725e3a9ee95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/679dcddbfc91a633636f9e1036695725e3a9ee95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/679dcddbfc91a633636f9e1036695725e3a9ee95"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "94d093a017d9c1c37c7c3ceebba25cc24e901c92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c922ec7058c1bd7e4dc496832de1192bc9b71a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c922ec7058c1bd7e4dc496832de1192bc9b71a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c922ec7058c1bd7e4dc496832de1192bc9b71a5", "patch": "@@ -1,3 +1,9 @@\n+Wed Jun  2 15:44:15 1999  Mark Mitchell <mark@codesourcery.com>\n+\n+        Revert this change:\n+        * fold-const.c (fold): STRIP_NOPS when deciding whether or not\n+\tsomething is a candidate for optimize_bit_field_compare.\n+\n Wed Jun  2 21:53:05 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* sh.h (CONST_OK_FOR_I, CONST_OK_FOR_L): Cast VALUE to HOST_WIDE_INT."}, {"sha": "dc9ca938b7954aa5ca331cf339d5980323812aa0", "filename": "gcc/fold-const.c", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c922ec7058c1bd7e4dc496832de1192bc9b71a5/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c922ec7058c1bd7e4dc496832de1192bc9b71a5/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=9c922ec7058c1bd7e4dc496832de1192bc9b71a5", "patch": "@@ -6034,20 +6034,16 @@ fold (expr)\n \t}\n \n       /* If this is a comparison of a field, we may be able to simplify it.  */\n-      {\n-\ttree xarg0 = arg0;\n-\tSTRIP_NOPS (xarg0);\n-\tif ((TREE_CODE (xarg0) == COMPONENT_REF\n-\t     || TREE_CODE (xarg0) == BIT_FIELD_REF)\n-\t    && (code == EQ_EXPR || code == NE_EXPR)\n-\t    /* Handle the constant case even without -O\n-\t       to make sure the warnings are given.  */\n-\t    && (optimize || TREE_CODE (arg1) == INTEGER_CST))\n-\t  {\n-\t    t1 = optimize_bit_field_compare (code, type, xarg0, arg1);\n-\t    return t1 ? t1 : t;\n-\t  }\n-      }\n+      if ((TREE_CODE (arg0) == COMPONENT_REF\n+\t   || TREE_CODE (arg0) == BIT_FIELD_REF)\n+\t  && (code == EQ_EXPR || code == NE_EXPR)\n+\t  /* Handle the constant case even without -O\n+\t     to make sure the warnings are given.  */\n+\t  && (optimize || TREE_CODE (arg1) == INTEGER_CST))\n+\t{\n+\t  t1 = optimize_bit_field_compare (code, type, arg0, arg1);\n+\t  return t1 ? t1 : t;\n+\t}\n \n       /* If this is a comparison of complex values and either or both sides\n \t are a COMPLEX_EXPR or COMPLEX_CST, it is best to split up the"}]}