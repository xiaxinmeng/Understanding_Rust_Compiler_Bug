{"sha": "31aedc36c0234bfa1b6902e748032b9c49ed2f03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFhZWRjMzZjMDIzNGJmYTFiNjkwMmU3NDgwMzJiOWM0OWVkMmYwMw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-07-20T02:46:38Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-07-20T02:46:38Z"}, "message": "Revert patch for PR c++/16623.\n\nFrom-SVN: r84942", "tree": {"sha": "afc70f11d77ae96073c390118f32c23efadd5ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afc70f11d77ae96073c390118f32c23efadd5ffc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31aedc36c0234bfa1b6902e748032b9c49ed2f03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31aedc36c0234bfa1b6902e748032b9c49ed2f03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31aedc36c0234bfa1b6902e748032b9c49ed2f03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31aedc36c0234bfa1b6902e748032b9c49ed2f03/comments", "author": null, "committer": null, "parents": [{"sha": "e05de6f246b5bb905229c0f9365010d7adf15bdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05de6f246b5bb905229c0f9365010d7adf15bdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e05de6f246b5bb905229c0f9365010d7adf15bdc"}], "stats": {"total": 20, "additions": 6, "deletions": 14}, "files": [{"sha": "27e45ee9440a2c874c78c0e108dde4a12afdd4f7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aedc36c0234bfa1b6902e748032b9c49ed2f03/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aedc36c0234bfa1b6902e748032b9c49ed2f03/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=31aedc36c0234bfa1b6902e748032b9c49ed2f03", "patch": "@@ -1,3 +1,7 @@\n+2004-07-19  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tRevert patch for PR c++/16623.\n+\t\n 2004-07-19  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* except.c: Remove two spurious carriage returns."}, {"sha": "69f6d9e6e6fd504ce9e6c954934131203710b23f", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aedc36c0234bfa1b6902e748032b9c49ed2f03/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aedc36c0234bfa1b6902e748032b9c49ed2f03/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=31aedc36c0234bfa1b6902e748032b9c49ed2f03", "patch": "@@ -2558,11 +2558,7 @@ add_implicitly_declared_members (tree t,\n      of the parameter to the assignment operator will be a const or\n      non-const reference.  */\n   if (!TYPE_HAS_ASSIGN_REF (t) && !TYPE_FOR_JAVA (t))\n-    {\n-      TYPE_HAS_ASSIGN_REF (t) = 1;\n-      TYPE_HAS_CONST_ASSIGN_REF (t) = !cant_have_const_assignment;\n-      CLASSTYPE_LAZY_ASSIGNMENT_OP (t) = 1;\n-    }\n+    TYPE_HAS_CONST_ASSIGN_REF (t) = !cant_have_const_assignment;\n   \n   /* Now, hook all of the new functions on to TYPE_METHODS,\n      and add them to the CLASSTYPE_METHOD_VEC.  */"}, {"sha": "ca7eae30f3b5605c5d67338a1532c3ef4cac16d0", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aedc36c0234bfa1b6902e748032b9c49ed2f03/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aedc36c0234bfa1b6902e748032b9c49ed2f03/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=31aedc36c0234bfa1b6902e748032b9c49ed2f03", "patch": "@@ -989,7 +989,6 @@ struct lang_type_class GTY(())\n \n   unsigned lazy_default_ctor : 1;\n   unsigned lazy_copy_ctor : 1;\n-  unsigned lazy_assignment_op : 1;\n   unsigned has_const_init_ref : 1;\n   unsigned has_complex_init_ref : 1;\n   unsigned has_complex_assign_ref : 1;\n@@ -1003,7 +1002,7 @@ struct lang_type_class GTY(())\n   /* There are some bits left to fill out a 32-bit word.  Keep track\n      of this by updating the size of this bitfield whenever you add or\n      remove a flag.  */\n-  unsigned dummy : 8;\n+  unsigned dummy : 9;\n \n   tree primary_base;\n   tree vfields;\n@@ -1098,11 +1097,6 @@ struct lang_type GTY(())\n #define CLASSTYPE_LAZY_COPY_CTOR(NODE) \\\n   (LANG_TYPE_CLASS_CHECK (NODE)->lazy_copy_ctor)\n \n-/* Nonzero means that NODE (a class type) has an assignment operator\n-   -- but that it has not yet been declared.  */\n-#define CLASSTYPE_LAZY_ASSIGNMENT_OP(NODE) \\\n-  (LANG_TYPE_CLASS_CHECK (NODE)->lazy_assignment_op)\n-\n /* Nonzero means that this _CLASSTYPE node overloads operator=(X&).  */\n #define TYPE_HAS_ASSIGN_REF(NODE) (LANG_TYPE_CLASS_CHECK (NODE)->has_assign_ref)\n "}, {"sha": "802d4c023fe68a4abbce52eb3d8405793ebf35a7", "filename": "gcc/cp/method.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aedc36c0234bfa1b6902e748032b9c49ed2f03/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aedc36c0234bfa1b6902e748032b9c49ed2f03/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=31aedc36c0234bfa1b6902e748032b9c49ed2f03", "patch": "@@ -1068,8 +1068,6 @@ lazily_declare_fn (special_function_kind sfk, tree type)\n       /* Create appropriate clones.  */\n       clone_function_decl (fn, /*update_method_vec=*/true);\n     }\n-  else if (sfk == sfk_assignment_operator)\n-    CLASSTYPE_LAZY_ASSIGNMENT_OP (type) = 0;\n \n   return fn;\n }"}]}