{"sha": "cbd9173403528e13cb4bcc60122bb420dab60a9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JkOTE3MzQwMzUyOGUxM2NiNGJjYzYwMTIyYmI0MjBkYWI2MGE5Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-15T23:41:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-15T23:41:08Z"}, "message": "(PRINT_OPERAND): Turned off: use default.\n\n(ASM_OUTPUT_{FLOAT,DOUBLE}_OPERAND): Defined.\n\nFrom-SVN: r13646", "tree": {"sha": "e9bc504a8ccb2d91fb76d16ddcecfe8c355d6471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9bc504a8ccb2d91fb76d16ddcecfe8c355d6471"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbd9173403528e13cb4bcc60122bb420dab60a9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd9173403528e13cb4bcc60122bb420dab60a9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbd9173403528e13cb4bcc60122bb420dab60a9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd9173403528e13cb4bcc60122bb420dab60a9b/comments", "author": null, "committer": null, "parents": [{"sha": "6a1ce4261fc24e5c52a47c1d40b07483249b0215", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a1ce4261fc24e5c52a47c1d40b07483249b0215", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a1ce4261fc24e5c52a47c1d40b07483249b0215"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "46aa30a7478a32cc154e643c2ec780afc37f7fa0", "filename": "gcc/config/m68k/tower-as.h", "status": "modified", "additions": 29, "deletions": 8, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd9173403528e13cb4bcc60122bb420dab60a9b/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd9173403528e13cb4bcc60122bb420dab60a9b/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ftower-as.h?ref=cbd9173403528e13cb4bcc60122bb420dab60a9b", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    For NCR Tower 32/4x0 and 32/6x0 running System V Release 3.\n-   Copyright (C) 1990, 1993, 1994, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1990, 1993, 1994, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Robert Andersson (ra@intsys.no), International Systems,\n    Oslo, Norway.\n \n@@ -50,6 +50,12 @@ Boston, MA 02111-1307, USA.  */\n #undef LOCAL_LABEL_PREFIX\n #define LOCAL_LABEL_PREFIX \"\"\n \n+/* The prefix to add to user-visible assembler symbols.  */\n+/* We do not want leading underscores.  */\n+\n+#undef USER_LABEL_PREFIX\n+#define USER_LABEL_PREFIX \"\"\n+\n /* These four macros control how m68k.md is expanded.  */\n \n #define MOTOROLA\t\t/* Use Motorola syntax rather than \"MIT\" */\n@@ -323,6 +329,27 @@ do { long l;\t\t\t\t\t\\\n #define ASM_OUTPUT_SKIP(FILE,SIZE)  \\\n   fprintf (FILE, \"\\tspace %d\\n\", (SIZE))\n \n+/* Output a float value (represented as a C double) as an immediate operand.\n+   This macro is a 68k-specific macro.  */\n+\n+#undef ASM_OUTPUT_FLOAT_OPERAND\n+#define ASM_OUTPUT_FLOAT_OPERAND(CODE,FILE,VALUE)\t\t\t\\\n+ do { long l;\t\t\t\t\t\t\t\t\\\n+      REAL_VALUE_TO_TARGET_SINGLE (r, l);\t\t\t\t\\\n+      /* Use hex representation even if CODE is f.  as needs it.  */\t\\\n+      fprintf ((FILE), \"&0x%lx\", l);\t\t\t\t\t\\\n+    } while (0)\n+\n+/* Output a double value (represented as a C double) as an immediate operand.\n+   This macro is a 68k-specific macro.  */\n+#undef ASM_OUTPUT_DOUBLE_OPERAND\n+#define ASM_OUTPUT_DOUBLE_OPERAND(FILE,VALUE)\t\t\t\t\\\n+ do { long l[2];\t\t\t\t\t\t\t\\\n+      REAL_VALUE_TO_TARGET_DOUBLE (VALUE, l);\t\t\t\t\\\n+      fprintf ((FILE), \"&0x%lx%08lx\", l[0], l[1]);\t\t\t\\\n+    } while (0)\n+\n+#if 0\n #undef PRINT_OPERAND\n #define PRINT_OPERAND(FILE, X, CODE)  \\\n { if (CODE == '.') fprintf (FILE, \".\");\t\t\t\t\t\\\n@@ -354,6 +381,7 @@ do { long l;\t\t\t\t\t\\\n       REAL_VALUE_FROM_CONST_DOUBLE (r, X);\t\t\t\t\\\n       ASM_OUTPUT_LONG_DOUBLE_OPERAND (FILE, r); }\t\t\t\\\n   else { putc ('&', FILE); output_addr_const (FILE, X); }}\n+#endif\n \n /* Note that this contains a kludge that knows that the only reason\n    we have an address (plus (label_ref...) (reg...))\n@@ -586,10 +614,3 @@ do { fprintf (asm_out_file, \"\\ttag\\t\");\t\\\n     assemble_name (FILE, NAME);\t\t\t\\\n     fprintf (FILE, \",-(%%sp)\\n\");\t\t\\\n   } while (0)\n-\n-/* The prefix to add to user-visible assembler symbols. */\n-\n-/* We do not want leading underscores.  */\n-\n-#undef USER_LABEL_PREFIX\n-#define USER_LABEL_PREFIX \"\""}]}