{"sha": "a8a8cbb7599563f3a2ae7de6984e1279b3dec3d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThhOGNiYjc1OTk1NjNmM2EyYWU3ZGU2OTg0ZTEyNzliM2RlYzNkMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-15T12:48:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-15T12:48:12Z"}, "message": "(expand_builtin, case BUILT_IN_SETJMP): Shows clobbers FP and all caller-save registers.\n\n(expand_builtin, case BUILT_IN_SETJMP): Shows clobbers FP and all\ncaller-save registers.\nSet current_function_has_nonlocal_goto.\n\nFrom-SVN: r11276", "tree": {"sha": "23d06213d98cd05321608f6cd27a8bd837b13ec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23d06213d98cd05321608f6cd27a8bd837b13ec2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8a8cbb7599563f3a2ae7de6984e1279b3dec3d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a8cbb7599563f3a2ae7de6984e1279b3dec3d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8a8cbb7599563f3a2ae7de6984e1279b3dec3d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a8cbb7599563f3a2ae7de6984e1279b3dec3d2/comments", "author": null, "committer": null, "parents": [{"sha": "bc9fadfb1c0b1f9a1d4038ddab92a3dda133983a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9fadfb1c0b1f9a1d4038ddab92a3dda133983a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc9fadfb1c0b1f9a1d4038ddab92a3dda133983a"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "41fc899eb13727978e8656b50a386b001cec5fc9", "filename": "gcc/expr.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a8cbb7599563f3a2ae7de6984e1279b3dec3d2/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a8cbb7599563f3a2ae7de6984e1279b3dec3d2/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=a8a8cbb7599563f3a2ae7de6984e1279b3dec3d2", "patch": "@@ -8514,6 +8514,7 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \trtx lab1 = gen_label_rtx (), lab2 = gen_label_rtx ();\n \tenum machine_mode sa_mode = Pmode;\n \trtx stack_save;\n+\tint i;\n \n \tif (target == 0 || GET_CODE (target) != REG\n \t    || REGNO (target) < FIRST_PSEUDO_REGISTER)\n@@ -8551,6 +8552,17 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \temit_barrier ();\n \temit_label (lab1);\n \n+\t/* Note that setjmp clobbers FP when we get here, so we have to\n+\t   make sure it's marked as used by this function.  Also,\n+\t   some inner function might use a call-saved register, so we\n+\t   have to set up to save all of them here.  */\n+\temit_insn (gen_rtx (USE, VOIDmode, hard_frame_pointer_rtx));\n+\n+\tfor (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n+\t  if (! call_used_regs[i])\n+\t    emit_insn (gen_rtx (USE, VOIDmode,\n+\t\t\t\tgen_rtx (REG, reg_raw_mode[i], i)));\n+\n \t/* Now put in the code to restore the frame pointer, and argument\n \t   pointer, if needed.  The code below is from expand_end_bindings\n \t   in stmt.c; see detailed documentation there.  */\n@@ -8559,12 +8571,13 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n #endif\n \t  emit_move_insn (virtual_stack_vars_rtx, hard_frame_pointer_rtx);\n \n+\tcurrent_function_has_nonlocal_goto = 1;\n+\n #if ARG_POINTER_REGNUM != HARD_FRAME_POINTER_REGNUM\n \tif (fixed_regs[ARG_POINTER_REGNUM])\n \t  {\n #ifdef ELIMINABLE_REGS\n \t    static struct elims {int from, to;} elim_regs[] = ELIMINABLE_REGS;\n-\t    int i;\n \n \t    for (i = 0; i < sizeof elim_regs / sizeof elim_regs[0]; i++)\n \t      if (elim_regs[i].from == ARG_POINTER_REGNUM"}]}