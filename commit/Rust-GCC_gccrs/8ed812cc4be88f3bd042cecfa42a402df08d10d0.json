{"sha": "8ed812cc4be88f3bd042cecfa42a402df08d10d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVkODEyY2M0YmU4OGYzYmQwNDJjZWNmYTQyYTQwMmRmMDhkMTBkMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-12-20T14:36:56Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-12-20T14:36:56Z"}, "message": "re PR libstdc++/55741 (bootstrap fails in libstdc++-v3/src/c++11/thread.cc)\n\n\tPR libstdc++/55741\n\t* acinclude.m4 (GLIBCXX_ENABLE_LIBSTDCXX_TIME): Check for Sleep.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* src/c++11/thread.cc (__sleep_for): Use Sleep if available.\n\nFrom-SVN: r194635", "tree": {"sha": "0d2a84cb3f0ff31372af99337ec596b7f10c07a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d2a84cb3f0ff31372af99337ec596b7f10c07a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ed812cc4be88f3bd042cecfa42a402df08d10d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ed812cc4be88f3bd042cecfa42a402df08d10d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ed812cc4be88f3bd042cecfa42a402df08d10d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ed812cc4be88f3bd042cecfa42a402df08d10d0/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5ae0ba6636d9d5e8b24b0859b860365aa4d943c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ae0ba6636d9d5e8b24b0859b860365aa4d943c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ae0ba6636d9d5e8b24b0859b860365aa4d943c"}], "stats": {"total": 66, "additions": 61, "deletions": 5}, "files": [{"sha": "41649b7c7e330b0e9af7a8ad742e4ed8da49b879", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed812cc4be88f3bd042cecfa42a402df08d10d0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed812cc4be88f3bd042cecfa42a402df08d10d0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8ed812cc4be88f3bd042cecfa42a402df08d10d0", "patch": "@@ -1,3 +1,11 @@\n+2012-12-20  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/55741\n+\t* acinclude.m4 (GLIBCXX_ENABLE_LIBSTDCXX_TIME): Check for Sleep.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* src/c++11/thread.cc (__sleep_for): Use Sleep if available.\n+\n 2012-12-18  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* doc/xml/manual/abi.xml: Update URLs for C++ ABI."}, {"sha": "2d4d7f022f9022cc15a17f45ec8711af0fc1cfda", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed812cc4be88f3bd042cecfa42a402df08d10d0/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed812cc4be88f3bd042cecfa42a402df08d10d0/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=8ed812cc4be88f3bd042cecfa42a402df08d10d0", "patch": "@@ -1301,6 +1301,17 @@ AC_DEFUN([GLIBCXX_ENABLE_LIBSTDCXX_TIME], [\n       AC_MSG_RESULT($ac_has_usleep)\n   fi\n \n+  if test x\"$ac_has_nanosleep$ac_has_sleep\" = x\"nono\"; then\n+      AC_MSG_CHECKING([for Sleep])\n+      AC_TRY_COMPILE([#include <windows.h>],\n+                     [Sleep(1)],\n+                     [ac_has_win32_sleep=yes],[ac_has_win32_sleep=no])\n+      if test x\"$ac_has_win32_sleep\" = x\"yes\"; then\n+        AC_DEFINE(HAVE_WIN32_SLEEP,1, [Defined if Sleep exists.])\n+      fi\n+      AC_MSG_RESULT($ac_has_win32_sleep)\n+  fi\n+\n   AC_SUBST(GLIBCXX_LIBS)\n \n   CXXFLAGS=\"$ac_save_CXXFLAGS\""}, {"sha": "dd14b91ebfd3f06c891703f57a17b39947d7e74a", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed812cc4be88f3bd042cecfa42a402df08d10d0/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed812cc4be88f3bd042cecfa42a402df08d10d0/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=8ed812cc4be88f3bd042cecfa42a402df08d10d0", "patch": "@@ -460,6 +460,9 @@\n /* Define to 1 if you have the <wctype.h> header file. */\n #undef HAVE_WCTYPE_H\n \n+/* Defined if Sleep exists. */\n+#undef HAVE_WIN32_SLEEP\n+\n /* Define if writev is available in <sys/uio.h>. */\n #undef HAVE_WRITEV\n "}, {"sha": "9e8360200b46d85ad5bcc916f6184005fbd9e7ee", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed812cc4be88f3bd042cecfa42a402df08d10d0/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed812cc4be88f3bd042cecfa42a402df08d10d0/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=8ed812cc4be88f3bd042cecfa42a402df08d10d0", "patch": "@@ -19900,6 +19900,35 @@ $as_echo \"#define HAVE_USLEEP 1\" >>confdefs.h\n $as_echo \"$ac_has_usleep\" >&6; }\n   fi\n \n+  if test x\"$ac_has_nanosleep$ac_has_sleep\" = x\"nono\"; then\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for Sleep\" >&5\n+$as_echo_n \"checking for Sleep... \" >&6; }\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <windows.h>\n+int\n+main ()\n+{\n+Sleep(1)\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  ac_has_win32_sleep=yes\n+else\n+  ac_has_win32_sleep=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+      if test x\"$ac_has_win32_sleep\" = x\"yes\"; then\n+\n+$as_echo \"#define HAVE_WIN32_SLEEP 1\" >>confdefs.h\n+\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_has_win32_sleep\" >&5\n+$as_echo \"$ac_has_win32_sleep\" >&6; }\n+  fi\n+\n \n \n   CXXFLAGS=\"$ac_save_CXXFLAGS\""}, {"sha": "b04e6dc36e3de01053f4c0d7819f3b817c4f1f97", "filename": "libstdc++-v3/src/c++11/thread.cc", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed812cc4be88f3bd042cecfa42a402df08d10d0/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed812cc4be88f3bd042cecfa42a402df08d10d0/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc?ref=8ed812cc4be88f3bd042cecfa42a402df08d10d0", "patch": "@@ -61,6 +61,8 @@ static inline int get_nprocs()\n #ifndef _GLIBCXX_USE_NANOSLEEP\n # ifdef _GLIBCXX_HAVE_SLEEP\n #  include <unistd.h>\n+# elif defined(_GLIBCXX_HAVE_WIN32_SLEEP)\n+#  include <windows.h>\n # else\n #  error \"No sleep function known for this target\"\n # endif\n@@ -170,9 +172,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tstatic_cast<long>(__ns.count())\n       };\n     ::nanosleep(&__ts, 0);\n-#else\n-# ifdef _GLIBCXX_HAVE_SLEEP\n-#  ifdef _GLIBCXX_HAVE_USLEEP\n+#elif defined(_GLIBCXX_HAVE_SLEEP)\n+# ifdef _GLIBCXX_HAVE_USLEEP\n     ::sleep(__s.count());\n     if (__ns.count() > 0)\n       {\n@@ -181,10 +182,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n           __us = 1;\n         ::usleep(__us);\n       }\n-#  else\n+# else\n     ::sleep(__s.count() + (__ns >= 1000000));\n-#  endif\n # endif\n+#elif defined(_GLIBCXX_HAVE_WIN32_SLEEP)\n+    unsigned long ms = __ns.count() / 1000000;\n+    if (__ns.count() > 0 && ms == 0)\n+      ms = 1;\n+    ::Sleep(chrono::milliseconds(__s).count() + ms);\n #endif\n   }\n "}]}