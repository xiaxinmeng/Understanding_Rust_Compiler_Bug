{"sha": "0461b801bf19aa735ecdd2d65e70ca253d5b6fbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ2MWI4MDFiZjE5YWE3MzVlY2RkMmQ2NWU3MGNhMjUzZDViNmZiZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2006-09-28T19:14:05Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-09-28T19:14:05Z"}, "message": "gimplify.c (gimplify_init_ctor_preeval): Call maybe_with_size_expr on the element before gimplifying it...\n\n\t* gimplify.c (gimplify_init_ctor_preeval): Call maybe_with_size_expr\n\ton the element before gimplifying it, instead of punting if it is of\n\tvariable size.\n\nFrom-SVN: r117288", "tree": {"sha": "e5a12015f5fb2fc6d895eb7184401578c20e3db6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5a12015f5fb2fc6d895eb7184401578c20e3db6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd/comments", "author": null, "committer": null, "parents": [{"sha": "8072ddb08815ed2133a4b84877695c80f4e50215", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8072ddb08815ed2133a4b84877695c80f4e50215", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8072ddb08815ed2133a4b84877695c80f4e50215"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "779868b015f53d74c69027622d44c4ca2dfd41fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0461b801bf19aa735ecdd2d65e70ca253d5b6fbd", "patch": "@@ -1,3 +1,9 @@\n+2006-09-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gimplify.c (gimplify_init_ctor_preeval): Call maybe_with_size_expr\n+\ton the element before gimplifying it, instead of punting if it is of\n+\tvariable size.\n+\n 2006-09-28  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* doc/loop.texi: New file."}, {"sha": "9db673a62d91995d9eb2e07e28a19f55bc055cae", "filename": "gcc/gimplify.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=0461b801bf19aa735ecdd2d65e70ca253d5b6fbd", "patch": "@@ -2670,9 +2670,8 @@ gimplify_init_ctor_preeval (tree *expr_p, tree *pre_p, tree *post_p,\n       return;\n     }\n \n-  /* We can't preevaluate if the type contains a placeholder.  */\n-  if (type_contains_placeholder_p (TREE_TYPE (*expr_p)))\n-    return;\n+  /* If this is a variable sized type, we must remember the size.  */\n+  maybe_with_size_expr (expr_p);\n \n   /* Gimplify the constructor element to something appropriate for the rhs\n      of a MODIFY_EXPR.  Given that we know the lhs is an aggregate, we know"}, {"sha": "112f6fe64a17fa28b5d2224b9d6663e25e6da5fd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0461b801bf19aa735ecdd2d65e70ca253d5b6fbd", "patch": "@@ -1,3 +1,7 @@\n+2006-09-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/self_aggregate_with_pointer.adb: New test.\n+\n 2006-09-27  Steven G. Kargl  <kargls@gcc.gnu.org>\n \n \tPR fortran/28276"}, {"sha": "179fe4e972276bec04455b05d3e57fdf52a40917", "filename": "gcc/testsuite/gnat.dg/self_aggregate_with_pointer.adb", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd/gcc%2Ftestsuite%2Fgnat.dg%2Fself_aggregate_with_pointer.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd/gcc%2Ftestsuite%2Fgnat.dg%2Fself_aggregate_with_pointer.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fself_aggregate_with_pointer.adb?ref=0461b801bf19aa735ecdd2d65e70ca253d5b6fbd", "patch": "@@ -0,0 +1,26 @@\n+-- { dg-do run }\n+\n+procedure self_aggregate_with_pointer is\n+\n+  type Arr is array (Natural range <>) of Integer;\n+\n+  type Rec (N : Natural) is record\n+    A : Arr (1..N);\n+  end record;\n+\n+  type Acc_Rec is access all Rec;\n+\n+  type SRec is record\n+    A : Acc_Rec;\n+    I1, I2, I3, I4, I5, I6, I7: Integer;\n+  end record;\n+\n+  R : aliased Rec (1);\n+  S : Srec := (A => R'Access, others => 0);\n+\n+begin\n+  S := (A => S.A, others => 0);\n+  if S.A /= R'Access then\n+    raise Program_Error;\n+  end if;\n+end;"}]}