{"sha": "7df57cfde5aa119eae27c14eee0bdcee6345c5b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RmNTdjZmRlNWFhMTE5ZWFlMjdjMTRlZWUwYmRjZWU2MzQ1YzViOA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-02-11T23:04:26Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-02-11T23:04:26Z"}, "message": "Initial revision\n\nFrom-SVN: r299", "tree": {"sha": "06836328b6cfef40de6ab0558651903ab7ed51f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06836328b6cfef40de6ab0558651903ab7ed51f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7df57cfde5aa119eae27c14eee0bdcee6345c5b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7df57cfde5aa119eae27c14eee0bdcee6345c5b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7df57cfde5aa119eae27c14eee0bdcee6345c5b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7df57cfde5aa119eae27c14eee0bdcee6345c5b8/comments", "author": null, "committer": null, "parents": [{"sha": "d7e4fe8bb99bc0f411d526b5f9ce696228206b62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e4fe8bb99bc0f411d526b5f9ce696228206b62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e4fe8bb99bc0f411d526b5f9ce696228206b62"}], "stats": {"total": 125, "additions": 125, "deletions": 0}, "files": [{"sha": "9c6092f5655b5e578b5170247329a0938c31ddcf", "filename": "gcc/config/mips/osfrose.h", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7df57cfde5aa119eae27c14eee0bdcee6345c5b8/gcc%2Fconfig%2Fmips%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7df57cfde5aa119eae27c14eee0bdcee6345c5b8/gcc%2Fconfig%2Fmips%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fosfrose.h?ref=7df57cfde5aa119eae27c14eee0bdcee6345c5b8", "patch": "@@ -0,0 +1,125 @@\n+/* Definitions of target machine for GNU compiler.  DECstation (OSF/1 with OSF/rose) version.\n+   Copyright (C) 1991 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#define DECSTATION\n+#define OSF_OS\n+\n+#define CPP_PREDEFINES \"-DOSF -DOSF1 -Dbsd4_2 -DMIPSEL -Dhost_mips -Dmips -Dunix -DR3000 -DSYSTYPE_BSD\"\n+\n+#define ASM_SPEC\t\"%{mmips-as:\t\t\t\t\t\\\n+\t\t\t\t%{pipe:%e:-pipe not supported}\t\t\\\n+\t\t\t\t%{EL} %{!EL:-EL}\t\t\t\\\n+\t\t\t\t%{EB: %e-EB not supported}\t\t\\\n+\t\t\t\t%{!mrnames: -nocpp}\t\t\t\\\n+\t\t\t\t%{O:-O2} %{O1:-O2} %{O2:-O2} %{O3:-O3}\t\\\n+\t\t\t\t%{g} %{g0} %{g1} %{g2} %{g3}\t\t\\\n+\t\t\t\t%{K} %{Q}}\t\t\t\t\\\n+\t\t \t %{v*: -v}\t\t\t\t\t\\\n+\t\t\t %{G*}\"\n+\n+#define ASM_FINAL_SPEC \"%{mmips-as: %{!mno-mips-tfile:\t\t\t\\\n+\t\t\t\t\\n mips-tfile %{v*: -v} %{d*}\t\t\\\n+\t\t\t\t\t%{K: -I %b.o~} \t\t\t\\\n+\t\t\t\t\t%{!K: %{save-temps: -I %b.o~}}\t\\\n+\t\t\t\t\t%{c:%W{o*}%{!o*:-o %b.o}}%{!c:-o %b.o} \\\n+\t\t\t\t\t%{.s:%i} %{!.s:%g.s}}}\"\n+\n+#define CPP_SPEC\t\"%{.S:\t-D__LANGUAGE_ASSEMBLY__\t\t\t\\\n+\t\t\t\t-D_LANGUAGE_ASSEMBLY\t\t\t\\\n+\t\t\t\t%{!ansi:-DLANGUAGE_ASSEMBLY}}\t\t\\\n+\t\t\t %{.cc:\t-D__LANGUAGE_C_PLUS_PLUS__\t\t\\\n+\t\t\t\t-D_LANGUAGE_C_PLUS_PLUS\t\t\t\\\n+\t\t\t\t%{!ansi:-DLANGUAGE_C_PLUS_PLUS}}\t\\\n+\t\t\t %{.cxx:-D__LANGUAGE_C_PLUS_PLUS__\t\t\\\n+\t\t\t\t-D_LANGUAGE_C_PLUS_PLUS\t\t\t\\\n+\t\t\t\t%{!ansi:-DLANGUAGE_C_PLUS_PLUS}}\t\\\n+\t\t\t %{.C:\t-D__LANGUAGE_C_PLUS_PLUS__\t\t\\\n+\t\t\t\t-D_LANGUAGE_C_PLUS_PLUS\t\t\t\\\n+\t\t\t\t%{!ansi:-DLANGUAGE_C_PLUS_PLUS}}\t\\\n+\t\t\t %{.m:\t-D__LANGUAGE_OBJECTIVE_C__\t\t\\\n+\t\t\t\t-D_LANGUAGE_OBJECTIVE_C\t\t\t\\\n+\t\t\t\t%{!ansi:-DLANGUAGE_OBJECTIVE_C}}\t\\\n+\t\t\t %{!.S:\t-D__LANGUAGE_C__\t\t\t\\\n+\t\t\t\t-D_LANGUAGE_C\t\t\t\t\\\n+\t\t\t\t%{!ansi:-DLANGUAGE_C}}\"\n+\n+#define LINK_SPEC\t\"%{G*}\t\t\t\t\t\t\\\n+\t\t\t %{mmips-as:\t\t\t\t\t\\\n+\t\t\t\t%{EL} %{!EL: -EL}\t\t\t\\\n+\t\t\t\t%{EB: %e-EB not supported}\t\t\\\n+\t\t\t\t%{bestGnum}}\t\t\t\t\\\n+\t\t\t %{!mmips-as:\t\t\t\t\t\\\n+\t\t\t \t%{v*: -v}\t\t\t\t\\\n+\t\t\t\t%{pic-none: -noshrlib} %{noshrlib}\t\\\n+\t\t\t\t%{!pic-none: -warn_nopic}\t\t\\\n+\t\t\t\t%{nostdlib} %{glue}}\"\n+\n+/* For now, force static libraries instead of shared, but do so that\n+   does not use -noshrlib, since the old linker does not provide it.  */\n+#define LIB_SPEC \"%{!pic-none: %{!pic-lib: -L/usr/ccs/lib }} -lc\"\n+\n+#define STARTFILE_SPEC \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}\"\n+\n+#define MACHINE_TYPE \"DECstation running OSF/1 with OSF/rose objects\"\n+\n+#ifndef MD_EXEC_PREFIX\n+#define MD_EXEC_PREFIX\t\t\"/usr/ccs/gcc/\"\n+#endif\n+\n+#ifndef MD_STARTFILE_PREFIX\n+#define MD_STARTFILE_PREFIX\t\"/usr/ccs/lib/\"\n+#endif\n+\n+/* Specify size_t, ptrdiff_t, and wchar_t types.  */\n+#define SIZE_TYPE\t\"long unsigned int\"\n+#define PTRDIFF_TYPE\t\"long int\"\n+#define WCHAR_TYPE\t\"long unsigned int\"\n+#define WCHAR_TYPE_SIZE BITS_PER_WORD\n+\n+#if 0\n+#define WCHAR_TYPE\t((TARGET_WC8)\t\t\t\t\t\\\n+\t\t\t\t? \"unsigned char\"\t\t\t\\\n+\t\t\t\t: ((TARGET_WC16)\t\t\t\\\n+\t\t\t\t\t? \"short unsigned int\"\t\t\\\n+\t\t\t\t\t: \"long unsigned int\"))\n+#endif\n+\n+#define TARGET_DEFAULT MASK_GAS\n+\n+/* OSF/rose uses stabs, not ECOFF.  */\n+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+\n+/* Tell collect that the object format is OSF/rose.  */\n+#define OBJECT_FORMAT_ROSE\n+\n+/* Use atexit for static constructors/destructors, instead of defining\n+   our own exit function.  */\n+#define HAVE_ATEXIT\n+\n+/* If defined, a C string constant for the assembler operation to\n+   identify the following data as initialization code.  If not\n+   defined, GNU CC will assume such a section does not exist.\n+\n+   OSF/rose doesn't presently have an init section, but this macro\n+   also controls whether or not __main is called from main, collect\n+   will however build an initialization section directly.  */\n+\n+#define INIT_SECTION_ASM_OP \".init\"\n+\n+#include \"mips.h\""}]}