{"sha": "b9d04e915fe0f4cdcca40e6de65ae384ba82a429", "node_id": "C_kwDOANBUbNoAKGI5ZDA0ZTkxNWZlMGY0Y2RjY2E0MGU2ZGU2NWFlMzg0YmE4MmE0Mjk", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-10-06T13:12:53Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-10-06T13:16:29Z"}, "message": "Minor cleanup in DF code\n\nNo functional changes.\n\ngcc/\n\t* df-scan.cc (df_ref_create_structure): Minor cleanup.", "tree": {"sha": "1cd3420c0581c9894e73779b0282cc302dd466a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cd3420c0581c9894e73779b0282cc302dd466a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9d04e915fe0f4cdcca40e6de65ae384ba82a429", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9d04e915fe0f4cdcca40e6de65ae384ba82a429", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9d04e915fe0f4cdcca40e6de65ae384ba82a429", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9d04e915fe0f4cdcca40e6de65ae384ba82a429/comments", "author": null, "committer": null, "parents": [{"sha": "0af8d957d5911fc7659b4174cfc2213289bbed23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af8d957d5911fc7659b4174cfc2213289bbed23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0af8d957d5911fc7659b4174cfc2213289bbed23"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "1a41e6d3e1ccdf0e19c14d034197d1059da3193e", "filename": "gcc/df-scan.cc", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d04e915fe0f4cdcca40e6de65ae384ba82a429/gcc%2Fdf-scan.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d04e915fe0f4cdcca40e6de65ae384ba82a429/gcc%2Fdf-scan.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.cc?ref=b9d04e915fe0f4cdcca40e6de65ae384ba82a429", "patch": "@@ -2475,10 +2475,11 @@ df_ref_create_structure (enum df_ref_class cl,\n \t\t\t enum df_ref_type ref_type,\n \t\t\t int ref_flags)\n {\n-  df_ref this_ref = NULL;\n-  unsigned int regno = REGNO (GET_CODE (reg) == SUBREG ? SUBREG_REG (reg) : reg);\n+  const unsigned int regno\n+    = REGNO (GET_CODE (reg) == SUBREG ? SUBREG_REG (reg) : reg);\n   struct df_scan_problem_data *problem_data\n     = (struct df_scan_problem_data *) df_scan->problem_data;\n+  df_ref this_ref;\n \n   switch (cl)\n     {\n@@ -2498,12 +2499,15 @@ df_ref_create_structure (enum df_ref_class cl,\n       this_ref->regular_ref.loc = loc;\n       gcc_checking_assert (loc);\n       break;\n+\n+    default:\n+      gcc_unreachable ();\n     }\n \n   DF_REF_CLASS (this_ref) = cl;\n   DF_REF_ID (this_ref) = -1;\n   DF_REF_REG (this_ref) = reg;\n-  DF_REF_REGNO (this_ref) =  regno;\n+  DF_REF_REGNO (this_ref) = regno;\n   DF_REF_TYPE (this_ref) = ref_type;\n   DF_REF_INSN_INFO (this_ref) = info;\n   DF_REF_CHAIN (this_ref) = NULL;\n@@ -2512,17 +2516,17 @@ df_ref_create_structure (enum df_ref_class cl,\n   DF_REF_PREV_REG (this_ref) = NULL;\n   DF_REF_ORDER (this_ref) = df->ref_order++;\n \n-  /* We need to clear this bit because fwprop, and in the future\n-     possibly other optimizations sometimes create new refs using ond\n-     refs as the model.  */\n+  /* We need to clear the DF_HARD_REG_LIVE bit because fwprop, and in the\n+     future possibly other optimizations, sometimes create new refs using\n+     live refs as the model.  */\n   DF_REF_FLAGS_CLEAR (this_ref, DF_HARD_REG_LIVE);\n \n-  /* See if this ref needs to have DF_HARD_REG_LIVE bit set.  */\n+  /* Now see if this ref really needs to have the bit set.  */\n   if (regno < FIRST_PSEUDO_REGISTER\n-      && !DF_REF_IS_ARTIFICIAL (this_ref)\n-      && !DEBUG_INSN_P (DF_REF_INSN (this_ref)))\n+      && cl != DF_REF_ARTIFICIAL\n+      && !DEBUG_INSN_P (info->insn))\n     {\n-      if (DF_REF_REG_DEF_P (this_ref))\n+      if (ref_type == DF_REF_REG_DEF)\n \t{\n \t  if (!DF_REF_FLAGS_IS_SET (this_ref, DF_REF_MAY_CLOBBER))\n \t    DF_REF_FLAGS_SET (this_ref, DF_HARD_REG_LIVE);"}]}