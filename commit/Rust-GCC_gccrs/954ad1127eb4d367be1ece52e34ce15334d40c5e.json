{"sha": "954ad1127eb4d367be1ece52e34ce15334d40c5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU0YWQxMTI3ZWI0ZDM2N2JlMWVjZTUyZTM0Y2UxNTMzNGQ0MGM1ZQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-10-11T13:21:28Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-10-11T13:21:28Z"}, "message": "libcpp: show macro definition when used with wrong argument count\n\nConsider:\n\ndemo.c: In function 'test':\ndemo.c:5:40: error: macro \"LOG_2\" requires 3 arguments, but only 2 given\n5 |   LOG_2 (\"loading file: %s\\n\", filename);\n  |                                        ^\n\nThis patch adds a note showing the definition of the macro in\nquestion, giving:\n\ndemo.c: In function 'test':\ndemo.c:5:40: error: macro \"LOG_2\" requires 3 arguments, but only 2 given\n5 |   LOG_2 (\"loading file: %s\\n\", filename);\n  |                                        ^\nIn file included from demo.c:1:\nlogging.h:1: note: macro \"LOG_2\" defined here\n1 | #define LOG_2(FMT, ARG0, ARG1) do { fprintf (stderr, (FMT), (ARG0), (ARG1)); }\n  | \n\ngcc/testsuite/ChangeLog:\n\t* g++.dg/diagnostic/macro-arg-count.C: Move to...\n\t* c-c++-common/cpp/macro-arg-count-1.c: ...here, generalizing\n\toutput for C vs C++.  Expect notes showing the definitions of the\n\tmacros.\n\t* c-c++-common/cpp/macro-arg-count-2.c: New test, adapted from the\n\tabove.\n\nlibcpp/ChangeLog:\n\t* macro.c (_cpp_arguments_ok): If the argument count is wrong, add\n\ta note showing the definition of the macro.\n\nFrom-SVN: r265040", "tree": {"sha": "dec8d87521395a312aab96b828e7959479b364f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dec8d87521395a312aab96b828e7959479b364f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/954ad1127eb4d367be1ece52e34ce15334d40c5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/954ad1127eb4d367be1ece52e34ce15334d40c5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/954ad1127eb4d367be1ece52e34ce15334d40c5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/954ad1127eb4d367be1ece52e34ce15334d40c5e/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c727b835139299adc623951aff782cdfaff655d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c727b835139299adc623951aff782cdfaff655d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c727b835139299adc623951aff782cdfaff655d9"}], "stats": {"total": 171, "additions": 120, "deletions": 51}, "files": [{"sha": "3588376437b554b8369b6bb7a6390a9e27dcd3f7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/954ad1127eb4d367be1ece52e34ce15334d40c5e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/954ad1127eb4d367be1ece52e34ce15334d40c5e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=954ad1127eb4d367be1ece52e34ce15334d40c5e", "patch": "@@ -1,3 +1,12 @@\n+2018-10-11  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* g++.dg/diagnostic/macro-arg-count.C: Move to...\n+\t* c-c++-common/cpp/macro-arg-count-1.c: ...here, generalizing\n+\toutput for C vs C++.  Expect notes showing the definitions of the\n+\tmacros.\n+\t* c-c++-common/cpp/macro-arg-count-2.c: New test, adapted from the\n+\tabove.\n+\n 2018-10-11  Martin Jambor  <mjambor@suse.cz>\n \n \t* gcc.dg/warn-abs-1.c: Guard tests assuming size of long double is"}, {"sha": "7773c47e76520cc4a2a60311c026cfb424fa4bfa", "filename": "gcc/testsuite/c-c++-common/cpp/macro-arg-count-1.c", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/954ad1127eb4d367be1ece52e34ce15334d40c5e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fmacro-arg-count-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/954ad1127eb4d367be1ece52e34ce15334d40c5e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fmacro-arg-count-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fmacro-arg-count-1.c?ref=954ad1127eb4d367be1ece52e34ce15334d40c5e", "patch": "@@ -0,0 +1,66 @@\n+/* { dg-options \"-fdiagnostics-show-caret\" } */\n+\n+#define MACRO_1(X,Y) /* { dg-line \"def_of_MACRO_1\" } */\n+void test_1 ()\n+{\n+  MACRO_1(42); /* { dg-line \"use_of_MACRO_1\" } */\n+  /* { dg-error \"macro \\\"MACRO_1\\\" requires 2 arguments, but only 1 given\" \"\" { target *-*-* } use_of_MACRO_1 } */\n+  /* { dg-begin-multiline-output \"\" }\n+   MACRO_1(42);\n+             ^\n+     { dg-end-multiline-output \"\" } */\n+  /* { dg-message \"-: macro .MACRO_1. defined here\" \"\" { target *-*-* } def_of_MACRO_1 }\n+  /* { dg-begin-multiline-output \"\" }\n+ #define MACRO_1(X,Y)\n+ \n+     { dg-end-multiline-output \"\" } */\n+  /* { dg-error \"'MACRO_1' undeclared\" \"\" { target c } use_of_MACRO_1 }\n+  /* { dg-error \"'MACRO_1' was not declared in this scope\" \"\" { target c++ } use_of_MACRO_1 }\n+\n+  /* { dg-begin-multiline-output \"\" }\n+   MACRO_1(42);\n+   ^~~~~~~\n+     { dg-end-multiline-output \"\" } */\n+  /* { dg-bogus \"had not yet been defined\" \"\" { target *-*-* } use_of_MACRO_1 } */\n+}\n+\n+#define MACRO_2(X,Y) /* { dg-line \"def_of_MACRO_2\" } */\n+void test_2 ()\n+{\n+  MACRO_2(1, 2, 3); /* { dg-line \"use_of_MACRO_2\" } */\n+  /* { dg-error \"macro \\\"MACRO_2\\\" passed 3 arguments, but takes just 2\" \"\" { target *-*-* } use_of_MACRO_2 } */\n+  /* { dg-begin-multiline-output \"\" }\n+   MACRO_2(1, 2, 3);\n+                  ^\n+     { dg-end-multiline-output \"\" } */\n+  /* { dg-message \"-: macro .MACRO_2. defined here\" \"\" { target *-*-* } def_of_MACRO_2 }\n+  /* { dg-begin-multiline-output \"\" }\n+ #define MACRO_2(X,Y)\n+ \n+     { dg-end-multiline-output \"\" } */\n+  /* { dg-error \"'MACRO_2' undeclared\" \"\" { target c } use_of_MACRO_2 } */\n+  /* { dg-error \"'MACRO_2' was not declared in this scope\" \"\" { target c++ } use_of_MACRO_2 } */\n+  /* { dg-begin-multiline-output \"\" }\n+   MACRO_2(1, 2, 3);\n+   ^~~~~~~\n+     { dg-end-multiline-output \"\" } */\n+  /* { dg-bogus \"had not yet been defined\" \"\" { target *-*-* } use_of_MACRO_2 } */\n+}\n+\n+#define MACRO_3\n+void test_3 ()\n+{\n+  MACRO_3 (42);\n+}\n+\n+#define MACRO_4(X,Y)\n+void test_4 ()\n+{\n+  MACRO_4; /* { dg-line \"use_of_MACRO_4\" } */\n+  /* { dg-error \"'MACRO_4' undeclared\" \"\" { target c } use_of_MACRO_4 } */\n+  /* { dg-error \"'MACRO_4' was not declared in this scope\" \"\" { target c++ } use_of_MACRO_4 } */\n+  /* { dg-begin-multiline-output \"\" }\n+   MACRO_4;\n+   ^~~~~~~\n+     { dg-end-multiline-output \"\" } */\n+}"}, {"sha": "ef64488348d9bc7a41c80a507ef33da925da0077", "filename": "gcc/testsuite/c-c++-common/cpp/macro-arg-count-2.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/954ad1127eb4d367be1ece52e34ce15334d40c5e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fmacro-arg-count-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/954ad1127eb4d367be1ece52e34ce15334d40c5e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fmacro-arg-count-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fmacro-arg-count-2.c?ref=954ad1127eb4d367be1ece52e34ce15334d40c5e", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-options \"-traditional-cpp\" } */\n+\n+#define MACRO_1(X,Y) /* { dg-line \"def_of_MACRO_1\" } */\n+void test_1 ()\n+{\n+  MACRO_1(42); /* { dg-line \"use_of_MACRO_1\" } */\n+  /* { dg-error \"-:macro \\\"MACRO_1\\\" requires 2 arguments, but only 1 given\" \"\" { target c } use_of_MACRO_1 } */\n+  /* { dg-error \"macro \\\"MACRO_1\\\" requires 2 arguments, but only 1 given\" \"\" { target c++ } use_of_MACRO_1 } */\n+  /* { dg-message \"-: macro .MACRO_1. defined here\" \"\" { target *-*-* } def_of_MACRO_1 } */\n+  /* { dg-error \"'MACRO_1' was not declared in this scope\" \"\" { target c++ } use_of_MACRO_1 } */\n+  /* { dg-bogus \"had not yet been defined\" \"\" { target *-*-* } use_of_MACRO_1 } */\n+}\n+\n+#define MACRO_2(X,Y) /* { dg-line \"def_of_MACRO_2\" } */\n+void test_2 ()\n+{\n+  MACRO_2(1, 2, 3); /* { dg-line \"use_of_MACRO_2\" } */\n+  /* { dg-error \"-:macro \\\"MACRO_2\\\" passed 3 arguments, but takes just 2\" \"\" { target c } use_of_MACRO_2 } */\n+  /* { dg-error \"macro \\\"MACRO_2\\\" passed 3 arguments, but takes just 2\" \"\" { target c++ } use_of_MACRO_2 } */\n+  /* { dg-message \"-: macro .MACRO_2. defined here\" \"\" { target *-*-* } def_of_MACRO_2 } */\n+  /* { dg-error \"'MACRO_2' was not declared in this scope\" \"\" { target c++ } use_of_MACRO_2 } */\n+  /* { dg-bogus \"had not yet been defined\" \"\" { target *-*-* } use_of_MACRO_2 } */\n+}\n+\n+#define MACRO_3\n+void test_3 ()\n+{\n+  MACRO_3 (42);\n+}\n+\n+#define MACRO_4(X,Y)\n+void test_4 ()\n+{\n+  MACRO_4; /* { dg-line \"use_of_MACRO_4\" } */\n+  /* { dg-error \"'MACRO_4' was not declared in this scope\" \"\" { target c++ } use_of_MACRO_4 } */\n+}"}, {"sha": "12b2dbd3be72fa9541245a029627dcd083b8cb48", "filename": "gcc/testsuite/g++.dg/diagnostic/macro-arg-count.C", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c727b835139299adc623951aff782cdfaff655d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fmacro-arg-count.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c727b835139299adc623951aff782cdfaff655d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fmacro-arg-count.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fmacro-arg-count.C?ref=c727b835139299adc623951aff782cdfaff655d9", "patch": "@@ -1,51 +0,0 @@\n-// { dg-options \"-fdiagnostics-show-caret\" }\n-\n-#define MACRO_1(X,Y)\n-void test_1 ()\n-{\n-  MACRO_1(42); // { dg-line \"use_of_MACRO_1\" }\n-  // { dg-error \"macro \\\"MACRO_1\\\" requires 2 arguments, but only 1 given\" \"\" { target *-*-* } use_of_MACRO_1 }\n-  /* { dg-begin-multiline-output \"\" }\n-   MACRO_1(42);\n-             ^\n-     { dg-end-multiline-output \"\" } */\n-  // { dg-error \"'MACRO_1' was not declared in this scope\" \"\" { target *-*-* } use_of_MACRO_1 }\n-  /* { dg-begin-multiline-output \"\" }\n-   MACRO_1(42);\n-   ^~~~~~~\n-     { dg-end-multiline-output \"\" } */\n-  // { dg-bogus \"had not yet been defined\" \"\" { target *-*-* } use_of_MACRO_1 }\n-}\n-\n-#define MACRO_2(X,Y)\n-void test_2 ()\n-{\n-  MACRO_2(1, 2, 3); // { dg-line \"use_of_MACRO_2\" }\n-  // { dg-error \"macro \\\"MACRO_2\\\" passed 3 arguments, but takes just 2\" \"\" { target *-*-* } use_of_MACRO_2 }\n-  /* { dg-begin-multiline-output \"\" }\n-   MACRO_2(1, 2, 3);\n-                  ^\n-     { dg-end-multiline-output \"\" } */\n-  // { dg-error \"'MACRO_2' was not declared in this scope\" \"\" { target *-*-* } use_of_MACRO_2 }\n-  /* { dg-begin-multiline-output \"\" }\n-   MACRO_2(1, 2, 3);\n-   ^~~~~~~\n-     { dg-end-multiline-output \"\" } */\n-  // { dg-bogus \"had not yet been defined\" \"\" { target *-*-* } use_of_MACRO_2 }\n-}\n-\n-#define MACRO_3\n-void test_3 ()\n-{\n-  MACRO_3 (42);\n-}\n-\n-#define MACRO_4(X,Y)\n-void test_4 ()\n-{\n-  MACRO_4; // { dg-error \"'MACRO_4' was not declared in this scope\" }\n-  /* { dg-begin-multiline-output \"\" }\n-   MACRO_4;\n-   ^~~~~~~\n-     { dg-end-multiline-output \"\" } */\n-}"}, {"sha": "e240b2c7058f751878278013464ce29257ace9bd", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/954ad1127eb4d367be1ece52e34ce15334d40c5e/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/954ad1127eb4d367be1ece52e34ce15334d40c5e/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=954ad1127eb4d367be1ece52e34ce15334d40c5e", "patch": "@@ -1,3 +1,8 @@\n+2018-10-11  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* macro.c (_cpp_arguments_ok): If the argument count is wrong, add\n+\ta note showing the definition of the macro.\n+\n 2018-10-11  Nathan Sidwell  <nathan@acm.org>\n \n \t* include/line-map.h (LINEMAPS_MACRO_LOWEST_LOCATION): Fix"}, {"sha": "aacaf8c302061f8e7d45394c985a6f4d3c6816ce", "filename": "libcpp/macro.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/954ad1127eb4d367be1ece52e34ce15334d40c5e/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/954ad1127eb4d367be1ece52e34ce15334d40c5e/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=954ad1127eb4d367be1ece52e34ce15334d40c5e", "patch": "@@ -964,6 +964,10 @@ _cpp_arguments_ok (cpp_reader *pfile, cpp_macro *macro, const cpp_hashnode *node\n \t       \"macro \\\"%s\\\" passed %u arguments, but takes just %u\",\n \t       NODE_NAME (node), argc, macro->paramc);\n \n+  if (macro->line > RESERVED_LOCATION_COUNT)\n+    cpp_error_at (pfile, CPP_DL_NOTE, macro->line, \"macro \\\"%s\\\" defined here\",\n+\t\t  NODE_NAME (node));\n+\n   return false;\n }\n "}]}