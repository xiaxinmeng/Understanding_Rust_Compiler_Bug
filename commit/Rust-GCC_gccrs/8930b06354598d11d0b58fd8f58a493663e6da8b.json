{"sha": "8930b06354598d11d0b58fd8f58a493663e6da8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkzMGIwNjM1NDU5OGQxMWQwYjU4ZmQ4ZjU4YTQ5MzY2M2U2ZGE4Yg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-11-13T23:09:27Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-11-13T23:09:27Z"}, "message": "flow.c (find_basic_blocks): During marking phase...\n\n        * flow.c (find_basic_blocks): During marking phase, if we encounter\n        an insn with a REG_LABEL note, make the target block live and\n        create an edge from the insn to the target block.  Do not make\n        edges from all blocks to the target block.\n\nFrom-SVN: r16469", "tree": {"sha": "41a55652f0784dd60490b98045a397caab97e4e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41a55652f0784dd60490b98045a397caab97e4e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8930b06354598d11d0b58fd8f58a493663e6da8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8930b06354598d11d0b58fd8f58a493663e6da8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8930b06354598d11d0b58fd8f58a493663e6da8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8930b06354598d11d0b58fd8f58a493663e6da8b/comments", "author": null, "committer": null, "parents": [{"sha": "13529ea4fe7cad171f0ba8bc67e85038ac749bfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13529ea4fe7cad171f0ba8bc67e85038ac749bfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13529ea4fe7cad171f0ba8bc67e85038ac749bfc"}], "stats": {"total": 58, "additions": 28, "deletions": 30}, "files": [{"sha": "31ead4a55f61e712fb720431246eeeb95d348d8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8930b06354598d11d0b58fd8f58a493663e6da8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8930b06354598d11d0b58fd8f58a493663e6da8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8930b06354598d11d0b58fd8f58a493663e6da8b", "patch": "@@ -5,6 +5,11 @@ Thu Nov 13 12:53:44 1997  Jim Wilson  <wilson@cygnus.com>\n \n Thu Nov 13 11:41:42 1997  Jeffrey A Law  (law@cygnus.com)\n \n+\t* flow.c (find_basic_blocks): During marking phase, if we encounter\n+\tan insn with a REG_LABEL note, make the target block live and\n+\tcreate an edge from the insn to the target block.  Do not make\n+\tedges from all blocks to the target block.\n+\n         * m68k/x-next (OTHER_FIXINCLUDES_DIRS): Include /NextDeveloper/Headers.\n \n \t* confiugre.in: Tweak NCR entries."}, {"sha": "ed66ce7c4ef5e5a56435be887d347bf862e34299", "filename": "gcc/flow.c", "status": "modified", "additions": 23, "deletions": 30, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8930b06354598d11d0b58fd8f58a493663e6da8b/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8930b06354598d11d0b58fd8f58a493663e6da8b/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=8930b06354598d11d0b58fd8f58a493663e6da8b", "patch": "@@ -378,8 +378,6 @@ find_basic_blocks (f, nonlocal_label_list)\n   /* List of label_refs to all labels whose addresses are taken\n      and used as data.  */\n   rtx label_value_list;\n-  /* List of label_refs from REG_LABEL notes.  */\n-  rtx reg_label_list;\n   rtx x, note, eh_note;\n   enum rtx_code prev_code, code;\n   int depth, pass;\n@@ -389,7 +387,6 @@ find_basic_blocks (f, nonlocal_label_list)\n  restart:\n \n   label_value_list = 0;\n-  reg_label_list = 0;\n   block_live_static = block_live;\n   bzero (block_live, n_basic_blocks);\n   bzero (block_marked, n_basic_blocks);\n@@ -553,14 +550,26 @@ find_basic_blocks (f, nonlocal_label_list)\n \t\t    if (GET_RTX_CLASS (GET_CODE (insn)) == 'i')\n \t\t      {\n \t\t\t\n-\t\t\t/* We have no idea where the label referenced by this\n-\t\t\t   insn will actually be used.\n-\n-\t\t\t   To create an accurate cfg we mark the target blocks\n-\t\t\t   as live and create a list of all the labels\n-\t\t\t   mentioned in REG_LABEL notes.  After we're done\n-\t\t\t   marking blocks, we go back and create an edge from\n-\t\t\t   every live block to labels on the list.  */ \n+\t\t\t/* References to labels in non-jumping insns have\n+\t\t\t   REG_LABEL notes attached to them.\n+\n+\t\t\t   This can happen for computed gotos; we don't care\n+\t\t\t   about them here since the values are also on the\n+\t\t\t   label_value_list and will be marked live if we find\n+\t\t\t   a live computed goto.\n+\n+\t\t\t   This can also happen when we take the address of\n+\t\t\t   a label to pass as an argument to __throw.  Note\n+\t\t\t   throw only uses the value to determine what handler\n+\t\t\t   should be called -- ie the label is not used as\n+\t\t\t   a jump target, it just marks regions in the code.\n+\n+\t\t\t   In theory we should be able to ignore the REG_LABEL\n+\t\t\t   notes, but we have to make sure that the label and\n+\t\t\t   associated insns aren't marked dead, so we make\n+\t\t\t   the block in question live and create an edge from\n+\t\t\t   this insn to the label.  This is not strictly\n+\t\t\t   correct, but it is close enough for now.  */\n \t\t\tfor (note = REG_NOTES (insn);\n \t\t\t     note;\n \t\t\t     note = XEXP (note, 1))\n@@ -569,9 +578,9 @@ find_basic_blocks (f, nonlocal_label_list)\n \t\t\t      {\n \t\t\t\tx = XEXP (note, 0);\n \t\t\t\tblock_live[BLOCK_NUM (x)] = 1;\n-\t\t\t\treg_label_list\n-\t\t\t\t  = gen_rtx (EXPR_LIST, VOIDmode, x,\n-\t\t\t\t\t     reg_label_list);\n+\t\t\t\tmark_label_ref (gen_rtx (LABEL_REF,\n+\t\t\t\t\t\t\t VOIDmode, x),\n+\t\t\t\t\t\tinsn, 0);\n \t\t\t      }\n \t\t\t  }\n \n@@ -632,22 +641,6 @@ find_basic_blocks (f, nonlocal_label_list)\n \t      }\n \t}\n \n-      /* We couldn't determine what edges are needed for labels on the\n-\t reg_label_list above.  So make an edge from every live block to\n-\t to every label on the reg_label_list.  */\n-      if (reg_label_list)\n-\t{\n-\t  for (i = 1; i < n_basic_blocks; i++)\n-\t  if (block_live[i])\n-\t    {\n-\t      rtx x;\n-\n-\t      for (x = reg_label_list; x; x = XEXP (x, 1))\n-\t\tmark_label_ref (gen_rtx (LABEL_REF, VOIDmode, XEXP (x, 0)),\n-\t\t\t\tbasic_block_end[i], 0);\n-\t    }\n-\t}\n-\n       /* This should never happen.  If it does that means we've computed an\n \t incorrect flow graph, which can lead to aborts/crashes later in the\n \t compiler or incorrect code generation."}]}