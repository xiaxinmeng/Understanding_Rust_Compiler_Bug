{"sha": "32fcacb0134c8cd4db35b6d03eed33e1218e131d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJmY2FjYjAxMzRjOGNkNGRiMzViNmQwM2VlZDMzZTEyMThlMTMxZA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "1998-07-28T14:01:25Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "1998-07-28T14:01:25Z"}, "message": "\ufffd\ntry 3\n\nFrom-SVN: r21439", "tree": {"sha": "6e3662269c4ef4b1ba02a26d4e9c8d5a8f8f7f2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e3662269c4ef4b1ba02a26d4e9c8d5a8f8f7f2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32fcacb0134c8cd4db35b6d03eed33e1218e131d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32fcacb0134c8cd4db35b6d03eed33e1218e131d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32fcacb0134c8cd4db35b6d03eed33e1218e131d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32fcacb0134c8cd4db35b6d03eed33e1218e131d/comments", "author": null, "committer": null, "parents": [{"sha": "282a221c4e06e2db3863811780e340769814340d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/282a221c4e06e2db3863811780e340769814340d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/282a221c4e06e2db3863811780e340769814340d"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "c75c65b08d93453fda489fc0470264bd77227fcf", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/typeid01.C", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fcacb0134c8cd4db35b6d03eed33e1218e131d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftypeid01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fcacb0134c8cd4db35b6d03eed33e1218e131d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftypeid01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftypeid01.C?ref=32fcacb0134c8cd4db35b6d03eed33e1218e131d", "patch": "@@ -0,0 +1,71 @@\n+// 980617 bkoz\n+// typeid for local types\n+// typeid bool vs int and enum vs int\n+\n+#include <typeinfo>\n+#ifdef DEBUG_ASSERT\n+#include <assert.h>\n+#endif\n+\n+// 4: local class in non-main function\n+\n+void test1 (void) {\n+  bool class_p = false;\n+  class X2 { \n+  private:\n+    unsigned int counter;\n+  public:\n+    X2 (unsigned int i = 35): counter(i) {}\n+    ~X2(){}\n+    unsigned int ret_counter() {return counter;}\n+  };\n+  X2 obj_1;\n+  class_p = typeid(X2) == typeid(obj_1);\n+}  \n+\n+int main ()\n+{\n+  // 1: simple\n+#if 1\n+  bool enum_p = false;\n+  enum E { A, B, C };\n+  enum_p = typeid(A) == typeid(E);\n+#ifdef DEBUG_ASSERT\n+  assert (enum_p);\n+#endif\n+#endif  \n+\n+  // 2: complex\n+#if 0\n+  bool enum2_p = false;\n+  bool int_p = false;\n+  bool bool_p = false;\n+  enum E2 { A2, B2};\n+  enum2_p = typeid(A2) == typeid(E2);\n+  int_p =  typeid(int) == typeid(E2);\n+  bool_p =  typeid(bool) == typeid(E2);\n+#ifdef DEBUG_ASSERT\n+  assert (enum2_p);\n+  assert (!int_p);\n+  assert (!bool_p);\n+#endif\n+#endif\n+\n+  // 3: local class\n+  bool class_p = false;\n+  class X { \n+  private:\n+    unsigned int counter;\n+  public:\n+    X (unsigned int i = 35): counter(i) {}\n+    ~X(){}\n+    unsigned int ret_counter() {return counter;}\n+  };\n+  X obj_1;\n+  class_p = typeid(X) == typeid(obj_1);\n+\n+  // 4: local class in function\n+  test1();\n+\n+  return 0;\n+}"}]}