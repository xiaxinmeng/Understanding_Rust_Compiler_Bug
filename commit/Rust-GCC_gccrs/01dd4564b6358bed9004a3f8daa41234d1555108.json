{"sha": "01dd4564b6358bed9004a3f8daa41234d1555108", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFkZDQ1NjRiNjM1OGJlZDkwMDRhM2Y4ZGFhNDEyMzRkMTU1NTEwOA==", "commit": {"author": {"name": "Jonathan Larmour", "email": "jlarmour@cygnus.co.uk", "date": "1999-02-10T16:00:06Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1999-02-10T16:00:06Z"}, "message": "Test gcc features used by ECOS.\n\n\t* gcc.dg/special/ecos.exp: New test driver for new tests with\n\tspecial requirements.\n\t* gcc.dg/special/alias-1.c: New test.\n\t* gcc.dg/special/gcsec-1.c: New test.\n\t* gcc.dg/special/weak-1.c: New test.\n\t* gcc.dg/special/weak-1a.c: Accompanying file to weak-1.c.\n\t* gcc.dg/special/weak-2.c: New test.\n\t* gcc.dg/special/weak-2a.c: Accompanying file to weak-2.c.\n\t* gcc.dg/special/weak-2b.c: Accompanying file to weak-2.c.\n\t* gcc.dg/special/wkali-1.c: New test.\n\t* gcc.dg/special/wkali-2.c: New test.\n\t* gcc.dg/special/wkali-2a.c: Accompanying file to wkali-2.c.\n\t* gcc.dg/special/wkali-2b.c: Accompanying file to wkali-2.c.\n\nFrom-SVN: r25139", "tree": {"sha": "5d29afda084c03e56ec97ba6e7be2a56a96e1b9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d29afda084c03e56ec97ba6e7be2a56a96e1b9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01dd4564b6358bed9004a3f8daa41234d1555108", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01dd4564b6358bed9004a3f8daa41234d1555108", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01dd4564b6358bed9004a3f8daa41234d1555108", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01dd4564b6358bed9004a3f8daa41234d1555108/comments", "author": null, "committer": null, "parents": [{"sha": "809afeef87f9e589e63831ab5774b74be7ee46ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/809afeef87f9e589e63831ab5774b74be7ee46ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/809afeef87f9e589e63831ab5774b74be7ee46ec"}], "stats": {"total": 344, "additions": 344, "deletions": 0}, "files": [{"sha": "657079b059b653849347d0ef91cdac7ba771a2dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -1,3 +1,20 @@\n+Wed Feb 10 13:08:12 1999  Jonathan Larmour  <jlarmour@cygnus.co.uk>\n+\n+\t* gcc.dg/special/ecos.exp: New test driver for new tests with\n+\tspecial requirements.\n+\n+\t* gcc.dg/special/alias-1.c: New test.\n+\t* gcc.dg/special/gcsec-1.c: New test.\n+\t* gcc.dg/special/weak-1.c: New test.\n+\t* gcc.dg/special/weak-1a.c: Accompanying file to weak-1.c.\n+\t* gcc.dg/special/weak-2.c: New test.\n+\t* gcc.dg/special/weak-2a.c: Accompanying file to weak-2.c.\n+\t* gcc.dg/special/weak-2b.c: Accompanying file to weak-2.c.\n+\t* gcc.dg/special/wkali-1.c: New test.\n+\t* gcc.dg/special/wkali-2.c: New test.\n+\t* gcc.dg/special/wkali-2a.c: Accompanying file to wkali-2.c.\n+\t* gcc.dg/special/wkali-2b.c: Accompanying file to wkali-2.c.\n+\n Wed Feb 10 12:15:35 1999  Felix Lee  <flee@cygnus.com>\n \n         * lib/c-torture.exp (c-torture-compile): Pull out code for"}, {"sha": "347e1745630a3de7b082b31b0d92e0784f1d8c82", "filename": "gcc/testsuite/gcc.dg/special/alias-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Falias-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Falias-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Falias-1.c?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do link } */\n+\n+extern int foo(void) __attribute__((alias(\"bar\")));\n+\n+int bar(void) {\n+    return 1;\n+}\n+\n+int main(void) {\n+\n+    if (foo())\n+        exit(0);\n+    else\n+        abort();\n+}"}, {"sha": "dc54df6eea1731daee854edb425c6700bd36ba9d", "filename": "gcc/testsuite/gcc.dg/special/ecos.exp", "status": "added", "additions": 214, "deletions": 0, "changes": 214, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fecos.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fecos.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fecos.exp?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -0,0 +1,214 @@\n+#   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n+\n+# Please email any bugs, comments, and/or additions to this file to:\n+# jlarmour@cygnus.co.uk\n+\n+# This file was written by Jonathan Larmour (jlarmour@cygnus.co.uk).\n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Load support procs.\n+load_lib gcc-dg.exp\n+\n+###################################\n+# proc gcc_target_object_format { }\n+###################################\n+\n+proc gcc_target_object_format { } { \n+    global gcc_target_object_format_saved\n+\n+    if [info exists gcc_target_object_format_saved] {\n+        verbose \"gcc_target_object_format returning saved $gcc_target_object_format_saved\" 2\n+        return $gcc_target_object_format_saved\n+    } else {\n+\n+        set objdump_name [find_binutils_prog objdump]\n+        set open_file [open objfmtst.c w]\n+        puts $open_file \"void foo(void) { }\"\n+        close $open_file\n+        \n+        gcc_target_compile objfmtst.c objfmtst.o object \"\"\n+        \n+        set output [exec $objdump_name --file-headers objfmtst.o ]\n+        \n+        file delete objfmtst.o\n+        \n+        if ![ regexp \"file format (.*)arch\" $output dummy objformat ]  {\n+            verbose \"Could not parse objdump output\" 2\n+            set gcc_target_object_format_saved unknown\n+        } else {\n+            switch -regexp $objformat {\n+                elf          {\n+                    verbose \"gcc_target_object_format returning elf\" 2\n+                    set gcc_target_object_format_saved elf\n+                } \n+                ecoff        {\n+                    verbose \"gcc_target_object_format returning ecoff\" 2\n+                    set gcc_target_object_format_saved ecoff\n+                }\n+                coff         {\n+                    verbose \"gcc_target_object_format returning coff\" 2\n+                    set gcc_target_object_format_saved coff\n+                }\n+                a\\.out       {\n+                    verbose \"gcc_target_object_format returning a.out\" 2\n+                    set gcc_target_object_format_saved a.out\n+                }\n+                default      {\n+                    verbose \"gcc_target_object_format returning unknown\" 2\n+                    set gcc_target_object_format_saved unknown\n+                }\n+            }\n+        }\n+        return $gcc_target_object_format_saved\n+    }\n+}\n+\n+###############################\n+# proc check_weak_available { }\n+###############################\n+\n+# weak symbols are only supported in some configs/object formats\n+# this proc returns 1 if they're support, 0 if they're not, or -1 if unsure\n+\n+proc check_weak_available { } {\n+    global target_cpu\n+\n+    # All mips targets should support it\n+    \n+    if { [ string first \"mips\" $target_cpu ] >= 0 } {\n+        return 1\n+    }\n+\n+    # ELF and ECOFF support it. a.out does with gas/gld but may also with\n+    # other linkers, so we should try it\n+\n+    set objformat [gcc_target_object_format]\n+\n+    switch $objformat {\n+        elf      { return 1 }\n+        ecoff    { return 1 }\n+        a.out    { return 1 }\n+        unknown  { return -1 }\n+        default  { return 0 }\n+    }\n+}\n+\n+##########\n+# weak-1.c\n+##########\n+\n+if { [ check_weak_available ] == 1 } {\n+    dg-init\n+\n+    set lines [gcc_target_compile \"$srcdir/$subdir/weak-1a.c\" \"weak-1a.o\" object \"\"]\n+    if ![string match \"\" $lines] then {\n+        fail \"weak-1a.o\"\n+    } else {\n+        dg-runtest \"$srcdir/$subdir/weak-1.c\" \"weak-1a.o\" \"\" \n+        file delete weak-1a.o\n+    }\n+    dg-finish\n+} elseif { [ check_weak_available ] == 0 } {\n+    unsupported \"weak-1.c\"\n+} else {\n+    unresolved \"weak-1.c\"\n+}\n+\n+##########\n+# weak-2.c\n+##########\n+\n+if { [ check_weak_available ] == 1 } {\n+    dg-init\n+    \n+    set lines [gcc_target_compile \"$srcdir/$subdir/weak-2a.c\" \"weak-2a.o\" object \"\"]\n+    if ![string match \"\" $lines] then {\n+        fail \"weak-2a.o\"\n+    } else {\n+        set lines [gcc_target_compile \"$srcdir/$subdir/weak-2b.c\" \"weak-2b.o\" object \"\"]\n+        if ![string match \"\" $lines] then {\n+            fail \"weak-2b.o\"\n+        } else {\n+            dg-runtest \"$srcdir/$subdir/weak-2.c\" \"weak-2a.o weak-2b.o\" \"\" \n+            file delete weak-2a.o weak-2b.o\n+        }\n+    }\n+    dg-finish\n+} elseif { [ check_weak_available ] == 0 } {\n+    unsupported \"weak-2.c\"\n+} else {\n+    unresolved \"weak-2.c\"\n+}\n+\n+###########\n+# alias-1.c\n+###########\n+\n+dg-init\n+dg-runtest \"$srcdir/$subdir/alias-1.c\" \"\" \"\"\n+dg-finish\n+\n+###########\n+# wkali-1.c\n+###########\n+\n+dg-init\n+dg-runtest \"$srcdir/$subdir/wkali-1.c\" \"\" \"\"\n+dg-finish\n+\n+###########\n+# wkali-2.c\n+###########\n+\n+if { [ check_weak_available ] == 1 } {\n+    dg-init\n+    set lines [gcc_target_compile \"$srcdir/$subdir/wkali-2a.c\" \"wkali-2a.o\" object \"\"]\n+    if ![string match \"\" $lines] then {\n+        fail \"wkali-2a.o\"\n+    } else {\n+        set lines [gcc_target_compile \"$srcdir/$subdir/wkali-2b.c\" \"wkali-2b.o\" object \"\"]\n+        if ![string match \"\" $lines] then {\n+            fail \"wkali-2b.o\"\n+        } else {\n+            dg-runtest \"$srcdir/$subdir/wkali-2.c\" \"wkali-2a.o wkali-2b.o\" \"\"\n+            file delete wkali-2a.o wkali-2b.o\n+        }\n+    }\n+    dg-finish\n+} elseif { [ check_weak_available ] == 0 } {\n+    unsupported \"wkali-2.c\"\n+} else {\n+    unresolved \"wkali-2.c\"\n+}\n+\n+###########\n+# gcsec-1.c\n+###########\n+\n+set ld_output [ exec [ find_ld ] --help ]\n+\n+if { [ string first \"--gc-sections\" $ld_output ] >= 0 } {\n+\n+    dg-init\n+    dg-runtest \"$srcdir/$subdir/gcsec-1.c\" \"-ffunction-sections -fdata-sections -Wl,--gc-sections\" \"\"\n+    dg-finish\n+} else {\n+    unsupported \"gcsec-1.c\"\n+}\n+\n+### EOF ecos.exp"}, {"sha": "fa3f884fcbf0fdb7085d38ae9612427d304087fb", "filename": "gcc/testsuite/gcc.dg/special/gcsec-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fgcsec-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fgcsec-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fgcsec-1.c?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do run } */\n+\n+static int unusedint=5;\n+\n+static int usedint=1;\n+\n+int unused(void) {\n+    return 1;\n+}\n+\n+int foo(void) {\n+    return usedint;\n+}\n+\n+int main(void) {\n+\n+    if (foo())\n+        exit(0);\n+    else\n+        abort();\n+}"}, {"sha": "ccf2b087a94366d5385a2d89765c7214428d9cf9", "filename": "gcc/testsuite/gcc.dg/special/weak-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-1.c?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do run } */\n+\n+int foo(void) __attribute__((weak));\n+\n+int foo(void) {\n+    return 0;\n+}\n+\n+int main(void) {\n+\n+    if (foo())\n+        exit(0);\n+    else\n+        abort();\n+}"}, {"sha": "2a7dbba3d894cab22db74e4789417b794b44b045", "filename": "gcc/testsuite/gcc.dg/special/weak-1a.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-1a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-1a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-1a.c?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -0,0 +1,3 @@\n+int foo(void) {\n+    return 1;\n+}"}, {"sha": "74259cf9bca404fa28ed0ff53af77e9c8cc7d6e5", "filename": "gcc/testsuite/gcc.dg/special/weak-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-2.c?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do run } */\n+\n+extern int foo(void);\n+\n+int main(void) {\n+\n+    if (foo())\n+        exit(0);\n+    else\n+        abort();\n+}"}, {"sha": "52d3e08a2d7048b2e86e94d28f0d6487ba2d223b", "filename": "gcc/testsuite/gcc.dg/special/weak-2a.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-2a.c?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -0,0 +1,5 @@\n+int foo(void) __attribute__((weak));\n+\n+int foo(void) {\n+    return 0;\n+}"}, {"sha": "2a7dbba3d894cab22db74e4789417b794b44b045", "filename": "gcc/testsuite/gcc.dg/special/weak-2b.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-2b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-2b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-2b.c?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -0,0 +1,3 @@\n+int foo(void) {\n+    return 1;\n+}"}, {"sha": "d33c8d1d60173932ed1ff1870f122ac482ca3b36", "filename": "gcc/testsuite/gcc.dg/special/wkali-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-1.c?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do link } */\n+\n+extern int foo(void) __attribute__((weak, alias(\"bar\")));\n+\n+int bar(void) {\n+    return 1;\n+}\n+\n+int main(void) {\n+\n+    if (foo())\n+        exit(0);\n+    else\n+        abort();\n+}"}, {"sha": "74259cf9bca404fa28ed0ff53af77e9c8cc7d6e5", "filename": "gcc/testsuite/gcc.dg/special/wkali-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-2.c?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do run } */\n+\n+extern int foo(void);\n+\n+int main(void) {\n+\n+    if (foo())\n+        exit(0);\n+    else\n+        abort();\n+}"}, {"sha": "79dde1455402238c4a7c6f45fda15c9a2c357e8d", "filename": "gcc/testsuite/gcc.dg/special/wkali-2a.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-2a.c?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do run } */\n+\n+extern int foo(void) __attribute__((weak, alias(\"bar_a\")));\n+\n+int bar_a(void) {\n+    return 0;\n+}"}, {"sha": "84f389e846d10aaec36bf21458d3567e6e5e2d0d", "filename": "gcc/testsuite/gcc.dg/special/wkali-2b.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-2b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dd4564b6358bed9004a3f8daa41234d1555108/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-2b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-2b.c?ref=01dd4564b6358bed9004a3f8daa41234d1555108", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do run } */\n+\n+extern int foo(void) __attribute__((alias(\"bar_b\")));\n+\n+int bar_b(void) {\n+    return 1;\n+}"}]}