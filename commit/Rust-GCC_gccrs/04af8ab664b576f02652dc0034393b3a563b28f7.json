{"sha": "04af8ab664b576f02652dc0034393b3a563b28f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRhZjhhYjY2NGI1NzZmMDI2NTJkYzAwMzQzOTNiM2E1NjNiMjhmNw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2014-01-08T05:56:31Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2014-01-08T05:56:31Z"}, "message": "re PR middle-end/59285 (gcc.dg/builtin-unreachable-6.c:17:1: internal compiler error: in rtl_verify_fallthru, at cfgrtl.c:2862)\n\n        PR middle-end/59285\n        * ifcvt.c (merge_if_block): If we are merging a block with more than\n        one successor with a block with no successors, remove any BARRIER\n        after the second block.\n\nFrom-SVN: r206417", "tree": {"sha": "138fe20de88dfa01a05ad289aae6f69169c43023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/138fe20de88dfa01a05ad289aae6f69169c43023"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04af8ab664b576f02652dc0034393b3a563b28f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04af8ab664b576f02652dc0034393b3a563b28f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04af8ab664b576f02652dc0034393b3a563b28f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04af8ab664b576f02652dc0034393b3a563b28f7/comments", "author": null, "committer": null, "parents": [{"sha": "955b33ed1d2187b8d8fc251e379ddedfe2231f77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/955b33ed1d2187b8d8fc251e379ddedfe2231f77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/955b33ed1d2187b8d8fc251e379ddedfe2231f77"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "0e828f3b42eb9ef0cbde5a45e69d92613b61c41f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04af8ab664b576f02652dc0034393b3a563b28f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04af8ab664b576f02652dc0034393b3a563b28f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04af8ab664b576f02652dc0034393b3a563b28f7", "patch": "@@ -1,3 +1,10 @@\n+2014-01-07  Jeff Law  <law@redhat.com>\n+\n+\tPR middle-end/59285\n+\t* ifcvt.c (merge_if_block): If we are merging a block with more than\n+\tone successor with a block with no successors, remove any BARRIER\n+\tafter the second block.\n+\n 2014-01-07  Dan Xio Qiang <ziyan01@163.com>\n \n \t* hw-doloop.c (reorg_loops): Release the bitmap obstack."}, {"sha": "0afcfc3762f5c5b4c4e3f98a5d35fcfa938db8ca", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04af8ab664b576f02652dc0034393b3a563b28f7/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04af8ab664b576f02652dc0034393b3a563b28f7/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=04af8ab664b576f02652dc0034393b3a563b28f7", "patch": "@@ -3153,6 +3153,20 @@ merge_if_block (struct ce_if_block * ce_info)\n \n   if (then_bb)\n     {\n+      /* If THEN_BB has no successors, then there's a BARRIER after it.\n+\t If COMBO_BB has more than one successor (THEN_BB), then that BARRIER\n+\t is no longer needed, and in fact it is incorrect to leave it in\n+\t the insn stream.  */\n+      if (EDGE_COUNT (then_bb->succs) == 0\n+\t  && EDGE_COUNT (combo_bb->succs) > 1)\n+\t{\n+\t  rtx end = NEXT_INSN (BB_END (then_bb));\n+\t  while (end && NOTE_P (end) && !NOTE_INSN_BASIC_BLOCK_P (end))\n+\t    end = NEXT_INSN (end);\n+\n+\t  if (end && BARRIER_P (end))\n+\t    delete_insn (end);\n+\t}\n       merge_blocks (combo_bb, then_bb);\n       num_true_changes++;\n     }\n@@ -3162,6 +3176,20 @@ merge_if_block (struct ce_if_block * ce_info)\n      get their addresses taken.  */\n   if (else_bb)\n     {\n+      /* If ELSE_BB has no successors, then there's a BARRIER after it.\n+\t If COMBO_BB has more than one successor (ELSE_BB), then that BARRIER\n+\t is no longer needed, and in fact it is incorrect to leave it in\n+\t the insn stream.  */\n+      if (EDGE_COUNT (else_bb->succs) == 0\n+\t  && EDGE_COUNT (combo_bb->succs) > 1)\n+\t{\n+\t  rtx end = NEXT_INSN (BB_END (else_bb));\n+\t  while (end && NOTE_P (end) && !NOTE_INSN_BASIC_BLOCK_P (end))\n+\t    end = NEXT_INSN (end);\n+\n+\t  if (end && BARRIER_P (end))\n+\t    delete_insn (end);\n+\t}\n       merge_blocks (combo_bb, else_bb);\n       num_true_changes++;\n     }"}]}