{"sha": "68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhhYWI5ZWUzZTZiYTIxYjQ4YjVmMmUyNGU2MTcwNTQ3MmI3ZjdlZA==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2003-01-22T23:21:51Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2003-01-22T23:21:51Z"}, "message": "re PR c++/2738 (ICE on return type specification of a destructor)\n\n\tPR c++/2738\n\t* g++.dg/parse/ret-type1.C: New test.\n\n\tPR c++/3792\n\t* g++.dg/parse/tmpl-outside1.C: New test.\n\n\tPR c++/4207\n\t* g++.dg/parse/int-as-enum1.C: New test.\n\n\tPR c++/4903\n\t* g++.dg/parse/no-typename1.C: New test.\n\n\tPR c++/5533\n\t* g++.dg/parse/no-value1.C: New test.\n\n\tPR c++/5921\n\t* g++.dg/parse/wrong-inline1.C: New test.\n\n\tPR c++/6402\n\t* g++.dg/parse/ref1.C: New test.\n\n\tPR c++/6992\n\t* g++.dg/parse/attr-ctor1.C: New test.\n\n\tPR c++/7229\n\t* g++.dg/parse/namespace5.C: New test.\n\n\tPR c++/7917\n\t* g++.dg/parse/func-def1.C: New test.\n\n\tPR c++/8143\n\t* g++.dg/parse/undefined1.C: New test.\n\n\tPR c++/5723, PR c++/8522\n\t* g++.dg/parse/specialization1.C: New test.\n\n\tPR c++/163, PR c++/8595\n\t* g++.dg/parse/struct-as-enum1.C: New test.\n\n\tPR c++/9173\n\t* g++.dg/parse/undefined2.C: New test.\n\nFrom-SVN: r61624", "tree": {"sha": "5fed5f72c047ff44d182e3a1ded59b755c447ee4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fed5f72c047ff44d182e3a1ded59b755c447ee4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/comments", "author": null, "committer": null, "parents": [{"sha": "02ba6302897de5e08844780710f6dea54dae39d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ba6302897de5e08844780710f6dea54dae39d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ba6302897de5e08844780710f6dea54dae39d5"}], "stats": {"total": 186, "additions": 186, "deletions": 0}, "files": [{"sha": "80d67eec93ec9181ed115f185bce1c2aedd3cfc2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -1,3 +1,47 @@\n+2003-01-22  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/2738\n+\t* g++.dg/parse/ret-type1.C: New test.\n+\n+\tPR c++/3792\n+\t* g++.dg/parse/tmpl-outside1.C: New test.\n+\n+\tPR c++/4207\n+\t* g++.dg/parse/int-as-enum1.C: New test.\n+\n+\tPR c++/4903\n+\t* g++.dg/parse/no-typename1.C: New test.\n+\n+\tPR c++/5533\n+\t* g++.dg/parse/no-value1.C: New test.\n+\n+\tPR c++/5921\n+\t* g++.dg/parse/wrong-inline1.C: New test.\n+\n+\tPR c++/6402\n+\t* g++.dg/parse/ref1.C: New test.\n+\n+\tPR c++/6992\n+\t* g++.dg/parse/attr-ctor1.C: New test.\n+\n+\tPR c++/7229\n+\t* g++.dg/parse/namespace5.C: New test.\n+\n+\tPR c++/7917\n+\t* g++.dg/parse/func-def1.C: New test.\n+\n+\tPR c++/8143\n+\t* g++.dg/parse/undefined1.C: New test.\n+\n+\tPR c++/5723, PR c++/8522\n+\t* g++.dg/parse/specialization1.C: New test.\n+\n+\tPR c++/163, PR c++/8595\n+\t* g++.dg/parse/struct-as-enum1.C: New test.\n+\n+\tPR c++/9173\n+\t* g++.dg/parse/undefined2.C: New test.\n+\n 2003-01-22  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9298"}, {"sha": "4f8cd1dde664eac96898b8461e62608c1979d9c8", "filename": "gcc/testsuite/g++.dg/parse/attr-ctor1.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr-ctor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr-ctor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr-ctor1.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/6992\n+// Origin: <petr@scssoft.com>\n+// { dg-do compile }\n+\n+class A\n+{\n+    __attribute__((section(\"whatever\"))) A();\n+};"}, {"sha": "00c973d8813aae9f9e55b234d2e97aa429eb1536", "filename": "gcc/testsuite/g++.dg/parse/func-def1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffunc-def1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffunc-def1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffunc-def1.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/7917\n+// Origin: VACLAV HAISMAN <V.Haisman@sh.cvut.cz>\n+// { dg-do compile }\n+\n+struct A\n+{\n+    int i;\n+    void foo() = 0 {} // { dg-error \"\" }\n+\n+    A() : i(0) {}\n+};"}, {"sha": "2bf9cc0ddb7ab4650c5567546b14993cbad3bf8c", "filename": "gcc/testsuite/g++.dg/parse/int-as-enum1.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fint-as-enum1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fint-as-enum1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fint-as-enum1.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/4207\n+// Origin: <wanderer@rsu.ru>\n+// { dg-do compile }\n+\n+typedef int A;\n+enum ::A {}; // { dg-error \"\" }"}, {"sha": "277c0c8e66e297f5b0247ae1117eff15c38bfc8f", "filename": "gcc/testsuite/g++.dg/parse/namespace5.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnamespace5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnamespace5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnamespace5.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/7229\n+// { dg-do compile }\n+\n+namespace A { namespace B { typedef int type; } }\n+typename A::B<0>::type x; // { dg-error \"\" }"}, {"sha": "42059ce7b80ab7421c8413c373d84e2672deb3ec", "filename": "gcc/testsuite/g++.dg/parse/no-typename1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fno-typename1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fno-typename1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fno-typename1.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/4903\n+// Origin: Dan Marinescu <theverylittleone@hotmail.com>\n+// { dg-do compile }\n+\n+template <typename T> struct A\n+{\n+    template <typename U> struct B\n+    {\n+        A<T>::template B<U> foo(); // { dg-error \"\" }\n+    };\n+};"}, {"sha": "443a389ceebf5b1bf8de1179850af239be8745d1", "filename": "gcc/testsuite/g++.dg/parse/no-value1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fno-value1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fno-value1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fno-value1.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/5533\n+// { dg-do compile }\n+\n+namespace N\n+{\n+    template <class T> struct A{};\n+}\n+\n+template <class T> void foo(T) {}\n+\n+void bar()\n+{\n+    foo(N::A); // { dg-error \"\" }\n+}"}, {"sha": "d1dffb0670092345a5ea0dba6c7d47b21010053f", "filename": "gcc/testsuite/g++.dg/parse/ref1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fref1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fref1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fref1.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/6402\n+// Origin: Wolfgang Bangerth <wolfgang@dealii.org>\n+// { dg-do compile }\n+\n+class A\n+{\n+    A (const A&);\n+  public:\n+    A();\n+};\n+\n+struct B { A a; };\n+\n+struct C : public B\n+{\n+    void foo() { const A &ref = B::a; } // taking reference, not a copy!\n+};"}, {"sha": "a5dc93ab0d9702ccd2871a2be72b0c8d8db6bc34", "filename": "gcc/testsuite/g++.dg/parse/ret-type1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fret-type1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fret-type1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fret-type1.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/2738\n+// Origin: Wolfgang Bangerth <wolfgang.bangerth@iwr.uni-heidelberg.de>\n+// { dg-do compile }\n+\n+template <int i> class A\n+{\n+    class C { C(); };\n+};\n+\n+template <int i> void A<i>::C::C () {} // { dg-error \"return type\" }"}, {"sha": "7378570d65d3108616f2094d7e86b4e557753521", "filename": "gcc/testsuite/g++.dg/parse/specialization1.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fspecialization1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fspecialization1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fspecialization1.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/5723, PR c++/8522\n+// Origin: Matthias Kleinmann, Peter Karl Mueller <peter.karl.mueller@gmx.de>\n+// { dg-do compile }\n+\n+template <typename T> class A;\n+template <typename T> class A<T>::B; // { dg-error \"declaration\" }"}, {"sha": "016c6035b93a53de27f3a45a7b8e221347595264", "filename": "gcc/testsuite/g++.dg/parse/struct-as-enum1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fstruct-as-enum1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fstruct-as-enum1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fstruct-as-enum1.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/163, PR c++/8595\n+// Origin: <martin@loewis.home.cs.tu-berlin.de>, Mark Leone <mleone@pixar.com>\n+// { dg-do compile }\n+\n+namespace N\n+{\n+    struct A {};\n+}\n+\n+typedef enum N::A B; // { dg-error \"enum\" }"}, {"sha": "07c89e25ca62493fcf612c32eac3d8248a15ea88", "filename": "gcc/testsuite/g++.dg/parse/tmpl-outside1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftmpl-outside1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftmpl-outside1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftmpl-outside1.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/3792\n+// Origin: <david.abrahams@rcn.com>\n+// { dg-do compile }\n+\n+struct X\n+{\n+   template <int i> struct Y {};\n+};\n+\n+typedef X::template Y<0> y; // { dg-error \"template\" }"}, {"sha": "0ae4e88777c70c277e44d88234a1d57f34e1fb37", "filename": "gcc/testsuite/g++.dg/parse/undefined1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fundefined1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fundefined1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fundefined1.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/8143\n+// { dg-do compile }\n+\n+struct foo\n+{\n+    X x;                   // { dg-error \"\" }\n+\n+    foo(X)              {} // { dg-error \"\" }\n+    foo(X y, int) : x() {} // { dg-error \"\" }\n+};"}, {"sha": "a7e76f1b70d0539fcc3df56d2275bc3a6e947928", "filename": "gcc/testsuite/g++.dg/parse/undefined2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fundefined2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fundefined2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fundefined2.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/9173\n+// Origin: <wwieser@gmx.de>\n+// { dg-do compile }\n+\n+class A {};\n+\n+class B\n+{\n+    void foo(int,A::X); // { dg-error \"\" }\n+};\n+\n+void B::foo(int,A::X) {} // { dg-error \"\" }"}, {"sha": "22b9a9768aad90ce81debec0571e0f6e10a1b59a", "filename": "gcc/testsuite/g++.dg/parse/wrong-inline1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fwrong-inline1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fwrong-inline1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fwrong-inline1.C?ref=68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/5921\n+// Origin: Volker Reichelt <reichelt@igpm.rwth-aachen.de>\n+// { dg-do compile }\n+\n+struct A\n+{\n+  struct B { B(); };\n+};\n+\n+static A::B b;\n+\n+inline template <int i> void f (); // { dg-error \"\" }"}]}