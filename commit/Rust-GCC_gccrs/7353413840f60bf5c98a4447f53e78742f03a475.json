{"sha": "7353413840f60bf5c98a4447f53e78742f03a475", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM1MzQxMzg0MGY2MGJmNWM5OGE0NDQ3ZjUzZTc4NzQyZjAzYTQ3NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-02T12:29:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-02T12:29:37Z"}, "message": "[multiple changes]\n\n2012-10-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch8.adb: Minor reformatting.\n\n2012-10-02  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_disp.adb (Set_CPP_Constructors): Handle constructor with default\n\tparameters that covers the default constructor.\n\n2012-10-02  Yannick Moy  <moy@adacore.com>\n\n\t* s-bignum.adb: Minor stylistic and comment corrections.\n\n2012-10-02  Pascal Obry  <obry@adacore.com>\n\n\t* prj-util.adb (For_Interface_Sources): Iterate over all sources in\n\taggregate library projects.\n\nFrom-SVN: r191977", "tree": {"sha": "4cc2f8f728570cefa349073858b3d6a45aa62d84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cc2f8f728570cefa349073858b3d6a45aa62d84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7353413840f60bf5c98a4447f53e78742f03a475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7353413840f60bf5c98a4447f53e78742f03a475", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7353413840f60bf5c98a4447f53e78742f03a475", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7353413840f60bf5c98a4447f53e78742f03a475/comments", "author": null, "committer": null, "parents": [{"sha": "27dd0dde2d550587b8639a00dcbf8f9aa41c5093", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27dd0dde2d550587b8639a00dcbf8f9aa41c5093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27dd0dde2d550587b8639a00dcbf8f9aa41c5093"}], "stats": {"total": 136, "additions": 108, "deletions": 28}, "files": [{"sha": "b50ef17dcc0feea312a1530fd2a0c4925434d4c6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7353413840f60bf5c98a4447f53e78742f03a475/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7353413840f60bf5c98a4447f53e78742f03a475/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7353413840f60bf5c98a4447f53e78742f03a475", "patch": "@@ -1,3 +1,21 @@\n+2012-10-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch8.adb: Minor reformatting.\n+\n+2012-10-02  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Set_CPP_Constructors): Handle constructor with default\n+\tparameters that covers the default constructor.\n+\n+2012-10-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* s-bignum.adb: Minor stylistic and comment corrections.\n+\n+2012-10-02  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-util.adb (For_Interface_Sources): Iterate over all sources in\n+\taggregate library projects.\n+\n 2012-10-02  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch8.adb (Find_Direct_Name): The left-hand side of an"}, {"sha": "53ef628f89bd4bae4769a52f045e01ffedeaf6ef", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 58, "deletions": 1, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7353413840f60bf5c98a4447f53e78742f03a475/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7353413840f60bf5c98a4447f53e78742f03a475/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=7353413840f60bf5c98a4447f53e78742f03a475", "patch": "@@ -8537,6 +8537,10 @@ package body Exp_Disp is\n       Body_Stmts            : List_Id;\n       Init_Tags_List        : List_Id;\n \n+      Covers_Default_Constructor : Entity_Id := Empty;\n+\n+   --  Start of processing for Set_CPP_Constructor\n+\n    begin\n       pragma Assert (Is_CPP_Class (Typ));\n \n@@ -8622,7 +8626,9 @@ package body Exp_Disp is\n                       Defining_Identifier =>\n                         Make_Defining_Identifier (Loc,\n                           Chars (Defining_Identifier (P))),\n-                      Parameter_Type => New_Copy_Tree (Parameter_Type (P))));\n+                      Parameter_Type      =>\n+                        New_Copy_Tree (Parameter_Type (P)),\n+                      Expression          => New_Copy_Tree (Expression (P))));\n                   Next (P);\n                end loop;\n             end if;\n@@ -8713,6 +8719,17 @@ package body Exp_Disp is\n \n             Discard_Node (Wrapper_Body_Node);\n             Set_Init_Proc (Typ, Wrapper_Id);\n+\n+            --  If this constructor has parameters and all its parameters\n+            --  have defaults then it covers the default constructor. The\n+            --  semantic analyzer ensures that only one constructor with\n+            --  defaults covers the default constructor.\n+\n+            if Present (Parameter_Specifications (Parent (E)))\n+              and then Needs_No_Actuals (E)\n+            then\n+               Covers_Default_Constructor := Wrapper_Id;\n+            end if;\n          end if;\n \n          Next_Entity (E);\n@@ -8725,6 +8742,46 @@ package body Exp_Disp is\n          Set_Is_Abstract_Type (Typ);\n       end if;\n \n+      --  Handle constructor that has all its parameters with defaults and\n+      --  hence it covers the default constructor. We generate a wrapper IP\n+      --  which calls the covering constructor.\n+\n+      if Present (Covers_Default_Constructor) then\n+         Loc := Sloc (Covers_Default_Constructor);\n+\n+         Body_Stmts := New_List (\n+           Make_Procedure_Call_Statement (Loc,\n+             Name                   =>\n+               New_Reference_To (Covers_Default_Constructor, Loc),\n+             Parameter_Associations => New_List (\n+               Make_Identifier (Loc, Name_uInit))));\n+\n+         Wrapper_Id :=\n+           Make_Defining_Identifier (Loc, Make_Init_Proc_Name (Typ));\n+\n+         Wrapper_Body_Node :=\n+           Make_Subprogram_Body (Loc,\n+             Specification              =>\n+               Make_Procedure_Specification (Loc,\n+                 Defining_Unit_Name       => Wrapper_Id,\n+                 Parameter_Specifications => New_List (\n+                   Make_Parameter_Specification (Loc,\n+                     Defining_Identifier =>\n+                       Make_Defining_Identifier (Loc, Name_uInit),\n+                     Parameter_Type      =>\n+                       New_Reference_To (Typ, Loc)))),\n+\n+             Declarations               => No_List,\n+\n+             Handled_Statement_Sequence =>\n+               Make_Handled_Sequence_Of_Statements (Loc,\n+                 Statements         => Body_Stmts,\n+                 Exception_Handlers => No_List));\n+\n+         Discard_Node (Wrapper_Body_Node);\n+         Set_Init_Proc (Typ, Wrapper_Id);\n+      end if;\n+\n       --  If the CPP type has constructors then it must import also the default\n       --  C++ constructor. It is required for default initialization of objects\n       --  of the type. It is also required to elaborate objects of Ada types"}, {"sha": "2c70d1feeacb431d9a906a41307cc71c3a64c0ae", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7353413840f60bf5c98a4447f53e78742f03a475/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7353413840f60bf5c98a4447f53e78742f03a475/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=7353413840f60bf5c98a4447f53e78742f03a475", "patch": "@@ -439,7 +439,7 @@ package body Prj.Util is\n \n       --  Local declarations\n \n-      Iter : Source_Iterator := For_Each_Source (Tree, Project);\n+      Iter : Source_Iterator;\n       Sid  : Source_Id;\n       ALI  : ALI_Id;\n \n@@ -451,6 +451,12 @@ package body Prj.Util is\n    --  Start of processing for For_Interface_Sources\n \n    begin\n+      if Project.Qualifier = Aggregate_Library then\n+         Iter := For_Each_Source (Tree);\n+      else\n+         Iter := For_Each_Source (Tree, Project);\n+      end if;\n+\n       --  First look at each spec, check if the body is needed\n \n       loop"}, {"sha": "41c0aa9863653070b8b2e6935709a8be5fc256e3", "filename": "gcc/ada/s-bignum.adb", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7353413840f60bf5c98a4447f53e78742f03a475/gcc%2Fada%2Fs-bignum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7353413840f60bf5c98a4447f53e78742f03a475/gcc%2Fada%2Fs-bignum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-bignum.adb?ref=7353413840f60bf5c98a4447f53e78742f03a475", "patch": "@@ -98,7 +98,7 @@ package body System.Bignums is\n \n    procedure Free_Bignum (X : Bignum) is null;\n    --  Called to free a Bignum value used in intermediate computations. In\n-   --  this implementation using the secondary stack, does nothing at all,\n+   --  this implementation using the secondary stack, it does nothing at all,\n    --  because we rely on Mark/Release, but it may be of use for some\n    --  alternative implementation.\n \n@@ -115,12 +115,12 @@ package body System.Bignums is\n \n    function Add (X, Y : Digit_Vector; X_Neg, Y_Neg : Boolean) return Bignum is\n    begin\n-      --  If signs are the same we are doing an addition, it is convenient to\n-      --  ensure that the first operand is the longer of the two,\n+      --  If signs are the same, we are doing an addition, it is convenient to\n+      --  ensure that the first operand is the longer of the two.\n \n       if X_Neg = Y_Neg then\n          if X'Last < Y'Last then\n-            return Add (Y => X, X => Y, X_Neg => Y_Neg, Y_Neg => X_Neg);\n+            return Add (X => Y, Y => X, X_Neg => Y_Neg, Y_Neg => X_Neg);\n \n          --  Here signs are the same, and the first operand is the longer\n \n@@ -151,9 +151,9 @@ package body System.Bignums is\n             end;\n          end if;\n \n-         --  Signs are different so really this is an subtraction, we want to\n-         --  make sure that the largest magnitude operand is the first one, and\n-         --  then the result will have the sign of the first operand.\n+      --  Signs are different so really this is a subtraction, we want to make\n+      --  sure that the largest magnitude operand is the first one, and then\n+      --  the result will have the sign of the first operand.\n \n       else\n          declare\n@@ -164,7 +164,7 @@ package body System.Bignums is\n                return Normalize (Zero_Data);\n \n             elsif CR = LT then\n-               return Add (Y => X, X => Y, X_Neg => Y_Neg, Y_Neg => X_Neg);\n+               return Add (X => Y, Y => X, X_Neg => Y_Neg, Y_Neg => X_Neg);\n \n             else\n                pragma Assert (X_Neg /= Y_Neg and then CR = GT);\n@@ -173,7 +173,7 @@ package body System.Bignums is\n \n                declare\n                   Diff : Digit_Vector (1 .. X'Length);\n-                  RD    : DD;\n+                  RD   : DD;\n \n                begin\n                   RD := 0;\n@@ -401,7 +401,7 @@ package body System.Bignums is\n    -- Big_EQ --\n    ------------\n \n-   function Big_EQ  (X, Y : Bignum) return Boolean is\n+   function Big_EQ (X, Y : Bignum) return Boolean is\n    begin\n       return Compare (X.D, Y.D, X.Neg, Y.Neg) = EQ;\n    end Big_EQ;\n@@ -410,7 +410,7 @@ package body System.Bignums is\n    -- Big_GE --\n    ------------\n \n-   function Big_GE  (X, Y : Bignum) return Boolean is\n+   function Big_GE (X, Y : Bignum) return Boolean is\n    begin\n       return Compare (X.D, Y.D, X.Neg, Y.Neg) /= LT;\n    end Big_GE;\n@@ -419,7 +419,7 @@ package body System.Bignums is\n    -- Big_GT --\n    ------------\n \n-   function Big_GT  (X, Y : Bignum) return Boolean is\n+   function Big_GT (X, Y : Bignum) return Boolean is\n    begin\n       return Compare (X.D, Y.D, X.Neg, Y.Neg) = GT;\n    end Big_GT;\n@@ -428,7 +428,7 @@ package body System.Bignums is\n    -- Big_LE --\n    ------------\n \n-   function Big_LE  (X, Y : Bignum) return Boolean is\n+   function Big_LE (X, Y : Bignum) return Boolean is\n    begin\n       return Compare (X.D, Y.D, X.Neg, Y.Neg) /= GT;\n    end Big_LE;\n@@ -437,7 +437,7 @@ package body System.Bignums is\n    -- Big_LT --\n    ------------\n \n-   function Big_LT  (X, Y : Bignum) return Boolean is\n+   function Big_LT (X, Y : Bignum) return Boolean is\n    begin\n       return Compare (X.D, Y.D, X.Neg, Y.Neg) = LT;\n    end Big_LT;\n@@ -465,7 +465,7 @@ package body System.Bignums is\n    --   13    -5      -2        3       -13   -5      -3       -3\n    --   14    -5      -1        4       -14   -5      -4       -4\n \n-   function Big_Mod  (X, Y : Bignum) return Bignum is\n+   function Big_Mod (X, Y : Bignum) return Bignum is\n       Q, R : Bignum;\n \n    begin\n@@ -474,7 +474,7 @@ package body System.Bignums is\n       if X.Neg = Y.Neg then\n          return Big_Rem (X, Y);\n \n-      --  Case where mod is different\n+      --  Case where Mod is different\n \n       else\n          --  Do division\n@@ -546,7 +546,7 @@ package body System.Bignums is\n    -- Big_NE --\n    ------------\n \n-   function Big_NE  (X, Y : Bignum) return Boolean is\n+   function Big_NE (X, Y : Bignum) return Boolean is\n    begin\n       return Compare (X.D, Y.D, X.Neg, Y.Neg) /= EQ;\n    end Big_NE;\n@@ -583,11 +583,11 @@ package body System.Bignums is\n    --   13    -5     3      -13   -5     -3\n    --   14    -5     4      -14   -5     -4\n \n-   function Big_Rem  (X, Y : Bignum) return Bignum is\n+   function Big_Rem (X, Y : Bignum) return Bignum is\n       Q, R : Bignum;\n    begin\n       Div_Rem (X, Y, Q, R, Discard_Quotient => True);\n-      R.Neg :=  R.Len > 0 and then X.Neg;\n+      R.Neg := R.Len > 0 and then X.Neg;\n       return R;\n    end Big_Rem;\n \n@@ -665,10 +665,10 @@ package body System.Bignums is\n \n       if Compare (X.D, Y.D, False, False) = LT then\n          Remainder := Normalize (X.D);\n-         Quotient := Normalize (Zero_Data);\n+         Quotient  := Normalize (Zero_Data);\n          return;\n \n-      --  If both X and Y are comfortably less than 2**63-1 we can just use\n+      --  If both X and Y are comfortably less than 2**63-1, we can just use\n       --  Long_Long_Integer arithmetic. Note it is good not to do an accurate\n       --  range check here since -2**63 / -1 overflows!\n \n@@ -703,7 +703,7 @@ package body System.Bignums is\n                ND := ND rem Div;\n             end loop;\n \n-            Quotient := Normalize (Result);\n+            Quotient  := Normalize (Result);\n             Remdr (1) := SD (ND);\n             Remainder := Normalize (Remdr);\n             return;\n@@ -1007,7 +1007,7 @@ package body System.Bignums is\n       end loop;\n \n       B := Allocate_Bignum (X'Last - J + 1);\n-      B.Neg :=  B.Len > 0 and then Neg;\n+      B.Neg := B.Len > 0 and then Neg;\n       B.D := X (J .. X'Last);\n       return B;\n    end Normalize;"}, {"sha": "ec94ed627f8504e5875daab18b482886316df859", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7353413840f60bf5c98a4447f53e78742f03a475/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7353413840f60bf5c98a4447f53e78742f03a475/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=7353413840f60bf5c98a4447f53e78742f03a475", "patch": "@@ -5027,9 +5027,8 @@ package body Sem_Ch8 is\n             if Ada_Version >= Ada_2012\n               and then\n                 (Nkind (Parent (N)) in N_Subexpr\n-                  or else\n-                    Nkind_In (Parent (N), N_Object_Declaration,\n-                                          N_Assignment_Statement))\n+                  or else Nkind_In (Parent (N), N_Object_Declaration,\n+                                                N_Assignment_Statement))\n             then\n                Check_Implicit_Dereference (N, Etype (E));\n             end if;"}]}