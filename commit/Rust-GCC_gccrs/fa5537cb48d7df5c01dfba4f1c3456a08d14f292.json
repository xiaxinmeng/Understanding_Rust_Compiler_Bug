{"sha": "fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE1NTM3Y2I0OGQ3ZGY1YzAxZGZiYTRmMWMzNDU2YTA4ZDE0ZjI5Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:43:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:43:23Z"}, "message": "New file.\n\nResync.\n\nFrom-SVN: r123611", "tree": {"sha": "51da2dab55493e0366ca4d794cd80c8d4315d781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51da2dab55493e0366ca4d794cd80c8d4315d781"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/comments", "author": null, "committer": null, "parents": [{"sha": "8405d93cb85e88f95daae9de30039cc9745f507d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8405d93cb85e88f95daae9de30039cc9745f507d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8405d93cb85e88f95daae9de30039cc9745f507d"}], "stats": {"total": 927, "additions": 583, "deletions": 344}, "files": [{"sha": "6841f934dcfaead1a4db39c9caefac6fb16c90cb", "filename": "gcc/ada/a-cgcaso.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-cgcaso.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-cgcaso.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cgcaso.ads?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "93f45fa23156b20fad04f0d7ef3f69ee97b11733", "filename": "gcc/ada/a-chtgop.adb", "status": "modified", "additions": 49, "deletions": 13, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-chtgop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-chtgop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chtgop.adb?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -133,7 +133,8 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n \n    begin\n       if HT.Busy > 0 then\n-         raise Program_Error;\n+         raise Program_Error with\n+           \"attempt to tamper with elements (container is busy)\";\n       end if;\n \n       while HT.Length > 0 loop\n@@ -171,14 +172,16 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n \n    begin\n       if HT.Length = 0 then\n-         raise Program_Error;\n+         raise Program_Error with\n+           \"attempt to delete node from empty hashed container\";\n       end if;\n \n       Indx := Index (HT, X);\n       Prev := HT.Buckets (Indx);\n \n       if Prev = null then\n-         raise Program_Error;\n+         raise Program_Error with\n+           \"attempt to delete node from empty hash bucket\";\n       end if;\n \n       if Prev = X then\n@@ -188,14 +191,16 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n       end if;\n \n       if HT.Length = 1 then\n-         raise Program_Error;\n+         raise Program_Error with\n+           \"attempt to delete node not in its proper hash bucket\";\n       end if;\n \n       loop\n          Curr := Next (Prev);\n \n          if Curr = null then\n-            raise Program_Error;\n+            raise Program_Error with\n+              \"attempt to delete node not in its proper hash bucket\";\n          end if;\n \n          if Curr = X then\n@@ -288,16 +293,19 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n          return True;\n       end if;\n \n-      L_Index := 0;\n+      --  Find the first node of hash table L\n \n+      L_Index := 0;\n       loop\n          L_Node := L.Buckets (L_Index);\n          exit when L_Node /= null;\n          L_Index := L_Index + 1;\n       end loop;\n \n-      N := L.Length;\n+      --  For each node of hash table L, search for an equivalent node in hash\n+      --  table R.\n \n+      N := L.Length;\n       loop\n          if not Find (HT => R, Key => L_Node) then\n             return False;\n@@ -308,10 +316,14 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n          L_Node := Next (L_Node);\n \n          if L_Node = null then\n+            --  We have exhausted the nodes in this bucket\n+\n             if N = 0 then\n                return True;\n             end if;\n \n+            --  Find the next bucket\n+\n             loop\n                L_Index := L_Index + 1;\n                L_Node := L.Buckets (L_Index);\n@@ -347,7 +359,7 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n    ------------------\n \n    procedure Generic_Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       HT     : out Hash_Table_Type)\n    is\n       N  : Count_Type'Base;\n@@ -359,13 +371,18 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n       Count_Type'Base'Read (Stream, N);\n \n       if N < 0 then\n-         raise Program_Error;\n+         raise Program_Error with \"stream appears to be corrupt\";\n       end if;\n \n       if N = 0 then\n          return;\n       end if;\n \n+      --  The RM does not specify whether or how the capacity changes when a\n+      --  hash table is streamed in. Therefore we decide here to allocate a new\n+      --  buckets array only when it's necessary to preserve representation\n+      --  invariants.\n+\n       if HT.Buckets = null\n         or else HT.Buckets'Length < N\n       then\n@@ -393,7 +410,7 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n    -------------------\n \n    procedure Generic_Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       HT     : Hash_Table_Type)\n    is\n       procedure Write (Node : Node_Access);\n@@ -411,6 +428,9 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n       end Write;\n \n    begin\n+      --  See Generic_Read for an explanation of why we do not stream out the\n+      --  buckets array length too.\n+\n       Count_Type'Base'Write (Stream, HT.Length);\n       Write (HT);\n    end Generic_Write;\n@@ -444,7 +464,8 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n       end if;\n \n       if Source.Busy > 0 then\n-         raise Program_Error;\n+         raise Program_Error with\n+           \"attempt to tamper with elements (container is busy)\";\n       end if;\n \n       Clear (Target);\n@@ -507,6 +528,13 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n       end if;\n \n       if HT.Length = 0 then\n+\n+         --  This is the easy case. There are no nodes, so no rehashing is\n+         --  necessary. All we need to do is allocate a new buckets array\n+         --  having a length implied by the specified capacity. (We say\n+         --  \"implied by\" because bucket arrays are always allocated with a\n+         --  length that corresponds to a prime number.)\n+\n          if N = 0 then\n             Free (HT.Buckets);\n             return;\n@@ -537,6 +565,12 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n       end if;\n \n       if N < HT.Buckets'Length then\n+\n+         --  This is a request to contract the buckets array. The amount of\n+         --  contraction is bounded in order to preserve the invariant that the\n+         --  buckets array length is never smaller than the number of elements\n+         --  (the load factor is 1).\n+\n          if HT.Length >= HT.Buckets'Length then\n             return;\n          end if;\n@@ -556,7 +590,8 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n       end if;\n \n       if HT.Busy > 0 then\n-         raise Program_Error;\n+         raise Program_Error with\n+           \"attempt to tamper with elements (container is busy)\";\n       end if;\n \n       Rehash : declare\n@@ -622,7 +657,8 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n                   end loop;\n \n                   Free (Dst_Buckets);\n-                  raise Program_Error;\n+                  raise Program_Error with\n+                    \"hash function raised exception during rehash\";\n             end;\n \n             Src_Index := Src_Index + 1;"}, {"sha": "eac81e096e70381b5d563a0b8f1d47fdf907710f", "filename": "gcc/ada/a-cohata.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-cohata.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-cohata.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohata.ads?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -6,11 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,6 +29,9 @@\n -- This unit was originally developed by Matthew J Heaney.                  --\n ------------------------------------------------------------------------------\n \n+--  This package declares the hash-table type used to implement hashed\n+--  containers.\n+\n package Ada.Containers.Hash_Tables is\n    pragma Preelaborate;\n "}, {"sha": "f1a5f3c505b40fc9d78e197a9c33e8addeb01846", "filename": "gcc/ada/a-disedf.ads", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-disedf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-disedf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-disedf.ads?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -0,0 +1,50 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                  A D A . D I S P A T C H I N G . E D F                   --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This unit is not implemented in typical GNAT implementations that lie on\n+--  top of operating systems, because it is infeasible to implement in such\n+--  environments.\n+\n+--  If a target environment provides appropriate support for this package,\n+--  then the Unimplemented_Unit pragma should be removed from this spec and\n+--  an appropriate body provided.\n+\n+with Ada.Real_Time;\n+with Ada.Task_Identification;\n+\n+package Ada.Dispatching.EDF is\n+   pragma Preelaborate;\n+\n+   pragma Unimplemented_Unit;\n+\n+   subtype Deadline is Ada.Real_Time.Time;\n+\n+   Default_Deadline : constant Deadline := Ada.Real_Time.Time_Last;\n+\n+   procedure Set_Deadline\n+      (D : Deadline;\n+       T : Ada.Task_Identification.Task_Id :=\n+             Ada.Task_Identification.Current_Task);\n+\n+   procedure Delay_Until_And_Set_Deadline\n+      (Delay_Until_Time : Ada.Real_Time.Time;\n+       Deadline_Offset  : Ada.Real_Time.Time_Span);\n+\n+   function Get_Deadline\n+      (T : Ada.Task_Identification.Task_Id :=\n+             Ada.Task_Identification.Current_Task)\n+       return Deadline;\n+\n+end Ada.Dispatching.EDF;"}, {"sha": "1c86cee792569ab104efb2eb331b51ac302c2326", "filename": "gcc/ada/a-etgrbu.ads", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-etgrbu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-etgrbu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-etgrbu.ads?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -0,0 +1,87 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--      A D A . E X E C U T I O N _ T I M E . G R O U P _ B U D G E T S     --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This unit is not implemented in typical GNAT implementations that lie on\n+--  top of operating systems, because it is infeasible to implement in such\n+--  environments.\n+\n+--  If a target environment provides appropriate support for this package,\n+--  then the Unimplemented_Unit pragma should be removed from this spec and\n+--  an appropriate body provided.\n+\n+with System;\n+\n+package Ada.Execution_Time.Group_Budgets is\n+   pragma Preelaborate;\n+\n+   pragma Unimplemented_Unit;\n+\n+   type Group_Budget is tagged limited private;\n+\n+   type Group_Budget_Handler is access\n+      protected procedure (GB : in out Group_Budget);\n+\n+   type Task_Array is\n+      array (Positive range <>) of Ada.Task_Identification.Task_Id;\n+\n+   Min_Handler_Ceiling : constant System.Any_Priority :=\n+                           System.Any_Priority'First;\n+   --  Initial value is an arbitrary choice ???\n+\n+   procedure Add_Task\n+     (GB : in out Group_Budget;\n+      T  : Ada.Task_Identification.Task_Id);\n+\n+   procedure Remove_Task\n+     (GB : in out Group_Budget;\n+      T  : Ada.Task_Identification.Task_Id);\n+\n+   function Is_Member\n+     (GB : Group_Budget;\n+      T  : Ada.Task_Identification.Task_Id) return Boolean;\n+\n+   function Is_A_Group_Member\n+     (T : Ada.Task_Identification.Task_Id) return Boolean;\n+\n+   function Members (GB : Group_Budget) return Task_Array;\n+\n+   procedure Replenish\n+     (GB : in out Group_Budget;\n+      To : Ada.Real_Time.Time_Span);\n+\n+   procedure Add\n+     (GB       : in out Group_Budget;\n+      Interval : Ada.Real_Time.Time_Span);\n+\n+   function Budget_Has_Expired (GB : Group_Budget) return Boolean;\n+\n+   function Budget_Remaining\n+     (GB : Group_Budget) return Ada.Real_Time.Time_Span;\n+\n+   procedure Set_Handler\n+     (GB      : in out Group_Budget;\n+      Handler : Group_Budget_Handler);\n+\n+   function Current_Handler (GB : Group_Budget) return Group_Budget_Handler;\n+\n+   procedure Cancel_Handler\n+     (GB        : in out Group_Budget;\n+      Cancelled : out Boolean);\n+\n+   Group_Budget_Error : exception;\n+\n+private\n+   type Group_Budget is tagged limited null record;\n+end Ada.Execution_Time.Group_Budgets;"}, {"sha": "c4b4577945062f8add6577686322bf40a389916a", "filename": "gcc/ada/a-exetim.ads", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-exetim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-exetim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim.ads?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -0,0 +1,84 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                   A D A . E X E C U T I O N _ T I M E                    --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This unit is not implemented in typical GNAT implementations that lie on\n+--  top of operating systems, because it is infeasible to implement in such\n+--  environments.\n+\n+--  If a target environment provides appropriate support for this package\n+--  then the Unimplemented_Unit pragma should be removed from this spec and\n+--  an appropriate body provided.\n+\n+with Ada.Task_Identification;\n+with Ada.Real_Time;\n+\n+package Ada.Execution_Time is\n+   pragma Preelaborate;\n+\n+   pragma Unimplemented_Unit;\n+\n+   type CPU_Time is private;\n+\n+   CPU_Time_First : constant CPU_Time;\n+   CPU_Time_Last  : constant CPU_Time;\n+   CPU_Time_Unit  : constant := 0.000001;\n+   CPU_Tick       : constant Ada.Real_Time.Time_Span;\n+\n+   function Clock\n+     (T : Ada.Task_Identification.Task_Id\n+          := Ada.Task_Identification.Current_Task)\n+      return CPU_Time;\n+\n+   function \"+\"\n+     (Left  : CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time;\n+\n+   function \"+\"\n+     (Left  : Ada.Real_Time.Time_Span;\n+      Right : CPU_Time) return CPU_Time;\n+\n+   function \"-\"\n+     (Left  : CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time;\n+\n+   function \"-\"\n+     (Left  : CPU_Time;\n+      Right : CPU_Time) return Ada.Real_Time.Time_Span;\n+\n+   function \"<\"  (Left, Right : CPU_Time) return Boolean;\n+   function \"<=\" (Left, Right : CPU_Time) return Boolean;\n+   function \">\"  (Left, Right : CPU_Time) return Boolean;\n+   function \">=\" (Left, Right : CPU_Time) return Boolean;\n+\n+   procedure Split\n+     (T  : CPU_Time;\n+      SC : out Ada.Real_Time.Seconds_Count;\n+      TS : out Ada.Real_Time.Time_Span);\n+\n+   function Time_Of\n+      (SC : Ada.Real_Time.Seconds_Count;\n+       TS : Ada.Real_Time.Time_Span := Ada.Real_Time.Time_Span_Zero)\n+       return CPU_Time;\n+\n+private\n+\n+   type CPU_Time is new Ada.Real_Time.Time;\n+\n+   CPU_Time_First : constant CPU_Time  := CPU_Time (Ada.Real_Time.Time_First);\n+   CPU_Time_Last  : constant CPU_Time  := CPU_Time (Ada.Real_Time.Time_Last);\n+\n+   CPU_Tick : constant Ada.Real_Time.Time_Span := Ada.Real_Time.Tick;\n+\n+end Ada.Execution_Time;"}, {"sha": "f2b62ca9ae6de6f161e97dcbcd7316e029d8c2e9", "filename": "gcc/ada/a-extiti.ads", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-extiti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fa-extiti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-extiti.ads?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -0,0 +1,62 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--             A D A . E X E C U T I O N _ T I M E . T I M E R S            --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This unit is not implemented in typical GNAT implementations that lie on\n+--  top of operating systems, because it is infeasible to implement in such\n+--  environments.\n+\n+--  If a target environment provides appropriate support for this package,\n+--  then the Unimplemented_Unit pragma should be removed from this spec and\n+--  an appropriate body provided.\n+\n+with System;\n+\n+package Ada.Execution_Time.Timers is\n+   pragma Preelaborate;\n+\n+   pragma Unimplemented_Unit;\n+\n+   type Timer (T : access Ada.Task_Identification.Task_Id) is\n+      tagged limited private;\n+\n+   type Timer_Handler is\n+      access protected procedure (TM : in out Timer);\n+\n+   Min_Handler_Ceiling : constant System.Any_Priority := System.Priority'Last;\n+\n+   procedure Set_Handler\n+     (TM      : in out Timer;\n+      In_Time : Ada.Real_Time.Time_Span;\n+      Handler : Timer_Handler);\n+\n+   procedure Set_Handler\n+     (TM      : in out Timer;\n+      At_Time : CPU_Time;\n+      Handler : Timer_Handler);\n+\n+   function Current_Handler (TM : Timer) return Timer_Handler;\n+\n+   procedure Cancel_Handler\n+     (TM        : in out Timer;\n+      Cancelled : in out Boolean);\n+\n+   function Time_Remaining (TM : Timer) return Ada.Real_Time.Time_Span;\n+\n+   Timer_Resource_Error : exception;\n+\n+private\n+   type Timer (T : access Ada.Task_Identification.Task_Id) is\n+      tagged limited null record;\n+end Ada.Execution_Time.Timers;"}, {"sha": "6fbb93d9a0313e1c0a67e98c498fe12b9158ef28", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -39,9 +39,14 @@\n \n #include <dirent.h>\n \n+/*  Constants used for the form parameter encoding values  */\n+#define Encoding_UTF8 0\n+#define Encoding_8bits 1\n+\n typedef long OS_Time; /* Type corresponding to GNAT.OS_Lib.OS_Time */\n \n extern int    __gnat_max_path_len;\n+extern OS_Time __gnat_current_time\t\t   (void);\n extern void   __gnat_to_gm_time\t\t\t   (OS_Time *, int *,\n \t\t\t\t\t\t    int *, int *,\n \t\t\t\t\t\t    int *, int *,\n@@ -66,8 +71,8 @@ extern int    __gnat_open_new_temp\t\t   (char *, int);\n extern int    __gnat_mkdir\t\t\t   (char *);\n extern int    __gnat_stat\t\t\t   (char *,\n \t\t\t\t\t\t    struct stat *);\n-extern FILE  *__gnat_fopen\t\t\t   (char *, char *);\n-extern FILE  *__gnat_freopen\t\t\t   (char *, char *, FILE *);\n+extern FILE  *__gnat_fopen\t\t\t   (char *, char *, int);\n+extern FILE  *__gnat_freopen\t\t\t (char *, char *, FILE *, int);\n extern int    __gnat_open_read                     (char *, int);\n extern int    __gnat_open_rw                       (char *, int);\n extern int    __gnat_open_create                   (char *, int);\n@@ -117,7 +122,7 @@ extern char  *__gnat_to_host_dir_spec              (char *, int);\n extern char  *__gnat_to_host_file_spec             (char *);\n extern char  *__gnat_to_canonical_path_spec\t   (char *);\n extern void   __gnat_adjust_os_resource_limits\t   (void);\n-extern void   convert_addresses\t\t\t   (void *, int,\n+extern void   convert_addresses\t\t\t   (const char *, void *, int,\n \t\t\t\t\t\t    void *, int *);\n extern int    __gnat_copy_attribs\t\t   (char *, char *, int);\n extern int    __gnat_feof\t\t  \t   (FILE *);"}, {"sha": "83cfa69808417f0dcd5bf144bcf446bd871dba1b", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -180,10 +180,10 @@ package body Bindusg is\n \n       Write_Line (\"  -s        Require all source files to be present\");\n \n-      --  Line for -Sxx switch\n+      --  Line for -S?? switch\n \n-      Write_Line (\"  -S??      Sin/lo/hi/xx for Initialize_Scalars \" &\n-                  \"invalid/low/high/hex\");\n+      Write_Line (\"  -S??      Sin/lo/hi/xx/ev Initialize_Scalars \" &\n+                  \"invalid/low/high/hex/env var\");\n \n       --  Line for -static\n "}, {"sha": "65897df5d66fbb8b4e73af30f7390637598e31c1", "filename": "gcc/ada/exp_aggr.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fexp_aggr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fexp_aggr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.ads?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,8 @@ package Exp_Aggr is\n    procedure Expand_N_Extension_Aggregate (N : Node_Id);\n \n    function Is_Delayed_Aggregate (N : Node_Id) return Boolean;\n-   --  returns True if N is a delayed aggregate of some kind\n+   --  Returns True if N is an aggregate of some kind whose Expansion_Delayed\n+   --  flag is set (see sinfo for meaning of flag).\n \n    procedure Convert_Aggr_In_Object_Decl  (N : Node_Id);\n    --  N is a N_Object_Declaration with an expression which must be"}, {"sha": "3883d3c5bb63479048da126a1a88de86aa2b0c93", "filename": "gcc/ada/exp_tss.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fexp_tss.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fexp_tss.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.ads?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -198,7 +198,7 @@ package Exp_Tss is\n    --  the corresponding base type (see Base_Init_Proc function). A special\n    --  case arises for concurrent types. Such types do not themselves have an\n    --  init proc TSS, but initialization is required. The init proc used is\n-   --  the one fot the corresponding record type (see Base_Init_Proc).\n+   --  the one for the corresponding record type (see Base_Init_Proc).\n \n    function Base_Init_Proc (Typ : Entity_Id) return Entity_Id;\n    --  Obtains the _Init TSS entry from the base type of the entity, and also"}, {"sha": "2fb89fd265291b54a3d1f6ac4d1faa7fb39baa2a", "filename": "gcc/ada/g-io-put-vxworks.adb", "status": "renamed", "additions": 20, "deletions": 59, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fg-io-put-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fg-io-put-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-io-put-vxworks.adb?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -2,11 +2,11 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---          A D A . D I S P A T C H I N G . R O U N D _ R O B I N           --\n+--                              G N A T . I O                               --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2006, Free Software Foundation, Inc.            --\n+--                     Copyright (C) 1995-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -16,8 +16,8 @@\n -- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n -- for  more details.  You should have  received  a copy of the GNU General --\n -- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n--- MA 02111-1307, USA.                                                      --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n --                                                                          --\n -- As a special exception,  if other files  instantiate  generics from this --\n -- unit, or you link  this unit with other files  to produce an executable, --\n@@ -31,64 +31,25 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-package body Ada.Dispatching.Round_Robin is\n+--  vxworks zfp version of Put (C : Character)\n \n-   -----------------\n-   -- Set_Quantum --\n-   -----------------\n+with Interfaces.C; use Interfaces.C;\n \n-   procedure Set_Quantum\n-     (Pri     : System.Priority;\n-      Quantum : Ada.Real_Time.Time_Span)\n-   is\n-      pragma Unreferenced (Quantum);\n-   begin\n-      if not Is_Round_Robin (Pri) then\n-         raise Dispatching_Policy_Error;\n-      end if;\n-   end Set_Quantum;\n+separate (GNAT.IO)\n+procedure Put (C : Character) is\n \n-   -----------------\n-   -- Set_Quantum --\n-   -----------------\n+   function ioGlobalStdGet\n+     (File : int) return int;\n+   pragma Import (C, ioGlobalStdGet, \"ioGlobalStdGet\");\n \n-   procedure Set_Quantum\n-     (Low, High : System.Priority;\n-      Quantum   : Ada.Real_Time.Time_Span)\n-   is\n-      pragma Unreferenced (Quantum);\n-   begin\n-      for Index in Low .. High loop\n-         if not Is_Round_Robin (Index) then\n-            raise Dispatching_Policy_Error;\n-         end if;\n-      end loop;\n-   end Set_Quantum;\n+   procedure fdprintf\n+     (File   : int;\n+      Format : String;\n+      Value  : Character);\n+   pragma Import (C, fdprintf, \"fdprintf\");\n \n-   --------------------\n-   -- Actual_Quantum --\n-   --------------------\n+   Stdout_ID : constant int := 1;\n \n-   function Actual_Quantum\n-     (Pri : System.Priority) return Ada.Real_Time.Time_Span\n-   is\n-   begin\n-      if Is_Round_Robin (Pri) then\n-         return Default_Quantum;\n-      else\n-         raise Dispatching_Policy_Error;\n-      end if;\n-   end Actual_Quantum;\n-\n-   --------------------\n-   -- Is_Round_Robin --\n-   --------------------\n-\n-   function Is_Round_Robin (Pri : System.Priority) return Boolean is\n-      function Get_Policy (Prio : System.Any_Priority) return Character;\n-      pragma Import (C, Get_Policy, \"__gnat_get_specific_dispatching\");\n-   begin\n-      return Get_Policy (Pri) = 'R';\n-   end Is_Round_Robin;\n-\n-end Ada.Dispatching.Round_Robin;\n+begin\n+   fdprintf (ioGlobalStdGet (Stdout_ID), \"%c\" & ASCII.NUL, C);\n+end Put;", "previous_filename": "gcc/ada/a-diroro.adb"}, {"sha": "1f1c319001c70c726077f35fdf790ce2a17591ba", "filename": "gcc/ada/g-io-put.adb", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fg-io-put.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fg-io-put.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-io-put.adb?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -0,0 +1,42 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                              G N A T . I O                               --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--                     Copyright (C) 1995-2006, AdaCore                     --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  zfp version of Put (C : Character)\n+\n+separate (GNAT.IO)\n+procedure Put (C : Character) is\n+   procedure Putchar (C : Character);\n+   pragma Import (C, Putchar, \"putchar\");\n+begin\n+   Putchar (C);\n+end Put;"}, {"sha": "b5d812008fd449397c685e775a75db7a4dcdf072", "filename": "gcc/ada/gigi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgigi.h?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2006 Free Software Foundation, Inc.          *\n+ *          Copyright (C) 1992-2006, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "774397548e925f02a7c47618d34368ce02b63d3e", "filename": "gcc/ada/gnatvsn.adb", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fgnatvsn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fgnatvsn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatvsn.adb?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---       Copyright (C) 2002-2003 Free Software Foundation, Inc.             --\n+--       Copyright (C) 2002-2006 Free Software Foundation, Inc.             --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,15 +40,6 @@ package body Gnatvsn is\n    --  check for the nul character in Gnat_Version_String.\n    pragma Import (C, Version_String, \"version_string\");\n \n-   -------------------------\n-   -- Get_Gnat_Build_Type --\n-   -------------------------\n-\n-   function Get_Gnat_Build_Type return Gnat_Build_Type is\n-   begin\n-      return FSF;\n-   end Get_Gnat_Build_Type;\n-\n    -------------------------\n    -- Gnat_Version_String --\n    -------------------------"}, {"sha": "81a8f34ead06d7e311e8eabc67f49403eb2a4cf2", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 133, "deletions": 211, "changes": 344, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -449,15 +449,14 @@ package Rtsfind is\n \n      RE_Null,\n \n-     RE_Exceptions_Available_In_HIE,     -- Ada.Exceptions\n      RE_Code_Loc,                        -- Ada.Exceptions\n      RE_Current_Target_Exception,        -- Ada.Exceptions (JGNAT use only)\n      RE_Exception_Id,                    -- Ada.Exceptions\n      RE_Exception_Information,           -- Ada.Exceptions\n      RE_Exception_Message,               -- Ada.Exceptions\n      RE_Exception_Name_Simple,           -- Ada.Exceptions\n      RE_Exception_Occurrence,            -- Ada.Exceptions\n-     RE_Null_Id,                         -- Ada.Exceptions\n+     RE_Local_Raise,                     -- Ada.Exceptions\n      RE_Null_Occurrence,                 -- Ada.Exceptions\n      RE_Poll,                            -- Ada.Exceptions\n      RE_Raise_Exception,                 -- Ada.Exceptions\n@@ -483,41 +482,45 @@ package Rtsfind is\n \n      RE_Root_Stream_Type,                -- Ada.Streams\n      RE_Stream_Element,                  -- Ada.Streams\n-     RE_Stream_Element_Count,            -- Ada.Streams\n-     RE_Stream_Element_Offset,           -- Ada.Streams\n-     RE_Stream_Element_Array,            -- Ada.Streams\n \n      RE_Stream_Access,                   -- Ada.Streams.Stream_IO\n \n      RE_Abstract_Interface,              -- Ada.Tags\n+     RE_Access_Level,                    -- Ada.Tags\n      RE_Addr_Ptr,                        -- Ada.Tags\n-     RE_Address_Array,                   -- Ada.Tags\n-     RE_CW_Membership,                   -- Ada.Tags\n+     RE_Base_Address,                    -- Ada.Tags\n+     RE_Cstring_Ptr,                     -- Ada.Tags\n+     RE_Default_Prim_Op_Count,           -- Ada.Tags\n      RE_Descendant_Tag,                  -- Ada.Tags\n+     RE_Dispatch_Table,                  -- Ada.Tags\n      RE_Displace,                        -- Ada.Tags\n      RE_DT_Entry_Size,                   -- Ada.Tags\n+     RE_DT_Min_Prologue_Size,            -- Ada.Tags\n      RE_DT_Prologue_Size,                -- Ada.Tags\n+     RE_DT_Typeinfo_Ptr_Size,            -- Ada.Tags\n+     RE_Expanded_Name,                   -- Ada.Tags\n      RE_External_Tag,                    -- Ada.Tags\n+     RO_TA_External_Tag,                 -- Ada.Tags\n      RE_Get_Access_Level,                -- Ada.Tags\n      RE_Get_Entry_Index,                 -- Ada.Tags\n-     RE_Get_External_Tag,                -- Ada.Tags\n      RE_Get_Offset_Index,                -- Ada.Tags\n      RE_Get_Predefined_Prim_Op_Address,  -- Ada.Tags\n      RE_Get_Prim_Op_Address,             -- Ada.Tags\n      RE_Get_Prim_Op_Kind,                -- Ada.Tags\n      RE_Get_RC_Offset,                   -- Ada.Tags\n      RE_Get_Remotely_Callable,           -- Ada.Tags\n      RE_Get_Tagged_Kind,                 -- Ada.Tags\n-     RE_Inherit_CPP_DT,                  -- Ada.Tags\n-     RE_Inherit_DT,                      -- Ada.Tags\n-     RE_Inherit_TSD,                     -- Ada.Tags\n+     RE_Idepth,                          -- Ada.Tags\n+     RE_Ifaces_Table,                    -- Ada.Tags\n+     RE_Ifaces_Table_Ptr,                -- Ada.Tags\n      RE_Interface_Data,                  -- Ada.Tags\n+     RE_Interface_Data_Ptr,              -- Ada.Tags\n      RE_Interface_Tag,                   -- Ada.Tags\n-     RE_Internal_Tag,                    -- Ada.Tags\n-     RE_Is_Descendant_At_Same_Level,     -- Ada.Tags\n      RE_IW_Membership,                   -- Ada.Tags\n+     RE_Nb_Ifaces,                       -- Ada.Tags\n      RE_Object_Specific_Data,            -- Ada.Tags\n      RE_Offset_To_Top,                   -- Ada.Tags\n+     RE_Type_Specific_Data,              -- Ada.Tags\n      RE_POK_Function,                    -- Ada.Tags\n      RE_POK_Procedure,                   -- Ada.Tags\n      RE_POK_Protected_Entry,             -- Ada.Tags\n@@ -528,15 +531,16 @@ package Rtsfind is\n      RE_POK_Task_Procedure,              -- Ada.Tags\n      RE_Prim_Op_Kind,                    -- Ada.Tags\n      RE_Primary_DT,                      -- Ada.Tags\n+     RE_Prims_Ptr,                       -- Ada.Tags\n      RE_Register_Interface_Tag,          -- Ada.Tags\n      RE_Register_Tag,                    -- Ada.Tags\n+     RE_Remotely_Callable,               -- Ada.Tags\n+     RE_RC_Offset,                       -- Ada.Tags\n      RE_Secondary_DT,                    -- Ada.Tags\n      RE_Select_Specific_Data,            -- Ada.Tags\n      RE_Set_Access_Level,                -- Ada.Tags\n      RE_Set_Entry_Index,                 -- Ada.Tags\n      RE_Set_Expanded_Name,               -- Ada.Tags\n-     RE_Set_External_Tag,                -- Ada.Tags\n-     RE_Set_Interface_Table,             -- Ada.Tags\n      RE_Set_Num_Prim_Ops,                -- Ada.Tags\n      RE_Set_Offset_Index,                -- Ada.Tags\n      RE_Set_Offset_To_Top,               -- Ada.Tags\n@@ -552,16 +556,16 @@ package Rtsfind is\n      RE_Set_TSD,                         -- Ada.Tags\n      RE_Tag,                             -- Ada.Tags\n      RE_Tag_Error,                       -- Ada.Tags\n+     RE_Tag_Ptr,                         -- Ada.Tags\n+     RE_Tags_Table,                      -- Ada.Tags\n      RE_Tagged_Kind,                     -- Ada.Tags\n-     RE_TSD_Entry_Size,                  -- Ada.Tags\n-     RE_TSD_Prologue_Size,               -- Ada.Tags\n+     RE_Type_Specific_Data_Ptr,          -- Ada.Tags\n      RE_TK_Abstract_Limited_Tagged,      -- Ada.Tags\n      RE_TK_Abstract_Tagged,              -- Ada.Tags\n      RE_TK_Limited_Tagged,               -- Ada.Tags\n      RE_TK_Protected,                    -- Ada.Tags\n      RE_TK_Tagged,                       -- Ada.Tags\n      RE_TK_Task,                         -- Ada.Tags\n-     RE_Valid_Signature,                 -- Ada.Tags\n \n      RE_Abort_Task,                      -- Ada.Task_Identification\n      RE_Current_Task,                    -- Ada.Task_Identification\n@@ -584,42 +588,13 @@ package Rtsfind is\n      RE_Unsigned_32,                     -- Interfaces\n      RE_Unsigned_64,                     -- Interfaces\n \n-     RE_Vtable_Ptr,                      -- Interfaces.CPP\n-     RE_Displaced_This,                  -- Interfaces.CPP\n-     RE_CPP_CW_Membership,               -- Interfaces.CPP\n-     RE_CPP_DT_Entry_Size,               -- Interfaces.CPP\n-     RE_CPP_DT_Prologue_Size,            -- Interfaces.CPP\n-     RE_CPP_Get_External_Tag,            -- Interfaces.CPP\n-     RE_CPP_Get_Prim_Op_Address,         -- Interfaces.CPP\n-     RE_CPP_Get_RC_Offset,               -- Interfaces.CPP\n-     RE_CPP_Get_Remotely_Callable,       -- Interfaces.CPP\n-     RE_CPP_Inherit_DT,                  -- Interfaces.CPP\n-     RE_CPP_Inherit_TSD,                 -- Interfaces.CPP\n-     RE_CPP_Register_Tag,                -- Interfaces.CPP\n-     RE_CPP_Set_Expanded_Name,           -- Interfaces.CPP\n-     RE_CPP_Set_External_Tag,            -- Interfaces.CPP\n-     RE_CPP_Set_Prim_Op_Address,         -- Interfaces.CPP\n-     RE_CPP_Set_RC_Offset,               -- Interfaces.CPP\n-     RE_CPP_Set_Remotely_Callable,       -- Interfaces.CPP\n-     RE_CPP_Set_TSD,                     -- Interfaces.CPP\n-     RE_CPP_TSD_Entry_Size,              -- Interfaces.CPP\n-     RE_CPP_TSD_Prologue_Size,           -- Interfaces.CPP\n-\n-     RE_Packed_Size,                     -- Interfaces.Packed_Decimal\n-     RE_Packed_To_Int32,                 -- Interfaces.Packed_Decimal\n-     RE_Packed_To_Int64,                 -- Interfaces.Packed_Decimal\n-     RE_Int32_To_Packed,                 -- Interfaces.Packed_Decimal\n-     RE_Int64_To_Packed,                 -- Interfaces.Packed_Decimal\n-\n      RE_Address,                         -- System\n      RE_Any_Priority,                    -- System\n      RE_Bit_Order,                       -- System\n-     RE_Default_Priority,                -- System\n      RE_High_Order_First,                -- System\n      RE_Interrupt_Priority,              -- System\n      RE_Lib_Stop,                        -- System\n      RE_Low_Order_First,                 -- System\n-     RE_Max_Interrupt_Priority,          -- System\n      RE_Max_Priority,                    -- System\n      RE_Null_Address,                    -- System\n      RE_Priority,                        -- System\n@@ -654,7 +629,6 @@ package Rtsfind is\n      RE_Bit_Or,                          -- System.Bit_Ops\n      RE_Bit_Xor,                         -- System.Bit_Ops\n \n-     RE_Boolean_Array,                   -- System_Boolean_Array_Operations,\n      RE_Vector_Not,                      -- System_Boolean_Array_Operations,\n      RE_Vector_And,                      -- System_Boolean_Array_Operations,\n      RE_Vector_Or,                       -- System_Boolean_Array_Operations,\n@@ -684,6 +658,8 @@ package Rtsfind is\n      RE_Compare_Array_U64,               -- System.Compare_Array_Unsigned_16\n \n      RE_Get_Active_Partition_Id,         -- System.DSA_Services\n+     RE_Get_Local_Partition_Id,          -- System.DSA_Services\n+     RE_Get_Passive_Partition_Id,        -- System.DSA_Services\n \n      RE_Register_Exception,              -- System.Exception_Table\n \n@@ -727,18 +703,14 @@ package Rtsfind is\n      RE_Fat_VAX_G,                       -- System.Fat_VAX_G_Float\n \n      RE_Attach_To_Final_List,            -- System.Finalization_Implementation\n+     RE_Finalizable_Ptr_Ptr,             -- System.Finalization_Implementation\n+     RE_Move_Final_List,                 -- System.Finalization_Implementation\n      RE_Finalize_List,                   -- System.Finalization_Implementation\n      RE_Finalize_One,                    -- System.Finalization_Implementation\n      RE_Global_Final_List,               -- System.Finalization_Implementation\n      RE_Record_Controller,               -- System.Finalization_Implementation\n      RE_Limited_Record_Controller,       -- System.Finalization_Implementation\n-     RE_Deep_Tag_Initialize,             -- System.Finalization_Implementation\n-     RE_Deep_Tag_Adjust,                 -- System.Finalization_Implementation\n-     RE_Deep_Tag_Finalize,               -- System.Finalization_Implementation\n      RE_Deep_Tag_Attach,                 -- System.Finalization_Implementation\n-     RE_Deep_Rec_Initialize,             -- System.Finalization_Implementation\n-     RE_Deep_Rec_Adjust,                 -- System.Finalization_Implementation\n-     RE_Deep_Rec_Finalize,               -- System.Finalization_Implementation\n \n      RE_Root_Controlled,                 -- System.Finalization_Root\n      RE_Finalizable,                     -- System.Finalization_Root\n@@ -786,9 +758,6 @@ package Rtsfind is\n \n      RE_Mantissa_Value,                  -- System_Mantissa\n \n-     RE_memcpy,                          -- System_Memcop\n-     RE_memmove,                         -- System_Memcop\n-\n      RE_Bits_03,                         -- System.Pack_03\n      RE_Get_03,                          -- System.Pack_03\n      RE_Set_03,                          -- System.Pack_03\n@@ -1076,13 +1045,9 @@ package Rtsfind is\n      RE_Unspecified_Size,                -- System.Parameters\n \n      RE_DSA_Implementation,              -- System.Partition_Interface\n-     RE_Get_Passive_Partition_Id,        -- System.Partition_Interface\n-     RE_Get_Local_Partition_Id,          -- System.Partition_Interface\n      RE_Get_RCI_Package_Receiver,        -- System.Partition_Interface\n      RE_Get_Unique_Remote_Pointer,       -- System.Partition_Interface\n-     RE_RACW_Stub_Type,                  -- System.Partition_Interface\n      RE_RACW_Stub_Type_Access,           -- System.Partition_Interface\n-     RE_RAS_Proxy_Type,                  -- System.Partition_Interface\n      RE_RAS_Proxy_Type_Access,           -- System.Partition_Interface\n      RE_Raise_Program_Error_Unknown_Tag, -- System.Partition_Interface\n      RE_Register_Passive_Package,        -- System.Partition_Interface\n@@ -1105,7 +1070,6 @@ package Rtsfind is\n      RE_Partition_ID,                    -- System.RPC\n \n      RE_To_PolyORB_String,               -- System.Partition_Interface\n-     RE_To_Standard_String,              -- System.Partition_Interface\n      RE_Caseless_String_Eq,              -- System.Partition_Interface\n      RE_TypeCode,                        -- System.Partition_Interface\n      RE_Any,                             -- System.Partition_Interface\n@@ -1122,6 +1086,7 @@ package Rtsfind is\n      RE_Content_Type,                    -- System.Partition_Interface\n      RE_Any_Member_Type,                 -- System.Partition_Interface\n      RE_Get_Nested_Sequence_Length,      -- System.Partition_Interface\n+     RE_Get_Any_Type,                    -- System.Partition_Interface\n      RE_Extract_Union_Value,             -- System.Partition_Interface\n      RE_NVList_Ref,                      -- System.Partition_Interface\n      RE_NVList_Create,                   -- System.Partition_Interface\n@@ -1133,7 +1098,7 @@ package Rtsfind is\n      RE_Request_Raise_Occurrence,        -- System.Partition_Interface\n      RE_Nil_Exc_List,                    -- System.Partition_Interface\n      RE_Servant,                         -- System.Partition_Interface\n-     RE_Copy_Any_Value,                  -- System.Partition_Interface\n+     RE_Move_Any_Value,                  -- System.Partition_Interface\n      RE_Set_Result,                      -- System.Partition_Interface\n      RE_Register_Obj_Receiving_Stub,     -- System.Partition_Interface\n      RE_Register_Pkg_Receiving_Stub,     -- System.Partition_Interface\n@@ -1145,16 +1110,13 @@ package Rtsfind is\n      RE_Make_Ref,                        -- System.Partition_Interface\n      RE_Get_Local_Address,               -- System.Partition_Interface\n      RE_Get_Reference,                   -- System.Partition_Interface\n-     RE_Local_Oid_To_Address,            -- System.Partition_Interface\n      RE_Asynchronous_P_To_Sync_Scope,    -- System.Partition_Interface\n      RE_Buffer_Stream_Type,              -- System.Partition_Interface\n      RE_Allocate_Buffer,                 -- System.Partition_Interface\n      RE_Release_Buffer,                  -- System.Partition_Interface\n      RE_BS_To_Any,                       -- System.Partition_Interface\n      RE_Any_To_BS,                       -- System.Partition_Interface\n \n-     RE_FA_AD,                           -- System.Partition_Interface\n-     RE_FA_AS,                           -- System.Partition_Interface\n      RE_FA_B,                            -- System.Partition_Interface\n      RE_FA_C,                            -- System.Partition_Interface\n      RE_FA_F,                            -- System.Partition_Interface\n@@ -1176,8 +1138,7 @@ package Rtsfind is\n      RE_FA_String,                       -- System.Partition_Interface\n      RE_FA_ObjRef,                       -- System.Partition_Interface\n \n-     RE_TA_AD,                           -- System.Partition_Interface\n-     RE_TA_AS,                           -- System.Partition_Interface\n+     RE_TA_A,                            -- System.Partition_Interface\n      RE_TA_B,                            -- System.Partition_Interface\n      RE_TA_C,                            -- System.Partition_Interface\n      RE_TA_F,                            -- System.Partition_Interface\n@@ -1205,8 +1166,6 @@ package Rtsfind is\n      RE_Get_TC,                          -- System.Partition_Interface\n      RE_Set_TC,                          -- System.Partition_Interface\n      RE_TC_Any,                          -- System.Partition_Interface\n-     RE_TC_AD,                           -- System.Partition_Interface\n-     RE_TC_AS,                           -- System.Partition_Interface\n      RE_TC_B,                            -- System.Partition_Interface\n      RE_TC_C,                            -- System.Partition_Interface\n      RE_TC_F,                            -- System.Partition_Interface\n@@ -1271,16 +1230,12 @@ package Rtsfind is\n      RE_Integer_Address,                 -- System.Storage_Elements\n      RE_Storage_Offset,                  -- System.Storage_Elements\n      RE_Storage_Array,                   -- System.Storage_Elements\n-     RE_Storage_Element,                 -- System.Storage_Elements\n      RE_To_Address,                      -- System.Storage_Elements\n \n      RE_Root_Storage_Pool,               -- System.Storage_Pools\n      RE_Allocate_Any,                    -- System_Storage_Pools,\n      RE_Deallocate_Any,                  -- System_Storage_Pools,\n \n-     RE_Thin_Pointer,                    -- System.Stream_Attributes\n-     RE_Fat_Pointer,                     -- System.Stream_Attributes\n-\n      RE_I_AD,                            -- System.Stream_Attributes\n      RE_I_AS,                            -- System.Stream_Attributes\n      RE_I_B,                             -- System.Stream_Attributes\n@@ -1323,8 +1278,6 @@ package Rtsfind is\n      RE_W_WC,                            -- System.Stream_Attributes\n      RE_W_WWC,                           -- System.Stream_Attributes\n \n-     RE_Block_Stream_Ops_OK,             -- System.Stream_Attributes\n-\n      RE_Str_Concat,                      -- System.String_Ops\n      RE_Str_Concat_CC,                   -- System.String_Ops\n      RE_Str_Concat_CS,                   -- System.String_Ops\n@@ -1339,8 +1292,6 @@ package Rtsfind is\n      RE_Task_Info_Type,                  -- System.Task_Info\n      RE_Unspecified_Task_Info,           -- System.Task_Info\n \n-     RE_Library_Task_Level,              -- System.Tasking\n-\n      RE_Task_Procedure_Access,           -- System.Tasking\n \n      RO_ST_Task_Id,                      -- System.Tasking\n@@ -1350,22 +1301,15 @@ package Rtsfind is\n      RE_Simple_Call,                     -- System.Tasking\n      RE_Conditional_Call,                -- System.Tasking\n      RE_Asynchronous_Call,               -- System.Tasking\n-     RE_Timed_Call,                      -- System.Tasking\n \n      RE_Ada_Task_Control_Block,          -- System.Tasking\n \n      RE_Task_List,                       -- System.Tasking\n \n-     RE_Accept_Alternative,              -- System.Tasking\n      RE_Accept_List,                     -- System.Tasking\n-     RE_Accept_List_Access,              -- System.Tasking\n-     RE_Max_Select,                      -- System.Tasking\n-     RE_Max_Task_Entry,                  -- System.Tasking\n      RE_No_Rendezvous,                   -- System.Tasking\n      RE_Null_Task_Entry,                 -- System.Tasking\n-     RE_Positive_Select_Index,           -- System.Tasking\n      RE_Select_Index,                    -- System.Tasking\n-     RE_Select_Modes,                    -- System.Tasking\n      RE_Else_Mode,                       -- System.Tasking\n      RE_Simple_Mode,                     -- System.Tasking\n      RE_Terminate_Mode,                  -- System.Tasking\n@@ -1377,6 +1321,7 @@ package Rtsfind is\n      RE_Unspecified_Priority,            -- System.Tasking\n \n      RE_Activation_Chain,                -- System.Tasking\n+     RE_Activation_Chain_Access,         -- System.Tasking\n      RE_Storage_Size,                    -- System.Tasking\n \n      RE_Abort_Defer,                     -- System.Soft_Links\n@@ -1525,7 +1470,6 @@ package Rtsfind is\n      RE_Protection_Entries,              -- Tasking.Protected_Objects.Entries\n      RE_Initialize_Protection_Entries,   -- Tasking.Protected_Objects.Entries\n      RE_Lock_Entries,                    -- Tasking.Protected_Objects.Entries\n-     RE_Lock_Read_Only_Entries,          -- Tasking.Protected_Objects.Entries\n      RO_PE_Get_Ceiling,                  -- Tasking.Protected_Objects.Entries\n      RO_PE_Set_Ceiling,                  -- Tasking.Protected_Objects.Entries\n      RE_Unlock_Entries,                  -- Tasking.Protected_Objects.Entries\n@@ -1546,7 +1490,6 @@ package Rtsfind is\n      RE_Protection_Entry,                -- Protected_Objects.Single_Entry\n      RE_Initialize_Protection_Entry,     -- Protected_Objects.Single_Entry\n      RE_Lock_Entry,                      -- Protected_Objects.Single_Entry\n-     RE_Lock_Read_Only_Entry,            -- Protected_Objects.Single_Entry\n      RE_Unlock_Entry,                    -- Protected_Objects.Single_Entry\n      RE_Protected_Single_Entry_Call,     -- Protected_Objects.Single_Entry\n      RE_Service_Entry,                   -- Protected_Objects.Single_Entry\n@@ -1562,7 +1505,6 @@ package Rtsfind is\n      RE_Initialize_Protection,           -- System.Tasking.Protected_Objects\n      RE_Finalize_Protection,             -- System.Tasking.Protected_Objects\n      RE_Lock,                            -- System.Tasking.Protected_Objects\n-     RE_Lock_Read_Only,                  -- System.Tasking.Protected_Objects\n      RE_Get_Ceiling,                     -- System.Tasking.Protected_Objects\n      RE_Set_Ceiling,                     -- System.Tasking.Protected_Objects\n      RE_Unlock,                          -- System.Tasking.Protected_Objects\n@@ -1603,6 +1545,7 @@ package Rtsfind is\n      RE_Complete_Task,                   -- System.Tasking.Stages\n      RE_Free_Task,                       -- System.Tasking.Stages\n      RE_Expunge_Unactivated_Tasks,       -- System.Tasking.Stages\n+     RE_Move_Activation_Chain,           -- System_Tasking_Stages\n      RE_Terminated);                     -- System.Tasking.Stages\n \n    --  The following declarations build a table that is indexed by the\n@@ -1613,15 +1556,14 @@ package Rtsfind is\n \n      RE_Null                             => RTU_Null,\n \n-     RE_Exceptions_Available_In_HIE      => Ada_Exceptions,\n      RE_Code_Loc                         => Ada_Exceptions,\n      RE_Current_Target_Exception         => Ada_Exceptions, -- of JGNAT\n      RE_Exception_Id                     => Ada_Exceptions,\n      RE_Exception_Information            => Ada_Exceptions,\n      RE_Exception_Message                => Ada_Exceptions,\n      RE_Exception_Name_Simple            => Ada_Exceptions,\n      RE_Exception_Occurrence             => Ada_Exceptions,\n-     RE_Null_Id                          => Ada_Exceptions,\n+     RE_Local_Raise                      => Ada_Exceptions,\n      RE_Null_Occurrence                  => Ada_Exceptions,\n      RE_Poll                             => Ada_Exceptions,\n      RE_Raise_Exception                  => Ada_Exceptions,\n@@ -1647,41 +1589,45 @@ package Rtsfind is\n \n      RE_Root_Stream_Type                 => Ada_Streams,\n      RE_Stream_Element                   => Ada_Streams,\n-     RE_Stream_Element_Count             => Ada_Streams,\n-     RE_Stream_Element_Offset            => Ada_Streams,\n-     RE_Stream_Element_Array             => Ada_Streams,\n \n      RE_Stream_Access                    => Ada_Streams_Stream_IO,\n \n      RE_Abstract_Interface               => Ada_Tags,\n+     RE_Access_Level                     => Ada_Tags,\n      RE_Addr_Ptr                         => Ada_Tags,\n-     RE_Address_Array                    => Ada_Tags,\n-     RE_CW_Membership                    => Ada_Tags,\n+     RE_Base_Address                     => Ada_Tags,\n+     RE_Cstring_Ptr                      => Ada_Tags,\n+     RE_Default_Prim_Op_Count            => Ada_Tags,\n      RE_Descendant_Tag                   => Ada_Tags,\n+     RE_Dispatch_Table                   => Ada_Tags,\n      RE_Displace                         => Ada_Tags,\n      RE_DT_Entry_Size                    => Ada_Tags,\n+     RE_DT_Min_Prologue_Size             => Ada_Tags,\n      RE_DT_Prologue_Size                 => Ada_Tags,\n+     RE_DT_Typeinfo_Ptr_Size             => Ada_Tags,\n+     RE_Expanded_Name                    => Ada_Tags,\n      RE_External_Tag                     => Ada_Tags,\n+     RO_TA_External_Tag                  => Ada_Tags,\n      RE_Get_Access_Level                 => Ada_Tags,\n      RE_Get_Entry_Index                  => Ada_Tags,\n-     RE_Get_External_Tag                 => Ada_Tags,\n      RE_Get_Offset_Index                 => Ada_Tags,\n      RE_Get_Predefined_Prim_Op_Address   => Ada_Tags,\n      RE_Get_Prim_Op_Address              => Ada_Tags,\n      RE_Get_Prim_Op_Kind                 => Ada_Tags,\n      RE_Get_RC_Offset                    => Ada_Tags,\n      RE_Get_Remotely_Callable            => Ada_Tags,\n      RE_Get_Tagged_Kind                  => Ada_Tags,\n-     RE_Inherit_CPP_DT                   => Ada_Tags,\n-     RE_Inherit_DT                       => Ada_Tags,\n-     RE_Inherit_TSD                      => Ada_Tags,\n+     RE_Idepth                           => Ada_Tags,\n+     RE_Ifaces_Table                     => Ada_Tags,\n+     RE_Ifaces_Table_Ptr                 => Ada_Tags,\n      RE_Interface_Data                   => Ada_Tags,\n+     RE_Interface_Data_Ptr               => Ada_Tags,\n      RE_Interface_Tag                    => Ada_Tags,\n-     RE_Internal_Tag                     => Ada_Tags,\n-     RE_Is_Descendant_At_Same_Level      => Ada_Tags,\n      RE_IW_Membership                    => Ada_Tags,\n+     RE_Nb_Ifaces                        => Ada_Tags,\n      RE_Object_Specific_Data             => Ada_Tags,\n      RE_Offset_To_Top                    => Ada_Tags,\n+     RE_Type_Specific_Data               => Ada_Tags,\n      RE_POK_Function                     => Ada_Tags,\n      RE_POK_Procedure                    => Ada_Tags,\n      RE_POK_Protected_Entry              => Ada_Tags,\n@@ -1692,15 +1638,16 @@ package Rtsfind is\n      RE_POK_Task_Procedure               => Ada_Tags,\n      RE_Prim_Op_Kind                     => Ada_Tags,\n      RE_Primary_DT                       => Ada_Tags,\n+     RE_Prims_Ptr                        => Ada_Tags,\n      RE_Register_Interface_Tag           => Ada_Tags,\n      RE_Register_Tag                     => Ada_Tags,\n+     RE_Remotely_Callable                => Ada_Tags,\n+     RE_RC_Offset                        => Ada_Tags,\n      RE_Secondary_DT                     => Ada_Tags,\n      RE_Select_Specific_Data             => Ada_Tags,\n      RE_Set_Access_Level                 => Ada_Tags,\n      RE_Set_Entry_Index                  => Ada_Tags,\n      RE_Set_Expanded_Name                => Ada_Tags,\n-     RE_Set_External_Tag                 => Ada_Tags,\n-     RE_Set_Interface_Table              => Ada_Tags,\n      RE_Set_Num_Prim_Ops                 => Ada_Tags,\n      RE_Set_Offset_Index                 => Ada_Tags,\n      RE_Set_Offset_To_Top                => Ada_Tags,\n@@ -1716,16 +1663,16 @@ package Rtsfind is\n      RE_Set_TSD                          => Ada_Tags,\n      RE_Tag                              => Ada_Tags,\n      RE_Tag_Error                        => Ada_Tags,\n+     RE_Tag_Ptr                          => Ada_Tags,\n+     RE_Tags_Table                       => Ada_Tags,\n      RE_Tagged_Kind                      => Ada_Tags,\n-     RE_TSD_Entry_Size                   => Ada_Tags,\n-     RE_TSD_Prologue_Size                => Ada_Tags,\n+     RE_Type_Specific_Data_Ptr           => Ada_Tags,\n      RE_TK_Abstract_Limited_Tagged       => Ada_Tags,\n      RE_TK_Abstract_Tagged               => Ada_Tags,\n      RE_TK_Limited_Tagged                => Ada_Tags,\n      RE_TK_Protected                     => Ada_Tags,\n      RE_TK_Tagged                        => Ada_Tags,\n      RE_TK_Task                          => Ada_Tags,\n-     RE_Valid_Signature                  => Ada_Tags,\n \n      RE_Abort_Task                       => Ada_Task_Identification,\n      RE_Current_Task                     => Ada_Task_Identification,\n@@ -1746,42 +1693,13 @@ package Rtsfind is\n      RE_Unsigned_32                      => Interfaces,\n      RE_Unsigned_64                      => Interfaces,\n \n-     RE_Vtable_Ptr                       => Interfaces_CPP,\n-     RE_Displaced_This                   => Interfaces_CPP,\n-     RE_CPP_CW_Membership                => Interfaces_CPP,\n-     RE_CPP_DT_Entry_Size                => Interfaces_CPP,\n-     RE_CPP_DT_Prologue_Size             => Interfaces_CPP,\n-     RE_CPP_Get_External_Tag             => Interfaces_CPP,\n-     RE_CPP_Get_Prim_Op_Address          => Interfaces_CPP,\n-     RE_CPP_Get_RC_Offset                => Interfaces_CPP,\n-     RE_CPP_Get_Remotely_Callable        => Interfaces_CPP,\n-     RE_CPP_Inherit_DT                   => Interfaces_CPP,\n-     RE_CPP_Inherit_TSD                  => Interfaces_CPP,\n-     RE_CPP_Register_Tag                 => Interfaces_CPP,\n-     RE_CPP_Set_Expanded_Name            => Interfaces_CPP,\n-     RE_CPP_Set_External_Tag             => Interfaces_CPP,\n-     RE_CPP_Set_Prim_Op_Address          => Interfaces_CPP,\n-     RE_CPP_Set_RC_Offset                => Interfaces_CPP,\n-     RE_CPP_Set_Remotely_Callable        => Interfaces_CPP,\n-     RE_CPP_Set_TSD                      => Interfaces_CPP,\n-     RE_CPP_TSD_Entry_Size               => Interfaces_CPP,\n-     RE_CPP_TSD_Prologue_Size            => Interfaces_CPP,\n-\n-     RE_Packed_Size                      => Interfaces_Packed_Decimal,\n-     RE_Packed_To_Int32                  => Interfaces_Packed_Decimal,\n-     RE_Packed_To_Int64                  => Interfaces_Packed_Decimal,\n-     RE_Int32_To_Packed                  => Interfaces_Packed_Decimal,\n-     RE_Int64_To_Packed                  => Interfaces_Packed_Decimal,\n-\n      RE_Address                          => System,\n      RE_Any_Priority                     => System,\n      RE_Bit_Order                        => System,\n-     RE_Default_Priority                 => System,\n      RE_High_Order_First                 => System,\n      RE_Interrupt_Priority               => System,\n      RE_Lib_Stop                         => System,\n      RE_Low_Order_First                  => System,\n-     RE_Max_Interrupt_Priority           => System,\n      RE_Max_Priority                     => System,\n      RE_Null_Address                     => System,\n      RE_Priority                         => System,\n@@ -1818,7 +1736,6 @@ package Rtsfind is\n \n      RE_Checked_Pool                     => System_Checked_Pools,\n \n-     RE_Boolean_Array                    => System_Boolean_Array_Operations,\n      RE_Vector_Not                       => System_Boolean_Array_Operations,\n      RE_Vector_And                       => System_Boolean_Array_Operations,\n      RE_Vector_Or                        => System_Boolean_Array_Operations,\n@@ -1846,6 +1763,8 @@ package Rtsfind is\n      RE_Compare_Array_U64                => System_Compare_Array_Unsigned_64,\n \n      RE_Get_Active_Partition_Id          => System_DSA_Services,\n+     RE_Get_Local_Partition_Id           => System_DSA_Services,\n+     RE_Get_Passive_Partition_Id         => System_DSA_Services,\n \n      RE_Register_Exception               => System_Exception_Table,\n \n@@ -1889,18 +1808,14 @@ package Rtsfind is\n      RE_Fat_VAX_G                        => System_Fat_VAX_G_Float,\n \n      RE_Attach_To_Final_List             => System_Finalization_Implementation,\n+     RE_Finalizable_Ptr_Ptr              => System_Finalization_Implementation,\n+     RE_Move_Final_List                  => System_Finalization_Implementation,\n      RE_Finalize_List                    => System_Finalization_Implementation,\n      RE_Finalize_One                     => System_Finalization_Implementation,\n      RE_Global_Final_List                => System_Finalization_Implementation,\n      RE_Record_Controller                => System_Finalization_Implementation,\n      RE_Limited_Record_Controller        => System_Finalization_Implementation,\n-     RE_Deep_Tag_Initialize              => System_Finalization_Implementation,\n-     RE_Deep_Tag_Adjust                  => System_Finalization_Implementation,\n-     RE_Deep_Tag_Finalize                => System_Finalization_Implementation,\n      RE_Deep_Tag_Attach                  => System_Finalization_Implementation,\n-     RE_Deep_Rec_Initialize              => System_Finalization_Implementation,\n-     RE_Deep_Rec_Adjust                  => System_Finalization_Implementation,\n-     RE_Deep_Rec_Finalize                => System_Finalization_Implementation,\n \n      RE_Root_Controlled                  => System_Finalization_Root,\n      RE_Finalizable                      => System_Finalization_Root,\n@@ -1948,9 +1863,6 @@ package Rtsfind is\n \n      RE_Mantissa_Value                   => System_Mantissa,\n \n-     RE_memcpy                           => System_Memcop,\n-     RE_memmove                          => System_Memcop,\n-\n      RE_Bits_03                          => System_Pack_03,\n      RE_Get_03                           => System_Pack_03,\n      RE_Set_03                           => System_Pack_03,\n@@ -2238,13 +2150,9 @@ package Rtsfind is\n      RE_Unspecified_Size                 => System_Parameters,\n \n      RE_DSA_Implementation               => System_Partition_Interface,\n-     RE_Get_Passive_Partition_Id         => System_Partition_Interface,\n-     RE_Get_Local_Partition_Id           => System_Partition_Interface,\n      RE_Get_RCI_Package_Receiver         => System_Partition_Interface,\n      RE_Get_Unique_Remote_Pointer        => System_Partition_Interface,\n-     RE_RACW_Stub_Type                   => System_Partition_Interface,\n      RE_RACW_Stub_Type_Access            => System_Partition_Interface,\n-     RE_RAS_Proxy_Type                   => System_Partition_Interface,\n      RE_RAS_Proxy_Type_Access            => System_Partition_Interface,\n      RE_Raise_Program_Error_Unknown_Tag  => System_Partition_Interface,\n      RE_Register_Passive_Package         => System_Partition_Interface,\n@@ -2258,7 +2166,6 @@ package Rtsfind is\n      RE_Get_RAS_Info                     => System_Partition_Interface,\n \n      RE_To_PolyORB_String                => System_Partition_Interface,\n-     RE_To_Standard_String               => System_Partition_Interface,\n      RE_Caseless_String_Eq               => System_Partition_Interface,\n      RE_TypeCode                         => System_Partition_Interface,\n      RE_Any                              => System_Partition_Interface,\n@@ -2275,6 +2182,7 @@ package Rtsfind is\n      RE_Content_Type                     => System_Partition_Interface,\n      RE_Any_Member_Type                  => System_Partition_Interface,\n      RE_Get_Nested_Sequence_Length       => System_Partition_Interface,\n+     RE_Get_Any_Type                     => System_Partition_Interface,\n      RE_Extract_Union_Value              => System_Partition_Interface,\n      RE_NVList_Ref                       => System_Partition_Interface,\n      RE_NVList_Create                    => System_Partition_Interface,\n@@ -2286,7 +2194,7 @@ package Rtsfind is\n      RE_Request_Raise_Occurrence         => System_Partition_Interface,\n      RE_Nil_Exc_List                     => System_Partition_Interface,\n      RE_Servant                          => System_Partition_Interface,\n-     RE_Copy_Any_Value                   => System_Partition_Interface,\n+     RE_Move_Any_Value                   => System_Partition_Interface,\n      RE_Set_Result                       => System_Partition_Interface,\n      RE_Register_Obj_Receiving_Stub      => System_Partition_Interface,\n      RE_Register_Pkg_Receiving_Stub      => System_Partition_Interface,\n@@ -2298,16 +2206,13 @@ package Rtsfind is\n      RE_Make_Ref                         => System_Partition_Interface,\n      RE_Get_Local_Address                => System_Partition_Interface,\n      RE_Get_Reference                    => System_Partition_Interface,\n-     RE_Local_Oid_To_Address             => System_Partition_Interface,\n      RE_Asynchronous_P_To_Sync_Scope     => System_Partition_Interface,\n      RE_Buffer_Stream_Type               => System_Partition_Interface,\n      RE_Allocate_Buffer                  => System_Partition_Interface,\n      RE_Release_Buffer                   => System_Partition_Interface,\n      RE_BS_To_Any                        => System_Partition_Interface,\n      RE_Any_To_BS                        => System_Partition_Interface,\n \n-     RE_FA_AD                            => System_Partition_Interface,\n-     RE_FA_AS                            => System_Partition_Interface,\n      RE_FA_B                             => System_Partition_Interface,\n      RE_FA_C                             => System_Partition_Interface,\n      RE_FA_F                             => System_Partition_Interface,\n@@ -2329,8 +2234,7 @@ package Rtsfind is\n      RE_FA_String                        => System_Partition_Interface,\n      RE_FA_ObjRef                        => System_Partition_Interface,\n \n-     RE_TA_AD                            => System_Partition_Interface,\n-     RE_TA_AS                            => System_Partition_Interface,\n+     RE_TA_A                             => System_Partition_Interface,\n      RE_TA_B                             => System_Partition_Interface,\n      RE_TA_C                             => System_Partition_Interface,\n      RE_TA_F                             => System_Partition_Interface,\n@@ -2358,8 +2262,6 @@ package Rtsfind is\n      RE_Get_TC                           => System_Partition_Interface,\n      RE_Set_TC                           => System_Partition_Interface,\n      RE_TC_Any                           => System_Partition_Interface,\n-     RE_TC_AD                            => System_Partition_Interface,\n-     RE_TC_AS                            => System_Partition_Interface,\n      RE_TC_B                             => System_Partition_Interface,\n      RE_TC_C                             => System_Partition_Interface,\n      RE_TC_F                             => System_Partition_Interface,\n@@ -2433,16 +2335,12 @@ package Rtsfind is\n      RE_Integer_Address                  => System_Storage_Elements,\n      RE_Storage_Offset                   => System_Storage_Elements,\n      RE_Storage_Array                    => System_Storage_Elements,\n-     RE_Storage_Element                  => System_Storage_Elements,\n      RE_To_Address                       => System_Storage_Elements,\n \n      RE_Root_Storage_Pool                => System_Storage_Pools,\n      RE_Allocate_Any                     => System_Storage_Pools,\n      RE_Deallocate_Any                   => System_Storage_Pools,\n \n-     RE_Thin_Pointer                     => System_Stream_Attributes,\n-     RE_Fat_Pointer                      => System_Stream_Attributes,\n-\n      RE_I_AD                             => System_Stream_Attributes,\n      RE_I_AS                             => System_Stream_Attributes,\n      RE_I_B                              => System_Stream_Attributes,\n@@ -2484,7 +2382,6 @@ package Rtsfind is\n      RE_W_U                              => System_Stream_Attributes,\n      RE_W_WC                             => System_Stream_Attributes,\n      RE_W_WWC                            => System_Stream_Attributes,\n-     RE_Block_Stream_Ops_OK              => System_Stream_Attributes,\n \n      RE_Str_Concat                       => System_String_Ops,\n      RE_Str_Concat_CC                    => System_String_Ops,\n@@ -2500,8 +2397,6 @@ package Rtsfind is\n      RE_Task_Info_Type                   => System_Task_Info,\n      RE_Unspecified_Task_Info            => System_Task_Info,\n \n-     RE_Library_Task_Level               => System_Tasking,\n-\n      RE_Task_Procedure_Access            => System_Tasking,\n \n      RO_ST_Task_Id                       => System_Tasking,\n@@ -2511,22 +2406,15 @@ package Rtsfind is\n      RE_Simple_Call                      => System_Tasking,\n      RE_Conditional_Call                 => System_Tasking,\n      RE_Asynchronous_Call                => System_Tasking,\n-     RE_Timed_Call                       => System_Tasking,\n \n      RE_Ada_Task_Control_Block           => System_Tasking,\n \n      RE_Task_List                        => System_Tasking,\n \n-     RE_Accept_Alternative               => System_Tasking,\n      RE_Accept_List                      => System_Tasking,\n-     RE_Accept_List_Access               => System_Tasking,\n-     RE_Max_Select                       => System_Tasking,\n-     RE_Max_Task_Entry                   => System_Tasking,\n      RE_No_Rendezvous                    => System_Tasking,\n      RE_Null_Task_Entry                  => System_Tasking,\n-     RE_Positive_Select_Index            => System_Tasking,\n      RE_Select_Index                     => System_Tasking,\n-     RE_Select_Modes                     => System_Tasking,\n      RE_Else_Mode                        => System_Tasking,\n      RE_Simple_Mode                      => System_Tasking,\n      RE_Terminate_Mode                   => System_Tasking,\n@@ -2538,6 +2426,7 @@ package Rtsfind is\n      RE_Unspecified_Priority             => System_Tasking,\n \n      RE_Activation_Chain                 => System_Tasking,\n+     RE_Activation_Chain_Access          => System_Tasking,\n      RE_Storage_Size                     => System_Tasking,\n \n      RE_Abort_Defer                      => System_Soft_Links,\n@@ -2691,8 +2580,6 @@ package Rtsfind is\n        System_Tasking_Protected_Objects_Entries,\n      RE_Lock_Entries                     =>\n        System_Tasking_Protected_Objects_Entries,\n-     RE_Lock_Read_Only_Entries           =>\n-       System_Tasking_Protected_Objects_Entries,\n      RO_PE_Get_Ceiling                   =>\n        System_Tasking_Protected_Objects_Entries,\n      RO_PE_Set_Ceiling                   =>\n@@ -2732,8 +2619,6 @@ package Rtsfind is\n        System_Tasking_Protected_Objects_Single_Entry,\n      RE_Lock_Entry                       =>\n        System_Tasking_Protected_Objects_Single_Entry,\n-     RE_Lock_Read_Only_Entry             =>\n-       System_Tasking_Protected_Objects_Single_Entry,\n      RE_Unlock_Entry                     =>\n        System_Tasking_Protected_Objects_Single_Entry,\n      RE_Protected_Single_Entry_Call      =>\n@@ -2757,7 +2642,6 @@ package Rtsfind is\n      RE_Initialize_Protection            => System_Tasking_Protected_Objects,\n      RE_Finalize_Protection              => System_Tasking_Protected_Objects,\n      RE_Lock                             => System_Tasking_Protected_Objects,\n-     RE_Lock_Read_Only                   => System_Tasking_Protected_Objects,\n      RE_Get_Ceiling                      => System_Tasking_Protected_Objects,\n      RE_Set_Ceiling                      => System_Tasking_Protected_Objects,\n      RE_Unlock                           => System_Tasking_Protected_Objects,\n@@ -2801,6 +2685,7 @@ package Rtsfind is\n      RE_Complete_Task                    => System_Tasking_Stages,\n      RE_Free_Task                        => System_Tasking_Stages,\n      RE_Expunge_Unactivated_Tasks        => System_Tasking_Stages,\n+     RE_Move_Activation_Chain            => System_Tasking_Stages,\n      RE_Terminated                       => System_Tasking_Stages);\n \n    --------------------------------\n@@ -2864,27 +2749,51 @@ package Rtsfind is\n    -- Subprograms --\n    -----------------\n \n+   RE_Not_Available : exception;\n+   --  Raised by RTE if the requested entity is not available. This can\n+   --  occur either because the file in which the entity should be found\n+   --  does not exist, or because the entity is not present in the file.\n+\n    procedure Initialize;\n    --  Procedure to initialize data structures used by RTE. Called at the\n    --  start of processing a new main source file. Must be called after\n    --  Initialize_Snames (since names it enters into name table must come\n    --  after names entered by Snames).\n \n-   RE_Not_Available : exception;\n-   --  Raised by RTE if the requested entity is not available. This can\n-   --  occur either because the file in which the entity should be found\n-   --  does not exist, or because the entity is not present in the file.\n+   function Is_RTE (Ent : Entity_Id; E : RE_Id) return Boolean;\n+   --  This function determines if the given entity corresponds to the entity\n+   --  referenced by RE_Id. It is similar in effect to (Ent = RTE (E)) except\n+   --  that the latter would unconditionally load the unit containing E. For\n+   --  this call, if the unit is not loaded, then a result of False is returned\n+   --  immediately, since obviously Ent cannot be the entity in question if the\n+   --  corresponding unit has not been loaded.\n+\n+   function Is_RTU (Ent : Entity_Id;  U : RTU_Id) return Boolean;\n+   pragma Inline (Is_RTU);\n+   --  This function determines if the given entity corresponds to the entity\n+   --  for the unit referenced by U. If this unit has not been loaded, the\n+   --  answer will always be False. If the unit has been loaded, then the\n+   --  entity id values are compared and True is returned if Ent is the\n+   --  entity for this unit.\n+\n+   function Is_Text_IO_Kludge_Unit (Nam : Node_Id) return Boolean;\n+   --  Returns True if the given Nam is an Expanded Name, whose Prefix is Ada,\n+   --  and whose selector is either Text_IO.xxx or Wide_Text_IO.xxx or\n+   --  Wide_Wide_Text_IO.xxx, where xxx is one of the subpackages of Text_IO\n+   --  that is specially handled as described above for Text_IO_Kludge.\n \n    function RTE (E : RE_Id) return Entity_Id;\n    --  Given the entity defined in the above tables, as identified by the\n-   --  corresponding value in the RE_Id enumeration type, returns the Id\n-   --  of the corresponding entity, first loading in (parsing, analyzing and\n-   --  expanding) its spec if the unit has not already been loaded.\n+   --  corresponding value in the RE_Id enumeration type, returns the Id of the\n+   --  corresponding entity, first loading in (parsing, analyzing and\n+   --  expanding) its spec if the unit has not already been loaded. For\n+   --  efficiency reasons, this routine restricts the search to the package\n+   --  entity chain.\n    --\n-   --  Note: In the case of a package, RTE can return either an entity that\n-   --  is declared at the top level of the package, or the package entity\n-   --  itself. If an entity within the package has the same simple name as\n-   --  the package, then the entity within the package is returned.\n+   --  Note: In the case of a package, RTE can return either an entity that is\n+   --  declared at the top level of the package, or the package entity itself.\n+   --  If an entity within the package has the same simple name as the package,\n+   --  then the entity within the package is returned.\n    --\n    --  If RTE returns, the returned value is the required entity\n    --\n@@ -2898,27 +2807,46 @@ package Rtsfind is\n    --  RE_Not_Available, which should terminate the expansion of the current\n    --  construct.\n \n-   function Is_RTE (Ent : Entity_Id; E : RE_Id) return Boolean;\n-   --  This function determines if the given entity corresponds to the entity\n-   --  referenced by RE_Id. It is similar in effect to (Ent = RTE (E)) except\n-   --  that the latter would unconditionally load the unit containing E. For\n-   --  this call, if the unit is not loaded, then a result of False is returned\n-   --  immediately, since obviously Ent cannot be the entity in question if the\n-   --  corresponding unit has not been loaded.\n-\n-   function Is_RTU (Ent : Entity_Id;  U : RTU_Id) return Boolean;\n-   pragma Inline (Is_RTU);\n-   --  This function determines if the given entity corresponds to the entity\n-   --  for the unit referenced by U. If this unit has not been loaded, the\n-   --  answer will always be False. If the unit has been loaded, then the\n-   --  entity id values are compared and True is returned if Ent is the\n-   --  entity for this unit.\n-\n    function RTE_Available (E : RE_Id) return Boolean;\n    --  Returns true if a call to RTE will succeed without raising an\n    --  exception and without generating an error message, i.e. if the\n    --  call will obtain the desired entity without any problems.\n \n+   function RTE_Record_Component (E : RE_Id) return Entity_Id;\n+   --  Given the entity defined in the above tables, as identified by the\n+   --  corresponding value in the RE_Id enumeration type, returns the Id of\n+   --  the corresponding entity, first loading in (parsing, analyzing and\n+   --  expanding) its spec if the unit has not already been loaded. For\n+   --  efficiency reasons, this routine restricts the search of E to fields\n+   --  of record type declarations found in the package entity chain.\n+   --\n+   --  Note: In the case of a package, RTE can return either an entity that is\n+   --  declared at the top level of the package, or the package entity itself.\n+   --  If an entity within the package has the same simple name as the package,\n+   --  then the entity within the package is returned.\n+   --\n+   --  If RTE returns, the returned value is the required entity\n+   --\n+   --  If the entity is not available, then an error message is given. The\n+   --  form of the message depends on whether we are in configurable run time\n+   --  mode or not. In configurable run time mode, a missing entity is not\n+   --  that surprising and merely says that the particular construct is not\n+   --  supported by the run-time in use. If we are not in configurable run\n+   --  time mode, a missing entity is some kind of run-time configuration\n+   --  error. In either case, the result of the call is to raise the exception\n+   --  RE_Not_Available, which should terminate the expansion of the current\n+   --  construct.\n+\n+   function RTE_Record_Component_Available (E : RE_Id) return Boolean;\n+   --  Returns true if a call to RTE_Record_Component will succeed without\n+   --  raising an exception and without generating an error message, i.e.\n+   --  if the call will obtain the desired entity without any problems.\n+\n+   function RTU_Entity (U : RTU_Id) return Entity_Id;\n+   pragma Inline (RTU_Entity);\n+   --  This function returns the entity for the unit referenced by U. If\n+   --  this unit has not been loaded, it returns Empty.\n+\n    function RTU_Loaded (U : RTU_Id) return Boolean;\n    pragma Inline (RTU_Loaded);\n    --  Returns true if indicated unit has already been successfully loaded.\n@@ -2942,10 +2870,4 @@ package Rtsfind is\n    --  is not necessary, but that doesn't matter. Wide_[Wide_]Text_IO is\n    --  handled in a similar manner.\n \n-   function Is_Text_IO_Kludge_Unit (Nam : Node_Id) return Boolean;\n-   --  Returns True if the given Nam is an Expanded Name, whose Prefix is Ada,\n-   --  and whose selector is either Text_IO.xxx or Wide_Text_IO.xxx or\n-   --  Wide_Wide_Text_IO.xxx, where xxx is one of the subpackages of Text_IO\n-   --  that is specially handled as described above for Text_IO_Kludge.\n-\n end Rtsfind;"}, {"sha": "0c451164076f4a85d043e3cd7829a7896f688b17", "filename": "gcc/ada/s-intman-posix.adb", "status": "modified", "additions": 31, "deletions": 32, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fs-intman-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fs-intman-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-posix.adb?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -78,9 +78,8 @@ package body System.Interrupt_Management is\n \n    function State (Int : Interrupt_ID) return Character;\n    pragma Import (C, State, \"__gnat_get_interrupt_state\");\n-   --  Get interrupt state. Defined in init.c\n-   --  The input argument is the interrupt number,\n-   --  and the result is one of the following:\n+   --  Get interrupt state. Defined in init.c The input argument is the\n+   --  interrupt number, and the result is one of the following:\n \n    User    : constant Character := 'u';\n    Runtime : constant Character := 'r';\n@@ -95,10 +94,10 @@ package body System.Interrupt_Management is\n      (signo    : Signal;\n       siginfo  : System.Address;\n       ucontext : System.Address);\n-   --  This function identifies the Ada exception to be raised using\n-   --  the information when the system received a synchronous signal.\n-   --  Since this function is machine and OS dependent, different code\n-   --  has to be provided for different target.\n+   --  This function identifies the Ada exception to be raised using the\n+   --  information when the system received a synchronous signal. Since this\n+   --  function is machine and OS dependent, different code has to be provided\n+   --  for different target.\n \n    ----------------------\n    -- Notify_Exception --\n@@ -114,18 +113,18 @@ package body System.Interrupt_Management is\n    is\n       pragma Unreferenced (siginfo);\n \n-      --  The GCC unwinder requires adjustments to the signal's machine\n-      --  context to be able to properly unwind through the signal handler.\n-      --  This is achieved by the target specific subprogram below, provided\n-      --  by init.c to be usable by the non-tasking handler also.\n+      --  The GCC unwinder requires adjustments to the signal's machine context\n+      --  to be able to properly unwind through the signal handler. This is\n+      --  achieved by the target specific subprogram below, provided by init.c\n+      --  to be usable by the non-tasking handler also.\n \n       procedure Adjust_Context_For_Raise\n         (signo    : Signal;\n          ucontext : System.Address);\n       pragma Import\n         (C, Adjust_Context_For_Raise, \"__gnat_adjust_context_for_raise\");\n \n-      Result  : Interfaces.C.int;\n+      Result : Interfaces.C.int;\n \n    begin\n       --  With the __builtin_longjmp, the signal mask is not restored, so we\n@@ -139,9 +138,8 @@ package body System.Interrupt_Management is\n \n       Adjust_Context_For_Raise (signo, ucontext);\n \n-      --  Check that treatment of exception propagation here\n-      --  is consistent with treatment of the abort signal in\n-      --  System.Task_Primitives.Operations.\n+      --  Check that treatment of exception propagation here is consistent with\n+      --  treatment of the abort signal in System.Task_Primitives.Operations.\n \n       case signo is\n          when SIGFPE =>\n@@ -199,18 +197,19 @@ package body System.Interrupt_Management is\n       --  handler execution we do not change the Signal_Mask to be masked for\n       --  the Signal.\n \n-      --  This is a temporary fix to the problem that the Signal_Mask is\n-      --  not restored after the exception (longjmp) from the handler.\n-      --  The right fix should be made in sigsetjmp so that we save\n-      --  the Signal_Set and restore it after a longjmp.\n+      --  This is a temporary fix to the problem that the Signal_Mask is not\n+      --  restored after the exception (longjmp) from the handler. The right\n+      --  fix should be made in sigsetjmp so that we save the Signal_Set and\n+      --  restore it after a longjmp.\n \n-      --  Since SA_NODEFER is obsolete, instead we reset explicitely\n-      --  the mask in the exception handler.\n+      --  Since SA_NODEFER is obsolete, instead we reset explicitely the mask\n+      --  in the exception handler.\n \n       Result := sigemptyset (Signal_Mask'Access);\n       pragma Assert (Result = 0);\n \n-      --  Add signals that map to Ada exceptions to the mask.\n+      --  Add signals that map to Ada exceptions to the mask\n+\n       for J in Exception_Interrupts'Range loop\n          if State (Exception_Interrupts (J)) /= Default  then\n             Result :=\n@@ -225,6 +224,7 @@ package body System.Interrupt_Management is\n       pragma Assert (Reserve = (Interrupt_ID'Range => False));\n \n       --  Process state of exception signals\n+\n       for J in Exception_Interrupts'Range loop\n          if State (Exception_Interrupts (J)) /= User then\n             Keep_Unmasked (Exception_Interrupts (J)) := True;\n@@ -245,16 +245,16 @@ package body System.Interrupt_Management is\n          Reserve (Abort_Task_Interrupt) := True;\n       end if;\n \n-      --  Set SIGINT to unmasked state as long as it is not in \"User\"\n-      --  state. Check for Unreserve_All_Interrupts last\n+      --  Set SIGINT to unmasked state as long as it is not in \"User\" state.\n+      --  Check for Unreserve_All_Interrupts last\n \n       if State (SIGINT) /= User then\n          Keep_Unmasked (SIGINT) := True;\n          Reserve (SIGINT) := True;\n       end if;\n \n-      --  Check all signals for state that requires keeping them\n-      --  unmasked and reserved\n+      --  Check all signals for state that requires keeping them unmasked and\n+      --  reserved\n \n       for J in Interrupt_ID'Range loop\n          if State (J) = Default or else State (J) = Runtime then\n@@ -276,18 +276,17 @@ package body System.Interrupt_Management is\n          Reserve (Interrupt_ID (Reserved (J))) := True;\n       end loop;\n \n-      --  Process pragma Unreserve_All_Interrupts. This overrides any\n-      --  settings due to pragma Interrupt_State:\n+      --  Process pragma Unreserve_All_Interrupts. This overrides any settings\n+      --  due to pragma Interrupt_State:\n \n       if Unreserve_All_Interrupts /= 0 then\n          Keep_Unmasked (SIGINT) := False;\n          Reserve (SIGINT) := False;\n       end if;\n \n-      --  We do not have Signal 0 in reality. We just use this value\n-      --  to identify non-existent signals (see s-intnam.ads). Therefore,\n-      --  Signal 0 should not be used in all signal related operations hence\n-      --  mark it as reserved.\n+      --  We do not really have Signal 0. We just use this value to identify\n+      --  non-existent signals (see s-intnam.ads). Therefore, Signal should not\n+      --  be used in all signal related operations hence mark it as reserved.\n \n       Reserve (0) := True;\n    end Initialize;"}, {"sha": "563423e4673a22b5a77f187e1d675b05b5e40f1f", "filename": "gcc/ada/sem_ch10.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fsem_ch10.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Fsem_ch10.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.ads?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c23d9e9a9b16a784686365ead2ef2d7302a54d3c", "filename": "gcc/ada/targtyps.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Ftargtyps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Ftargtyps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargtyps.c?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                                  Body                                    *\n  *                                                                          *\n- *          Copyright (C) 1992-2004 Free Software Foundation, Inc.          *\n+ *          Copyright (C) 1992-2006, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "52d9e1643f6610214c0d968ebc081bb62ab901d2", "filename": "gcc/ada/tb-alvxw.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Ftb-alvxw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5537cb48d7df5c01dfba4f1c3456a08d14f292/gcc%2Fada%2Ftb-alvxw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftb-alvxw.c?ref=fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                     Copyright (C) 2000-2005, AdaCore                     *\n+ *                     Copyright (C) 2000-2006, AdaCore                     *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}]}