{"sha": "85617eba1e78793df6ea010ea1e16be6cc378ac9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU2MTdlYmExZTc4NzkzZGY2ZWEwMTBlYTFlMTZiZTZjYzM3OGFjOQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2003-07-28T20:03:25Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2003-07-28T20:03:25Z"}, "message": "c-parse.in (lineno_stmt_decl_or_labels_ending_decl): Also warn when warn_declaration_after_statement.\n\n\t* c-parse.in (lineno_stmt_decl_or_labels_ending_decl): Also warn\n\twhen warn_declaration_after_statement.  Call pedwarn_c90, not\n\tpedwarn.  Correct message: it's \"ISO C90\", not \"ISO C89\".\n\t* c-common.c (warn_declaration_after_statement): Define.\n\t* c-common.h (warn_declaration_after_statement): Declare.\n\t* c.opt (Wdeclaration-after-statement): New.\n\t* c-errors.c (pedwarn_c90): New function.\n\t* c-opts.c (c_common_handle_option) <case\n\tOPT_Wdeclaration_after_statement>: New.\n\t* c-tree.h (pedwarn_c90): Declare.\n\t* doc/invoke.texi (Option Summary): Document\n\t-Wdeclaration-after-statement.\n\t(Warning Options): Ditto.\n\nCo-Authored-By: Michael Culbertson <Michael.J.Culbertson@wheaton.edu>\n\nFrom-SVN: r69899", "tree": {"sha": "0f1c19fbece8d2a5b50b52eb0fd803ccfc083558", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f1c19fbece8d2a5b50b52eb0fd803ccfc083558"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85617eba1e78793df6ea010ea1e16be6cc378ac9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85617eba1e78793df6ea010ea1e16be6cc378ac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85617eba1e78793df6ea010ea1e16be6cc378ac9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85617eba1e78793df6ea010ea1e16be6cc378ac9/comments", "author": null, "committer": null, "parents": [{"sha": "f527d1964956de243f75a65dfd5215f01ed8e01a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f527d1964956de243f75a65dfd5215f01ed8e01a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f527d1964956de243f75a65dfd5215f01ed8e01a"}], "stats": {"total": 69, "additions": 66, "deletions": 3}, "files": [{"sha": "b7ac766e232fbf1367bdb8c9443a56b28b33f9ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85617eba1e78793df6ea010ea1e16be6cc378ac9", "patch": "@@ -1,3 +1,20 @@\n+2003-07-28  Hans-Peter Nilsson  <hp@bitrange.com>\n+\t    Michael Culbertson  <Michael.J.Culbertson@wheaton.edu>\n+\n+\t* c-parse.in (lineno_stmt_decl_or_labels_ending_decl): Also warn\n+\twhen warn_declaration_after_statement.  Call pedwarn_c90, not\n+\tpedwarn.  Correct message: it's \"ISO C90\", not \"ISO C89\".\n+\t* c-common.c (warn_declaration_after_statement): Define.\n+\t* c-common.h (warn_declaration_after_statement): Declare.\n+\t* c.opt (Wdeclaration-after-statement): New.\n+\t* c-errors.c (pedwarn_c90): New function.\n+\t* c-opts.c (c_common_handle_option) <case\n+\tOPT_Wdeclaration_after_statement>: New.\n+\t* c-tree.h (pedwarn_c90): Declare.\n+\t* doc/invoke.texi (Option Summary): Document\n+\t-Wdeclaration-after-statement.\n+\t(Warning Options): Ditto.\n+\n Mon Jul 28 20:13:06 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (memory attribute) Avoid accessing uninitialized memory"}, {"sha": "c579b16f37c3377470f62e7cbb81ec68f89573dc", "filename": "gcc/c-common.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=85617eba1e78793df6ea010ea1e16be6cc378ac9", "patch": "@@ -391,6 +391,10 @@ int warn_bad_function_cast;\n \n int warn_traditional;\n \n+/* Nonzero means warn for a declaration found after a statement.  */\n+\n+int warn_declaration_after_statement;\n+\n /* Nonzero means warn for non-prototype function decls\n    or non-prototyped defs without previous prototype.  */\n "}, {"sha": "5d4c3d42d5a17c805beda4d40188e0f4bed2443a", "filename": "gcc/c-common.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=85617eba1e78793df6ea010ea1e16be6cc378ac9", "patch": "@@ -569,6 +569,10 @@ extern int warn_bad_function_cast;\n \n extern int warn_traditional;\n \n+/* Nonzero means warn for a declaration found after a statement.  */\n+\n+extern int warn_declaration_after_statement;\n+\n /* Nonzero means warn for non-prototype function decls\n    or non-prototyped defs without previous prototype.  */\n "}, {"sha": "fa71b8cfa97d92f5830e2272b6bdc121d37d954b", "filename": "gcc/c-errors.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc-errors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc-errors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-errors.c?ref=85617eba1e78793df6ea010ea1e16be6cc378ac9", "patch": "@@ -43,3 +43,21 @@ pedwarn_c99 (const char *msgid, ...)\n   report_diagnostic (&diagnostic);\n   va_end (ap);\n }\n+\n+/* Issue an ISO C90 pedantic warning MSGID.  This function is supposed to\n+   be used for matters that are allowed in ISO C99 but not supported in\n+   ISO C90, thus we explicitly don't pedwarn when C99 is specified.\n+   (There is no flag_c90.)  */\n+\n+void\n+pedwarn_c90 (const char *msgid, ...)\n+{\n+  diagnostic_info diagnostic;\n+  va_list ap;\n+\n+  va_start (ap, msgid);\n+  diagnostic_set_info (&diagnostic, msgid, &ap, input_location,\n+                       flag_isoc99 ? DK_WARNING : pedantic_error_kind ());\n+  report_diagnostic (&diagnostic);\n+  va_end (ap);\n+}"}, {"sha": "5061a58e9f166c955aa0eb503a4e63dbb20926c3", "filename": "gcc/c-opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=85617eba1e78793df6ea010ea1e16be6cc378ac9", "patch": "@@ -412,6 +412,10 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       warn_ctor_dtor_privacy = value;\n       break;\n \n+    case OPT_Wdeclaration_after_statement:\n+      warn_declaration_after_statement = value;\n+      break;\n+\n     case OPT_Wdeprecated:\n       warn_deprecated = value;\n       cpp_opts->warn_deprecated = value;"}, {"sha": "22b1531afa1355e341c85feb9bb1f5109427228c", "filename": "gcc/c-parse.in", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=85617eba1e78793df6ea010ea1e16be6cc378ac9", "patch": "@@ -2013,8 +2013,11 @@ lineno_stmt_decl_or_labels_ending_stmt:\n lineno_stmt_decl_or_labels_ending_decl:\n \t  lineno_decl\n \t| lineno_stmt_decl_or_labels_ending_stmt lineno_decl\n-\t\t{ if (pedantic && !flag_isoc99)\n-\t\t    pedwarn (\"ISO C89 forbids mixed declarations and code\"); }\n+\t\t{\n+\t\t  if ((pedantic && !flag_isoc99)\n+\t\t      || warn_declaration_after_statement)\n+\t\t    pedwarn_c90 (\"ISO C90 forbids mixed declarations and code\");\n+\t\t}\n \t| lineno_stmt_decl_or_labels_ending_decl lineno_decl\n \t| lineno_stmt_decl_or_labels_ending_error lineno_decl\n \t;"}, {"sha": "cbc83a523a0c57b314969b97d01892f38a18ce2e", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=85617eba1e78793df6ea010ea1e16be6cc378ac9", "patch": "@@ -288,6 +288,7 @@ extern void set_init_index (tree, tree);\n extern void set_init_label (tree);\n extern void process_init_element (tree);\n extern tree build_compound_literal (tree, tree);\n+extern void pedwarn_c90 (const char *, ...) ATTRIBUTE_PRINTF_1;\n extern void pedwarn_c99 (const char *, ...) ATTRIBUTE_PRINTF_1;\n extern tree c_start_case (tree);\n extern void c_finish_case (void);"}, {"sha": "15b96ad5e826442261fff55554d889c6dafeb0a3", "filename": "gcc/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=85617eba1e78793df6ea010ea1e16be6cc378ac9", "patch": "@@ -180,6 +180,10 @@ Wctor-dtor-privacy\n C++ ObjC++\n Warn when all constructors and destructors are private\n \n+Wdeclaration-after-statement\n+C ObjC\n+Warn when a declaration is found after a statement\n+\n Wdeprecated\n C++ ObjC++\n Warn about deprecated compiler features"}, {"sha": "edd657d759913b204be3ff0505ecf16f2b3dd340", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85617eba1e78793df6ea010ea1e16be6cc378ac9/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=85617eba1e78793df6ea010ea1e16be6cc378ac9", "patch": "@@ -233,7 +233,8 @@ in the following sections.\n @item C-only Warning Options\n @gccoptlist{-Wbad-function-cast  -Wmissing-declarations @gol\n -Wmissing-prototypes  -Wnested-externs @gol\n--Wstrict-prototypes  -Wtraditional}\n+-Wstrict-prototypes  -Wtraditional @gol\n+-Wdeclaration-after-statement}\n \n @item Debugging Options\n @xref{Debugging Options,,Options for Debugging Your Program or GCC}.\n@@ -2609,6 +2610,13 @@ because that feature is already a gcc extension and thus not relevant to\n traditional C compatibility.\n @end itemize\n \n+@item -Wdeclaration-after-statement @r{(C only)}\n+@opindex Wdeclaration-after-statement\n+Warn when a declaration is found after a statement in a block.  This\n+construct, known from C++, was introduced with ISO C99 and is by default\n+allowed in GCC@.  It is not supported by ISO C90 and was not supported by\n+GCC versions before GCC 3.0.  @xref{Mixed Declarations}.\n+\n @item -Wundef\n @opindex Wundef\n Warn if an undefined identifier is evaluated in an @samp{#if} directive."}]}