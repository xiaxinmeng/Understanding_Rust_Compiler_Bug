{"sha": "8385088039f58a1d403cbb0792105236d240de85", "node_id": "C_kwDOANBUbNoAKDgzODUwODgwMzlmNThhMWQ0MDNjYmIwNzkyMTA1MjM2ZDI0MGRlODU", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-12-22T17:32:59Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2023-01-02T10:52:59Z"}, "message": "Ada,Darwin: Do not link libgcc statically on Darwin 8 and 9 [PR108202].\n\nNormally, GCC executables are built with -static-libstdc++ -static-libgcc\non Darwin.  This is fine in most cases, because GCC executables typically\ndo no use exceptions.   However gnat1 does use exceptions and also pulls\nin system libraries that are linked against the installed shared libgcc\nwhich contains the system unwinder.  This means that gnat1 effectively has\ntwo unwinder instances (which does not work reliably since the unwinders\nhave global state).\n\nA recent change in the initialization of FDEs has made this a hard error\nnow on Darwin versions (8 and 9) with libgcc installed in /usr/lib (gnat1\nnow hangs when an exception is thrown).\n\nThe solution is to link libgcc dynamically, picking up the installed\nsystem version.  To do this we strip -static-libgcc from the link flags.\n\n\tPR ada/108202\n\ngcc/ada/ChangeLog:\n\n\t* gcc-interface/Make-lang.in (GCC_LINKERFLAGS, GCC_LDFLAGS):\n\tVersions of ALL_LINKERFLAGS, LDFLAGS with -Werror and\n\t-static-libgcc filtered out for Darwin8 and 9 (-Werror is filtered\n\tout for other hosts).", "tree": {"sha": "eddd500ce05ab6f8776f933640a07946f9bb4c91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eddd500ce05ab6f8776f933640a07946f9bb4c91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8385088039f58a1d403cbb0792105236d240de85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8385088039f58a1d403cbb0792105236d240de85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8385088039f58a1d403cbb0792105236d240de85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8385088039f58a1d403cbb0792105236d240de85/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46c0ea7704e9da9e6d574afc7ca1d218f49d237a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46c0ea7704e9da9e6d574afc7ca1d218f49d237a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46c0ea7704e9da9e6d574afc7ca1d218f49d237a"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "c81daae9c4aedd8a3608d89245bad432e346ce18", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8385088039f58a1d403cbb0792105236d240de85/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8385088039f58a1d403cbb0792105236d240de85/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=8385088039f58a1d403cbb0792105236d240de85", "patch": "@@ -260,11 +260,20 @@ else\n   endif\n endif\n \n+ifneq ($(filter darwin9% darwin8%,$(host_os)),)\n+# gnat1 uses exceptions which is incompatible with statically-linked libgcc\n+#\u00a0on Darwin8 and 9, since gnat1 also pulls in libraries linked with the system\n+# unwinder.\n+GCC_LINKERFLAGS = $(filter-out -Werror -static-libgcc, $(ALL_LINKERFLAGS))\n+GCC_LDFLAGS = $(filter-out -static-libgcc, $(LDFLAGS))\n+else\n # Strip -Werror during linking for the LTO bootstrap\n GCC_LINKERFLAGS = $(filter-out -Werror, $(ALL_LINKERFLAGS))\n+GCC_LDFLAGS = $(LDFLAGS)\n+endif\n \n-GCC_LINK=$(LINKER) $(GCC_LINKERFLAGS) $(LDFLAGS)\n-GCC_LLINK=$(LLINKER) $(GCC_LINKERFLAGS) $(LDFLAGS)\n+GCC_LINK=$(LINKER) $(GCC_LINKERFLAGS) $(GCC_LDFLAGS)\n+GCC_LLINK=$(LLINKER) $(GCC_LINKERFLAGS) $(GCC_LDFLAGS)\n \n # Lists of files for various purposes.\n "}]}