{"sha": "1751a78ecafb1d16d4a843dd22e739b8fd1cfede", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc1MWE3OGVjYWZiMWQxNmQ0YTg0M2RkMjJlNzM5YjhmZDFjZmVkZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-12-13T10:41:08Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-12-13T10:41:08Z"}, "message": "Move iterator_range to a new iterator-utils.h file\n\nA later patch will add more iterator-related utilities.  Rather than\nputting them all directly in coretypes.h, it seemed better to add a\nnew header file, here called \"iterator-utils.h\".  This preliminary\npatch moves the existing iterator_range class there too.\n\nI used the same copyright date range as coretypes.h \u201cjust to be sure\u201d.\n\ngcc/\n\t* coretypes.h (iterator_range): Move to...\n\t* iterator-utils.h: ...this new file.", "tree": {"sha": "dd827511ba1614186f344af7154e36677ce20290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd827511ba1614186f344af7154e36677ce20290"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1751a78ecafb1d16d4a843dd22e739b8fd1cfede", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1751a78ecafb1d16d4a843dd22e739b8fd1cfede", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1751a78ecafb1d16d4a843dd22e739b8fd1cfede", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1751a78ecafb1d16d4a843dd22e739b8fd1cfede/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ad972ece13f01f88a699b1a9f784c4166061901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad972ece13f01f88a699b1a9f784c4166061901", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ad972ece13f01f88a699b1a9f784c4166061901"}], "stats": {"total": 62, "additions": 45, "deletions": 17}, "files": [{"sha": "043df12f5881086009246201237d99eb68f89804", "filename": "gcc/coretypes.h", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1751a78ecafb1d16d4a843dd22e739b8fd1cfede/gcc%2Fcoretypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1751a78ecafb1d16d4a843dd22e739b8fd1cfede/gcc%2Fcoretypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoretypes.h?ref=1751a78ecafb1d16d4a843dd22e739b8fd1cfede", "patch": "@@ -367,23 +367,6 @@ struct kv_pair\n   const ValueType value;\t/* the value of the name */\n };\n \n-/* Iterator pair used for a collection iteration with range-based loops.  */\n-\n-template<typename T>\n-struct iterator_range\n-{\n-public:\n-  iterator_range (const T &begin, const T &end)\n-    : m_begin (begin), m_end (end) {}\n-\n-  T begin () const { return m_begin; }\n-  T end () const { return m_end; }\n-\n-private:\n-  T m_begin;\n-  T m_end;\n-};\n-\n #else\n \n struct _dont_use_rtx_here_;\n@@ -491,6 +474,7 @@ typedef unsigned char uchar;\n #include \"align.h\"\n /* Most host source files will require the following headers.  */\n #if !defined (GENERATOR_FILE)\n+#include \"iterator-utils.h\"\n #include \"real.h\"\n #include \"fixed-value.h\"\n #include \"hash-table.h\""}, {"sha": "0c95862c7caf1b47ccd357df9bc7ec62d70c4e49", "filename": "gcc/iterator-utils.h", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1751a78ecafb1d16d4a843dd22e739b8fd1cfede/gcc%2Fiterator-utils.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1751a78ecafb1d16d4a843dd22e739b8fd1cfede/gcc%2Fiterator-utils.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fiterator-utils.h?ref=1751a78ecafb1d16d4a843dd22e739b8fd1cfede", "patch": "@@ -0,0 +1,44 @@\n+// Iterator-related utilities.\n+// Copyright (C) 2002-2020 Free Software Foundation, Inc.\n+//\n+// This file is part of GCC.\n+//\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+//\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#ifndef GCC_ITERATOR_UTILS_H\n+#define GCC_ITERATOR_UTILS_H 1\n+\n+// A half-open [begin, end) range of iterators.\n+template<typename T>\n+struct iterator_range\n+{\n+public:\n+  using const_iterator = T;\n+\n+  iterator_range () = default;\n+  iterator_range (const T &begin, const T &end)\n+    : m_begin (begin), m_end (end) {}\n+\n+  T begin () const { return m_begin; }\n+  T end () const { return m_end; }\n+\n+  explicit operator bool () const { return m_begin != m_end; }\n+\n+private:\n+  T m_begin;\n+  T m_end;\n+};\n+\n+#endif"}]}