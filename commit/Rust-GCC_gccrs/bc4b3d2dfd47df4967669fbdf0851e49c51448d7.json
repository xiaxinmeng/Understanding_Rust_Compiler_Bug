{"sha": "bc4b3d2dfd47df4967669fbdf0851e49c51448d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM0YjNkMmRmZDQ3ZGY0OTY3NjY5ZmJkZjA4NTFlNDljNTE0NDhkNw==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-04T00:19:11Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-04T00:19:11Z"}, "message": "trans-intrinsic.c (gfc_conv_intrinsic_arith): Small argument handling cleanup.\n\n\t* trans-intrinsic.c (gfc_conv_intrinsic_arith): Small argument handling\n\tcleanup.\n\nFrom-SVN: r180917", "tree": {"sha": "d8bc3c5c143840ca1d82901a64a28f94d17ac7ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8bc3c5c143840ca1d82901a64a28f94d17ac7ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc4b3d2dfd47df4967669fbdf0851e49c51448d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc4b3d2dfd47df4967669fbdf0851e49c51448d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc4b3d2dfd47df4967669fbdf0851e49c51448d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc4b3d2dfd47df4967669fbdf0851e49c51448d7/comments", "author": null, "committer": null, "parents": [{"sha": "6492221c6c61be2d04e58f3a5bcc3f76316f3069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6492221c6c61be2d04e58f3a5bcc3f76316f3069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6492221c6c61be2d04e58f3a5bcc3f76316f3069"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "4d78f77b431e58f75fa5b2bd916dca7d33e27133", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc4b3d2dfd47df4967669fbdf0851e49c51448d7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc4b3d2dfd47df4967669fbdf0851e49c51448d7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bc4b3d2dfd47df4967669fbdf0851e49c51448d7", "patch": "@@ -1,3 +1,8 @@\n+2011-11-04  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_arith): Small argument handling\n+\tcleanup.\n+\n 2011-11-04  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans-intrinsic.c (gfc_conv_intrinsic_arith): Update conditions."}, {"sha": "b70150228cd3d3fa8612d785de5778f3ef2216dc", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc4b3d2dfd47df4967669fbdf0851e49c51448d7/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc4b3d2dfd47df4967669fbdf0851e49c51448d7/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=bc4b3d2dfd47df4967669fbdf0851e49c51448d7", "patch": "@@ -2569,7 +2569,7 @@ gfc_conv_intrinsic_arith (gfc_se * se, gfc_expr * expr, enum tree_code op,\n   stmtblock_t block;\n   tree tmp;\n   gfc_loopinfo loop;\n-  gfc_actual_arglist *actual;\n+  gfc_actual_arglist *arg_array, *arg_mask;\n   gfc_ss *arrayss;\n   gfc_ss *maskss;\n   gfc_se arrayse;\n@@ -2608,9 +2608,10 @@ gfc_conv_intrinsic_arith (gfc_se * se, gfc_expr * expr, enum tree_code op,\n \n   gfc_add_modify (&se->pre, resvar, tmp);\n \n+  arg_array = expr->value.function.actual;\n+\n   /* Walk the arguments.  */\n-  actual = expr->value.function.actual;\n-  arrayexpr = actual->expr;\n+  arrayexpr = arg_array->expr;\n   arrayss = gfc_walk_expr (arrayexpr);\n   gcc_assert (arrayss != gfc_ss_terminator);\n \n@@ -2619,9 +2620,9 @@ gfc_conv_intrinsic_arith (gfc_se * se, gfc_expr * expr, enum tree_code op,\n     maskexpr = NULL;\n   else\n     {\n-      actual = actual->next->next;\n-      gcc_assert (actual);\n-      maskexpr = actual->expr;\n+      arg_mask  = arg_array->next->next;\n+      gcc_assert (arg_mask != NULL);\n+      maskexpr = arg_mask->expr;\n     }\n \n   if (maskexpr && maskexpr->rank > 0)"}]}