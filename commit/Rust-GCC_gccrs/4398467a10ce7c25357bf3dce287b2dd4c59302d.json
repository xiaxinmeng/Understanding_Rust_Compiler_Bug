{"sha": "4398467a10ce7c25357bf3dce287b2dd4c59302d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM5ODQ2N2ExMGNlN2MyNTM1N2JmM2RjZTI4N2IyZGQ0YzU5MzAyZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-03-09T18:48:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-03-09T18:48:43Z"}, "message": "re PR debug/43290 (ICE in dwarf2out_frame_debug_expr)\n\n\tPR debug/43290\n\t* config/i386/i386.c (ix86_get_drap_rtx): Don't set\n\tRTX_FRAME_RELATED_P.\n\n\t* g++.dg/eh/unwind2.C: New test.\n\nFrom-SVN: r157313", "tree": {"sha": "664a758f9ec94f7a71fd3e7a825f752304737b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/664a758f9ec94f7a71fd3e7a825f752304737b27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4398467a10ce7c25357bf3dce287b2dd4c59302d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4398467a10ce7c25357bf3dce287b2dd4c59302d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4398467a10ce7c25357bf3dce287b2dd4c59302d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4398467a10ce7c25357bf3dce287b2dd4c59302d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8302950ddcbe2adc34237d8367a06ba08c3f8069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8302950ddcbe2adc34237d8367a06ba08c3f8069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8302950ddcbe2adc34237d8367a06ba08c3f8069"}], "stats": {"total": 112, "additions": 108, "deletions": 4}, "files": [{"sha": "20a1e8735a79673085beaffe85640388b9a29da6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4398467a10ce7c25357bf3dce287b2dd4c59302d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4398467a10ce7c25357bf3dce287b2dd4c59302d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4398467a10ce7c25357bf3dce287b2dd4c59302d", "patch": "@@ -1,3 +1,9 @@\n+2010-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/43290\n+\t* config/i386/i386.c (ix86_get_drap_rtx): Don't set\n+\tRTX_FRAME_RELATED_P.\n+\n 2010-03-09  Jie Zhang  <jie@codesourcery.com>\n \n \t* config/arm/arm.md (thumb_mulsi3_v6): Remove trailing"}, {"sha": "ab242a63da6061e917e8039af1919461d943ae4c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4398467a10ce7c25357bf3dce287b2dd4c59302d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4398467a10ce7c25357bf3dce287b2dd4c59302d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4398467a10ce7c25357bf3dce287b2dd4c59302d", "patch": "@@ -8319,7 +8319,7 @@ ix86_get_drap_rtx (void)\n       unsigned int regno = find_drap_reg ();\n       rtx drap_vreg;\n       rtx arg_ptr;\n-      rtx seq, insn;\n+      rtx seq;\n \n       arg_ptr = gen_rtx_REG (Pmode, regno);\n       crtl->drap_reg = arg_ptr;\n@@ -8328,9 +8328,8 @@ ix86_get_drap_rtx (void)\n       drap_vreg = copy_to_reg (arg_ptr);\n       seq = get_insns ();\n       end_sequence ();\n-      \n-      insn = emit_insn_before (seq, NEXT_INSN (entry_of_function ()));\n-      RTX_FRAME_RELATED_P (insn) = 1;\n+\n+      emit_insn_before (seq, NEXT_INSN (entry_of_function ()));\n       return drap_vreg;\n     }\n   else"}, {"sha": "a874977e3b95f2b0c4c18e324a93b0bc97adf3be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4398467a10ce7c25357bf3dce287b2dd4c59302d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4398467a10ce7c25357bf3dce287b2dd4c59302d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4398467a10ce7c25357bf3dce287b2dd4c59302d", "patch": "@@ -1,3 +1,8 @@\n+2010-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/43290\n+\t* g++.dg/eh/unwind2.C: New test.\n+\n 2010-03-05  Sebastian Pop  <sebastian.pop@amd.com>\n \t    Reza Yazdani  <reza.yazdani@amd.com>\n "}, {"sha": "d6181c8c04b5e6ff154c487a288200a48f25f098", "filename": "gcc/testsuite/g++.dg/eh/unwind2.C", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4398467a10ce7c25357bf3dce287b2dd4c59302d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Funwind2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4398467a10ce7c25357bf3dce287b2dd4c59302d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Funwind2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Funwind2.C?ref=4398467a10ce7c25357bf3dce287b2dd4c59302d", "patch": "@@ -0,0 +1,94 @@\n+// PR debug/43290\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+// { dg-options \"-O3 -mavx -fPIC -mtune=core2\" { target { { i?86-*-* x86_64-*-* } && { ilp32 && fpic } } } }\n+\n+namespace std\n+{\n+  template <class> struct char_traits;\n+}\n+typedef struct { union { char __wchb[4]; }; } mbstate_t;\n+namespace std\n+{\n+  template <typename _StateT> struct fpos\n+  {\n+    long long _M_off;\n+    _StateT _M_state;\n+    fpos (long long):_M_off (), _M_state () { }\n+    _StateT state () { return _M_state; }\n+  };\n+  typedef fpos <mbstate_t> streampos;\n+}\n+namespace std\n+{\n+  template <> struct char_traits <char>\n+  {\n+    typedef streampos pos_type;\n+    typedef long long off_type;\n+    typedef mbstate_t state_type;\n+  };\n+}\n+struct pthread_mutex_t;\n+namespace\n+{\n+  enum _Ios_Openmode { _S_in = 3, _S_out };\n+  enum _Ios_Seekdir { _S_beg };\n+  struct ios_base\n+  {\n+    typedef _Ios_Openmode openmode;\n+    static const openmode in = _S_in;\n+    static const openmode out = _S_out;\n+    typedef _Ios_Seekdir seekdir;\n+    static const seekdir beg = _S_beg;\n+  };\n+  template < typename _CharT, typename > struct basic_streambuf\n+  {\n+    typedef _CharT char_type;\n+    char_type * _M_in_beg;\n+    char_type *eback () { return _M_in_beg; }\n+    char_type *gptr () {}\n+  };\n+}\n+namespace std\n+{\n+  typedef struct pthread_mutex_t __c_lock;\n+  template <typename> class __basic_file;\n+  template <> struct __basic_file <char>\n+  {\n+    __basic_file (__c_lock * = 0);\n+    bool is_open ();\n+  };\n+  template <typename _CharT, typename _Traits> struct basic_filebuf : public basic_streambuf <_CharT, _Traits>\n+  {\n+    typedef _CharT char_type;\n+    typedef _Traits traits_type;\n+    typedef typename traits_type::pos_type pos_type;\n+    typedef typename traits_type::off_type off_type;\n+    typedef __basic_file < char >__file_type;\n+    typedef typename traits_type::state_type __state_type;\n+    __file_type _M_file;\n+    char_type *_M_pback_cur_save;\n+    bool _M_pback_init;\n+    void _M_destroy_pback () throw ()\n+    {\n+\t_M_pback_cur_save += this->gptr () != this->eback ();\n+\t_M_pback_init = false;\n+    }\n+    bool is_open () throw () { return _M_file.is_open (); }\n+    pos_type seekpos (pos_type, ios_base::openmode = ios_base::in | ios_base::out);\n+    pos_type _M_seek (off_type, ios_base::seekdir, __state_type);\n+  };\n+  template <typename _CharT, typename _Traits>\n+  typename basic_filebuf <_CharT, _Traits>::pos_type\n+  basic_filebuf <_CharT, _Traits>::seekpos (pos_type __pos, ios_base::openmode)\n+  {\n+    pos_type __ret = (off_type ());\n+    if (this->is_open ())\n+      {\n+\t_M_destroy_pback ();\n+\t__ret = _M_seek (off_type (), ios_base::beg, __pos.state ());\n+      }\n+    return __ret;\n+  }\n+  template class basic_filebuf <char, char_traits <char> >;\n+}"}]}