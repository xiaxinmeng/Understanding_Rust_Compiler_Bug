{"sha": "24b3ff2c53806d3ddf1b93dcc04dfc538597effa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRiM2ZmMmM1MzgwNmQzZGRmMWI5M2RjYzA0ZGZjNTM4NTk3ZWZmYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-12-01T20:09:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-12-01T20:09:37Z"}, "message": "re PR c++/3187 (gcc lays down two copies of constructors)\n\n\tPR c++/3187\n\t* optimize.c (cdtor_comdat_group): New function.\n\t(maybe_clone_body): Also optimize DECL_COMDAT base/complete cdtors\n\tand in that case put also the deleting dtor in the same comdat group\n\tas base and complete dtor if dtor is virtual.\n\nFrom-SVN: r154880", "tree": {"sha": "62394a41ad82988135717beeaf066964e1b17af1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62394a41ad82988135717beeaf066964e1b17af1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24b3ff2c53806d3ddf1b93dcc04dfc538597effa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b3ff2c53806d3ddf1b93dcc04dfc538597effa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24b3ff2c53806d3ddf1b93dcc04dfc538597effa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b3ff2c53806d3ddf1b93dcc04dfc538597effa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f2eb765d71a0bdf740ec57900916bf9cf9dcf9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f2eb765d71a0bdf740ec57900916bf9cf9dcf9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f2eb765d71a0bdf740ec57900916bf9cf9dcf9a"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "c18533368db1373cf5eab4431ba66014ad631694", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b3ff2c53806d3ddf1b93dcc04dfc538597effa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b3ff2c53806d3ddf1b93dcc04dfc538597effa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=24b3ff2c53806d3ddf1b93dcc04dfc538597effa", "patch": "@@ -1,3 +1,11 @@\n+2009-12-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/3187\n+\t* optimize.c (cdtor_comdat_group): New function.\n+\t(maybe_clone_body): Also optimize DECL_COMDAT base/complete cdtors\n+\tand in that case put also the deleting dtor in the same comdat group\n+\tas base and complete dtor if dtor is virtual.\n+\n 2009-11-30  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/40371"}, {"sha": "5a67431cc1f2eff65c7199d5af81bad12be56317", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 67, "deletions": 1, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b3ff2c53806d3ddf1b93dcc04dfc538597effa/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b3ff2c53806d3ddf1b93dcc04dfc538597effa/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=24b3ff2c53806d3ddf1b93dcc04dfc538597effa", "patch": "@@ -142,13 +142,54 @@ build_delete_destructor_body (tree delete_dtor, tree complete_dtor)\n     }\n }\n \n+/* Return name of comdat group for complete and base ctor (or dtor)\n+   that have the same body.  If dtor is virtual, deleting dtor goes\n+   into this comdat group as well.  */\n+\n+static tree\n+cdtor_comdat_group (tree complete, tree base)\n+{\n+  tree complete_name = DECL_COMDAT_GROUP (complete);\n+  tree base_name = DECL_COMDAT_GROUP (base);\n+  char *grp_name;\n+  const char *p, *q;\n+  bool diff_seen = false;\n+  size_t idx;\n+  if (complete_name == NULL)\n+    complete_name = cxx_comdat_group (complete);\n+  if (base_name == NULL)\n+    base_name = cxx_comdat_group (base);\n+  gcc_assert (IDENTIFIER_LENGTH (complete_name)\n+\t      == IDENTIFIER_LENGTH (base_name));\n+  grp_name = XALLOCAVEC (char, IDENTIFIER_LENGTH (complete_name) + 1);\n+  p = IDENTIFIER_POINTER (complete_name);\n+  q = IDENTIFIER_POINTER (base_name);\n+  for (idx = 0; idx < IDENTIFIER_LENGTH (complete_name); idx++)\n+    if (p[idx] == q[idx])\n+      grp_name[idx] = p[idx];\n+    else\n+      {\n+\tgcc_assert (!diff_seen\n+\t\t    && idx > 0\n+\t\t    && (p[idx - 1] == 'C' || p[idx - 1] == 'D')\n+\t\t    && p[idx] == '1'\n+\t\t    && q[idx] == '2');\n+\tgrp_name[idx] = '5';\n+\tdiff_seen = true;\n+      }\n+  grp_name[idx] = '\\0';\n+  gcc_assert (diff_seen);\n+  return get_identifier (grp_name);\n+}\n+\n /* FN is a function that has a complete body.  Clone the body as\n    necessary.  Returns nonzero if there's no longer any need to\n    process the main body.  */\n \n bool\n maybe_clone_body (tree fn)\n {\n+  tree comdat_group = NULL_TREE;\n   tree clone;\n   tree fns[3];\n   bool first = true;\n@@ -248,10 +289,26 @@ maybe_clone_body (tree fn)\n \t  && idx == 1\n \t  && !flag_use_repository\n \t  && DECL_INTERFACE_KNOWN (fns[0])\n-\t  && !DECL_ONE_ONLY (fns[0])\n+\t  && (SUPPORTS_ONE_ONLY || !DECL_WEAK (fns[0]))\n+\t  && (!DECL_ONE_ONLY (fns[0])\n+\t      || (HAVE_COMDAT_GROUP\n+\t\t  && DECL_WEAK (fns[0])\n+\t\t  /* Don't optimize synthetized virtual dtors, because then\n+\t\t     the deleting and other dtors are emitted when needed\n+\t\t     and so it is not certain we would emit both\n+\t\t     deleting and complete/base dtors in the comdat group.  */\n+\t\t  && (fns[2] == NULL || !DECL_ARTIFICIAL (fn))))\n \t  && cgraph_same_body_alias (clone, fns[0]))\n \t{\n \t  alias = true;\n+\t  if (DECL_ONE_ONLY (fns[0]))\n+\t    {\n+\t      /* For comdat base and complete cdtors put them\n+\t\t into the same, *[CD]5* comdat group instead of\n+\t\t *[CD][12]*.  */\n+\t      comdat_group = cdtor_comdat_group (fns[1], fns[0]);\n+\t      DECL_COMDAT_GROUP (fns[0]) = comdat_group;\n+\t    }\n \t  emit_associated_thunks (clone);\n \t}\n \n@@ -333,6 +390,15 @@ maybe_clone_body (tree fn)\n     }\n   pop_from_top_level ();\n \n+  if (comdat_group)\n+    {\n+      DECL_COMDAT_GROUP (fns[1]) = comdat_group;\n+      if (fns[2])\n+\t/* If *[CD][12]* dtors go into the *[CD]5* comdat group and dtor is\n+\t   virtual, it goes into the same comdat group as well.  */\n+\tDECL_COMDAT_GROUP (fns[2]) = comdat_group;\n+    }\n+\n   /* We don't need to process the original function any further.  */\n   return 1;\n }"}]}