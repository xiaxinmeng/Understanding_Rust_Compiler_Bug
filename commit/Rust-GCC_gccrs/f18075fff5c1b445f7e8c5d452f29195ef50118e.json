{"sha": "f18075fff5c1b445f7e8c5d452f29195ef50118e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE4MDc1ZmZmNWMxYjQ0NWY3ZThjNWQ0NTJmMjkxOTVlZjUwMTE4ZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-03-02T13:07:46Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-03-02T13:07:46Z"}, "message": "re PR fortran/52270 ([OOP] Polymorphic vars: wrong intent(in) check, passing nonptr variable to intent(in) ptr dummy)\n\n2012-03-02  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52270\n        * expr.c (gfc_check_vardef_context): Fix check for\n        intent-in polymorphic pointer .\n        * interface.c (compare_parameter): Allow passing TYPE to\n        intent-in polymorphic pointer.\n\n2012-03-02  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52270\n        * gfortran.dg/class_51.f90: New.\n\nFrom-SVN: r184784", "tree": {"sha": "96c85bf852f194d4f7de40a8e882b8ba7940a34b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96c85bf852f194d4f7de40a8e882b8ba7940a34b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f18075fff5c1b445f7e8c5d452f29195ef50118e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18075fff5c1b445f7e8c5d452f29195ef50118e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18075fff5c1b445f7e8c5d452f29195ef50118e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18075fff5c1b445f7e8c5d452f29195ef50118e/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d68f67f2f107ec9629a003f6bba4b0878f61c36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d68f67f2f107ec9629a003f6bba4b0878f61c36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d68f67f2f107ec9629a003f6bba4b0878f61c36"}], "stats": {"total": 75, "additions": 70, "deletions": 5}, "files": [{"sha": "8f7822f6c4d8764b6cd617a631ecb44384464312", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18075fff5c1b445f7e8c5d452f29195ef50118e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18075fff5c1b445f7e8c5d452f29195ef50118e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f18075fff5c1b445f7e8c5d452f29195ef50118e", "patch": "@@ -1,3 +1,11 @@\n+2012-03-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52270\n+\t* expr.c (gfc_check_vardef_context): Fix check for\n+\tintent-in polymorphic pointer .\n+\t* interface.c (compare_parameter): Allow passing TYPE to\n+\tintent-in polymorphic pointer.\n+\n 2012-03-02  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/52452"}, {"sha": "d136140876d6e5ca27c9a8c8a0fec286a428acbd", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18075fff5c1b445f7e8c5d452f29195ef50118e/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18075fff5c1b445f7e8c5d452f29195ef50118e/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=f18075fff5c1b445f7e8c5d452f29195ef50118e", "patch": "@@ -4648,7 +4648,8 @@ gfc_check_vardef_context (gfc_expr* e, bool pointer, bool alloc_obj,\n      the component of sub-component of a pointer.  Obviously,\n      procedure pointers are of no interest here.  */\n   check_intentin = true;\n-  ptr_component = sym->attr.pointer;\n+  ptr_component = (sym->ts.type == BT_CLASS && CLASS_DATA (sym))\n+\t\t  ? CLASS_DATA (sym)->attr.class_pointer : sym->attr.pointer;\n   for (ref = e->ref; ref && check_intentin; ref = ref->next)\n     {\n       if (ptr_component && ref->type == REF_COMPONENT)"}, {"sha": "e9df662a29a254bc50534e52318b7b392f78cad3", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18075fff5c1b445f7e8c5d452f29195ef50118e/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18075fff5c1b445f7e8c5d452f29195ef50118e/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=f18075fff5c1b445f7e8c5d452f29195ef50118e", "patch": "@@ -1579,7 +1579,9 @@ compare_pointer (gfc_symbol *formal, gfc_expr *actual)\n {\n   symbol_attribute attr;\n \n-  if (formal->attr.pointer)\n+  if (formal->attr.pointer\n+      || (formal->ts.type == BT_CLASS && CLASS_DATA (formal)\n+\t  && CLASS_DATA (formal)->attr.class_pointer))\n     {\n       attr = gfc_expr_attr (actual);\n \n@@ -1706,10 +1708,11 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \t\t   gfc_typename (&formal->ts));\n       return 0;\n     }\n-    \n-  /* F2008, 12.5.2.5.  */\n+\n+  /* F2008, 12.5.2.5; IR F08/0073.  */\n   if (formal->ts.type == BT_CLASS\n-      && (CLASS_DATA (formal)->attr.class_pointer\n+      && ((CLASS_DATA (formal)->attr.class_pointer\n+\t   && !formal->attr.intent == INTENT_IN)\n           || CLASS_DATA (formal)->attr.allocatable))\n     {\n       if (actual->ts.type != BT_CLASS)"}, {"sha": "19ea2d569e08952424be14b2dc3b594c116ca245", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18075fff5c1b445f7e8c5d452f29195ef50118e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18075fff5c1b445f7e8c5d452f29195ef50118e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f18075fff5c1b445f7e8c5d452f29195ef50118e", "patch": "@@ -1,3 +1,8 @@\n+2012-03-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52270\n+\t* gfortran.dg/class_51.f90: New.\n+\n 2012-03-02  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/52452"}, {"sha": "1fdad92dd04e53e55a77bffd32332f7bfb15e072", "filename": "gcc/testsuite/gfortran.dg/class_51.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18075fff5c1b445f7e8c5d452f29195ef50118e/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_51.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18075fff5c1b445f7e8c5d452f29195ef50118e/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_51.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_51.f90?ref=f18075fff5c1b445f7e8c5d452f29195ef50118e", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR fortran/52270\n+!\n+! From IR F08/0073 by Malcolm Cohen\n+!\n+\n+  Program m013\n+    Type t\n+      Real c\n+    End Type\n+    Type(t),Target :: x\n+    Call sub(x)\n+    Print *,x%c\n+    if (x%c /= 3) call abort ()\n+  Contains\n+    Subroutine sub(p)\n+      Class(t),Pointer,Intent(In) :: p\n+      p%c = 3\n+    End Subroutine\n+  End Program\n+\n+! { dg-final { scan-tree-dump-times \"sub \\\\(&class\" 1 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}, {"sha": "42cb86db4a34338faae1be8ba8bb7242b17ad530", "filename": "gcc/testsuite/gfortran.dg/class_52.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18075fff5c1b445f7e8c5d452f29195ef50118e/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_52.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18075fff5c1b445f7e8c5d452f29195ef50118e/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_52.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_52.f90?ref=f18075fff5c1b445f7e8c5d452f29195ef50118e", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2003\" }\n+!\n+! PR fortran/52270\n+!\n+! From IR F08/0073 by Malcolm Cohen\n+!\n+\n+  Program m013\n+    Type t\n+      Real c\n+    End Type\n+    Type(t),Target :: x\n+    Call sub(x) ! { dg-error \"Fortran 2008: Non-pointer actual argument\" }\n+    Print *,x%c\n+    if (x%c /= 3) call abort ()\n+  Contains\n+    Subroutine sub(p)\n+      Class(t),Pointer,Intent(In) :: p\n+      p%c = 3\n+    End Subroutine\n+  End Program\n+"}]}