{"sha": "dafee8e3070bf77351118157c5fabb931e8c2541", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFmZWU4ZTMwNzBiZjc3MzUxMTE4MTU3YzVmYWJiOTMxZThjMjU0MQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-10-18T18:17:23Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-10-18T18:17:23Z"}, "message": "libgcc.texi: Group multi-word types...\n\n\n\t* libgcc.texi: Group multi-word types, such as \"long double\" and\n\t\"unsigned int\", using braces in @deftypefn and @deftypefnx nodes.\n\tDocument __unord?f2 as returning a non-zero value, not just one.\n\nFrom-SVN: r72645", "tree": {"sha": "ef2493b51b69bbda864622d3aa1c31958fb01e4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef2493b51b69bbda864622d3aa1c31958fb01e4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dafee8e3070bf77351118157c5fabb931e8c2541", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dafee8e3070bf77351118157c5fabb931e8c2541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dafee8e3070bf77351118157c5fabb931e8c2541", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dafee8e3070bf77351118157c5fabb931e8c2541/comments", "author": null, "committer": null, "parents": [{"sha": "5f04800c283cf84eb51c7f641b5a57aee35a21e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f04800c283cf84eb51c7f641b5a57aee35a21e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f04800c283cf84eb51c7f641b5a57aee35a21e5"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "5f20a90ee870c371d91a0b2fc8977e2b1e44c8eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dafee8e3070bf77351118157c5fabb931e8c2541/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dafee8e3070bf77351118157c5fabb931e8c2541/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dafee8e3070bf77351118157c5fabb931e8c2541", "patch": "@@ -1,3 +1,9 @@\n+2003-10-18  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* libgcc.texi: Group multi-word types, such as \"long double\" and\n+\t\"unsigned int\", using braces in @deftypefn and @deftypefnx nodes.\n+\tDocument __unord?f2 as returning a non-zero value, not just one.\n+\n 2003-10-18  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config/mmix/t-mmix (CRTSTUFF_T_CFLAGS): Define."}, {"sha": "bbad88d08e1349ea89b0e0398968889024b37272", "filename": "gcc/doc/libgcc.texi", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dafee8e3070bf77351118157c5fabb931e8c2541/gcc%2Fdoc%2Flibgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dafee8e3070bf77351118157c5fabb931e8c2541/gcc%2Fdoc%2Flibgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Flibgcc.texi?ref=dafee8e3070bf77351118157c5fabb931e8c2541", "patch": "@@ -160,42 +160,42 @@ for @code{long double} on some architectures.\n \n @deftypefn {Runtime Function} float __addsf3 (float @var{a}, float @var{b})\n @deftypefnx {Runtime Function} double __adddf3 (double @var{a}, double @var{b})\n-@deftypefnx {Runtime Function} long double __addtf3 (long double @var{a}, long double @var{b})\n+@deftypefnx {Runtime Function} {long double} __addtf3 (long double @var{a}, long double @var{b})\n These functions return the sum of @var{a} and @var{b}.\n @end deftypefn\n \n @deftypefn {Runtime Function} float __subsf3 (float @var{a}, float @var{b})\n @deftypefnx {Runtime Function} double __subdf3 (double @var{a}, double @var{b})\n-@deftypefnx {Runtime Function} long double __subtf3 (long double @var{a}, long double @var{b})\n+@deftypefnx {Runtime Function} {long double} __subtf3 (long double @var{a}, long double @var{b})\n These functions return the difference between @var{b} and @var{a};\n that is, @w{@math{@var{a} - @var{b}}}.\n @end deftypefn\n \n @deftypefn {Runtime Function} float __mulsf3 (float @var{a}, float @var{b})\n @deftypefnx {Runtime Function} double __muldf3 (double @var{a}, double @var{b})\n-@deftypefnx {Runtime Function} long double __multf3 (long double @var{a}, long double @var{b})\n+@deftypefnx {Runtime Function} {long double} __multf3 (long double @var{a}, long double @var{b})\n These functions return the product of @var{a} and @var{b}.\n @end deftypefn\n \n @deftypefn {Runtime Function} float __divsf3 (float @var{a}, float @var{b})\n @deftypefnx {Runtime Function} double __divdf3 (double @var{a}, double @var{b})\n-@deftypefnx {Runtime Function} long double __divtf3 (long double @var{a}, long double @var{b})\n+@deftypefnx {Runtime Function} {long double} __divtf3 (long double @var{a}, long double @var{b})\n These functions return the quotient of @var{a} and @var{b}; that is,\n @w{@math{@var{a} / @var{b}}}.\n @end deftypefn\n \n-@deftypefn {Runtime Function} double __negdf2 (double @var{a})\n-@deftypefnx {Runtime Function} long double __negtf2 (long double @var{a})\n-@deftypefnx {Runtime Function} float __negsf2 (float @var{a})\n+@deftypefn {Runtime Function} float __negsf2 (float @var{a})\n+@deftypefnx {Runtime Function} double __negdf2 (double @var{a})\n+@deftypefnx {Runtime Function} {long double} __negtf2 (long double @var{a})\n These functions return the negation of @var{a}.  They simply flip the\n sign bit, so they can produce negative zero and negative NaN.\n @end deftypefn\n \n @subsection Conversion functions\n \n @deftypefn {Runtime Function} double __extendsfdf2 (float @var{a})\n-@deftypefnx {Runtime Function} long double __extendsftf2 (float @var{a})\n-@deftypefnx {Runtime Function} long double __extenddftf2 (double @var{a})\n+@deftypefnx {Runtime Function} {long double} __extendsftf2 (float @var{a})\n+@deftypefnx {Runtime Function} {long double} __extenddftf2 (double @var{a})\n These functions extend @var{a} to the wider mode of their return\n type.\n @end deftypefn\n@@ -213,22 +213,22 @@ type, rounding toward zero.\n These functions convert @var{a} to a signed integer, rounding toward zero.\n @end deftypefn\n \n-@deftypefn {Runtime Function} unsigned int __fixunssfsi (float @var{a})\n-@deftypefnx {Runtime Function} unsigned int __fixunsdfsi (double @var{a})\n-@deftypefnx {Runtime Function} unsigned int __fixunstfsi (long double @var{a})\n+@deftypefn {Runtime Function} {unsigned int} __fixunssfsi (float @var{a})\n+@deftypefnx {Runtime Function} {unsigned int} __fixunsdfsi (double @var{a})\n+@deftypefnx {Runtime Function} {unsigned int} __fixunstfsi (long double @var{a})\n These functions convert @var{a} to an unsigned integer, rounding\n toward zero.  Negative values all become zero.\n @end deftypefn\n \n @deftypefn {Runtime Function} float __floatsisf (int @var{i})\n @deftypefnx {Runtime Function} double __floatsidf (int @var{i})\n-@deftypefnx {Runtime Function} long double __floatsitf (int @var{i})\n+@deftypefnx {Runtime Function} {long double} __floatsitf (int @var{i})\n These functions convert @var{i}, a signed integer, to floating point.\n @end deftypefn\n \n @deftypefn {Runtime Function} float __floatunsisf (unsigned int @var{n})\n @deftypefnx {Runtime Function} double __floatunsidf (unsigned int @var{n})\n-@deftypefnx {Runtime Function} long double __floatunsitf (unsigned int @var{n})\n+@deftypefnx {Runtime Function} {long double} __floatunsitf (unsigned int @var{n})\n These functions convert @var{n}, an unsigned integer, to floating point.\n @end deftypefn\n \n@@ -256,7 +256,7 @@ functions.\n @deftypefn {Runtime Function} int __unordsf2 (float @var{a}, float @var{b})\n @deftypefnx {Runtime Function} int __unorddf2 (double @var{a}, double @var{b})\n @deftypefnx {Runtime Function} int __unordtf2 (long double @var{a}, long double @var{b})\n-These functions return 1 if either argument is NaN, otherwise 0.\n+These functions return a nonzero value if either argument is NaN, otherwise 0.\n @end deftypefn\n \n There is also a complete group of higher level functions which"}]}