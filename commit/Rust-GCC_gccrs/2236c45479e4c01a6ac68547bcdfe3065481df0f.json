{"sha": "2236c45479e4c01a6ac68547bcdfe3065481df0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIzNmM0NTQ3OWU0YzAxYTZhYzY4NTQ3YmNkZmUzMDY1NDgxZGYwZg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-08-26T11:18:14Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-08-26T13:42:31Z"}, "message": "symver: fix attribute matching.\n\ngcc/ChangeLog:\n\n\t* cgraphunit.c (process_symver_attribute): Match only symver\n\tTREE_PURPOSE.", "tree": {"sha": "8dcb4b04737fa904c7a52382683548b63a6f37b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dcb4b04737fa904c7a52382683548b63a6f37b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2236c45479e4c01a6ac68547bcdfe3065481df0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2236c45479e4c01a6ac68547bcdfe3065481df0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2236c45479e4c01a6ac68547bcdfe3065481df0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2236c45479e4c01a6ac68547bcdfe3065481df0f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9a2b5b8a32c992fdba09e83fb180e8bd6fba158", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9a2b5b8a32c992fdba09e83fb180e8bd6fba158", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9a2b5b8a32c992fdba09e83fb180e8bd6fba158"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "26d3995a0c0b3babf62b2c024f2bfecd16979b77", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2236c45479e4c01a6ac68547bcdfe3065481df0f/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2236c45479e4c01a6ac68547bcdfe3065481df0f/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=2236c45479e4c01a6ac68547bcdfe3065481df0f", "patch": "@@ -727,6 +727,9 @@ process_symver_attribute (symtab_node *n)\n \t  .symver foo, bar@V1\n \t  .symver foo, baz@V2\n       */\n+      const char *purpose = IDENTIFIER_POINTER (TREE_PURPOSE (value));\n+      if (strcmp (purpose, \"symver\") != 0)\n+\tcontinue;\n \n       tree symver = get_identifier_with_length\n \t(TREE_STRING_POINTER (TREE_VALUE (TREE_VALUE (value))),"}]}