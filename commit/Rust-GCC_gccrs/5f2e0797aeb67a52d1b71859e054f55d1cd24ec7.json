{"sha": "5f2e0797aeb67a52d1b71859e054f55d1cd24ec7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYyZTA3OTdhZWI2N2E1MmQxYjcxODU5ZTA1NGY1NWQxY2QyNGVjNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-06-04T17:34:19Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-06-04T17:34:19Z"}, "message": "recog.c (preprocess_constraints): Don't skip disabled alternatives.\n\ngcc/\n\t* recog.c (preprocess_constraints): Don't skip disabled alternatives.\n\t* ira-lives.c (check_and_make_def_conflict): Check for disabled\n\talternatives.\n\t(make_early_clobber_and_input_conflicts): Likewise.\n\t* config/i386/i386.c (ix86_legitimate_combined_insn): Likewise.\n\nFrom-SVN: r211239", "tree": {"sha": "2d52f4da33819b6ccfd836b957991f7753751a0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d52f4da33819b6ccfd836b957991f7753751a0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f2e0797aeb67a52d1b71859e054f55d1cd24ec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2e0797aeb67a52d1b71859e054f55d1cd24ec7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f2e0797aeb67a52d1b71859e054f55d1cd24ec7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2e0797aeb67a52d1b71859e054f55d1cd24ec7/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5efe5dec7a9db46a8514e6a0e1ef9bacc38cd807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5efe5dec7a9db46a8514e6a0e1ef9bacc38cd807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5efe5dec7a9db46a8514e6a0e1ef9bacc38cd807"}], "stats": {"total": 66, "additions": 38, "deletions": 28}, "files": [{"sha": "0cc10d25b6aabc9aaa87d31206eb6cf86a29b84b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2e0797aeb67a52d1b71859e054f55d1cd24ec7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2e0797aeb67a52d1b71859e054f55d1cd24ec7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f2e0797aeb67a52d1b71859e054f55d1cd24ec7", "patch": "@@ -1,3 +1,11 @@\n+2014-06-04  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* recog.c (preprocess_constraints): Don't skip disabled alternatives.\n+\t* ira-lives.c (check_and_make_def_conflict): Check for disabled\n+\talternatives.\n+\t(make_early_clobber_and_input_conflicts): Likewise.\n+\t* config/i386/i386.c (ix86_legitimate_combined_insn): Likewise.\n+\n 2014-06-04  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* recog.h (alternative_class): New function."}, {"sha": "e0e55d51cfd7ad92b8c8d6a8e8e3633d4973dac8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2e0797aeb67a52d1b71859e054f55d1cd24ec7/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2e0797aeb67a52d1b71859e054f55d1cd24ec7/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5f2e0797aeb67a52d1b71859e054f55d1cd24ec7", "patch": "@@ -5875,8 +5875,11 @@ ix86_legitimate_combined_insn (rtx insn)\n \t  /* Operand has no constraints, anything is OK.  */\n  \t  win = !n_alternatives;\n \n+\t  alternative_mask enabled = recog_data.enabled_alternatives;\n \t  for (j = 0; j < n_alternatives; j++, op_alt += n_operands)\n \t    {\n+\t      if (!TEST_BIT (enabled, j))\n+\t\tcontinue;\n \t      if (op_alt[i].anything_ok\n \t\t  || (op_alt[i].matches != -1\n \t\t      && operands_match_p"}, {"sha": "62e3768aea60a7e42d11fb7cda451d33fca3c257", "filename": "gcc/ira-lives.c", "status": "modified", "additions": 27, "deletions": 22, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2e0797aeb67a52d1b71859e054f55d1cd24ec7/gcc%2Fira-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2e0797aeb67a52d1b71859e054f55d1cd24ec7/gcc%2Fira-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-lives.c?ref=5f2e0797aeb67a52d1b71859e054f55d1cd24ec7", "patch": "@@ -641,8 +641,11 @@ check_and_make_def_conflict (int alt, int def, enum reg_class def_cl)\n       /* If there's any alternative that allows USE to match DEF, do not\n \t record a conflict.  If that causes us to create an invalid\n \t instruction due to the earlyclobber, reload must fix it up.  */\n+      alternative_mask enabled = recog_data.enabled_alternatives;\n       for (alt1 = 0; alt1 < recog_data.n_alternatives; alt1++)\n \t{\n+\t  if (!TEST_BIT (enabled, alt1))\n+\t    continue;\n \t  operand_alternative *op_alt1 = &recog_op_alt[alt1 * n_operands];\n \t  if (op_alt1[use].matches == def\n \t      || (use < n_operands - 1\n@@ -688,30 +691,32 @@ make_early_clobber_and_input_conflicts (void)\n \n   int n_alternatives = recog_data.n_alternatives;\n   int n_operands = recog_data.n_operands;\n+  alternative_mask enabled = recog_data.enabled_alternatives;\n   operand_alternative *op_alt = recog_op_alt;\n   for (alt = 0; alt < n_alternatives; alt++, op_alt += n_operands)\n-    for (def = 0; def < n_operands; def++)\n-      {\n-\tdef_cl = NO_REGS;\n-\tif (op_alt[def].earlyclobber)\n-\t  {\n-\t    if (op_alt[def].anything_ok)\n-\t      def_cl = ALL_REGS;\n-\t    else\n-\t      def_cl = op_alt[def].cl;\n-\t    check_and_make_def_conflict (alt, def, def_cl);\n-\t  }\n-\tif ((def_match = op_alt[def].matches) >= 0\n-\t    && (op_alt[def_match].earlyclobber\n-\t\t|| op_alt[def].earlyclobber))\n-\t  {\n-\t    if (op_alt[def_match].anything_ok)\n-\t      def_cl = ALL_REGS;\n-\t    else\n-\t      def_cl = op_alt[def_match].cl;\n-\t    check_and_make_def_conflict (alt, def, def_cl);\n-\t  }\n-      }\n+    if (TEST_BIT (enabled, alt))\n+      for (def = 0; def < n_operands; def++)\n+\t{\n+\t  def_cl = NO_REGS;\n+\t  if (op_alt[def].earlyclobber)\n+\t    {\n+\t      if (op_alt[def].anything_ok)\n+\t\tdef_cl = ALL_REGS;\n+\t      else\n+\t\tdef_cl = op_alt[def].cl;\n+\t      check_and_make_def_conflict (alt, def, def_cl);\n+\t    }\n+\t  if ((def_match = op_alt[def].matches) >= 0\n+\t      && (op_alt[def_match].earlyclobber\n+\t\t  || op_alt[def].earlyclobber))\n+\t    {\n+\t      if (op_alt[def_match].anything_ok)\n+\t\tdef_cl = ALL_REGS;\n+\t      else\n+\t\tdef_cl = op_alt[def_match].cl;\n+\t      check_and_make_def_conflict (alt, def, def_cl);\n+\t    }\n+\t}\n }\n \n /* Mark early clobber hard registers of the current INSN as live (if"}, {"sha": "15e07527ba84c6e044981c31cbe19e9d69f9e31f", "filename": "gcc/recog.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2e0797aeb67a52d1b71859e054f55d1cd24ec7/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2e0797aeb67a52d1b71859e054f55d1cd24ec7/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=5f2e0797aeb67a52d1b71859e054f55d1cd24ec7", "patch": "@@ -2352,12 +2352,6 @@ preprocess_constraints (void)\n \t  op_alt[i].matches = -1;\n \t  op_alt[i].matched = -1;\n \n-\t  if (!TEST_BIT (recog_data.enabled_alternatives, j))\n-\t    {\n-\t      p = skip_alternative (p);\n-\t      continue;\n-\t    }\n-\n \t  if (*p == '\\0' || *p == ',')\n \t    {\n \t      op_alt[i].anything_ok = 1;"}]}