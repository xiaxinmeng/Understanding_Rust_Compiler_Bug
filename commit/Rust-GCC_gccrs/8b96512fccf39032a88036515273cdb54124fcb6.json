{"sha": "8b96512fccf39032a88036515273cdb54124fcb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI5NjUxMmZjY2YzOTAzMmE4ODAzNjUxNTI3M2NkYjU0MTI0ZmNiNg==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2006-03-15T10:50:46Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2006-03-15T10:50:46Z"}, "message": "haifa-sched.c (unlink_other_notes, [...]): Do not handle loop notes.\n\n\t* haifa-sched.c (unlink_other_notes, reemit_notes): Do not handle\n\tloop notes.\n\t* sched-deps.c (sched_analyze_insn, sched_analyze): Ditto.\n\nFrom-SVN: r112082", "tree": {"sha": "780a312b2244b187b4150b3a5172b3ea02c8db81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/780a312b2244b187b4150b3a5172b3ea02c8db81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b96512fccf39032a88036515273cdb54124fcb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b96512fccf39032a88036515273cdb54124fcb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b96512fccf39032a88036515273cdb54124fcb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b96512fccf39032a88036515273cdb54124fcb6/comments", "author": null, "committer": null, "parents": [{"sha": "c0fa4721981cd9c1675141bde3741e6151221dec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0fa4721981cd9c1675141bde3741e6151221dec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0fa4721981cd9c1675141bde3741e6151221dec"}], "stats": {"total": 58, "additions": 12, "deletions": 46}, "files": [{"sha": "48c7e7a68f047b6e56675cabfb9de84faa29c327", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b96512fccf39032a88036515273cdb54124fcb6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b96512fccf39032a88036515273cdb54124fcb6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b96512fccf39032a88036515273cdb54124fcb6", "patch": "@@ -1,3 +1,9 @@\n+2006-03-15  Zdenek Dvorak <dvorakz@suse.cz>\n+\n+\t* haifa-sched.c (unlink_other_notes, reemit_notes): Do not handle\n+\tloop notes.\n+\t* sched-deps.c (sched_analyze_insn, sched_analyze): Ditto.\n+\n 2006-03-15  Andreas Schwab  <schwab@suse.de>\n \n \t* gensupport.c (identify_predicable_attribute): Don't free p_false"}, {"sha": "89e1a18bd51605750d7a1e6c2226d0d3aa3f5859", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b96512fccf39032a88036515273cdb54124fcb6/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b96512fccf39032a88036515273cdb54124fcb6/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=8b96512fccf39032a88036515273cdb54124fcb6", "patch": "@@ -989,9 +989,7 @@ unlink_other_notes (rtx insn, rtx tail)\n \tPREV_INSN (next) = prev;\n \n       /* See sched_analyze to see how these are handled.  */\n-      if (NOTE_LINE_NUMBER (insn) != NOTE_INSN_LOOP_BEG\n-\t  && NOTE_LINE_NUMBER (insn) != NOTE_INSN_LOOP_END\n-\t  && NOTE_LINE_NUMBER (insn) != NOTE_INSN_BASIC_BLOCK\n+      if (NOTE_LINE_NUMBER (insn) != NOTE_INSN_BASIC_BLOCK\n \t  && NOTE_LINE_NUMBER (insn) != NOTE_INSN_EH_REGION_BEG\n \t  && NOTE_LINE_NUMBER (insn) != NOTE_INSN_EH_REGION_END)\n \t{\n@@ -1615,7 +1613,7 @@ move_insn1 (rtx insn, rtx last)\n }\n \n /* Search INSN for REG_SAVE_NOTE note pairs for\n-   NOTE_INSN_{LOOP,EHREGION}_{BEG,END}; and convert them back into\n+   NOTE_INSN_EHREGION_{BEG,END}; and convert them back into\n    NOTEs.  The REG_SAVE_NOTE note following first one is contains the\n    saved value for NOTE_BLOCK_NUMBER which is useful for\n    NOTE_INSN_EH_REGION_{BEG,END} NOTEs.  LAST is the last instruction"}, {"sha": "4fbe5dd2a62dcafc1437680db0c3d3b115832506", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 4, "deletions": 42, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b96512fccf39032a88036515273cdb54124fcb6/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b96512fccf39032a88036515273cdb54124fcb6/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=8b96512fccf39032a88036515273cdb54124fcb6", "patch": "@@ -96,7 +96,7 @@ static void fixup_sched_groups (rtx);\n static void flush_pending_lists (struct deps *, rtx, int, int);\n static void sched_analyze_1 (struct deps *, rtx, rtx);\n static void sched_analyze_2 (struct deps *, rtx, rtx);\n-static void sched_analyze_insn (struct deps *, rtx, rtx, rtx);\n+static void sched_analyze_insn (struct deps *, rtx, rtx);\n \n static rtx sched_get_condition (rtx);\n static int conditions_mutex_p (rtx, rtx);\n@@ -881,7 +881,7 @@ sched_analyze_2 (struct deps *deps, rtx x, rtx insn)\n /* Analyze an INSN with pattern X to find all dependencies.  */\n \n static void\n-sched_analyze_insn (struct deps *deps, rtx x, rtx insn, rtx loop_notes)\n+sched_analyze_insn (struct deps *deps, rtx x, rtx insn)\n {\n   RTX_CODE code = GET_CODE (x);\n   rtx link;\n@@ -1002,28 +1002,6 @@ sched_analyze_insn (struct deps *deps, rtx x, rtx insn, rtx loop_notes)\n \t}\n     }\n \n-  /* If there is a {LOOP,EHREGION}_{BEG,END} note in the middle of a basic\n-     block, then we must be sure that no instructions are scheduled across it.\n-     Otherwise, the reg_n_refs info (which depends on loop_depth) would\n-     become incorrect.  */\n-  if (loop_notes)\n-    {\n-      rtx link;\n-\n-      /* Update loop_notes with any notes from this insn.  */\n-      link = loop_notes;\n-      while (XEXP (link, 1))\n-\t{\n-\t  gcc_assert (INTVAL (XEXP (link, 0)) == NOTE_INSN_LOOP_BEG\n-\t\t      || INTVAL (XEXP (link, 0)) == NOTE_INSN_LOOP_END);\n-\n-\t  reg_pending_barrier = MOVE_BARRIER;\n-\t  link = XEXP (link, 1);\n-\t}\n-      XEXP (link, 1) = REG_NOTES (insn);\n-      REG_NOTES (insn) = loop_notes;\n-    }\n-\n   /* If this instruction can throw an exception, then moving it changes\n      where block boundaries fall.  This is mighty confusing elsewhere.\n      Therefore, prevent such an instruction from being moved.  */\n@@ -1245,7 +1223,6 @@ void\n sched_analyze (struct deps *deps, rtx head, rtx tail)\n {\n   rtx insn;\n-  rtx loop_notes = 0;\n \n   if (current_sched_info->use_cselib)\n     cselib_init (true);\n@@ -1279,8 +1256,7 @@ sched_analyze (struct deps *deps, rtx head, rtx tail)\n \t\tdeps->last_pending_memory_flush\n \t\t  = alloc_INSN_LIST (insn, deps->last_pending_memory_flush);\n \t    }\n-\t  sched_analyze_insn (deps, PATTERN (insn), insn, loop_notes);\n-\t  loop_notes = 0;\n+\t  sched_analyze_insn (deps, PATTERN (insn), insn);\n \t}\n       else if (CALL_P (insn))\n \t{\n@@ -1334,8 +1310,7 @@ sched_analyze (struct deps *deps, rtx head, rtx tail)\n \t  add_dependence_list_and_free (insn, &deps->sched_before_next_call, 1,\n \t\t\t\t\tREG_DEP_ANTI);\n \n-\t  sched_analyze_insn (deps, PATTERN (insn), insn, loop_notes);\n-\t  loop_notes = 0;\n+\t  sched_analyze_insn (deps, PATTERN (insn), insn);\n \n \t  /* In the absence of interprocedural alias analysis, we must flush\n \t     all pending reads and writes, and start new dependencies starting\n@@ -1359,19 +1334,6 @@ sched_analyze (struct deps *deps, rtx head, rtx tail)\n \tgcc_assert (NOTE_LINE_NUMBER (insn) != NOTE_INSN_EH_REGION_BEG\n \t\t    && NOTE_LINE_NUMBER (insn) != NOTE_INSN_EH_REGION_END);\n \n-      /* See comments on reemit_notes as to why we do this.\n-\t ??? Actually, the reemit_notes just say what is done, not why.  */\n-\n-      if (NOTE_P (insn)\n-\t  && (NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_BEG\n-\t      || NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_END))\n-\t{\n-\t  loop_notes = alloc_EXPR_LIST (REG_SAVE_NOTE,\n-\t\t\t\t\tGEN_INT (NOTE_LINE_NUMBER (insn)),\n-\t\t\t\t\tloop_notes);\n-\t  CONST_OR_PURE_CALL_P (loop_notes) = CONST_OR_PURE_CALL_P (insn);\n-\t}\n-\n       if (current_sched_info->use_cselib)\n \tcselib_process_insn (insn);\n "}]}