{"sha": "b5344bf45d1a2c0f3e6cf91177b855db72a9d016", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUzNDRiZjQ1ZDFhMmMwZjNlNmNmOTExNzdiODU1ZGI3MmE5ZDAxNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-09-19T18:21:54Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-09-19T18:21:54Z"}, "message": "mmx.md (*mov<mode>_internal_rex64): Use if_then_else RTX to calculate unit, prefix_rep and prefix_data16 attributes.\n\n\t* config/i386/mmx.md (*mov<mode>_internal_rex64): Use if_then_else RTX\n\tto calculate unit, prefix_rep and prefix_data16 attributes.\n\t(*mov<mode>_internal): Ditto for unit attribute.\n\t(*movv2sf_internal_rex64): Ditto for unit and prefix_rep attributes.\n\t(*movv2sf_internal): Ditto.\n\t* config/i386/sse.md (VI1248_256): Remove mode iterator.\n\t(avx2_eq<mode>3): Use VI_256 instead of VI1248_256.\n\t(*avx2_eq<mode>3): Ditto.\n\t(avx2_gt<mode>3): Ditto.\n\nFrom-SVN: r178982", "tree": {"sha": "fe6b12c1de8bf14c1f53ac2a199388016ae5a5a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe6b12c1de8bf14c1f53ac2a199388016ae5a5a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5344bf45d1a2c0f3e6cf91177b855db72a9d016", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5344bf45d1a2c0f3e6cf91177b855db72a9d016", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5344bf45d1a2c0f3e6cf91177b855db72a9d016", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5344bf45d1a2c0f3e6cf91177b855db72a9d016/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52325f2ca5b70566c41f1bb929c102c014dd74e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52325f2ca5b70566c41f1bb929c102c014dd74e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52325f2ca5b70566c41f1bb929c102c014dd74e1"}], "stats": {"total": 77, "additions": 56, "deletions": 21}, "files": [{"sha": "008099f02c1f41f6cb9d0e25ddc13a919311c052", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5344bf45d1a2c0f3e6cf91177b855db72a9d016/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5344bf45d1a2c0f3e6cf91177b855db72a9d016/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5344bf45d1a2c0f3e6cf91177b855db72a9d016", "patch": "@@ -1,3 +1,15 @@\n+2011-09-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/mmx.md (*mov<mode>_internal_rex64): Use if_then_else RTX\n+\tto calculate unit, prefix_rep and prefix_data16 attributes.\n+\t(*mov<mode>_internal): Ditto for unit attribute.\n+\t(*movv2sf_internal_rex64): Ditto for unit and prefix_rep attributes.\n+\t(*movv2sf_internal): Ditto.\n+\t* config/i386/sse.md (VI1248_256): Remove mode iterator.\n+\t(avx2_eq<mode>3): Use VI_256 instead of VI1248_256.\n+\t(*avx2_eq<mode>3): Ditto.\n+\t(avx2_gt<mode>3): Ditto.\n+\n 2011-09-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (maxmin): New code iterator."}, {"sha": "f092c0f4f85d5a180ca22b3b324b15d58fdb45f7", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 32, "deletions": 8, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5344bf45d1a2c0f3e6cf91177b855db72a9d016/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5344bf45d1a2c0f3e6cf91177b855db72a9d016/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=b5344bf45d1a2c0f3e6cf91177b855db72a9d016", "patch": "@@ -98,9 +98,18 @@\n \t      (const_string \"sselog1\")\n \t   ]\n \t   (const_string \"ssemov\")))\n-   (set_attr \"unit\" \"*,*,*,*,*,*,mmx,mmx,*,*,*,*,*\")\n-   (set_attr \"prefix_rep\" \"*,*,*,*,*,*,1,1,*,1,*,*,*\")\n-   (set_attr \"prefix_data16\" \"*,*,*,*,*,*,*,*,*,*,1,1,1\")\n+   (set (attr \"unit\")\n+     (if_then_else (eq_attr \"alternative\" \"6,7\")\n+       (const_string \"mmx\")\n+       (const_string \"*\")))\n+   (set (attr \"prefix_rep\")\n+     (if_then_else (eq_attr \"alternative\" \"6,7,9\")\n+       (const_string \"1\")\n+       (const_string \"*\")))\n+   (set (attr \"prefix_data16\")\n+     (if_then_else (eq_attr \"alternative\" \"10,11,12\")\n+       (const_string \"1\")\n+       (const_string \"*\")))\n    (set (attr \"prefix_rex\")\n      (if_then_else (eq_attr \"alternative\" \"9,10\")\n        (symbol_ref \"x86_extended_reg_mentioned_p (insn)\")\n@@ -154,7 +163,10 @@\n \t      (const_string \"multi\")\n \t   ]\n \t   (const_string \"ssemov\")))\n-   (set_attr \"unit\" \"*,*,*,*,mmx,mmx,*,*,*,*,*,*,*,*,*\")\n+   (set (attr \"unit\")\n+     (if_then_else (eq_attr \"alternative\" \"4,5\")\n+       (const_string \"mmx\")\n+       (const_string \"*\")))\n    (set (attr \"prefix_rep\")\n      (if_then_else\n        (ior (eq_attr \"alternative\" \"4,5\")\n@@ -219,8 +231,14 @@\n \t      (const_string \"sselog1\")\n \t   ]\n \t   (const_string \"ssemov\")))\n-   (set_attr \"unit\" \"*,*,*,*,*,*,mmx,mmx,*,*,*,*,*,*\")\n-   (set_attr \"prefix_rep\" \"*,*,*,*,*,*,1,1,*,*,*,*,*,*\")\n+   (set (attr \"unit\")\n+     (if_then_else (eq_attr \"alternative\" \"6,7\")\n+       (const_string \"mmx\")\n+       (const_string \"*\")))\n+   (set (attr \"prefix_rep\")\n+     (if_then_else (eq_attr \"alternative\" \"6,7\")\n+       (const_string \"1\")\n+       (const_string \"*\")))\n    (set (attr \"length_vex\")\n      (if_then_else\n        (and (eq_attr \"alternative\" \"12,13\")\n@@ -270,8 +288,14 @@\n \t      (const_string \"multi\")\n \t   ]\n \t   (const_string \"ssemov\")))\n-   (set_attr \"unit\" \"*,*,*,*,mmx,mmx,*,*,*,*,*,*\")\n-   (set_attr \"prefix_rep\" \"*,*,*,*,1,1,*,*,*,*,*,*\")\n+   (set (attr \"unit\")\n+     (if_then_else (eq_attr \"alternative\" \"4,5\")\n+       (const_string \"mmx\")\n+       (const_string \"*\")))\n+   (set (attr \"prefix_rep\")\n+     (if_then_else (eq_attr \"alternative\" \"4,5\")\n+       (const_string \"1\")\n+       (const_string \"*\")))\n    (set (attr \"prefix\")\n      (if_then_else (eq_attr \"alternative\" \"6,7,8,9\")\n        (const_string \"maybe_vex\")"}, {"sha": "5e1701c858b1ef3dacc71c01ed26e5b6b9991cfb", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5344bf45d1a2c0f3e6cf91177b855db72a9d016/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5344bf45d1a2c0f3e6cf91177b855db72a9d016/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b5344bf45d1a2c0f3e6cf91177b855db72a9d016", "patch": "@@ -191,7 +191,6 @@\n \n ;; Random 256bit vector integer mode combinations\n (define_mode_iterator VI124_256 [V32QI V16HI V8SI])\n-(define_mode_iterator VI1248_256 [V32QI V16HI V8SI V4DI])\n (define_mode_iterator VI248_256 [V16HI V8SI V4DI])\n \n ;; Int-float size matches\n@@ -6036,18 +6035,18 @@\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n (define_expand \"avx2_eq<mode>3\"\n-  [(set (match_operand:VI1248_256 0 \"register_operand\" \"\")\n-\t(eq:VI1248_256\n-\t  (match_operand:VI1248_256 1 \"nonimmediate_operand\" \"\")\n-\t  (match_operand:VI1248_256 2 \"nonimmediate_operand\" \"\")))]\n+  [(set (match_operand:VI_256 0 \"register_operand\" \"\")\n+\t(eq:VI_256\n+\t  (match_operand:VI_256 1 \"nonimmediate_operand\" \"\")\n+\t  (match_operand:VI_256 2 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_AVX2\"\n   \"ix86_fixup_binary_operands_no_copy (EQ, <MODE>mode, operands);\")\n \n (define_insn \"*avx2_eq<mode>3\"\n-  [(set (match_operand:VI1248_256 0 \"register_operand\" \"=x\")\n-\t(eq:VI1248_256\n-\t  (match_operand:VI1248_256 1 \"nonimmediate_operand\" \"%x\")\n-\t  (match_operand:VI1248_256 2 \"nonimmediate_operand\" \"xm\")))]\n+  [(set (match_operand:VI_256 0 \"register_operand\" \"=x\")\n+\t(eq:VI_256\n+\t  (match_operand:VI_256 1 \"nonimmediate_operand\" \"%x\")\n+\t  (match_operand:VI_256 2 \"nonimmediate_operand\" \"xm\")))]\n   \"TARGET_AVX2 && ix86_binary_operator_ok (EQ, <MODE>mode, operands)\"\n   \"vpcmpeq<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"ssecmp\")\n@@ -6118,10 +6117,10 @@\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"avx2_gt<mode>3\"\n-  [(set (match_operand:VI1248_256 0 \"register_operand\" \"=x\")\n-\t(gt:VI1248_256\n-\t  (match_operand:VI1248_256 1 \"register_operand\" \"x\")\n-\t  (match_operand:VI1248_256 2 \"nonimmediate_operand\" \"xm\")))]\n+  [(set (match_operand:VI_256 0 \"register_operand\" \"=x\")\n+\t(gt:VI_256\n+\t  (match_operand:VI_256 1 \"register_operand\" \"x\")\n+\t  (match_operand:VI_256 2 \"nonimmediate_operand\" \"xm\")))]\n   \"TARGET_AVX2\"\n   \"vpcmpgt<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"ssecmp\")"}]}