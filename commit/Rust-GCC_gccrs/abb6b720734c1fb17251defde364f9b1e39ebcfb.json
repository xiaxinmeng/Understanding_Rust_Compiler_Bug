{"sha": "abb6b720734c1fb17251defde364f9b1e39ebcfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJiNmI3MjA3MzRjMWZiMTcyNTFkZWZkZTM2NGY5YjFlMzllYmNmYg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1994-01-20T06:08:37Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1994-01-20T06:08:37Z"}, "message": "pa.h (ASM_OUTPUT_SOURCE_LINE): Make the first source line stab for each procedure special to avoid the need...\n\n\t* pa.h (ASM_OUTPUT_SOURCE_LINE): Make the first source\n\tline stab for each procedure special to avoid the need\n\tfor nasty hacks in GAS.\n\nFrom-SVN: r6402", "tree": {"sha": "1a6814a544f30b40fcdda46bca7df606a54e2148", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a6814a544f30b40fcdda46bca7df606a54e2148"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abb6b720734c1fb17251defde364f9b1e39ebcfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb6b720734c1fb17251defde364f9b1e39ebcfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abb6b720734c1fb17251defde364f9b1e39ebcfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb6b720734c1fb17251defde364f9b1e39ebcfb/comments", "author": null, "committer": null, "parents": [{"sha": "ac7198efaf94ea5885d40d7b93fe404603e4a429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac7198efaf94ea5885d40d7b93fe404603e4a429", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac7198efaf94ea5885d40d7b93fe404603e4a429"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "b70cf1573fea130ef127e41f8459ad7075b46eab", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb6b720734c1fb17251defde364f9b1e39ebcfb/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb6b720734c1fb17251defde364f9b1e39ebcfb/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=abb6b720734c1fb17251defde364f9b1e39ebcfb", "patch": "@@ -105,14 +105,22 @@ extern int target_flags;\n    compatable.  */\n #define DBX_BLOCKS_FUNCTION_RELATIVE 1\n \n-/* Likewise for linenos.  */\n+/* Likewise for linenos. \n+\n+   We make the first line stab special to avoid adding several\n+   gross hacks to GAS.  */\n #undef  ASM_OUTPUT_SOURCE_LINE\n #define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\\\n   { static int sym_lineno = 1;\t\t\t\t\\\n-    fprintf (file, \"\\t.stabn 68,0,%d,L$M%d-%s\\nL$M%d:\\n\",\t\\\n-\t     line, sym_lineno,\t\t\t\t\\\n-\t     XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0) + 1, \\\n-\t     sym_lineno);\t\t\t\t\\\n+    static tree last_function_decl = NULL;\t\t\\\n+    if (current_function_decl == last_function_decl)\t\\\n+      fprintf (file, \"\\t.stabn 68,0,%d,L$M%d-%s\\nL$M%d:\\n\",\t\\\n+\t       line, sym_lineno,\t\t\t\\\n+\t       XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0) + 1, \\\n+\t       sym_lineno);\t\t\t\t\\\n+    else\t\t\t\t\t\t\\\n+      fprintf (file, \"\\t.stabn 68,0,%d,0\\n\", line);\t\\\n+    last_function_decl = current_function_decl;\t\t\\\n     sym_lineno += 1; }\n \n /* But, to make this work, we have to output the stabs for the function"}]}