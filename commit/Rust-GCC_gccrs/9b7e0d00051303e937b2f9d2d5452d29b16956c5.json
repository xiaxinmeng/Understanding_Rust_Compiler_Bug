{"sha": "9b7e0d00051303e937b2f9d2d5452d29b16956c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI3ZTBkMDAwNTEzMDNlOTM3YjJmOWQyZDU0NTJkMjliMTY5NTZjNQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-03-31T20:15:43Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-03-31T20:15:43Z"}, "message": "[multiple changes]\n\n\n2001-03-31  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* configure.target: Remove duplicate aix entry.\n\n2001-03-30  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/ext/stl_bvector.h: Move to...\n\t* include/bits/stl_vector.h: ...here.\n\t* include/ext/bvector: Move to...\n\t* include/backward/bvector.h: ...here.\n\t* include/bits/std_vector.h: Change stl_bvector include.\n\t* include/bits/std_queue.h: Remove bvector include.\n\t* include/ext/tree: Insert using rb_tree, move to...\n\t* include/backward/tree.h: ...here.\n\t* include/backward/hash_map.h: Include ext/hash_map.\n\t* include/backward/hash_set.h: Include ext/hash_set.\n\t* include/backward/queue.h: New file.\n\t* include/backward/stack.h: Edit.\n\t* include/backward/algo.h: Same.\n\t* include/backward/algobase.h: Same.\n\t* include/backward/alloc.h: Same.\n\t* include/backward/function.h: Same.\n\t* include/backward/iomanip.h: Same.\n\t* include/backward/istream.h: Same.\n\t* include/backward/iterator.h: Same.\n\t* include/backward/list.h: Same.\n\t* include/backward/map.h: Same.\n\t* include/backward/multimap.h: Same.\n\t* include/backward/multiset.h: Same.\n\t* include/backward/ostream.h: Same.\n\t* include/backward/pair.h: Same\n\t* include/backward/rope.h: Same.\n\t* include/backward/set.h: Same.\n\t* include/backward/stream.h: Same.\n\t* include/backward/strstream.h: Same.\n\t* include/backward/tempbuf.h: Same.\n\t* src/Makefile.am (ext_headers): Edit.\n\t* src/Makefile.in: Regenerate.\n\t* testsuite/ext/headers.cc (main): Fix.\n\t* mkcheck.in: Fix.\n\nFrom-SVN: r40979", "tree": {"sha": "77e01f102ddc14743b6e217df82a9b4ef0e0cbb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77e01f102ddc14743b6e217df82a9b4ef0e0cbb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b7e0d00051303e937b2f9d2d5452d29b16956c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7e0d00051303e937b2f9d2d5452d29b16956c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b7e0d00051303e937b2f9d2d5452d29b16956c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7e0d00051303e937b2f9d2d5452d29b16956c5/comments", "author": null, "committer": null, "parents": [{"sha": "cc56c744ee7845abff3f9be366c09616cdbb6f83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc56c744ee7845abff3f9be366c09616cdbb6f83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc56c744ee7845abff3f9be366c09616cdbb6f83"}], "stats": {"total": 316, "additions": 131, "deletions": 185}, "files": [{"sha": "395ef5bbb125f856c4119deb472a3ea2cc203369", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -1,3 +1,44 @@\n+2001-03-31  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* configure.target: Remove duplicate aix entry.\n+\n+2001-03-30  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/ext/stl_bvector.h: Move to...\n+\t* include/bits/stl_vector.h: ...here.\n+\t* include/ext/bvector: Move to...\n+\t* include/backward/bvector.h: ...here.\n+\t* include/bits/std_vector.h: Change stl_bvector include.\n+\t* include/bits/std_queue.h: Remove bvector include.\n+\t* include/ext/tree: Insert using rb_tree, move to...\n+\t* include/backward/tree.h: ...here.\n+\t* include/backward/hash_map.h: Include ext/hash_map.\n+\t* include/backward/hash_set.h: Include ext/hash_set.\n+\t* include/backward/queue.h: New file.\n+\t* include/backward/stack.h: Edit.\n+\t* include/backward/algo.h: Same.\n+\t* include/backward/algobase.h: Same.\n+\t* include/backward/alloc.h: Same.\n+\t* include/backward/function.h: Same.\n+\t* include/backward/iomanip.h: Same.\n+\t* include/backward/istream.h: Same.\n+\t* include/backward/iterator.h: Same.\n+\t* include/backward/list.h: Same.\n+\t* include/backward/map.h: Same.\n+\t* include/backward/multimap.h: Same.\n+\t* include/backward/multiset.h: Same.\n+\t* include/backward/ostream.h: Same.\n+\t* include/backward/pair.h: Same\n+\t* include/backward/rope.h: Same.\n+\t* include/backward/set.h: Same.\n+\t* include/backward/stream.h: Same.\n+\t* include/backward/strstream.h: Same.\n+\t* include/backward/tempbuf.h: Same.\n+\t* src/Makefile.am (ext_headers): Edit.\n+\t* src/Makefile.in: Regenerate.\n+\t* testsuite/ext/headers.cc (main): Fix.\n+\t* mkcheck.in: Fix.\n+\t\n 2001-03-30  Phil Edwards  <pme@sources.redhat.com>\n \n \t* tests_flags.in (LIBS):  Pass correct path for installed testing."}, {"sha": "0fda72d1000185e8fdd4bed2336199666d196bd8", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -69,9 +69,6 @@ case \"${target_os}\" in\n         ;;\n     esac\n     ;;\n-  aix*)\n-    os_include_dir=\"config/os/aix\"\n-    ;;\n   bsd* | freebsd* )\n     os_include_dir=\"config/os/bsd/freebsd\"\n     ;;"}, {"sha": "f580dcf22dc680301e7036b52eda715a4cb5eb14", "filename": "libstdc++-v3/include/backward/algo.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falgo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falgo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falgo.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -29,6 +29,7 @@\n \n #include \"algobase.h\"\n #include \"tempbuf.h\"\n+#include \"iterator.h\"\n #include <bits/stl_algo.h>\n #include <bits/stl_numeric.h>\n "}, {"sha": "b9189559e3b3091d2eb5ec54934aaea89e1a03c5", "filename": "libstdc++-v3/include/backward/algobase.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falgobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falgobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falgobase.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -26,18 +26,10 @@\n #ifndef _CPP_BACKWARD_ALGOBASE_H\n #define _CPP_BACKWARD_ALGOBASE_H 1\n \n-#ifndef _CPP_BACKWARD_PAIR_H\n #include \"pair.h\"\n-#endif\n-#ifndef _CPP_BACKWARD_ITERATOR_H\n #include \"iterator.h\"\n-#endif\n-#ifndef _CPP_BITS_STL__ALGOBASE_H\n #include <bits/stl_algobase.h>\n-#endif\n-#ifndef _CPP_BITS_STL_UNINITIALIZED_H\n #include <bits/stl_uninitialized.h>\n-#endif\n \n // Names from stl_algobase.h\n using std::iter_swap; "}, {"sha": "3997d14ab15301f28e0e69ad15bf38029ebe2250", "filename": "libstdc++-v3/include/backward/alloc.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falloc.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -15,9 +15,7 @@\n #define _CPP_BACKWARD_ALLOC_H 1\n \n #include <bits/c++config.h>\n-#ifndef _CPP_BITS_STL_ALLOC_H\n #include <bits/stl_alloc.h>\n-#endif\n \n using std::__malloc_alloc_template; \n using std::malloc_alloc; "}, {"sha": "48a713ff3962ccc9d1871669e16c253767555405", "filename": "libstdc++-v3/include/backward/bvector.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fbvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fbvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fbvector.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -24,16 +24,15 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-#ifndef _CPP_BACKWARD_BVECTOR_H\n-#define _CPP_BACKWARD_BVECTOR_H 1\n+#ifndef __SGI_STL_BVECTOR_H\n+#define __SGI_STL_BVECTOR_H\n \n-#include \"vector.h\"\n \n-#include <ext/stl_bvector.h>\n+#include <bits/std_vector.h>\n \n using std::bit_vector;\n \n-#endif /* _CPP_BACKWARD_BVECTOR_H */\n+#endif /* __SGI_STL_BVECTOR_H */\n \n // Local Variables:\n // mode:C++"}, {"sha": "747135eac610d836b629cb3f11d47dedd1b1cfe4", "filename": "libstdc++-v3/include/backward/function.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Ffunction.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -29,9 +29,7 @@\n \n #include <bits/c++config.h>\n #include <stddef.h>\n-#ifndef _CPP_BITS_STL_FUNCTION_H\n #include <bits/stl_function.h>\n-#endif\n \n // Names from stl_function.h\n using std::unary_function; "}, {"sha": "fd8d823cb0050a44a99732d89b5bf3668497618a", "filename": "libstdc++-v3/include/backward/hash_map.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fhash_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fhash_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fhash_map.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -27,12 +27,8 @@\n #ifndef _CPP_BACKWARD_HASH_MAP_H\n #define _CPP_BACKWARD_HASH_MAP_H 1\n \n-#ifndef _CPP_BITS_STL_HASHTABLE_H\n-#include <bits/stl_hashtable.h>\n-#endif \n-\n #include \"algobase.h\"\n-#include <bits/stl_hash_map.h>\n+#include <ext/hash_map>\n \n using std::hash;\n using std::hashtable;"}, {"sha": "9458910a5f9da0b757ec7552cccd80fea9d87f89", "filename": "libstdc++-v3/include/backward/hash_set.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fhash_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fhash_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fhash_set.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -27,16 +27,13 @@\n #ifndef _CPP_BACKWARD_HASH_SET_H\n #define _CPP_BACKWARD_HASH_SET_H 1\n \n-#ifndef _CPP_BITS_STL_HASHTABLE_H\n-#include <bits/stl_hashtable.h>\n-#endif \n-\n #include \"algobase.h\"\n-#include <bits/stl_hash_set.h>\n+#include <ext/hash_set>\n \n using std::hash;\n using std::hashtable;\n using std::hash_set;\n using std::hash_multiset;\n \n #endif /* _CPP_BACKWARD_HASH_SET_H */\n+"}, {"sha": "10cd3ba9fe0ae8b77dfe4db4bd82e6dba0bf556b", "filename": "libstdc++-v3/include/backward/iomanip.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fiomanip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fiomanip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fiomanip.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -28,7 +28,7 @@\n #ifndef _CPP_BACKWARD_IOMANIP_H\n #define _CPP_BACKWARD_IOMANIP_H 1\n \n-#include <iostream.h>\n+#include \"iostream.h\"\n #include <bits/std_iomanip.h>\n \n // These are from <ios> as per [27.4]."}, {"sha": "45344796d70fe934d9cfdc5893c24da0788a41ba", "filename": "libstdc++-v3/include/backward/istream.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fistream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fistream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fistream.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -28,7 +28,7 @@\n #ifndef _CPP_BACKWARD_ISTREAM_H\n #define _CPP_BACKWARD_ISTREAM_H 1\n \n-#include <iostream.h>\n+#include \"iostream.h\"\n \n #endif\n "}, {"sha": "d285160ca46907a931a78fc908c1ed72f8ed370c", "filename": "libstdc++-v3/include/backward/iterator.h", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fiterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fiterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fiterator.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -27,26 +27,15 @@\n #ifndef _CPP_BACKWARD_ITERATOR_H\n #define _CPP_BACKWARD_ITERATOR_H 1\n \n-#ifndef _CPP_BACKWARD_FUNCTION_H\n #include \"function.h\"\n-#endif\n #include <stddef.h>\n #include \"iostream.h\"\n-#ifndef _CPP_BITS_STL_ITERATOR_H\n-#include <bits/stl_iterator.h>\n-#endif\n-#ifndef _CPP_BITS_TYPE_TRAITS_H\n-#include <bits/type_traits.h>\n-#endif\n-#ifndef _CPP_BITS_STL_CONSTRUCT_H\n+#include \"iterator.h\"\n+\n #include <bits/stl_construct.h>\n-#endif\n-#ifndef _CPP_BITS_STL_RAW_STORAGE_ITERATOR_H\n #include <bits/stl_raw_storage_iter.h>\n-#endif\n \n // Names from stl_iterator.h\n-\n using std::input_iterator_tag;\n using std::output_iterator_tag;\n using std::forward_iterator_tag;"}, {"sha": "5870ee0ed7fbb9909ae5ae42ab6efb19538e1011", "filename": "libstdc++-v3/include/backward/list.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Flist.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Flist.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Flist.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -27,7 +27,7 @@\n #ifndef _CPP_BACKWARD_LIST_H\n #define _CPP_BACKWARD_LIST_H 1\n \n-#include <bits/stl_algobase.h>\n+#include \"algobase.h\"\n #include \"alloc.h\"\n #include <bits/std_list.h>\n "}, {"sha": "e9058c18220777486d971dbf0c12977896db4f30", "filename": "libstdc++-v3/include/backward/map.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fmap.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -28,7 +28,7 @@\n #define _CPP_BACKWARD_MAP_H 1\n \n #include \"tree.h\"\n-#include <bits/stl_map.h>\n+#include <bits/std_map.h>\n \n using std::map;\n "}, {"sha": "04db0067497f31176c15da6af5544119d5d8b647", "filename": "libstdc++-v3/include/backward/multimap.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fmultimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fmultimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fmultimap.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -28,7 +28,7 @@\n #define _CPP_BACKWARD_MULTIMAP_H 1\n \n #include \"tree.h\"\n-#include <bits/stl_multimap.h>\n+#include <bits/std_map.h>\n \n using std::multimap;\n "}, {"sha": "d78e6f8059be2524a7a2a964b1a4ac86796d9e99", "filename": "libstdc++-v3/include/backward/multiset.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fmultiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fmultiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fmultiset.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -28,7 +28,7 @@\n #define _CPP_BACKWARD_MULTISET_H 1\n \n #include \"tree.h\"\n-#include <bits/stl_multiset.h>\n+#include <bits/std_set.h>\n \n using std::multiset;\n "}, {"sha": "53a983c3d88edcac715276e222f7c4dc92278834", "filename": "libstdc++-v3/include/backward/ostream.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fostream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fostream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fostream.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -28,7 +28,7 @@\n #ifndef _CPP_BACKWARD_OSTREAM_H\n #define _CPP_BACKWARD_OSTREAM_H 1\n \n-#include <iostream.h>\n+#include \"iostream.h\"\n \n #endif \n "}, {"sha": "0c6995873499490822a71060d3a8c8f0d68870c7", "filename": "libstdc++-v3/include/backward/pair.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fpair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fpair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fpair.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -28,9 +28,7 @@\n #define _CPP_BACKWARD_PAIR_H 1\n \n #include <bits/c++config.h>\n-#ifndef _CPP_BITS_STL_PAIR_H\n #include <bits/stl_pair.h>\n-#endif\n \n using std::pair;\n using std::make_pair;"}, {"sha": "f6a4b1b509f3fa8b8c1c6819b94e7df681bf7b6c", "filename": "libstdc++-v3/include/backward/queue.h", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fqueue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fqueue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fqueue.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -0,0 +1,40 @@\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#ifndef _CPP_BACKWARD_QUEUE_H\n+#define _CPP_BACKWARD_QUEUE_H 1\n+\n+#include <bits/std_queue.h>\n+\n+using std::queue;\n+using std::priority_queue;\n+\n+#endif \n+\n+// Local Variables:\n+// mode:C++\n+// End:"}, {"sha": "6dafb1697a6b3173288b09cc4127487c57454bb6", "filename": "libstdc++-v3/include/backward/rope.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Frope.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Frope.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Frope.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -15,7 +15,7 @@\n #define _CPP_BACKWARD_ROPE_H 1\n \n #include \"hashtable.h\"   \n-#include <ext/stl_rope.h>\n+#include <ext/rope>\n \n using std::char_producer; \n using std::sequence_buffer; "}, {"sha": "7822bea10c2fbd873542296862fb9278d5dc6307", "filename": "libstdc++-v3/include/backward/set.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fset.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -28,7 +28,7 @@\n #define _CPP_BACKWARD_SET_H 1\n \n #include \"tree.h\"\n-#include <bits/stl_set.h>\n+#include <bits/std_set.h>\n \n using std::set;\n "}, {"sha": "a9a800aabe0a588e8ff7c6a1ff1c5bdcd0112b67", "filename": "libstdc++-v3/include/backward/stack.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstack.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -30,12 +30,10 @@\n #include \"vector.h\"\n #include \"deque.h\"\n #include \"heap.h\"\n-#include <bits/stl_stack.h>\n-#include <bits/stl_queue.h>\n+#include \"queue.h\"\n+#include <bits/std_stack.h>\n \n using std::stack;\n-using std::queue;\n-using std::priority_queue;\n \n #endif /* _CPP_BACKWARD_STACK_H */\n "}, {"sha": "b22d686fb9e58689a488d174e4f028971a21ed1b", "filename": "libstdc++-v3/include/backward/stream.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstream.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -28,7 +28,7 @@\n #ifndef _CPP_BACKWARD_STREAM_H\n #define _CPP_BACKWARD_STREAM_H 1\n \n-#include <iostream.h>\n+#include \"iostream.h\"\n \n #endif \n "}, {"sha": "82802d2f86a843b4615f2701582936b2e140d5f5", "filename": "libstdc++-v3/include/backward/strstream.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstrstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstrstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstrstream.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -30,7 +30,7 @@\n #ifndef _CPP_BACKWARD_STRSTREAM_H\n #define _CPP_BACKWARD_STRSTREAM_H 1\n \n-#include <strstream>\n+#include \"strstream\"\n \n using std::strstreambuf;\n using std::istrstream;"}, {"sha": "425adf10cb661a5a7d4ca4f5153de2380daff151", "filename": "libstdc++-v3/include/backward/tempbuf.h", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Ftempbuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Ftempbuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Ftempbuf.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -27,29 +27,19 @@\n #ifndef _CPP_BACKWARD_TEMPBUF_H\n #define _CPP_BACKWARD_TEMPBUF_H 1\n \n-#ifndef _CPP_BACKWARD_PAIR_H\n #include \"pair.h\"\n-#endif\n-#include <iterator.h>\n+#include \"iterator.h\"\n #include <limits.h>\n #include <stddef.h> \n #include <stdlib.h> \n-#ifndef _CPP_BITS_TYPE_TRAITS_H\n #include <bits/type_traits.h>  \n-#endif\n-#ifndef _CPP_BITS_STL_CONSTRUCT_H\n #include <bits/stl_construct.h>\n-#endif\n-#ifndef _CPP_BITS_STL_UNINITIALIZED_H\n #include <bits/stl_uninitialized.h>\n-#endif\n-#ifndef _CPP_BITS_STL_TEMPBUF_H\n #include <bits/stl_tempbuf.h>\n-#endif\n \n using std::get_temporary_buffer;\n using std::return_temporary_buffer;\n-using std::_Temporary_buffer;\n+using std::temporary_buffer;\n \n #endif /* _CPP_BACKWARD_TEMPBUF_H */\n "}, {"sha": "728544b62f00f7e8e241b39a4f879e4f3c7dceaa", "filename": "libstdc++-v3/include/backward/tree.h", "status": "modified", "additions": 5, "deletions": 23, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Ftree.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -1,6 +1,6 @@\n+\n /*\n- *\n- * Copyright (c) 1996,1997\n+ * Copyright (c) 1997\n  * Silicon Graphics Computer Systems, Inc.\n  *\n  * Permission to use, copy, modify, distribute and sell this software\n@@ -11,34 +11,16 @@\n  * representations about the suitability of this software for any\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  *\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n  */\n \n-#ifndef _CPP_BACKWARD_TREE_H\n-#define _CPP_BACKWARD_TREE_H 1\n+#ifndef _CPP_EXT_TREE\n+#define _CPP_EXT_TREE 1\n \n-#ifndef _CPP_BITS_STL_TREE_H\n #include <bits/stl_tree.h>\n-#endif\n-#include \"algobase.h\" \n-#include \"alloc.h\"\n \n using std::rb_tree;\n \n-#endif /* _CPP_BACKWARD_TREE_H */\n-\n+#endif \n // Local Variables:\n // mode:C++\n // End:"}, {"sha": "d7264793643e4b218ec33343113b15a1b1f3575b", "filename": "libstdc++-v3/include/bits/std_queue.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_queue.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -34,7 +34,6 @@\n #include <bits/stl_construct.h>\n #include <bits/stl_uninitialized.h>\n #include <bits/stl_vector.h>\n-#include <ext/stl_bvector.h>\n #include <bits/stl_heap.h>\n #include <bits/stl_deque.h>\n #include <bits/stl_function.h>"}, {"sha": "9b5ba58774a6a4338c373da588d5e6381b95d15b", "filename": "libstdc++-v3/include/bits/std_vector.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_vector.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -35,7 +35,7 @@\n #include <bits/stl_construct.h>\n #include <bits/stl_uninitialized.h>\n #include <bits/stl_vector.h>\n-#include <ext/stl_bvector.h> \n+#include <bits/stl_bvector.h> \n \n #endif /* _CPP_VECTOR */\n "}, {"sha": "7b768a4c3ed7e28d151046fdd1c15b23bdae3ea6", "filename": "libstdc++-v3/include/bits/stl_bvector.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "previous_filename": "libstdc++-v3/include/ext/stl_bvector.h"}, {"sha": "d40fe50a5b509daeb217a5eace01b2c29b3e8935", "filename": "libstdc++-v3/include/ext/bvector", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc56c744ee7845abff3f9be366c09616cdbb6f83/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc56c744ee7845abff3f9be366c09616cdbb6f83/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbvector?ref=cc56c744ee7845abff3f9be366c09616cdbb6f83", "patch": "@@ -1,42 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_BVECTOR_H\n-#define __SGI_STL_BVECTOR_H\n-\n-\n-#include <bits/std_vector.h>\n-#include <ext/stl_bvector.h>\n-\n-using std::bit_vector;\n-\n-#endif /* __SGI_STL_BVECTOR_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:\n-\n-"}, {"sha": "f6faf976e34fe58d324d1d83cb86962a814722c8", "filename": "libstdc++-v3/include/ext/tree", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc56c744ee7845abff3f9be366c09616cdbb6f83/libstdc%2B%2B-v3%2Finclude%2Fext%2Ftree", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc56c744ee7845abff3f9be366c09616cdbb6f83/libstdc%2B%2B-v3%2Finclude%2Fext%2Ftree", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Ftree?ref=cc56c744ee7845abff3f9be366c09616cdbb6f83", "patch": "@@ -1,23 +0,0 @@\n-\n-/*\n- * Copyright (c) 1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- */\n-\n-#ifndef _CPP_EXT_TREE\n-#define _CPP_EXT_TREE 1\n-#include <bits/stl_tree.h>\n-#endif \n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "0d59d8b137a430479ec93dc9e38654d21d464b22", "filename": "libstdc++-v3/mkcheck.in", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Fmkcheck.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Fmkcheck.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmkcheck.in?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -320,9 +320,7 @@ test_file()\n     # time_t's (no more overhead than grabbing two date(1)'s).\n     compiler_invocation=\"$LTCXX $S_FLAG $SRC_NAME -o $EXENAME\"\n     COMP_TIME_START=$($TIMER_COMMAND)\n-    echo $SRC_NAME >> compile.out\n     $compiler_invocation >> compile.out 2>&1\n-    echo \"\" >> compile.out\n     COMP_TIME_END=$($TIMER_COMMAND)\n \n     if [ $COMP_TIME_START -lt $COMP_TIME_END ]; then\n@@ -332,7 +330,7 @@ test_file()\n     fi\n \n     if [ -f $EXENAME ]; then\n-#        rm compile.out\n+        rm compile.out\n         size_command TEXT\n         size_command DATA\n         size_command SIZE\n@@ -370,8 +368,8 @@ test_file()\n     else\n         # the file did not compile/link.\n         printf \"\\n\" >> $LOG_FILE\n-#        `cat compile.out >> $LOG_FILE` \n-#        rm compile.out\n+        `cat compile.out >> $LOG_FILE` \n+        rm compile.out\n         RESULT=\"-b\"\n         TEXT=\"0\"\n         DATA=\"0\""}, {"sha": "59ff54205256501f55f2e85172032de5221dff40", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -21,7 +21,7 @@\n ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n ## USA.\n \n-## $Id: Makefile.am,v 1.78 2001/03/25 00:16:56 pme Exp $\n+## $Id: Makefile.am,v 1.79 2001/03/28 01:19:42 aoliva Exp $\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n@@ -94,7 +94,7 @@ base_headers = \\\n \tbits/stl_relops.h bits/stl_set.h \\\n \tbits/stl_stack.h bits/stl_tempbuf.h \\\n \tbits/stl_tree.h bits/stl_uninitialized.h bits/stl_vector.h \\\n-\tbits/type_traits.h bits/std_algorithm.h \\\n+\tbits/stl_bvector.h bits/type_traits.h bits/std_algorithm.h \\\n \tbits/concept_checks.h bits/container_concepts.h \\\n \tbits/sequence_concepts.h bits/stl_construct.h\n \n@@ -104,18 +104,18 @@ backward_headers = \\\n \tbackward/algo.h backward/algobase.h backward/alloc.h \\\n \tbackward/bvector.h backward/defalloc.h backward/deque.h \\\n \tbackward/function.h backward/hash_map.h backward/hash_set.h \\\n-\tbackward/hashtable.h backward/heap.h backward/iterator.h \\\n-\tbackward/list.h backward/map.h backward/multimap.h backward/new.h \\\n-\tbackward/multiset.h backward/pair.h backward/iostream.h \\\n-\tbackward/rope.h backward/set.h backward/slist.h backward/stack.h \\\n-\tbackward/tempbuf.h backward/tree.h backward/vector.h \\\n-\tbackward/fstream.h backward/strstream.h backward/strstream\n+\tbackward/hashtable.h backward/heap.h backward/iostream.h \\\n+\tbackward/iterator.h backward/list.h backward/map.h \\\n+\tbackward/multimap.h backward/new.h backward/multiset.h \\\n+\tbackward/pair.h backward/queue.h backward/rope.h backward/set.h \\\n+\tbackward/slist.h backward/stack.h backward/tempbuf.h backward/tree.h \\\n+\tbackward/vector.h backward/fstream.h backward/strstream.h \\\n+\tbackward/strstream\n \n ext_headers = \\\n-\text/ropeimpl.h ext/stl_rope.h \\\n-\text/stl_bvector.h ext/stl_hashtable.h ext/stl_hash_fun.h \\\n-\text/hash_map ext/hash_set ext/rope ext/slist \\\n-\text/tree ext/bvector \n+\text/rope ext/ropeimpl.h ext/stl_rope.h \\\n+\text/slist ext/hash_map ext/hash_set \\\n+\text/stl_hashtable.h ext/stl_hash_fun.h \n \n c_base_headers = \\\n \tbits/std_cassert.h bits/std_cctype.h bits/std_cerrno.h \\"}, {"sha": "4dc4de842c94236582264b71f7cda946e888b7b6", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -140,13 +140,13 @@ TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n INCLUDES =  \t-nostdinc++ \t-I$(GLIBCPP_INCLUDE_DIR) $(CSTD_INCLUDES) -I$(top_builddir)/include \t$(LIBSUPCXX_INCLUDES) $(LIBIO_INCLUDES) $(LIBMATH_INCLUDES) \t$(TOPLEVEL_INCLUDES)\n \n \n-base_headers =  \tbits/cpp_type_traits.h bits/char_traits.h bits/codecvt.h \tbits/stringfwd.h bits/std_string.h bits/basic_string.h \tbits/basic_string.tcc \tbits/generic_shadow.h bits/std_utility.h \tbits/std_complex.h \tbits/valarray_array.h bits/valarray_array.tcc bits/valarray_meta.h \tbits/std_valarray.h bits/mask_array.h bits/slice.h bits/slice_array.h \tbits/gslice.h bits/gslice_array.h bits/indirect_array.h \tbits/std_fstream.h bits/std_iomanip.h \tbits/ios_base.h bits/fpos.h bits/basic_ios.h bits/basic_ios.tcc \tbits/std_ios.h bits/std_iosfwd.h bits/std_iostream.h \tbits/std_istream.h bits/istream.tcc bits/std_locale.h \tbits/fstream.tcc bits/ostream.tcc bits/sbuf_iter.h bits/sstream.tcc \tbits/std_ostream.h bits/std_sstream.h bits/std_streambuf.h \tbits/streambuf.tcc bits/basic_file.h \tbits/locale_facets.h bits/locale_facets.tcc bits/localefwd.h \tbits/stl_pthread_alloc.h bits/pthread_allocimpl.h \tbits/stl_threads.h bits/stl_iterator_base.h \tbits/std_bitset.h bits/std_deque.h bits/std_functional.h \tbits/std_iterator.h bits/std_list.h \tbits/std_map.h bits/std_memory.h bits/std_numeric.h \tbits/std_queue.h bits/std_set.h bits/std_stack.h \tbits/std_stdexcept.h bits/functexcept.h bits/std_vector.h \tbits/stl_algo.h bits/stl_algobase.h bits/stl_alloc.h \tbits/stl_deque.h bits/stl_function.h \tbits/stl_heap.h bits/stl_iterator.h bits/stl_list.h bits/stl_map.h \tbits/stl_multimap.h bits/stl_multiset.h bits/stl_numeric.h \tbits/stl_pair.h bits/stl_queue.h bits/stl_raw_storage_iter.h \tbits/stl_relops.h bits/stl_set.h \tbits/stl_stack.h bits/stl_tempbuf.h \tbits/stl_tree.h bits/stl_uninitialized.h bits/stl_vector.h \tbits/type_traits.h bits/std_algorithm.h \tbits/concept_checks.h bits/container_concepts.h \tbits/sequence_concepts.h bits/stl_construct.h\n+base_headers =  \tbits/cpp_type_traits.h bits/char_traits.h bits/codecvt.h \tbits/stringfwd.h bits/std_string.h bits/basic_string.h \tbits/basic_string.tcc \tbits/generic_shadow.h bits/std_utility.h \tbits/std_complex.h \tbits/valarray_array.h bits/valarray_array.tcc bits/valarray_meta.h \tbits/std_valarray.h bits/mask_array.h bits/slice.h bits/slice_array.h \tbits/gslice.h bits/gslice_array.h bits/indirect_array.h \tbits/std_fstream.h bits/std_iomanip.h \tbits/ios_base.h bits/fpos.h bits/basic_ios.h bits/basic_ios.tcc \tbits/std_ios.h bits/std_iosfwd.h bits/std_iostream.h \tbits/std_istream.h bits/istream.tcc bits/std_locale.h \tbits/fstream.tcc bits/ostream.tcc bits/sbuf_iter.h bits/sstream.tcc \tbits/std_ostream.h bits/std_sstream.h bits/std_streambuf.h \tbits/streambuf.tcc bits/basic_file.h \tbits/locale_facets.h bits/locale_facets.tcc bits/localefwd.h \tbits/stl_pthread_alloc.h bits/pthread_allocimpl.h \tbits/stl_threads.h bits/stl_iterator_base.h \tbits/std_bitset.h bits/std_deque.h bits/std_functional.h \tbits/std_iterator.h bits/std_list.h \tbits/std_map.h bits/std_memory.h bits/std_numeric.h \tbits/std_queue.h bits/std_set.h bits/std_stack.h \tbits/std_stdexcept.h bits/functexcept.h bits/std_vector.h \tbits/stl_algo.h bits/stl_algobase.h bits/stl_alloc.h \tbits/stl_deque.h bits/stl_function.h \tbits/stl_heap.h bits/stl_iterator.h bits/stl_list.h bits/stl_map.h \tbits/stl_multimap.h bits/stl_multiset.h bits/stl_numeric.h \tbits/stl_pair.h bits/stl_queue.h bits/stl_raw_storage_iter.h \tbits/stl_relops.h bits/stl_set.h \tbits/stl_stack.h bits/stl_tempbuf.h \tbits/stl_tree.h bits/stl_uninitialized.h bits/stl_vector.h \tbits/stl_bvector.h bits/type_traits.h bits/std_algorithm.h \tbits/concept_checks.h bits/container_concepts.h \tbits/sequence_concepts.h bits/stl_construct.h\n \n \n-backward_headers =  \tbackward/complex.h backward/iomanip.h backward/istream.h \tbackward/ostream.h backward/stream.h backward/streambuf.h \tbackward/algo.h backward/algobase.h backward/alloc.h \tbackward/bvector.h backward/defalloc.h backward/deque.h \tbackward/function.h backward/hash_map.h backward/hash_set.h \tbackward/hashtable.h backward/heap.h backward/iterator.h \tbackward/list.h backward/map.h backward/multimap.h backward/new.h \tbackward/multiset.h backward/pair.h backward/iostream.h \tbackward/rope.h backward/set.h backward/slist.h backward/stack.h \tbackward/tempbuf.h backward/tree.h backward/vector.h \tbackward/fstream.h backward/strstream.h backward/strstream\n+backward_headers =  \tbackward/complex.h backward/iomanip.h backward/istream.h \tbackward/ostream.h backward/stream.h backward/streambuf.h \tbackward/algo.h backward/algobase.h backward/alloc.h \tbackward/bvector.h backward/defalloc.h backward/deque.h \tbackward/function.h backward/hash_map.h backward/hash_set.h \tbackward/hashtable.h backward/heap.h backward/iostream.h \tbackward/iterator.h backward/list.h backward/map.h \tbackward/multimap.h backward/new.h backward/multiset.h \tbackward/pair.h backward/queue.h backward/rope.h backward/set.h \tbackward/slist.h backward/stack.h backward/tempbuf.h backward/tree.h \tbackward/vector.h backward/fstream.h backward/strstream.h \tbackward/strstream\n \n \n-ext_headers =  \text/ropeimpl.h ext/stl_rope.h \text/stl_bvector.h ext/stl_hashtable.h ext/stl_hash_fun.h \text/hash_map ext/hash_set ext/rope ext/slist \text/tree ext/bvector \n+ext_headers =  \text/rope ext/ropeimpl.h ext/stl_rope.h \text/slist ext/hash_map ext/hash_set \text/stl_hashtable.h ext/stl_hash_fun.h \n \n \n c_base_headers =  \tbits/std_cassert.h bits/std_cctype.h bits/std_cerrno.h \tbits/std_cfloat.h bits/std_climits.h bits/std_clocale.h \tbits/std_cmath.h bits/std_csetjmp.h bits/std_csignal.h \tbits/std_cstdarg.h bits/std_cstddef.h bits/std_cstdio.h \tbits/std_cstdlib.h bits/std_cstring.h bits/std_ctime.h \tbits/std_cwchar.h bits/std_cwctype.h bits/cmath.tcc"}, {"sha": "297674db1c31a53c30e11ccd5bf3a7f824e2aab7", "filename": "libstdc++-v3/testsuite/ext/headers.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fheaders.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7e0d00051303e937b2f9d2d5452d29b16956c5/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fheaders.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fheaders.cc?ref=9b7e0d00051303e937b2f9d2d5452d29b16956c5", "patch": "@@ -1,6 +1,6 @@\n // 1999-06-23 bkoz \n \n-// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -23,11 +23,9 @@\n // This should include a list of all headers in the extension\n // subdirectory that are meant to be directly included.\n \n-#include <ext/bvector>\n #include <ext/hash_map>\n #include <ext/hash_set>\n #include <ext/rope>\n #include <ext/slist>\n-#include <ext/tree>\n \n int main() { }"}]}