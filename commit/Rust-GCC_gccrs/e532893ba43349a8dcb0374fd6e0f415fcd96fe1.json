{"sha": "e532893ba43349a8dcb0374fd6e0f415fcd96fe1", "node_id": "C_kwDOANBUbNoAKGU1MzI4OTNiYTQzMzQ5YThkY2IwMzc0ZmQ2ZTBmNDE1ZmNkOTZmZTE", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-25T13:04:57Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-25T13:36:27Z"}, "message": "Always update the type context for monoprhized items except type params\n\nWe need to update the type context type with the newly monomorphized types\nwe guarded against ADT's and functions because they were never added before\nthough this does not work for generic reference's to ADT's this updates\nthe check accordingly.", "tree": {"sha": "425195e61336278c7a64a860f7b09fa74f92f17f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/425195e61336278c7a64a860f7b09fa74f92f17f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e532893ba43349a8dcb0374fd6e0f415fcd96fe1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e532893ba43349a8dcb0374fd6e0f415fcd96fe1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e532893ba43349a8dcb0374fd6e0f415fcd96fe1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e532893ba43349a8dcb0374fd6e0f415fcd96fe1/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "717b6da459b26ace9a3c303cfa5e485ff8935709", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717b6da459b26ace9a3c303cfa5e485ff8935709", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717b6da459b26ace9a3c303cfa5e485ff8935709"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "f4fec107c35239720f87177043f8e5c605febd69", "filename": "gcc/rust/typecheck/rust-substitution-mapper.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e532893ba43349a8dcb0374fd6e0f415fcd96fe1/gcc%2Frust%2Ftypecheck%2Frust-substitution-mapper.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e532893ba43349a8dcb0374fd6e0f415fcd96fe1/gcc%2Frust%2Ftypecheck%2Frust-substitution-mapper.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-substitution-mapper.cc?ref=e532893ba43349a8dcb0374fd6e0f415fcd96fe1", "patch": "@@ -31,10 +31,8 @@ SubstMapperInternal::Resolve (TyTy::BaseType *base,\n   rust_assert (mapper.resolved != nullptr);\n \n   // insert these new implict types into the context\n-  bool is_fn = mapper.resolved->get_kind () == TyTy::TypeKind::FNDEF;\n-  bool is_adt = mapper.resolved->get_kind () == TyTy::TypeKind::ADT;\n   bool is_param = mapper.resolved->get_kind () == TyTy::TypeKind::PARAM;\n-  if (!is_fn && !is_adt && !is_param)\n+  if (!is_param)\n     {\n       auto context = TypeCheckContext::get ();\n       context->insert_type ("}]}