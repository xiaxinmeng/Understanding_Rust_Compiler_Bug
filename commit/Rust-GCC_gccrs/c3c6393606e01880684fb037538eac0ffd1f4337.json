{"sha": "c3c6393606e01880684fb037538eac0ffd1f4337", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNjNjM5MzYwNmUwMTg4MDY4NGZiMDM3NTM4ZWFjMGZmZDFmNDMzNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-04-12T12:59:56Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-04-12T12:59:56Z"}, "message": "print-rtl.c (print_rtx): For CALL_PLACEHOLDER, output the CALL_INSN from the normal case.\n\n\t* print-rtl.c (print_rtx): For CALL_PLACEHOLDER, output the\n\tCALL_INSN from the normal case.\n\nFrom-SVN: r33103", "tree": {"sha": "21a8431adb9b3ea32614c8eebb5d77ea27872043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21a8431adb9b3ea32614c8eebb5d77ea27872043"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3c6393606e01880684fb037538eac0ffd1f4337", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c6393606e01880684fb037538eac0ffd1f4337", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c6393606e01880684fb037538eac0ffd1f4337", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c6393606e01880684fb037538eac0ffd1f4337/comments", "author": null, "committer": null, "parents": [{"sha": "1d813780625142b8a3b72230902baf30bc78b4bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d813780625142b8a3b72230902baf30bc78b4bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d813780625142b8a3b72230902baf30bc78b4bb"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "a9fd3047f8f9b6a27bdccf5ce9ae0022146bc9fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c6393606e01880684fb037538eac0ffd1f4337/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c6393606e01880684fb037538eac0ffd1f4337/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3c6393606e01880684fb037538eac0ffd1f4337", "patch": "@@ -1,3 +1,8 @@\n+Wed Apr 12 08:47:38 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* print-rtl.c (print_rtx): For CALL_PLACEHOLDER, output the\n+\tCALL_INSN from the normal case.\n+\n Fri Apr  7 12:23:04 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (x86_sub_esp_4, x86_sub_esp_8, x86_add_esp_4, x86_add_esp_8):"}, {"sha": "5ffc30c9925f5d261c7fa66cbd69eeb9ef2587e9", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c6393606e01880684fb037538eac0ffd1f4337/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c6393606e01880684fb037538eac0ffd1f4337/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=c3c6393606e01880684fb037538eac0ffd1f4337", "patch": "@@ -72,6 +72,7 @@ print_rtx (in_rtx)\n   register int j;\n   register const char *format_ptr;\n   register int is_insn;\n+  rtx tem;\n \n   if (sawclose)\n     {\n@@ -315,8 +316,7 @@ print_rtx (in_rtx)\n \t    rtx sub = XEXP (in_rtx, i);\n \t    enum rtx_code subc = GET_CODE (sub);\n \n-\t    if (GET_CODE (in_rtx) == LABEL_REF\n-\t\t&& subc != CODE_LABEL)\n+\t    if (GET_CODE (in_rtx) == LABEL_REF && subc != CODE_LABEL)\n \t      goto do_e;\n \n \t    if (flag_dump_unnumbered)\n@@ -368,11 +368,21 @@ print_rtx (in_rtx)\n \n   if (GET_CODE (in_rtx) == CODE_LABEL)\n     {\n-      fprintf (outfile, \" [num uses: %d]\", LABEL_NUSES (in_rtx));\n+      fprintf (outfile, \" [%d uses]\", LABEL_NUSES (in_rtx));\n       if (LABEL_ALTERNATE_NAME (in_rtx))\n-        fprintf (outfile, \" [alternate name: %s]\", LABEL_ALTERNATE_NAME (in_rtx));\n+        fprintf (outfile, \" [alternate name: %s]\",\n+\t\t LABEL_ALTERNATE_NAME (in_rtx));\n     }\n   \n+  if (GET_CODE (in_rtx) == CALL_PLACEHOLDER)\n+    for (tem = XEXP (in_rtx, 0); tem != 0; tem = NEXT_INSN (tem))\n+      if (GET_CODE (tem) == CALL_INSN)\n+\t{\n+\t  fprintf (outfile, \" \");\n+\t  print_rtx (tem);\n+\t  break;\n+\t}\n+\n   if (dump_for_graph\n       && (is_insn || GET_CODE (in_rtx) == NOTE\n \t  || GET_CODE (in_rtx) == CODE_LABEL || GET_CODE (in_rtx) == BARRIER))\n@@ -515,16 +525,13 @@ print_rtl (outf, rtx_first)\n       case NOTE:\n       case CODE_LABEL:\n       case BARRIER:\n-\tfor (tmp_rtx = rtx_first; NULL != tmp_rtx; tmp_rtx = NEXT_INSN (tmp_rtx))\n-\t  {\n-\t    if (! flag_dump_unnumbered\n-\t\t|| GET_CODE (tmp_rtx) != NOTE\n-\t\t|| NOTE_LINE_NUMBER (tmp_rtx) < 0)\n-\t      {\n-\t\tprint_rtx (tmp_rtx);\n-\t\tfprintf (outfile, \"\\n\");\n-\t      }\n-\t  }\n+\tfor (tmp_rtx = rtx_first; tmp_rtx != 0; tmp_rtx = NEXT_INSN (tmp_rtx))\n+\t  if (! flag_dump_unnumbered\n+\t      || GET_CODE (tmp_rtx) != NOTE || NOTE_LINE_NUMBER (tmp_rtx) < 0)\n+\t    {\n+\t      print_rtx (tmp_rtx);\n+\t      fprintf (outfile, \"\\n\");\n+\t    }\n \tbreak;\n \n       default:"}]}