{"sha": "4bcf935d1195ea17f17d5249ef2a502ead734535", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJjZjkzNWQxMTk1ZWExN2YxN2Q1MjQ5ZWYyYTUwMmVhZDczNDUzNQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2008-02-14T17:03:02Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2008-02-14T17:03:02Z"}, "message": "error_constants.h (posix_errno): Guard not_supported use of ENOTSUP.\n\n2008-02-14  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* config/os/generic/error_constants.h (posix_errno): Guard\n\tnot_supported use of ENOTSUP.\n\t* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add check for ENOTSUP\n\tfor OpenBSD.\n\t* aclocal.m4: Regenerate.\n\t* configure: Rengerate.\n\t* config.h.in: Same.\n\nFrom-SVN: r132319", "tree": {"sha": "764a3963c92dd5f036ee47531383f80648caecee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/764a3963c92dd5f036ee47531383f80648caecee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bcf935d1195ea17f17d5249ef2a502ead734535", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bcf935d1195ea17f17d5249ef2a502ead734535", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bcf935d1195ea17f17d5249ef2a502ead734535", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bcf935d1195ea17f17d5249ef2a502ead734535/comments", "author": null, "committer": null, "parents": [{"sha": "a5bfb13a75be342bbe6296a95b8e61bdef02a684", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5bfb13a75be342bbe6296a95b8e61bdef02a684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5bfb13a75be342bbe6296a95b8e61bdef02a684"}], "stats": {"total": 102, "additions": 99, "deletions": 3}, "files": [{"sha": "b9a11b2b9f35cb286b7d91a082c11ffd312de4fd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bcf935d1195ea17f17d5249ef2a502ead734535/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bcf935d1195ea17f17d5249ef2a502ead734535/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4bcf935d1195ea17f17d5249ef2a502ead734535", "patch": "@@ -1,3 +1,13 @@\n+2008-02-14  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* config/os/generic/error_constants.h (posix_errno): Guard\n+\tnot_supported use of ENOTSUP.\n+\t* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add check for ENOTSUP\n+\tfor OpenBSD.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Rengerate.\n+\t* config.h.in: Same.\n+\n 2008-02-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* doc/doxygen/mainpage.html: Correct links."}, {"sha": "bd14d90126ef283c9a96ed9cacb1549986d2f99a", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bcf935d1195ea17f17d5249ef2a502ead734535/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bcf935d1195ea17f17d5249ef2a502ead734535/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=4bcf935d1195ea17f17d5249ef2a502ead734535", "patch": "@@ -1430,6 +1430,16 @@ AC_DEFUN([GLIBCXX_CHECK_SYSTEM_ERROR], [\n   if test x\"$ac_system_error_12\" = x\"yes\"; then\n     AC_DEFINE(HAVE_EOVERFLOW, 1, [Define if EOVERFLOW exists.])\n   fi\n+\n+  AC_MSG_CHECKING([for ENOTSUP])\n+  AC_CACHE_VAL(ac_system_error_13, [\n+  AC_TRY_COMPILE([#include <errno.h>], [ int i = ENOTSUP; ],\n+             [ac_system_error_13=yes], [ac_system_error_13=no])\n+  ])\n+  AC_MSG_RESULT($ac_system_error_13)\n+  if test x\"$ac_system_error_13\" = x\"yes\"; then\n+    AC_DEFINE(HAVE_ENOTSUP, 1, [Define if ENOTSUP exists.])\n+  fi\n ])\n \n dnl"}, {"sha": "4c187f18bad4f979fbd719fa12360eb0a109772f", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bcf935d1195ea17f17d5249ef2a502ead734535/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bcf935d1195ea17f17d5249ef2a502ead734535/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=4bcf935d1195ea17f17d5249ef2a502ead734535", "patch": "@@ -84,6 +84,9 @@\n /* Define if ENOTRECOVERABLE exists. */\n #undef HAVE_ENOTRECOVERABLE\n \n+/* Define if ENOTSUP exists. */\n+#undef HAVE_ENOTSUP\n+\n /* Define if EOVERFLOW exists. */\n #undef HAVE_EOVERFLOW\n "}, {"sha": "bec1fe42d8f75d05e82dbfe4535c6bb2e232be4b", "filename": "libstdc++-v3/config/os/generic/error_constants.h", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bcf935d1195ea17f17d5249ef2a502ead734535/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Ferror_constants.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bcf935d1195ea17f17d5249ef2a502ead734535/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Ferror_constants.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Ferror_constants.h?ref=4bcf935d1195ea17f17d5249ef2a502ead734535", "patch": "@@ -1,6 +1,6 @@\n // Specific definitions for generic platforms  -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,7 +33,7 @@\n  */\n \n #ifndef _GLIBCXX_ERROR_CONSTANTS\n-#  define _GLIBCXX_ERROR_CONSTANTS 1\n+#define _GLIBCXX_ERROR_CONSTANTS 1\n \n #include <bits/c++config.h>\n #include <cerrno>\n@@ -90,6 +90,7 @@ namespace posix_error\n #ifdef _GLIBCXX_HAVE_ENOLINK\n       no_link = \t\t\t\tENOLINK,\n #endif\n+\n       no_lock_available = \t\t\tENOLCK,\n \n #ifdef _GLIBCXX_HAVE_ENODATA\n@@ -117,7 +118,10 @@ namespace posix_error\n \n       not_connected = \t\t\t\tENOTCONN,\n       not_enough_memory = \t\t\tENOMEM,\n+\n+#ifdef _GLIBCXX_HAVE_ENOTSUP\n       not_supported = \t\t\t\tENOTSUP,\n+#endif\n \n #ifdef _GLIBCXX_HAVE_ECANCELED\n       operation_canceled = \t\t\tECANCELED,\n@@ -127,18 +131,23 @@ namespace posix_error\n       operation_not_permitted = \t\tEPERM,\n       operation_not_supported = \t\tEOPNOTSUPP,\n       operation_would_block = \t\t\tEWOULDBLOCK,\n+\n #ifdef _GLIBCXX_HAVE_EOWNERDEAD\n       owner_dead = \t\t\t\tEOWNERDEAD,\n #endif\n+\n       permission_denied = \t\t\tEACCES,\n+\n #ifdef _GLIBCXX_HAVE_EPROTO\n       protocol_error = \t\t\t\tEPROTO,\n #endif\n+\n       protocol_not_supported = \t\t\tEPROTONOSUPPORT,\n       read_only_file_system = \t\t\tEROFS,\n       resource_deadlock_would_occur = \t\tEDEADLK,\n       resource_unavailable_try_again = \t\tEAGAIN,\n       result_out_of_range = \t\t\tERANGE,\n+\n #ifdef _GLIBCXX_HAVE_ENOTRECOVERABLE\n       state_not_recoverable = \t\t\tENOTRECOVERABLE,\n #endif"}, {"sha": "e23e3df06f11e09f0d3d0addf2faabb356803c38", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 65, "deletions": 1, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bcf935d1195ea17f17d5249ef2a502ead734535/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bcf935d1195ea17f17d5249ef2a502ead734535/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=4bcf935d1195ea17f17d5249ef2a502ead734535", "patch": "@@ -17742,6 +17742,70 @@ _ACEOF\n \n   fi\n \n+  echo \"$as_me:$LINENO: checking for ENOTSUP\" >&5\n+echo $ECHO_N \"checking for ENOTSUP... $ECHO_C\" >&6\n+  if test \"${ac_system_error_13+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <errno.h>\n+int\n+main ()\n+{\n+ int i = ENOTSUP;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_system_error_13=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_system_error_13=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+fi\n+\n+  echo \"$as_me:$LINENO: result: $ac_system_error_13\" >&5\n+echo \"${ECHO_T}$ac_system_error_13\" >&6\n+  if test x\"$ac_system_error_13\" = x\"yes\"; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_ENOTSUP 1\n+_ACEOF\n+\n+  fi\n+\n \n # No surprises, no surprises...\n \n@@ -17784,7 +17848,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n   # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 17787 \"configure\"\n+#line 17851 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int."}]}