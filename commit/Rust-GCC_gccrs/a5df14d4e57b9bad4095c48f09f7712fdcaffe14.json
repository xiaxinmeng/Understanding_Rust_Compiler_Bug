{"sha": "a5df14d4e57b9bad4095c48f09f7712fdcaffe14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVkZjE0ZDRlNTdiOWJhZDQwOTVjNDhmMDlmNzcxMmZkY2FmZmUxNA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-11-11T04:44:16Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-11-11T04:44:16Z"}, "message": "re PR fortran/15976 (ICE: assertion failure in trans-array.c)\n\nPR fortran/15976\n* resolve.c (resolve_symbol): Disallow automatic arrays in module scope.\n* gfortran.dg/automatic_module_variable.f90: New test.\n\n\n\nCo-Authored-By: Steven G. Kargl <kargls@comcast.net>\n\nFrom-SVN: r106777", "tree": {"sha": "85d233bc91b50f52d627c1a4ab132a7ed7885909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85d233bc91b50f52d627c1a4ab132a7ed7885909"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5df14d4e57b9bad4095c48f09f7712fdcaffe14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5df14d4e57b9bad4095c48f09f7712fdcaffe14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5df14d4e57b9bad4095c48f09f7712fdcaffe14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5df14d4e57b9bad4095c48f09f7712fdcaffe14/comments", "author": null, "committer": null, "parents": [{"sha": "f2d186905aff4e0225e37b69a089f334290e806d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d186905aff4e0225e37b69a089f334290e806d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d186905aff4e0225e37b69a089f334290e806d"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "305f91ad35e7deaaa04bae329535da9babcb1c78", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5df14d4e57b9bad4095c48f09f7712fdcaffe14/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5df14d4e57b9bad4095c48f09f7712fdcaffe14/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a5df14d4e57b9bad4095c48f09f7712fdcaffe14", "patch": "@@ -1,3 +1,9 @@\n+2005-11-10  Paul Thomas  <pault@gcc.gnu.org>\n+\t    Steven G. Kargl <kargls@comcast.net>\n+\n+\tPR fortran/15976\n+\t* resolve.c (resolve_symbol): Disallow automatic arrays in module scope.\n+\n 2005-11-10  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/24655"}, {"sha": "0f175856a928268b465bfa2f65ee032fd13763bd", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5df14d4e57b9bad4095c48f09f7712fdcaffe14/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5df14d4e57b9bad4095c48f09f7712fdcaffe14/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=a5df14d4e57b9bad4095c48f09f7712fdcaffe14", "patch": "@@ -4282,6 +4282,22 @@ resolve_symbol (gfc_symbol * sym)\n \t  return;\n     }\n \n+  /* A module array's shape needs to be constant.  */\n+\n+  if (sym->ns->proc_name\n+      && sym->attr.flavor == FL_VARIABLE\n+      && sym->ns->proc_name->attr.flavor == FL_MODULE\n+      && !sym->attr.use_assoc\n+      && !sym->attr.allocatable\n+      && !sym->attr.pointer\n+      && sym->as != NULL\n+      && !gfc_is_compile_time_shape (sym->as))\n+    {\n+      gfc_error (\"Module array '%s' at %L cannot be automatic \"\n+         \"or assumed shape\", sym->name, &sym->declared_at);\n+      return;\n+    }\n+\n   /* Make sure that character string variables with assumed length are\n      dummy arguments.  */\n \n@@ -4465,7 +4481,7 @@ resolve_symbol (gfc_symbol * sym)\n   switch (sym->attr.flavor)\n     {\n     case FL_VARIABLE:\n-      /* Can the sybol have an initializer?  */\n+      /* Can the symbol have an initializer?  */\n       flag = 0;\n       if (sym->attr.allocatable || sym->attr.external || sym->attr.dummy\n \t  || sym->attr.intrinsic || sym->attr.result)"}, {"sha": "fa6d7b07e4ded8749d96a11e5674ed31f40f0da3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5df14d4e57b9bad4095c48f09f7712fdcaffe14/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5df14d4e57b9bad4095c48f09f7712fdcaffe14/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5df14d4e57b9bad4095c48f09f7712fdcaffe14", "patch": "@@ -1,3 +1,8 @@\n+2005-11-10  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/15976\n+\t* gfortran.dg/automatic_module_variable.f90: New test.\n+\n 2005-11-11  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \tPR target/24445"}, {"sha": "0cf43f7e8537930e2fa61f41090aebd303e61e1c", "filename": "gcc/testsuite/gfortran.dg/automatic_module_variable.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5df14d4e57b9bad4095c48f09f7712fdcaffe14/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_module_variable.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5df14d4e57b9bad4095c48f09f7712fdcaffe14/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_module_variable.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_module_variable.f90?ref=a5df14d4e57b9bad4095c48f09f7712fdcaffe14", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do compile }\n+! Tests fix for PR15976\n+!\n+module sd\n+  integer, parameter :: n = 20\n+  integer :: i(n)\n+  integer :: j(m) ! { dg-error \"cannot be automatic or assumed shape\" }\n+  integer, pointer :: p(:)\n+  integer, allocatable :: q(:)\n+contains\n+  function init (x, l)\n+    integer :: x(l)\n+    integer :: init(l)\n+    init = x\n+  end function init\n+end module sd"}]}