{"sha": "05ff4c5fa71037322916d2936dce3f762357c647", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVmZjRjNWZhNzEwMzczMjI5MTZkMjkzNmRjZTNmNzYyMzU3YzY0Nw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2016-05-02T09:40:32Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2016-05-02T09:40:32Z"}, "message": "Simplify cst_and_fits_in_hwi\n\nWhile looking at the use of cst_and_fits_in_hwi in tree-ssa-loop-ivopts.c,\nI had difficulty working out what the function actually tests.  The\nfinal NUNITS check seems redundant, since it asks about the number of\nHWIs in the _unextended_ constant.  We've already checked that the\nunextended constant has no more than HOST_BITS_PER_WIDE_INT bits, so the\nlength must be 1.\n\nI think this was my fault, sorry.\n\nTested on x86_64-linux-gnu and aarch64-linux-gnu.\n\ngcc/\n\t* tree.c (cst_and_fits_in_hwi): Simplify.\n\nFrom-SVN: r235722", "tree": {"sha": "bfbee29e0058f39e7d014ec7b5ba08ce5fe1af90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfbee29e0058f39e7d014ec7b5ba08ce5fe1af90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05ff4c5fa71037322916d2936dce3f762357c647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05ff4c5fa71037322916d2936dce3f762357c647", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05ff4c5fa71037322916d2936dce3f762357c647", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05ff4c5fa71037322916d2936dce3f762357c647/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "697e0b28cca9e5f3e1ee59131c048ef93014fb2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/697e0b28cca9e5f3e1ee59131c048ef93014fb2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/697e0b28cca9e5f3e1ee59131c048ef93014fb2f"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "7ea67aaf2ae64adebcbbf93d02efa7d6afea5d7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05ff4c5fa71037322916d2936dce3f762357c647/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05ff4c5fa71037322916d2936dce3f762357c647/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05ff4c5fa71037322916d2936dce3f762357c647", "patch": "@@ -1,3 +1,7 @@\n+2016-05-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree.c (cst_and_fits_in_hwi): Simplify.\n+\n 2016-05-02  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree.h (wi::to_wide): New function."}, {"sha": "f7366f63402481bcbf0777379a741f1595cea96c", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05ff4c5fa71037322916d2936dce3f762357c647/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05ff4c5fa71037322916d2936dce3f762357c647/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=05ff4c5fa71037322916d2936dce3f762357c647", "patch": "@@ -1675,13 +1675,8 @@ build_low_bits_mask (tree type, unsigned bits)\n bool\n cst_and_fits_in_hwi (const_tree x)\n {\n-  if (TREE_CODE (x) != INTEGER_CST)\n-    return false;\n-\n-  if (TYPE_PRECISION (TREE_TYPE (x)) > HOST_BITS_PER_WIDE_INT)\n-    return false;\n-\n-  return TREE_INT_CST_NUNITS (x) == 1;\n+  return (TREE_CODE (x) == INTEGER_CST\n+\t  && TYPE_PRECISION (TREE_TYPE (x)) <= HOST_BITS_PER_WIDE_INT);\n }\n \n /* Build a newly constructed VECTOR_CST node of length LEN.  */"}]}