{"sha": "9e4cacfab2d836d4dabc0b2aac095e635288bd27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU0Y2FjZmFiMmQ4MzZkNGRhYmMwYjJhYWMwOTVlNjM1Mjg4YmQyNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-10-22T10:43:20Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2018-10-22T10:43:20Z"}, "message": "trans.c (Pragma_to_gnu): Use a simple memory constraint in all cases.\n\n\t* gcc-interface/trans.c (Pragma_to_gnu) <Pragma_Inspection_Point>: Use\n\ta simple memory constraint in all cases.\n\n\t* gcc-interface/lang-specs.h: Bump copyright year.\n\nFrom-SVN: r265378", "tree": {"sha": "e19c38bbc21dc9e3141464c30a3ad0c381b2656b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e19c38bbc21dc9e3141464c30a3ad0c381b2656b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e4cacfab2d836d4dabc0b2aac095e635288bd27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e4cacfab2d836d4dabc0b2aac095e635288bd27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e4cacfab2d836d4dabc0b2aac095e635288bd27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e4cacfab2d836d4dabc0b2aac095e635288bd27/comments", "author": null, "committer": null, "parents": [{"sha": "bbc960279d3176051db9d134f74997ae9f0b01a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbc960279d3176051db9d134f74997ae9f0b01a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbc960279d3176051db9d134f74997ae9f0b01a7"}], "stats": {"total": 33, "additions": 13, "deletions": 20}, "files": [{"sha": "c002cdb1a1ef01af6f11142910733e37069f0833", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e4cacfab2d836d4dabc0b2aac095e635288bd27/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e4cacfab2d836d4dabc0b2aac095e635288bd27/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9e4cacfab2d836d4dabc0b2aac095e635288bd27", "patch": "@@ -1,3 +1,10 @@\n+2018-10-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Pragma_to_gnu) <Pragma_Inspection_Point>: Use\n+\ta simple memory constraint in all cases.\n+\n+\t* gcc-interface/lang-specs.h: Bump copyright year.\n+\n 2018-10-17  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc-interface/Make-lang.in (selftest-ada): New."}, {"sha": "374fc1e9527c182a0bc627d26ed9978e2139ffe6", "filename": "gcc/ada/gcc-interface/lang-specs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e4cacfab2d836d4dabc0b2aac095e635288bd27/gcc%2Fada%2Fgcc-interface%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e4cacfab2d836d4dabc0b2aac095e635288bd27/gcc%2Fada%2Fgcc-interface%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Flang-specs.h?ref=9e4cacfab2d836d4dabc0b2aac095e635288bd27", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *           Copyright (C) 1992-2015, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 1992-2018, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "ce2d43f989e71734f7e16b66a5dafe87f2a9bdcb", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 5, "deletions": 19, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e4cacfab2d836d4dabc0b2aac095e635288bd27/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e4cacfab2d836d4dabc0b2aac095e635288bd27/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=9e4cacfab2d836d4dabc0b2aac095e635288bd27", "patch": "@@ -1285,32 +1285,18 @@ Pragma_to_gnu (Node_Id gnat_node)\n \t{\n \t  Node_Id gnat_expr = Expression (gnat_temp);\n \t  tree gnu_expr = gnat_to_gnu (gnat_expr);\n-\t  int use_address;\n-\t  machine_mode mode;\n-\t  scalar_int_mode int_mode;\n \t  tree asm_constraint = NULL_TREE;\n #ifdef ASM_COMMENT_START\n \t  char *comment;\n #endif\n-\n-\t  if (TREE_CODE (gnu_expr) == UNCONSTRAINED_ARRAY_REF)\n-\t    gnu_expr = TREE_OPERAND (gnu_expr, 0);\n-\n-\t  /* Use the value only if it fits into a normal register,\n-\t     otherwise use the address.  */\n-\t  mode = TYPE_MODE (TREE_TYPE (gnu_expr));\n-\t  use_address = (!is_a <scalar_int_mode> (mode, &int_mode)\n-\t\t\t || GET_MODE_SIZE (int_mode) > UNITS_PER_WORD);\n-\n-\t  if (use_address)\n-\t    gnu_expr = build_unary_op (ADDR_EXPR, NULL_TREE, gnu_expr);\n+\t  gnu_expr = maybe_unconstrained_array (gnu_expr);\n+\t  gnat_mark_addressable (gnu_expr);\n \n #ifdef ASM_COMMENT_START\n \t  comment = concat (ASM_COMMENT_START,\n \t\t\t    \" inspection point: \",\n \t\t\t    Get_Name_String (Chars (gnat_expr)),\n-\t\t\t    use_address ? \" address\" : \"\",\n-\t\t\t    \" is in %0\",\n+\t\t\t    \" is at %0\",\n \t\t\t    NULL);\n \t  asm_constraint = build_string (strlen (comment), comment);\n \t  free (comment);\n@@ -1320,8 +1306,8 @@ Pragma_to_gnu (Node_Id gnat_node)\n \t\t\t     NULL_TREE,\n \t\t\t     tree_cons\n \t\t\t     (build_tree_list (NULL_TREE,\n-\t\t\t\t\t       build_string (1, \"g\")),\n-\t\t\t      gnu_expr, NULL_TREE),\n+\t\t\t\t\t       build_string (1, \"m\")),\n+\t\t\t\t\t       gnu_expr, NULL_TREE),\n \t\t\t     NULL_TREE, NULL_TREE);\n \t  ASM_VOLATILE_P (gnu_expr) = 1;\n \t  set_expr_location_from_node (gnu_expr, gnat_node);"}]}