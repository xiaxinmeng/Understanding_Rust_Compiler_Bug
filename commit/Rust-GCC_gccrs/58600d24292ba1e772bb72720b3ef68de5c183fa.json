{"sha": "58600d24292ba1e772bb72720b3ef68de5c183fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg2MDBkMjQyOTJiYTFlNzcyYmI3MjcyMGIzZWY2OGRlNWMxODNmYQ==", "commit": {"author": {"name": "Todd Vierling", "email": "tv@netbsd.org", "date": "1998-07-29T22:51:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-07-29T22:51:47Z"}, "message": "configure.in: Use xm-netbsd.h as the NetBSD xm file (not xm-siglist).\n\n        * configure.in: Use xm-netbsd.h as the NetBSD xm file (not xm-siglist).\n        Accept arm32 as arm, m68k4k as m68k, mipsle as mips-dec, and any\n        manufacturer id for ns32k.\n        * configure: Regenerated.\n        * config/netbsd.h: When using ASM_WEAKEN_LABEL, make it global too.\n        * config/t-netbsd: Don't compile libgcc1-test as the fns are in libc.\n        * config/i386/netbsd.h: Undefine DWARF2_UNWIND_INFO, not define as 0.\n        * config/m68k/netbsd.h: Same.\n        * config/ns32k/netbsd.h: Same.\n        * config/sparc/netbsd.h: Same.\n\nFrom-SVN: r21480", "tree": {"sha": "ddbe3a4953b467ec55fe0d8952a391ab06dc10f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddbe3a4953b467ec55fe0d8952a391ab06dc10f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58600d24292ba1e772bb72720b3ef68de5c183fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58600d24292ba1e772bb72720b3ef68de5c183fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58600d24292ba1e772bb72720b3ef68de5c183fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58600d24292ba1e772bb72720b3ef68de5c183fa/comments", "author": null, "committer": null, "parents": [{"sha": "15fec413e7f2b6d9ef82d220987389feed1ad3b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15fec413e7f2b6d9ef82d220987389feed1ad3b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15fec413e7f2b6d9ef82d220987389feed1ad3b1"}], "stats": {"total": 71, "additions": 50, "deletions": 21}, "files": [{"sha": "c9f85c8d75a6dd9ae70a62db27fa9af7b7a24773", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58600d24292ba1e772bb72720b3ef68de5c183fa", "patch": "@@ -1,3 +1,16 @@\n+Wed Jul 29 23:49:23 1998  Todd Vierling <tv@netbsd.org>\n+\n+\t* configure.in: Use xm-netbsd.h as the NetBSD xm file (not xm-siglist).\n+\tAccept arm32 as arm, m68k4k as m68k, mipsle as mips-dec, and any\n+\tmanufacturer id for ns32k.\n+\t* configure: Regenerated.\n+\t* config/netbsd.h: When using ASM_WEAKEN_LABEL, make it global too.\n+\t* config/t-netbsd: Don't compile libgcc1-test as the fns are in libc.\n+\t* config/i386/netbsd.h: Undefine DWARF2_UNWIND_INFO, not define as 0.\n+\t* config/m68k/netbsd.h: Same.\n+\t* config/ns32k/netbsd.h: Same.\n+\t* config/sparc/netbsd.h: Same.\n+\n Wed Jul 29 22:39:21 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* unroll.c (unroll_loop): Do not abort for an UNROLL_MODULO"}, {"sha": "25660470f6f558ac5eb01e33fe6e1310502ca813", "filename": "gcc/config/i386/netbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd.h?ref=58600d24292ba1e772bb72720b3ef68de5c183fa", "patch": "@@ -81,5 +81,5 @@\n \n /* Until they use ELF or something that handles dwarf2 unwinds\n    and initialization stuff better.  */\n-#define DWARF2_UNWIND_INFO 0\n+#undef DWARF2_UNWIND_INFO\n "}, {"sha": "c98419927808da7cec76278515110a1894476d91", "filename": "gcc/config/m68k/netbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfig%2Fm68k%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfig%2Fm68k%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd.h?ref=58600d24292ba1e772bb72720b3ef68de5c183fa", "patch": "@@ -59,5 +59,5 @@\n \n /* Until they use ELF or something that handles dwarf2 unwinds\n    and initialization stuff better.  */\n-#define DWARF2_UNWIND_INFO 0\n+#undef DWARF2_UNWIND_INFO\n "}, {"sha": "43a15768d0baeb25950afc42bd4f16d6ada674b1", "filename": "gcc/config/netbsd.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfig%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfig%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetbsd.h?ref=58600d24292ba1e772bb72720b3ef68de5c183fa", "patch": "@@ -13,11 +13,11 @@\n #define GCC_INCLUDE_DIR \"/usr/include\"\n \n #undef INCLUDE_DEFAULTS\n-#define INCLUDE_DEFAULTS\t\t\\\n-  {\t\t\t\t\t\\\n-    { GPLUSPLUS_INCLUDE_DIR, 1, 1 },\t\\\n-    { GCC_INCLUDE_DIR, 0, 0 },\t\t\\\n-    { 0, 0, 0 }\t\t\t\t\\\n+#define INCLUDE_DEFAULTS\t\t\t\\\n+  {\t\t\t\t\t\t\\\n+    { GPLUSPLUS_INCLUDE_DIR, \"G++\", 1, 1 },\t\\\n+    { GCC_INCLUDE_DIR, \"GCC\", 0, 0 },\t\t\\\n+    { 0, 0, 0, 0 }\t\t\t\t\\\n   }\n \n /* Under NetBSD, the normal location of the compiler back ends is the\n@@ -100,7 +100,8 @@\n \n #undef ASM_WEAKEN_LABEL\n #define ASM_WEAKEN_LABEL(FILE,NAME) \\\n-  do { fputs (\"\\t.weak\\t\", FILE); assemble_name (FILE, NAME); \\\n+  do { fputs (\"\\t.globl\\t\", FILE); assemble_name (FILE, NAME); \\\n+       fputs (\"\\t.weak\\t\", FILE); assemble_name (FILE, NAME); \\\n        fputc ('\\n', FILE); } while (0)\n \n /* The following macro defines the format used to output the second"}, {"sha": "40c2025bc5f55b47f0a6bf333631497575786f18", "filename": "gcc/config/ns32k/netbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfig%2Fns32k%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfig%2Fns32k%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fnetbsd.h?ref=58600d24292ba1e772bb72720b3ef68de5c183fa", "patch": "@@ -108,5 +108,5 @@ Boston, MA 02111-1307, USA.\n \n /* Until they use ELF or something that handles dwarf2 unwinds\n    and initialization stuff better.  */\n-#define DWARF2_UNWIND_INFO 0\n+#undefine DWARF2_UNWIND_INFO\n "}, {"sha": "ba2fe4e6c043ff55a3984bd6638eb22f3d88d4ba", "filename": "gcc/config/sparc/netbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfig%2Fsparc%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfig%2Fsparc%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fnetbsd.h?ref=58600d24292ba1e772bb72720b3ef68de5c183fa", "patch": "@@ -42,5 +42,5 @@\n \n /* Until they use ELF or something that handles dwarf2 unwinds\n    and initialization stuff better.  */\n-#define DWARF2_UNWIND_INFO 0\n+#undef DWARF2_UNWIND_INFO\n "}, {"sha": "85d6057feb04d10d2640ed0e4bfdfe6ed056290a", "filename": "gcc/config/t-netbsd", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfig%2Ft-netbsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfig%2Ft-netbsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-netbsd?ref=58600d24292ba1e772bb72720b3ef68de5c183fa", "patch": "@@ -1,5 +1,6 @@\n LIBGCC1=libgcc1.null\n CROSS_LIBGCC1=libgcc1.null\n+LIBGCC1_TEST=\n \n # Don't run fixproto\n STMP_FIXPROTO ="}, {"sha": "0df76d58d4b08f987f667db6bf0d9cbe08cc06db", "filename": "gcc/configure", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=58600d24292ba1e772bb72720b3ef68de5c183fa", "patch": "@@ -2320,6 +2320,7 @@ for machine in $build $host $target; do\n \t\t;;\n \talpha*-*-netbsd*)\n \t\ttm_file=\"${tm_file} alpha/elf.h alpha/netbsd.h alpha/netbsdl-elf.h\"\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\ttarget_cpu_default=\"MASK_GAS\"\n \t\ttmake_file=\"alpha/t-crtbe\"\n \t\textra_parts=\"crtbegin.o crtend.o\"\n@@ -2420,9 +2421,9 @@ for machine in $build $host $target; do\n \t\ttmake_file=arm/t-semiaof\n \t\tfixincludes=Makefile.in # There is nothing to fix\n \t\t;;\n-\tarm-*-netbsd*)\n+\tarm*-*-netbsd*)\n \t\ttm_file=arm/netbsd.h\n-\t\txm_file=\"xm-siglist.h ${xm_file}\"\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\ttmake_file=\"t-netbsd arm/t-netbsd\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n@@ -2779,6 +2780,7 @@ for machine in $build $host $target; do\n \t\t;;\n \ti[34567]86-*-netbsd*)\n \t\ttm_file=i386/netbsd.h\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd\n@@ -3555,8 +3557,9 @@ for machine in $build $host $target; do\n \t\textra_headers=math-68881.h\n \t\tfloat_format=m68k\n \t\t;;\n-\tm68k-*-netbsd*)\n+\tm68k*-*-netbsd*)\n \t\ttm_file=m68k/netbsd.h\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd\n@@ -3875,8 +3878,9 @@ for machine in $build $host $target; do\n \t\t\tuse_collect2=yes\n \t      fi\n \t      ;;\n-\tmips-dec-netbsd*)                  # Decstation running NetBSD\n+\tmipsel-*-netbsd* | mips-dec-netbsd*)    # Decstation running NetBSD\n \t\ttm_file=mips/netbsd.h\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd\n@@ -4205,8 +4209,9 @@ for machine in $build $host $target; do\n \t\txm_defines=USG\n \t\tuse_collect2=yes\n \t\t;;\n-\tns32k-pc532-netbsd*)\n+\tns32k-*-netbsd*)\n \t\ttm_file=ns32k/netbsd.h\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd\n@@ -4501,6 +4506,7 @@ for machine in $build $host $target; do\n \t\t;;\n \tsparc-*-netbsd*)\n \t\ttm_file=sparc/netbsd.h\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd\n@@ -4693,6 +4699,7 @@ for machine in $build $host $target; do\n \t\t;;\n \tvax-*-netbsd*)\n \t\ttm_file=\"${tm_file} netbsd.h vax/netbsd.h\"\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd\n@@ -5270,7 +5277,7 @@ fi\n \n # Figure out what assembler alignment features are present.\n echo $ac_n \"checking assembler alignment features\"\"... $ac_c\" 1>&6\n-echo \"configure:5274: checking assembler alignment features\" >&5\n+echo \"configure:5281: checking assembler alignment features\" >&5\n gcc_cv_as=\n gcc_cv_as_alignment_features=\n gcc_cv_as_gas_srcdir=`echo $srcdir | sed -e 's,gcc$,gas,'`"}, {"sha": "8a9f2cc45cfac7b013aba9cdf3e26ecaaf61e302", "filename": "gcc/configure.in", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58600d24292ba1e772bb72720b3ef68de5c183fa/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=58600d24292ba1e772bb72720b3ef68de5c183fa", "patch": "@@ -413,6 +413,7 @@ for machine in $build $host $target; do\n \t\t;;\n \talpha*-*-netbsd*)\n \t\ttm_file=\"${tm_file} alpha/elf.h alpha/netbsd.h alpha/netbsdl-elf.h\"\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\ttarget_cpu_default=\"MASK_GAS\"\n \t\ttmake_file=\"alpha/t-crtbe\"\n \t\textra_parts=\"crtbegin.o crtend.o\"\n@@ -513,9 +514,9 @@ for machine in $build $host $target; do\n \t\ttmake_file=arm/t-semiaof\n \t\tfixincludes=Makefile.in # There is nothing to fix\n \t\t;;\n-\tarm-*-netbsd*)\n+\tarm*-*-netbsd*)\n \t\ttm_file=arm/netbsd.h\n-\t\txm_file=\"xm-siglist.h ${xm_file}\"\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\ttmake_file=\"t-netbsd arm/t-netbsd\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n@@ -872,6 +873,7 @@ for machine in $build $host $target; do\n \t\t;;\n \ti[[34567]]86-*-netbsd*)\n \t\ttm_file=i386/netbsd.h\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd\n@@ -1648,8 +1650,9 @@ for machine in $build $host $target; do\n \t\textra_headers=math-68881.h\n \t\tfloat_format=m68k\n \t\t;;\n-\tm68k-*-netbsd*)\n+\tm68k*-*-netbsd*)\n \t\ttm_file=m68k/netbsd.h\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd\n@@ -1968,8 +1971,9 @@ for machine in $build $host $target; do\n \t\t\tuse_collect2=yes\n \t      fi\n \t      ;;\n-\tmips-dec-netbsd*)                  # Decstation running NetBSD\n+\tmipsel-*-netbsd* | mips-dec-netbsd*)    # Decstation running NetBSD\n \t\ttm_file=mips/netbsd.h\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd\n@@ -2298,8 +2302,9 @@ for machine in $build $host $target; do\n \t\txm_defines=USG\n \t\tuse_collect2=yes\n \t\t;;\n-\tns32k-pc532-netbsd*)\n+\tns32k-*-netbsd*)\n \t\ttm_file=ns32k/netbsd.h\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd\n@@ -2594,6 +2599,7 @@ for machine in $build $host $target; do\n \t\t;;\n \tsparc-*-netbsd*)\n \t\ttm_file=sparc/netbsd.h\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd\n@@ -2786,6 +2792,7 @@ for machine in $build $host $target; do\n \t\t;;\n \tvax-*-netbsd*)\n \t\ttm_file=\"${tm_file} netbsd.h vax/netbsd.h\"\n+\t\txm_file=\"xm-netbsd.h ${xm_file}\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd"}]}