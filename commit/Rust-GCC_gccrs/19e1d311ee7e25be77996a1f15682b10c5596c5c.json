{"sha": "19e1d311ee7e25be77996a1f15682b10c5596c5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTllMWQzMTFlZTdlMjViZTc3OTk2YTFmMTU2ODJiMTBjNTU5NmM1Yw==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-01-16T03:02:50Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-01-16T03:02:50Z"}, "message": "* sh.md (movdf, movsf): Temporary workaround for no_new_pseudos lossage.\n\nFrom-SVN: r24692", "tree": {"sha": "940e0a7ebace784aabd4b76d7028929e83b265c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/940e0a7ebace784aabd4b76d7028929e83b265c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19e1d311ee7e25be77996a1f15682b10c5596c5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19e1d311ee7e25be77996a1f15682b10c5596c5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19e1d311ee7e25be77996a1f15682b10c5596c5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19e1d311ee7e25be77996a1f15682b10c5596c5c/comments", "author": null, "committer": null, "parents": [{"sha": "1b8b517b1a18ffe4824acfdece01f74bfde34df2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b8b517b1a18ffe4824acfdece01f74bfde34df2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b8b517b1a18ffe4824acfdece01f74bfde34df2"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "e981afe09157475d83c48841f887a6315cf54181", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e1d311ee7e25be77996a1f15682b10c5596c5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e1d311ee7e25be77996a1f15682b10c5596c5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19e1d311ee7e25be77996a1f15682b10c5596c5c", "patch": "@@ -1,3 +1,7 @@\n+Sat Jan 16 10:48:16 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* sh.md (movdf, movsf): Temporary workaround for no_new_pseudos lossage.\n+\n Fri Jan 15 23:44:37 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* sparc.c (sparc_issue): Add hypersparc/sparclite86x entries."}, {"sha": "29979cd13099e101657a690892fbdb58f76e9b1e", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e1d311ee7e25be77996a1f15682b10c5596c5c/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e1d311ee7e25be77996a1f15682b10c5596c5c/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=19e1d311ee7e25be77996a1f15682b10c5596c5c", "patch": "@@ -1,5 +1,5 @@\n ;;- Machine description for the Hitachi SH.\n-;;  Copyright (C) 1993, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n+;;  Copyright (C) 1993 - 1999 Free Software Foundation, Inc.\n ;;  Contributed by Steve Chamberlain (sac@cygnus.com).\n ;;  Improved by Jim Wilson (wilson@cygnus.com).\n \n@@ -2786,6 +2786,13 @@\n   if (prepare_move_operands (operands, DFmode)) DONE;\n   if (TARGET_SH4)\n     {\n+      if (no_new_pseudos)\n+\t{\n+\t  /* ??? FIXME: This is only a stopgap fix.  There is no guarantee\n+\t     that fpscr is in the right state. */\n+\t  emit_insn (gen_movdf_i4 (operands[0], operands[1], get_fpscr_rtx ()));\n+\t  DONE;\n+\t}\n       emit_df_insn (gen_movdf_i4 (operands[0], operands[1], get_fpscr_rtx ()));\n       /* We need something to tag possible REG_LIBCALL notes on to.  */\n       if (TARGET_FPU_SINGLE && rtx_equal_function_value_matters\n@@ -2875,6 +2882,13 @@\n     DONE;\n   if (TARGET_SH3E)\n     {\n+      if (no_new_pseudos)\n+\t{\n+\t  /* ??? FIXME: This is only a stopgap fix.  There is no guarantee\n+\t     that fpscr is in the right state. */\n+\t  emit_insn (gen_movsf_ie (operands[0], operands[1], get_fpscr_rtx ()));\n+\t  DONE;\n+\t}\n       emit_sf_insn (gen_movsf_ie (operands[0], operands[1], get_fpscr_rtx ()));\n       /* We need something to tag possible REG_LIBCALL notes on to.  */\n       if (! TARGET_FPU_SINGLE && rtx_equal_function_value_matters"}]}