{"sha": "84005b8abf9846e4a97e7c76c56acb2e432f2a0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQwMDViOGFiZjk4NDZlNGE5N2U3Yzc2YzU2YWNiMmU0MzJmMmEwYQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-08-11T00:16:45Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-08-11T00:16:45Z"}, "message": "Daily bump.", "tree": {"sha": "322474f3a2e2ea7f855ef5d3d6ecb62bcb77ffee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/322474f3a2e2ea7f855ef5d3d6ecb62bcb77ffee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84005b8abf9846e4a97e7c76c56acb2e432f2a0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84005b8abf9846e4a97e7c76c56acb2e432f2a0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84005b8abf9846e4a97e7c76c56acb2e432f2a0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/comments", "author": null, "committer": null, "parents": [{"sha": "c01b22f12291691d1ce89f82211f00eae4398e18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c01b22f12291691d1ce89f82211f00eae4398e18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c01b22f12291691d1ce89f82211f00eae4398e18"}], "stats": {"total": 179, "additions": 178, "deletions": 1}, "files": [{"sha": "fe76468bb28d8dd13f09d9f29dbadc347ca132df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84005b8abf9846e4a97e7c76c56acb2e432f2a0a", "patch": "@@ -1,3 +1,50 @@\n+2020-08-10  Marek Polacek  <polacek@redhat.com>\n+\n+\t* doc/sourcebuild.texi: Document dg-ice.\n+\n+2020-08-10  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* config/i386/i386-expand.c (ix86_expand_int_movcc): Expand\n+\tsigned MIN_EXPR against zero as \"x < 0 ? x : 0\" instead of\n+\t\"x <= 0 ? x : 0\" to enable sign_bit_compare_p optimizations.\n+\n+2020-08-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.h (gt_ggc_mx): Declare inline.\n+\t(gt_pch_nx): Same.\n+\n+2020-08-10  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/95433\n+\t* match.pd (X * C1 == C2): Handle wrapping overflow.\n+\t* expr.c (maybe_optimize_mod_cmp): Qualify call to mod_inv.\n+\t(mod_inv): Move...\n+\t* wide-int.cc (mod_inv): ... here.\n+\t* wide-int.h (mod_inv): Declare it.\n+\n+2020-08-10  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* predict.c (filter_predictions): Document semantics of filter.\n+\t(equal_edge_p): Rename to ...\n+\t(not_equal_edge_p): ... this; reverse semantics.\n+\t(remove_predictions_associated_with_edge): Fix.\n+\n+2020-08-10  Hongtao Liu  <hongtao.liu@intel.com>\n+\n+\tPR target/96243\n+\t* config/i386/i386-expand.c (ix86_expand_sse_cmp): Refine for\n+\tmaskcmp.\n+\t(ix86_expand_mask_vec_cmp): Change prototype.\n+\t* config/i386/i386-protos.h (ix86_expand_mask_vec_cmp): Change prototype.\n+\t* config/i386/i386.c (ix86_print_operand): Remove operand\n+\tmodifier 'I'.\n+\t* config/i386/sse.md\n+\t(*<avx512>_cmp<mode>3<mask_scalar_merge_name><round_saeonly_name>): Deleted.\n+\t(*<avx512>_cmp<mode>3<mask_scalar_merge_name>): Ditto.\n+\t(*<avx512>_ucmp<mode>3<mask_scalar_merge_name>): Ditto.\n+\t(*<avx512>_ucmp<mode>3<mask_scalar_merge_name>,\n+\tavx512f_maskcmp<mode>3): Ditto.\n+\n 2020-08-09  Roger Sayle  <roger@nextmovesoftware.com>\n \n \t* expmed.c (init_expmed_one_conv): Restore all->reg's mode."}, {"sha": "5a77e124a0f4275714d13a56d99814d6b36a5d64", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=84005b8abf9846e4a97e7c76c56acb2e432f2a0a", "patch": "@@ -1 +1 @@\n-20200810\n+20200811"}, {"sha": "d0f5111d83cc60a8a60eae1efa5deed91c54f701", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=84005b8abf9846e4a97e7c76c56acb2e432f2a0a", "patch": "@@ -1,3 +1,16 @@\n+2020-08-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/96497\n+\t* constexpr.c (cxx_eval_binary_expression): For SPACESHIP_EXPR, tail\n+\tcall cxx_eval_constant_expression after genericize_spaceship to avoid\n+\tundesirable further VERIFY_CONSTANT.\n+\n+2020-08-10  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* pt.c (resolve_overloaded_unification): Drop functions with\n+\tunsatisfied constraints.\n+\t(resolve_nondeduced_context): Likewise.\n+\n 2020-08-05  Patrick Palka  <ppalka@redhat.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "b79eff707c80ab6e6b0e0e0e5bd03e28a03dc473", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=84005b8abf9846e4a97e7c76c56acb2e432f2a0a", "patch": "@@ -1,3 +1,21 @@\n+2020-08-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/96556\n+\t* frontend-passes.c (doloop_contained_function_call):\n+\tDo not dereference a NULL pointer for value.function.esym.\n+\n+2020-08-10  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/96312\n+\t* trans-expr.c (fcncall_realloc_result): Only compare shapes if\n+\tlhs was allocated..\n+\n+2020-08-10  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/96102\n+\t* resolve.c (check_host_association): Replace the gcc_assert\n+\twith an error for internal procedures.\n+\n 2020-08-05  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/96469"}, {"sha": "bda9993a7cd74b0a0b60960b4b8a893fff231d4b", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=84005b8abf9846e4a97e7c76c56acb2e432f2a0a", "patch": "@@ -1,3 +1,8 @@\n+2020-08-10  Cl\u00e9ment Chigot  <chigot.c@gmail.com>\n+\n+\t* go-c.h (struct go_create_gogo_args): Add need_eqtype field.\n+\t* go-lang.c (go_langhook_init): Set need_eqtype.\n+\n 2020-04-15  Ian Lance Taylor  <iant@golang.org>\n \n \tPR go/94607"}, {"sha": "dc48e018250b3ca002cf56ca7553518fc7cc2fa2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=84005b8abf9846e4a97e7c76c56acb2e432f2a0a", "patch": "@@ -1,3 +1,57 @@\n+2020-08-10  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/88003\n+\t* g++.dg/cpp1y/auto-fn61.C: New test.\n+\n+2020-08-10  Marek Polacek  <polacek@redhat.com>\n+\n+\t* lib/gcc-dg.exp (gcc-dg-test-1): Handle dg-ice.\n+\t(cleanup-after-saved-dg-test): Reset expect_ice.\n+\t* lib/prune.exp (prune_ices): New.\n+\t* lib/target-supports-dg.exp (dg-ice): New.\n+\n+2020-08-10  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* gcc.target/i386/minmax-12.c: New test.\n+\n+2020-08-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/96556\n+\t* gfortran.dg/do_check_15.f90: New test.\n+\n+2020-08-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/96497\n+\t* g++.dg/cpp2a/spaceship-constexpr3.C: New test.\n+\n+2020-08-10  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* g++.dg/cpp2a/concepts-fn5.C: New test.\n+\t* g++.dg/concepts/fn8.C: Generalize dg-error directive to accept\n+\t\"no matching function ...\" diagnostic.\n+\t* g++.dg/cpp2a/concepts-fn1.C: Likewise.\n+\t* g++.dg/cpp2a/concepts-ts2.C: Likewise.\n+\t* g++.dg/cpp2a/concepts-ts3.C: Likewise.\n+\n+2020-08-10  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/95433\n+\t* gcc.dg/tree-ssa/pr95433-2.c: New file.\n+\n+2020-08-10  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/96312\n+\t* gfortran.dg/pr96312.f90: New test.\n+\n+2020-08-10  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/96102\n+\t* gfortran.dg/pr96102.f90: New test.\n+\n+2020-08-10  Hongtao Liu  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr92865-1.c: Adjust testcase.\n+\n 2020-08-09  Roger Sayle  <roger@nextmovesoftware.com>\n \n \tPR target/71321"}, {"sha": "b71c39fef6ec000ff2fcf37728c1bddbe96cf8e6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84005b8abf9846e4a97e7c76c56acb2e432f2a0a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=84005b8abf9846e4a97e7c76c56acb2e432f2a0a", "patch": "@@ -1,3 +1,43 @@\n+2020-08-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/94681\n+\t* src/c++17/fs_ops.cc (read_symlink): Use posix::lstat instead\n+\tof calling ::lstat directly.\n+\t* src/filesystem/ops.cc (read_symlink): Likewise.\n+\n+2020-08-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* python/libstdcxx/v6/printers.py (UniquePointerPrinter.__init__):\n+\tUse gdb.Type.strip_typedefs().\n+\t* testsuite/libstdc++-prettyprinters/compat.cc: Use a typedef in\n+\tthe emulated old type.\n+\n+2020-08-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/94681\n+\t* acinclude.m4 (GLIBCXX_CHECK_FILESYSTEM_DEPS): Do not depend on\n+\t$enable_libstdcxx_filesystem_ts.\n+\t* configure: Regenerate.\n+\n+2020-08-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_iterator.h (inserter): Do not deduce\n+\titerator type (LWG 561).\n+\t* testsuite/24_iterators/insert_iterator/dr561.cc: New test.\n+\n+2020-08-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/basic_string.tcc [_GLIBCXX_USE_CXX11_ABI=0]\n+\t(basic_string::reserve()): Do nothing if exceptions are not\n+\tenabled.\n+\n+2020-08-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/95749\n+\t* src/filesystem/ops-common.h [_GLIBCXX_FILESYSTEM_IS_WINDOWS]\n+\t(stat_type): Change to __wstat64.\n+\t(stat): Use _wstat64.\n+\n 2020-08-07  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/96303"}]}