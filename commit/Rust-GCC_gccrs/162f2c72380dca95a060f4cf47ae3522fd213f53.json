{"sha": "162f2c72380dca95a060f4cf47ae3522fd213f53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYyZjJjNzIzODBkY2E5NWEwNjBmNGNmNDdhZTM1MjJmZDIxM2Y1Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T08:44:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T08:44:37Z"}, "message": "Update comments.\n\nFrom-SVN: r146372", "tree": {"sha": "b98415d8ee56da393fa95808ab396d529d5d84e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b98415d8ee56da393fa95808ab396d529d5d84e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/162f2c72380dca95a060f4cf47ae3522fd213f53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/162f2c72380dca95a060f4cf47ae3522fd213f53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/162f2c72380dca95a060f4cf47ae3522fd213f53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/162f2c72380dca95a060f4cf47ae3522fd213f53/comments", "author": null, "committer": null, "parents": [{"sha": "ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0"}], "stats": {"total": 34, "additions": 15, "deletions": 19}, "files": [{"sha": "7ca247035076dbffbc7e0bc3bb379b4f35a9ca75", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/162f2c72380dca95a060f4cf47ae3522fd213f53/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/162f2c72380dca95a060f4cf47ae3522fd213f53/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=162f2c72380dca95a060f4cf47ae3522fd213f53", "patch": "@@ -264,7 +264,6 @@ begin\n \n    if Present (Pragma_Argument_Associations (Pragma_Node)) then\n       Arg_Node := Arg1;\n-\n       while Arg_Node /= Empty loop\n          Arg_Count := Arg_Count + 1;\n "}, {"sha": "730419ae781699e4cf4cc572d3203fae0f5722ed", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/162f2c72380dca95a060f4cf47ae3522fd213f53/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/162f2c72380dca95a060f4cf47ae3522fd213f53/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=162f2c72380dca95a060f4cf47ae3522fd213f53", "patch": "@@ -6562,23 +6562,21 @@ package Sinfo is\n       --  in the declarations of the innermost enclosing block as specified\n       --  in RM section 5.1 (3).\n \n-      --  The Defining_Identifier is the actual identifier for the\n-      --  statement identifier. Note that the occurrence of the label\n-      --  is a reference, NOT the defining occurrence. The defining\n-      --  occurrence occurs at the head of the innermost enclosing\n-      --  block, and is represented by this node.\n+      --  The Defining_Identifier is the actual identifier for the statement\n+      --  identifier. Note that the occurrence of the label is a reference, NOT\n+      --  the defining occurrence. The defining occurrence occurs at the head\n+      --  of the innermost enclosing block, and is represented by this node.\n \n       --  Note: from the grammar, this might better be called an implicit\n       --  statement identifier declaration, but the term we choose seems\n       --  friendlier, since at least informally statement identifiers are\n       --  called labels in both cases (i.e. when used in labels, and when\n       --  used as the identifiers of blocks and loops).\n \n-      --  Note: although this is logically a semantic node, since it does\n-      --  not correspond directly to a source syntax construction, these\n-      --  nodes are actually created by the parser in a post pass done just\n-      --  after parsing is complete, before semantic analysis is started (see\n-      --  the Par.Labl subunit in file par-labl.adb).\n+      --  Note: although this is logically a semantic node, since it does not\n+      --  correspond directly to a source syntax construction, these nodes are\n+      --  actually created by the parser in a post pass done just after parsing\n+      --  is complete, before semantic analysis is started (see Par.Labl).\n \n       --  Sprint syntax: labelname : label;\n \n@@ -6594,19 +6592,18 @@ package Sinfo is\n       -- Itype_Reference --\n       ---------------------\n \n-      --  This node is used to create a reference to an Itype. The only\n-      --  purpose is to make sure that the Itype is defined if this is the\n-      --  first reference.\n+      --  This node is used to create a reference to an Itype. The only purpose\n+      --  is to make sure the Itype is defined if this is the first reference.\n \n       --  A typical use of this node is when an Itype is to be referenced in\n-      --  two branches of an if statement. In this case it is important that\n-      --  the first use of the Itype not be inside the conditional, since\n-      --  then it might not be defined if the wrong branch of the if is\n-      --  taken in the case where the definition generates elaboration code.\n+      --  two branches of an IF statement. In this case it is important that\n+      --  the first use of the Itype not be inside the conditional, since then\n+      --  it might not be defined if the other branch of the IF is taken, in\n+      --  the case where the definition generates elaboration code.\n \n       --  The Itype field points to the referenced Itype\n \n-      --  sprint syntax: reference itype-name\n+      --  Sprint syntax: reference itype-name\n \n       --  N_Itype_Reference\n       --  Sloc points to the node generating the reference"}]}