{"sha": "822baa84c86a39c89b6f066210d645f36f4f3eee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIyYmFhODRjODZhMzljODliNmYwNjYyMTBkNjQ1ZjM2ZjRmM2VlZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-12-05T14:14:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-12-05T14:14:01Z"}, "message": "c-typeck.c (output_init_element): Call digest_init just once...\n\n\t* c-typeck.c (output_init_element): Call digest_init\n\tjust once, not in each if branch and check its return value for\n\terror_mark_node.\n\n\t* gcc.dg/noncompile/20011025-1.c: New test.\n\nFrom-SVN: r47673", "tree": {"sha": "8e8b72268fc13ddf7e7db4761e72cef861989bf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e8b72268fc13ddf7e7db4761e72cef861989bf7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/822baa84c86a39c89b6f066210d645f36f4f3eee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822baa84c86a39c89b6f066210d645f36f4f3eee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/822baa84c86a39c89b6f066210d645f36f4f3eee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822baa84c86a39c89b6f066210d645f36f4f3eee/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3315b5399cd6a3c23f2640abbb32d04cfbaa5c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3315b5399cd6a3c23f2640abbb32d04cfbaa5c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3315b5399cd6a3c23f2640abbb32d04cfbaa5c1"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "e2485c52f2247b25f93a1d33853c8acd698673a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822baa84c86a39c89b6f066210d645f36f4f3eee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822baa84c86a39c89b6f066210d645f36f4f3eee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=822baa84c86a39c89b6f066210d645f36f4f3eee", "patch": "@@ -1,3 +1,9 @@\n+2001-12-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-typeck.c (output_init_element): Call digest_init\n+\tjust once, not in each if branch and check its return value for\n+\terror_mark_node.\n+\n 2001-12-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-decl.c (pushdecl): Only increase n_incomplete if pushed decl's"}, {"sha": "56775049a1ca2d1c9647093cd7e13d150655d18b", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822baa84c86a39c89b6f066210d645f36f4f3eee/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822baa84c86a39c89b6f066210d645f36f4f3eee/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=822baa84c86a39c89b6f066210d645f36f4f3eee", "patch": "@@ -4701,7 +4701,7 @@ digest_init (type, init, require_constant, constructor_constant)\n \n   if (type == error_mark_node\n       || init == error_mark_node\n-      || TREE_TYPE (init)  == error_mark_node)\n+      || TREE_TYPE (init) == error_mark_node)\n     return error_mark_node;\n \n   /* Strip NON_LVALUE_EXPRs since we aren't using as an lvalue.  */\n@@ -6267,6 +6267,8 @@ output_init_element (value, type, field, pending)\n \t\t  || TREE_CHAIN (field)))))\n     return;\n \n+  value = digest_init (type, value, require_constant_value,\n+\t\t       require_constant_elements);\n   if (value == error_mark_node)\n     {\n       constructor_erroneous = 1;\n@@ -6283,9 +6285,7 @@ output_init_element (value, type, field, pending)\n \t  && tree_int_cst_lt (field, constructor_unfilled_index))\n \tset_nonincremental_init ();\n \n-      add_pending_init (field,\n-\t\t\tdigest_init (type, value, require_constant_value, \n-\t\t\t\t     require_constant_elements));\n+      add_pending_init (field, value);\n       return;\n     }\n   else if (TREE_CODE (constructor_type) == RECORD_TYPE\n@@ -6311,9 +6311,7 @@ output_init_element (value, type, field, pending)\n \t    }\n \t}\n \n-      add_pending_init (field,\n-\t\t\tdigest_init (type, value, require_constant_value, \n-\t\t\t\t     require_constant_elements));\n+      add_pending_init (field, value);\n       return;\n     }\n   else if (TREE_CODE (constructor_type) == UNION_TYPE\n@@ -6332,10 +6330,7 @@ output_init_element (value, type, field, pending)\n   if (field && TREE_CODE (field) == INTEGER_CST)\n     field = copy_node (field);\n   constructor_elements\n-    = tree_cons (field, digest_init (type, value,\n-\t\t\t\t     require_constant_value, \n-\t\t\t\t     require_constant_elements),\n-\t\t constructor_elements);\n+    = tree_cons (field, value, constructor_elements);\n \n   /* Advance the variable that indicates sequential elements output.  */\n   if (TREE_CODE (constructor_type) == ARRAY_TYPE)"}, {"sha": "56b2f089d40c19a5ce6034fa2eea41b801bd3f72", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822baa84c86a39c89b6f066210d645f36f4f3eee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822baa84c86a39c89b6f066210d645f36f4f3eee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=822baa84c86a39c89b6f066210d645f36f4f3eee", "patch": "@@ -2,6 +2,8 @@\n \n \t* gcc.c-torture/compile/20011130-1.c: New test.\n \n+\t* gcc.dg/noncompile/20011025-1.c: New test.\n+\n 2001-12-04  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc.c-torture/execute/20000722-1.x,"}, {"sha": "51e60e5cb9ebda0450d0ab580e3dde4fdfbc0cff", "filename": "gcc/testsuite/gcc.dg/noncompile/20011025-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822baa84c86a39c89b6f066210d645f36f4f3eee/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20011025-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822baa84c86a39c89b6f066210d645f36f4f3eee/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20011025-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20011025-1.c?ref=822baa84c86a39c89b6f066210d645f36f4f3eee", "patch": "@@ -0,0 +1,5 @@\n+double foo [] =\n+{ &bar,\t\t/* { dg-error \"undeclared|is not constant|near init\" } */\n+  (void *) 0 };\t/* { dg-error \"incompatible types|is not constant|near init\" } */\n+double baz [] =\n+{ (void *) 0 };\t/* { dg-error \"incompatible types|is not constant|near init\" } */"}]}