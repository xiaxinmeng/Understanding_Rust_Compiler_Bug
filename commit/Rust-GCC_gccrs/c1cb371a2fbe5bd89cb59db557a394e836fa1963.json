{"sha": "c1cb371a2fbe5bd89cb59db557a394e836fa1963", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFjYjM3MWEyZmJlNWJkODljYjU5ZGI1NTdhMzk0ZTgzNmZhMTk2Mw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2010-08-27T22:08:37Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2010-08-27T22:08:37Z"}, "message": "genautomata.c (gen_regexp_repeat, [...]): Use the string found in vector element 0 rather than the original string when...\n\n\t* genautomata.c (gen_regexp_repeat, gen_regexp_allof,\n\tgen_regexp_oneof, gen_regexp_sequence): Use the string found\n\tin vector element 0 rather than the original string when there's\n\tonly one element.\n\t(gen_regexp): Remove extra semicolon.\n\nFrom-SVN: r163600", "tree": {"sha": "a64de73bb34c3b98eb0d169ec43550d3c838e07f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a64de73bb34c3b98eb0d169ec43550d3c838e07f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1cb371a2fbe5bd89cb59db557a394e836fa1963", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1cb371a2fbe5bd89cb59db557a394e836fa1963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1cb371a2fbe5bd89cb59db557a394e836fa1963", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1cb371a2fbe5bd89cb59db557a394e836fa1963/comments", "author": null, "committer": null, "parents": [{"sha": "b052cbd0cd1c191def281819a3b29ebdf1f635b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b052cbd0cd1c191def281819a3b29ebdf1f635b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b052cbd0cd1c191def281819a3b29ebdf1f635b4"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "a83c84d95c8f39c01c15a4a00ab70359698878b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1cb371a2fbe5bd89cb59db557a394e836fa1963/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1cb371a2fbe5bd89cb59db557a394e836fa1963/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1cb371a2fbe5bd89cb59db557a394e836fa1963", "patch": "@@ -1,3 +1,11 @@\n+2010-08-28  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* genautomata.c (gen_regexp_repeat, gen_regexp_allof,\n+\tgen_regexp_oneof, gen_regexp_sequence): Use the string found\n+\tin vector element 0 rather than the original string when there's\n+\tonly one element.\n+\t(gen_regexp): Remove extra semicolon.\n+\n 2010-08-23  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000-protos.h (rs6000_address_for_fpconvert):"}, {"sha": "ff024b64ff823f525ee30fb686ba263aab71d7ea", "filename": "gcc/genautomata.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1cb371a2fbe5bd89cb59db557a394e836fa1963/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1cb371a2fbe5bd89cb59db557a394e836fa1963/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=c1cb371a2fbe5bd89cb59db557a394e836fa1963", "patch": "@@ -1603,7 +1603,7 @@ gen_regexp_repeat (const char *str)\n       return regexp;\n     }\n   else\n-    return gen_regexp_el (str);\n+    return gen_regexp_el (repeat_vect[0]);\n }\n \n /* Parse reservation STR which possibly contains separator '+'.  */\n@@ -1629,7 +1629,7 @@ gen_regexp_allof (const char *str)\n       return allof;\n     }\n   else\n-    return gen_regexp_repeat (str);\n+    return gen_regexp_repeat (allof_vect[0]);\n }\n \n /* Parse reservation STR which possibly contains separator '|'.  */\n@@ -1655,7 +1655,7 @@ gen_regexp_oneof (const char *str)\n       return oneof;\n     }\n   else\n-    return gen_regexp_allof (str);\n+    return gen_regexp_allof (oneof_vect[0]);\n }\n \n /* Parse reservation STR which possibly contains separator ','.  */\n@@ -1680,15 +1680,15 @@ gen_regexp_sequence (const char *str)\n       return sequence;\n     }\n   else\n-    return gen_regexp_oneof (str);\n+    return gen_regexp_oneof (sequence_vect[0]);\n }\n \n /* Parse construction reservation STR.  */\n static regexp_t\n gen_regexp (const char *str)\n {\n   reserv_str = str;\n-  return gen_regexp_sequence (str);;\n+  return gen_regexp_sequence (str);\n }\n \n /* Process a DEFINE_RESERVATION."}]}