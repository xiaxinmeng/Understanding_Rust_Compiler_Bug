{"sha": "cae115d6d4552a29efb4ea94363d63bde985b4d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FlMTE1ZDZkNDU1MmEyOWVmYjRlYTk0MzYzZDYzYmRlOTg1YjRkOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-10-22T21:04:02Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-10-22T21:04:02Z"}, "message": "Add wide_int version of inchash::hash::add_wide_int\n\nThis patch adds an inchash hasher for wide_int-based types.\nIt means that hash_tree no longer hashes TREE_INT_CST_EXT_NUNITS,\nbut that was redundant with hashing the type.\n\n2017-10-22  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* inchash.h (inchash::hash::add_wide_int): New function.\n\t* lto-streamer-out.c (hash_tree): Use it.\n\nFrom-SVN: r253988", "tree": {"sha": "971f8140db3ad5996450c01a83b79bf0fe08af00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/971f8140db3ad5996450c01a83b79bf0fe08af00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cae115d6d4552a29efb4ea94363d63bde985b4d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae115d6d4552a29efb4ea94363d63bde985b4d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cae115d6d4552a29efb4ea94363d63bde985b4d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae115d6d4552a29efb4ea94363d63bde985b4d8/comments", "author": null, "committer": null, "parents": [{"sha": "449e9a33887046acec46f373f96900fc07735355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/449e9a33887046acec46f373f96900fc07735355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/449e9a33887046acec46f373f96900fc07735355"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "47f93c49f4b923f982656734bfa23b8315876cc9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae115d6d4552a29efb4ea94363d63bde985b4d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae115d6d4552a29efb4ea94363d63bde985b4d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cae115d6d4552a29efb4ea94363d63bde985b4d8", "patch": "@@ -1,3 +1,8 @@\n+2017-10-22  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* inchash.h (inchash::hash::add_wide_int): New function.\n+\t* lto-streamer-out.c (hash_tree): Use it.\n+\n 2017-10-22  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* inchash.h (inchash::hash::add_wide_int): Rename to..."}, {"sha": "73930c2bd8a4b23dded03213ce67fe57f5f2dc36", "filename": "gcc/inchash.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae115d6d4552a29efb4ea94363d63bde985b4d8/gcc%2Finchash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae115d6d4552a29efb4ea94363d63bde985b4d8/gcc%2Finchash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finchash.h?ref=cae115d6d4552a29efb4ea94363d63bde985b4d8", "patch": "@@ -63,6 +63,15 @@ class hash\n     val = iterative_hash_host_wide_int (v, val);\n   }\n \n+  /* Add wide_int-based value V.  */\n+  template<typename T>\n+  void add_wide_int (const generic_wide_int<T> &x)\n+  {\n+    add_int (x.get_len ());\n+    for (unsigned i = 0; i < x.get_len (); i++)\n+      add_hwi (x.elt (i));\n+  }\n+\n   /* Hash in pointer PTR.  */\n   void add_ptr (const void *ptr)\n   {"}, {"sha": "554f9cc9f01b5c9c39908a40f23ce3448c073426", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae115d6d4552a29efb4ea94363d63bde985b4d8/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae115d6d4552a29efb4ea94363d63bde985b4d8/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=cae115d6d4552a29efb4ea94363d63bde985b4d8", "patch": "@@ -1028,13 +1028,7 @@ hash_tree (struct streamer_tree_cache_d *cache, hash_map<tree, hashval_t> *map,\n   hstate.commit_flag ();\n \n   if (CODE_CONTAINS_STRUCT (code, TS_INT_CST))\n-    {\n-      int i;\n-      hstate.add_hwi (TREE_INT_CST_NUNITS (t));\n-      hstate.add_hwi (TREE_INT_CST_EXT_NUNITS (t));\n-      for (i = 0; i < TREE_INT_CST_NUNITS (t); i++)\n-\thstate.add_hwi (TREE_INT_CST_ELT (t, i));\n-    }\n+    hstate.add_wide_int (wi::to_widest (t));\n \n   if (CODE_CONTAINS_STRUCT (code, TS_REAL_CST))\n     {"}]}