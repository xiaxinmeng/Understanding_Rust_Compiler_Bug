{"sha": "b9b79ba4264cf635fbd3cc66530c5eb83d3ce568", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjliNzliYTQyNjRjZjYzNWZiZDNjYzY2NTMwYzVlYjgzZDNjZTU2OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-06-03T07:57:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-06-03T07:57:13Z"}, "message": "re PR middle-end/66375 (wrong code at -O2 and -O3 on x86_64-linux-gnu)\n\n2015-06-03  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/66375\n\t* tree-scalar-evolution.c (follow_ssa_edge_binary): First\n\tadd to the evolution before following SSA edges.\n\n\t* gcc.dg/torture/pr66375.c: New testcase.\n\nFrom-SVN: r224060", "tree": {"sha": "1c1bfc05a918621344364216fc91756fa3382cc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c1bfc05a918621344364216fc91756fa3382cc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9b79ba4264cf635fbd3cc66530c5eb83d3ce568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9b79ba4264cf635fbd3cc66530c5eb83d3ce568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9b79ba4264cf635fbd3cc66530c5eb83d3ce568", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9b79ba4264cf635fbd3cc66530c5eb83d3ce568/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e185f450b8933bcf96e08ddfb15df842e55452d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e185f450b8933bcf96e08ddfb15df842e55452d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e185f450b8933bcf96e08ddfb15df842e55452d9"}], "stats": {"total": 74, "additions": 48, "deletions": 26}, "files": [{"sha": "06dda145fd6243383ca5ff718c36e197f84ad63d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9b79ba4264cf635fbd3cc66530c5eb83d3ce568/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9b79ba4264cf635fbd3cc66530c5eb83d3ce568/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9b79ba4264cf635fbd3cc66530c5eb83d3ce568", "patch": "@@ -1,3 +1,9 @@\n+2015-06-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66375\n+\t* tree-scalar-evolution.c (follow_ssa_edge_binary): First\n+\tadd to the evolution before following SSA edges.\n+\n 2015-06-03  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-ssa-loop-ivopts.c (dump_iv): New parameter."}, {"sha": "9fd5941e979772378c35129fc384c532ee7e51cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9b79ba4264cf635fbd3cc66530c5eb83d3ce568/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9b79ba4264cf635fbd3cc66530c5eb83d3ce568/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b9b79ba4264cf635fbd3cc66530c5eb83d3ce568", "patch": "@@ -1,3 +1,8 @@\n+2015-06-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66375\n+\t* gcc.dg/torture/pr66375.c: New testcase.\n+\n 2015-06-03  Bin Cheng  <bin.cheng@arm.com>\n \n \t* gcc.dg/tree-ssa/pr65447.c: Increase searching number."}, {"sha": "2447b43c17b62852981695f68759b892187fac57", "filename": "gcc/testsuite/gcc.dg/torture/pr66375.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9b79ba4264cf635fbd3cc66530c5eb83d3ce568/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66375.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9b79ba4264cf635fbd3cc66530c5eb83d3ce568/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66375.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66375.c?ref=b9b79ba4264cf635fbd3cc66530c5eb83d3ce568", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do run } */\n+\n+int a;\n+extern void abort (void);\n+int main ()\n+{\n+  int c = 0;\n+  for (; a < 13; ++a)\n+    c = (signed char)c - 11;\n+  if (c != 113)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "3a2c284b5826777daf53a453ac2288f408c97fe4", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 24, "deletions": 26, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9b79ba4264cf635fbd3cc66530c5eb83d3ce568/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9b79ba4264cf635fbd3cc66530c5eb83d3ce568/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=b9b79ba4264cf635fbd3cc66530c5eb83d3ce568", "patch": "@@ -958,27 +958,25 @@ follow_ssa_edge_binary (struct loop *loop, gimple at_stmt,\n \t      limit++;\n \n \t      evol = *evolution_of_loop;\n-\t      res = follow_ssa_edge\n-\t\t(loop, SSA_NAME_DEF_STMT (rhs0), halting_phi, &evol, limit);\n-\n-\t      if (res == t_true)\n-\t\t*evolution_of_loop = add_to_evolution\n+\t      evol = add_to_evolution\n \t\t  (loop->num,\n \t\t   chrec_convert (type, evol, at_stmt),\n \t\t   code, rhs1, at_stmt);\n-\n+\t      res = follow_ssa_edge\n+\t\t(loop, SSA_NAME_DEF_STMT (rhs0), halting_phi, &evol, limit);\n+\t      if (res == t_true)\n+\t\t*evolution_of_loop = evol;\n \t      else if (res == t_false)\n \t\t{\n+\t\t  *evolution_of_loop = add_to_evolution\n+\t\t      (loop->num,\n+\t\t       chrec_convert (type, *evolution_of_loop, at_stmt),\n+\t\t       code, rhs0, at_stmt);\n \t\t  res = follow_ssa_edge\n \t\t    (loop, SSA_NAME_DEF_STMT (rhs1), halting_phi,\n \t\t     evolution_of_loop, limit);\n-\n \t\t  if (res == t_true)\n-\t\t    *evolution_of_loop = add_to_evolution\n-\t\t      (loop->num,\n-\t\t       chrec_convert (type, *evolution_of_loop, at_stmt),\n-\t\t       code, rhs0, at_stmt);\n-\n+\t\t    ;\n \t\t  else if (res == t_dont_know)\n \t\t    *evolution_of_loop = chrec_dont_know;\n \t\t}\n@@ -991,15 +989,15 @@ follow_ssa_edge_binary (struct loop *loop, gimple at_stmt,\n \t    {\n \t      /* Match an assignment under the form:\n \t\t \"a = b + ...\".  */\n+\t      *evolution_of_loop = add_to_evolution\n+\t\t  (loop->num, chrec_convert (type, *evolution_of_loop,\n+\t\t\t\t\t     at_stmt),\n+\t\t   code, rhs1, at_stmt);\n \t      res = follow_ssa_edge\n \t\t(loop, SSA_NAME_DEF_STMT (rhs0), halting_phi,\n \t\t evolution_of_loop, limit);\n \t      if (res == t_true)\n-\t\t*evolution_of_loop = add_to_evolution\n-\t\t  (loop->num, chrec_convert (type, *evolution_of_loop,\n-\t\t\t\t\t     at_stmt),\n-\t\t   code, rhs1, at_stmt);\n-\n+\t\t;\t\n \t      else if (res == t_dont_know)\n \t\t*evolution_of_loop = chrec_dont_know;\n \t    }\n@@ -1009,15 +1007,15 @@ follow_ssa_edge_binary (struct loop *loop, gimple at_stmt,\n \t{\n \t  /* Match an assignment under the form:\n \t     \"a = ... + c\".  */\n+\t  *evolution_of_loop = add_to_evolution\n+\t      (loop->num, chrec_convert (type, *evolution_of_loop,\n+\t\t\t\t\t at_stmt),\n+\t       code, rhs0, at_stmt);\n \t  res = follow_ssa_edge\n \t    (loop, SSA_NAME_DEF_STMT (rhs1), halting_phi,\n \t     evolution_of_loop, limit);\n \t  if (res == t_true)\n-\t    *evolution_of_loop = add_to_evolution\n-\t      (loop->num, chrec_convert (type, *evolution_of_loop,\n-\t\t\t\t\t at_stmt),\n-\t       code, rhs0, at_stmt);\n-\n+\t    ;\n \t  else if (res == t_dont_know)\n \t    *evolution_of_loop = chrec_dont_know;\n \t}\n@@ -1042,13 +1040,13 @@ follow_ssa_edge_binary (struct loop *loop, gimple at_stmt,\n \t  if (TREE_CODE (rhs1) == SSA_NAME)\n \t    limit++;\n \n+\t  *evolution_of_loop = add_to_evolution\n+\t      (loop->num, chrec_convert (type, *evolution_of_loop, at_stmt),\n+\t       MINUS_EXPR, rhs1, at_stmt);\n \t  res = follow_ssa_edge (loop, SSA_NAME_DEF_STMT (rhs0), halting_phi,\n \t\t\t\t evolution_of_loop, limit);\n \t  if (res == t_true)\n-\t    *evolution_of_loop = add_to_evolution\n-\t      (loop->num, chrec_convert (type, *evolution_of_loop, at_stmt),\n-\t       MINUS_EXPR, rhs1, at_stmt);\n-\n+\t    ;\n \t  else if (res == t_dont_know)\n \t    *evolution_of_loop = chrec_dont_know;\n \t}"}]}