{"sha": "54aefc3672508e39831436eb84956f93d81713db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRhZWZjMzY3MjUwOGUzOTgzMTQzNmViODQ5NTZmOTNkODE3MTNkYg==", "commit": {"author": {"name": "Jie Zhang", "email": "jie.zhang@analog.com", "date": "2006-05-31T15:42:22Z"}, "committer": {"name": "Jie Zhang", "email": "jiez@gcc.gnu.org", "date": "2006-05-31T15:42:22Z"}, "message": "bfin.c (bfin_delegitimize_address): New.\n\n\t* config/bfin/bfin.c (bfin_delegitimize_address): New.\n\t(TARGET_DELEGITIMIZE_ADDRESS): Define.\n\nFrom-SVN: r114269", "tree": {"sha": "a9069b55638049c21ca6da5cfc324084d38ba543", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9069b55638049c21ca6da5cfc324084d38ba543"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54aefc3672508e39831436eb84956f93d81713db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54aefc3672508e39831436eb84956f93d81713db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54aefc3672508e39831436eb84956f93d81713db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54aefc3672508e39831436eb84956f93d81713db/comments", "author": {"login": "jiez-adi", "id": 103514486, "node_id": "U_kgDOBiuBdg", "avatar_url": "https://avatars.githubusercontent.com/u/103514486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiez-adi", "html_url": "https://github.com/jiez-adi", "followers_url": "https://api.github.com/users/jiez-adi/followers", "following_url": "https://api.github.com/users/jiez-adi/following{/other_user}", "gists_url": "https://api.github.com/users/jiez-adi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiez-adi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiez-adi/subscriptions", "organizations_url": "https://api.github.com/users/jiez-adi/orgs", "repos_url": "https://api.github.com/users/jiez-adi/repos", "events_url": "https://api.github.com/users/jiez-adi/events{/privacy}", "received_events_url": "https://api.github.com/users/jiez-adi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c3c36836e0f604aa3f65fb5d0462ba1970b5b74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3c36836e0f604aa3f65fb5d0462ba1970b5b74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c3c36836e0f604aa3f65fb5d0462ba1970b5b74"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "fb4974c7a6e0445a05c17cec260ade06ff6f4277", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54aefc3672508e39831436eb84956f93d81713db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54aefc3672508e39831436eb84956f93d81713db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54aefc3672508e39831436eb84956f93d81713db", "patch": "@@ -1,3 +1,8 @@\n+2006-05-31  Jie Zhang  <jie.zhang@analog.com>\n+\n+\t* config/bfin/bfin.c (bfin_delegitimize_address): New.\n+\t(TARGET_DELEGITIMIZE_ADDRESS): Define.\n+\n 2006-05-31  Daniel Jacobowitz  <dan@codesourcery.com>\n \n \t* Makefile.in (CATALOGS): Add po/ prefix."}, {"sha": "288e32703a3f16ab115ac62b73bceb3946fadfc5", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54aefc3672508e39831436eb84956f93d81713db/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54aefc3672508e39831436eb84956f93d81713db/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=54aefc3672508e39831436eb84956f93d81713db", "patch": "@@ -1030,6 +1030,25 @@ legitimize_address (rtx x ATTRIBUTE_UNUSED, rtx oldx ATTRIBUTE_UNUSED,\n   return NULL_RTX;\n }\n \n+static rtx\n+bfin_delegitimize_address (rtx orig_x)\n+{\n+  rtx x = orig_x, y;\n+\n+  if (GET_CODE (x) != MEM)\n+    return orig_x;\n+\n+  x = XEXP (x, 0);\n+  if (GET_CODE (x) == PLUS\n+      && GET_CODE (XEXP (x, 1)) == UNSPEC\n+      && XINT (XEXP (x, 1), 1) == UNSPEC_MOVE_PIC\n+      && GET_CODE (XEXP (x, 0)) == REG\n+      && REGNO (XEXP (x, 0)) == PIC_OFFSET_TABLE_REGNUM)\n+    return XVECEXP (XEXP (x, 1), 0, 0);\n+\n+  return orig_x;\n+}\n+\n /* This predicate is used to compute the length of a load/store insn.\n    OP is a MEM rtx, we return nonzero if its addressing mode requires a\n    32 bit instruction.  */\n@@ -3643,4 +3662,7 @@ bfin_expand_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n #undef TARGET_SECONDARY_RELOAD\n #define TARGET_SECONDARY_RELOAD bfin_secondary_reload\n \n+#undef TARGET_DELEGITIMIZE_ADDRESS\n+#define TARGET_DELEGITIMIZE_ADDRESS bfin_delegitimize_address\n+\n struct gcc_target targetm = TARGET_INITIALIZER;"}]}