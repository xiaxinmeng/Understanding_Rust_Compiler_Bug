{"sha": "101380a8394c22a7a2ea70de2060ee93716156e2", "node_id": "C_kwDOANBUbNoAKDEwMTM4MGE4Mzk0YzIyYTdhMmVhNzBkZTIwNjBlZTkzNzE2MTU2ZTI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-04-08T18:21:42Z"}, "committer": {"name": "Jeff Law", "email": "jlaw@ventanamicro", "date": "2023-04-08T18:24:45Z"}, "message": "PR tree-optimization/109392\n\nIf we have an object with SSA_NAME_OCCURS_IN_ABNORMAL_PHI, then\nmaybe_push_res_to_seq may fail.  Directly build the extraction\nfor that case.\n\n\tPR tree-optimization/109392\n\ngcc/\n\t* tree-vect-generic.cc (tree_vec_extract): Handle failure\n\tof maybe_push_res_to_seq better.\n\ngcc/testsuite/\n\n\t* gcc.dg/pr109392.c: New test.", "tree": {"sha": "08eb86557b5c9db9bbbb6e90f693e39e5c4c16d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08eb86557b5c9db9bbbb6e90f693e39e5c4c16d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/101380a8394c22a7a2ea70de2060ee93716156e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/101380a8394c22a7a2ea70de2060ee93716156e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/101380a8394c22a7a2ea70de2060ee93716156e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/101380a8394c22a7a2ea70de2060ee93716156e2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a99f6c7f0bafcfc856756c0eb9e4470dfa909341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a99f6c7f0bafcfc856756c0eb9e4470dfa909341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a99f6c7f0bafcfc856756c0eb9e4470dfa909341"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "e5bd9d440fa03e937467d640a6245430ed69039c", "filename": "gcc/testsuite/gcc.dg/pr109392.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101380a8394c22a7a2ea70de2060ee93716156e2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr109392.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101380a8394c22a7a2ea70de2060ee93716156e2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr109392.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr109392.c?ref=101380a8394c22a7a2ea70de2060ee93716156e2", "patch": "@@ -0,0 +1,15 @@\n+/* PR tree-optimization/109392 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wno-psabi\" } */\n+\n+typedef short __attribute__ ((__vector_size__ (64))) V;\n+V v, w;\n+void bar (void) __attribute__((returns_twice));\n+\n+V\n+foo (V a, V b)\n+{\n+  bar ();\n+  b &= v < b;\n+  return (V) { foo (b, w)[3], (V) {}[3] };\n+}"}, {"sha": "445da53292e9d1d2db62ca962fc017bb0e6c9bbe", "filename": "gcc/tree-vect-generic.cc", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101380a8394c22a7a2ea70de2060ee93716156e2/gcc%2Ftree-vect-generic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101380a8394c22a7a2ea70de2060ee93716156e2/gcc%2Ftree-vect-generic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.cc?ref=101380a8394c22a7a2ea70de2060ee93716156e2", "patch": "@@ -174,7 +174,16 @@ tree_vec_extract (gimple_stmt_iterator *gsi, tree type,\n   opr.resimplify (NULL, follow_all_ssa_edges);\n   gimple_seq stmts = NULL;\n   tree res = maybe_push_res_to_seq (&opr, &stmts);\n-  gcc_assert (res);\n+  if (!res)\n+    {\n+      /* This can happen if SSA_NAME_OCCURS_IN_ABNORMAL_PHI are\n+\t used.  Build BIT_FIELD_REF manually otherwise.  */\n+      t = build3 (BIT_FIELD_REF, type, t, bitsize, bitpos);\n+      res = make_ssa_name (type);\n+      gimple *g = gimple_build_assign (res, t);\n+      gsi_insert_before (gsi, g, GSI_SAME_STMT);\n+      return res;\n+    }\n   gsi_insert_seq_before (gsi, stmts, GSI_SAME_STMT);\n   return res;\n }"}]}