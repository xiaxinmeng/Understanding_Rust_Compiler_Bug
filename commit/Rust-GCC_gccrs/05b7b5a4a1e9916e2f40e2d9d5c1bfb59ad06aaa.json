{"sha": "05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDViN2I1YTRhMWU5OTE2ZTJmNDBlMmQ5ZDVjMWJmYjU5YWQwNmFhYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-04-27T12:46:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-04-27T12:46:58Z"}, "message": "tree-ssa-dom.c (record_equivalences_from_phis): Valueize PHI arg.\n\n2015-04-27  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-dom.c (record_equivalences_from_phis): Valueize PHI arg.\n\t(record_equivalences_from_stmt): Valueize rhs.\n\t(record_equality): Canonicalize x and y order via\n\ttree_swap_operands_p.  Do not swap operands for same loop depth.\n\n\t* gcc.target/i386/pr65217.c: XFAIL.\n\nFrom-SVN: r222463", "tree": {"sha": "912db8bb1bb006f1037a916c025b4ce337b48a91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/912db8bb1bb006f1037a916c025b4ce337b48a91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "991607ab258cae68d0f1fff0de15a15583892f15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/991607ab258cae68d0f1fff0de15a15583892f15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/991607ab258cae68d0f1fff0de15a15583892f15"}], "stats": {"total": 56, "additions": 42, "deletions": 14}, "files": [{"sha": "8f76eb645fdbcea7466885bf9e5cf98e02bf39d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa", "patch": "@@ -1,3 +1,10 @@\n+2015-04-27  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-dom.c (record_equivalences_from_phis): Valueize PHI arg.\n+\t(record_equivalences_from_stmt): Valueize rhs.\n+\t(record_equality): Canonicalize x and y order via\n+\ttree_swap_operands_p.  Do not swap operands for same loop depth.\n+\n 2015-04-27  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/65296"}, {"sha": "c44dc28440db906b0f5ee4ab22083d9a21f1dac3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa", "patch": "@@ -1,3 +1,7 @@\n+2015-04-27  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.target/i386/pr65217.c: XFAIL.\n+\n 2015-04-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/65875"}, {"sha": "3f495b21f29a89906511eae0237f1ceca7083702", "filename": "gcc/testsuite/gcc.target/i386/pr65217.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65217.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65217.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65217.c?ref=05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O\" } */\n-/* { dg-final { scan-assembler-not \"negl\" } } */\n-/* { dg-final { scan-assembler-not \"andl\" } } */\n+/* { dg-final { scan-assembler-not \"negl\" { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-not \"andl\" { xfail *-*-* } } } */\n \n int \n test(int n)"}, {"sha": "a67b4e447ac45c92008a656c99bb043c4dc15d52", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 29, "deletions": 12, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=05b7b5a4a1e9916e2f40e2d9d5c1bfb59ad06aaa", "patch": "@@ -1519,6 +1519,13 @@ record_equivalences_from_phis (basic_block bb)\n \t  if (lhs == t)\n \t    continue;\n \n+\t  /* Valueize t.  */\n+\t  if (TREE_CODE (t) == SSA_NAME)\n+\t    {\n+\t      tree tmp = SSA_NAME_VALUE (t);\n+\t      t = tmp ? tmp : t;\n+\t    }\n+\n \t  /* If we have not processed an alternative yet, then set\n \t     RHS to this alternative.  */\n \t  if (rhs == NULL)\n@@ -1752,6 +1759,9 @@ record_equality (tree x, tree y)\n {\n   tree prev_x = NULL, prev_y = NULL;\n \n+  if (tree_swap_operands_p (x, y, false))\n+    std::swap (x, y);\n+\n   if (TREE_CODE (x) == SSA_NAME)\n     prev_x = SSA_NAME_VALUE (x);\n   if (TREE_CODE (y) == SSA_NAME)\n@@ -1766,7 +1776,7 @@ record_equality (tree x, tree y)\n   else if (is_gimple_min_invariant (x)\n \t   /* ???  When threading over backedges the following is important\n \t      for correctness.  See PR61757.  */\n-\t   || (loop_depth_of_name (x) <= loop_depth_of_name (y)))\n+\t   || (loop_depth_of_name (x) < loop_depth_of_name (y)))\n     prev_x = x, x = y, y = prev_x, prev_x = prev_y;\n   else if (prev_x && is_gimple_min_invariant (prev_x))\n     x = y, y = prev_x, prev_x = prev_y;\n@@ -2128,18 +2138,25 @@ record_equivalences_from_stmt (gimple stmt, int may_optimize_p)\n       if (may_optimize_p\n \t  && (TREE_CODE (rhs) == SSA_NAME\n \t      || is_gimple_min_invariant (rhs)))\n-      {\n-\tif (dump_file && (dump_flags & TDF_DETAILS))\n-\t  {\n-\t    fprintf (dump_file, \"==== ASGN \");\n-\t    print_generic_expr (dump_file, lhs, 0);\n-\t    fprintf (dump_file, \" = \");\n-\t    print_generic_expr (dump_file, rhs, 0);\n-\t    fprintf (dump_file, \"\\n\");\n-\t  }\n+\t{\n+\t  /* Valueize rhs.  */\n+\t  if (TREE_CODE (rhs) == SSA_NAME)\n+\t    {\n+\t      tree tmp = SSA_NAME_VALUE (rhs);\n+\t      rhs = tmp ? tmp : rhs;\n+\t    }\n \n-\tset_ssa_name_value (lhs, rhs);\n-      }\n+\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t    {\n+\t      fprintf (dump_file, \"==== ASGN \");\n+\t      print_generic_expr (dump_file, lhs, 0);\n+\t      fprintf (dump_file, \" = \");\n+\t      print_generic_expr (dump_file, rhs, 0);\n+\t      fprintf (dump_file, \"\\n\");\n+\t    }\n+\n+\t  set_ssa_name_value (lhs, rhs);\n+\t}\n     }\n \n   /* Make sure we can propagate &x + CST.  */"}]}