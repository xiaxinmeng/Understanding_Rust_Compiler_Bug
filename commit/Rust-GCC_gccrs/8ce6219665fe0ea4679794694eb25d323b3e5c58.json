{"sha": "8ce6219665fe0ea4679794694eb25d323b3e5c58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNlNjIxOTY2NWZlMGVhNDY3OTc5NDY5NGViMjVkMzIzYjNlNWM1OA==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-10-20T16:27:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-10-20T16:27:32Z"}, "message": "[multiple changes]\n\n2017-10-20  Bob Duff  <duff@adacore.com>\n\n\t* sinfo.ads: Fix a comment typo.\n\n2017-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst (-flto): Add\n\twarning against usage in conjunction with -gnatn.\n\t(-fdump-xref): Delete entry.\n\t* doc/gnat_ugn/gnat_utility_programs.rst (--ext): Remove mention of\n\t-fdump-xref switch.\n\t* gnat_ugn.texi: Regenerate.\n\n2017-10-20  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_type.adb, exp_util.adb, sem_util.adb, sem_dim.adb, sem_elab.adb:\n\tMinor reformatting.\n\nFrom-SVN: r253947", "tree": {"sha": "308065f0ee19f7aa1736b326a54fff74b3fdc450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/308065f0ee19f7aa1736b326a54fff74b3fdc450"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ce6219665fe0ea4679794694eb25d323b3e5c58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce6219665fe0ea4679794694eb25d323b3e5c58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ce6219665fe0ea4679794694eb25d323b3e5c58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce6219665fe0ea4679794694eb25d323b3e5c58/comments", "author": null, "committer": null, "parents": [{"sha": "5664fd68a116fdceb90f2c73fc2f90f75cb84f8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5664fd68a116fdceb90f2c73fc2f90f75cb84f8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5664fd68a116fdceb90f2c73fc2f90f75cb84f8f"}], "stats": {"total": 82, "additions": 41, "deletions": 41}, "files": [{"sha": "e9822cbb06d2f4cfa4e9b0a7023a68e67673eff9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8ce6219665fe0ea4679794694eb25d323b3e5c58", "patch": "@@ -1,3 +1,21 @@\n+2017-10-20  Bob Duff  <duff@adacore.com>\n+\n+\t* sinfo.ads: Fix a comment typo.\n+\n+2017-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst (-flto): Add\n+\twarning against usage in conjunction with -gnatn.\n+\t(-fdump-xref): Delete entry.\n+\t* doc/gnat_ugn/gnat_utility_programs.rst (--ext): Remove mention of\n+\t-fdump-xref switch.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2017-10-20  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_type.adb, exp_util.adb, sem_util.adb, sem_dim.adb, sem_elab.adb:\n+\tMinor reformatting.\n+\n 2017-10-20  Yannick Moy  <moy@adacore.com>\n \n \t* sem_dim.adb (Analyze_Dimension_Binary_Op): Accept with a warning to"}, {"sha": "b6447d05dd67b20a0d5f3d2befc0a105f739b6dd", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=8ce6219665fe0ea4679794694eb25d323b3e5c58", "patch": "@@ -1243,21 +1243,13 @@ Alphabetical List of All Switches\n   :file:`scos.adb`.\n \n \n-.. index:: -fdump-xref  (gcc)\n-\n-:switch:`-fdump-xref`\n-  Generates cross reference information in GLI files for C and C++ sources.\n-  The GLI files have the same syntax as the ALI files for Ada, and can be used\n-  for source navigation in IDEs and on the command line using e.g. gnatxref\n-  and the :switch:`--ext=gli` switch.\n-\n-\n .. index:: -flto  (gcc)\n \n :switch:`-flto[={n}]`\n   Enables Link Time Optimization. This switch must be used in conjunction\n-  with the traditional :switch:`-Ox` switches and instructs the compiler to\n-  defer most optimizations until the link stage. The advantage of this\n+  with the :switch:`-Ox` switches (but not with the :switch:`-gnatn` switch\n+  since it is a full replacement for the latter) and instructs the compiler\n+  to defer most optimizations until the link stage. The advantage of this\n   approach is that the compiler can do a whole-program analysis and choose\n   the best interprocedural optimization strategy based on a complete view\n   of the program, instead of a fragmentary view with the usual approach."}, {"sha": "855bb8f3d4d64ab418eeb00ef86122173049c869", "filename": "gcc/ada/doc/gnat_ugn/gnat_utility_programs.rst", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst?ref=8ce6219665fe0ea4679794694eb25d323b3e5c58", "patch": "@@ -586,9 +586,9 @@ The following switches are available for ``gnatxref``:\n \n :switch:`--ext={extension}`\n   Specify an alternate ali file extension. The default is ``ali`` and other\n-  extensions (e.g. ``gli`` for C/C++ sources when using :switch:`-fdump-xref`)\n-  may be specified via this switch. Note that if this switch overrides the\n-  default, which means that only the new extension will be considered.\n+  extensions (e.g. ``gli`` for C/C++ sources) may be specified via this switch.\n+  Note that if this switch overrides the default, which means that only the\n+  new extension will be considered.\n \n \n .. index:: --RTS (gnatxref)"}, {"sha": "8fdd8aa82006d8f735de4ca62ceff9b891db4a2a", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=8ce6219665fe0ea4679794694eb25d323b3e5c58", "patch": "@@ -10990,8 +10990,8 @@ package body Exp_Util is\n          Id          : Character;\n          Related_Nod : Node_Id := Empty) return Entity_Id\n       is\n-         Temp_Nam : Name_Id;\n          Temp_Id  : Entity_Id;\n+         Temp_Nam : Name_Id;\n \n       begin\n          --  The context requires an external symbol"}, {"sha": "947506799a5f97c04b011796111ddf580f246448", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=8ce6219665fe0ea4679794694eb25d323b3e5c58", "patch": "@@ -8809,19 +8809,6 @@ in the compiler sources for details in files @code{scos.ads} and\n @code{scos.adb}.\n @end table\n \n-@geindex -fdump-xref (gcc)\n-\n-\n-@table @asis\n-\n-@item @code{-fdump-xref}\n-\n-Generates cross reference information in GLI files for C and C++ sources.\n-The GLI files have the same syntax as the ALI files for Ada, and can be used\n-for source navigation in IDEs and on the command line using e.g. gnatxref\n-and the @code{--ext=gli} switch.\n-@end table\n-\n @geindex -flto (gcc)\n \n \n@@ -8830,8 +8817,9 @@ and the @code{--ext=gli} switch.\n @item @code{-flto[=@emph{n}]}\n \n Enables Link Time Optimization. This switch must be used in conjunction\n-with the traditional @code{-Ox} switches and instructs the compiler to\n-defer most optimizations until the link stage. The advantage of this\n+with the @code{-Ox} switches (but not with the @code{-gnatn} switch\n+since it is a full replacement for the latter) and instructs the compiler\n+to defer most optimizations until the link stage. The advantage of this\n approach is that the compiler can do a whole-program analysis and choose\n the best interprocedural optimization strategy based on a complete view\n of the program, instead of a fragmentary view with the usual approach.\n@@ -17949,9 +17937,9 @@ Do not look for library files in the system default directory.\n @item @code{--ext=@emph{extension}}\n \n Specify an alternate ali file extension. The default is @code{ali} and other\n-extensions (e.g. @code{gli} for C/C++ sources when using @code{-fdump-xref})\n-may be specified via this switch. Note that if this switch overrides the\n-default, which means that only the new extension will be considered.\n+extensions (e.g. @code{gli} for C/C++ sources) may be specified via this switch.\n+Note that if this switch overrides the default, which means that only the\n+new extension will be considered.\n @end table\n \n @geindex --RTS (gnatxref)"}, {"sha": "a271ca559602ea91c521461495099d8e7bcc58da", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=8ce6219665fe0ea4679794694eb25d323b3e5c58", "patch": "@@ -1581,13 +1581,13 @@ package body Sem_Dim is\n                   --  literal is treated as if its dimension matches the type\n                   --  dimension.\n \n-                  elsif Nkind_In (Original_Node (L), N_Real_Literal,\n-                                                     N_Integer_Literal)\n+                  elsif Nkind_In (Original_Node (L), N_Integer_Literal,\n+                                                     N_Real_Literal)\n                   then\n                      Dim_Warning_For_Numeric_Literal (L, Etype (R));\n \n-                  elsif Nkind_In (Original_Node (R), N_Real_Literal,\n-                                                     N_Integer_Literal)\n+                  elsif Nkind_In (Original_Node (R), N_Integer_Literal,\n+                                                     N_Real_Literal)\n                   then\n                      Dim_Warning_For_Numeric_Literal (R, Etype (L));\n "}, {"sha": "8dec4280eb3cbcf94a652ba7cebc7b1f8a6236d6", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=8ce6219665fe0ea4679794694eb25d323b3e5c58", "patch": "@@ -8212,6 +8212,7 @@ package body Sem_Elab is\n       --    Reads of variables\n \n       elsif Is_Suitable_Access (N) then\n+\n          --  Signal any enclosing local exception handlers that the 'Access may\n          --  raise Program_Error due to a failed ABE check when switch -gnatd.o\n          --  (conservative elaboration order for indirect calls) is in effect."}, {"sha": "e2b3afdf898b0c53c7e7cf81e2e556018f11fb24", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=8ce6219665fe0ea4679794694eb25d323b3e5c58", "patch": "@@ -2838,8 +2838,9 @@ package body Sem_Type is\n          return False;\n \n       elsif Nkind (Par) in N_Declaration then\n-         return Nkind (Par) = N_Object_Declaration\n-            and then Present (Corresponding_Generic_Association (Par));\n+         return\n+           Nkind (Par) = N_Object_Declaration\n+             and then Present (Corresponding_Generic_Association (Par));\n \n       elsif Nkind (Par) = N_Object_Renaming_Declaration then\n          return Present (Corresponding_Generic_Association (Par));"}, {"sha": "47d8f4fe56fe26677738daea136cd8fd876b7eef", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=8ce6219665fe0ea4679794694eb25d323b3e5c58", "patch": "@@ -12549,7 +12549,7 @@ package body Sem_Util is\n                            and then Is_Aliased_View (Renamed_Object (E)))))\n \n            or else ((Is_Formal (E) or else Is_Formal_Object (E))\n-                    and then Is_Tagged_Type (Etype (E)))\n+                      and then Is_Tagged_Type (Etype (E)))\n \n            or else (Is_Concurrent_Type (E) and then In_Open_Scopes (E))\n "}, {"sha": "cf220e4e563aef8e84d1df0552f9aa90af91f0e2", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce6219665fe0ea4679794694eb25d323b3e5c58/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=8ce6219665fe0ea4679794694eb25d323b3e5c58", "patch": "@@ -770,7 +770,7 @@ package Sinfo is\n    --  The following flag fields appear in all nodes:\n \n    --  Analyzed\n-   --    This flag is used to indicate that a node (and all its children have\n+   --    This flag is used to indicate that a node (and all its children) have\n    --    been analyzed. It is used to avoid reanalysis of a node that has\n    --    already been analyzed, both for efficiency and functional correctness\n    --    reasons."}]}