{"sha": "17dc903ed36ea0b6189d66a36d36e0c5ab803a7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdkYzkwM2VkMzZlYTBiNjE4OWQ2NmEzNmQzNmUwYzVhYjgwM2E3Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-08-28T02:59:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-08-31T16:17:44Z"}, "message": "c++: use iloc_sentinel in another place\n\nAnother place we can use iloc_sentinel instead of explicitly saving and\nrestoring input_location.\n\ngcc/cp/ChangeLog:\n\n\t* constexpr.c (explain_invalid_constexpr_fn): Use iloc_sentinel.", "tree": {"sha": "4a9758123a645db88cb7e1437474357416455471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a9758123a645db88cb7e1437474357416455471"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17dc903ed36ea0b6189d66a36d36e0c5ab803a7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17dc903ed36ea0b6189d66a36d36e0c5ab803a7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17dc903ed36ea0b6189d66a36d36e0c5ab803a7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17dc903ed36ea0b6189d66a36d36e0c5ab803a7b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9aeadd8c319d5d940fa4dc91a393fc2959d27719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aeadd8c319d5d940fa4dc91a393fc2959d27719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aeadd8c319d5d940fa4dc91a393fc2959d27719"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "45adbab485ab1ace70c99643d52b9f123f051f5b", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dc903ed36ea0b6189d66a36d36e0c5ab803a7b/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dc903ed36ea0b6189d66a36d36e0c5ab803a7b/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=17dc903ed36ea0b6189d66a36d36e0c5ab803a7b", "patch": "@@ -942,7 +942,6 @@ explain_invalid_constexpr_fn (tree fun)\n {\n   static hash_set<tree> *diagnosed;\n   tree body;\n-  location_t save_loc;\n   /* Only diagnose defaulted functions, lambdas, or instantiations.  */\n   if (!DECL_DEFAULTED_FN (fun)\n       && !LAMBDA_TYPE_P (CP_DECL_CONTEXT (fun))\n@@ -957,7 +956,7 @@ explain_invalid_constexpr_fn (tree fun)\n     /* Already explained.  */\n     return;\n \n-  save_loc = input_location;\n+  iloc_sentinel ils = input_location;\n   if (!lambda_static_thunk_p (fun))\n     {\n       /* Diagnostics should completely ignore the static thunk, so leave\n@@ -985,7 +984,6 @@ explain_invalid_constexpr_fn (tree fun)\n \t    cx_check_missing_mem_inits (DECL_CONTEXT (fun), body, true);\n \t}\n     }\n-  input_location = save_loc;\n }\n \n /* Objects of this type represent calls to constexpr functions"}]}