{"sha": "3eb76828b0c258833705e627d67b7c57bbea27c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ViNzY4MjhiMGMyNTg4MzM3MDVlNjI3ZDY3YjdjNTdiYmVhMjdjOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-03-20T02:13:34Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-03-20T02:13:34Z"}, "message": "(gen_attr): Generate prototypes in header file.\n\nFrom-SVN: r3792", "tree": {"sha": "715dc4cc0e200eec9c36329af24d9fac73be38e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/715dc4cc0e200eec9c36329af24d9fac73be38e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3eb76828b0c258833705e627d67b7c57bbea27c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb76828b0c258833705e627d67b7c57bbea27c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eb76828b0c258833705e627d67b7c57bbea27c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb76828b0c258833705e627d67b7c57bbea27c9/comments", "author": null, "committer": null, "parents": [{"sha": "51980b4a2b90f7bf18e19787c9928f9677e9a876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51980b4a2b90f7bf18e19787c9928f9677e9a876", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51980b4a2b90f7bf18e19787c9928f9677e9a876"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "9deb1dcc9b7877f18c9fb7a7158cb8b58529941a", "filename": "gcc/genattr.c", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb76828b0c258833705e627d67b7c57bbea27c9/gcc%2Fgenattr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb76828b0c258833705e627d67b7c57bbea27c9/gcc%2Fgenattr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattr.c?ref=3eb76828b0c258833705e627d67b7c57bbea27c9", "patch": "@@ -30,13 +30,13 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n \n-extern void free ();\n-extern int atoi ();\n-extern rtx read_rtx ();\n+extern void free PROTO((void *));\n+extern int atoi PROTO((char *));\n+extern rtx read_rtx PROTO((FILE *));\n \n-char *xmalloc ();\n+char *xmalloc PROTO((unsigned));\n static void fatal ();\n-void fancy_abort ();\n+void fancy_abort PROTO((void));\n \n /* A range of values.  */\n \n@@ -130,10 +130,10 @@ gen_attr (attr)\n   if (! strcmp (XSTR (attr, 0), \"length\"))\n     {\n       printf (\"extern void init_lengths ();\\n\");\n-      printf (\"extern void shorten_branches ();\\n\");\n-      printf (\"extern int insn_default_length ();\\n\");\n-      printf (\"extern int insn_variable_length_p ();\\n\");\n-      printf (\"extern int insn_current_length ();\\n\\n\");\n+      printf (\"extern void shorten_branches PROTO((rtx));\\n\");\n+      printf (\"extern int insn_default_length PROTO((rtx));\\n\");\n+      printf (\"extern int insn_variable_length_p PROTO((rtx));\\n\");\n+      printf (\"extern int insn_current_length PROTO((rtx));\\n\\n\");\n       printf (\"extern int *insn_addresses;\\n\");\n       printf (\"extern int insn_current_address;\\n\\n\");\n     }\n@@ -152,8 +152,8 @@ write_units (num_units, multiplicity, simultaneity,\n   int i, q_size;\n \n   printf (\"#define INSN_SCHEDULING\\n\\n\");\n-  printf (\"extern int result_ready_cost ();\\n\");\n-  printf (\"extern int function_units_used ();\\n\\n\");\n+  printf (\"extern int result_ready_cost PROTO((rtx));\\n\");\n+  printf (\"extern int function_units_used PROTO((rtx));\\n\\n\");\n   printf (\"extern struct function_unit_desc\\n\");\n   printf (\"{\\n\");\n   printf (\"  char *name;\\n\");\n@@ -275,6 +275,14 @@ from the machine description file `md'.  */\\n\\n\");\n   /* For compatibility, define the attribute `alternative', which is just\n      a reference to the variable `which_alternative'.  */\n \n+  printf(\"#ifndef PROTO\\n\");\n+  printf(\"#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\\n\");\n+  printf(\"#define PROTO(ARGS) ARGS\\n\");\n+  printf(\"#else\\n\");\n+  printf(\"#define PROTO(ARGS) ()\\n\");\n+  printf(\"#endif\\n\");\n+  printf(\"#endif\\n\");\n+\n   printf (\"#define HAVE_ATTR_alternative\\n\");\n   printf (\"#define get_attr_alternative(insn) which_alternative\\n\");\n      \n@@ -296,9 +304,9 @@ from the machine description file `md'.  */\\n\\n\");\n \t  if (! have_delay)\n \t    {\n \t      printf (\"#define DELAY_SLOTS\\n\");\n-\t      printf (\"extern int num_delay_slots ();\\n\");\n-\t      printf (\"extern int eligible_for_delay ();\\n\\n\");\n-\t      printf (\"extern int const_num_delay_slots ();\\n\\n\");\n+\t      printf (\"extern int num_delay_slots PROTO((rtx));\\n\");\n+\t      printf (\"extern int eligible_for_delay PROTO((rtx, int, rtx));\\n\\n\");\n+\t      printf (\"extern int const_num_delay_slots PROTO((rtx));\\n\\n\");\n \t      have_delay = 1;\n \t    }\n "}]}