{"sha": "112eadc76334c1709962ddf47ebf5b11bae685c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEyZWFkYzc2MzM0YzE3MDk5NjJkZGY0N2ViZjViMTFiYWU2ODVjMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-11-18T15:31:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-11-18T15:31:38Z"}, "message": "re PR c++/51150 ([C++11][4.6/4.7 Regression] ICE when result of -> initializes const variable of different type)\n\n/cp\n2011-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51150\n\t* pt.c (tsubst_copy_and_build): Handle FIX_TRUNC_EXPR.\n\n/testsuite\n2011-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51150\n\t* g++.dg/cpp0x/pr51150.C: New.\n\nFrom-SVN: r181478", "tree": {"sha": "23474098ba45504e537d9fb7d27be404fdc1181d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23474098ba45504e537d9fb7d27be404fdc1181d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/112eadc76334c1709962ddf47ebf5b11bae685c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/112eadc76334c1709962ddf47ebf5b11bae685c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/112eadc76334c1709962ddf47ebf5b11bae685c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/112eadc76334c1709962ddf47ebf5b11bae685c1/comments", "author": null, "committer": null, "parents": [{"sha": "39cc8c3d6bc5bd2d202a368bec2770c86497a408", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39cc8c3d6bc5bd2d202a368bec2770c86497a408", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39cc8c3d6bc5bd2d202a368bec2770c86497a408"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "c1d347d02bdf7202ea643e815382ea4acb56dc33", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/112eadc76334c1709962ddf47ebf5b11bae685c1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/112eadc76334c1709962ddf47ebf5b11bae685c1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=112eadc76334c1709962ddf47ebf5b11bae685c1", "patch": "@@ -1,3 +1,8 @@\n+2011-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51150\n+\t* pt.c (tsubst_copy_and_build): Handle FIX_TRUNC_EXPR.\n+\n 2011-11-18  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/51191"}, {"sha": "987b70b7ba498442cab1b225d470975ebcf7fe3a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/112eadc76334c1709962ddf47ebf5b11bae685c1/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/112eadc76334c1709962ddf47ebf5b11bae685c1/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=112eadc76334c1709962ddf47ebf5b11bae685c1", "patch": "@@ -13387,6 +13387,10 @@ tsubst_copy_and_build (tree t,\n       return build_x_unary_op (TREE_CODE (t), RECUR (TREE_OPERAND (t, 0)),\n                                complain);\n \n+    case FIX_TRUNC_EXPR:\n+      return cp_build_unary_op (FIX_TRUNC_EXPR, RECUR (TREE_OPERAND (t, 0)),\n+\t\t\t\t0, complain);\n+\n     case ADDR_EXPR:\n       op1 = TREE_OPERAND (t, 0);\n       if (TREE_CODE (op1) == LABEL_DECL)"}, {"sha": "b22ebc6c861d34e90dd005a5c6f50abdde9fb5dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/112eadc76334c1709962ddf47ebf5b11bae685c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/112eadc76334c1709962ddf47ebf5b11bae685c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=112eadc76334c1709962ddf47ebf5b11bae685c1", "patch": "@@ -1,3 +1,8 @@\n+2011-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51150\n+\t* g++.dg/cpp0x/pr51150.C: New.\n+\n 2011-11-18  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/50605\n@@ -16,7 +21,7 @@\n \n 2011-11-17  Andrew MacLeod  <amacleod@redhat.com>\n \n-\t* gcc.dg/atomic-generic-aux.c (__atomic_compare_exchange): Fail if \n+\t* gcc.dg/atomic-generic-aux.c (__atomic_compare_exchange): Fail if\n \tmemory model parameters don't match expected values.\n \t* gcc.dg/atomic-generic.c: Pass specific memory model parameters to\n \t__atomic_compare_exchange."}, {"sha": "37eb166b43e3d9ae681b3e0d64b6a649af6b8a68", "filename": "gcc/testsuite/g++.dg/cpp0x/pr51150.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/112eadc76334c1709962ddf47ebf5b11bae685c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51150.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/112eadc76334c1709962ddf47ebf5b11bae685c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51150.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51150.C?ref=112eadc76334c1709962ddf47ebf5b11bae685c1", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/51150\n+// { dg-options \"-std=c++0x\" }\n+\n+struct Clock {\n+  double Now();\n+};\n+template <class T> void Foo(Clock* clock) {\n+  const int now = clock->Now();\n+}\n+\n+template void Foo<float>(Clock*);\n+\n+template <class T> void Boo(int val) {\n+  const int now1 = (double)(val);\n+  const int now2 = const_cast<double>(val); // { dg-error \"invalid\" }\n+  const int now3 = static_cast<double>(val);\n+  const int now4 = reinterpret_cast<double>(val); // { dg-error \"invalid\" }\n+}\n+\n+template void Boo<float>(int);"}]}