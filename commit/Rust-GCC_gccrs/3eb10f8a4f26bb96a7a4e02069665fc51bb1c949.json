{"sha": "3eb10f8a4f26bb96a7a4e02069665fc51bb1c949", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ViMTBmOGE0ZjI2YmI5NmE3YTRlMDIwNjk2NjVmYzUxYmIxYzk0OQ==", "commit": {"author": {"name": "Chris Demetriou", "email": "cgd@sibyte.com", "date": "2000-05-18T17:44:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-18T17:44:27Z"}, "message": "configure.in: Test for __g77_integer...\n\n        * configure.in: Test for __g77_integer, __g77_uinteger,\n        __g77_longint, and __g77_ulongint builtin types, rather\n        than mucking around with compiler headers.\n        * configure: Regenerate.\n        * g2c.hin (integer, logical, flag, ftnlen, ftnint): Use\n        __g77_integer rather than autoconfigured value.\n        (uinteger): Use __g77_uinteger rather than autoconfigured value.\n        (longint): Use __g77_longint rather than autoconfigured value.\n        (ulongint): Use __g77_ulongint rather than autoconfigured value.\n\nFrom-SVN: r33990", "tree": {"sha": "c564fe3c25e16c997b7841c43d97cd5453e37297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c564fe3c25e16c997b7841c43d97cd5453e37297"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3eb10f8a4f26bb96a7a4e02069665fc51bb1c949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb10f8a4f26bb96a7a4e02069665fc51bb1c949", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eb10f8a4f26bb96a7a4e02069665fc51bb1c949", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb10f8a4f26bb96a7a4e02069665fc51bb1c949/comments", "author": null, "committer": null, "parents": [{"sha": "fcd4823055f358f830a73e0499683a68c688dc5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcd4823055f358f830a73e0499683a68c688dc5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcd4823055f358f830a73e0499683a68c688dc5b"}], "stats": {"total": 339, "additions": 67, "deletions": 272}, "files": [{"sha": "6d0e6db5b1c19c59d69a29ba01cf4f71cff8aaab", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb10f8a4f26bb96a7a4e02069665fc51bb1c949/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb10f8a4f26bb96a7a4e02069665fc51bb1c949/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=3eb10f8a4f26bb96a7a4e02069665fc51bb1c949", "patch": "@@ -1,3 +1,15 @@\n+2000-05-18  Chris Demetriou  <cgd@sibyte.com>\n+\n+\t* configure.in: Test for __g77_integer, __g77_uinteger,\n+\t__g77_longint, and __g77_ulongint builtin types, rather\n+\tthan mucking around with compiler headers.\n+\t* configure: Regenerate.\n+\t* g2c.hin (integer, logical, flag, ftnlen, ftnint): Use\n+\t__g77_integer rather than autoconfigured value.\n+\t(uinteger): Use __g77_uinteger rather than autoconfigured value.\n+\t(longint): Use __g77_longint rather than autoconfigured value.\n+\t(ulongint): Use __g77_ulongint rather than autoconfigured value.\n+\n Sun Mar 12 20:12;30 2000  Toon Moene  <toon@moene.indiv.nluug.nl>\n \tBased on work done by David M. Gay (Bell Labs)\n \n@@ -185,9 +197,9 @@ Sat Apr 24 11:02:48 1999  Craig Burley  <craig@jcb-sc.com>\n Sat Apr 17 17:33:30 1999  Craig Burley  <craig@jcb-sc.com>\n \n \tFrom H.J. Lu <hjl@gnu.org>:\n-        * Makefile.in (s-libi77): Depend on i77.\n-        (s-libf77): Depend on i77.\n-        (s-libu77): Depend on u77.\n+\t* Makefile.in (s-libi77): Depend on i77.\n+\t(s-libf77): Depend on i77.\n+\t(s-libu77): Depend on u77.\n \n Mon Apr 12 21:38:14 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \t\n@@ -216,11 +228,11 @@ Wed Mar 31 13:50:24 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure: Rebuilt.\n \n-        * configure.in: Fix integer size tests: sanity check first; search\n-        toplevel include dir (from Rainer Orth); only mess with ac_cpp\n-        once; use -DIN_GCC -DHAVE_CONFIG_H.\n+\t* configure.in: Fix integer size tests: sanity check first; search\n+\ttoplevel include dir (from Rainer Orth); only mess with ac_cpp\n+\tonce; use -DIN_GCC -DHAVE_CONFIG_H.\n \n-        * configure.in: Use `g77_cv_...', not `f77_cv_...'.\n+\t* configure.in: Use `g77_cv_...', not `f77_cv_...'.\n \n Wed Mar 24 22:41:28 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n "}, {"sha": "a397534e2e4f621153bbd21f732168f489d33eef", "filename": "libf2c/configure", "status": "modified", "additions": 24, "deletions": 155, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb10f8a4f26bb96a7a4e02069665fc51bb1c949/libf2c%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb10f8a4f26bb96a7a4e02069665fc51bb1c949/libf2c%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Fconfigure?ref=3eb10f8a4f26bb96a7a4e02069665fc51bb1c949", "patch": "@@ -1057,171 +1057,42 @@ then the target library, then build with \\`LANGUAGES=f77'.\" 1>&2; exit 1; }\n fi\n \n \n-# We have to firkle with the info in hconfig.h to figure out suitable types\n-# (via com.h).  proj.h and com.h are in gcc/f/, config.h which they need\n-# is in gcc/ and the config files are in gcc/config/.\n-echo $ac_n \"checking f2c integer type\"\"... $ac_c\" 1>&6\n-echo \"configure:1065: checking f2c integer type\" >&5\n-# Set this back later below!\n-late_ac_cpp=$ac_cpp\n-late_cflags=$CFLAGS\n-extra_includes=\"-I$topsrcdir/gcc/f -I$topsrcdir/gcc -I$topsrcdir/include -I$topsrcdir/gcc/config -I$r/gcc\"\n-ac_cpp=\"$late_ac_cpp -DIN_GCC -DHAVE_CONFIG_H $extra_includes\"\n-\n-# The AC_EGREP_CPPs below have been known to fail when the header\n-# path is wrong after things have been moved about; the cpp error status\n-# counts for nothing.  First check that there aren't any errors from\n-# the headers.\n-CFLAGS=\"$CFLAGS -DHAVE_CONFIG_H -DIN_GCC $extra_includes\"\n-cat > conftest.$ac_ext <<EOF\n-#line 1078 \"configure\"\n-#include \"confdefs.h\"\n-#include \"proj.h\"\n-#define FFECOM_DETERMINE_TYPES 1\n-#include \"com.h\"\n-int main() {\n-\n-; return 0; }\n-EOF\n-if { (eval echo configure:1087: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n-  :\n-else\n-  echo \"configure: failed program was:\" >&5\n-  cat conftest.$ac_ext >&5\n-  rm -rf conftest*\n-  { echo \"configure: error: Can't run check for integer sizes -- see config.log\" 1>&2; exit 1; }\n-fi\n-rm -f conftest*\n-CFLAGS=$late_cflags\n-\n-if eval \"test \\\"`echo '$''{'g77_cv_sys_f2cinteger'+set}'`\\\" = set\"; then\n+echo $ac_n \"checking for built-in g77 integer types\"\"... $ac_c\" 1>&6\n+echo \"configure:1062: checking for built-in g77 integer types\" >&5\n+if eval \"test \\\"`echo '$''{'libf2c_cv_has_g77_builtin_types'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n-  echo \"configure:1101: using $ac_cpp\" >&5\n-cat > conftest.$ac_ext <<EOF\n-#line 1103 \"configure\"\n-#include \"confdefs.h\"\n-#include \"proj.h\"\n-#define FFECOM_DETERMINE_TYPES 1\n-#include \"com.h\"\n-#if FFECOM_f2cINTEGER == FFECOM_f2ccodeLONG\n-F2C_INTEGER=long int\n-#elif FFECOM_f2cINTEGER == FFECOM_f2ccodeINT\n-F2C_INTEGER=int\n-#else\n-#  error \"Cannot find a suitable type for F2C_INTEGER\"\n-#endif\n-\n-EOF\n-if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n-  egrep \"F2C_INTEGER=long int\" >/dev/null 2>&1; then\n-  rm -rf conftest*\n-  g77_cv_sys_f2cinteger=\"long int\"\n-fi\n-rm -f conftest*\n-\n-if test \"$g77_cv_sys_f2cinteger\" = \"\"; then\n-echo \"configure:1125: using $ac_cpp\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 1127 \"configure\"\n+#line 1067 \"configure\"\n #include \"confdefs.h\"\n-#include \"proj.h\"\n-#define FFECOM_DETERMINE_TYPES 1\n-#include \"com.h\"\n-#if FFECOM_f2cINTEGER == FFECOM_f2ccodeLONG\n-F2C_INTEGER=long int\n-#elif FFECOM_f2cINTEGER == FFECOM_f2ccodeINT\n-F2C_INTEGER=int\n-#else\n-#  error \"Cannot find a suitable type for F2C_INTEGER\"\n-#endif\n \n+int main() {\n+__g77_integer g77i;\n+__g77_uinteger g77ui;\n+__g77_longint g77l;\n+__g77_ulongint g77ul;\n+; return 0; }\n EOF\n-if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n-  egrep \"F2C_INTEGER=int\" >/dev/null 2>&1; then\n+if { (eval echo configure:1077: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n-  g77_cv_sys_f2cinteger=int\n-fi\n-rm -f conftest*\n-\n-fi\n-if test \"$g77_cv_sys_f2cinteger\" = \"\"; then\n-  echo \"$ac_t\"\"\"\"\" 1>&6\n-  { echo \"configure: error: Can't determine type for f2c integer; config.log may help.\" 1>&2; exit 1; }\n-fi\n-\n-fi\n-\n-echo \"$ac_t\"\"$g77_cv_sys_f2cinteger\" 1>&6\n-F2C_INTEGER=$g77_cv_sys_f2cinteger\n-\n-\n-echo $ac_n \"checking f2c long int type\"\"... $ac_c\" 1>&6\n-echo \"configure:1161: checking f2c long int type\" >&5\n-if eval \"test \\\"`echo '$''{'g77_cv_sys_f2clongint'+set}'`\\\" = set\"; then\n-  echo $ac_n \"(cached) $ac_c\" 1>&6\n+  libf2c_cv_has_g77_builtin_types=yes\n else\n-  echo \"configure:1165: using $ac_cpp\" >&5\n-cat > conftest.$ac_ext <<EOF\n-#line 1167 \"configure\"\n-#include \"confdefs.h\"\n-#include \"proj.h\"\n-#define FFECOM_DETERMINE_TYPES 1\n-#include \"com.h\"\n-#if FFECOM_f2cLONGINT == FFECOM_f2ccodeLONG\n-F2C_LONGINT=long int\n-#elif FFECOM_f2cLONGINT == FFECOM_f2ccodeLONGLONG\n-F2C_LONGINT=long long int\n-#else\n-#  error \"Cannot find a suitable type for F2C_LONGINT\"\n-#endif\n-\n-EOF\n-if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n-  egrep \"F2C_LONGINT=long int\" >/dev/null 2>&1; then\n-  rm -rf conftest*\n-  g77_cv_sys_f2clongint=\"long int\"\n-fi\n-rm -f conftest*\n-\n-\n-if test \"$g77_cv_sys_f2clongint\" = \"\"; then\n-echo \"configure:1190: using $ac_cpp\" >&5\n-  cat > conftest.$ac_ext <<EOF\n-#line 1192 \"configure\"\n-#include \"confdefs.h\"\n-#include \"proj.h\"\n-#define FFECOM_DETERMINE_TYPES 1\n-#include \"com.h\"\n-#if FFECOM_f2cLONGINT == FFECOM_f2ccodeLONG\n-F2C_LONGINT=long int\n-#elif FFECOM_f2cLONGINT == FFECOM_f2ccodeLONGLONG\n-F2C_LONGINT=long long int\n-#else\n-#  error \"Cannot find a suitable type for F2C_LONGINT\"\n-#endif\n-\n-EOF\n-if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n-  egrep \"F2C_LONGINT=long long int\" >/dev/null 2>&1; then\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n   rm -rf conftest*\n-  g77_cv_sys_f2clongint=\"long long int\"\n+  libf2c_cv_has_g77_builtin_types=no\n fi\n rm -f conftest*\n-\n-fi\n-if test \"$g77_cv_sys_f2clongint\" = \"\"; then\n-  echo \"$ac_t\"\"\"\"\" 1>&6\n-  { echo \"configure: error: Can't determine type for f2c long int; config.log may help.\" 1>&2; exit 1; }\n fi\n \n+echo \"$ac_t\"\"$libf2c_cv_has_g77_builtin_types\" 1>&6\n+if test $libf2c_cv_has_g77_builtin_types = no; then\n+  { echo \"configure: error: gcc doesn't define all of the built in types __g77_integer,\n+__g77_uinteger, __g77_longint, and __g77_ulongint.  You may not be using\n+a new enough version of gcc, or your target may not have type sizes which\n+accommodate those types.\" 1>&2; exit 1; }\n fi\n \n-echo \"$ac_t\"\"$g77_cv_sys_f2clongint\" 1>&6\n-F2C_LONGINT=$g77_cv_sys_f2clongint\n-\n-ac_cpp=$late_ac_cpp\n-\n # avoid confusion in case the `makefile's from the f2c distribution have\n # got put here\n test -f libF77/makefile && mv libF77/makefile  libF77/makefile.ori\n@@ -1267,7 +1138,7 @@ else { echo \"configure: error: can not run $ac_config_sub\" 1>&2; exit 1; }\n fi\n \n echo $ac_n \"checking host system type\"\"... $ac_c\" 1>&6\n-echo \"configure:1271: checking host system type\" >&5\n+echo \"configure:1142: checking host system type\" >&5\n \n host_alias=$host\n case \"$host_alias\" in\n@@ -1288,7 +1159,7 @@ host_os=`echo $host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n echo \"$ac_t\"\"$host\" 1>&6\n \n echo $ac_n \"checking target system type\"\"... $ac_c\" 1>&6\n-echo \"configure:1292: checking target system type\" >&5\n+echo \"configure:1163: checking target system type\" >&5\n \n target_alias=$target\n case \"$target_alias\" in\n@@ -1306,7 +1177,7 @@ target_os=`echo $target | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n echo \"$ac_t\"\"$target\" 1>&6\n \n echo $ac_n \"checking build system type\"\"... $ac_c\" 1>&6\n-echo \"configure:1310: checking build system type\" >&5\n+echo \"configure:1181: checking build system type\" >&5\n \n build_alias=$build\n case \"$build_alias\" in\n@@ -1487,8 +1358,6 @@ s%@INSTALL_SCRIPT@%$INSTALL_SCRIPT%g\n s%@INSTALL_DATA@%$INSTALL_DATA%g\n s%@SET_MAKE@%$SET_MAKE%g\n s%@CPP@%$CPP%g\n-s%@F2C_INTEGER@%$F2C_INTEGER%g\n-s%@F2C_LONGINT@%$F2C_LONGINT%g\n s%@gcc_version@%$gcc_version%g\n s%@gcc_version_trigger@%$gcc_version_trigger%g\n s%@host@%$host%g"}, {"sha": "bf8010cd134ea495c23753117a2643c2580efd34", "filename": "libf2c/configure.in", "status": "modified", "additions": 16, "deletions": 102, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb10f8a4f26bb96a7a4e02069665fc51bb1c949/libf2c%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb10f8a4f26bb96a7a4e02069665fc51bb1c949/libf2c%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Fconfigure.in?ref=3eb10f8a4f26bb96a7a4e02069665fc51bb1c949", "patch": "@@ -89,109 +89,23 @@ including headers and, preferably, the library, before you can configure\n the G77 runtime system.  If necessary, install gcc now with \\`LANGUAGES=c',\n then the target library, then build with \\`LANGUAGES=f77'.])])\n \n-# We have to firkle with the info in hconfig.h to figure out suitable types\n-# (via com.h).  proj.h and com.h are in gcc/f/, config.h which they need\n-# is in gcc/ and the config files are in gcc/config/.\n-AC_MSG_CHECKING(f2c integer type)\n-# Set this back later below!\n-late_ac_cpp=$ac_cpp\n-late_cflags=$CFLAGS\n-extra_includes=\"-I$topsrcdir/gcc/f -I$topsrcdir/gcc -I$topsrcdir/include -I$topsrcdir/gcc/config -I$r/gcc\"\n-ac_cpp=\"$late_ac_cpp -DIN_GCC -DHAVE_CONFIG_H $extra_includes\"\n-\n-# The AC_EGREP_CPPs below have been known to fail when the header\n-# path is wrong after things have been moved about; the cpp error status\n-# counts for nothing.  First check that there aren't any errors from\n-# the headers.\n-CFLAGS=\"$CFLAGS -DHAVE_CONFIG_H -DIN_GCC $extra_includes\"\n-AC_TRY_COMPILE([#include \"proj.h\"\n-#define FFECOM_DETERMINE_TYPES 1\n-#include \"com.h\"],,,\n-AC_MSG_ERROR([Can't run check for integer sizes -- see config.log]))\n-CFLAGS=$late_cflags\n-\n-AC_CACHE_VAL(g77_cv_sys_f2cinteger,\n-echo \"configure:__oline__: using $ac_cpp\" >&AC_FD_CC\n-AC_EGREP_CPP(F2C_INTEGER=long int,\n-[#include \"proj.h\"\n-#define FFECOM_DETERMINE_TYPES 1\n-#include \"com.h\"\n-#if FFECOM_f2cINTEGER == FFECOM_f2ccodeLONG\n-F2C_INTEGER=long int\n-#elif FFECOM_f2cINTEGER == FFECOM_f2ccodeINT\n-F2C_INTEGER=int\n-#else\n-#  error \"Cannot find a suitable type for F2C_INTEGER\"\n-#endif\n-],\n- g77_cv_sys_f2cinteger=\"long int\",)\n-if test \"$g77_cv_sys_f2cinteger\" = \"\"; then\n-echo \"configure:__oline__: using $ac_cpp\" >&AC_FD_CC\n-  AC_EGREP_CPP(F2C_INTEGER=int,\n-[#include \"proj.h\"\n-#define FFECOM_DETERMINE_TYPES 1\n-#include \"com.h\"\n-#if FFECOM_f2cINTEGER == FFECOM_f2ccodeLONG\n-F2C_INTEGER=long int\n-#elif FFECOM_f2cINTEGER == FFECOM_f2ccodeINT\n-F2C_INTEGER=int\n-#else\n-#  error \"Cannot find a suitable type for F2C_INTEGER\"\n-#endif\n-],\n-   g77_cv_sys_f2cinteger=int,)\n-fi\n-if test \"$g77_cv_sys_f2cinteger\" = \"\"; then\n-  AC_MSG_RESULT(\"\")\n-  AC_MSG_ERROR([Can't determine type for f2c integer; config.log may help.])\n+dnl Checks for g77 integer types built into gcc's C front end.\n+AC_MSG_CHECKING(for built-in g77 integer types)\n+AC_CACHE_VAL(libf2c_cv_has_g77_builtin_types,\n+[AC_TRY_COMPILE(,\n+  [__g77_integer g77i;\n+__g77_uinteger g77ui;\n+__g77_longint g77l;\n+__g77_ulongint g77ul;],\n+  libf2c_cv_has_g77_builtin_types=yes,\n+  libf2c_cv_has_g77_builtin_types=no)])\n+AC_MSG_RESULT($libf2c_cv_has_g77_builtin_types)\n+if test $libf2c_cv_has_g77_builtin_types = no; then\n+  AC_MSG_ERROR([gcc doesn't define all of the built in types __g77_integer,\n+__g77_uinteger, __g77_longint, and __g77_ulongint.  You may not be using\n+a new enough version of gcc, or your target may not have type sizes which\n+accommodate those types.])\n fi\n-)\n-AC_MSG_RESULT($g77_cv_sys_f2cinteger)\n-F2C_INTEGER=$g77_cv_sys_f2cinteger\n-AC_SUBST(F2C_INTEGER)\n-\n-AC_MSG_CHECKING(f2c long int type)\n-AC_CACHE_VAL(g77_cv_sys_f2clongint,\n-echo \"configure:__oline__: using $ac_cpp\" >&AC_FD_CC\n-AC_EGREP_CPP(F2C_LONGINT=long int,\n-[#include \"proj.h\"\n-#define FFECOM_DETERMINE_TYPES 1\n-#include \"com.h\"\n-#if FFECOM_f2cLONGINT == FFECOM_f2ccodeLONG\n-F2C_LONGINT=long int\n-#elif FFECOM_f2cLONGINT == FFECOM_f2ccodeLONGLONG\n-F2C_LONGINT=long long int\n-#else\n-#  error \"Cannot find a suitable type for F2C_LONGINT\"\n-#endif\n-],\n- g77_cv_sys_f2clongint=\"long int\",)\n-\n-if test \"$g77_cv_sys_f2clongint\" = \"\"; then\n-echo \"configure:__oline__: using $ac_cpp\" >&AC_FD_CC\n-  AC_EGREP_CPP(F2C_LONGINT=long long int,\n-[#include \"proj.h\"\n-#define FFECOM_DETERMINE_TYPES 1\n-#include \"com.h\"\n-#if FFECOM_f2cLONGINT == FFECOM_f2ccodeLONG\n-F2C_LONGINT=long int\n-#elif FFECOM_f2cLONGINT == FFECOM_f2ccodeLONGLONG\n-F2C_LONGINT=long long int\n-#else\n-#  error \"Cannot find a suitable type for F2C_LONGINT\"\n-#endif\n-],\n-   g77_cv_sys_f2clongint=\"long long int\",)\n-fi\n-if test \"$g77_cv_sys_f2clongint\" = \"\"; then\n-  AC_MSG_RESULT(\"\")\n-  AC_MSG_ERROR([Can't determine type for f2c long int; config.log may help.])\n-fi\n-)\n-AC_MSG_RESULT($g77_cv_sys_f2clongint)\n-F2C_LONGINT=$g77_cv_sys_f2clongint\n-AC_SUBST(F2C_LONGINT)\n-ac_cpp=$late_ac_cpp\n \n # avoid confusion in case the `makefile's from the f2c distribution have\n # got put here"}, {"sha": "57947ce6e80e8bf47d454ce904ccd17ec2c79668", "filename": "libf2c/g2c.hin", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb10f8a4f26bb96a7a4e02069665fc51bb1c949/libf2c%2Fg2c.hin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb10f8a4f26bb96a7a4e02069665fc51bb1c949/libf2c%2Fg2c.hin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Fg2c.hin?ref=3eb10f8a4f26bb96a7a4e02069665fc51bb1c949", "patch": "@@ -18,20 +18,20 @@\n \n /* F2C_INTEGER will normally be `int' but would be `long' on 16-bit systems */\n /* we assume short, float are OK */\n-typedef @F2C_INTEGER@ /* long int */ integer;\n-typedef unsigned @F2C_INTEGER@ /* long */ uinteger;\n+typedef __g77_integer integer;\n+typedef __g77_uinteger uinteger;\n typedef char *address;\n typedef short int shortint;\n typedef float real;\n typedef double doublereal;\n typedef struct { real r, i; } complex;\n typedef struct { doublereal r, i; } doublecomplex;\n-typedef @F2C_INTEGER@ /* long int */ logical;\n+typedef __g77_integer logical;\n typedef short int shortlogical;\n typedef char logical1;\n typedef char integer1;\n-typedef @F2C_LONGINT@ /* long long */ longint;\t\t/* system-dependent */\n-typedef unsigned @F2C_LONGINT@ /* long long */ ulongint;\t/* system-dependent */\n+typedef __g77_longint longint;\t\t\t/* system-dependent */\n+typedef __g77_ulongint ulongint;\t\t/* system-dependent */\n #define qbit_clear(a,b)\t((a) & ~((ulongint)1 << (b)))\n #define qbit_set(a,b)\t((a) |  ((ulongint)1 << (b)))\n \n@@ -52,9 +52,9 @@ typedef short flag;\n typedef short ftnlen;\n typedef short ftnint;\n #else\n-typedef @F2C_INTEGER@ /* long int */ flag;\n-typedef @F2C_INTEGER@ /* long int */ ftnlen;\n-typedef @F2C_INTEGER@ /* long int */ ftnint;\n+typedef __g77_integer flag;\n+typedef __g77_integer ftnlen;\n+typedef __g77_integer ftnint;\n #endif\n \n /*external read, write*/"}]}