{"sha": "371e764dd93060374ed064413cd5c99a194c0e5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcxZTc2NGRkOTMwNjAzNzRlZDA2NDQxM2NkNWM5OWExOTRjMGU1ZQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-08-05T09:52:21Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-08-05T09:52:21Z"}, "message": "[convert.c] PR 61876: Guard transformation to lrint by -fno-math-errno.\n\n\t* convert.c (convert_to_integer): Guard transformation to lrint by\n\t-fno-math-errno.\n\nFrom-SVN: r213628", "tree": {"sha": "83cd8fa10356f0759ffb60c615538baee4b6c742", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83cd8fa10356f0759ffb60c615538baee4b6c742"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/371e764dd93060374ed064413cd5c99a194c0e5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/371e764dd93060374ed064413cd5c99a194c0e5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/371e764dd93060374ed064413cd5c99a194c0e5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/371e764dd93060374ed064413cd5c99a194c0e5e/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc5e395d603755490456a20d6f9042e89f64ee01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc5e395d603755490456a20d6f9042e89f64ee01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc5e395d603755490456a20d6f9042e89f64ee01"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "cec3fc6460cda4596ea9ac457a06d2ececdbe68e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/371e764dd93060374ed064413cd5c99a194c0e5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/371e764dd93060374ed064413cd5c99a194c0e5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=371e764dd93060374ed064413cd5c99a194c0e5e", "patch": "@@ -1,3 +1,8 @@\n+2014-08-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* convert.c (convert_to_integer): Guard transformation to lrint by\n+\t-fno-math-errno.\n+\n 2014-08-05  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64-builtins.c"}, {"sha": "3834351aad52811f5c63ae1dd074e2c12de2f1a9", "filename": "gcc/convert.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/371e764dd93060374ed064413cd5c99a194c0e5e/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/371e764dd93060374ed064413cd5c99a194c0e5e/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=371e764dd93060374ed064413cd5c99a194c0e5e", "patch": "@@ -477,8 +477,8 @@ convert_to_integer (tree type, tree expr)\n \t    break;\n \t  /* ... Fall through ...  */\n \tCASE_FLT_FN (BUILT_IN_RINT):\n-\t  /* Only convert in ISO C99 mode.  */\n-\t  if (!targetm.libc_has_function (function_c99_misc))\n+\t  /* Only convert in ISO C99 mode and with -fno-math-errno.  */\n+\t  if (!targetm.libc_has_function (function_c99_misc) || flag_errno_math)\n \t    break;\n \t  if (outprec < TYPE_PRECISION (integer_type_node)\n \t      || (outprec == TYPE_PRECISION (integer_type_node)"}]}