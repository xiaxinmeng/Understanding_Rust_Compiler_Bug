{"sha": "d04814543c93d33e52a33ba50cfc5f474ae7b0a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA0ODE0NTQzYzkzZDMzZTUyYTMzYmE1MGNmYzVmNDc0YWU3YjBhMw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-11-03T15:44:29Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-11-03T15:44:29Z"}, "message": "rs6000: Remove rs6000_emit_sISEL\n\nInstead of calling rs6000_emit_sISEL, call rs6000_emit_int_cmove\ndirectly, in the one place it is used.\n\n\n\t* config/rs6000/rs60000-protos.h (rs6000_emit_sISEL): Delete.\n\t(rs6000_emit_int_cmove): New declaration.\n\t* config/rs6000/rs6000.c (rs6000_emit_int_cmove): Delete declaration.\n\t(rs6000_emit_sISEL): Delete.\n\t(rs6000_emit_int_cmove): Make non-static.\n\t* config/rs6000/rs6000.md (cstore<mode>4): Use rs6000_emit_int_cmove\n\tinstead of rs6000_emit_sISEL.\n\nFrom-SVN: r254380", "tree": {"sha": "23cb7feec4c7a7b48944da3fcfb761e7fda8b1c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23cb7feec4c7a7b48944da3fcfb761e7fda8b1c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d04814543c93d33e52a33ba50cfc5f474ae7b0a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d04814543c93d33e52a33ba50cfc5f474ae7b0a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d04814543c93d33e52a33ba50cfc5f474ae7b0a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d04814543c93d33e52a33ba50cfc5f474ae7b0a3/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e7a740068ed3cc5961101f07012314d940a97ae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7a740068ed3cc5961101f07012314d940a97ae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7a740068ed3cc5961101f07012314d940a97ae5"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "c8c1576aae33f9929eba06d663664c389481f507", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04814543c93d33e52a33ba50cfc5f474ae7b0a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04814543c93d33e52a33ba50cfc5f474ae7b0a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d04814543c93d33e52a33ba50cfc5f474ae7b0a3", "patch": "@@ -1,3 +1,13 @@\n+2017-11-03  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs60000-protos.h (rs6000_emit_sISEL): Delete.\n+\t(rs6000_emit_int_cmove): New declaration.\n+\t* config/rs6000/rs6000.c (rs6000_emit_int_cmove): Delete declaration.\n+\t(rs6000_emit_sISEL): Delete.\n+\t(rs6000_emit_int_cmove): Make non-static.\n+\t* config/rs6000/rs6000.md (cstore<mode>4): Use rs6000_emit_int_cmove\n+\tinstead of rs6000_emit_sISEL.\n+\n 2017-11-03  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* asan.c (create_cond_insert_point): Maintain profile."}, {"sha": "721b906ee6569420a606a3a371ee7e77bacb93f3", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04814543c93d33e52a33ba50cfc5f474ae7b0a3/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04814543c93d33e52a33ba50cfc5f474ae7b0a3/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=d04814543c93d33e52a33ba50cfc5f474ae7b0a3", "patch": "@@ -124,14 +124,14 @@ extern void print_operand_address (FILE *, rtx);\n extern enum rtx_code rs6000_reverse_condition (machine_mode,\n \t\t\t\t\t       enum rtx_code);\n extern rtx rs6000_emit_eqne (machine_mode, rtx, rtx, rtx);\n-extern void rs6000_emit_sISEL (machine_mode, rtx[]);\n extern void rs6000_emit_sCOND (machine_mode, rtx[]);\n extern void rs6000_emit_cbranch (machine_mode, rtx[]);\n extern char * output_cbranch (rtx, const char *, int, rtx_insn *);\n extern const char * output_probe_stack_range (rtx, rtx, rtx);\n extern void rs6000_emit_dot_insn (rtx dst, rtx src, int dot, rtx ccreg);\n extern bool rs6000_emit_set_const (rtx, rtx);\n extern int rs6000_emit_cmove (rtx, rtx, rtx, rtx);\n+extern int rs6000_emit_int_cmove (rtx, rtx, rtx, rtx);\n extern int rs6000_emit_vector_cond_expr (rtx, rtx, rtx, rtx, rtx, rtx);\n extern void rs6000_emit_minmax (rtx, enum rtx_code, rtx, rtx);\n extern void rs6000_split_signbit (rtx, rtx);"}, {"sha": "0eabd5f108cc882c66622af853537c3979cd550f", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04814543c93d33e52a33ba50cfc5f474ae7b0a3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04814543c93d33e52a33ba50cfc5f474ae7b0a3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d04814543c93d33e52a33ba50cfc5f474ae7b0a3", "patch": "@@ -1357,7 +1357,6 @@ static void rs6000_common_init_builtins (void);\n static void paired_init_builtins (void);\n static rtx paired_expand_predicate_builtin (enum insn_code, tree, rtx);\n static void htm_init_builtins (void);\n-static int rs6000_emit_int_cmove (rtx, rtx, rtx, rtx);\n static rs6000_stack_t *rs6000_stack_info (void);\n static void is_altivec_return_reg (rtx, void *);\n int easy_vector_constant (rtx, machine_mode);\n@@ -22478,14 +22477,6 @@ rs6000_expand_float128_convert (rtx dest, rtx src, bool unsigned_p)\n }\n \n \f\n-/* Emit the RTL for an sISEL pattern.  */\n-\n-void\n-rs6000_emit_sISEL (machine_mode mode ATTRIBUTE_UNUSED, rtx operands[])\n-{\n-  rs6000_emit_int_cmove (operands[0], operands[1], const1_rtx, const0_rtx);\n-}\n-\n /* Emit RTL that sets a register to zero if OP1 and OP2 are equal.  SCRATCH\n    can be used as that dest register.  Return the dest register.  */\n \n@@ -23261,7 +23252,7 @@ rs6000_emit_cmove (rtx dest, rtx op, rtx true_cond, rtx false_cond)\n \n /* Same as above, but for ints (isel).  */\n \n-static int\n+int\n rs6000_emit_int_cmove (rtx dest, rtx op, rtx true_cond, rtx false_cond)\n {\n   rtx condition_rtx, cr;"}, {"sha": "ed5ff397e074c2f8df00bc47941f310e7b25e158", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04814543c93d33e52a33ba50cfc5f474ae7b0a3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04814543c93d33e52a33ba50cfc5f474ae7b0a3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=d04814543c93d33e52a33ba50cfc5f474ae7b0a3", "patch": "@@ -11782,7 +11782,7 @@\n {\n   /* Use ISEL if the user asked for it.  */\n   if (TARGET_ISEL)\n-    rs6000_emit_sISEL (<MODE>mode, operands);\n+    rs6000_emit_int_cmove (operands[0], operands[1], const1_rtx, const0_rtx);\n \n   /* Expanding EQ and NE directly to some machine instructions does not help\n      but does hurt combine.  So don't.  */"}]}