{"sha": "533f611ac4e730dab4b7c0439093f48f2b89f805", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMzZjYxMWFjNGU3MzBkYWI0YjdjMDQzOTA5M2Y0OGYyYjg5ZjgwNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2010-10-12T15:53:15Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-10-12T15:53:15Z"}, "message": "re PR middle-end/45962 (many c/c++ failures on cris-elf, in r165236:165242)\n\nPR middle-end/45962\n\t* cfgexpand.c (add_stack_var): Ensure every variable has 1 byte.\n\t(expand_stack_vars): Assert large base allocated when used.\n\nFrom-SVN: r165382", "tree": {"sha": "946fe0ac7035b526d4c0e4b559d4af285731875d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/946fe0ac7035b526d4c0e4b559d4af285731875d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/533f611ac4e730dab4b7c0439093f48f2b89f805", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/533f611ac4e730dab4b7c0439093f48f2b89f805", "html_url": "https://github.com/Rust-GCC/gccrs/commit/533f611ac4e730dab4b7c0439093f48f2b89f805", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/533f611ac4e730dab4b7c0439093f48f2b89f805/comments", "author": null, "committer": null, "parents": [{"sha": "d3a7350497a38cbf99bdd4a5ec11bdbb8f732298", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a7350497a38cbf99bdd4a5ec11bdbb8f732298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3a7350497a38cbf99bdd4a5ec11bdbb8f732298"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "7f4a478e780ca6a59b074667d1b10d782e2bdbcb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/533f611ac4e730dab4b7c0439093f48f2b89f805/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/533f611ac4e730dab4b7c0439093f48f2b89f805/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=533f611ac4e730dab4b7c0439093f48f2b89f805", "patch": "@@ -1,3 +1,9 @@\n+2010-10-12  Richard Henderson  <rth@redhat.com>\n+\n+\tPR middle-end/45962\n+\t* cfgexpand.c (add_stack_var): Ensure every variable has 1 byte.\n+\t(expand_stack_vars): Assert large base allocated when used.\n+\n 2010-10-12  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (get_constraint_for_1): Constants"}, {"sha": "1ef1fa0d8f283619e4a4dbb1cddf95312633c875", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/533f611ac4e730dab4b7c0439093f48f2b89f805/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/533f611ac4e730dab4b7c0439093f48f2b89f805/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=533f611ac4e730dab4b7c0439093f48f2b89f805", "patch": "@@ -253,6 +253,8 @@ alloc_stack_frame_space (HOST_WIDE_INT size, unsigned HOST_WIDE_INT align)\n static void\n add_stack_var (tree decl)\n {\n+  struct stack_var *v;\n+\n   if (stack_vars_num >= stack_vars_alloc)\n     {\n       if (stack_vars_alloc)\n@@ -262,17 +264,23 @@ add_stack_var (tree decl)\n       stack_vars\n \t= XRESIZEVEC (struct stack_var, stack_vars, stack_vars_alloc);\n     }\n-  stack_vars[stack_vars_num].decl = decl;\n-  stack_vars[stack_vars_num].offset = 0;\n-  stack_vars[stack_vars_num].size = tree_low_cst (DECL_SIZE_UNIT (SSAVAR (decl)), 1);\n-  stack_vars[stack_vars_num].alignb = get_decl_align_unit (SSAVAR (decl));\n+  v = &stack_vars[stack_vars_num];\n+\n+  v->decl = decl;\n+  v->offset = 0;\n+  v->size = tree_low_cst (DECL_SIZE_UNIT (SSAVAR (decl)), 1);\n+  /* Ensure that all variables have size, so that &a != &b for any two\n+     variables that are simultaneously live.  */\n+  if (v->size == 0)\n+    v->size = 1;\n+  v->alignb = get_decl_align_unit (SSAVAR (decl));\n \n   /* All variables are initially in their own partition.  */\n-  stack_vars[stack_vars_num].representative = stack_vars_num;\n-  stack_vars[stack_vars_num].next = EOC;\n+  v->representative = stack_vars_num;\n+  v->next = EOC;\n \n   /* All variables initially conflict with no other.  */\n-  stack_vars[stack_vars_num].conflicts = NULL;\n+  v->conflicts = NULL;\n \n   /* Ensure that this decl doesn't get put onto the list twice.  */\n   set_rtl (decl, pc_rtx);\n@@ -839,6 +847,7 @@ expand_stack_vars (bool (*pred) (tree))\n \t  /* Large alignment is only processed in the last pass.  */\n \t  if (pred)\n \t    continue;\n+\t  gcc_assert (large_base != NULL);\n \n \t  large_alloc += alignb - 1;\n \t  large_alloc &= -(HOST_WIDE_INT)alignb;"}]}