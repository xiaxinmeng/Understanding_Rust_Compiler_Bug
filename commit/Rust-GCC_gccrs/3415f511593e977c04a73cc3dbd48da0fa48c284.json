{"sha": "3415f511593e977c04a73cc3dbd48da0fa48c284", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQxNWY1MTE1OTNlOTc3YzA0YTczY2MzZGJkNDhkYTBmYTQ4YzI4NA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-12-28T01:39:15Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-12-28T01:39:15Z"}, "message": "re PR libfortran/30014 (INQUIRE (iolength = xx) limited to kind=4)\n\n2006-12-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/30014\n\t*io.c (resolve_tag): Don't issue error for tag_size type not being\n\tdefault integer size for -std=F2003.  Add similar check for\n\ttag_iolength.\n\t*ioparm.def: Change size and iolength parameters to ioint pointer, which\n\tcorresponds to GFC_IO_INT on the library side.\n\nFrom-SVN: r120233", "tree": {"sha": "e56839f2ebd4386d9993d6c3f4b65405b9fe9ebb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e56839f2ebd4386d9993d6c3f4b65405b9fe9ebb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3415f511593e977c04a73cc3dbd48da0fa48c284", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3415f511593e977c04a73cc3dbd48da0fa48c284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3415f511593e977c04a73cc3dbd48da0fa48c284", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3415f511593e977c04a73cc3dbd48da0fa48c284/comments", "author": null, "committer": null, "parents": [{"sha": "770bfcbee9d95fbdcc2c967f95e26fb0dc398cbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/770bfcbee9d95fbdcc2c967f95e26fb0dc398cbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/770bfcbee9d95fbdcc2c967f95e26fb0dc398cbc"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "8d9fd6e0ab8a093055788ac29d77aaead9492c1a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3415f511593e977c04a73cc3dbd48da0fa48c284/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3415f511593e977c04a73cc3dbd48da0fa48c284/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3415f511593e977c04a73cc3dbd48da0fa48c284", "patch": "@@ -1,3 +1,12 @@\n+2006-12-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/30014\n+\t*io.c (resolve_tag): Don't issue error for tag_size type not being\n+\tdefault integer size for -std=F2003.  Add similar check for\n+\ttag_iolength.\n+\t*ioparm.def: Change size and iolength parameters to ioint pointer, which\n+\tcorresponds to GFC_IO_INT on the library side.\n+\n 2006-12-27  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* interface.c (compare_actual_formal): Remove unused variable"}, {"sha": "cb424c4877965d7b059030e47cbd603218747360", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3415f511593e977c04a73cc3dbd48da0fa48c284/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3415f511593e977c04a73cc3dbd48da0fa48c284/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=3415f511593e977c04a73cc3dbd48da0fa48c284", "patch": "@@ -1122,7 +1122,7 @@ resolve_tag (const io_tag * tag, gfc_expr * e)\n \n       if (tag == &tag_size && e->ts.kind != gfc_default_integer_kind)\n \t{\n-\t  if (gfc_notify_std (GFC_STD_GNU, \"Fortran 95 requires default \"\n+\t  if (gfc_notify_std (GFC_STD_F2003, \"Fortran 95 requires default \"\n \t\t\t      \"INTEGER in SIZE tag at %L\",\n \t\t\t      &e->where) == FAILURE)\n \t    return FAILURE;\n@@ -1134,6 +1134,14 @@ resolve_tag (const io_tag * tag, gfc_expr * e)\n \t\t\t      &e->where) == FAILURE)\n \t    return FAILURE;\n \t}\n+    \n+      if (tag == &tag_iolength && e->ts.kind != gfc_default_integer_kind)\n+\t{\n+\t  if (gfc_notify_std (GFC_STD_F2003, \"Fortran 95 requires default \"\n+\t\t\t      \"INTEGER in IOLENGTH tag at %L\",\n+\t\t\t      &e->where) == FAILURE)\n+\t    return FAILURE;\n+\t}\n     }\n \n   return SUCCESS;"}, {"sha": "57a5db9ef7879f7c6f0a895c7ee3ed693d49cab7", "filename": "gcc/fortran/ioparm.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3415f511593e977c04a73cc3dbd48da0fa48c284/gcc%2Ffortran%2Fioparm.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3415f511593e977c04a73cc3dbd48da0fa48c284/gcc%2Ffortran%2Fioparm.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fioparm.def?ref=3415f511593e977c04a73cc3dbd48da0fa48c284", "patch": "@@ -60,8 +60,8 @@ IOPARM (inquire, convert,       1 << 30, char1)\n #endif\n IOPARM (dt,      common,\t0,\t common)\n IOPARM (dt,      rec,\t\t1 << 9,  intio)\n-IOPARM (dt,      size,\t\t1 << 10, pint4)\n-IOPARM (dt,      iolength,\t1 << 11, pint4)\n+IOPARM (dt,      size,\t\t1 << 10, pintio)\n+IOPARM (dt,      iolength,\t1 << 11, pintio)\n IOPARM (dt,      internal_unit_desc, 0,  parray)\n IOPARM (dt,      format,\t1 << 12, char1)\n IOPARM (dt,      advance,\t1 << 13, char2)"}]}