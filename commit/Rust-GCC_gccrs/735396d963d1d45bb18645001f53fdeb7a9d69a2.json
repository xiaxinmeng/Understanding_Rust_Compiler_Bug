{"sha": "735396d963d1d45bb18645001f53fdeb7a9d69a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM1Mzk2ZDk2M2QxZDQ1YmIxODY0NTAwMWY1M2ZkZWI3YTlkNjlhMg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-03-18T07:29:10Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-03-18T07:29:10Z"}, "message": "Warning fixes:\n\n        * cccp.c (default_include): Initialize structure memebers.\n        (pass_thru_directive): Change the type of 'keyword_length' to int.\n        (main): Cast `bindtextdomain' and `textdomain' to (void).\n        * collect2.c (main): Likewise.\n        * cppmain.c (main): Likewise.\n        * gcc.c (main): Likewise.\n        * gcov.c (main): Likewise.\n        * protoize.c (main): Likewise.\n        * toplev.c (main): Likewise.\n\nFrom-SVN: r25839", "tree": {"sha": "63b6ddf492e99b015dbb5f770efa977f31b7259b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63b6ddf492e99b015dbb5f770efa977f31b7259b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/735396d963d1d45bb18645001f53fdeb7a9d69a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/735396d963d1d45bb18645001f53fdeb7a9d69a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/735396d963d1d45bb18645001f53fdeb7a9d69a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/735396d963d1d45bb18645001f53fdeb7a9d69a2/comments", "author": null, "committer": null, "parents": [{"sha": "d8c8a706d14e955116b9d76b734bc1fc87d01f27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c8a706d14e955116b9d76b734bc1fc87d01f27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8c8a706d14e955116b9d76b734bc1fc87d01f27"}], "stats": {"total": 68, "additions": 43, "deletions": 25}, "files": [{"sha": "1a2388a64f972371851acfd2db46f99728a5e965", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=735396d963d1d45bb18645001f53fdeb7a9d69a2", "patch": "@@ -1,3 +1,21 @@\n+Thu Mar 18 10:14:18 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* cccp.c (default_include): Initialize structure memebers.\n+  \t(pass_thru_directive): Change the type of 'keyword_length' to int.\n+  \t(main): Cast `bindtextdomain' and `textdomain' to (void).\n+\n+\t* collect2.c (main): Likewise.\n+\n+\t* cppmain.c (main): Likewise.\n+\n+\t* gcc.c (main): Likewise.\n+\n+\t* gcov.c (main): Likewise.\n+\n+\t* protoize.c (main): Likewise.\n+\n+\t* toplev.c (main): Likewise.\n+\n 1999-03-18  Gavin Romig-Koch  <gavin@cygnus.com>\n \n \t* config/mips/mips.c (mips_explicit_type_size_string): Correct"}, {"sha": "9fa3d1f271e2538ab2b604afd93dee63a0f95348", "filename": "gcc/cccp.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=735396d963d1d45bb18645001f53fdeb7a9d69a2", "patch": "@@ -385,42 +385,42 @@ static struct default_include {\n #else\n   = {\n     /* Pick up GNU C++ specific include files.  */\n-    { GPLUSPLUS_INCLUDE_DIR, \"G++\", 1, 1 },\n+    { GPLUSPLUS_INCLUDE_DIR, \"G++\", 1, 1, 0 },\n #ifdef CROSS_COMPILE\n     /* This is the dir for fixincludes.  Put it just before\n        the files that we fix.  */\n-    { GCC_INCLUDE_DIR, \"GCC\", 0, 0 },\n+    { GCC_INCLUDE_DIR, \"GCC\", 0, 0, 0 },\n     /* For cross-compilation, this dir name is generated\n        automatically in Makefile.in.  */\n-    { CROSS_INCLUDE_DIR, \"GCC\", 0, 0 },\n+    { CROSS_INCLUDE_DIR, \"GCC\", 0, 0, 0 },\n #ifdef TOOL_INCLUDE_DIR\n     /* This is another place that the target system's headers might be.  */\n-    { TOOL_INCLUDE_DIR, \"BINUTILS\", 0, 0 },\n+    { TOOL_INCLUDE_DIR, \"BINUTILS\", 0, 0, 0 },\n #endif\n #else /* not CROSS_COMPILE */\n #ifdef LOCAL_INCLUDE_DIR\n     /* This should be /usr/local/include and should come before\n        the fixincludes-fixed header files.  */\n-    { LOCAL_INCLUDE_DIR, 0, 0, 1 },\n+    { LOCAL_INCLUDE_DIR, 0, 0, 1, 0 },\n #endif\n #ifdef TOOL_INCLUDE_DIR\n     /* This is here ahead of GCC_INCLUDE_DIR because assert.h goes here.\n        Likewise, behind LOCAL_INCLUDE_DIR, where glibc puts its assert.h.  */\n-    { TOOL_INCLUDE_DIR, \"BINUTILS\", 0, 0 },\n+    { TOOL_INCLUDE_DIR, \"BINUTILS\", 0, 0, 0 },\n #endif\n     /* This is the dir for fixincludes.  Put it just before\n        the files that we fix.  */\n-    { GCC_INCLUDE_DIR, \"GCC\", 0, 0 },\n+    { GCC_INCLUDE_DIR, \"GCC\", 0, 0, 0 },\n     /* Some systems have an extra dir of include files.  */\n #ifdef SYSTEM_INCLUDE_DIR\n-    { SYSTEM_INCLUDE_DIR, 0, 0, 0 },\n+    { SYSTEM_INCLUDE_DIR, 0, 0, 0, 0 },\n #endif\n #ifndef STANDARD_INCLUDE_COMPONENT\n #define STANDARD_INCLUDE_COMPONENT 0\n #endif\n-    { STANDARD_INCLUDE_DIR, STANDARD_INCLUDE_COMPONENT, 0, 0 },\n+    { STANDARD_INCLUDE_DIR, STANDARD_INCLUDE_COMPONENT, 0, 0, 0 },\n #endif /* not CROSS_COMPILE */\n-    { 0, 0, 0, 0 }\n+    { 0, 0, 0, 0, 0 }\n     };\n #endif /* no INCLUDE_DEFAULTS */\n \n@@ -1250,8 +1250,8 @@ main (argc, argv)\n #ifdef HAVE_LC_MESSAGES\n   setlocale (LC_MESSAGES, \"\");\n #endif\n-  bindtextdomain (PACKAGE, localedir);\n-  textdomain (PACKAGE);\n+  (void) bindtextdomain (PACKAGE, localedir);\n+  (void) textdomain (PACKAGE);\n \n   progname = base_name (argv[0]);\n \n@@ -5738,7 +5738,7 @@ pass_thru_directive (buf, limit, op, keyword)\n      FILE_BUF *op;\n      struct directive *keyword;\n {\n-  register unsigned keyword_length = keyword->length;\n+  register int keyword_length = keyword->length;\n \n   check_expand (op, 1 + keyword_length + (limit - buf));\n   *op->bufp++ = '#';"}, {"sha": "f7a6bc871788320844d918ba27d2276dd0f15a28", "filename": "gcc/collect2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=735396d963d1d45bb18645001f53fdeb7a9d69a2", "patch": "@@ -1002,8 +1002,8 @@ main (argc, argv)\n #ifdef HAVE_LC_MESSAGES\n   setlocale (LC_MESSAGES, \"\");\n #endif\n-  bindtextdomain (PACKAGE, localedir);\n-  textdomain (PACKAGE);\n+  (void) bindtextdomain (PACKAGE, localedir);\n+  (void) textdomain (PACKAGE);\n \n   /* Do not invoke xcalloc before this point, since locale needs to be\n      set first, in case a diagnostic is issued.  */"}, {"sha": "5e3ed90f5b35825235d6e336a17e2f7f123a6dfa", "filename": "gcc/cppmain.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Fcppmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Fcppmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmain.c?ref=735396d963d1d45bb18645001f53fdeb7a9d69a2", "patch": "@@ -72,8 +72,8 @@ main (argc, argv)\n #ifdef HAVE_LC_MESSAGES\n   setlocale (LC_MESSAGES, \"\");\n #endif\n-  bindtextdomain (PACKAGE, localedir);\n-  textdomain (PACKAGE);\n+  (void) bindtextdomain (PACKAGE, localedir);\n+  (void) textdomain (PACKAGE);\n \n   cpp_reader_init (&parse_in);\n   parse_in.opts = opts;"}, {"sha": "5a9f37bc6f060006680489582a8be6e80bb7f6ad", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=735396d963d1d45bb18645001f53fdeb7a9d69a2", "patch": "@@ -4656,8 +4656,8 @@ main (argc, argv)\n #ifdef HAVE_LC_MESSAGES\n   setlocale (LC_MESSAGES, \"\");\n #endif\n-  bindtextdomain (PACKAGE, localedir);\n-  textdomain (PACKAGE);\n+  (void) bindtextdomain (PACKAGE, localedir);\n+  (void) textdomain (PACKAGE);\n \n   if (signal (SIGINT, SIG_IGN) != SIG_IGN)\n     signal (SIGINT, fatal_error);"}, {"sha": "46df6ede862a5d9e6aea38e4e4a41890f7c0ec5a", "filename": "gcc/gcov.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=735396d963d1d45bb18645001f53fdeb7a9d69a2", "patch": "@@ -228,8 +228,8 @@ main (argc, argv)\n #ifdef HAVE_LC_MESSAGES\n   setlocale (LC_MESSAGES, \"\");\n #endif\n-  bindtextdomain (PACKAGE, localedir);\n-  textdomain (PACKAGE);\n+  (void) bindtextdomain (PACKAGE, localedir);\n+  (void) textdomain (PACKAGE);\n \n   process_args (argc, argv);\n "}, {"sha": "a2e9cb5baa39203494b6461a51efa1d12c7cc636", "filename": "gcc/protoize.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=735396d963d1d45bb18645001f53fdeb7a9d69a2", "patch": "@@ -4560,8 +4560,8 @@ main (argc, argv)\n #ifdef HAVE_LC_MESSAGES\n   setlocale (LC_MESSAGES, \"\");\n #endif\n-  bindtextdomain (PACKAGE, localedir);\n-  textdomain (PACKAGE);\n+  (void) bindtextdomain (PACKAGE, localedir);\n+  (void) textdomain (PACKAGE);\n \n   cwd_buffer = getpwd ();\n   if (!cwd_buffer)"}, {"sha": "eb1888d4367301c8ad5bc1ec5be95db98e99171e", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/735396d963d1d45bb18645001f53fdeb7a9d69a2/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=735396d963d1d45bb18645001f53fdeb7a9d69a2", "patch": "@@ -4678,8 +4678,8 @@ main (argc, argv)\n #ifdef HAVE_LC_MESSAGES\n   setlocale (LC_MESSAGES, \"\");\n #endif\n-  bindtextdomain (PACKAGE, localedir);\n-  textdomain (PACKAGE);\n+  (void) bindtextdomain (PACKAGE, localedir);\n+  (void) textdomain (PACKAGE);\n \n   signal (SIGFPE, float_signal);\n "}]}