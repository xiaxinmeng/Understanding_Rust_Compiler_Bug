{"sha": "c2e99836a2751b6d970ca6e50c1a368f5d2a2375", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJlOTk4MzZhMjc1MWI2ZDk3MGNhNmU1MGMxYTM2OGY1ZDJhMjM3NQ==", "commit": {"author": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-07-17T13:22:48Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-07-29T10:16:38Z"}, "message": "Fortran  : ICE in gfc_conv_scalarized_array_ref PR53298\n\nWhen an array of characters is an argument to a subroutine and\nis accessed using (:)(1:) an ICE occurs.  The upper bound of the\nsubstring does not have an expression and such should not have\na Scalarization State structure added to the Scalarization State\nchain.\n\n2020-07-29  Mark Eggleston  <markeggleston@gcc.gnu.org>\n\ngcc/fortran/\n\n\tPR fortran/53298\n\t* trans-array.c (gfc_walk_array_ref): If ref->ss.end is set\n\tcall gfc_get_scalar_ss.\n\n2020-07-29  Mark Eggleston  <markeggleston@gcc.gnu.org>\n\ngcc/testsuite/\n\n\tPR fortran/53298\n\t* gfortran.dg/pr53298.f90: New test.", "tree": {"sha": "3b1400bfc24533ac0e088ca7b9909bc609b54462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b1400bfc24533ac0e088ca7b9909bc609b54462"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2e99836a2751b6d970ca6e50c1a368f5d2a2375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2e99836a2751b6d970ca6e50c1a368f5d2a2375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2e99836a2751b6d970ca6e50c1a368f5d2a2375", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2e99836a2751b6d970ca6e50c1a368f5d2a2375/comments", "author": null, "committer": null, "parents": [{"sha": "12324b9a934654a5c3bf4a614853ded2e0a958af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12324b9a934654a5c3bf4a614853ded2e0a958af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12324b9a934654a5c3bf4a614853ded2e0a958af"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "8f93b43bafbeac3618b2e2d7eceecfd90d82e027", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2e99836a2751b6d970ca6e50c1a368f5d2a2375/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2e99836a2751b6d970ca6e50c1a368f5d2a2375/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=c2e99836a2751b6d970ca6e50c1a368f5d2a2375", "patch": "@@ -10800,7 +10800,8 @@ gfc_walk_array_ref (gfc_ss * ss, gfc_expr * expr, gfc_ref * ref)\n       if (ref->type == REF_SUBSTRING)\n \t{\n \t  ss = gfc_get_scalar_ss (ss, ref->u.ss.start);\n-\t  ss = gfc_get_scalar_ss (ss, ref->u.ss.end);\n+\t  if (ref->u.ss.end)\n+\t    ss = gfc_get_scalar_ss (ss, ref->u.ss.end);\n \t}\n \n       /* We're only interested in array sections from now on.  */"}, {"sha": "998f88df926bd0f0727140174f841aae15c2961e", "filename": "gcc/testsuite/gfortran.dg/pr53298.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2e99836a2751b6d970ca6e50c1a368f5d2a2375/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr53298.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2e99836a2751b6d970ca6e50c1a368f5d2a2375/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr53298.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr53298.f90?ref=c2e99836a2751b6d970ca6e50c1a368f5d2a2375", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do run }\n+\n+program test\n+  character(len=5) :: str(3)\n+  str = [\"abcde\", \"12345\", \"ABCDE\" ]\n+  call f(str(:))\n+contains\n+  subroutine f(x)\n+    character(len=*) :: x(:)\n+    write(*,*) x(:)(1:) \n+  end subroutine f\n+end program test\n+\n+! { dg-output \"abcde12345ABCDE\" }"}]}