{"sha": "774b5662b439b3c2c48ffd0e0f19218f3054296f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc0YjU2NjJiNDM5YjNjMmM0OGZmZDBlMGYxOTIxOGYzMDU0Mjk2Zg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-08-08T01:23:01Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-08-08T01:23:01Z"}, "message": "aix.h (TARGET_ALTIVEC): Define to 0.\n\n        * config/rs6000/aix.h (TARGET_ALTIVEC): Define to 0.\n        (TARGET_ALTIVEC_ABI): Same.\n        (TARGET_ALTIVEC_VRSAVE): Same.\n\n        * config/rs6000/rs6000.c (rs6000_expand_ternop_builtin): Check\n        icode not CODE_FOR_nothing.  Change switch to if.\n\nFrom-SVN: r56115", "tree": {"sha": "0fb531f857d2af64bed571339893bdaf28e5d0fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fb531f857d2af64bed571339893bdaf28e5d0fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/774b5662b439b3c2c48ffd0e0f19218f3054296f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/774b5662b439b3c2c48ffd0e0f19218f3054296f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/774b5662b439b3c2c48ffd0e0f19218f3054296f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/774b5662b439b3c2c48ffd0e0f19218f3054296f/comments", "author": null, "committer": null, "parents": [{"sha": "957e9e48fa4e80e25c31330b3e45009c62fbd86f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/957e9e48fa4e80e25c31330b3e45009c62fbd86f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/957e9e48fa4e80e25c31330b3e45009c62fbd86f"}], "stats": {"total": 54, "additions": 35, "deletions": 19}, "files": [{"sha": "18ffc97cba6a9ac9c4ac73f6d1a6c0dd31113f56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/774b5662b439b3c2c48ffd0e0f19218f3054296f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/774b5662b439b3c2c48ffd0e0f19218f3054296f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=774b5662b439b3c2c48ffd0e0f19218f3054296f", "patch": "@@ -1,3 +1,12 @@\n+2002-08-08  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/aix.h (TARGET_ALTIVEC): Define to 0.\n+\t(TARGET_ALTIVEC_ABI): Same.\n+\t(TARGET_ALTIVEC_VRSAVE): Same.\n+\n+\t* config/rs6000/rs6000.c (rs6000_expand_ternop_builtin): Check\n+\ticode not CODE_FOR_nothing.  Change switch to if.\n+\n 2002-08-08  Alan Modra  <amodra@bigpond.net.au>\n \n \t* config/rs6000/rs6000.h (ASM_CPU_SPEC): Pass -mpower4 when cpu=power4."}, {"sha": "592ca555de29d5099fcb2a98c2f74f68c02dc9c8", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/774b5662b439b3c2c48ffd0e0f19218f3054296f/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/774b5662b439b3c2c48ffd0e0f19218f3054296f/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=774b5662b439b3c2c48ffd0e0f19218f3054296f", "patch": "@@ -21,8 +21,25 @@ Boston, MA 02111-1307, USA.  */\n \n /* Yes!  We are AIX!  */\n #define DEFAULT_ABI ABI_AIX\n-#undef TARGET_AIX\n+#undef  TARGET_AIX\n #define TARGET_AIX 1\n+\n+/* AIX always has a TOC.  */\n+#define TARGET_NO_TOC 0\n+#define TARGET_TOC 1\n+#define FIXED_R2 1\n+\n+/* AIX allows r13 to be used in 32-bit mode.  */\n+#define FIXED_R13 0\n+\n+/* AIX does not support Altivec.  */\n+#undef  TARGET_ALTIVEC\n+#define TARGET_ALTIVEC 0\n+#undef  TARGET_ALTIVEC_ABI\n+#define TARGET_ALTIVEC_ABI 0\n+#undef  TARGET_ALTIVEC_VRSAVE\n+#define TARGET_ALTIVEC_VRSAVE 0\n+\n /* The AIX linker will discard static constructors in object files before\n    collect has a chance to see them, so scan the object files directly.  */\n #define COLLECT_EXPORT_LIST\n@@ -122,8 +139,6 @@ Boston, MA 02111-1307, USA.  */\n    ? MAX (MAX ((COMPUTED), (SPECIFIED)), 64)\t\t\\\n    : MAX ((COMPUTED), (SPECIFIED)))\n \n-\n-\n /* Indicate that jump tables go in the text section.  */\n \n #define JUMP_TABLES_IN_TEXT_SECTION 1\n@@ -177,14 +192,6 @@ Boston, MA 02111-1307, USA.  */\n       }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n \n-/* AIX always has a TOC.  */\n-#define TARGET_NO_TOC\t\t0\n-#define\tTARGET_TOC\t\t1\n-\n-#define FIXED_R2 1\n-/* AIX allows r13 to be used.  */\n-#define FIXED_R13 0\n-\n /* __throw will restore its own return address to be the same as the\n    return address of the function that the throw is being made to.\n    This is unfortunate, because we want to check the original"}, {"sha": "46b9161e5c4689acc0f0ef89458f43f2fa092ea7", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/774b5662b439b3c2c48ffd0e0f19218f3054296f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/774b5662b439b3c2c48ffd0e0f19218f3054296f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=774b5662b439b3c2c48ffd0e0f19218f3054296f", "patch": "@@ -4368,28 +4368,28 @@ rs6000_expand_ternop_builtin (icode, arglist, target)\n   enum machine_mode mode1 = insn_data[icode].operand[2].mode;\n   enum machine_mode mode2 = insn_data[icode].operand[3].mode;\n \n+  if (icode == CODE_FOR_nothing)\n+    /* Builtin not supported on this processor.  */\n+    return 0;\n+\n   /* If we got invalid arguments bail out before generating bad rtl.  */\n   if (arg0 == error_mark_node\n       || arg1 == error_mark_node\n       || arg2 == error_mark_node)\n     return const0_rtx;\n \n-  switch (icode)\n+  if (icode == CODE_FOR_altivec_vsldoi_4sf\n+      || icode == CODE_FOR_altivec_vsldoi_4si\n+      || icode == CODE_FOR_altivec_vsldoi_8hi\n+      || icode == CODE_FOR_altivec_vsldoi_16qi)\n     {\n       /* Only allow 4-bit unsigned literals.  */\n-    case CODE_FOR_altivec_vsldoi_4sf:\n-    case CODE_FOR_altivec_vsldoi_4si:\n-    case CODE_FOR_altivec_vsldoi_8hi:\n-    case CODE_FOR_altivec_vsldoi_16qi:\n       if (TREE_CODE (arg2) != INTEGER_CST\n \t  || TREE_INT_CST_LOW (arg2) & ~0xf)\n \t{\n \t  error (\"argument 3 must be a 4-bit unsigned literal\");\n \t  return const0_rtx;\n \t}\n-      break;\n-    default:\n-      break;\n     }\n \n   if (target == 0"}]}