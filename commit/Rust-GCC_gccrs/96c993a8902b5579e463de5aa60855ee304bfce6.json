{"sha": "96c993a8902b5579e463de5aa60855ee304bfce6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZjOTkzYTg5MDJiNTU3OWU0NjNkZTVhYTYwODU1ZWUzMDRiZmNlNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2005-11-07T06:17:47Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2005-11-07T06:17:47Z"}, "message": "re PR c++/17256 (undefined but used static or inline functions should be diagnosed)\n\n        PR c++/17256\n        * decl2.c (cp_finish_file): Fix conditions for undefined warning.\n        Set TREE_NO_WARNING instead of TREE_PUBLIC.\n        * pt.c (instantiate_pending_templates): Set DECL_INITIAL to avoid\n        a warning on a function we didn't instantiate because of excessive\n        recursion.\n\nCo-Authored-By: James A. Morrison <phython@gcc.gnu.org>\n\nFrom-SVN: r106581", "tree": {"sha": "b3954c1365c27900e303289a67fbfaf60e6de188", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3954c1365c27900e303289a67fbfaf60e6de188"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96c993a8902b5579e463de5aa60855ee304bfce6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96c993a8902b5579e463de5aa60855ee304bfce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96c993a8902b5579e463de5aa60855ee304bfce6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96c993a8902b5579e463de5aa60855ee304bfce6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0572427ed71b533279fd15dfa22473b7cefaf9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0572427ed71b533279fd15dfa22473b7cefaf9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0572427ed71b533279fd15dfa22473b7cefaf9a"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "3d2f36ec7679bbab0990d3e4dd37de4d464b5418", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96c993a8902b5579e463de5aa60855ee304bfce6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96c993a8902b5579e463de5aa60855ee304bfce6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=96c993a8902b5579e463de5aa60855ee304bfce6", "patch": "@@ -1,3 +1,13 @@\n+2005-11-06  Jason Merrill  <jason@redhat.com>\n+\t    James A. Morrison <phython@gcc.gnu.org>\n+\n+\tPR c++/17256\n+\t* decl2.c (cp_finish_file): Fix conditions for undefined warning.\n+\tSet TREE_NO_WARNING instead of TREE_PUBLIC.\n+\t* pt.c (instantiate_pending_templates): Set DECL_INITIAL to avoid\n+\ta warning on a function we didn't instantiate because of excessive\n+\trecursion.\n+\n 2005-11-06  Mark Mitchell  <mark@codesourcery.com>\n \n \t* class.c (record_subobject_offsets): Don't record offsets past"}, {"sha": "dcf3217dfb308e9a9f166bf4a0e3847d9adb8723", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96c993a8902b5579e463de5aa60855ee304bfce6/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96c993a8902b5579e463de5aa60855ee304bfce6/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=96c993a8902b5579e463de5aa60855ee304bfce6", "patch": "@@ -3062,8 +3062,6 @@ cp_finish_file (void)\n     {\n       if (/* Check online inline functions that were actually used.  */\n \t  TREE_USED (decl) && DECL_DECLARED_INLINE_P (decl)\n-\t  /* But not defined.  */\n-\t  && DECL_REALLY_EXTERN (decl)\n \t  /* If the definition actually was available here, then the\n \t     fact that the function was not defined merely represents\n \t     that for some reason (use of a template repository,\n@@ -3076,10 +3074,8 @@ cp_finish_file (void)\n \t  && !DECL_EXPLICIT_INSTANTIATION (decl))\n \t{\n \t  warning (0, \"inline function %q+D used but never defined\", decl);\n-\t  /* This symbol is effectively an \"extern\" declaration now.\n-\t     This is not strictly necessary, but removes a duplicate\n-\t     warning.  */\n-\t  TREE_PUBLIC (decl) = 1;\n+\t  /* Avoid a duplicate warning from check_global_declaration_1.  */\n+\t  TREE_NO_WARNING (decl) = 1;\n \t}\n     }\n "}, {"sha": "c2fc36f2dfddc55baa06715cd0818ef67417ca8e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96c993a8902b5579e463de5aa60855ee304bfce6/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96c993a8902b5579e463de5aa60855ee304bfce6/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=96c993a8902b5579e463de5aa60855ee304bfce6", "patch": "@@ -11813,10 +11813,15 @@ instantiate_pending_templates (int retries)\n      to avoid infinite loop.  */\n   if (pending_templates && retries >= max_tinst_depth)\n     {\n+      tree decl = TREE_VALUE (pending_templates);\n+\n       error (\"template instantiation depth exceeds maximum of %d\"\n-\t    \" instantiating %q+D, possibly from virtual table generation\"\n-\t    \" (use -ftemplate-depth-NN to increase the maximum)\",\n-\t    max_tinst_depth, TREE_VALUE (pending_templates));\n+\t     \" instantiating %q+D, possibly from virtual table generation\"\n+\t     \" (use -ftemplate-depth-NN to increase the maximum)\",\n+\t     max_tinst_depth, decl);\n+      if (TREE_CODE (decl) == FUNCTION_DECL)\n+\t/* Pretend that we defined it.  */\n+\tDECL_INITIAL (decl) = error_mark_node;\n       return;\n     }\n "}, {"sha": "87fa3ec5a62966aeb5d40e135979168b6d3fe604", "filename": "gcc/testsuite/g++.dg/warn/undefined1.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96c993a8902b5579e463de5aa60855ee304bfce6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fundefined1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96c993a8902b5579e463de5aa60855ee304bfce6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fundefined1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fundefined1.C?ref=96c993a8902b5579e463de5aa60855ee304bfce6", "patch": "@@ -0,0 +1,7 @@\n+// PR 17256\n+\n+inline static void f1(void); // { dg-warning \"used but never\" }\n+void g1(void) { if (0) { f1(); } }\n+\n+inline void f2(void); // { dg-warning \"used but never\" }\n+void g2(void) { if (0) { f2(); } }"}]}