{"sha": "0a336522af17ebf153c8e3cd993dcc399714a5d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEzMzY1MjJhZjE3ZWJmMTUzYzhlM2NkOTkzZGNjMzk5NzE0YTVkOA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-07-04T11:14:13Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-07-04T11:14:13Z"}, "message": "aix.h (ASM_GENERATE_INTERNAL_LABEL): Fix format specifier.\n\n\t* rs6000/aix.h (ASM_GENERATE_INTERNAL_LABEL): Fix format specifier.\n\n\t* xcoffout.c (assign_type_number): Constify.\n\t(xcoffout_source_file): Add static prototype.  Don't needlessly\n\tcast away const-ness.\n\nFrom-SVN: r34866", "tree": {"sha": "395868f7c9ae1a31e4ba814fc2c7a55b0c545509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/395868f7c9ae1a31e4ba814fc2c7a55b0c545509"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a336522af17ebf153c8e3cd993dcc399714a5d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a336522af17ebf153c8e3cd993dcc399714a5d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a336522af17ebf153c8e3cd993dcc399714a5d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a336522af17ebf153c8e3cd993dcc399714a5d8/comments", "author": null, "committer": null, "parents": [{"sha": "55f972a449173e7d48b5ae5e5aae9039c46eba4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55f972a449173e7d48b5ae5e5aae9039c46eba4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55f972a449173e7d48b5ae5e5aae9039c46eba4d"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "074c22649fc34164dd205a6c21054eb816eb73a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a336522af17ebf153c8e3cd993dcc399714a5d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a336522af17ebf153c8e3cd993dcc399714a5d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a336522af17ebf153c8e3cd993dcc399714a5d8", "patch": "@@ -1,3 +1,11 @@\n+2000-07-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* rs6000/aix.h (ASM_GENERATE_INTERNAL_LABEL): Fix format specifier.\n+\n+\t* xcoffout.c (assign_type_number): Constify.\n+\t(xcoffout_source_file): Add static prototype.  Don't needlessly\n+\tcast away const-ness.\n+\n 2000-07-04  Jason Merrill  <jason@redhat.com>\n \n \t* frame.h (frame_state): Move base_offset to end."}, {"sha": "db781341b5dcb3075fcc59e2f7169a54ae7523f2", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a336522af17ebf153c8e3cd993dcc399714a5d8/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a336522af17ebf153c8e3cd993dcc399714a5d8/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=0a336522af17ebf153c8e3cd993dcc399714a5d8", "patch": "@@ -462,7 +462,7 @@ toc_section ()\t\t\t\t\t\t\\\n    This is suitable for output with `assemble_name'.  */\n \n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n-  sprintf (LABEL, \"*%s..%d\", PREFIX, NUM)\n+  sprintf (LABEL, \"*%s..%ld\", (PREFIX), (long)(NUM))\n \n /* This is how to output an assembler line to define N characters starting\n    at P to FILE.  */"}, {"sha": "7cfd636e9154789337832ffdf29ab6c65a05bdb9", "filename": "gcc/xcoffout.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a336522af17ebf153c8e3cd993dcc399714a5d8/gcc%2Fxcoffout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a336522af17ebf153c8e3cd993dcc399714a5d8/gcc%2Fxcoffout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.c?ref=0a336522af17ebf153c8e3cd993dcc399714a5d8", "patch": "@@ -117,8 +117,9 @@ const char *xcoff_lastfile;\n #define ASM_OUTPUT_LBE(FILE,LINENUM,BLOCKNUM) \\\n   fprintf (FILE, \"\\t.eb\\t%d\\n\", ABS_OR_RELATIVE_LINENO (LINENUM))\n \n-static void assign_type_number\t\tPARAMS ((tree, char *, int));\n+static void assign_type_number\t\tPARAMS ((tree, const char *, int));\n static void xcoffout_block\t\tPARAMS ((tree, int, tree));\n+static void xcoffout_source_file\tPARAMS ((FILE *, const char *, int));\n \f\n /* Support routines for XCOFF debugging info.  */\n \n@@ -128,7 +129,7 @@ static void xcoffout_block\t\tPARAMS ((tree, int, tree));\n static void\n assign_type_number (syms, name, number)\n      tree syms;\n-     char *name;\n+     const char *name;\n      int number;\n {\n   tree decl;\n@@ -326,7 +327,7 @@ stab_to_sclass (stab)\n /* Output debugging info to FILE to switch to sourcefile FILENAME.\n    INLINE_P is true if this is from an inlined function.  */\n \n-void\n+static void\n xcoffout_source_file (file, filename, inline_p)\n      FILE *file;\n      const char *filename;\n@@ -462,19 +463,19 @@ xcoffout_declare_function (file, decl, name)\n      tree decl;\n      const char *name;\n {\n-  char *n = (char *) name;\n   int i;\n \n-  if (*n == '*')\n-    n++;\n+  if (*name == '*')\n+    name++;\n   else\n     for (i = 0; name[i]; ++i)\n       {\n \tif (name[i] == '[')\n \t  {\n-\t    n = (char *) alloca (i + 1);\n+\t    char *n = (char *) alloca (i + 1);\n \t    strncpy (n, name, i);\n \t    n[i] = '\\0';\n+\t    name = n;\n \t    break;\n \t  }\n       }\n@@ -487,7 +488,8 @@ xcoffout_declare_function (file, decl, name)\n \n   /* .function NAME, TOP, MAPPING, TYPE, SIZE\n      16 and 044 are placeholders for backwards compatibility */\n-  fprintf (file, \"\\t.function .%s,.%s,16,044,FE..%s-.%s\\n\", n, n, n, n);\n+  fprintf (file, \"\\t.function .%s,.%s,16,044,FE..%s-.%s\\n\",\n+\t   name, name, name, name);\n }\n \n /* Called at beginning of function body (after prologue)."}]}