{"sha": "e1a4a8a03f700744c59e5b5e562fee0c33859c2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFhNGE4YTAzZjcwMDc0NGM1OWU1YjVlNTYyZmVlMGMzMzg1OWMyYw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-02T00:16:25Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-02T00:16:25Z"}, "message": "Daily bump.", "tree": {"sha": "816264924ba407d2947545d830d73ca2b6b24877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/816264924ba407d2947545d830d73ca2b6b24877"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1a4a8a03f700744c59e5b5e562fee0c33859c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a4a8a03f700744c59e5b5e562fee0c33859c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a4a8a03f700744c59e5b5e562fee0c33859c2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/comments", "author": null, "committer": null, "parents": [{"sha": "0c344a649d803a83ed35f629d292b98143935ffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c344a649d803a83ed35f629d292b98143935ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c344a649d803a83ed35f629d292b98143935ffa"}], "stats": {"total": 154, "additions": 153, "deletions": 1}, "files": [{"sha": "023e9e2fb0fe096935dca02b9ceee8b0663380bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1a4a8a03f700744c59e5b5e562fee0c33859c2c", "patch": "@@ -1,3 +1,54 @@\n+2020-09-01  Martin Sebor  <msebor@redhat.com>\n+\n+\t* builtins.c (compute_objsize):  Only replace the upper bound\n+\tof a POINTER_PLUS offset when it's less than the lower bound.\n+\n+2020-09-01  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR target/96808\n+\t* config/rs6000/rs6000-call.c (rs6000_gimple_fold_mma_builtin): Do not\n+\treuse accumulator memory reference for source and destination accesses.\n+\n+2020-09-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* cfgrtl.c (rtl_create_basic_block): Use default value for\n+\tgrowth vector function.\n+\t* gimple.c (gimple_set_bb): Likewise.\n+\t* symbol-summary.h: Likewise.\n+\t* tree-cfg.c (init_empty_tree_cfg_for_function): Likewise.\n+\t(build_gimple_cfg): Likewise.\n+\t(create_bb): Likewise.\n+\t(move_block_to_fn): Likewise.\n+\n+2020-09-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* vec.h (vec_safe_grow): Change default of exact to false.\n+\t(vec_safe_grow_cleared): Likewise.\n+\n+2020-09-01  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR middle-end/90597\n+\t* targhooks.c (default_vector_alignment): Return at least the\n+\tGET_MODE_ALIGNMENT for the type's mode.\n+\n+2020-09-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/96812\n+\t* tree-ssa-address.c (copy_ref_info): Also copy dependence info.\n+\t* cfgrtl.h (duplicate_insn_chain): Adjust prototype.\n+\t* cfgrtl.c (duplicate_insn_chain): Remap dependence info\n+\tif requested.\n+\t(cfg_layout_duplicate_bb): Make sure we remap dependence info.\n+\t* modulo-sched.c (duplicate_insns_of_cycles): Remap dependence\n+\tinfo.\n+\t(generate_prolog_epilog): Adjust.\n+\t* config/c6x/c6x.c (hwloop_optimize): Remap dependence info.\n+\n+2020-09-01  Kewen Lin  <linkw@gcc.gnu.org>\n+\n+\t* doc/sourcebuild.texi (has_arch_pwr5, has_arch_pwr6, has_arch_pwr7,\n+\thas_arch_pwr8, has_arch_pwr9): Document.\n+\n 2020-08-31  Carl Love  <cel@us.ibm.com>\n \n \tPR target/85830"}, {"sha": "bbf1226868f644c4ead996c379107ce062dd72b8", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=e1a4a8a03f700744c59e5b5e562fee0c33859c2c", "patch": "@@ -1 +1 @@\n-20200901\n+20200902"}, {"sha": "30beefeea2d99f65707cb55d81aa2b8a0be960ce", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=e1a4a8a03f700744c59e5b5e562fee0c33859c2c", "patch": "@@ -1,3 +1,9 @@\n+2020-09-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96792\n+\t* region-model.cc (region_model::deref_rvalue): Add the constraint\n+\tthat PTR_SVAL is non-NULL.\n+\n 2020-08-31  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/96798"}, {"sha": "01d1c6b241d9fa4ebbc5b166e256e5ac9f61b696", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=e1a4a8a03f700744c59e5b5e562fee0c33859c2c", "patch": "@@ -1,3 +1,9 @@\n+2020-09-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/96867\n+\t* c-typeck.c (handle_omp_array_sections_1): Test C_ARRAY_PARAMETER\n+\tonly on PARM_DECLs.\n+\n 2020-08-28  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/96596"}, {"sha": "c63df9c01b8176de3b5abbc2b1425400c4d4be65", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e1a4a8a03f700744c59e5b5e562fee0c33859c2c", "patch": "@@ -1,3 +1,14 @@\n+2020-09-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/77841\n+\t* init.c (build_new_1): Call reshape_init.\n+\n+2020-09-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/96867\n+\t* semantics.c (handle_omp_array_sections_1): Test\n+\tDECL_ARRAY_PARAMETER_P only on PARM_DECLs.\n+\n 2020-08-31  Marek Polacek  <polacek@redhat.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "874e06205290fa9bf03a725bdd30795d221be5e7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e1a4a8a03f700744c59e5b5e562fee0c33859c2c", "patch": "@@ -1,3 +1,11 @@\n+2020-09-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\t    Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/95398\n+\t* resolve.c (resolve_select_type): Add check for BT_CLASS\n+\ttype before using the CLASS_DATA macro which will have a\n+\tNULL pointer to derive components if it isn't BT_CLASS.\n+\n 2020-08-30  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n \n \tPR fortran/96728"}, {"sha": "27136f0a1272af5468320e5aec42b9acad1dd09c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e1a4a8a03f700744c59e5b5e562fee0c33859c2c", "patch": "@@ -1,3 +1,40 @@\n+2020-09-01  Martin Sebor  <msebor@redhat.com>\n+\n+\t* gcc.dg/Wstringop-overflow.c: Remove xfails.\n+\t* gcc.dg/Wstringop-overflow-42.c: New test.\n+\t* gcc.dg/Wstringop-overread-4.c: New test.\n+\n+2020-09-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/77841\n+\t* g++.dg/cpp0x/initlist-new4.C: New test.\n+\n+2020-09-01  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR target/96808\n+\t* gcc.target/powerpc/pr96808.c: New test.\n+\n+2020-09-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96792\n+\t* gcc.dg/analyzer/pr96792.c: New test.\n+\n+2020-09-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/95398\n+\t* gfortran.dg/pr95398.f90: New test.\n+\n+2020-09-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/96867\n+\t* c-c++-common/gomp/pr96867.c: New test.\n+\n+2020-09-01  Kewen Lin  <linkw@gcc.gnu.org>\n+\n+\t* lib/target-supports.exp\n+\t(check_effective_target_vect_len_load_store): Call check function\n+\tcheck_effective_target_has_arch_pwr9.\n+\n 2020-08-31  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/96798"}, {"sha": "32d014a7f0feefd19462cc1c080da17dfa5fa8ba", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a4a8a03f700744c59e5b5e562fee0c33859c2c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e1a4a8a03f700744c59e5b5e562fee0c33859c2c", "patch": "@@ -1,3 +1,36 @@\n+2020-09-01  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/71960\n+\t* include/bits/c++config (__glibcxx_assert_impl): Remove\n+\tdo-while so that uses of the macro need to add it.\n+\t(__glibcxx_assert): Rename macro for runtime assertions\n+\tto __glibcxx_assert_2.\n+\t(__glibcxx_assert_1): Define macro for constexpr assertions.\n+\t(__glibcxx_assert): Define macro for constexpr and runtime\n+\tassertions.\n+\t* include/bits/range_access.h (ranges::advance): Remove\n+\tredundant precondition checks during constant evaluation.\n+\t* include/parallel/base.h (_GLIBCXX_PARALLEL_ASSERT): Always\n+\tuse do-while in macro expansion.\n+\t* include/std/ranges (iota_view::iota_view(W, B)): Remove\n+\tredundant braces.\n+\n+2020-09-01  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/chrono (duration::_S_gcd(intmax_t, intmax_t)):\n+\tNew helper function for finding GCD of two positive intmax_t\n+\tvalues.\n+\t(duration::__divide): New helper alias for dividing one period\n+\tby another.\n+\t(duration::__is_harmonic): Use __divide not ratio_divide.\n+\t(duration(const duration<R2, P2>&)): Require the duration rep\n+\ttypes to be convertible.\n+\t* testsuite/20_util/duration/cons/dr2094.cc: New test.\n+\t* testsuite/20_util/duration/requirements/reduced_period.cc:\n+\tFix definition of unused member functions in test type.\n+\t* testsuite/20_util/duration/requirements/typedefs_neg2.cc:\n+\tAdjust expected errors.\n+\n 2020-08-29  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/numeric (__detail::__absu(bool)): Make deleted"}]}