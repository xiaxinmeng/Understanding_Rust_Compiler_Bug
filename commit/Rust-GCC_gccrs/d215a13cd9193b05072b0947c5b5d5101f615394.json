{"sha": "d215a13cd9193b05072b0947c5b5d5101f615394", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIxNWExM2NkOTE5M2IwNTA3MmIwOTQ3YzViNWQ1MTAxZjYxNTM5NA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2007-12-13T10:32:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:32:11Z"}, "message": "sem_disp.adb (Check_Dispatching_Call): If an actual in a call to an inherited operation is a defaulted...\n\n2007-12-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_disp.adb (Check_Dispatching_Call): If an actual in a call to an\n\tinherited operation is a defaulted tag-indeterminate call, and there is\n\ta statically tagged actual, use the static tag as a controlling actual\n\tfor the defaulted actual.\n\nFrom-SVN: r130856", "tree": {"sha": "c855eb54b6cac53876d6174c71a1e215e6424cc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c855eb54b6cac53876d6174c71a1e215e6424cc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d215a13cd9193b05072b0947c5b5d5101f615394", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d215a13cd9193b05072b0947c5b5d5101f615394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d215a13cd9193b05072b0947c5b5d5101f615394", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d215a13cd9193b05072b0947c5b5d5101f615394/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ccd94107b2bf56d54d62cefe515fd37584b1b25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ccd94107b2bf56d54d62cefe515fd37584b1b25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ccd94107b2bf56d54d62cefe515fd37584b1b25"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "06175587312a072f2b4ce2aa0b395979c0e87d9a", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d215a13cd9193b05072b0947c5b5d5101f615394/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d215a13cd9193b05072b0947c5b5d5101f615394/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=d215a13cd9193b05072b0947c5b5d5101f615394", "patch": "@@ -285,6 +285,10 @@ package body Sem_Disp is\n       Indeterm_Ancestor_Call : Boolean := False;\n       Indeterm_Ctrl_Type     : Entity_Id;\n \n+      Static_Tag : Node_Id := Empty;\n+      --  If a controlling formal has a statically tagged actual, the tag of\n+      --  this actual is to be used for any tag-indeterminate actual\n+\n       procedure Check_Dispatching_Context;\n       --  If the call is tag-indeterminate and the entity being called is\n       --  abstract, verify that the context is a call that will eventually\n@@ -379,6 +383,16 @@ package body Sem_Disp is\n             then\n                Indeterm_Ancestor_Call := True;\n                Indeterm_Ctrl_Type     := Etype (Formal);\n+\n+            --  If the formal is controlling but the actual is not, the type\n+            --  of the actual is statically known, and may be used as the\n+            --  controlling tag for some other-indeterminate actual.\n+\n+            elsif Is_Controlling_Formal (Formal)\n+              and then Is_Entity_Name (Actual)\n+              and then Is_Tagged_Type (Etype (Actual))\n+            then\n+               Static_Tag := Actual;\n             end if;\n \n             Next_Actual (Actual);\n@@ -400,11 +414,13 @@ package body Sem_Disp is\n \n          if No (Control)\n            and then Indeterm_Ancestor_Call\n+           and then No (Static_Tag)\n          then\n             Control :=\n               Make_Attribute_Reference (Loc,\n                 Prefix         => New_Occurrence_Of (Indeterm_Ctrl_Type, Loc),\n                 Attribute_Name => Name_Tag);\n+\n             Analyze (Control);\n          end if;\n \n@@ -455,12 +471,38 @@ package body Sem_Disp is\n             Set_Controlling_Argument (N, Control);\n             Check_Restriction (No_Dispatching_Calls, N);\n \n+         --  If there is a statically tagged actual, check whether\n+         --  some tag-indeterminate actual can use it.\n+\n+         elsif Present (Static_Tag) then\n+            Control :=\n+              Make_Attribute_Reference (Loc,\n+                Prefix         =>\n+                  New_Occurrence_Of (Etype (Static_Tag), Loc),\n+                Attribute_Name => Name_Tag);\n+\n+            Analyze (Control);\n+\n+            Actual := First_Actual (N);\n+            Formal := First_Formal (Subp_Entity);\n+            while Present (Actual) loop\n+               if Is_Tag_Indeterminate (Actual)\n+                 and then Is_Controlling_Formal (Formal)\n+               then\n+                  Propagate_Tag (Control, Actual);\n+               end if;\n+\n+               Next_Actual (Actual);\n+               Next_Formal (Formal);\n+            end loop;\n+\n+            Check_Dispatching_Context;\n+\n          else\n             --  The call is not dispatching, so check that there aren't any\n             --  tag-indeterminate abstract calls left.\n \n             Actual := First_Actual (N);\n-\n             while Present (Actual) loop\n                if Is_Tag_Indeterminate (Actual) then\n \n@@ -1381,6 +1423,7 @@ package body Sem_Disp is\n             elsif Is_Subprogram (Prim)\n               and then Present (Abstract_Interface_Alias (Prim))\n               and then Alias (Prim) = Prev_Op\n+              and then Present (Etype (New_Op))\n             then\n                Set_Alias (Prim, New_Op);\n                Check_Subtype_Conformant (New_Op, Prim);"}]}