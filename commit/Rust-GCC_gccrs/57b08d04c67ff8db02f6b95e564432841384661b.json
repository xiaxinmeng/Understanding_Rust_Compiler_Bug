{"sha": "57b08d04c67ff8db02f6b95e564432841384661b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdiMDhkMDRjNjdmZjhkYjAyZjZiOTVlNTY0NDMyODQxMzg0NjYxYg==", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@rfc1149.net", "date": "2008-09-02T16:23:29Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2008-09-02T16:23:29Z"}, "message": "re PR target/37283 (Cannot build crtbegin.o for ARM)\n\n    gcc/\n\tPR target/37283\n\t* opts.c (decode_options): Move processing of -fno-unit-at-a-time\n\tand -fno-toplevel-reorder after handle_options.\n\nFrom-SVN: r139892", "tree": {"sha": "99f189fd6d946be4d1a2672501a9fcb381ff46ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99f189fd6d946be4d1a2672501a9fcb381ff46ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57b08d04c67ff8db02f6b95e564432841384661b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b08d04c67ff8db02f6b95e564432841384661b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57b08d04c67ff8db02f6b95e564432841384661b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b08d04c67ff8db02f6b95e564432841384661b/comments", "author": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7612f14d074019d388035a3ab6ee509a0acd4e17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7612f14d074019d388035a3ab6ee509a0acd4e17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7612f14d074019d388035a3ab6ee509a0acd4e17"}], "stats": {"total": 53, "additions": 25, "deletions": 28}, "files": [{"sha": "d3d045586ac798044a38d7d51fa0db1034d2108d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b08d04c67ff8db02f6b95e564432841384661b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b08d04c67ff8db02f6b95e564432841384661b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57b08d04c67ff8db02f6b95e564432841384661b", "patch": "@@ -1,3 +1,9 @@\n+2008-09-02  Samuel Tardieu  <sam@rfc1149.net>\n+\n+\tPR target/37283\n+\t* opts.c (decode_options): Move processing of -fno-unit-at-a-time\n+\tand -fno-toplevel-reorder after handle_options.\n+\n 2008-09-02  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm.c (arm_tune_cortex_a9): Define."}, {"sha": "9bae6ea834904b9bbf6fcf8407f8d91994edbaf1", "filename": "gcc/opts.c", "status": "modified", "additions": 19, "deletions": 28, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b08d04c67ff8db02f6b95e564432841384661b/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b08d04c67ff8db02f6b95e564432841384661b/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=57b08d04c67ff8db02f6b95e564432841384661b", "patch": "@@ -870,39 +870,11 @@ decode_options (unsigned int argc, const char **argv)\n \t}\n     }\n   \n-  if (!flag_unit_at_a_time)\n-    {\n-      flag_section_anchors = 0;\n-      flag_toplevel_reorder = 0;\n-    }\n-  if (!flag_toplevel_reorder)\n-    {\n-      if (flag_section_anchors == 1)\n-        error (\"Section anchors must be disabled when toplevel reorder is disabled.\");\n-      flag_section_anchors = 0;\n-    }\n-\n #ifdef IRA_COVER_CLASSES\n   /* Use IRA if it is implemented for the target.  */\n   flag_ira = 1;\n #endif\n \n-  /* Originally we just set the variables if a particular optimization level,\n-     but with the advent of being able to change the optimization level for a\n-     function, we need to reset optimizations.  */\n-  if (!optimize)\n-    {\n-      flag_merge_constants = 0;\n-\n-      /* We disable toplevel reordering at -O0 to disable transformations that\n-         might be surprising to end users and to get -fno-toplevel-reorder\n-\t tested, but we keep section anchors.  */\n-      if (flag_toplevel_reorder == 2)\n-        flag_toplevel_reorder = 0;\n-    }\n-  else\n-    flag_merge_constants = 1;\n-\n   /* -O1 optimizations.  */\n   opt1 = (optimize >= 1);\n   flag_defer_pop = opt1;\n@@ -918,6 +890,7 @@ decode_options (unsigned int argc, const char **argv)\n   flag_if_conversion2 = opt1;\n   flag_ipa_pure_const = opt1;\n   flag_ipa_reference = opt1;\n+  flag_merge_constants = opt1;\n   flag_split_wide_types = opt1;\n   flag_tree_ccp = opt1;\n   flag_tree_dce = opt1;\n@@ -1035,6 +1008,24 @@ decode_options (unsigned int argc, const char **argv)\n \n   handle_options (argc, argv, lang_mask);\n \n+  /* -fno-unit-at-a-time and -fno-toplevel-reorder handling.  */\n+  if (!flag_unit_at_a_time)\n+    {\n+      flag_section_anchors = 0;\n+      flag_toplevel_reorder = 0;\n+    }\n+  else if (!optimize && flag_toplevel_reorder == 2)\n+    /* We disable toplevel reordering at -O0 to disable transformations that\n+       might be surprising to end users and to get -fno-toplevel-reorder\n+       tested, but we keep section anchors.  */\n+    flag_toplevel_reorder = 0;\n+  else if (!flag_toplevel_reorder)\n+    {\n+      if (flag_section_anchors == 1)\n+        error (\"section anchors must be disabled when toplevel reorder is disabled\");\n+      flag_section_anchors = 0;\n+    }\n+\n   if (first_time_p)\n     {\n       if (flag_pie)"}]}