{"sha": "2e3795d016a7263c82a4f64a7204f416d12a72da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUzNzk1ZDAxNmE3MjYzYzgyYTRmNjRhNzIwNGY0MTZkMTJhNzJkYQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-12-13T09:03:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-13T09:03:56Z"}, "message": "[Ada] Prevent inlining inside condition of while loop in GNATprove\n\n2019-12-13  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Call): Prevent inlining inside while loop\n\tconditions.\n\t* sem_util.adb, sem_util.ads (In_While_Loop_Condition): New\n\tquery function.\n\nFrom-SVN: r279347", "tree": {"sha": "50251f6c4c7b8928e9a446e70b716e274ee54f7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50251f6c4c7b8928e9a446e70b716e274ee54f7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e3795d016a7263c82a4f64a7204f416d12a72da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e3795d016a7263c82a4f64a7204f416d12a72da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e3795d016a7263c82a4f64a7204f416d12a72da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e3795d016a7263c82a4f64a7204f416d12a72da/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e841d4d8b3d1e64fe2f31329c8644ceca341874f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e841d4d8b3d1e64fe2f31329c8644ceca341874f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e841d4d8b3d1e64fe2f31329c8644ceca341874f"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "b5834a9de147607184faee3aa32a394bdfa0c8c1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3795d016a7263c82a4f64a7204f416d12a72da/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3795d016a7263c82a4f64a7204f416d12a72da/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2e3795d016a7263c82a4f64a7204f416d12a72da", "patch": "@@ -1,3 +1,10 @@\n+2019-12-13  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Call): Prevent inlining inside while loop\n+\tconditions.\n+\t* sem_util.adb, sem_util.ads (In_While_Loop_Condition): New\n+\tquery function.\n+\n 2019-12-13  Bob Duff  <duff@adacore.com>\n \n \t* impunit.ads: Add Ada_202X_Unit."}, {"sha": "11b531610e06b60b6ca59457a0a945322d71e80d", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3795d016a7263c82a4f64a7204f416d12a72da/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3795d016a7263c82a4f64a7204f416d12a72da/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=2e3795d016a7263c82a4f64a7204f416d12a72da", "patch": "@@ -7172,6 +7172,14 @@ package body Sem_Res is\n                     (\"cannot inline & (in potentially unevaluated context)?\",\n                      N, Nam_UA);\n \n+               --  Calls cannot be inlined inside the conditions of while\n+               --  loops, as this would create complex actions inside\n+               --  the condition, that are not handled by GNATprove.\n+\n+               elsif In_While_Loop_Condition (N) then\n+                  Cannot_Inline\n+                    (\"cannot inline & (in while loop condition)?\", N, Nam_UA);\n+\n                --  Do not inline calls which would possibly lead to missing a\n                --  type conversion check on an input parameter.\n "}, {"sha": "03ce7c0327af51c94ce66df2e426d029160f0b56", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3795d016a7263c82a4f64a7204f416d12a72da/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3795d016a7263c82a4f64a7204f416d12a72da/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2e3795d016a7263c82a4f64a7204f416d12a72da", "patch": "@@ -12855,6 +12855,30 @@ package body Sem_Util is\n         and then not In_Private_Part (Scope_Id);\n    end In_Visible_Part;\n \n+   -----------------------------\n+   -- In_While_Loop_Condition --\n+   -----------------------------\n+\n+   function In_While_Loop_Condition (N : Node_Id) return Boolean is\n+      Prev : Node_Id := N;\n+      P    : Node_Id := Parent (N);\n+      --  P and Prev will be used for traversing the AST, while maintaining an\n+      --  invariant that P = Parent (Prev).\n+   begin\n+      loop\n+         if No (P) then\n+            return False;\n+         elsif Nkind (P) = N_Iteration_Scheme\n+           and then Prev = Condition (P)\n+         then\n+            return True;\n+         else\n+            Prev := P;\n+            P := Parent (P);\n+         end if;\n+      end loop;\n+   end In_While_Loop_Condition;\n+\n    --------------------------------\n    -- Incomplete_Or_Partial_View --\n    --------------------------------"}, {"sha": "ea963deb44962f462f029f929901d38859303d06", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3795d016a7263c82a4f64a7204f416d12a72da/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3795d016a7263c82a4f64a7204f416d12a72da/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=2e3795d016a7263c82a4f64a7204f416d12a72da", "patch": "@@ -1446,6 +1446,9 @@ package Sem_Util is\n    --  package specification. The package must be on the scope stack, and the\n    --  corresponding private part must not.\n \n+   function In_While_Loop_Condition (N : Node_Id) return Boolean;\n+   --  Returns true if the expression N occurs within the condition of a while\n+\n    function Incomplete_Or_Partial_View (Id : Entity_Id) return Entity_Id;\n    --  Given the entity of a constant or a type, retrieve the incomplete or\n    --  partial view of the same entity. Note that Id may not have a partial"}]}