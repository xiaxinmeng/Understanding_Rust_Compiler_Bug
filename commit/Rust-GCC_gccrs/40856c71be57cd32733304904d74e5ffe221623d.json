{"sha": "40856c71be57cd32733304904d74e5ffe221623d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA4NTZjNzFiZTU3Y2QzMjczMzMwNDkwNGQ3NGU1ZmZlMjIxNjIzZA==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-11-06T20:43:46Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-11-06T20:43:46Z"}, "message": "enable loop fusion on isl-15\n\n       * graphite-optimize-isl.c (optimize_isl): Call\n       isl_options_set_schedule_maximize_band_depth.\n\n       * gcc.dg/graphite/fuse-1.c: New.\n       * gcc.dg/graphite/fuse-2.c: New.\n       * gcc.dg/graphite/interchange-13.c: Remove bogus check.\n\nCo-Authored-By: Sebastian Pop <s.pop@samsung.com>\n\nFrom-SVN: r229889", "tree": {"sha": "448efbb90c0a097a75b4f1bcf06f96cf9375e643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/448efbb90c0a097a75b4f1bcf06f96cf9375e643"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40856c71be57cd32733304904d74e5ffe221623d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40856c71be57cd32733304904d74e5ffe221623d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40856c71be57cd32733304904d74e5ffe221623d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40856c71be57cd32733304904d74e5ffe221623d/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1167ebe707eae615a2d16fe06edf5e1904a71c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1167ebe707eae615a2d16fe06edf5e1904a71c33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1167ebe707eae615a2d16fe06edf5e1904a71c33"}], "stats": {"total": 108, "additions": 103, "deletions": 5}, "files": [{"sha": "04bc2b4965953b78d8a80991553ffcde0bd9f4f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40856c71be57cd32733304904d74e5ffe221623d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40856c71be57cd32733304904d74e5ffe221623d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40856c71be57cd32733304904d74e5ffe221623d", "patch": "@@ -1,11 +1,17 @@\n 2015-11-06  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n \n-        * graphite-scop-detection.c (scop_detection::merge_sese): Entry\n+\t* graphite-optimize-isl.c (optimize_isl): Call\n+\tisl_options_set_schedule_maximize_band_depth.\n+\n+2015-11-06  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* graphite-scop-detection.c (scop_detection::merge_sese): Entry\n \tand exit edges should not be a part of irreducible loop.\n-        (scop_detection::can_represent_loop_1): Loops should not be\n+\t(scop_detection::can_represent_loop_1): Loops should not be\n \tirreducible.\n-        (scop_detection::harmful_stmt_in_region): All the basic block\n+\t(scop_detection::harmful_stmt_in_region): All the basic block\n \tshould belong to reducible loops.\n \n 2015-11-06  Christophe Lyon  <christophe.lyon@linaro.org>"}, {"sha": "0d859759da189b94f7db9d1fd74c41cb385314ba", "filename": "gcc/graphite-optimize-isl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40856c71be57cd32733304904d74e5ffe221623d/gcc%2Fgraphite-optimize-isl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40856c71be57cd32733304904d74e5ffe221623d/gcc%2Fgraphite-optimize-isl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-optimize-isl.c?ref=40856c71be57cd32733304904d74e5ffe221623d", "patch": "@@ -404,7 +404,7 @@ optimize_isl (scop_p scop)\n   isl_options_set_schedule_maximize_band_depth (scop->isl_context, 1);\n #ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n   /* ISL-0.15 or later.  */\n-  isl_options_set_schedule_serialize_sccs (scop->isl_context, 1);\n+  isl_options_set_schedule_maximize_band_depth (scop->isl_context, 1);\n #else\n   isl_options_set_schedule_fuse (scop->isl_context, ISL_SCHEDULE_FUSE_MIN);\n #endif"}, {"sha": "4af202213deb2d1f9262b93ef241f841d894a67d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40856c71be57cd32733304904d74e5ffe221623d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40856c71be57cd32733304904d74e5ffe221623d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=40856c71be57cd32733304904d74e5ffe221623d", "patch": "@@ -1,3 +1,10 @@\n+2015-11-06  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* gcc.dg/graphite/fuse-1.c: New.\n+\t* gcc.dg/graphite/fuse-2.c: New.\n+\t* gcc.dg/graphite/interchange-13.c: Remove bogus check.\n+\n 2015-11-06  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vqtbX.c: New test."}, {"sha": "c9bb67debe103af6f880e5d092f215ae2a4407c0", "filename": "gcc/testsuite/gcc.dg/graphite/fuse-1.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40856c71be57cd32733304904d74e5ffe221623d/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40856c71be57cd32733304904d74e5ffe221623d/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-1.c?ref=40856c71be57cd32733304904d74e5ffe221623d", "patch": "@@ -0,0 +1,43 @@\n+/* Check that the two loops are fused and that we manage to fold the two xor\n+   operations.  */\n+/* { dg-options \"-O2 -floop-nest-optimize -fdump-tree-forwprop-all\" } */\n+/* { dg-do run } */\n+\n+/* Make sure we fuse the loops like this:\n+ISL AST generated by ISL:\n+for (int c0 = 0; c0 <= 99; c0 += 1) {\n+  S_3(c0);\n+  S_6(c0);\n+  S_9(c0);\n+}\n+*/\n+/* { dg-final { scan-tree-dump-times \"ISL AST generated by ISL:.*for (int c0 = 0; c0 <= 99; c0 += 1) \\{.*S_.*(c0);.*S_.*(c0);.*S_.*(c0);.*\\}\" 1 \"graphite\" } } */\n+\n+/* Check that after fusing the loops, the scalar computation is also fused.  */\n+/* { dg-final { scan-tree-dump-times \"gimple_simplified to\\[^\\\\n\\]*\\\\^ 12\" 1 \"forwprop4\" } } */\n+\n+\n+\n+#define MAX 100\n+int A[MAX];\n+\n+extern void abort ();\n+\n+int\n+main (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < MAX; i++)\n+    A[i] = i;\n+  for(int i=0; i<MAX; i++)\n+    A[i] ^= 4;\n+  for(int i=0; i<MAX; i++)\n+    A[i] ^= 8;\n+\n+  for (i = 0; i < MAX; i++)\n+    if (A[i] != (i ^ 12))\n+      abort ();\n+\n+  return 0;\n+}"}, {"sha": "aaa5e2f8c36310fe68d5964b8665c5f459f5f397", "filename": "gcc/testsuite/gcc.dg/graphite/fuse-2.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40856c71be57cd32733304904d74e5ffe221623d/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40856c71be57cd32733304904d74e5ffe221623d/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-2.c?ref=40856c71be57cd32733304904d74e5ffe221623d", "patch": "@@ -0,0 +1,43 @@\n+/* Check that the three loops are fused.  */\n+/* { dg-options \"-O2 -floop-nest-optimize\" } */\n+/* { dg-do run } */\n+\n+/* Make sure we fuse the loops like this:\n+ISL AST generated by ISL:\n+for (int c0 = 0; c0 <= 99; c0 += 1) {\n+  S_3(c0);\n+  S_6(c0);\n+  S_9(c0);\n+}\n+*/\n+\n+/* { dg-final { scan-tree-dump-times \"ISL AST generated by ISL:.*for (int c0 = 0; c0 <= 99; c0 += 1) \\{.*S_.*(c0);.*S_.*(c0);.*S_.*(c0);.*\\}\" 1 \"graphite\" } } */\n+\n+#define MAX 100\n+int A[MAX], B[MAX], C[MAX];\n+\n+extern void abort ();\n+\n+int\n+main (void)\n+{\n+  int i;\n+\n+  /* The next three loops should be fused.  */\n+  for (i = 0; i < MAX; i++)\n+    {\n+      A[i] = i;\n+      B[i] = i + 2;\n+      C[i] = i + 1;\n+    }\n+  for(int i=0; i<MAX; i++)\n+    A[i] += B[i];\n+  for(int i=0; i<MAX; i++)\n+    A[i] += C[i];\n+\n+  for (i = 0; i < MAX; i++)\n+    if (A[i] != 3*i+3)\n+      abort ();\n+\n+  return 0;\n+}"}, {"sha": "4e4a83e3df48704fd5066edbccbcaa71248ce6ff", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-13.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40856c71be57cd32733304904d74e5ffe221623d/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40856c71be57cd32733304904d74e5ffe221623d/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-13.c?ref=40856c71be57cd32733304904d74e5ffe221623d", "patch": "@@ -49,4 +49,3 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"tiled\" \"graphite\" } } */"}]}