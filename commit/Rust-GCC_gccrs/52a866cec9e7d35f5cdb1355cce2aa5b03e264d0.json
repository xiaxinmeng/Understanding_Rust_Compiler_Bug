{"sha": "52a866cec9e7d35f5cdb1355cce2aa5b03e264d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJhODY2Y2VjOWU3ZDM1ZjVjZGIxMzU1Y2NlMmFhNWIwM2UyNjRkMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-21T22:35:49Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-21T22:35:49Z"}, "message": "(mulsidi3, umulsidi3): Add missing sign_extend\nand zero_extend so all operands have them.\n\nFrom-SVN: r3817", "tree": {"sha": "271445cfad9e5d9c7a6de59be248ea608148f6c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/271445cfad9e5d9c7a6de59be248ea608148f6c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52a866cec9e7d35f5cdb1355cce2aa5b03e264d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a866cec9e7d35f5cdb1355cce2aa5b03e264d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52a866cec9e7d35f5cdb1355cce2aa5b03e264d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a866cec9e7d35f5cdb1355cce2aa5b03e264d0/comments", "author": null, "committer": null, "parents": [{"sha": "e7c2ea2d7d0366c0137c83c10ed16188f01a8cdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c2ea2d7d0366c0137c83c10ed16188f01a8cdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7c2ea2d7d0366c0137c83c10ed16188f01a8cdb"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "e4e01764669bf4d10dd25ea7ef62f8c2eef6412c", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 28, "deletions": 12, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a866cec9e7d35f5cdb1355cce2aa5b03e264d0/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a866cec9e7d35f5cdb1355cce2aa5b03e264d0/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=52a866cec9e7d35f5cdb1355cce2aa5b03e264d0", "patch": "@@ -2368,13 +2368,15 @@\n \t   (mult:DI (zero_extend:DI\n \t\t     (match_operand:SI 1 \"register_operand\" \"\"))\n \t\t    (zero_extend:DI\n-\t\t     (match_operand:SI 2 \"nonimmediate_operand\" \"\"))) 1))\n+\t\t     (match_operand:SI 2 \"nonimmediate_operand\" \"\")))\n+\t   1))\n      (set (subreg:SI (match_dup 0) 0)\n \t  (subreg:SI\n \t   (mult:DI (zero_extend:DI\n \t\t     (match_dup 1))\n \t\t    (zero_extend:DI\n-\t\t     (match_dup 2))) 0))])]\n+\t\t     (match_dup 2)))\n+\t   0))])]\n   \"TARGET_68020\"\n   \"\")\n \n@@ -2384,13 +2386,15 @@\n \t (mult:DI (zero_extend:DI\n \t\t   (match_operand:SI 1 \"register_operand\" \"%0\"))\n \t\t  (zero_extend:DI\n-\t\t   (match_operand:SI 2 \"nonimmediate_operand\" \"dm\"))) 1))\n+\t\t   (match_operand:SI 2 \"nonimmediate_operand\" \"dm\")))\n+\t 1))\n    (set (match_operand:SI 3 \"register_operand\" \"=d\")\n \t(subreg:SI\n \t (mult:DI (zero_extend:DI\n \t\t   (match_dup 1))\n \t\t  (zero_extend:DI\n-\t\t   (match_dup 2))) 0))]\n+\t\t   (match_dup 2)))\n+\t 0))]\n   \"TARGET_68020\"\n   \"mulu%.l %2,%3:%0\")\n \n@@ -2399,12 +2403,16 @@\n \t(subreg:SI\n \t (mult:DI (zero_extend:DI\n \t\t   (match_operand:SI 1 \"register_operand\" \"%0\"))\n-\t\t  (match_operand:SI 2 \"immediate_operand\" \"sK\")) 1))\n+\t\t  (zero_extend:DI\n+\t\t   (match_operand:SI 2 \"immediate_operand\" \"sK\")))\n+\t 1))\n    (set (match_operand:SI 3 \"register_operand\" \"=d\")\n \t(subreg:SI\n \t (mult:DI (zero_extend:DI\n \t\t   (match_dup 1))\n-\t\t  (match_dup 2)) 0))]\n+\t\t  (zero_extend:DI\n+\t\t   (match_dup 2)))\n+\t 0))]\n   \"TARGET_68020\n    && (GET_CODE (operands[2]) != CONST_INT\n        || CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'K'))\"\n@@ -2417,13 +2425,15 @@\n \t   (mult:DI (sign_extend:DI\n \t\t     (match_operand:SI 1 \"register_operand\" \"\"))\n \t\t    (sign_extend:DI\n-\t\t     (match_operand:SI 2 \"nonimmediate_operand\" \"\"))) 1))\n+\t\t     (match_operand:SI 2 \"nonimmediate_operand\" \"\")))\n+\t   1))\n      (set (subreg:SI (match_dup 0) 0)\n \t  (subreg:SI\n \t   (mult:DI (sign_extend:DI\n \t\t     (match_dup 1))\n \t\t    (sign_extend:DI\n-\t\t     (match_dup 2))) 0))])]\n+\t\t     (match_dup 2)))\n+\t   0))])]\n   \"TARGET_68020\"\n   \"\")\n \n@@ -2433,13 +2443,15 @@\n \t (mult:DI (sign_extend:DI\n \t\t   (match_operand:SI 1 \"register_operand\" \"%0\"))\n \t\t  (sign_extend:DI\n-\t\t   (match_operand:SI 2 \"nonimmediate_operand\" \"dm\"))) 1))\n+\t\t   (match_operand:SI 2 \"nonimmediate_operand\" \"dm\")))\n+\t 1))\n    (set (match_operand:SI 3 \"register_operand\" \"=d\")\n \t(subreg:SI\n \t (mult:DI (sign_extend:DI\n \t\t   (match_dup 1))\n \t\t  (sign_extend:DI\n-\t\t   (match_dup 2))) 0))]\n+\t\t   (match_dup 2)))\n+\t 0))]\n   \"TARGET_68020\"\n   \"muls%.l %2,%3:%0\")\n \n@@ -2448,12 +2460,16 @@\n \t(subreg:SI\n \t (mult:DI (sign_extend:DI\n \t\t   (match_operand:SI 1 \"register_operand\" \"%0\"))\n-\t\t  (match_operand:SI 2 \"immediate_operand\" \"sK\")) 1))\n+\t\t  (sign_extend:DI\n+\t\t   (match_operand:SI 2 \"immediate_operand\" \"sK\")))\n+\t 1))\n    (set (match_operand:SI 3 \"register_operand\" \"=d\")\n \t(subreg:SI\n \t (mult:DI (sign_extend:DI\n \t\t   (match_dup 1))\n-\t\t   (match_dup 2)) 0))]\n+\t\t  (sign_extend:DI\n+\t\t   (match_dup 2)))\n+\t 0))]\n   \"TARGET_68020\n    && (GET_CODE (operands[2]) != CONST_INT\n        || CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'K'))\""}]}