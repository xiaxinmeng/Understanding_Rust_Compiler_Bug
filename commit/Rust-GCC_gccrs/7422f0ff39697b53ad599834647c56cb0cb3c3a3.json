{"sha": "7422f0ff39697b53ad599834647c56cb0cb3c3a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQyMmYwZmYzOTY5N2I1M2FkNTk5ODM0NjQ3YzU2Y2IwY2IzYzNhMw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2018-07-04T02:22:35Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-07-04T02:22:35Z"}, "message": "h8300.md (logical<mode>3_sn, [...]): Merge into a single pattern.\n\n        * config/h8300/h8300.md (logical<mode>3_sn, logical<mode>3): Merge\n        into a single pattern.\n\nFrom-SVN: r262369", "tree": {"sha": "6e33c0e440ac78e6c8d86a56065031e26e721c1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e33c0e440ac78e6c8d86a56065031e26e721c1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7422f0ff39697b53ad599834647c56cb0cb3c3a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7422f0ff39697b53ad599834647c56cb0cb3c3a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7422f0ff39697b53ad599834647c56cb0cb3c3a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7422f0ff39697b53ad599834647c56cb0cb3c3a3/comments", "author": null, "committer": null, "parents": [{"sha": "7af7cb515f8ee1af63f7998c2748281263ae6f48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7af7cb515f8ee1af63f7998c2748281263ae6f48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7af7cb515f8ee1af63f7998c2748281263ae6f48"}], "stats": {"total": 26, "additions": 4, "deletions": 22}, "files": [{"sha": "cd8f6ab5cbc91fc306776a49f58e9d33f1d7cc41", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7422f0ff39697b53ad599834647c56cb0cb3c3a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7422f0ff39697b53ad599834647c56cb0cb3c3a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7422f0ff39697b53ad599834647c56cb0cb3c3a3", "patch": "@@ -13,6 +13,9 @@\n \n 2018-07-03  Jeff Law  <law@redhat.com>\n \n+\t* config/h8300/h8300.md (logical<mode>3_sn, logical<mode>3): Merge\n+\tinto a single pattern.\n+\n \t* config/h8300/h8300.md (ors code_iterator): New.\n \t(bsetqi_msx, bnotqi_msx patterns and splitters): Consolidate into\n \ta single pattern and single splitter."}, {"sha": "70f96c7481f2811c9116a9c64e5c79e5c9b762c6", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7422f0ff39697b53ad599834647c56cb0cb3c3a3/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7422f0ff39697b53ad599834647c56cb0cb3c3a3/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=7422f0ff39697b53ad599834647c56cb0cb3c3a3", "patch": "@@ -1645,34 +1645,13 @@\n ;; {AND,IOR,XOR}{HI3,SI3} PATTERNS\n ;; ----------------------------------------------------------------------\n \n-;; We need a separate pattern here because machines other than the\n-;; original H8300 don't have to split the 16-bit operand into a pair\n-;; of high/low instructions, so we can accept literal addresses, that\n-;; have to be loaded into a register on H8300.\n-\n-(define_insn \"*logical<mode>3_sn\"\n-  [(set (match_operand:HSI 0 \"h8300_dst_operand\" \"=rQ\")\n-\t(match_operator:HSI 3 \"bit_operator\"\n-\t [(match_operand:HSI 1 \"h8300_dst_operand\" \"%0\")\n-\t  (match_operand:HSI 2 \"h8300_src_operand\" \"rQi\")]))]\n-  \"(TARGET_H8300S || TARGET_H8300H) && h8300_operands_match_p (operands)\"\n-{\n-  return output_logical_op (<MODE>mode, operands);\n-}\n-  [(set (attr \"length\")\n-\t(symbol_ref \"compute_logical_op_length (<MODE>mode, operands)\"))\n-   (set (attr \"cc\")\n-\t(symbol_ref \"compute_logical_op_cc (<MODE>mode, operands)\"))])\n-\n (define_insn \"*logical<mode>3\"\n   [(set (match_operand:HSI 0 \"h8300_dst_operand\" \"=rQ\")\n \t(match_operator:HSI 3 \"bit_operator\"\n \t  [(match_operand:HSI 1 \"h8300_dst_operand\" \"%0\")\n \t   (match_operand:HSI 2 \"h8300_src_operand\" \"rQi\")]))]\n   \"h8300_operands_match_p (operands)\"\n-{\n-  return output_logical_op (<MODE>mode, operands);\n-}\n+  { return output_logical_op (<MODE>mode, operands); }\n   [(set (attr \"length\")\n \t(symbol_ref \"compute_logical_op_length (<MODE>mode, operands)\"))\n    (set (attr \"cc\")"}]}