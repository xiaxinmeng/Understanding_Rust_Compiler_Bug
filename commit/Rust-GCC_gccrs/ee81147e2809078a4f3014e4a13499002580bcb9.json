{"sha": "ee81147e2809078a4f3014e4a13499002580bcb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU4MTE0N2UyODA5MDc4YTRmMzAxNGU0YTEzNDk5MDAyNTgwYmNiOQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-08T13:04:09Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-08T13:04:09Z"}, "message": "* pt.c, search.c: Fix comment typos.\n\nFrom-SVN: r88749", "tree": {"sha": "80f7bdd830ab652b75955dba7bc1baaef3ba10ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80f7bdd830ab652b75955dba7bc1baaef3ba10ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee81147e2809078a4f3014e4a13499002580bcb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee81147e2809078a4f3014e4a13499002580bcb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee81147e2809078a4f3014e4a13499002580bcb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee81147e2809078a4f3014e4a13499002580bcb9/comments", "author": null, "committer": null, "parents": [{"sha": "646544e3108686bc0dade228a4a77dbb6a602f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/646544e3108686bc0dade228a4a77dbb6a602f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/646544e3108686bc0dade228a4a77dbb6a602f54"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "80ea39131e90c63e9cd0be6057bd2d1e5a9e3379", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee81147e2809078a4f3014e4a13499002580bcb9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee81147e2809078a4f3014e4a13499002580bcb9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ee81147e2809078a4f3014e4a13499002580bcb9", "patch": "@@ -1,3 +1,7 @@\n+2004-10-08  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* pt.c, search.c: Fix comment typos.\n+\n 2004-10-08  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* cp-tree.h (dfs_walk, dfs_walk_real, dfs_unmark, markedp,"}, {"sha": "9a869eaecd2205986e11de66d8b8ef932be8860f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee81147e2809078a4f3014e4a13499002580bcb9/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee81147e2809078a4f3014e4a13499002580bcb9/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ee81147e2809078a4f3014e4a13499002580bcb9", "patch": "@@ -762,7 +762,7 @@ maybe_process_partial_specialization (tree type)\n     error (\"explicit specialization of non-template %qT\", type);\n }\n \n-/* Returns onzero if we can optimize the retrieval of specializations\n+/* Returns nonzero if we can optimize the retrieval of specializations\n    for TMPL, a TEMPLATE_DECL.  In particular, for such a template, we\n    do not use DECL_TEMPLATE_SPECIALIZATIONS at all.  */\n \n@@ -2417,7 +2417,7 @@ current_template_args (void)\n \n /* Return a TEMPLATE_DECL corresponding to DECL, using the indicated\n    template PARMS.  If MEMBER_TEMPLATE_P is true, the new template is\n-   a mebmer template.  Used by push_template_decl below.  */\n+   a member template.  Used by push_template_decl below.  */\n \n static tree\n build_template_decl (tree decl, tree parms, bool member_template_p)"}, {"sha": "cd6e9b2dc6549b3386027e3091bbe07b1c1b788b", "filename": "gcc/cp/search.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee81147e2809078a4f3014e4a13499002580bcb9/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee81147e2809078a4f3014e4a13499002580bcb9/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=ee81147e2809078a4f3014e4a13499002580bcb9", "patch": "@@ -937,7 +937,7 @@ accessible_p (tree type, tree decl)\n \t    encounter the same binfo twice.  */\n       else if (!BINFO_INHERITANCE_CHAIN (binfo))\n \t{\n-\t  /* We are at the top of the hierachy, and can use the\n+\t  /* We are at the top of the hierarchy, and can use the\n              CLASSTYPE_VBASECLASSES list for unmarking the virtual\n              bases.  */\n \t  VEC (tree) *vbases;\n@@ -1653,7 +1653,7 @@ dfs_walk_once (tree binfo, tree (*pre_fn) (tree, void *),\n       rval = dfs_walk_once_r (binfo, pre_fn, post_fn, data);\n       if (!BINFO_INHERITANCE_CHAIN (binfo))\n \t{\n-\t  /* We are at the top of the hierachy, and can use the\n+\t  /* We are at the top of the hierarchy, and can use the\n              CLASSTYPE_VBASECLASSES list for unmarking the virtual\n              bases.  */\n \t  VEC (tree) *vbases;"}]}