{"sha": "58076e217c5cbc9f578ea687a67ca49053d06674", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgwNzZlMjE3YzVjYmM5ZjU3OGVhNjg3YTY3Y2E0OTA1M2QwNjY3NA==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-02-19T21:12:09Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-02-19T21:12:09Z"}, "message": "re PR c++/41779 (Wconversion cannot see throught real*integer promotions)\n\n2010-02-19  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR 41779\n\t* c-common.c (conversion_warning): Remove widening conversions\n\tbefore checking the conversion of integers to reals.\ntestsuite/\n\t* c-c++-common/pr41779.c: New.\n\nFrom-SVN: r156911", "tree": {"sha": "a8b8399751e464e4ec4287a9c9a0996327cc76f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8b8399751e464e4ec4287a9c9a0996327cc76f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58076e217c5cbc9f578ea687a67ca49053d06674", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58076e217c5cbc9f578ea687a67ca49053d06674", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58076e217c5cbc9f578ea687a67ca49053d06674", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58076e217c5cbc9f578ea687a67ca49053d06674/comments", "author": null, "committer": null, "parents": [{"sha": "b42186f16474032ac2fa82027d3b7bf31e94daef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b42186f16474032ac2fa82027d3b7bf31e94daef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b42186f16474032ac2fa82027d3b7bf31e94daef"}], "stats": {"total": 59, "additions": 53, "deletions": 6}, "files": [{"sha": "f4a916b93d872bdac6a3afaf5d1b34b00bf8b430", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58076e217c5cbc9f578ea687a67ca49053d06674/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58076e217c5cbc9f578ea687a67ca49053d06674/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58076e217c5cbc9f578ea687a67ca49053d06674", "patch": "@@ -1,3 +1,9 @@\n+2010-02-19  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR 41779\n+\t* c-common.c (conversion_warning): Remove widening conversions\n+\tbefore checking the conversion of integers to reals.\n+\n 2010-02-19  Mike Stump  <mikestump@comcast.net>\n \n \tPR objc/43061"}, {"sha": "1039e24e0d4a44d3ab25b116a38fe75203acb370", "filename": "gcc/c-common.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58076e217c5cbc9f578ea687a67ca49053d06674/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58076e217c5cbc9f578ea687a67ca49053d06674/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=58076e217c5cbc9f578ea687a67ca49053d06674", "patch": "@@ -2192,12 +2192,17 @@ conversion_warning (tree type, tree expr)\n       else if (TREE_CODE (expr_type) == INTEGER_TYPE\n                && TREE_CODE (type) == REAL_TYPE)\n         {\n-          tree type_low_bound = TYPE_MIN_VALUE (expr_type);\n-          tree type_high_bound = TYPE_MAX_VALUE (expr_type);\n-          REAL_VALUE_TYPE real_low_bound\n-\t    = real_value_from_int_cst (0, type_low_bound);\n-          REAL_VALUE_TYPE real_high_bound\n-\t    = real_value_from_int_cst (0, type_high_bound);\n+\t  tree type_low_bound, type_high_bound;\n+          REAL_VALUE_TYPE real_low_bound, real_high_bound;\n+\n+\t  /* Don't warn about char y = 0xff; float x = (int) y;  */\n+\t  expr = get_unwidened (expr, 0);\n+\t  expr_type = TREE_TYPE (expr);\n+\n+          type_low_bound = TYPE_MIN_VALUE (expr_type);\n+          type_high_bound = TYPE_MAX_VALUE (expr_type);\n+          real_low_bound = real_value_from_int_cst (0, type_low_bound);\n+          real_high_bound = real_value_from_int_cst (0, type_high_bound);\n \n           if (!exact_real_truncate (TYPE_MODE (type), &real_low_bound)\n               || !exact_real_truncate (TYPE_MODE (type), &real_high_bound))"}, {"sha": "f5863dc085d0568391f1436c8e49946dcc64d3f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58076e217c5cbc9f578ea687a67ca49053d06674/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58076e217c5cbc9f578ea687a67ca49053d06674/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58076e217c5cbc9f578ea687a67ca49053d06674", "patch": "@@ -1,3 +1,8 @@\n+2010-02-19  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR 41779\n+\t* c-c++-common/pr41779.c: New.\n+\n 2010-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/43084"}, {"sha": "f7153d9299e0dd5f13618e0734ed636fab3bc1af", "filename": "gcc/testsuite/c-c++-common/pr41779.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58076e217c5cbc9f578ea687a67ca49053d06674/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr41779.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58076e217c5cbc9f578ea687a67ca49053d06674/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr41779.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr41779.c?ref=58076e217c5cbc9f578ea687a67ca49053d06674", "patch": "@@ -0,0 +1,31 @@\n+/* PR41779: Wconversion cannot see throught real*integer promotions. */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"doubles are floats\" { \"avr-*-*\" } { \"*\" } { \"\" } } */\n+/* { dg-options \"-std=c99 -Wconversion\" { target c } } */\n+/* { dg-options \"-Wconversion\" { target c++ } } */\n+/* { dg-require-effective-target large_double } */\n+\n+float f(float x, unsigned short y)\n+{\n+  return x * y;\n+}\n+\n+float f(float x, short y)\n+{\n+  return x * y;\n+}\n+\n+float f(float x, char y)\n+{\n+  return x * y;\n+}\n+\n+float f(float x, unsigned char y)\n+{\n+  return x * y;\n+}\n+\n+float f(float x, int y)\n+{\n+  return x * y; /* { dg-warning \"conversion\" } */\n+}"}]}