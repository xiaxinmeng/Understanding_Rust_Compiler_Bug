{"sha": "f6184c76904589daa59cce04b2250dbb9b1796db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYxODRjNzY5MDQ1ODlkYWE1OWNjZTA0YjIyNTBkYmI5YjE3OTZkYg==", "commit": {"author": {"name": "Dave Love", "email": "d.love@dl.ac.uk", "date": "1998-09-30T11:51:37Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-09-30T11:51:37Z"}, "message": "u77-test.f (main): Excise `hostnm' to avoid losing on systems which need -lsocket.\n\n1998-09-30  Dave Love  <d.love@dl.ac.uk>\n\t* g77.f-torture/execute/u77-test.f (main): Excise `hostnm' to\n\tavoid losing on systems which need -lsocket.\n\nFrom-SVN: r22669", "tree": {"sha": "bc1ddf9ef5e4f630d23c805e4ca000b0f5f4bba8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc1ddf9ef5e4f630d23c805e4ca000b0f5f4bba8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6184c76904589daa59cce04b2250dbb9b1796db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6184c76904589daa59cce04b2250dbb9b1796db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6184c76904589daa59cce04b2250dbb9b1796db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6184c76904589daa59cce04b2250dbb9b1796db/comments", "author": null, "committer": null, "parents": [{"sha": "43b80f824750e5405df6fd79e6455c1b7c7b475d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b80f824750e5405df6fd79e6455c1b7c7b475d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43b80f824750e5405df6fd79e6455c1b7c7b475d"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "c60f8064b2e3712d250e768782c614d264358728", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6184c76904589daa59cce04b2250dbb9b1796db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6184c76904589daa59cce04b2250dbb9b1796db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6184c76904589daa59cce04b2250dbb9b1796db", "patch": "@@ -1,3 +1,8 @@\n+1998-09-30  Dave Love  <d.love@dl.ac.uk>\n+\n+\t* g77.f-torture/execute/u77-test.f (main): Excise `hostnm' to\n+\tavoid losing on systems which need -lsocket.\n+\n 1998-09-28  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* g++.old-deja/g++.other/bitfld1.C: expected failure"}, {"sha": "07928fb3cb3497a000971786507489b728db42bd", "filename": "gcc/testsuite/g77.f-torture/execute/u77-test.f", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6184c76904589daa59cce04b2250dbb9b1796db/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fu77-test.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6184c76904589daa59cce04b2250dbb9b1796db/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fu77-test.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fu77-test.f?ref=f6184c76904589daa59cce04b2250dbb9b1796db", "patch": "@@ -9,7 +9,7 @@\n       real tarray1(2), tarray2(2), r1, r2, sum\n       intrinsic getpid, getuid, getgid, ierrno, gerror,\n      +     fnum, isatty, getarg, access, unlink, fstat,\n-     +     stat, lstat, getcwd, gmtime, hostnm, etime, chmod,\n+     +     stat, lstat, getcwd, gmtime, etime, chmod,\n      +     chdir, fgetc, fputc, system_clock, second, idate, secnds,\n      +     time, ctime, fdate, ttynam, date_and_time\n       external lenstr, ctrlc\n@@ -159,13 +159,15 @@\n         write (6,*) '***CHDIR to \".\": ', i\n         call abort\n       end if\n-      i=hostnm(wd)\n-      if(i.ne.0) then\n-        call perror ('*** hostnm')\n-        call abort\n-      else\n-        write (6,*) 'Host name is ', wd(:lenstr(wd))\n-      end if\n+CCC   Don't do this, beacuse some targets need -lsocket, which we don't\n+CCC   have a mechanism for supplying.\n+CCC      i=hostnm(wd)\n+CCC      if(i.ne.0) then\n+CCC        call perror ('*** hostnm')\n+CCC        call abort\n+CCC      else\n+CCC        write (6,*) 'Host name is ', wd(:lenstr(wd))\n+CCC      end if\n       i = access('/dev/null ', 'rw')\n       if (i.ne.0) write (6,*) '***Read/write ACCESS to /dev/null: ', i\n       write (6,*) 'Creating file \"foo\" for testing...'"}]}