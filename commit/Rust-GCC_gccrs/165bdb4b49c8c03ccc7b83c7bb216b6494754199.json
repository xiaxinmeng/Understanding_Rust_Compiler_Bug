{"sha": "165bdb4b49c8c03ccc7b83c7bb216b6494754199", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY1YmRiNGI0OWM4YzAzY2NjN2I4M2M3YmIyMTZiNjQ5NDc1NDE5OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T09:41:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T09:41:26Z"}, "message": "[multiple changes]\n\n2013-04-11  Tristan Gingold  <gingold@adacore.com>\n\n\t* gnat_rm.texi: Add Detect_BLocking in the ravenscar profile\n\tpragma list.\n\n2013-04-11  Vincent Celier  <celier@adacore.com>\n\n\t* gnatname.adb (Scan_Args): Recognize new switch --no-backup\n\t(Usage): Add line for --no-backup.\n\t* opt.ads (No_Nackup): New Boolean variable, initialized to False.\n\t* prj-makr.adb (Initialize): Create a backup for an existing\n\tproject file if gnatname is not invoked with --no-backup.\n\nFrom-SVN: r197750", "tree": {"sha": "9371da8d3e853d2c17232aaf57915baeadc4368e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9371da8d3e853d2c17232aaf57915baeadc4368e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/165bdb4b49c8c03ccc7b83c7bb216b6494754199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165bdb4b49c8c03ccc7b83c7bb216b6494754199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/165bdb4b49c8c03ccc7b83c7bb216b6494754199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165bdb4b49c8c03ccc7b83c7bb216b6494754199/comments", "author": null, "committer": null, "parents": [{"sha": "81f6cd563f4a95ea24eef73afeddcef69bfc0213", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81f6cd563f4a95ea24eef73afeddcef69bfc0213", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81f6cd563f4a95ea24eef73afeddcef69bfc0213"}], "stats": {"total": 75, "additions": 65, "deletions": 10}, "files": [{"sha": "386ce233483b432fda0620ef382d756b3ba226f4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bdb4b49c8c03ccc7b83c7bb216b6494754199/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bdb4b49c8c03ccc7b83c7bb216b6494754199/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=165bdb4b49c8c03ccc7b83c7bb216b6494754199", "patch": "@@ -1,3 +1,16 @@\n+2013-04-11  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* gnat_rm.texi: Add Detect_BLocking in the ravenscar profile\n+\tpragma list.\n+\n+2013-04-11  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatname.adb (Scan_Args): Recognize new switch --no-backup\n+\t(Usage): Add line for --no-backup.\n+\t* opt.ads (No_Nackup): New Boolean variable, initialized to False.\n+\t* prj-makr.adb (Initialize): Create a backup for an existing\n+\tproject file if gnatname is not invoked with --no-backup.\n+\n 2013-04-11  Thomas Quinot  <quinot@adacore.com>\n \n \t* exp_ch4.adb: Minor code improvement: replace various calls to"}, {"sha": "75d83de69d3c12d92f63f9c35c965572e7fd578b", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bdb4b49c8c03ccc7b83c7bb216b6494754199/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bdb4b49c8c03ccc7b83c7bb216b6494754199/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=165bdb4b49c8c03ccc7b83c7bb216b6494754199", "patch": "@@ -4857,10 +4857,10 @@ priority-ordered scheduling policy.\n @item Locking_Policy (Ceiling_Locking)\n [RM D.3] While tasks and interrupts execute a protected action, they inherit\n the ceiling priority of the corresponding protected object.\n-@c\n-@c @item Detect_Blocking\n-@c This pragma forces the detection of potentially blocking operations within a\n-@c protected operation, and to raise Program_Error if that happens.\n+\n+@item Detect_Blocking\n+This pragma forces the detection of potentially blocking operations within a\n+protected operation, and to raise Program_Error if that happens.\n @end table\n @noindent\n "}, {"sha": "3c687315e535e3feee6ac476962dab10d015a0c2", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bdb4b49c8c03ccc7b83c7bb216b6494754199/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bdb4b49c8c03ccc7b83c7bb216b6494754199/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=165bdb4b49c8c03ccc7b83c7bb216b6494754199", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -346,6 +346,11 @@ procedure Gnatname is\n                   Subdirs :=\n                     new String'(Arg (Subdirs_Switch'Length + 1 .. Arg'Last));\n \n+               --  --no-backup\n+\n+               elsif Arg = \"--no-backup\" then\n+                  Opt.No_Backup := True;\n+\n                --  -c\n \n                elsif Arg'Length >= 2 and then Arg (1 .. 2) = \"-c\" then\n@@ -515,6 +520,7 @@ procedure Gnatname is\n          Display_Usage_Version_And_Help;\n \n          Write_Line (\"  --subdirs=dir real obj/lib/exec dirs are subdirs\");\n+         Write_Line (\"  --no-backup   do not create backup of project file\");\n          Write_Eol;\n \n          Write_Line (\"  --and        use different patterns\");"}, {"sha": "8f60b71f895156f64ef0d856c7f53f2bd268e223", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bdb4b49c8c03ccc7b83c7bb216b6494754199/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bdb4b49c8c03ccc7b83c7bb216b6494754199/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=165bdb4b49c8c03ccc7b83c7bb216b6494754199", "patch": "@@ -119,14 +119,11 @@ package Opt is\n    --  Think twice before using \"=\"; Ada_Version >= Ada_2012 is more likely\n    --  what you want, because it will apply to future versions of the language.\n \n-   Ada_Version_Default : constant Ada_Version_Type := Ada_2005;\n+   Ada_Version_Default : constant Ada_Version_Type := Ada_2012;\n    pragma Warnings (Off, Ada_Version_Default);\n    --  GNAT\n    --  Default Ada version if no switch given. The Warnings off is to kill\n    --  constant condition warnings.\n-   --\n-   --  WARNING: some scripts rely on the format of this line of code. Any\n-   --  change must be coordinated with the scripts requirements.\n \n    Ada_Version : Ada_Version_Type := Ada_Version_Default;\n    --  GNAT\n@@ -986,6 +983,11 @@ package Opt is\n    --  in this variable (e.g. 2 = select second unit in file). A value of\n    --  zero indicates that we are in normal (one unit per file) mode.\n \n+   No_Backup : Boolean := False;\n+   --  GNATNAME\n+   --  Set by switch --no-backup.\n+   --  Do not create backup copies of project files.\n+\n    No_Deletion : Boolean := False;\n    --  GNATPREP\n    --  Set by preprocessor switch -a. Do not eliminate any source text. Implies"}, {"sha": "56ca6a69c0af4e887ff252d473b27f3b72842754", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bdb4b49c8c03ccc7b83c7bb216b6494754199/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bdb4b49c8c03ccc7b83c7bb216b6494754199/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=165bdb4b49c8c03ccc7b83c7bb216b6494754199", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,6 +24,7 @@\n ------------------------------------------------------------------------------\n \n with Csets;\n+with Hostparm;\n with Opt;\n with Output;\n with Osint;    use Osint;\n@@ -1047,6 +1048,39 @@ package body Prj.Makr is\n            Project_File_Extension;\n          Output_Name_Last := Output_Name_Last + Project_File_Extension'Length;\n \n+         --  Back up project file if it already exists\n+\n+         if not Hostparm.OpenVMS\n+           and then not Opt.No_Backup\n+           and then\n+             Is_Regular_File (Path_Name (1 .. Path_Last))\n+         then\n+            declare\n+               Discard : Boolean;\n+               Saved_Path : constant String :=\n+                 Path_Name (1 .. Path_Last) & \".saved_\";\n+               Nmb : Natural := 0;\n+            begin\n+               loop\n+                  declare\n+                     Img : constant String := Nmb'Img;\n+                  begin\n+                     if not Is_Regular_File\n+                             (Saved_Path & Img (2 .. Img'Last))\n+                     then\n+                        Copy_File\n+                          (Name => Path_Name (1 .. Path_Last),\n+                           Pathname => Saved_Path & Img (2 .. Img'Last),\n+                           Mode => Overwrite,\n+                           Success => Discard);\n+                        exit;\n+                     end if;\n+\n+                     Nmb := Nmb + 1;\n+                  end;\n+               end loop;\n+            end;\n+         end if;\n       end if;\n \n       --  Change the current directory to the directory of the project file,"}]}