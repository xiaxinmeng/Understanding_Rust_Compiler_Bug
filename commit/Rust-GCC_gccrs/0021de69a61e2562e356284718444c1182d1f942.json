{"sha": "0021de69a61e2562e356284718444c1182d1f942", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAyMWRlNjlhNjFlMjU2MmUzNTYyODQ3MTg0NDRjMTE4MmQxZjk0Mg==", "commit": {"author": {"name": "Daniel Berlin", "email": "dan@cgsoftware.com", "date": "2001-07-17T06:44:57Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-07-17T06:44:57Z"}, "message": "cse.c (set_live_p): Take INSN argument for cc0; update callers.\n\n        * cse.c (set_live_p): Take INSN argument for cc0; update callers.\n        (insn_live_p): Fix fall off end of function.\n        (dead_libcall_p): Remove COUNTS argument; update callers.\n        (delete_trivially_dead_insns): Remove unused variables.\n\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r44064", "tree": {"sha": "7defbb29d2af6a62930fd2e8ce4a2432b2dd8f05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7defbb29d2af6a62930fd2e8ce4a2432b2dd8f05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0021de69a61e2562e356284718444c1182d1f942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0021de69a61e2562e356284718444c1182d1f942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0021de69a61e2562e356284718444c1182d1f942", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0021de69a61e2562e356284718444c1182d1f942/comments", "author": null, "committer": null, "parents": [{"sha": "51589632126f20e47b5bf2ec04bf6acc002ce106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51589632126f20e47b5bf2ec04bf6acc002ce106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51589632126f20e47b5bf2ec04bf6acc002ce106"}], "stats": {"total": 51, "additions": 30, "deletions": 21}, "files": [{"sha": "439e841bda83c9863275c821f449f16ea6fdf1bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0021de69a61e2562e356284718444c1182d1f942/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0021de69a61e2562e356284718444c1182d1f942/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0021de69a61e2562e356284718444c1182d1f942", "patch": "@@ -1,3 +1,11 @@\n+2001-07-16  Daniel Berlin  <dan@cgsoftware.com>\n+\t    Richard Henderson  <rth@redhat.com>\n+\n+\t* cse.c (set_live_p): Take INSN argument for cc0; update callers.\n+\t(insn_live_p): Fix fall off end of function.\n+\t(dead_libcall_p): Remove COUNTS argument; update callers.\n+\t(delete_trivially_dead_insns): Remove unused variables.\n+\n 2001-07-17  Andreas Jaeger  <aj@suse.de>\n \n \t* config/i386/unix.h (ASM_OUTPUT_MI_THUNK): Fix output format for"}, {"sha": "266b1076c755dd93ae9de5874d11440ee2dce78a", "filename": "gcc/cse.c", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0021de69a61e2562e356284718444c1182d1f942/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0021de69a61e2562e356284718444c1182d1f942/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=0021de69a61e2562e356284718444c1182d1f942", "patch": "@@ -690,8 +690,8 @@ static int check_dependence\tPARAMS ((rtx *, void *));\n \n static void flush_hash_table\tPARAMS ((void));\n static bool insn_live_p\t\tPARAMS ((rtx, int *));\n-static bool set_live_p\t\tPARAMS ((rtx, int *));\n-static bool dead_libcall_p\tPARAMS ((rtx, int *));\n+static bool set_live_p\t\tPARAMS ((rtx, rtx, int *));\n+static bool dead_libcall_p\tPARAMS ((rtx));\n \f\n /* Dump the expressions in the equivalence class indicated by CLASSP.\n    This function is used only for debugging.  */\n@@ -7486,8 +7486,9 @@ count_reg_usage (x, counts, dest, incr)\n \f\n /* Return true if set is live.  */\n static bool\n-set_live_p (set, counts)\n+set_live_p (set, insn, counts)\n      rtx set;\n+     rtx insn;\n      int *counts;\n {\n #ifdef HAVE_cc0\n@@ -7527,30 +7528,32 @@ insn_live_p (insn, counts)\n {\n   int i;\n   if (GET_CODE (PATTERN (insn)) == SET)\n-    return set_live_p (PATTERN (insn), counts);\n+    return set_live_p (PATTERN (insn), insn, counts);\n   else if (GET_CODE (PATTERN (insn)) == PARALLEL)\n-    for (i = XVECLEN (PATTERN (insn), 0) - 1; i >= 0; i--)\n-      {\n-\trtx elt = XVECEXP (PATTERN (insn), 0, i);\n+    {\n+      for (i = XVECLEN (PATTERN (insn), 0) - 1; i >= 0; i--)\n+\t{\n+\t  rtx elt = XVECEXP (PATTERN (insn), 0, i);\n \n-\tif (GET_CODE (elt) == SET)\n-\t  {\n-\t    if (set_live_p (elt, counts))\n-\t      return true;\n-\t  }\n-\telse if (GET_CODE (elt) != CLOBBER && GET_CODE (elt) != USE)\n-\t  return true;\n-      }\n+\t  if (GET_CODE (elt) == SET)\n+\t    {\n+\t      if (set_live_p (elt, insn, counts))\n+\t\treturn true;\n+\t    }\n+\t  else if (GET_CODE (elt) != CLOBBER && GET_CODE (elt) != USE)\n+\t    return true;\n+\t}\n+      return false;\n+    }\n   else\n     return true;\n }\n \n /* Return true if libcall is dead as a whole.  */\n \n static bool\n-dead_libcall_p (insn, counts)\n+dead_libcall_p (insn)\n      rtx insn;\n-     int *counts;\n {\n   rtx note;\n   /* See if there's a REG_EQUAL note on this insn and try to\n@@ -7616,7 +7619,6 @@ delete_trivially_dead_insns (insns, nreg, preserve_basic_blocks)\n     for (; insn; insn = prev)\n       {\n \tint live_insn = 0;\n-\trtx note;\n \n \tprev = prev_real_insn (insn);\n \n@@ -7629,7 +7631,7 @@ delete_trivially_dead_insns (insns, nreg, preserve_basic_blocks)\n \t  {\n \t    in_libcall = 1;\n \t    live_insn = 1;\n-\t    dead_libcall = dead_libcall_p (insn, counts);\n+\t    dead_libcall = dead_libcall_p (insn);\n \t  }\n \telse if (in_libcall)\n \t  live_insn = ! dead_libcall;\n@@ -7656,7 +7658,6 @@ delete_trivially_dead_insns (insns, nreg, preserve_basic_blocks)\n       for (bb = BASIC_BLOCK (i), insn = bb->end; insn != bb->head; insn = prev)\n \t{\n \t  int live_insn = 0;\n-\t  rtx note;\n \n \t  prev = PREV_INSN (insn);\n \t  if (!INSN_P (insn))\n@@ -7671,7 +7672,7 @@ delete_trivially_dead_insns (insns, nreg, preserve_basic_blocks)\n \t    {\n \t      in_libcall = 1;\n \t      live_insn = 1;\n-\t      dead_libcall = dead_libcall_p (insn, counts);\n+\t      dead_libcall = dead_libcall_p (insn);\n \t    }\n \t  else if (in_libcall)\n \t    live_insn = ! dead_libcall;"}]}