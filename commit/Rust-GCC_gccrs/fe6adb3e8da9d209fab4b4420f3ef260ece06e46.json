{"sha": "fe6adb3e8da9d209fab4b4420f3ef260ece06e46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU2YWRiM2U4ZGE5ZDIwOWZhYjRiNDQyMGYzZWYyNjBlY2UwNmU0Ng==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2001-04-20T01:13:37Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-04-20T01:13:37Z"}, "message": "pa-linux.h (CPLUSPLUS_CPP_SPEC): Undefine.\n\n        * config/pa/pa-linux.h (CPLUSPLUS_CPP_SPEC): Undefine.\n        * config/pa/pa.h (CPLUSPLuS_CPP_SPEC): Define.\n\n        * config/pa/som.h (ASM_OUTPUT_FUNCTION_PREFIX): Truncate subspace\n        name at 32 total characters.\n        (ASM_OUTPUT_SECTION_NAME): Similarly.  Also, only support placing\n        functions in named sections -- data items can still go into unique\n        sections, but they have normal names (ie $LIT$ and $DATA$).\n\n        * config/pa/som.h (SUPPORTS_INIT_PRIORITY): SOM does not support\n        INIT_PRIORITY.\n\nFrom-SVN: r41436", "tree": {"sha": "007e89580f236ac2a1322b92303216779615dafb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/007e89580f236ac2a1322b92303216779615dafb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe6adb3e8da9d209fab4b4420f3ef260ece06e46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe6adb3e8da9d209fab4b4420f3ef260ece06e46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe6adb3e8da9d209fab4b4420f3ef260ece06e46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe6adb3e8da9d209fab4b4420f3ef260ece06e46/comments", "author": null, "committer": null, "parents": [{"sha": "4188d924a31f96065833ee5bfa4f1b8dbcfe98f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4188d924a31f96065833ee5bfa4f1b8dbcfe98f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4188d924a31f96065833ee5bfa4f1b8dbcfe98f9"}], "stats": {"total": 51, "additions": 42, "deletions": 9}, "files": [{"sha": "e291df95a62ffb1ed2b344bb112d0f29d881a068", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6adb3e8da9d209fab4b4420f3ef260ece06e46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6adb3e8da9d209fab4b4420f3ef260ece06e46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe6adb3e8da9d209fab4b4420f3ef260ece06e46", "patch": "@@ -1,3 +1,17 @@\n+Thu Apr 19 19:15:26 2001  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* config/pa/pa-linux.h (CPLUSPLUS_CPP_SPEC): Undefine.\n+\t* config/pa/pa.h (CPLUSPLuS_CPP_SPEC): Define.\n+\n+\t* config/pa/som.h (ASM_OUTPUT_FUNCTION_PREFIX): Truncate subspace\n+\tname at 32 total characters.\n+\t(ASM_OUTPUT_SECTION_NAME): Similarly.  Also, only support placing\n+\tfunctions in named sections -- data items can still go into unique\n+\tsections, but they have normal names (ie $LIT$ and $DATA$).\n+\n+\t* config/pa/som.h (SUPPORTS_INIT_PRIORITY): SOM does not support\n+\tINIT_PRIORITY.\n+\n 2001-04-19 DJ Delorie  <dj@redhat.com>\n \n \t* config/alpha/vms.h: Change OBJECT_SUFFIX and EXECUTABLE_SUFFIX"}, {"sha": "5ed5901433da4445e5192f064edee3d144c85a47", "filename": "gcc/config/pa/pa-linux.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6adb3e8da9d209fab4b4420f3ef260ece06e46/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6adb3e8da9d209fab4b4420f3ef260ece06e46/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-linux.h?ref=fe6adb3e8da9d209fab4b4420f3ef260ece06e46", "patch": "@@ -27,6 +27,8 @@ Boston, MA 02111-1307, USA.  */\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-D__ELF__ -Dunix -D__hppa__ -Dlinux -Asystem=unix -Asystem=posix -Acpu=hppa -Amachine=hppa -Amachine=bigendian\"\n \n+#undef CPLUSPLUS_CPP_SPEC\n+\n #undef\tLIB_SPEC\n #define LIB_SPEC \"%{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}\"\n "}, {"sha": "1ce9794839aa849137dce96919298ed5935007a1", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6adb3e8da9d209fab4b4420f3ef260ece06e46/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6adb3e8da9d209fab4b4420f3ef260ece06e46/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=fe6adb3e8da9d209fab4b4420f3ef260ece06e46", "patch": "@@ -329,6 +329,17 @@ extern int target_flags;\n %{!ansi: -D_HPUX_SOURCE -D_HIUX_SOURCE -D__STDC_EXT__} \\\n %{threads: -D_REENTRANT -D_DCE_THREADS}\"\n \n+#define CPLUSPLUS_CPP_SPEC \"\\\n+-D_HPUX_SOURCE -D_HIUX_SOURCE -D__STDC_EXT__ \\\n+%{mpa-risc-1-0:%(cpp_pa10)} \\\n+%{mpa-risc-1-1:%(cpp_pa11)} \\\n+%{msnake:%(cpp_pa11)} \\\n+%{mpa-risc-2-0:%(cpp_pa20)} \\\n+%{!mpa-risc-1-0:%{!mpa-risc-1-1:%{!mpa-risc-2-0:%{!msnake:%(cpp_cpu_default)}}}} \\\n+%{m64bit:%(cpp_64bit)} \\\n+%{!m64bit:%(cpp_64bit_default)} \\\n+%{threads: -D_REENTRANT -D_DCE_THREADS}\"\n+\n /* Defines for a K&R CC */\n \n #define CC1_SPEC \"%{pg:} %{p:}\""}, {"sha": "57f69ac0f58f9615d7ac1c1890e74aa3bdc51caf", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6adb3e8da9d209fab4b4420f3ef260ece06e46/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6adb3e8da9d209fab4b4420f3ef260ece06e46/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=fe6adb3e8da9d209fab4b4420f3ef260ece06e46", "patch": "@@ -127,7 +127,7 @@ do {\t\t\t\t\t\t\t\t\\\n       fputs (\"\\t.NSUBSPA $CODE$,QUAD=0,ALIGN=8,ACCESS=44,CODE_ONLY\\n\", FILE); \\\n     else if (TARGET_GAS)\t\t\t\t\t\t\\\n       fprintf (FILE,\t\t\t\t\t\t\t\\\n-\t       \"\\t.SUBSPA .%s\\n\", name);\t\t\t\t\\\n+\t       \"\\t.SUBSPA .%.30s\\n\", name);\t\t\t\t\\\n   }\n     \n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL) \\\n@@ -270,23 +270,24 @@ do {  \\\n   if (DECL && TREE_CODE (DECL) == FUNCTION_DECL)\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       fputs (\"\\t.SPACE $TEXT$\\n\", FILE);\t\t\t\\\n-      fprintf (FILE,\t\t\t\t\t\t\\\n-\t       \"\\t.SUBSPA %s%s%s,QUAD=0,ALIGN=8,ACCESS=44,CODE_ONLY,SORT=24\\n\",\\\n-\t       TARGET_GAS ? \"\" : \"$\", NAME, TARGET_GAS ? \"\" : \"$\"); \\\n+      if (TARGET_GAS)\t\t\t\t\t\t\\\n+\tfprintf (FILE,\t\t\t\t\t\t\\\n+\t       \"\\t.NSUBSPA %.31s,QUAD=0,ALIGN=8,ACCESS=44,CODE_ONLY,SORT=24\\n\", NAME);\\\n+      else\t\t\t\t\t\t\t\\\n+\tfprintf (FILE,\t\t\t\t\t\t\\\n+\t       \"\\t.NSUBSPA $%.29s$,QUAD=0,ALIGN=8,ACCESS=44,CODE_ONLY,SORT=24\\n\", NAME);\\\n     }\t\t\t\t\t\t\t\t\\\n-  else if (DECL && DECL_READONLY_SECTION (DECL, RELOC))\t\t\\\n+  else if (!RELOC && DECL && DECL_READONLY_SECTION (DECL, RELOC))\\\n     {\t\t\t\t\t\t\t\t\\\n       fputs (\"\\t.SPACE $TEXT$\\n\", FILE);\t\t\t\\\n       fprintf (FILE,\t\t\t\t\t\t\\\n-\t       \"\\t.SUBSPA %s%s%s,QUAD=0,ALIGN=8,ACCESS=44,SORT=16\\n\", \\\n-\t       TARGET_GAS ? \"\" : \"$\", NAME, TARGET_GAS ? \"\" : \"$\"); \\\n+\t       \"\\t.NSUBSPA $LIT$,QUAD=0,ALIGN=8,ACCESS=44,SORT=16\\n\");\\\n     }\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       fputs (\"\\t.SPACE $PRIVATE$\\n\", FILE);\t\t\t\\\n       fprintf (FILE,\t\t\t\t\t\t\\\n-\t       \"\\t.SUBSPA %s%s%s,QUAD=1,ALIGN=8,ACCESS=31,SORT=16\\n\", \\\n-\t       TARGET_GAS ? \"\" : \"$\", NAME, TARGET_GAS ? \"\" : \"$\"); \\\n+\t       \"\\t.NSUBSPA $DATA$,QUAD=1,ALIGN=8,ACCESS=31,SORT=16\\n\");\\\n     }\n \n /* FIXME: HPUX ld generates incorrect GOT entries for \"T\" fixups\n@@ -402,3 +403,8 @@ do {\t\t\t\t\t\t\\\n   } while (0)\n #endif\n #endif\n+\n+/* SOM does not support the init_priority C++ attribute.  */\n+#undef SUPPORTS_INIT_PRIORITY\n+#define SUPPORTS_INIT_PRIORITY 0\n+"}]}