{"sha": "f5ea88a3c84867db582caf0154a8635501c3a819", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVlYTg4YTNjODQ4NjdkYjU4MmNhZjAxNTRhODYzNTUwMWMzYTgxOQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2005-05-13T01:02:39Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2005-05-13T01:02:39Z"}, "message": "[multiple changes]\n\n2005-05-12  Bryce McKinlay  <mckinlay@redhat.com>\n\n\t* include/jvm.h (gcj::verifyClasses): Declare.\n\t* link.cc (gcj::verbose_class_flag): Moved.\n\t* prims.cc (gcj::verifyClasses): Define here.\n\t(gcj::verbose_class_flag): Move definition here.\n\t(_Jv_Linker::wait_for_state): Don't call verify_class\n\tif gcj::verifyClasses is not set.\n\t* gij.cc (main): Set gcj::verifyClasses when '-noverify' is given.\n\n2005-05-12  Aaron Luchko  <aluchko@redhat.com>\n\n\t* gij.cc (main): Recognize '-verify', '-noverify', and\n\t'-verifyremote'\n\n2005-05-12  Aaron Luchko <aluchko@redhat.com>\n\n        * gcj.texi: Add '-verify', '-noverify', and '-verifyremote'.\n\nFrom-SVN: r99646", "tree": {"sha": "90f2c51143a8ba2fb5311f20878ab77cfef3f642", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90f2c51143a8ba2fb5311f20878ab77cfef3f642"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5ea88a3c84867db582caf0154a8635501c3a819", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5ea88a3c84867db582caf0154a8635501c3a819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5ea88a3c84867db582caf0154a8635501c3a819", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5ea88a3c84867db582caf0154a8635501c3a819/comments", "author": null, "committer": null, "parents": [{"sha": "87255f602fb6efce6061c54e4ffd420717b020a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87255f602fb6efce6061c54e4ffd420717b020a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87255f602fb6efce6061c54e4ffd420717b020a1"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "6341396673f9b009f6d146f2fdfb74c04d838461", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ea88a3c84867db582caf0154a8635501c3a819/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ea88a3c84867db582caf0154a8635501c3a819/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f5ea88a3c84867db582caf0154a8635501c3a819", "patch": "@@ -1,3 +1,7 @@\n+2005-05-12  Aaron Luchko <aluchko@redhat.com>\n+\n+        * gcj.texi: Add '-verify', '-noverify', and '-verifyremote'.\n+\n 2005-05-11  Tom Tromey  <tromey@redhat.com>\n \n \t* gcj.texi (Code Generation): Document -fbootstrap-classes."}, {"sha": "28316bf21d4c6a1b0b7080648e37072bafe3257b", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ea88a3c84867db582caf0154a8635501c3a819/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ea88a3c84867db582caf0154a8635501c3a819/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=f5ea88a3c84867db582caf0154a8635501c3a819", "patch": "@@ -1095,6 +1095,11 @@ Equivalent to @code{-Xms}.\n @item -mx=@var{number}\n Equivalent to @code{-Xmx}.\n \n+@item -noverify\n+Do not verify compliance of bytecode with the VM specification. In addition,\n+this option disables type verification which is otherwise performed on BC-ABI\n+compiled code.\n+\n @item -X\n @itemx -X@var{argument}\n Supplying @code{-X} by itself will cause @code{gij} to list all the\n@@ -1137,7 +1142,8 @@ Each time a class is initialized, print a short message on standard error.\n compatibility with existing application launch scripts:\n @code{-client}, @code{-server}, @code{-hotspot}, @code{-jrockit},\n @code{-agentlib}, @code{-agentpath}, @code{-debug}, @code{-d32},\n-@code{-d64}, @code{-javaagent} and @code{-noclassgc}.\n+@code{-d64}, @code{-javaagent}, @code{-noclassgc}, @code{-verify},\n+and @code{-verifyremote}.\n \n @c man end\n "}, {"sha": "469bb76bc2a1dce38cfb93351a821ec8bc6718ad", "filename": "libjava/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ea88a3c84867db582caf0154a8635501c3a819/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ea88a3c84867db582caf0154a8635501c3a819/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f5ea88a3c84867db582caf0154a8635501c3a819", "patch": "@@ -1,3 +1,18 @@\n+2005-05-12  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* include/jvm.h (gcj::verifyClasses): Declare.\n+\t* link.cc (gcj::verbose_class_flag): Moved.\n+\t* prims.cc (gcj::verifyClasses): Define here.\n+\t(gcj::verbose_class_flag): Move definition here.\n+\t(_Jv_Linker::wait_for_state): Don't call verify_class\n+\tif gcj::verifyClasses is not set.\n+\t* gij.cc (main): Set gcj::verifyClasses when '-noverify' is given.\t\n+\n+2005-05-12  Aaron Luchko  <aluchko@redhat.com>\n+\n+\t* gij.cc (main): Recognize '-verify', '-noverify', and\n+\t'-verifyremote'\n+\n 2005-05-12  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* configure.host: Set IEEESPEC to -mieee for sh*-*-*."}, {"sha": "60d5b34817d9fe2b42e84e00529016829851eb9e", "filename": "libjava/gij.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ea88a3c84867db582caf0154a8635501c3a819/libjava%2Fgij.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ea88a3c84867db582caf0154a8635501c3a819/libjava%2Fgij.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgij.cc?ref=f5ea88a3c84867db582caf0154a8635501c3a819", "patch": "@@ -296,6 +296,14 @@ main (int argc, char const** argv)\n         nonstandard_opts_help ();\n       else if (! strncmp (arg, \"-X\", 2))\n         add_option (vm_args, arg, NULL);\n+      // Obsolete options recognized for backwards-compatibility.\n+      else if (! strcmp (arg, \"-verify\")\n+               || ! strcmp (arg, \"-verifyremote\"))\n+\tcontinue;\n+      else if (! strcmp (arg, \"-noverify\"))\n+        {\n+\t  gcj::verifyClasses = false;\n+\t}\n       else\n \t{\n \t  fprintf (stderr, \"gij: unrecognized option -- `%s'\\n\", argv[i]);"}, {"sha": "bceb291fb581967bdc3587b517817fc9c4846929", "filename": "libjava/include/jvm.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ea88a3c84867db582caf0154a8635501c3a819/libjava%2Finclude%2Fjvm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ea88a3c84867db582caf0154a8635501c3a819/libjava%2Finclude%2Fjvm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjvm.h?ref=f5ea88a3c84867db582caf0154a8635501c3a819", "patch": "@@ -230,6 +230,9 @@ namespace gcj\n \n   /* Print out class names as they are initialized. */\n   extern bool verbose_class_flag;\n+  \n+  /* When true, enable the bytecode verifier and BC-ABI verification. */\n+  extern bool verifyClasses;\n }\n \n // This class handles all aspects of class preparation and linking."}, {"sha": "3fe073463f9d45952b13f70abff0aff7e69f9c85", "filename": "libjava/link.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ea88a3c84867db582caf0154a8635501c3a819/libjava%2Flink.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ea88a3c84867db582caf0154a8635501c3a819/libjava%2Flink.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Flink.cc?ref=f5ea88a3c84867db582caf0154a8635501c3a819", "patch": "@@ -44,9 +44,6 @@ details.  */\n \n using namespace gcj;\n \n-// When true, print debugging information about class loading.\n-bool gcj::verbose_class_flag;\n-\n typedef unsigned int uaddr __attribute__ ((mode (pointer)));\n \n template<typename T>\n@@ -1728,7 +1725,8 @@ _Jv_Linker::wait_for_state (jclass klass, int state)\n \n       if (state >= JV_STATE_LINKED && klass->state < JV_STATE_LINKED)\n \t{\n-\t  verify_class (klass);\n+\t  if (gcj::verifyClasses)\n+\t    verify_class (klass);\n \n \t  ensure_class_linked (klass);\n \t  link_exception_table (klass);"}, {"sha": "af177241acf0e34901788d3d649f8bae70df68a4", "filename": "libjava/prims.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ea88a3c84867db582caf0154a8635501c3a819/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ea88a3c84867db582caf0154a8635501c3a819/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=f5ea88a3c84867db582caf0154a8635501c3a819", "patch": "@@ -953,6 +953,12 @@ namespace gcj\n   _Jv_Utf8Const *finit_name;\n   \n   bool runtimeInitialized = false;\n+  \n+  // When true, print debugging information about class loading.\n+  bool verbose_class_flag;\n+  \n+  // When true, enable the bytecode verifier and BC-ABI type verification. \n+  bool verifyClasses = true;\n }\n \n // We accept all non-standard options accepted by Sun's java command,"}]}