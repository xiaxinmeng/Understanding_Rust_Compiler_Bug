{"sha": "dd64a6f7c8165c204b3cc2f353562df0b6bf335d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ2NGE2ZjdjODE2NWMyMDRiM2NjMmYzNTM1NjJkZjBiNmJmMzM1ZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-11-07T22:26:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-11-07T22:26:02Z"}, "message": "re PR middle-end/55219 (memory explosion on nested conditional expressions)\n\n\tPR middle-end/55219\n\t* fold-const.c (fold_binary_op_with_conditional_arg): Do not fold if\n\tthe argument is itself a conditional expression.\n\nFrom-SVN: r193312", "tree": {"sha": "74bd2163ff68dcf5d867b4f057ef2ecff1bc162a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74bd2163ff68dcf5d867b4f057ef2ecff1bc162a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd64a6f7c8165c204b3cc2f353562df0b6bf335d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd64a6f7c8165c204b3cc2f353562df0b6bf335d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd64a6f7c8165c204b3cc2f353562df0b6bf335d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd64a6f7c8165c204b3cc2f353562df0b6bf335d/comments", "author": null, "committer": null, "parents": [{"sha": "05bb5b0630a9460d8888c1be83298f27d93e462c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05bb5b0630a9460d8888c1be83298f27d93e462c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05bb5b0630a9460d8888c1be83298f27d93e462c"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "b11e7030d2e508a1915c4cafad4934364db7cd9b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd64a6f7c8165c204b3cc2f353562df0b6bf335d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd64a6f7c8165c204b3cc2f353562df0b6bf335d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd64a6f7c8165c204b3cc2f353562df0b6bf335d", "patch": "@@ -1,3 +1,9 @@\n+2012-11-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/55219\n+\t* fold-const.c (fold_binary_op_with_conditional_arg): Do not fold if\n+\tthe argument is itself a conditional expression.\n+\n 2012-11-07  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/55122"}, {"sha": "4fa1fd670aa9b1608b1f4535016ace4c24b7d3f2", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd64a6f7c8165c204b3cc2f353562df0b6bf335d/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd64a6f7c8165c204b3cc2f353562df0b6bf335d/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=dd64a6f7c8165c204b3cc2f353562df0b6bf335d", "patch": "@@ -5987,10 +5987,11 @@ fold_binary_op_with_conditional_arg (location_t loc,\n     cond_code = VEC_COND_EXPR;\n \n   /* This transformation is only worthwhile if we don't have to wrap ARG\n-     in a SAVE_EXPR and the operation can be simplified on at least one\n-     of the branches once its pushed inside the COND_EXPR.  */\n+     in a SAVE_EXPR and the operation can be simplified without recursing\n+     on at least one of the branches once its pushed inside the COND_EXPR.  */\n   if (!TREE_CONSTANT (arg)\n       && (TREE_SIDE_EFFECTS (arg)\n+\t  || TREE_CODE (arg) == COND_EXPR || TREE_CODE (arg) == VEC_COND_EXPR\n \t  || TREE_CONSTANT (true_value) || TREE_CONSTANT (false_value)))\n     return NULL_TREE;\n "}, {"sha": "302daff942e79da2ced09539a7e9f5f45e9fe767", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd64a6f7c8165c204b3cc2f353562df0b6bf335d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd64a6f7c8165c204b3cc2f353562df0b6bf335d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dd64a6f7c8165c204b3cc2f353562df0b6bf335d", "patch": "@@ -1,3 +1,7 @@\n+2012-11-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.c-torture/compile/20121107-1.c: New test.\n+\n 2012-11-07  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/55151"}, {"sha": "a86206702afb25e937135d3c1c91ea27fdfbc14b", "filename": "gcc/testsuite/gcc.c-torture/compile/20121107-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd64a6f7c8165c204b3cc2f353562df0b6bf335d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20121107-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd64a6f7c8165c204b3cc2f353562df0b6bf335d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20121107-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20121107-1.c?ref=dd64a6f7c8165c204b3cc2f353562df0b6bf335d", "patch": "@@ -0,0 +1,14 @@\n+/* PR middle-end/55219 */\n+/* Testcase by Markus Trippelsdorf <markus@trippelsdorf.de> */\n+\n+int x, c, d, e, f, g, h, i;\n+double j;\n+const int k;\n+const enum { B } a;\n+void\n+fn1 (void)\n+{\n+  h = (g ? c : g ? f : g ? e : g ? i : g ? f : g ? e : g ? d : x)\n+      + (a ? : a ? : a ? : a ? : a ? : a ? : a ? : a ? : a ? : a ? : a\n+         ? j : a ? : 0 ? : a ? : a ? : a ? : a ? : a ? : a ? k : a ? : x);\n+}"}]}