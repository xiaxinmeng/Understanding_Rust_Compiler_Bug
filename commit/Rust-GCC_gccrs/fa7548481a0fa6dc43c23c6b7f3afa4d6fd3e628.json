{"sha": "fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE3NTQ4NDgxYTBmYTZkYzQzYzIzYzZiN2YzYWZhNGQ2ZmQzZTYyOA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2012-03-19T21:41:15Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2012-03-19T21:41:15Z"}, "message": "allocator.h (std::allocator): Base class is __allocator_base.\n\n2012-03-19  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/allocator.h (std::allocator): Base class is\n\t__allocator_base.\n\t(uses_allocator): Add to sub-grouping.\n\t* include/ext/new_allocator.h: Doxygen markup for tparm.\n\n\t* config/allocator/bitmap_allocator_base.h: Use __allocator_base\n\ttemplate alias in C++11.\n\t* config/allocator/malloc_allocator_base.h: Same.\n\t* config/allocator/mt_allocator_base.h: Same.\n\t* config/allocator/new_allocator_base.h: Same.\n\t* config/allocator/pool_allocator_base.h: Same.\n\nFrom-SVN: r185544", "tree": {"sha": "a25bde2c6975376b92832dbfd126d51967d53370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a25bde2c6975376b92832dbfd126d51967d53370"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/comments", "author": null, "committer": null, "parents": [{"sha": "b234b0ca049fe65ef5f197a37c96129282f73d77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b234b0ca049fe65ef5f197a37c96129282f73d77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b234b0ca049fe65ef5f197a37c96129282f73d77"}], "stats": {"total": 154, "additions": 131, "deletions": 23}, "files": [{"sha": "80e6de9b0d8feb211363dce6f3cfeb7ecd101fdf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "patch": "@@ -1,3 +1,17 @@\n+2012-03-19  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/allocator.h (std::allocator): Base class is\n+\t__allocator_base.\n+\t(uses_allocator): Add to sub-grouping.\n+\t* include/ext/new_allocator.h: Doxygen markup for tparm.\n+\n+\t* config/allocator/bitmap_allocator_base.h: Use __allocator_base\n+\ttemplate alias in C++11.\n+\t* config/allocator/malloc_allocator_base.h: Same.\n+\t* config/allocator/mt_allocator_base.h: Same.\n+\t* config/allocator/new_allocator_base.h: Same.\n+\t* config/allocator/pool_allocator_base.h: Same.\n+\n 2012-03-19  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/pb_ds/detail/pat_trie_/"}, {"sha": "4abe615274bd38f993cc40e80bada42ab9950f1d", "filename": "libstdc++-v3/config/allocator/bitmap_allocator_base.h", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fbitmap_allocator_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fbitmap_allocator_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fbitmap_allocator_base.h?ref=fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "patch": "@@ -1,6 +1,6 @@\n // Base to std::allocator -*- C++ -*-\n \n-// Copyright (C) 2004, 2005, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2009, 2010, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,8 +30,26 @@\n #ifndef _GLIBCXX_CXX_ALLOCATOR_H\n #define _GLIBCXX_CXX_ALLOCATOR_H 1\n \n-// Define bitmap_allocator as the base class to std::allocator.\n #include <ext/bitmap_allocator.h>\n-#define __glibcxx_base_allocator  __gnu_cxx::bitmap_allocator\n+\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+namespace std\n+{\n+  /**\n+   *  @brief  An alias to the base class for std::allocator.\n+   *  @ingroup allocators\n+   *\n+   *  Used to set the std::allocator base class to\n+   *  __gnu_cxx::bitmap_allocator.\n+   *\n+   *  @tparam  _Tp  Type of allocated object.\n+    */\n+  template<typename _Tp>\n+    using __allocator_base = __gnu_cxx::bitmap_allocator<_Tp>;\n+}\n+#else\n+// Define bitmap_allocator as the base class to std::allocator.\n+# define __allocator_base  __gnu_cxx::bitmap_allocator\n+#endif\n \n #endif"}, {"sha": "e40f424b60ba7e53dc7593df7e044c54d87f6ce7", "filename": "libstdc++-v3/config/allocator/malloc_allocator_base.h", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fmalloc_allocator_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fmalloc_allocator_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fmalloc_allocator_base.h?ref=fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "patch": "@@ -1,6 +1,6 @@\n // Base to std::allocator -*- C++ -*-\n \n-// Copyright (C) 2004, 2005, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2009, 2010, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,8 +30,26 @@\n #ifndef _GLIBCXX_CXX_ALLOCATOR_H\n #define _GLIBCXX_CXX_ALLOCATOR_H 1\n \n-// Define new_allocator as the base class to std::allocator.\n #include <ext/malloc_allocator.h>\n-#define __glibcxx_base_allocator  __gnu_cxx::malloc_allocator\n+\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+namespace std\n+{\n+  /**\n+   *  @brief  An alias to the base class for std::allocator.\n+   *  @ingroup allocators\n+   *\n+   *  Used to set the std::allocator base class to\n+   *  __gnu_cxx::malloc_allocator.\n+   *\n+   *  @tparam  _Tp  Type of allocated object.\n+    */\n+  template<typename _Tp>\n+    using __allocator_base = __gnu_cxx::malloc_allocator<_Tp>;\n+}\n+#else\n+// Define malloc_allocator as the base class to std::allocator.\n+# define __allocator_base  __gnu_cxx::malloc_allocator\n+#endif\n \n #endif"}, {"sha": "66ab6a0524505da5a7f630d7640e71c2d5241d08", "filename": "libstdc++-v3/config/allocator/mt_allocator_base.h", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fmt_allocator_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fmt_allocator_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fmt_allocator_base.h?ref=fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "patch": "@@ -1,6 +1,6 @@\n // Base to std::allocator -*- C++ -*-\n \n-// Copyright (C) 2004, 2005, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2009, 2010, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,8 +30,26 @@\n #ifndef _GLIBCXX_CXX_ALLOCATOR_H\n #define _GLIBCXX_CXX_ALLOCATOR_H 1\n \n-// Define mt_allocator as the base class to std::allocator.\n #include <ext/mt_allocator.h>\n-#define __glibcxx_base_allocator  __gnu_cxx::__mt_alloc\n+\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+namespace std\n+{\n+  /**\n+   *  @brief  An alias to the base class for std::allocator.\n+   *  @ingroup allocators\n+   *\n+   *  Used to set the std::allocator base class to\n+   *  __gnu_cxx::__mt_alloc.\n+   *\n+   *  @tparam  _Tp  Type of allocated object.\n+    */\n+  template<typename _Tp>\n+    using __allocator_base = __gnu_cxx::__mt_alloc<_Tp>;\n+}\n+#else\n+// Define __mt_alloc as the base class to std::allocator.\n+# define __allocator_base  __gnu_cxx::__mt_alloc\n+#endif\n \n #endif"}, {"sha": "7a0b71becafd309caa4c388f13cd04947b7b961e", "filename": "libstdc++-v3/config/allocator/new_allocator_base.h", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fnew_allocator_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fnew_allocator_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fnew_allocator_base.h?ref=fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "patch": "@@ -1,6 +1,6 @@\n // Base to std::allocator -*- C++ -*-\n \n-// Copyright (C) 2004, 2005, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2009, 2010, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,8 +30,26 @@\n #ifndef _GLIBCXX_CXX_ALLOCATOR_H\n #define _GLIBCXX_CXX_ALLOCATOR_H 1\n \n-// Define new_allocator as the base class to std::allocator.\n #include <ext/new_allocator.h>\n-#define __glibcxx_base_allocator  __gnu_cxx::new_allocator\n+\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+namespace std\n+{\n+  /**\n+   *  @brief  An alias to the base class for std::allocator.\n+   *  @ingroup allocators\n+   *\n+   *  Used to set the std::allocator base class to\n+   *  __gnu_cxx::new_allocator.\n+   *\n+   *  @tparam  _Tp  Type of allocated object.\n+    */\n+  template<typename _Tp>\n+    using __allocator_base = __gnu_cxx::new_allocator<_Tp>;\n+}\n+#else\n+// Define new_allocator as the base class to std::allocator.\n+# define __allocator_base  __gnu_cxx::new_allocator\n+#endif\n \n #endif"}, {"sha": "2fc49e2eccb8a9c180f80056dda8d1e72f95f30a", "filename": "libstdc++-v3/config/allocator/pool_allocator_base.h", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fpool_allocator_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fpool_allocator_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fpool_allocator_base.h?ref=fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "patch": "@@ -1,6 +1,6 @@\n // Base to std::allocator -*- C++ -*-\n \n-// Copyright (C) 2004, 2005, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2009, 2010, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,8 +30,26 @@\n #ifndef _GLIBCXX_CXX_ALLOCATOR_H\n #define _GLIBCXX_CXX_ALLOCATOR_H 1\n \n-// Define new_allocator as the base class to std::allocator.\n #include <ext/pool_allocator.h>\n-#define __glibcxx_base_allocator  __gnu_cxx::__pool_alloc\n+\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+namespace std\n+{\n+  /**\n+   *  @brief  An alias to the base class for std::allocator.\n+   *  @ingroup allocators\n+   *\n+   *  Used to set the std::allocator base class to\n+   *  __gnu_cxx::__pool_alloc.\n+   *\n+   *  @tparam  _Tp  Type of allocated object.\n+    */\n+  template<typename _Tp>\n+    using __allocator_base = __gnu_cxx::__pool_alloc<_Tp>;\n+}\n+#else\n+// Define __pool_alloc as the base class to std::allocator.\n+# define __allocator_base  __gnu_cxx::__pool_alloc\n+#endif\n \n #endif"}, {"sha": "49ba0b5be4fbaf16a3083c964d4b182992a5652c", "filename": "libstdc++-v3/include/bits/allocator.h", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h?ref=fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "patch": "@@ -1,7 +1,7 @@\n // Allocators -*- C++ -*-\n \n // Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n-// 2011 Free Software Foundation, Inc.\n+// 2011, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -84,9 +84,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *\n    *  See http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt04ch11.html\n    *  for further details.\n+   *\n+   *  @tparam  _Tp  Type of allocated object.\n    */\n   template<typename _Tp>\n-    class allocator: public __glibcxx_base_allocator<_Tp>\n+    class allocator: public __allocator_base<_Tp>\n     {\n    public:\n       typedef size_t     size_type;\n@@ -104,7 +106,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       allocator() throw() { }\n \n       allocator(const allocator& __a) throw()\n-      : __glibcxx_base_allocator<_Tp>(__a) { }\n+      : __allocator_base<_Tp>(__a) { }\n \n       template<typename _Tp1>\n         allocator(const allocator<_Tp1>&) throw() { }\n@@ -134,6 +136,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator!=(const allocator<_Tp>&, const allocator<_Tp>&)\n     { return false; }\n \n+  /// Declare uses_allocator so it can be specialized in <queue> etc.\n+  template<typename, typename>\n+    struct uses_allocator;\n+\n   /**\n    * @}\n    */\n@@ -146,7 +152,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif\n \n   // Undefine.\n-#undef __glibcxx_base_allocator\n+#undef __allocator_base\n \n   // To implement Option 3 of DR 431.\n   template<typename _Alloc, bool = __is_empty(_Alloc)>\n@@ -206,10 +212,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  { return false; }\n       }\n     };\n-\n-  // Declare uses_allocator so it can be specialized in <queue> etc.\n-  template<typename, typename>\n-    struct uses_allocator;\n #endif\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "1e4069df922281ea5d265384424fc08d49b1ff12", "filename": "libstdc++-v3/include/ext/new_allocator.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Finclude%2Fext%2Fnew_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628/libstdc%2B%2B-v3%2Finclude%2Fext%2Fnew_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fnew_allocator.h?ref=fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "patch": "@@ -49,6 +49,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  This is precisely the allocator defined in the C++ Standard. \n    *    - all allocation calls operator new\n    *    - all deallocation calls operator delete\n+   *\n+   *  @tparam  _Tp  Type of allocated object.\n    */\n   template<typename _Tp>\n     class new_allocator"}]}