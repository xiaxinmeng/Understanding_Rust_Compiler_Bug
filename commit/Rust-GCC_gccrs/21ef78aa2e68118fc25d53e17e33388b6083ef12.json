{"sha": "21ef78aa2e68118fc25d53e17e33388b6083ef12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFlZjc4YWEyZTY4MTE4ZmMyNWQ1M2UxN2UzMzM4OGI2MDgzZWYxMg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-03-19T19:39:03Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-03-19T19:39:03Z"}, "message": "expr.c (expand_expr): Sign-extend CONST_INT generated from TREE_STRING_POINTER.\n\n        * expr.c (expand_expr): Sign-extend CONST_INT generated from\n        TREE_STRING_POINTER.\n\nFrom-SVN: r51033", "tree": {"sha": "c523219543d208885973dc6b623cfd240b175b14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c523219543d208885973dc6b623cfd240b175b14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21ef78aa2e68118fc25d53e17e33388b6083ef12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21ef78aa2e68118fc25d53e17e33388b6083ef12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21ef78aa2e68118fc25d53e17e33388b6083ef12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21ef78aa2e68118fc25d53e17e33388b6083ef12/comments", "author": null, "committer": null, "parents": [{"sha": "91d4b3fd9a4b06ebd6ae324713f8c05bce15a43e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d4b3fd9a4b06ebd6ae324713f8c05bce15a43e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d4b3fd9a4b06ebd6ae324713f8c05bce15a43e"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "e6b3fb0e97c609791728c0036b87d12a6b120088", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ef78aa2e68118fc25d53e17e33388b6083ef12/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ef78aa2e68118fc25d53e17e33388b6083ef12/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21ef78aa2e68118fc25d53e17e33388b6083ef12", "patch": "@@ -1,3 +1,8 @@\n+2002-03-19  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* expr.c (expand_expr): Sign-extend CONST_INT generated from\n+\tTREE_STRING_POINTER.\n+\n Tue Mar 19 14:12:32 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* config/sparc/sparc.h (CAN_ELMINIATE): Can only eliminate FP"}, {"sha": "fd62a39b9c9ca938a792977b49fea97d6b365857", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ef78aa2e68118fc25d53e17e33388b6083ef12/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ef78aa2e68118fc25d53e17e33388b6083ef12/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=21ef78aa2e68118fc25d53e17e33388b6083ef12", "patch": "@@ -6631,8 +6631,8 @@ expand_expr (exp, target, tmode, modifier)\n  \t    && GET_MODE_CLASS (mode) == MODE_INT\n  \t    && GET_MODE_SIZE (mode) == 1\n \t    && modifier != EXPAND_WRITE)\n- \t  return\n-\t    GEN_INT (TREE_STRING_POINTER (string)[TREE_INT_CST_LOW (index)]);\n+ \t  return gen_int_mode (TREE_STRING_POINTER (string)\n+\t\t\t       [TREE_INT_CST_LOW (index)], mode);\n \n \top0 = expand_expr (exp1, NULL_RTX, VOIDmode, EXPAND_SUM);\n \top0 = memory_address (mode, op0);\n@@ -6681,8 +6681,8 @@ expand_expr (exp, target, tmode, modifier)\n \t    && compare_tree_int (index, TREE_STRING_LENGTH (array)) < 0\n \t    && GET_MODE_CLASS (mode) == MODE_INT\n \t    && GET_MODE_SIZE (mode) == 1)\n-\t  return\n-\t    GEN_INT (TREE_STRING_POINTER (array)[TREE_INT_CST_LOW (index)]);\n+\t  return gen_int_mode (TREE_STRING_POINTER (array)\n+\t\t\t       [TREE_INT_CST_LOW (index)], mode);\n \n \t/* If this is a constant index into a constant array,\n \t   just get the value from the array.  Handle both the cases when\n@@ -6742,9 +6742,8 @@ expand_expr (exp, target, tmode, modifier)\n \n \t\t    if (GET_MODE_CLASS (mode) == MODE_INT\n \t\t\t&& GET_MODE_SIZE (mode) == 1)\n-\t\t      return (GEN_INT\n-\t\t\t      (TREE_STRING_POINTER\n-\t\t\t       (init)[TREE_INT_CST_LOW (index)]));\n+\t\t      return gen_int_mode (TREE_STRING_POINTER (init)\n+\t\t\t\t\t   [TREE_INT_CST_LOW (index)], mode);\n \t\t  }\n \t      }\n \t  }"}]}