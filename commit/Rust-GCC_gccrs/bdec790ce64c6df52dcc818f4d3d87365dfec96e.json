{"sha": "bdec790ce64c6df52dcc818f4d3d87365dfec96e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRlYzc5MGNlNjRjNmRmNTJkY2M4MThmNGQzZDg3MzY1ZGZlYzk2ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-26T07:44:01Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-26T07:44:01Z"}, "message": "(output_move_double): Handle reg[n,n+1] = mem[reg[n] + reg[n+1]].\n\nFrom-SVN: r4742", "tree": {"sha": "a8204cb511a6ef46f23fa6203bd5126caf177797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8204cb511a6ef46f23fa6203bd5126caf177797"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdec790ce64c6df52dcc818f4d3d87365dfec96e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdec790ce64c6df52dcc818f4d3d87365dfec96e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdec790ce64c6df52dcc818f4d3d87365dfec96e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdec790ce64c6df52dcc818f4d3d87365dfec96e/comments", "author": null, "committer": null, "parents": [{"sha": "ae49c611b6894fbc69871367d604ea618dbf66c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae49c611b6894fbc69871367d604ea618dbf66c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae49c611b6894fbc69871367d604ea618dbf66c8"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "361d33235315f6550b524572c532dffea2e83ba2", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdec790ce64c6df52dcc818f4d3d87365dfec96e/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdec790ce64c6df52dcc818f4d3d87365dfec96e/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=bdec790ce64c6df52dcc818f4d3d87365dfec96e", "patch": "@@ -1156,8 +1156,19 @@ output_move_double (operands)\n   else if (optype0 == REGOP && optype1 != REGOP\n \t   && reg_overlap_mentioned_p (op0, op1))\n     {\n-      /* ??? This fails if the address is a double register address, each\n-\t of which is clobbered by operand 0.  */\n+      if (reg_mentioned_p (op0, XEXP (op1, 0))\n+\t  && reg_mentioned_p (latehalf[0], XEXP (op1, 0)))\n+\t{\n+\t  /* If both halves of dest are used in the src memory address,\n+\t     add the two regs and put them in the low reg (op0).\n+\t     Then it works to load latehalf first.  */\n+\t  rtx xops[2];\n+\t  xops[0] = latehalf[0];\n+\t  xops[1] = op0;\n+\t  output_asm_insn (\"add %1,%0,%1\", xops);\n+\t  operands[1] = gen_rtx (MEM, DImode, latehalf[0]);\n+\t  latehalf[1] = adj_offsettable_operand (operands[1], 4);\n+\t}\n       /* Do the late half first.  */\n       output_asm_insn (singlemove_string (latehalf), latehalf);\n       /* Then clobber.  */"}]}