{"sha": "51b15ede491940fcc66789e704474a67387ae705", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFiMTVlZGU0OTE5NDBmY2M2Njc4OWU3MDQ0NzRhNjczODdhZTcwNQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2005-10-12T18:02:52Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-10-12T18:02:52Z"}, "message": "re PR c++/21117 (ICE after error about returning an incomplete type)\n\ncp:\n\tPR c++/21117\n\t* decl.c (check_function_type): Correctly overwrite incomplete\n\treturn type with void type.\n\t* typeck.c (check_return_expr): If the function's return type is\n\tvoid, don't try and convert a return expr.\ntestsuite:\n\tPR c++/21117\n\t* g++.dg/other/return1.C: New.\n\nFrom-SVN: r105310", "tree": {"sha": "28c8ceb85e19b95157c495f5cb3810b89e15b055", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28c8ceb85e19b95157c495f5cb3810b89e15b055"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51b15ede491940fcc66789e704474a67387ae705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51b15ede491940fcc66789e704474a67387ae705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51b15ede491940fcc66789e704474a67387ae705", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51b15ede491940fcc66789e704474a67387ae705/comments", "author": null, "committer": null, "parents": [{"sha": "a4d25453fa85f413a7b1e61d989a90a32b6f7d09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d25453fa85f413a7b1e61d989a90a32b6f7d09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4d25453fa85f413a7b1e61d989a90a32b6f7d09"}], "stats": {"total": 56, "additions": 42, "deletions": 14}, "files": [{"sha": "a94a3fb674b342e710475f194c127c0166c13f16", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51b15ede491940fcc66789e704474a67387ae705/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51b15ede491940fcc66789e704474a67387ae705/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=51b15ede491940fcc66789e704474a67387ae705", "patch": "@@ -1,3 +1,11 @@\n+2005-10-12  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/21117\n+\t* decl.c (check_function_type): Correctly overwrite incomplete\n+\treturn type with void type.\n+\t* typeck.c (check_return_expr): If the function's return type is\n+\tvoid, don't try and convert a return expr.\n+\n 2005-10-12  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR c++/23730"}, {"sha": "b76c12dac5e55a73b5885c9232e514fef91b491e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51b15ede491940fcc66789e704474a67387ae705/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51b15ede491940fcc66789e704474a67387ae705/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=51b15ede491940fcc66789e704474a67387ae705", "patch": "@@ -10012,25 +10012,20 @@ check_function_type (tree decl, tree current_function_parms)\n     return;\n   if (!COMPLETE_OR_VOID_TYPE_P (return_type))\n     {\n-      error (\"return type %q#T is incomplete\", TREE_TYPE (fntype));\n+      tree args = TYPE_ARG_TYPES (fntype);\n+\t  \n+      error (\"return type %q#T is incomplete\", return_type);\n \n-      /* Make it return void instead, but don't change the\n-\t type of the DECL_RESULT, in case we have a named return value.  */\n+      /* Make it return void instead.  */\n       if (TREE_CODE (fntype) == METHOD_TYPE)\n-\t{\n-\t  tree ctype = TREE_TYPE (TREE_VALUE (TYPE_ARG_TYPES (fntype)));\n-\t  TREE_TYPE (decl)\n-\t    = build_method_type_directly (ctype,\n-\t\t\t\t\t  void_type_node,\n-\t\t\t\t\t  FUNCTION_ARG_CHAIN (decl));\n-\t}\n+\tfntype = build_method_type_directly (TREE_TYPE (TREE_VALUE (args)),\n+\t\t\t\t\t     void_type_node,\n+\t\t\t\t\t     TREE_CHAIN (args));\n       else\n-\tTREE_TYPE (decl)\n-\t  = build_function_type (void_type_node,\n-\t\t\t\t TYPE_ARG_TYPES (TREE_TYPE (decl)));\n+\tfntype = build_function_type (void_type_node, args);\n       TREE_TYPE (decl)\n \t= build_exception_variant (fntype,\n-\t\t\t\t   TYPE_RAISES_EXCEPTIONS (fntype));\n+\t\t\t\t   TYPE_RAISES_EXCEPTIONS (TREE_TYPE (decl)));\n     }\n   else\n     abstract_virtuals_error (decl, TREE_TYPE (fntype));"}, {"sha": "d8210f1394b5eefb8e9ddbb7b5324d35beca156c", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51b15ede491940fcc66789e704474a67387ae705/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51b15ede491940fcc66789e704474a67387ae705/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=51b15ede491940fcc66789e704474a67387ae705", "patch": "@@ -6326,6 +6326,11 @@ check_return_expr (tree retval, bool *no_warning)\n       /* The type the function is declared to return.  */\n       tree functype = TREE_TYPE (TREE_TYPE (current_function_decl));\n \n+      /* The functype's return type will have been set to void, if it\n+\t was an incomplete type.  Just treat this as 'return;' */\n+      if (VOID_TYPE_P (functype))\n+\treturn error_mark_node;\n+      \n       /* First convert the value to the function's return type, then\n \t to the type of return value's location to handle the\n \t case that functype is smaller than the valtype.  */"}, {"sha": "d5eac84518c7ee1a90f92138a695bcf4fe7ce09a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51b15ede491940fcc66789e704474a67387ae705/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51b15ede491940fcc66789e704474a67387ae705/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51b15ede491940fcc66789e704474a67387ae705", "patch": "@@ -1,3 +1,8 @@\n+2005-10-12  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/21117\n+\t* g++.dg/other/return1.C: New.\n+\n 2005-10-12  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR c++/24052"}, {"sha": "2473b8deb4b012ff08410e4f02447e74dd838ca3", "filename": "gcc/testsuite/g++.dg/other/return1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51b15ede491940fcc66789e704474a67387ae705/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Freturn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51b15ede491940fcc66789e704474a67387ae705/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Freturn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Freturn1.C?ref=51b15ede491940fcc66789e704474a67387ae705", "patch": "@@ -0,0 +1,15 @@\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 12 Oct 2005 <nathan@codesourcery.com>\n+\n+// PR 21117:ICE after error\n+// Origin: Andrew Pinski <pinskia@gcc.gnu.org>\n+\n+struct wxString;\n+struct wxString* wxGetEmptyString();\n+\n+struct wxString GetHeader() // { dg-error \"return type\" \"\" }\n+{\n+  return *wxGetEmptyString();\n+}\n+\n+"}]}