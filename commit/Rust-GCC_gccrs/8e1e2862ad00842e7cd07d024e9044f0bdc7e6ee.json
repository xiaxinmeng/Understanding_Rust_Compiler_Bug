{"sha": "8e1e2862ad00842e7cd07d024e9044f0bdc7e6ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUxZTI4NjJhZDAwODQyZTdjZDA3ZDAyNGU5MDQ0ZjBiZGM3ZTZlZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-27T20:25:01Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-27T20:25:01Z"}, "message": "(emit_unop_insn): Don't do -fforce-mem for SIGN_EXTEND.\n\nFrom-SVN: r10872", "tree": {"sha": "c81211d8e387a783a055d111b21f78b8d8b9b881", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c81211d8e387a783a055d111b21f78b8d8b9b881"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e1e2862ad00842e7cd07d024e9044f0bdc7e6ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1e2862ad00842e7cd07d024e9044f0bdc7e6ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1e2862ad00842e7cd07d024e9044f0bdc7e6ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1e2862ad00842e7cd07d024e9044f0bdc7e6ee/comments", "author": null, "committer": null, "parents": [{"sha": "d902f80a15d0091b602ef7e3aaf18dc91d978cdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d902f80a15d0091b602ef7e3aaf18dc91d978cdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d902f80a15d0091b602ef7e3aaf18dc91d978cdd"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "cae4c4e9bd090e4e940b4037b3d3a36bef71042a", "filename": "gcc/optabs.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1e2862ad00842e7cd07d024e9044f0bdc7e6ee/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1e2862ad00842e7cd07d024e9044f0bdc7e6ee/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=8e1e2862ad00842e7cd07d024e9044f0bdc7e6ee", "patch": "@@ -2374,7 +2374,9 @@ emit_unop_insn (icode, target, op0, code)\n \n   op0 = protect_from_queue (op0, 0);\n \n-  if (flag_force_mem)\n+  /* Sign extension from memory is often done specially on RISC\n+     machines, so forcing into a register here can pessimize code.  */\n+  if (flag_force_mem && code != SIGN_EXTEND)\n     op0 = force_not_mem (op0);\n \n   /* Now, if insn does not accept our operands, put them into pseudos.  */"}]}