{"sha": "b7aa4a3ab319b307daf896c274557443593acbd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdhYTRhM2FiMzE5YjMwN2RhZjg5NmMyNzQ1NTc0NDM1OTNhY2JkNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-02-28T20:32:15Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-02-28T20:32:15Z"}, "message": "re PR ipa/65236 (IPA ICF causes miscompilation in Chromium built with -Os)\n\n\n\tPR ipa/65236\n\t* g++.dg/ipa/ipa-icf-6.C: New testcase.\n\t* cgraphunit.c (cgraph_node::expand_thunk): Enable return slot\n\topt.\n\nFrom-SVN: r221077", "tree": {"sha": "b1b16f1a1567b6bacad4d0f21597b2a83c80b5cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1b16f1a1567b6bacad4d0f21597b2a83c80b5cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7aa4a3ab319b307daf896c274557443593acbd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7aa4a3ab319b307daf896c274557443593acbd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7aa4a3ab319b307daf896c274557443593acbd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7aa4a3ab319b307daf896c274557443593acbd5/comments", "author": null, "committer": null, "parents": [{"sha": "f083b434c27face3cdf13c0f5b089d3f651956f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f083b434c27face3cdf13c0f5b089d3f651956f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f083b434c27face3cdf13c0f5b089d3f651956f3"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "2c8c9a58b740078475e83765bcd984d2b646b629", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa4a3ab319b307daf896c274557443593acbd5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa4a3ab319b307daf896c274557443593acbd5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7aa4a3ab319b307daf896c274557443593acbd5", "patch": "@@ -1,3 +1,9 @@\n+2015-02-28  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/65236\n+\t* cgraphunit.c (cgraph_node::expand_thunk): Enable return slot\n+\topt.\n+\n 2015-02-28  Xingxing Pan  <xxingpan@marvell.com>\n \n \t* config/aarch64/aarch64.md: (mov<mode>_aarch64): Change type"}, {"sha": "e640907550d0fbe9107cbde5f4ee09dbe574de6e", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa4a3ab319b307daf896c274557443593acbd5/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa4a3ab319b307daf896c274557443593acbd5/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=b7aa4a3ab319b307daf896c274557443593acbd5", "patch": "@@ -1680,6 +1680,14 @@ cgraph_node::expand_thunk (bool output_asm_thunks, bool force_gimple_thunk)\n       callees->call_stmt = call;\n       gimple_call_set_from_thunk (call, true);\n       gimple_call_set_with_bounds (call, instrumentation_clone);\n+\n+      /* Return slot optimization is always possible and in fact requred to\n+         return values with DECL_BY_REFERENCE.  */\n+      if (aggregate_value_p (resdecl, TREE_TYPE (thunk_fndecl))\n+\t  && (!is_gimple_reg_type (TREE_TYPE (resdecl))\n+\t      || DECL_BY_REFERENCE (resdecl)))\n+        gimple_call_set_return_slot_opt (call, true);\n+\n       if (restmp && !alias_is_noreturn)\n \t{\n           gimple_call_set_lhs (call, restmp);"}, {"sha": "bf0978e957fac2db483b007924dca056b9b97361", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa4a3ab319b307daf896c274557443593acbd5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa4a3ab319b307daf896c274557443593acbd5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b7aa4a3ab319b307daf896c274557443593acbd5", "patch": "@@ -1,3 +1,8 @@\n+2015-02-28  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/65236\n+\t* g++.dg/ipa/ipa-icf-6.C: New testcase.\n+\n 2015-02-27  Pat Haugen <pthaugen@us.ibm.com>\n \n \t* gcc.dg/vect/pr59354.c: Move vector producing code to separate function."}, {"sha": "933ab5dcf08b39c1ad5848f3a000e38020ebd166", "filename": "gcc/testsuite/g++.dg/ipa/ipa-icf-6.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa4a3ab319b307daf896c274557443593acbd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa4a3ab319b307daf896c274557443593acbd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-6.C?ref=b7aa4a3ab319b307daf896c274557443593acbd5", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -fdump-ipa-icf\"  } */\n+\n+struct A {                                                                      \n+  A() {ptr=&b;}                                                                 \n+  A(const A &a) {ptr = &b;}                                                     \n+  void test() { if (ptr != &b) __builtin_abort ();}                             \n+  int b;                                                                        \n+  int *ptr;                                                                     \n+};                                                                              \n+\n+A test1(A a)\n+{\n+  a.test();\n+  return a;\n+}\n+A test2(A a)\n+{\n+  a.test();\n+  return a;\n+}\n+__attribute__ ((noinline))\n+static void\n+test_me (A (*t)(A))\n+{\n+  struct A a, b=t(a);\n+  b.test ();\n+}\n+int\n+main()\n+{\n+  test_me (test1);\n+  test_me (test2);\n+  return 0;\n+}\n+/* { dg-final { scan-ipa-dump-times \"Unified; Wrapper has been created\" 1 \"icf\"  } } */\n+/* { dg-final { cleanup-ipa-dump \"icf\" } } */"}]}