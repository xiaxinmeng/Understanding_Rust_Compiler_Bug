{"sha": "eb6bcfb017d409db793b8fa6fde93f85f8ec75cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI2YmNmYjAxN2Q0MDlkYjc5M2I4ZmE2ZmRlOTNmODVmOGVjNzVjYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-12-14T22:08:48Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-12-14T22:08:48Z"}, "message": "re PR c++/58477 (ice in cgraph_speculative_call_info)\n\n\tPR middle-end/58477\n\t* ipa-prop.c (stmt_may_be_vtbl_ptr_store): Skip clobbers.\n\t* g++.dg/ipa/devirt-19.C: New testcase.\n\nFrom-SVN: r205993", "tree": {"sha": "7b31311713785c0380254b91af5cc99bda4c041d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b31311713785c0380254b91af5cc99bda4c041d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb6bcfb017d409db793b8fa6fde93f85f8ec75cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb6bcfb017d409db793b8fa6fde93f85f8ec75cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb6bcfb017d409db793b8fa6fde93f85f8ec75cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb6bcfb017d409db793b8fa6fde93f85f8ec75cc/comments", "author": null, "committer": null, "parents": [{"sha": "0a73546d3c46876969276e1730907e6faec7428d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a73546d3c46876969276e1730907e6faec7428d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a73546d3c46876969276e1730907e6faec7428d"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "93e857df8dc124d387a51278b158762491404fc3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6bcfb017d409db793b8fa6fde93f85f8ec75cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6bcfb017d409db793b8fa6fde93f85f8ec75cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb6bcfb017d409db793b8fa6fde93f85f8ec75cc", "patch": "@@ -1,3 +1,8 @@\n+2013-12-14   Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/58477\n+\t* ipa-prop.c (stmt_may_be_vtbl_ptr_store): Skip clobbers.\n+\n 2013-12-14   Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/58477"}, {"sha": "650e6002b8706b38e435ffdbfa0e1d2fdd4f268f", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6bcfb017d409db793b8fa6fde93f85f8ec75cc/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6bcfb017d409db793b8fa6fde93f85f8ec75cc/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=eb6bcfb017d409db793b8fa6fde93f85f8ec75cc", "patch": "@@ -560,6 +560,8 @@ stmt_may_be_vtbl_ptr_store (gimple stmt)\n {\n   if (is_gimple_call (stmt))\n     return false;\n+  else if (gimple_clobber_p (stmt))\n+    return false;\n   else if (is_gimple_assign (stmt))\n     {\n       tree lhs = gimple_assign_lhs (stmt);"}, {"sha": "ccb78290915c805e79dcd9216b55f2493c88f0b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6bcfb017d409db793b8fa6fde93f85f8ec75cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6bcfb017d409db793b8fa6fde93f85f8ec75cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eb6bcfb017d409db793b8fa6fde93f85f8ec75cc", "patch": "@@ -1,3 +1,8 @@\n+2013-12-14   Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/58477\n+\t* g++.dg/ipa/devirt-19.C: New testcase.\n+\n 2013-12-14  Marek Polacek  <polacek@redhat.com>\n \n \t* c-c++-common/ubsan/overflow-negate-1.c: Add more testing.  Don't"}, {"sha": "13686e3e025758c4de79009369bc7df36346bb2b", "filename": "gcc/testsuite/g++.dg/ipa/devirt-19.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6bcfb017d409db793b8fa6fde93f85f8ec75cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6bcfb017d409db793b8fa6fde93f85f8ec75cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-19.C?ref=eb6bcfb017d409db793b8fa6fde93f85f8ec75cc", "patch": "@@ -0,0 +1,32 @@\n+/* We should specialize for &b and devirtualize the call.\n+   Previously we were failing by considering CLOBBER statement to be\n+   a type change.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-ipa-cp\"  } */\n+struct A {\n+  void operator==(const A &);\n+};\n+class B {\n+public:\n+  A m_fn1();\n+  A m_fn2();\n+};\n+template <typename T, typename M> class C {\n+public:\n+  T Key;\n+  const M &m_fn2(const T &);\n+  virtual void m_fn1() {}\n+  B _map;\n+};\n+\n+C<int, int> b;\n+template <typename T, typename M> const M &C<T, M>::m_fn2(const T &) {\n+  A a = _map.m_fn2();\n+  a == _map.m_fn1();\n+  m_fn1();\n+}\n+\n+void fn1() { b.m_fn2(0); }\n+/* { dg-final { scan-ipa-dump-times \"Discovered a virtual call to a known target\" 1 \"cp\"  } } */\n+/* { dg-final { cleanup-ipa-dump \"cp\" } } */\n+"}]}