{"sha": "eefc2c6e85ee0a62e659d0bf7d9000bbb8d06620", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVmYzJjNmU4NWVlMGE2MmU2NTlkMGJmN2Q5MDAwYmJiOGQwNjYyMA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-08-09T23:57:32Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-08-09T23:57:32Z"}, "message": "Warning fix:\n\n        * real.c (GET_REAL, PUT_REAL): Use memcpy instead of bcopy.\n\nFrom-SVN: r28636", "tree": {"sha": "3cb804a804e42db60ad34dd76748471e77d98970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cb804a804e42db60ad34dd76748471e77d98970"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eefc2c6e85ee0a62e659d0bf7d9000bbb8d06620", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eefc2c6e85ee0a62e659d0bf7d9000bbb8d06620", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eefc2c6e85ee0a62e659d0bf7d9000bbb8d06620", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eefc2c6e85ee0a62e659d0bf7d9000bbb8d06620/comments", "author": null, "committer": null, "parents": [{"sha": "0070eeda6575ef675615ddf51bf52b441a415297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0070eeda6575ef675615ddf51bf52b441a415297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0070eeda6575ef675615ddf51bf52b441a415297"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "7a2ef1549b0aa2cb65b7a34834d4de9708155033", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefc2c6e85ee0a62e659d0bf7d9000bbb8d06620/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefc2c6e85ee0a62e659d0bf7d9000bbb8d06620/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eefc2c6e85ee0a62e659d0bf7d9000bbb8d06620", "patch": "@@ -1,3 +1,7 @@\n+Mon Aug  9 19:54:05 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* real.c (GET_REAL, PUT_REAL): Use memcpy instead of bcopy.\n+\n Mon Aug  9 19:36:00 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* tree.h (lang_identify): Constify a char*."}, {"sha": "c7c2db70d91a339fc43d285687e1aa5aeb97da5f", "filename": "gcc/real.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefc2c6e85ee0a62e659d0bf7d9000bbb8d06620/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefc2c6e85ee0a62e659d0bf7d9000bbb8d06620/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=eefc2c6e85ee0a62e659d0bf7d9000bbb8d06620", "patch": "@@ -281,10 +281,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n      else\t\t\t\t\t\t\t\t\\\n        {\t\t\t\t\t\t\t\t\\\n \t unsigned EMUSHORT w[4];\t\t\t\t\t\\\n-         bcopy (((EMUSHORT *) r), &w[3], sizeof (EMUSHORT));\t\t\\\n-         bcopy (((EMUSHORT *) r) + 1, &w[2], sizeof (EMUSHORT));\t\\\n-\t bcopy (((EMUSHORT *) r) + 2, &w[1], sizeof (EMUSHORT));\t\\\n-\t bcopy (((EMUSHORT *) r) + 3, &w[0], sizeof (EMUSHORT));\t\\\n+         memcpy (&w[3], ((EMUSHORT *) r), sizeof (EMUSHORT));\t\t\\\n+         memcpy (&w[2], ((EMUSHORT *) r) + 1, sizeof (EMUSHORT));\t\\\n+         memcpy (&w[1], ((EMUSHORT *) r) + 2, sizeof (EMUSHORT));\t\\\n+         memcpy (&w[0], ((EMUSHORT *) r) + 3, sizeof (EMUSHORT));\t\\\n \t e53toe (w, (e));\t\t\t\t\t\t\\\n        }\t\t\t\t\t\t\t\t\\\n    } while (0)\n@@ -297,10 +297,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n        {\t\t\t\t\t\t\t\t\\\n \t unsigned EMUSHORT w[4];\t\t\t\t\t\\\n \t etoe53 ((e), w);\t\t\t\t\t\t\\\n-         bcopy (&w[3], ((EMUSHORT *) r), sizeof (EMUSHORT));\t\t\\\n-         bcopy (&w[2], ((EMUSHORT *) r) + 1, sizeof (EMUSHORT));\t\\\n-         bcopy (&w[1], ((EMUSHORT *) r) + 2, sizeof (EMUSHORT));\t\\\n-         bcopy (&w[0], ((EMUSHORT *) r) + 3, sizeof (EMUSHORT));\t\\\n+         memcpy (((EMUSHORT *) r), &w[3], sizeof (EMUSHORT));\t\t\\\n+         memcpy (((EMUSHORT *) r) + 1, &w[2], sizeof (EMUSHORT));\t\\\n+         memcpy (((EMUSHORT *) r) + 2, &w[1], sizeof (EMUSHORT));\t\\\n+         memcpy (((EMUSHORT *) r) + 3, &w[0], sizeof (EMUSHORT));\t\\\n        }\t\t\t\t\t\t\t\t\\\n    } while (0)\n "}]}