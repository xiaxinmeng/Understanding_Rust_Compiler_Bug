{"sha": "c4432b2776aeeffee9125bf87ff937e4a8907bbd", "node_id": "C_kwDOANBUbNoAKGM0NDMyYjI3NzZhZWVmZmVlOTEyNWJmODdmZjkzN2U0YTg5MDdiYmQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-09-22T07:32:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-09-22T07:32:32Z"}, "message": "openmp: Fix OpenMP expansion of scope with non-fallthrugh body [PR102415]\n\nI've used function for omp single expansion also for omp scope.  That is\nmostly ok, but as the testcase shows, there is one important difference.\nThe omp single expansion always has a fallthru body, because it during\nomp lowering expands the body as if wrapped in an if to simulate that\none thread runs the body and others wait (unless nowait) until it completes\nand continue.  omp scope is invoked by all threads and so if the body\nis non-fallthru, the barrier (unless nowait) at the end will not be reached\nby any of the threads.\n\nThe following patch fixes that by handling the case where cfg pass optimizes\naway the exit bb of it gracefully.\n\n2021-09-22  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/102415\n\t* omp-expand.c (expand_omp_single): If region->exit is NULL,\n\tassert region->entry is GIMPLE_OMP_SCOPE region and return.\n\n\t* c-c++-common/gomp/scope-3.c: New test.", "tree": {"sha": "b5aadb84e76115684c3e1694a64d3541413a6555", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5aadb84e76115684c3e1694a64d3541413a6555"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4432b2776aeeffee9125bf87ff937e4a8907bbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4432b2776aeeffee9125bf87ff937e4a8907bbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4432b2776aeeffee9125bf87ff937e4a8907bbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4432b2776aeeffee9125bf87ff937e4a8907bbd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "059b819e3c94aae3dd0be55bd512ee6ee4e28798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/059b819e3c94aae3dd0be55bd512ee6ee4e28798", "html_url": "https://github.com/Rust-GCC/gccrs/commit/059b819e3c94aae3dd0be55bd512ee6ee4e28798"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "496c0e6cdd6a8a5c821ce1ab5d678a29bd594a38", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4432b2776aeeffee9125bf87ff937e4a8907bbd/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4432b2776aeeffee9125bf87ff937e4a8907bbd/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=c4432b2776aeeffee9125bf87ff937e4a8907bbd", "patch": "@@ -8433,11 +8433,17 @@ expand_omp_single (struct omp_region *region)\n   exit_bb = region->exit;\n \n   si = gsi_last_nondebug_bb (entry_bb);\n-  gcc_assert (gimple_code (gsi_stmt (si)) == GIMPLE_OMP_SINGLE\n-\t      || gimple_code (gsi_stmt (si)) == GIMPLE_OMP_SCOPE);\n+  enum gimple_code code = gimple_code (gsi_stmt (si));\n+  gcc_assert (code == GIMPLE_OMP_SINGLE || code == GIMPLE_OMP_SCOPE);\n   gsi_remove (&si, true);\n   single_succ_edge (entry_bb)->flags = EDGE_FALLTHRU;\n \n+  if (exit_bb == NULL)\n+    {\n+      gcc_assert (code == GIMPLE_OMP_SCOPE);\n+      return;\n+    }\n+\n   si = gsi_last_nondebug_bb (exit_bb);\n   if (!gimple_omp_return_nowait_p (gsi_stmt (si)))\n     {"}, {"sha": "78bb1a3ccb9952dd2424e9533ed514173c3052f2", "filename": "gcc/testsuite/c-c++-common/gomp/scope-3.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4432b2776aeeffee9125bf87ff937e4a8907bbd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fscope-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4432b2776aeeffee9125bf87ff937e4a8907bbd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fscope-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fscope-3.c?ref=c4432b2776aeeffee9125bf87ff937e4a8907bbd", "patch": "@@ -0,0 +1,21 @@\n+/* PR middle-end/102415 */\n+\n+extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+void abort ();\n+\n+void\n+foo (void)\n+{\n+  #pragma omp scope nowait\n+  abort ();\n+}\n+\n+void\n+bar (void)\n+{\n+  #pragma omp scope\n+  abort ();\n+}"}]}