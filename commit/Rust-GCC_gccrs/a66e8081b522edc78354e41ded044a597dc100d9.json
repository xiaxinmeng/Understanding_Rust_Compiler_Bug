{"sha": "a66e8081b522edc78354e41ded044a597dc100d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY2ZTgwODFiNTIyZWRjNzgzNTRlNDFkZWQwNDRhNTk3ZGMxMDBkOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-04-14T15:00:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-04-14T15:00:07Z"}, "message": "re PR c++/48557 ([C++0x][SFINAE] Hard errors with void as operand of binary built-in operators)\n\n\tPR c++/48557\n\t* typeck.c (cp_build_binary_op): Don't decay void operands.\n\nFrom-SVN: r172433", "tree": {"sha": "64bb12f2325cebf596435e2fd2baf692a2ade6dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64bb12f2325cebf596435e2fd2baf692a2ade6dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a66e8081b522edc78354e41ded044a597dc100d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a66e8081b522edc78354e41ded044a597dc100d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a66e8081b522edc78354e41ded044a597dc100d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a66e8081b522edc78354e41ded044a597dc100d9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe5b5c364b49300ba7e1e283f03f593d3e37524a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe5b5c364b49300ba7e1e283f03f593d3e37524a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe5b5c364b49300ba7e1e283f03f593d3e37524a"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "1b60dd439dd95b4c87caf1c5f7974ac17e67350f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a66e8081b522edc78354e41ded044a597dc100d9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a66e8081b522edc78354e41ded044a597dc100d9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a66e8081b522edc78354e41ded044a597dc100d9", "patch": "@@ -1,5 +1,8 @@\n 2011-04-14  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48557\n+\t* typeck.c (cp_build_binary_op): Don't decay void operands.\n+\n \tPR c++/48446\n \t* decl.c (compute_array_index_type): Use get_temp_regvar instead\n \tof variable_size."}, {"sha": "b0e211058f2a78d0baed669e46b4fce57da700d4", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a66e8081b522edc78354e41ded044a597dc100d9/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a66e8081b522edc78354e41ded044a597dc100d9/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=a66e8081b522edc78354e41ded044a597dc100d9", "patch": "@@ -3646,16 +3646,16 @@ cp_build_binary_op (location_t location,\n       || code == TRUTH_OR_EXPR || code == TRUTH_ORIF_EXPR\n       || code == TRUTH_XOR_EXPR)\n     {\n-      if (!really_overloaded_fn (op0))\n+      if (!really_overloaded_fn (op0) && !VOID_TYPE_P (TREE_TYPE (op0)))\n \top0 = decay_conversion (op0);\n-      if (!really_overloaded_fn (op1))\n+      if (!really_overloaded_fn (op1) && !VOID_TYPE_P (TREE_TYPE (op1)))\n \top1 = decay_conversion (op1);\n     }\n   else\n     {\n-      if (!really_overloaded_fn (op0))\n+      if (!really_overloaded_fn (op0) && !VOID_TYPE_P (TREE_TYPE (op0)))\n \top0 = default_conversion (op0);\n-      if (!really_overloaded_fn (op1))\n+      if (!really_overloaded_fn (op1) && !VOID_TYPE_P (TREE_TYPE (op1)))\n \top1 = default_conversion (op1);\n     }\n "}, {"sha": "8a5f5ae90695f8e3f4069d74f19ca9f64ba6bffb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a66e8081b522edc78354e41ded044a597dc100d9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a66e8081b522edc78354e41ded044a597dc100d9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a66e8081b522edc78354e41ded044a597dc100d9", "patch": "@@ -1,5 +1,7 @@\n 2011-04-14  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/sfinae14.C: New.\n+\n \t* g++.dg/ext/vla10.C: New.\n \n 2011-04-14  Richard Guenther  <rguenther@suse.de>"}, {"sha": "305f96eddcad3a344883db56540aaafe13794f93", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae14.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a66e8081b522edc78354e41ded044a597dc100d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a66e8081b522edc78354e41ded044a597dc100d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae14.C?ref=a66e8081b522edc78354e41ded044a597dc100d9", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/48557\n+// { dg-options -std=c++0x }\n+\n+template<class T>\n+struct add_rval_ref\n+{\n+  typedef T&& type;\n+};\n+\n+template<>\n+struct add_rval_ref<void>\n+{\n+  typedef void type;\n+};\n+\n+template<class T>\n+typename add_rval_ref<T>::type create();\n+\n+template<class T, class U,\n+  class = decltype(create<T>() + create<U>())\n+>\n+char f(int);\n+\n+template<class, class>\n+char (&f(...))[2];\n+\n+static_assert(sizeof(f<void, int>(0)) != 1, \"Error\");  // (a)"}]}