{"sha": "62c0c0ea7bfb6f8f6b8d767b05120cafb6823da6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJjMGMwZWE3YmZiNmY4ZjZiOGQ3NjdiMDUxMjBjYWZiNjgyM2RhNg==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-06-20T14:09:45Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-06-20T14:09:45Z"}, "message": "PR fortran/95689 - ICE in check_sym_interfaces, at fortran/interface.c:2015\n\nWith submodules, name mangling of interfaces may result in long internal\nsymbols overflowing an internal buffer.  We now check that we do not\nexceed the enlarged buffer size.\n\ngcc/fortran/\n\tPR fortran/95689\n\t* interface.c (check_sym_interfaces): Enlarge temporary buffer,\n\tand add check on length on mangled name to prevent overflow.", "tree": {"sha": "228d1d590ed74bf10598009cafdd347d25a2daa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/228d1d590ed74bf10598009cafdd347d25a2daa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62c0c0ea7bfb6f8f6b8d767b05120cafb6823da6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c0c0ea7bfb6f8f6b8d767b05120cafb6823da6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c0c0ea7bfb6f8f6b8d767b05120cafb6823da6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c0c0ea7bfb6f8f6b8d767b05120cafb6823da6/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5eb947601bdce59f2ff26694327ad173c51c2724", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eb947601bdce59f2ff26694327ad173c51c2724", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eb947601bdce59f2ff26694327ad173c51c2724"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "b1a75a37b0e58b6afc485a2b984252d23edc0e3f", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0c0ea7bfb6f8f6b8d767b05120cafb6823da6/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0c0ea7bfb6f8f6b8d767b05120cafb6823da6/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=62c0c0ea7bfb6f8f6b8d767b05120cafb6823da6", "patch": "@@ -1981,14 +1981,17 @@ check_interface1 (gfc_interface *p, gfc_interface *q0,\n static void\n check_sym_interfaces (gfc_symbol *sym)\n {\n-  char interface_name[GFC_MAX_SYMBOL_LEN + sizeof(\"generic interface ''\")];\n+  /* Provide sufficient space to hold \"generic interface 'symbol.symbol'\".  */\n+  char interface_name[2*GFC_MAX_SYMBOL_LEN+2 + sizeof(\"generic interface ''\")];\n   gfc_interface *p;\n \n   if (sym->ns != gfc_current_ns)\n     return;\n \n   if (sym->generic != NULL)\n     {\n+      size_t len = strlen (sym->name) + sizeof(\"generic interface ''\");\n+      gcc_assert (len < sizeof (interface_name));\n       sprintf (interface_name, \"generic interface '%s'\", sym->name);\n       if (check_interface0 (sym->generic, interface_name))\n \treturn;"}, {"sha": "287ae50b0cba7884c791a2bab81e1dc2d64587a7", "filename": "gcc/testsuite/gfortran.dg/pr95689.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0c0ea7bfb6f8f6b8d767b05120cafb6823da6/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95689.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0c0ea7bfb6f8f6b8d767b05120cafb6823da6/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95689.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95689.f90?ref=62c0c0ea7bfb6f8f6b8d767b05120cafb6823da6", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do compile }\n+! { dg-options \"-fsecond-underscore\" }\n+! PR fortran/95689 - ICE in check_sym_interfaces, at fortran/interface.c:2015\n+\n+module m2345678901234567890123456789012345678901234567890123456789_123\n+  type t2345678901234567890123456789012345678901234567890123456789_123\n+   end type\n+   interface\n+      module subroutine s2345678901234567890123456789012345678901234567890123456789_123 &\n+                       (x2345678901234567890123456789012345678901234567890123456789_123)\n+      end\n+   end interface\n+end\n+submodule(m2345678901234567890123456789012345678901234567890123456789_123) &\n+          t2345678901234567890123456789012345678901234567890123456789_123\n+end"}]}