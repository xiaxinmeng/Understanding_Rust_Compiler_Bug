{"sha": "5e208e74b37744d823fdf438ee0d0841dfdac055", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUyMDhlNzRiMzc3NDRkODIzZmRmNDM4ZWUwZDA4NDFkZmRhYzA1NQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-04T22:37:26Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-04T22:37:26Z"}, "message": "Don't crash when adding function calls that return multiple results.\n\nFrom-SVN: r168487", "tree": {"sha": "ba9f58ec0698bbf358f377fed88c5adf39581ca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba9f58ec0698bbf358f377fed88c5adf39581ca5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e208e74b37744d823fdf438ee0d0841dfdac055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e208e74b37744d823fdf438ee0d0841dfdac055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e208e74b37744d823fdf438ee0d0841dfdac055", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e208e74b37744d823fdf438ee0d0841dfdac055/comments", "author": null, "committer": null, "parents": [{"sha": "bdc4349d7eece0bc3aaf864ee3b32fe8cc3637a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdc4349d7eece0bc3aaf864ee3b32fe8cc3637a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdc4349d7eece0bc3aaf864ee3b32fe8cc3637a3"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "a8faa35e0f6d04c593c7074cd631713a76aded00", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e208e74b37744d823fdf438ee0d0841dfdac055/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e208e74b37744d823fdf438ee0d0841dfdac055/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=5e208e74b37744d823fdf438ee0d0841dfdac055", "patch": "@@ -401,6 +401,11 @@ Type::are_identical(const Type* t1, const Type* t2, bool errors_are_identical,\n       return t1->interface_type()->is_identical(t2->interface_type(),\n \t\t\t\t\t\terrors_are_identical);\n \n+    case TYPE_CALL_MULTIPLE_RESULT:\n+      if (reason != NULL)\n+\t*reason = \"invalid use of multiple value function call\";\n+      return false;\n+\n     default:\n       gcc_unreachable();\n     }"}]}