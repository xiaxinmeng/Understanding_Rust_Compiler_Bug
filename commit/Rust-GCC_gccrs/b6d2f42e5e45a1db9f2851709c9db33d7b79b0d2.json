{"sha": "b6d2f42e5e45a1db9f2851709c9db33d7b79b0d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZkMmY0MmU1ZTQ1YTFkYjlmMjg1MTcwOWM5ZGIzM2Q3Yjc5YjBkMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-01-19T13:42:00Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-19T13:42:00Z"}, "message": "m68k.md (adddi_dilshr32): Rename to...\n\ngcc/\n\t* config/m68k/m68k.md (adddi_dilshr32): Rename to...\n\t(*adddi_dilshr32): ...this.  Fix formatting.  Remove commented-out\n\tnon-canonical pattern.  Restrict to !TARGET_COLDFIRE.\n\t(*adddi_dilshr32_cf): New pattern.\n\t(adddi3, subdi3): Remove first alternatives.\n\nFrom-SVN: r120963", "tree": {"sha": "508c630dd957070604424839b174629c57f7153a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/508c630dd957070604424839b174629c57f7153a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6d2f42e5e45a1db9f2851709c9db33d7b79b0d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d2f42e5e45a1db9f2851709c9db33d7b79b0d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d2f42e5e45a1db9f2851709c9db33d7b79b0d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d2f42e5e45a1db9f2851709c9db33d7b79b0d2/comments", "author": null, "committer": null, "parents": [{"sha": "f6ab62e8ead1cb8abd0ad3987d61594ac3812116", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ab62e8ead1cb8abd0ad3987d61594ac3812116", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6ab62e8ead1cb8abd0ad3987d61594ac3812116"}], "stats": {"total": 54, "additions": 32, "deletions": 22}, "files": [{"sha": "6fb680a45003eb246e19def9fe3dee62cd2a660a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d2f42e5e45a1db9f2851709c9db33d7b79b0d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d2f42e5e45a1db9f2851709c9db33d7b79b0d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6d2f42e5e45a1db9f2851709c9db33d7b79b0d2", "patch": "@@ -1,3 +1,11 @@\n+2007-01-19  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/m68k/m68k.md (adddi_dilshr32): Rename to...\n+\t(*adddi_dilshr32): ...this.  Fix formatting.  Remove commented-out\n+\tnon-canonical pattern.  Restrict to !TARGET_COLDFIRE.\n+\t(*adddi_dilshr32_cf): New pattern.\n+\t(adddi3, subdi3): Remove first alternatives.\n+\n 2007-01-19  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/m68k/m68k.c (notice_update_cc): If an SFmode move is"}, {"sha": "77a0dd0c9eaaedd76387c128b1b43eeca9b1dcb9", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d2f42e5e45a1db9f2851709c9db33d7b79b0d2/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d2f42e5e45a1db9f2851709c9db33d7b79b0d2/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=b6d2f42e5e45a1db9f2851709c9db33d7b79b0d2", "patch": "@@ -1907,15 +1907,12 @@\n     return \"move%.w %1,%3\\;ext%.l %3\\;add%.l %3,%0\";\n })\n \n-(define_insn \"adddi_dilshr32\"\n+(define_insn \"*adddi_dilshr32\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,o\")\n-;;    (plus:DI (match_operand:DI 2 \"general_operand\" \"%0\")\n-;;\t(lshiftrt:DI (match_operand:DI 1 \"general_operand\" \"ro\")\n-;;            (const_int 32))))]\n-    (plus:DI (lshiftrt:DI (match_operand:DI 1 \"general_operand\" \"ro,d\")\n-            (const_int 32))\n-        (match_operand:DI 2 \"general_operand\" \"0,0\")))]\n-  \"\"\n+\t(plus:DI (lshiftrt:DI (match_operand:DI 1 \"general_operand\" \"ro,d\")\n+\t\t\t      (const_int 32))\n+\t\t (match_operand:DI 2 \"general_operand\" \"0,0\")))]\n+  \"!TARGET_COLDFIRE\"\n {\n   CC_STATUS_INIT;\n   if (GET_CODE (operands[0]) == REG)\n@@ -1925,6 +1922,17 @@\n   return \"add%.l %1,%2\\;negx%.l %0\\;neg%.l %0\";\n })\n \n+(define_insn \"*adddi_dilshr32_cf\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n+\t(plus:DI (lshiftrt:DI (match_operand:DI 1 \"nonimmediate_operand\" \"ro\")\n+\t\t\t      (const_int 32))\n+\t\t (match_operand:DI 2 \"register_operand\" \"0\")))]\n+  \"TARGET_COLDFIRE\"\n+{\n+  CC_STATUS_INIT;\n+  return \"add%.l %1,%R0\\;negx%.l %0\\;neg%.l %0\";\n+})\n+\n (define_insn \"adddi_dishl32\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,o\")\n ;;    (plus:DI (match_operand:DI 2 \"general_operand\" \"%0\")\n@@ -1944,10 +1952,10 @@\n })\n \n (define_insn \"adddi3\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=<,o<>,d,d,d\")\n-\t(plus:DI (match_operand:DI 1 \"general_operand\" \"%0,0,0,0,0\")\n-\t\t (match_operand:DI 2 \"general_operand\" \"<,d,no>,d,a\")))\n-   (clobber (match_scratch:SI 3 \"=X,&d,&d,X,&d\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=o<>,d,d,d\")\n+\t(plus:DI (match_operand:DI 1 \"general_operand\" \"%0,0,0,0\")\n+\t\t (match_operand:DI 2 \"general_operand\" \"d,no>,d,a\")))\n+   (clobber (match_scratch:SI 3 \"=&d,&d,X,&d\"))]\n   \"\"\n {\n   if (DATA_REG_P (operands[0]))\n@@ -2000,9 +2008,6 @@\n   else\n     {\n       gcc_assert (GET_CODE (operands[0]) == MEM);\n-      if (GET_CODE (operands[2]) == MEM\n-\t  && GET_CODE (XEXP (operands[2], 0)) == PRE_DEC)\n-\treturn \"add%.l %2,%0\\;addx%.l %2,%0\";\n       CC_STATUS_INIT;\n       if (GET_CODE (XEXP (operands[0], 0)) == POST_INC)\n \t{\n@@ -2389,10 +2394,10 @@\n })\n \n (define_insn \"subdi3\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=<,o<>,d,d,d\")\n-\t(minus:DI (match_operand:DI 1 \"general_operand\" \"0,0,0,0,0\")\n-\t\t (match_operand:DI 2 \"general_operand\" \"<,d,no>,d,a\")))\n-   (clobber (match_scratch:SI 3 \"=X,&d,&d,X,&d\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=o<>,d,d,d\")\n+\t(minus:DI (match_operand:DI 1 \"general_operand\" \"0,0,0,0\")\n+\t\t (match_operand:DI 2 \"general_operand\" \"d,no>,d,a\")))\n+   (clobber (match_scratch:SI 3 \"=&d,&d,X,&d\"))]\n   \"\"\n {\n   if (DATA_REG_P (operands[0]))\n@@ -2447,9 +2452,6 @@\n   else\n     {\n       gcc_assert (GET_CODE (operands[0]) == MEM);\n-      if (GET_CODE (operands[2]) == MEM\n-\t  && GET_CODE (XEXP (operands[2], 0)) == PRE_DEC)\n-\treturn \"sub%.l %2,%0\\;subx%.l %2,%0\";\n       CC_STATUS_INIT;\n       if (GET_CODE (XEXP (operands[0], 0)) == POST_INC)\n \t{"}]}