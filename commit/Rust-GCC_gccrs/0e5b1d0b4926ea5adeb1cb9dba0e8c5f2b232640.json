{"sha": "0e5b1d0b4926ea5adeb1cb9dba0e8c5f2b232640", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU1YjFkMGI0OTI2ZWE1YWRlYjFjYjlkYmEwZThjNWYyYjIzMjY0MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-20T12:43:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-20T12:43:59Z"}, "message": "re PR ada/24533 (FAIL:   a85013b: *** glibc detected *** free(): invalid pointer: 0x00062a00 ***)\n\n2008-05-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-linux-hppa.ads (atomic_lock_t): Put back proper alignment now that\n\tthe underlying issue with malloc/free has been fixed. Remove associated\n\tcomments.\n\tMinor reformatting.\n\tRelated to PR ada/24533\n\nFrom-SVN: r135614", "tree": {"sha": "45fb3eaf8b4aa8894e4570e078599e2115f87ca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45fb3eaf8b4aa8894e4570e078599e2115f87ca8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e5b1d0b4926ea5adeb1cb9dba0e8c5f2b232640", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e5b1d0b4926ea5adeb1cb9dba0e8c5f2b232640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e5b1d0b4926ea5adeb1cb9dba0e8c5f2b232640", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e5b1d0b4926ea5adeb1cb9dba0e8c5f2b232640/comments", "author": null, "committer": null, "parents": [{"sha": "342c987b287f32374df05fe846460881aa128e51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342c987b287f32374df05fe846460881aa128e51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/342c987b287f32374df05fe846460881aa128e51"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "72d1673d832ea16ee132049baebe2633b02b2075", "filename": "gcc/ada/s-linux-hppa.ads", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e5b1d0b4926ea5adeb1cb9dba0e8c5f2b232640/gcc%2Fada%2Fs-linux-hppa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e5b1d0b4926ea5adeb1cb9dba0e8c5f2b232640/gcc%2Fada%2Fs-linux-hppa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-hppa.ads?ref=0e5b1d0b4926ea5adeb1cb9dba0e8c5f2b232640", "patch": "@@ -97,21 +97,18 @@ package System.Linux is\n \n    --  struct_sigaction offsets\n \n-   sa_flags_pos  : constant := Standard'Address_Size / 8;\n-   sa_mask_pos   : constant := sa_flags_pos * 2;\n+   sa_flags_pos : constant := Standard'Address_Size / 8;\n+   sa_mask_pos  : constant := sa_flags_pos * 2;\n \n-   SA_SIGINFO  : constant := 16#10#;\n-   SA_ONSTACK  : constant := 16#01#;\n+   SA_SIGINFO : constant := 16#10#;\n+   SA_ONSTACK : constant := 16#01#;\n \n    type lock_array is array (1 .. 4) of Integer;\n    type atomic_lock_t is record\n       lock : lock_array;\n    end record;\n    pragma Convention (C, atomic_lock_t);\n-   --  ??? Alignment should be 16 but this is larger than BIGGEST_ALIGNMENT.\n-   --  This causes an erroneous pointer value to sometimes be passed to free\n-   --  during deallocation.  See PR ada/24533 for more details.\n-   for atomic_lock_t'Alignment use 8;\n+   for atomic_lock_t'Alignment use 16;\n \n    type struct_pthread_fast_lock is record\n       spinlock : atomic_lock_t;"}]}