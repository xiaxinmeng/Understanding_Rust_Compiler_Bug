{"sha": "6f7eba349b7f2b140f163b772ba94b383d02d64e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY3ZWJhMzQ5YjdmMmIxNDBmMTYzYjc3MmJhOTRiMzgzZDAyZDY0ZQ==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-08-28T00:03:59Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-08-28T00:03:59Z"}, "message": "make forced labels a vec\n\ngcc/ChangeLog:\n\n2016-08-27  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* cfgbuild.c (make_edges): Adjust.\n\t* cfgrtl.c (can_delete_label_p): Likewise.\n\t* dwarf2cfi.c (create_trace_edges): Likewise.\n\t* except.c (sjlj_emit_dispatch_table): Likewise.\n\t* function.h (struct expr_status): make x_forced_labels a vector.\n\t* jump.c (rebuild_jump_labels_1): Adjust.\n\t* reload1.c (set_initial_label_offsets): Likewise.\n\t* stmt.c (force_label_rtx): Likewise.\n\t(expand_label): Likewise.\n\nFrom-SVN: r239800", "tree": {"sha": "6e015ffd2f6f050040be30de304e3e8a115eba43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e015ffd2f6f050040be30de304e3e8a115eba43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f7eba349b7f2b140f163b772ba94b383d02d64e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f7eba349b7f2b140f163b772ba94b383d02d64e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f7eba349b7f2b140f163b772ba94b383d02d64e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f7eba349b7f2b140f163b772ba94b383d02d64e/comments", "author": null, "committer": null, "parents": [{"sha": "9cad8a673f30b657218eb73565b992ba203a2581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cad8a673f30b657218eb73565b992ba203a2581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cad8a673f30b657218eb73565b992ba203a2581"}], "stats": {"total": 58, "additions": 39, "deletions": 19}, "files": [{"sha": "baff0c613bfb49f22344a2e2277776955e159102", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f7eba349b7f2b140f163b772ba94b383d02d64e", "patch": "@@ -1,3 +1,15 @@\n+2016-08-27  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* cfgbuild.c (make_edges): Adjust.\n+\t* cfgrtl.c (can_delete_label_p): Likewise.\n+\t* dwarf2cfi.c (create_trace_edges): Likewise.\n+\t* except.c (sjlj_emit_dispatch_table): Likewise.\n+\t* function.h (struct expr_status): make x_forced_labels a vector.\n+\t* jump.c (rebuild_jump_labels_1): Adjust.\n+\t* reload1.c (set_initial_label_offsets): Likewise.\n+\t* stmt.c (force_label_rtx): Likewise.\n+\t(expand_label): Likewise.\n+\n 2016-08-27  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* haifa-sched.c (fix_recovery_deps): Make ready_list a vector."}, {"sha": "edecab52f5d64d15621f0b78dc9b24dc687a633b", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=6f7eba349b7f2b140f163b772ba94b383d02d64e", "patch": "@@ -204,7 +204,8 @@ make_edges (basic_block min, basic_block max, int update_p)\n   /* Heavy use of computed goto in machine-generated code can lead to\n      nearly fully-connected CFGs.  In that case we spend a significant\n      amount of time searching the edge lists for duplicates.  */\n-  if (forced_labels || cfun->cfg->max_jumptable_ents > 100)\n+  if (!vec_safe_is_empty (forced_labels)\n+      || cfun->cfg->max_jumptable_ents > 100)\n     edge_cache = sbitmap_alloc (last_basic_block_for_fn (cfun));\n \n   /* By nature of the way these get numbered, ENTRY_BLOCK_PTR->next_bb block\n@@ -280,8 +281,10 @@ make_edges (basic_block min, basic_block max, int update_p)\n \t     everything on the forced_labels list.  */\n \t  else if (computed_jump_p (insn))\n \t    {\n-\t      for (rtx_insn_list *x = forced_labels; x; x = x->next ())\n-\t\tmake_label_edge (edge_cache, bb, x->insn (), EDGE_ABNORMAL);\n+\t      rtx_insn *insn;\n+\t      unsigned int i;\n+\t      FOR_EACH_VEC_SAFE_ELT (forced_labels, i, insn)\n+\t\tmake_label_edge (edge_cache, bb, insn, EDGE_ABNORMAL);\n \t    }\n \n \t  /* Returns create an exit out.  */"}, {"sha": "de07fcd4b1d7cd887af1c15b94d94eb8cf1f1d23", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=6f7eba349b7f2b140f163b772ba94b383d02d64e", "patch": "@@ -115,7 +115,8 @@ can_delete_label_p (const rtx_code_label *label)\n   return (!LABEL_PRESERVE_P (label)\n \t  /* User declared labels must be preserved.  */\n \t  && LABEL_NAME (label) == 0\n-\t  && !in_insn_list_p (forced_labels, label));\n+\t  && !vec_safe_contains<rtx_insn *> (forced_labels,\n+\t\t\t\t\t     const_cast<rtx_code_label *> (label)));\n }\n \n /* Delete INSN by patching it out.  */"}, {"sha": "6491d5aaf4c4a21241cc718bfff1016f6d149951", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=6f7eba349b7f2b140f163b772ba94b383d02d64e", "patch": "@@ -2354,8 +2354,10 @@ create_trace_edges (rtx_insn *insn)\n \t}\n       else if (computed_jump_p (insn))\n \t{\n-\t  for (rtx_insn_list *lab = forced_labels; lab; lab = lab->next ())\n-\t    maybe_record_trace_start (lab->insn (), insn);\n+\t  rtx_insn *temp;\n+\t  unsigned int i;\n+\t  FOR_EACH_VEC_SAFE_ELT (forced_labels, i, temp)\n+\t    maybe_record_trace_start (temp, insn);\n \t}\n       else if (returnjump_p (insn))\n \t;"}, {"sha": "bc6f30cc9207ee09daeca11c1bbea5bc1bd81c6b", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=6f7eba349b7f2b140f163b772ba94b383d02d64e", "patch": "@@ -1278,8 +1278,7 @@ sjlj_emit_dispatch_table (rtx_code_label *dispatch_label, int num_dispatch)\n      label on the nonlocal_goto_label list.  Since we're modeling these\n      CFG edges more exactly, we can use the forced_labels list instead.  */\n   LABEL_PRESERVE_P (dispatch_label) = 1;\n-  forced_labels\n-    = gen_rtx_INSN_LIST (VOIDmode, dispatch_label, forced_labels);\n+  vec_safe_push<rtx_insn *> (forced_labels, dispatch_label);\n #endif\n \n   /* Load up exc_ptr and filter values from the function context.  */"}, {"sha": "590a490af058676c5960e89791cdfd1b5911119a", "filename": "gcc/function.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=6f7eba349b7f2b140f163b772ba94b383d02d64e", "patch": "@@ -126,7 +126,7 @@ struct GTY(()) expr_status {\n   rtx x_apply_args_value;\n \n   /* List of labels that must never be deleted.  */\n-  rtx_insn_list *x_forced_labels;\n+  vec<rtx_insn *, va_gc> *x_forced_labels;\n };\n \n typedef struct call_site_record_d *call_site_record;"}, {"sha": "22f8a71b760d09560fae8e446af891627643c9c2", "filename": "gcc/jump.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=6f7eba349b7f2b140f163b772ba94b383d02d64e", "patch": "@@ -68,8 +68,6 @@ static int invert_exp_1 (rtx, rtx);\n static void\n rebuild_jump_labels_1 (rtx_insn *f, bool count_forced)\n {\n-  rtx_insn_list *insn;\n-\n   timevar_push (TV_REBUILD_JUMP);\n   init_label_info (f);\n   mark_all_labels (f);\n@@ -79,9 +77,13 @@ rebuild_jump_labels_1 (rtx_insn *f, bool count_forced)\n      count doesn't drop to zero.  */\n \n   if (count_forced)\n-    for (insn = forced_labels; insn; insn = insn->next ())\n-      if (LABEL_P (insn->insn ()))\n-\tLABEL_NUSES (insn->insn ())++;\n+    {\n+      rtx_insn *insn;\n+      unsigned int i;\n+      FOR_EACH_VEC_SAFE_ELT (forced_labels, i, insn)\n+\tif (LABEL_P (insn))\n+\t  LABEL_NUSES (insn)++;\n+    }\n   timevar_pop (TV_REBUILD_JUMP);\n }\n "}, {"sha": "2a9a562cbbdb4178e0b0363ee26d8d252cfe51f3", "filename": "gcc/reload1.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=6f7eba349b7f2b140f163b772ba94b383d02d64e", "patch": "@@ -3888,9 +3888,10 @@ set_initial_label_offsets (void)\n {\n   memset (offsets_known_at, 0, num_labels);\n \n-  for (rtx_insn_list *x = forced_labels; x; x = x->next ())\n-    if (x->insn ())\n-      set_label_offsets (x->insn (), NULL, 1);\n+  unsigned int i;\n+  rtx_insn *insn;\n+  FOR_EACH_VEC_SAFE_ELT (forced_labels, i, insn)\n+    set_label_offsets (insn, NULL, 1);\n \n   for (rtx_insn_list *x = nonlocal_goto_handler_labels; x; x = x->next ())\n     if (x->insn ())"}, {"sha": "1bae9e9cb6e5721211ef5436d0eb3cafdc001be5", "filename": "gcc/stmt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7eba349b7f2b140f163b772ba94b383d02d64e/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=6f7eba349b7f2b140f163b772ba94b383d02d64e", "patch": "@@ -136,7 +136,7 @@ force_label_rtx (tree label)\n \n   gcc_assert (function);\n \n-  forced_labels = gen_rtx_INSN_LIST (VOIDmode, ref, forced_labels);\n+  vec_safe_push (forced_labels, ref);\n   return ref;\n }\n \n@@ -190,7 +190,7 @@ expand_label (tree label)\n     }\n \n   if (FORCED_LABEL (label))\n-    forced_labels = gen_rtx_INSN_LIST (VOIDmode, label_r, forced_labels);\n+    vec_safe_push<rtx_insn *> (forced_labels, label_r);\n \n   if (DECL_NONLOCAL (label) || FORCED_LABEL (label))\n     maybe_set_first_label_num (label_r);"}]}