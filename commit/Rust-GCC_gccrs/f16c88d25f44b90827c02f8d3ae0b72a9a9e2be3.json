{"sha": "f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE2Yzg4ZDI1ZjQ0YjkwODI3YzAyZjhkM2FlMGI3MmE5YTllMmJlMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-04-03T13:43:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-04-03T13:43:23Z"}, "message": "re PR tree-optimization/60740 (ICE in extract_affine w/ -O2 -ftree-loop-linear)\n\n2014-04-03  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/60740\n\t* graphite-scop-detection.c (stmt_simple_for_scop_p): Iterate\n\tover all GIMPLE_COND operands.\n\n\t* gcc.dg/graphite/pr60740.c: New testcase.\n\nFrom-SVN: r209057", "tree": {"sha": "b55ceac5099a5d518e335329794a0dce98c11946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b55ceac5099a5d518e335329794a0dce98c11946"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "880a467be7f2b84126e19ea3f4d6872d5a3f1252", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/880a467be7f2b84126e19ea3f4d6872d5a3f1252", "html_url": "https://github.com/Rust-GCC/gccrs/commit/880a467be7f2b84126e19ea3f4d6872d5a3f1252"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "0756170c8ba7c082c76fb397c6f95adfebebf718", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3", "patch": "@@ -1,3 +1,9 @@\n+2014-04-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/60740\n+\t* graphite-scop-detection.c (stmt_simple_for_scop_p): Iterate\n+\tover all GIMPLE_COND operands.\n+\n 2014-04-03  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* doc/invoke.texi (Wnon-virtual-dtor): Adjust documentation."}, {"sha": "b5e4a8c8cb3d4ad3d65800df917cf0fa43f6258f", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3", "patch": "@@ -346,13 +346,10 @@ stmt_simple_for_scop_p (basic_block scop_entry, loop_p outermost_loop,\n \n     case GIMPLE_COND:\n       {\n-\ttree op;\n-\tssa_op_iter op_iter;\n-        enum tree_code code = gimple_cond_code (stmt);\n-\n \t/* We can handle all binary comparisons.  Inequalities are\n \t   also supported as they can be represented with union of\n \t   polyhedra.  */\n+        enum tree_code code = gimple_cond_code (stmt);\n         if (!(code == LT_EXPR\n \t      || code == GT_EXPR\n \t      || code == LE_EXPR\n@@ -361,11 +358,14 @@ stmt_simple_for_scop_p (basic_block scop_entry, loop_p outermost_loop,\n \t      || code == NE_EXPR))\n           return false;\n \n-\tFOR_EACH_SSA_TREE_OPERAND (op, stmt, op_iter, SSA_OP_ALL_USES)\n-\t  if (!graphite_can_represent_expr (scop_entry, loop, op)\n-\t      /* We can not handle REAL_TYPE. Failed for pr39260.  */\n-\t      || TREE_CODE (TREE_TYPE (op)) == REAL_TYPE)\n-\t    return false;\n+\tfor (unsigned i = 0; i < 2; ++i)\n+\t  {\n+\t    tree op = gimple_op (stmt, i);\n+\t    if (!graphite_can_represent_expr (scop_entry, loop, op)\n+\t\t/* We can not handle REAL_TYPE. Failed for pr39260.  */\n+\t\t|| TREE_CODE (TREE_TYPE (op)) == REAL_TYPE)\n+\t      return false;\n+\t  }\n \n \treturn true;\n       }"}, {"sha": "3a58dc297454329714f80f186b2a70072b2fafeb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3", "patch": "@@ -1,3 +1,8 @@\n+2014-04-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/60740\n+\t* gcc.dg/graphite/pr60740.c: New testcase.\n+\n 2014-04-03  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/warn/Wnvdtor.C: Add non-polymorphic case."}, {"sha": "5b7c1802236ea43cb4a60fc68ebdf39d6d3c761b", "filename": "gcc/testsuite/gcc.dg/graphite/pr60740.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr60740.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr60740.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr60740.c?ref=f16c88d25f44b90827c02f8d3ae0b72a9a9e2be3", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O2 -floop-interchange\" } */\n+\n+int **db6 = 0;\n+\n+void\n+k26(void)\n+{\n+  static int geb = 0;\n+  int *a22 = &geb;\n+  int **l30 = &a22;\n+  int *c4b;\n+  int ndf;\n+  for (ndf = 0; ndf <= 1; ++ndf)\n+    *c4b = (db6 == l30) && (*a22)--;\n+}\n+"}]}