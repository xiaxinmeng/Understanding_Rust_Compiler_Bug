{"sha": "d9a3317a6806010861b6f640ca1cc76e2044fefc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlhMzMxN2E2ODA2MDEwODYxYjZmNjQwY2ExY2M3NmUyMDQ0ZmVmYw==", "commit": {"author": {"name": "Mumit Khan", "email": "khan@xraylith.wisc.edu", "date": "1998-01-17T21:39:07Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-17T21:39:07Z"}, "message": "configure.in (sys/param.h,sys/times.h): Check.\n\n\t* libU77/configure.in (sys/param.h,sys/times.h): Check.\n\t(times,alarm): Likewise.\n\t* libU77/config.h.in (HAVE_SYS_PARAM_H, HAVE_SYS_TIMES_H,\n\tHAVE_ALARM, HAVE_TIMES): New defs.\n\t* libU77/alarm_.c: Conditionalize for target platform. Set errno\n\tto ENOSYS if target libc doesn't have the function.\n\t* libU77/dtime_.c: Likewise.\n\t* libU77/etime_.c: Likewise.\n\t* libU77/sys_clock_.c: Likewise.\n\nFrom-SVN: r17398", "tree": {"sha": "271b20260ce7a77404627a2146109f046d496eae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/271b20260ce7a77404627a2146109f046d496eae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9a3317a6806010861b6f640ca1cc76e2044fefc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a3317a6806010861b6f640ca1cc76e2044fefc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9a3317a6806010861b6f640ca1cc76e2044fefc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a3317a6806010861b6f640ca1cc76e2044fefc/comments", "author": null, "committer": null, "parents": [{"sha": "4dfa69619aac0e073659414c99bbbc2793b2e922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dfa69619aac0e073659414c99bbbc2793b2e922", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dfa69619aac0e073659414c99bbbc2793b2e922"}], "stats": {"total": 86, "additions": 75, "deletions": 11}, "files": [{"sha": "e052c2dfd76906a0674f3645c9140e636b2409f6", "filename": "gcc/f/runtime/ChangeLog.egcs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FChangeLog.egcs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FChangeLog.egcs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FChangeLog.egcs?ref=d9a3317a6806010861b6f640ca1cc76e2044fefc", "patch": "@@ -1,4 +1,14 @@\n Sat Jan 17 22:40:31 1998  Mumit Khan <khan@xraylith.wisc.edu>\n+\n+\t* libU77/configure.in (sys/param.h,sys/times.h): Check.\n+\t(times,alarm): Likewise.\n+\t* libU77/config.h.in (HAVE_SYS_PARAM_H, HAVE_SYS_TIMES_H,\n+\tHAVE_ALARM, HAVE_TIMES): New defs.\n+\t* libU77/alarm_.c: Conditionalize for target platform. Set errno\n+\tto ENOSYS if target libc doesn't have the function.\n+\t* libU77/dtime_.c: Likewise.\n+\t* libU77/etime_.c: Likewise.\n+\t* libU77/sys_clock_.c: Likewise.\n        \n \t* configure.in (NON_UNIX_STDIO): Define if MINGW32.\n \t(NON_ANSI_RW_MODE): Do not define for CYGWIN32 or MINGW32."}, {"sha": "3e2f293d9b1d8542fdb8af3ddb941993166c6d45", "filename": "gcc/f/runtime/libU77/alarm_.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Falarm_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Falarm_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Falarm_.c?ref=d9a3317a6806010861b6f640ca1cc76e2044fefc", "patch": "@@ -24,6 +24,7 @@ Boston, MA 02111-1307, USA.  */\n #  include <unistd.h>\n #endif\n \n+#include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n #ifndef RETSIGTYPE\n@@ -50,10 +51,14 @@ integer G77_alarm_0 (integer *seconds, sig_proc proc)\n #endif\n {\n   int status;\n-\n+#if defined (HAVE_ALARM) && defined (SIGALRM)\n   if (signal(SIGALRM, (sig_type)proc) == SIG_ERR)\n     status = -1;\n   else\n     status = alarm (*seconds);\n+#else /* ! HAVE_ALARM || ! SIGALRM */\n+  errno = ENOSYS;\n+  status = -1;\n+#endif\n   return status;\n }"}, {"sha": "4fcffeb2162c6d0568016b896332153f943b9d5d", "filename": "gcc/f/runtime/libU77/config.h.in", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fconfig.h.in?ref=d9a3317a6806010861b6f640ca1cc76e2044fefc", "patch": "@@ -71,3 +71,16 @@\n \n /* Define if you have the <unistd.h> header file.  */\n #undef HAVE_UNISTD_H\n+\n+/* Define if you have the <sys/param.h> header file.  */\n+#undef HAVE_SYS_PARAM_H\n+\n+/* Define if you have the <sys/times.h> header file.  */\n+#undef HAVE_SYS_TIMES_H\n+\n+/* Define if you have the alarm function.  */\n+#undef HAVE_ALARM\n+\n+/* Define if you have the times function.  */\n+#undef HAVE_TIMES\n+"}, {"sha": "3cacc9f04c7db131352f3f1ae537a2957668bc2d", "filename": "gcc/f/runtime/libU77/configure.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fconfigure.in?ref=d9a3317a6806010861b6f640ca1cc76e2044fefc", "patch": "@@ -79,7 +79,8 @@ dnl     AC_DEFINE(KR_headers)])])\n dnl AC_MSG_RESULT($ac_cv_sys_proto)              \n \n AC_HEADER_TIME\n-AC_CHECK_HEADERS(limits.h unistd.h sys/time.h string.h stdlib.h)\n+AC_CHECK_HEADERS(limits.h unistd.h sys/time.h string.h stdlib.h \\\n+  sys/param.h sys/times.h)\n \n dnl Checks for typedefs, structures, and compiler characteristics.\n AC_C_CONST\n@@ -96,7 +97,8 @@ AC_STRUCT_TM\n \n dnl Checks for library functions.\n \n-AC_CHECK_FUNCS(symlink getcwd getwd lstat gethostname strerror clock getrusage)\n+AC_CHECK_FUNCS(symlink getcwd getwd lstat gethostname strerror clock \\\n+  getrusage times alarm)\n test $ac_cv_func_symlink = yes && MAYBES=\"$MAYBES symlnk_.o\"\n test $ac_cv_func_lstat = yes && MAYBES=\"$MAYBES lstat_.o\"\n test $ac_cv_func_gethostname = yes && MAYBES=\"$MAYBES hostnm_.o\""}, {"sha": "8bcfde8cb39b98dda5ca06825f84433e8cf1562d", "filename": "gcc/f/runtime/libU77/dtime_.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Fdtime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Fdtime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fdtime_.c?ref=d9a3317a6806010861b6f640ca1cc76e2044fefc", "patch": "@@ -23,12 +23,17 @@ Boston, MA 02111-1307, USA.  */\n #  include <unistd.h>\n #endif\n #include <sys/types.h>\n-#include <sys/times.h>\n-#include <sys/param.h>\n+#if HAVE_SYS_TIMES_H\n+#  include <sys/times.h>\n+#endif\n+#if HAVE_SYS_PARAM_H\n+#  include <sys/param.h>\n+#endif\n #if HAVE_GETRUSAGE\n #  include <sys/time.h>\n #  include <sys/resource.h>\n #endif\n+#include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n /* For dtime, etime we store the clock tick parameter (clk_tck) the\n@@ -45,6 +50,7 @@ double G77_dtime_0 (tarray)\n double G77_dtime_0 (real tarray[2])\n #endif\n {\n+#if defined (HAVE_GETRUSAGE) || defined (HAVE_TIMES)\n   /* The getrusage version is only the default for convenience. */\n #ifdef HAVE_GETRUSAGE\n   float utime, stime;\n@@ -85,4 +91,8 @@ double G77_dtime_0 (real tarray[2])\n #endif /* HAVE_GETRUSAGE */\n   old_utime = utime; old_stime = stime;\n   return (tarray[0]+tarray[1]);\n+#else /* ! HAVE_GETRUSAGE && ! HAVE_TIMES */\n+  errno = ENOSYS;\n+  return 0.0;\n+#endif /* ! HAVE_GETRUSAGE && ! HAVE_TIMES */\n }"}, {"sha": "269d964c75b0fa71eeec7864e942bfcc6ed88803", "filename": "gcc/f/runtime/libU77/etime_.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Fetime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Fetime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fetime_.c?ref=d9a3317a6806010861b6f640ca1cc76e2044fefc", "patch": "@@ -23,12 +23,17 @@ Boston, MA 02111-1307, USA.  */\n #  include <unistd.h>\n #endif\n #include <sys/types.h>\n-#include <sys/times.h>\n-#include <sys/param.h>\n+#if HAVE_SYS_TIMES_H\n+#  include <sys/times.h>\n+#endif\n+#if HAVE_SYS_PARAM_H\n+#  include <sys/param.h>\n+#endif\n #if HAVE_GETRUSAGE\n #  include <sys/time.h>\n #  include <sys/resource.h>\n #endif\n+#include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n /* For dtime, etime we store the clock tick parameter (clk_tck) the\n@@ -45,6 +50,7 @@ double G77_etime_0 (tarray)\n double G77_etime_0 (real tarray[2])\n #endif\n {\n+#if defined (HAVE_GETRUSAGE) || defined (HAVE_TIMES)\n   /* The getrusage version is only the default for convenience. */\n #ifdef HAVE_GETRUSAGE\n   struct rusage rbuff;\n@@ -77,4 +83,8 @@ double G77_etime_0 (real tarray[2])\n   tarray[1] = (float) buffer.tms_stime / (float)clk_tck;\n #endif /* HAVE_GETRUSAGE */\n   return (tarray[0]+tarray[1]);\n+#else /* ! HAVE_GETRUSAGE && ! HAVE_TIMES */\n+  errno = ENOSYS;\n+  return 0.0;\n+#endif /* ! HAVE_GETRUSAGE && ! HAVE_TIMES */\n }"}, {"sha": "7a0b51b01848087b8ed2676fafebcd655274917b", "filename": "gcc/f/runtime/libU77/link_.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Flink_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Flink_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Flink_.c?ref=d9a3317a6806010861b6f640ca1cc76e2044fefc", "patch": "@@ -28,7 +28,9 @@ Boston, MA 02111-1307, USA.  */\n #  include <unistd.h>\n #endif\n #include <errno.h>\n-#include <sys/param.h>\n+#if HAVE_SYS_PARAM_H\n+#  include <sys/param.h>\n+#endif\n #include \"f2c.h\"\n \n #ifdef KR_headers"}, {"sha": "4b0bf24541d2fc0488320612aa9aa6ab7aa0f014", "filename": "gcc/f/runtime/libU77/symlnk_.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Fsymlnk_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Fsymlnk_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fsymlnk_.c?ref=d9a3317a6806010861b6f640ca1cc76e2044fefc", "patch": "@@ -28,7 +28,9 @@ Boston, MA 02111-1307, USA.  */\n #  include <unistd.h>\n #endif\n #include <errno.h>\n-#include <sys/param.h>\n+#if HAVE_SYS_PARAM_H\n+#  include <sys/param.h>\n+#endif\n #include \"f2c.h\"\n \n #ifdef KR_headers"}, {"sha": "47436ddd6b56fc51bda440d7e9bb0b01822ab65c", "filename": "gcc/f/runtime/libU77/sys_clock_.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Fsys_clock_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Fsys_clock_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fsys_clock_.c?ref=d9a3317a6806010861b6f640ca1cc76e2044fefc", "patch": "@@ -29,11 +29,14 @@ Boston, MA 02111-1307, USA.  */\n #  include <time.h>\n # endif\n #endif\n-#include <sys/times.h>\n+#if HAVE_SYS_TIMES_H\n+#  include <sys/times.h>\n+#endif\n #include <limits.h>\n #if HAVE_UNISTD_H\n #  include <unistd.h>\n #endif\n+#include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n #ifdef KR_headers\n@@ -43,6 +46,7 @@ int G77_system_clock_0 (count, count_rate, count_max)\n int G77_system_clock_0 (integer *count, integer *count_rate, integer *count_max)\n #endif\n {\n+#if defined (HAVE_TIMES)\n   struct tms buffer;\n   unsigned long cnt;\n #ifdef _SC_CLK_TCK\n@@ -63,4 +67,8 @@ int G77_system_clock_0 (integer *count, integer *count_rate, integer *count_max)\n   else\n     *count = cnt;\n   return 0;\n+#else /* ! HAVE_TIMES */\n+  errno = ENOSYS;\n+  return -1;\n+#endif /* ! HAVE_TIMES */\n }"}, {"sha": "cd00559b29ac342bdfb57413d886e8e3b8851d60", "filename": "gcc/f/runtime/libU77/unlink_.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Funlink_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3317a6806010861b6f640ca1cc76e2044fefc/gcc%2Ff%2Fruntime%2FlibU77%2Funlink_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Funlink_.c?ref=d9a3317a6806010861b6f640ca1cc76e2044fefc", "patch": "@@ -28,7 +28,9 @@ Boston, MA 02111-1307, USA.  */\n #  include <unistd.h>\n #endif\n #include <errno.h>\n-#include <sys/param.h>\n+#if HAVE_SYS_PARAM_H\n+#  include <sys/param.h>\n+#endif\n #include \"f2c.h\"\n \n #ifdef KR_headers"}]}