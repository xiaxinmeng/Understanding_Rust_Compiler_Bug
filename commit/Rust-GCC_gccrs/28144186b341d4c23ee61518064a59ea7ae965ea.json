{"sha": "28144186b341d4c23ee61518064a59ea7ae965ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgxNDQxODZiMzQxZDRjMjNlZTYxNTE4MDY0YTU5ZWE3YWU5NjVlYQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-07-23T19:14:18Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-07-23T19:14:18Z"}, "message": "Fix stabs bug with C array ranges.\n\n\t* dbxout.c (dbxout_range_type): Only call dbxout_type_index for\n\talready defined type.\n\nFrom-SVN: r21355", "tree": {"sha": "1880f2548ab9da08dd584396d2d12378613e8369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1880f2548ab9da08dd584396d2d12378613e8369"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28144186b341d4c23ee61518064a59ea7ae965ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28144186b341d4c23ee61518064a59ea7ae965ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28144186b341d4c23ee61518064a59ea7ae965ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28144186b341d4c23ee61518064a59ea7ae965ea/comments", "author": null, "committer": null, "parents": [{"sha": "136dc16a52166cff22037db7282e7c5e4093450f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136dc16a52166cff22037db7282e7c5e4093450f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/136dc16a52166cff22037db7282e7c5e4093450f"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "97b5457f128c433344bd95655e13f028c330af1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28144186b341d4c23ee61518064a59ea7ae965ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28144186b341d4c23ee61518064a59ea7ae965ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28144186b341d4c23ee61518064a59ea7ae965ea", "patch": "@@ -1,3 +1,8 @@\n+Thu Jul 23 18:53:20 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* dbxout.c (dbxout_range_type): Only call dbxout_type_index for\n+\talready defined type.\n+\n Thu Jul 23 13:49:41 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* expr.c (check_max_integer_computation_mode): Allow conversions"}, {"sha": "5e6f2a9d874e7e4e176476c0edc0af8de82e95af", "filename": "gcc/dbxout.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28144186b341d4c23ee61518064a59ea7ae965ea/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28144186b341d4c23ee61518064a59ea7ae965ea/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=28144186b341d4c23ee61518064a59ea7ae965ea", "patch": "@@ -954,8 +954,18 @@ dbxout_range_type (type)\n \t were defined to be sub-ranges of int.  Unfortunately, this\n \t does not allow us to distinguish true sub-ranges from integer\n \t types.  So, instead we define integer (non-sub-range) types as\n-\t sub-ranges of themselves.  */\n-      dbxout_type_index (type);\n+\t sub-ranges of themselves.  This matters for Chill.  If this isn't\n+\t a subrange type, then we want to define it in terms of itself.\n+\t However, in C, this may be an anonymous integer type, and we don't\n+\t want to emit debug info referring to it.  Just calling\n+\t dbxout_type_index won't work anyways, because the type hasn't been\n+\t defined yet.  We make this work for both cases by checked to see\n+\t whether this is a defined type, referring to it if it is, and using\n+\t 'int' otherwise.  */\n+      if (TYPE_SYMTAB_ADDRESS (type) != 0)\n+\tdbxout_type_index (type);\n+      else\n+\tdbxout_type_index (integer_type_node);\n     }\n   if (TREE_CODE (TYPE_MIN_VALUE (type)) == INTEGER_CST)\n     {"}]}