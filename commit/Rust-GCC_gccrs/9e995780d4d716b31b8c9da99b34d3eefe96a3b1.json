{"sha": "9e995780d4d716b31b8c9da99b34d3eefe96a3b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU5OTU3ODBkNGQ3MTZiMzFiOGM5ZGE5OWIzNGQzZWVmZTk2YTNiMQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2004-08-24T17:00:54Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-08-24T17:00:54Z"}, "message": "rtl.def: Wrap MD-only codes in #ifdef GENERATOR_FILE.\n\n\t* rtl.def: Wrap MD-only codes in #ifdef GENERATOR_FILE.\n\t* gengtype.c: Don't include rtl.h.  Define enum rtx_code and\n\trtx_name, rtx_format arrays by direct reference to rtl.def,\n\tfirst undefining GENERATOR_FILE.  Define enum insn_note and\n\tnote_insn_name array by direct reference to insn-notes.def.\n\t(adjust_field_rtx_def): Remove local definition of rtx_name.\n\tUse symbolic names for insn notes.\n\t* Makefile.in (gengtype.o): Update dependencies.\n\nFrom-SVN: r86499", "tree": {"sha": "25a72c5706af8fe9245261c0d10cbcd0af32dacc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25a72c5706af8fe9245261c0d10cbcd0af32dacc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e995780d4d716b31b8c9da99b34d3eefe96a3b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e995780d4d716b31b8c9da99b34d3eefe96a3b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e995780d4d716b31b8c9da99b34d3eefe96a3b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e995780d4d716b31b8c9da99b34d3eefe96a3b1/comments", "author": null, "committer": null, "parents": [{"sha": "de37af8c4e5327db905d6ef77b77a9f26765f392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de37af8c4e5327db905d6ef77b77a9f26765f392", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de37af8c4e5327db905d6ef77b77a9f26765f392"}], "stats": {"total": 65, "additions": 52, "deletions": 13}, "files": [{"sha": "efa8514b331055c750d9e610a73244e2954ef73f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e995780d4d716b31b8c9da99b34d3eefe96a3b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e995780d4d716b31b8c9da99b34d3eefe96a3b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e995780d4d716b31b8c9da99b34d3eefe96a3b1", "patch": "@@ -3,6 +3,15 @@\n \t* rtl.def: Reorganize, placing all codes used only in machine\n \tdescriptions at the end.\n \n+\t* rtl.def: Wrap MD-only codes in #ifdef GENERATOR_FILE.\n+\t* gengtype.c: Don't include rtl.h.  Define enum rtx_code and\n+\trtx_name, rtx_format arrays by direct reference to rtl.def,\n+\tfirst undefining GENERATOR_FILE.  Define enum insn_note and\n+\tnote_insn_name array by direct reference to insn-notes.def.\n+\t(adjust_field_rtx_def): Remove local definition of rtx_name.\n+\tUse symbolic names for insn notes.\n+\t* Makefile.in (gengtype.o): Update dependencies.\n+\n 2004-08-24  Zack Weinberg  <zack@codesourcery.com>\n \n \t* basic-block.h (struct basic_block_def): Reorder fields to"}, {"sha": "794ff0f459b2339114cd736bdebcf70cf8585545", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e995780d4d716b31b8c9da99b34d3eefe96a3b1/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e995780d4d716b31b8c9da99b34d3eefe96a3b1/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=9e995780d4d716b31b8c9da99b34d3eefe96a3b1", "patch": "@@ -2566,8 +2566,8 @@ gengtype$(build_exeext) : gengtype.o gengtype-lex.o gengtype-yacc.o \\\n \t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t gengtype.o gengtype-lex.o gengtype-yacc.o $(BUILD_LIBS)\n \n-gengtype.o : gengtype.c gengtype.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n-  real.h $(RTL_BASE_H) gtyp-gen.h\n+gengtype.o : gengtype.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n+  gengtype.h gtyp-gen.h rtl.def insn-notes.def\n \n gengtype-lex.o : gengtype-lex.c gengtype.h gengtype-yacc.h \\\n   $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) vec.h"}, {"sha": "2cdff54ecbde128c387113cee69d8ff2ddf64fcc", "filename": "gcc/gengtype.c", "status": "modified", "additions": 39, "deletions": 11, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e995780d4d716b31b8c9da99b34d3eefe96a3b1/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e995780d4d716b31b8c9da99b34d3eefe96a3b1/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=9e995780d4d716b31b8c9da99b34d3eefe96a3b1", "patch": "@@ -24,7 +24,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tm.h\"\n #include \"gengtype.h\"\n #include \"gtyp-gen.h\"\n-#include \"rtl.h\"\n #undef abort\n \n /* Nonzero iff an error has occurred.  */\n@@ -332,16 +331,51 @@ note_variable (const char *s, type_p t, options_p o, struct fileloc *pos)\n   variables = n;\n }\n \n-/* We really don't care how long a CONST_DOUBLE is.  */\n+/* We don't care how long a CONST_DOUBLE is.  */\n #define CONST_DOUBLE_FORMAT \"ww\"\n-const char * const rtx_format[NUM_RTX_CODE] = {\n+/* We don't want to see codes that are only for generator files.  */\n+#undef GENERATOR_FILE\n+\n+enum rtx_code {\n+#define DEF_RTL_EXPR(ENUM, NAME, FORMAT, CLASS) ENUM ,\n+#include \"rtl.def\"\n+#undef DEF_RTL_EXPR\n+  NUM_RTX_CODE\n+};\n+\n+static const char * const rtx_name[NUM_RTX_CODE] = {\n+#define DEF_RTL_EXPR(ENUM, NAME, FORMAT, CLASS)   NAME ,\n+#include \"rtl.def\"\n+#undef DEF_RTL_EXPR\n+};\n+\n+static const char * const rtx_format[NUM_RTX_CODE] = {\n #define DEF_RTL_EXPR(ENUM, NAME, FORMAT, CLASS)   FORMAT ,\n #include \"rtl.def\"\n #undef DEF_RTL_EXPR\n };\n \n static int rtx_next_new[NUM_RTX_CODE];\n \n+/* We also need codes and names for insn notes (not register notes).\n+   Note that we do *not* bias the note values here.  */\n+enum insn_note {\n+#define DEF_INSN_NOTE(NAME) NAME,\n+#include \"insn-notes.def\"\n+#undef DEF_INSN_NOTE\n+\n+  NOTE_INSN_MAX\n+};\n+\n+static const char *const note_insn_name[NOTE_INSN_MAX] = {\n+#define DEF_INSN_NOTE(NAME) #NAME,\n+#include \"insn-notes.def\"\n+#undef DEF_INSN_NOTE\n+};\n+\n+#undef CONST_DOUBLE_FORMAT\n+#define GENERATOR_FILE\n+\n /* Generate the contents of the rtx_next array.  This really doesn't belong\n    in gengtype at all, but it's needed for adjust_field_rtx_def.  */\n \n@@ -397,12 +431,6 @@ adjust_field_rtx_def (type_p t, options_p ARG_UNUSED (opt))\n   type_p rtx_tp, rtvec_tp, tree_tp, mem_attrs_tp, note_union_tp, scalar_tp;\n   type_p bitmap_tp, basic_block_tp, reg_attrs_tp;\n \n-  static const char * const rtx_name[NUM_RTX_CODE] = {\n-#define DEF_RTL_EXPR(ENUM, NAME, FORMAT, CLASS)   NAME ,\n-#include \"rtl.def\"\n-#undef DEF_RTL_EXPR\n-  };\n-\n   if (t->kind != TYPE_UNION)\n     {\n       error_at_line (&lexer_line,\n@@ -428,7 +456,7 @@ adjust_field_rtx_def (type_p t, options_p ARG_UNUSED (opt))\n     pair_p note_flds = NULL;\n     int c;\n \n-    for (c = NOTE_INSN_BIAS; c <= NOTE_INSN_MAX; c++)\n+    for (c = 0; c <= NOTE_INSN_MAX; c++)\n       {\n \tpair_p old_note_flds = note_flds;\n \n@@ -438,7 +466,7 @@ adjust_field_rtx_def (type_p t, options_p ARG_UNUSED (opt))\n \tnote_flds->opt = XNEW (struct options);\n \tnote_flds->opt->next = nodot;\n \tnote_flds->opt->name = \"tag\";\n-\tnote_flds->opt->info = xasprintf (\"%d\", c);\n+\tnote_flds->opt->info = note_insn_name[c];\n \tnote_flds->next = old_note_flds;\n \n \tswitch (c)"}, {"sha": "e45004d22ab7ea6df4b926a0bf84fc81eb327712", "filename": "gcc/rtl.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e995780d4d716b31b8c9da99b34d3eefe96a3b1/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e995780d4d716b31b8c9da99b34d3eefe96a3b1/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=9e995780d4d716b31b8c9da99b34d3eefe96a3b1", "patch": "@@ -685,6 +685,7 @@ DEF_RTL_EXPR(VAR_LOCATION, \"var_location\", \"te\", RTX_EXTRA)\n \n /* All expressions from this point forward appear only in machine\n    descriptions.  */\n+#ifdef GENERATOR_FILE\n \n /* Include a secondary machine-description file at this point.  */\n DEF_RTL_EXPR(INCLUDE, \"include\", \"s\", RTX_EXTRA)\n@@ -1160,6 +1161,7 @@ DEF_RTL_EXPR (ATTR_FLAG, \"attr_flag\", \"s\", RTX_EXTRA)\n    true, the second operand will be used as the value of the conditional.  */\n DEF_RTL_EXPR(COND, \"cond\", \"Ee\", RTX_EXTRA)\n \n+#endif /* GENERATOR_FILE */\n \n /*\n Local variables:"}]}