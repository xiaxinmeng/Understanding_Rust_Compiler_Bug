{"sha": "020708443d6bbb288f53da32faa2d76dbdb8d0dd", "node_id": "C_kwDOANBUbNoAKDAyMDcwODQ0M2Q2YmJiMjg4ZjUzZGEzMmZhYTJkNzZkYmRiOGQwZGQ", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2022-11-16T13:40:46Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2022-11-28T09:09:22Z"}, "message": "arm: improve tests for vqdmul*\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_m_n_s16.c: Improve tests.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_s32.c: Likewise.", "tree": {"sha": "44d47143654bdf2076af97f01f58e64eb50b9160", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44d47143654bdf2076af97f01f58e64eb50b9160"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/020708443d6bbb288f53da32faa2d76dbdb8d0dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/020708443d6bbb288f53da32faa2d76dbdb8d0dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/020708443d6bbb288f53da32faa2d76dbdb8d0dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/020708443d6bbb288f53da32faa2d76dbdb8d0dd/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f974a7b3ecd0c3a0676dc7413af2e8faef005add", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f974a7b3ecd0c3a0676dc7413af2e8faef005add", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f974a7b3ecd0c3a0676dc7413af2e8faef005add"}], "stats": {"total": 588, "additions": 504, "deletions": 84}, "files": [{"sha": "a5c1a1062059261ce26fb2e99de6a57be75d52bb", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulhq_m_n_s16.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_n_s16.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulht.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n foo (int16x8_t inactive, int16x8_t a, int16_t b, mve_pred16_t p)\n {\n   return vqdmulhq_m_n_s16 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulht.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulht.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n foo1 (int16x8_t inactive, int16x8_t a, int16_t b, mve_pred16_t p)\n {\n   return vqdmulhq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulht.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c78d4db15916fa01d24f3f5c2bd528c1f3a538ae", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulhq_m_n_s32.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_n_s32.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulht.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int32x4_t inactive, int32x4_t a, int32_t b, mve_pred16_t p)\n {\n   return vqdmulhq_m_n_s32 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulht.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulht.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int32x4_t inactive, int32x4_t a, int32_t b, mve_pred16_t p)\n {\n   return vqdmulhq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulht.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b5ab6eb292c21c5f7283a24e199581f3c78c7690", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulhq_m_n_s8.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_n_s8.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulht.s8\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n foo (int8x16_t inactive, int8x16_t a, int8_t b, mve_pred16_t p)\n {\n   return vqdmulhq_m_n_s8 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulht.s8\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulht.s8\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n foo1 (int8x16_t inactive, int8x16_t a, int8_t b, mve_pred16_t p)\n {\n   return vqdmulhq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulht.s8\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2f5fb0e53a4c059ace022d849d3d6a20dc5ac84d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulhq_m_s16.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_s16.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulht.s16\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n foo (int16x8_t inactive, int16x8_t a, int16x8_t b, mve_pred16_t p)\n {\n   return vqdmulhq_m_s16 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulht.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulht.s16\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n foo1 (int16x8_t inactive, int16x8_t a, int16x8_t b, mve_pred16_t p)\n {\n   return vqdmulhq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulht.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "80a938a8a5bd7ecde813d483894160a0dc1ae07d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulhq_m_s32.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_s32.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulht.s32\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int32x4_t inactive, int32x4_t a, int32x4_t b, mve_pred16_t p)\n {\n   return vqdmulhq_m_s32 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulht.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulht.s32\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int32x4_t inactive, int32x4_t a, int32x4_t b, mve_pred16_t p)\n {\n   return vqdmulhq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulht.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "bfb755af4ee76c6ef1d32afeaf120d99ad87f228", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulhq_m_s8.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_m_s8.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulht.s8\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n foo (int8x16_t inactive, int8x16_t a, int8x16_t b, mve_pred16_t p)\n {\n   return vqdmulhq_m_s8 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulht.s8\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulht.s8\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n foo1 (int8x16_t inactive, int8x16_t a, int8x16_t b, mve_pred16_t p)\n {\n   return vqdmulhq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulht.s8\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e34689d203db5dea74c179fbb9dfab1839675481", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulhq_n_s16.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_n_s16.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmulh.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n foo (int16x8_t a, int16_t b)\n {\n   return vqdmulhq_n_s16 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmulh.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmulh.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n foo1 (int16x8_t a, int16_t b)\n {\n   return vqdmulhq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmulh.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f967b8a286aa23dc93cc70820e3e36e34097976f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulhq_n_s32.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_n_s32.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmulh.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int32x4_t a, int32_t b)\n {\n   return vqdmulhq_n_s32 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmulh.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmulh.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int32x4_t a, int32_t b)\n {\n   return vqdmulhq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmulh.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5e1928fd51b1e5722c6e1639ded1484825f496e5", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulhq_n_s8.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_n_s8.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmulh.s8\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n foo (int8x16_t a, int8_t b)\n {\n   return vqdmulhq_n_s8 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmulh.s8\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmulh.s8\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n foo1 (int8x16_t a, int8_t b)\n {\n   return vqdmulhq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmulh.s8\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "7c0a434e48f1e5a87154748de1afb2aa6cd51651", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulhq_s16.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_s16.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmulh.s16\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n foo (int16x8_t a, int16x8_t b)\n {\n   return vqdmulhq_s16 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmulh.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmulh.s16\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n foo1 (int16x8_t a, int16x8_t b)\n {\n   return vqdmulhq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmulh.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "19f4b03f6f09b9873302a51c22c9074fb91ed413", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulhq_s32.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_s32.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmulh.s32\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int32x4_t a, int32x4_t b)\n {\n   return vqdmulhq_s32 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmulh.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmulh.s32\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int32x4_t a, int32x4_t b)\n {\n   return vqdmulhq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmulh.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1784c967f3c3ed26af290869a7a9b17fb6cbbb68", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulhq_s8.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulhq_s8.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmulh.s8\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n foo (int8x16_t a, int8x16_t b)\n {\n   return vqdmulhq_s8 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmulh.s8\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmulh.s8\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n foo1 (int8x16_t a, int8x16_t b)\n {\n   return vqdmulhq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmulh.s8\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4f96e192732aa4084eb6d67ddedc1c47a23a6fe8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmullbq_m_n_s16.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_m_n_s16.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmullbt.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int32x4_t inactive, int16x8_t a, int16_t b, mve_pred16_t p)\n {\n   return vqdmullbq_m_n_s16 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmullbt.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmullbt.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int32x4_t inactive, int16x8_t a, int16_t b, mve_pred16_t p)\n {\n   return vqdmullbq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmullbt.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d0bca6e30150d4201d3e892fc86a5d1b1a08a0d5", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmullbq_m_n_s32.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_m_n_s32.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmullbt.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo (int64x2_t inactive, int32x4_t a, int32_t b, mve_pred16_t p)\n {\n   return vqdmullbq_m_n_s32 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmullbt.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmullbt.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo1 (int64x2_t inactive, int32x4_t a, int32_t b, mve_pred16_t p)\n {\n   return vqdmullbq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmullbt.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8448cdc88cf29319728e15de3361f102381b0b25", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmullbq_m_s16.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_m_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_m_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_m_s16.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmullbt.s16\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int32x4_t inactive, int16x8_t a, int16x8_t b, mve_pred16_t p)\n {\n   return vqdmullbq_m_s16 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmullbt.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmullbt.s16\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int32x4_t inactive, int16x8_t a, int16x8_t b, mve_pred16_t p)\n {\n   return vqdmullbq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmullbt.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "48cddcd791e4c32789aed5ff5dc0872e586fad26", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmullbq_m_s32.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_m_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_m_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_m_s32.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmullbt.s32\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo (int64x2_t inactive, int32x4_t a, int32x4_t b, mve_pred16_t p)\n {\n   return vqdmullbq_m_s32 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmullbt.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmullbt.s32\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo1 (int64x2_t inactive, int32x4_t a, int32x4_t b, mve_pred16_t p)\n {\n   return vqdmullbq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmullbt.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "cd7c394139db68f348490c8aadc30c357ca8c973", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmullbq_n_s16.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_n_s16.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmullb.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int16x8_t a, int16_t b)\n {\n   return vqdmullbq_n_s16 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullb.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmullb.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int16x8_t a, int16_t b)\n {\n   return vqdmullbq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullb.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b4d82f5598716961edfb7bbbf9505917e82932d2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmullbq_n_s32.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_n_s32.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmullb.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo (int32x4_t a, int32_t b)\n {\n   return vqdmullbq_n_s32 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullb.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmullb.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo1 (int32x4_t a, int32_t b)\n {\n   return vqdmullbq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullb.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6f0fdabf67f838507d542d4cfef183311646feb7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmullbq_s16.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_s16.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmullb.s16\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int16x8_t a, int16x8_t b)\n {\n   return vqdmullbq_s16 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullb.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmullb.s16\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int16x8_t a, int16x8_t b)\n {\n   return vqdmullbq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullb.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2bf952bfd779348ea9ad39d638da542576b922f2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmullbq_s32.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmullbq_s32.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmullb.s32\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo (int32x4_t a, int32x4_t b)\n {\n   return vqdmullbq_s32 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullb.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmullb.s32\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo1 (int32x4_t a, int32x4_t b)\n {\n   return vqdmullbq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullb.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6c756ebf3e729cf23dd529cb707527887b87bd29", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulltq_m_n_s16.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_m_n_s16.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulltt.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int32x4_t inactive, int16x8_t a, int16_t b, mve_pred16_t p)\n {\n   return vqdmulltq_m_n_s16 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulltt.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulltt.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int32x4_t inactive, int16x8_t a, int16_t b, mve_pred16_t p)\n {\n   return vqdmulltq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulltt.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e46f6b2c38498e561404f6cf13f96932861955a7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulltq_m_n_s32.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_m_n_s32.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulltt.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo (int64x2_t inactive, int32x4_t a, int32_t b, mve_pred16_t p)\n {\n   return vqdmulltq_m_n_s32 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulltt.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulltt.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo1 (int64x2_t inactive, int32x4_t a, int32_t b, mve_pred16_t p)\n {\n   return vqdmulltq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulltt.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8526b3ad628cc948917033319d10c604099e2e2d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulltq_m_s16.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_m_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_m_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_m_s16.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulltt.s16\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int32x4_t inactive, int16x8_t a, int16x8_t b, mve_pred16_t p)\n {\n   return vqdmulltq_m_s16 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulltt.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulltt.s16\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int32x4_t inactive, int16x8_t a, int16x8_t b, mve_pred16_t p)\n {\n   return vqdmulltq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulltt.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "809e0740e4628917e0740184a02ca7d004303b31", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulltq_m_s32.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_m_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_m_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_m_s32.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulltt.s32\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo (int64x2_t inactive, int32x4_t a, int32x4_t b, mve_pred16_t p)\n {\n   return vqdmulltq_m_s32 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulltt.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqdmulltt.s32\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo1 (int64x2_t inactive, int32x4_t a, int32x4_t b, mve_pred16_t p)\n {\n   return vqdmulltq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqdmulltt.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "44f0036bc5103dc69ab17a931c875775fecdd9ec", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulltq_n_s16.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_n_s16.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmullt.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int16x8_t a, int16_t b)\n {\n   return vqdmulltq_n_s16 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullt.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmullt.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int16x8_t a, int16_t b)\n {\n   return vqdmulltq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullt.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b025886ff15de0e8b1fb99f0223c6b5ec9e436f4", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulltq_n_s32.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_n_s32.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmullt.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo (int32x4_t a, int32_t b)\n {\n   return vqdmulltq_n_s32 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullt.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmullt.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo1 (int32x4_t a, int32_t b)\n {\n   return vqdmulltq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullt.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "95084876349504468c253b86355d44d342540f87", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulltq_s16.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_s16.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmullt.s16\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int16x8_t a, int16x8_t b)\n {\n   return vqdmulltq_s16 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullt.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmullt.s16\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int16x8_t a, int16x8_t b)\n {\n   return vqdmulltq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullt.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ab27aeddc29035fac89b9502551e28aa1e3dc3d5", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmulltq_s32.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020708443d6bbb288f53da32faa2d76dbdb8d0dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmulltq_s32.c?ref=020708443d6bbb288f53da32faa2d76dbdb8d0dd", "patch": "@@ -1,21 +1,33 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvqdmullt.s32\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo (int32x4_t a, int32x4_t b)\n {\n   return vqdmulltq_s32 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullt.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqdmullt.s32\tq[0-9]+, q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int64x2_t\n foo1 (int32x4_t a, int32x4_t b)\n {\n   return vqdmulltq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vqdmullt.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}]}