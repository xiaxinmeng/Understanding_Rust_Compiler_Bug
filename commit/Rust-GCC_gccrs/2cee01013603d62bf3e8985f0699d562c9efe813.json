{"sha": "2cee01013603d62bf3e8985f0699d562c9efe813", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNlZTAxMDEzNjAzZDYyYmYzZTg5ODVmMDY5OWQ1NjJjOWVmZTgxMw==", "commit": {"author": {"name": "Dave Korn", "email": "dave.korn.cygwin@gmail.com", "date": "2010-04-26T03:41:04Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2010-04-26T03:41:04Z"}, "message": "lto.h (lto_elf_file_open): Rename prototype from this ...\n\n\t* lto.h (lto_elf_file_open): Rename prototype from this ...\n\t(lto_obj_file_open): ... to this.\n\t(lto_elf_file_close): Likewise ...\n\t(lto_obj_file_close): ... and likewise.\n\t(lto_elf_build_section_table): Likewise ...\n\t(lto_obj_build_section_table): ... and likewise.\n\t(lto_elf_begin_section): Likewise ...\n\t(lto_obj_begin_section): ... and likewise.\n\t(lto_elf_append_data): Likewise ...\n\t(lto_obj_append_data): ... and likewise.\n\t(lto_elf_end_section): Likewise ...\n\t(lto_obj_end_section): ... and likewise.\n\t* lto.c (lto_file_read): Update references to the above.\n\t(lto_wpa_write_files): Likewise.\n\t(lto_read_all_file_options): Likewise.\n\t(read_cgraph_and_symbols): Likewise.\n\t* lto-lang.c (LANG_HOOKS_BEGIN_SECTION): Likewise.\n\t(LANG_HOOKS_APPEND_DATA): Likewise.\n\t(LANG_HOOKS_END_SECTION): Likewise.\n\t* lto-elf.c (lto_elf_file_open): Rename from this ...\n\t(lto_obj_file_open): ... to this, updating any references.\n\t(lto_elf_file_close): Likewise ...\n\t(lto_obj_file_close): ... and likewise.\n\t(lto_elf_build_section_table): Likewise ...\n\t(lto_obj_build_section_table): ... and likewise.\n\t(lto_elf_begin_section): Likewise ...\n\t(lto_obj_begin_section): ... and likewise.\n\t(lto_elf_append_data): Likewise ...\n\t(lto_obj_append_data): ... and likewise.\n\t(lto_elf_end_section): Likewise ...\n\t(lto_obj_end_section): ... and likewise.\n\nFrom-SVN: r158718", "tree": {"sha": "5fe0e13fe14b647713fcab82c630a588adcd76ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fe0e13fe14b647713fcab82c630a588adcd76ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cee01013603d62bf3e8985f0699d562c9efe813", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cee01013603d62bf3e8985f0699d562c9efe813", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cee01013603d62bf3e8985f0699d562c9efe813", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cee01013603d62bf3e8985f0699d562c9efe813/comments", "author": {"login": "davek-cygwin", "id": 530057, "node_id": "MDQ6VXNlcjUzMDA1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/530057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek-cygwin", "html_url": "https://github.com/davek-cygwin", "followers_url": "https://api.github.com/users/davek-cygwin/followers", "following_url": "https://api.github.com/users/davek-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/davek-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/davek-cygwin/orgs", "repos_url": "https://api.github.com/users/davek-cygwin/repos", "events_url": "https://api.github.com/users/davek-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/davek-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2358c0640d65bf83a9b9ecc32e844c29c687017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2358c0640d65bf83a9b9ecc32e844c29c687017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2358c0640d65bf83a9b9ecc32e844c29c687017"}], "stats": {"total": 88, "additions": 61, "deletions": 27}, "files": [{"sha": "069b5890d8443314bfec14dd618c3a269430c628", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cee01013603d62bf3e8985f0699d562c9efe813/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cee01013603d62bf3e8985f0699d562c9efe813/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=2cee01013603d62bf3e8985f0699d562c9efe813", "patch": "@@ -1,3 +1,37 @@\n+2010-04-26  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\t* lto.h (lto_elf_file_open): Rename prototype from this ...\n+\t(lto_obj_file_open): ... to this.\n+\t(lto_elf_file_close): Likewise ...\n+\t(lto_obj_file_close): ... and likewise.\n+\t(lto_elf_build_section_table): Likewise ...\n+\t(lto_obj_build_section_table): ... and likewise.\n+\t(lto_elf_begin_section): Likewise ...\n+\t(lto_obj_begin_section): ... and likewise.\n+\t(lto_elf_append_data): Likewise ...\n+\t(lto_obj_append_data): ... and likewise.\n+\t(lto_elf_end_section): Likewise ...\n+\t(lto_obj_end_section): ... and likewise.\n+\t* lto.c (lto_file_read): Update references to the above.\n+\t(lto_wpa_write_files): Likewise.\n+\t(lto_read_all_file_options): Likewise.\n+\t(read_cgraph_and_symbols): Likewise.\n+\t* lto-lang.c (LANG_HOOKS_BEGIN_SECTION): Likewise.\n+\t(LANG_HOOKS_APPEND_DATA): Likewise.\n+\t(LANG_HOOKS_END_SECTION): Likewise.\n+\t* lto-elf.c (lto_elf_file_open): Rename from this ...\n+\t(lto_obj_file_open): ... to this, updating any references.\n+\t(lto_elf_file_close): Likewise ...\n+\t(lto_obj_file_close): ... and likewise.\n+\t(lto_elf_build_section_table): Likewise ...\n+\t(lto_obj_build_section_table): ... and likewise.\n+\t(lto_elf_begin_section): Likewise ...\n+\t(lto_obj_begin_section): ... and likewise.\n+\t(lto_elf_append_data): Likewise ...\n+\t(lto_obj_append_data): ... and likewise.\n+\t(lto_elf_end_section): Likewise ...\n+\t(lto_obj_end_section): ... and likewise.\n+\n 2010-04-21  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (lto_fixup_tree): Do not call wpa fixup."}, {"sha": "1796888f4c31fc3bff5791a4144d3405a283206c", "filename": "gcc/lto/lto-elf.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cee01013603d62bf3e8985f0699d562c9efe813/gcc%2Flto%2Flto-elf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cee01013603d62bf3e8985f0699d562c9efe813/gcc%2Flto%2Flto-elf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-elf.c?ref=2cee01013603d62bf3e8985f0699d562c9efe813", "patch": "@@ -179,7 +179,7 @@ eq_name (const void *p1, const void *p2)\n    the start and size of each section in the .o file.  */\n \n htab_t\n-lto_elf_build_section_table (lto_file *lto_file) \n+lto_obj_build_section_table (lto_file *lto_file) \n {\n   lto_elf_file *elf_file = (lto_elf_file *)lto_file;\n   htab_t section_hash_table;\n@@ -322,7 +322,7 @@ lto_elf_begin_section_with_type (const char *name, size_t type)\n /* Begin a new ELF section named NAME in the current output file.  */\n \n void\n-lto_elf_begin_section (const char *name)\n+lto_obj_begin_section (const char *name)\n {\n   lto_elf_begin_section_with_type (name, SHT_PROGBITS);\n }\n@@ -333,7 +333,7 @@ lto_elf_begin_section (const char *name)\n    been written.  */\n \n void\n-lto_elf_append_data (const void *data, size_t len, void *block)\n+lto_obj_append_data (const void *data, size_t len, void *block)\n {\n   lto_elf_file *file;\n   Elf_Data *elf_data;\n@@ -370,7 +370,7 @@ lto_elf_append_data (const void *data, size_t len, void *block)\n    and sets the current output file's scn member to NULL.  */\n \n void\n-lto_elf_end_section (void)\n+lto_obj_end_section (void)\n {\n   lto_elf_file *file;\n \n@@ -604,7 +604,7 @@ init_ehdr (lto_elf_file *elf_file)\n    Returns the opened file.  */\n \n lto_file *\n-lto_elf_file_open (const char *filename, bool writable)\n+lto_obj_file_open (const char *filename, bool writable)\n {\n   lto_elf_file *elf_file;\n   lto_file *result = NULL;\n@@ -704,7 +704,7 @@ lto_elf_file_open (const char *filename, bool writable)\n \n  fail:\n   if (result)\n-    lto_elf_file_close (result);\n+    lto_obj_file_close (result);\n   return NULL;\n }\n \n@@ -714,7 +714,7 @@ lto_elf_file_open (const char *filename, bool writable)\n    any cached data buffers are freed.  */\n \n void\n-lto_elf_file_close (lto_file *file)\n+lto_obj_file_close (lto_file *file)\n {\n   lto_elf_file *elf_file = (lto_elf_file *) file;\n   struct lto_char_ptr_base *cur, *tmp;\n@@ -750,7 +750,7 @@ lto_elf_file_close (lto_file *file)\n       if (gelf_update_ehdr (elf_file->elf, ehdr_p) == 0)\n \tfatal_error (\"gelf_update_ehdr() failed: %s\", elf_errmsg (-1));\n       lto_write_stream (elf_file->shstrtab_stream);\n-      lto_elf_end_section ();\n+      lto_obj_end_section ();\n \n       lto_set_current_out_file (old_file);\n       free (elf_file->shstrtab_stream);"}, {"sha": "8c4b254fc6bd52fba8b049def7e0023806a35c43", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cee01013603d62bf3e8985f0699d562c9efe813/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cee01013603d62bf3e8985f0699d562c9efe813/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=2cee01013603d62bf3e8985f0699d562c9efe813", "patch": "@@ -1158,11 +1158,11 @@ static void lto_init_ts (void)\n #define LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE lto_format_attribute_table\n \n #undef LANG_HOOKS_BEGIN_SECTION\n-#define LANG_HOOKS_BEGIN_SECTION lto_elf_begin_section\n+#define LANG_HOOKS_BEGIN_SECTION lto_obj_begin_section\n #undef LANG_HOOKS_APPEND_DATA\n-#define LANG_HOOKS_APPEND_DATA lto_elf_append_data\n+#define LANG_HOOKS_APPEND_DATA lto_obj_append_data\n #undef LANG_HOOKS_END_SECTION\n-#define LANG_HOOKS_END_SECTION lto_elf_end_section\n+#define LANG_HOOKS_END_SECTION lto_obj_end_section\n \n #undef LANG_HOOKS_INIT_TS\n #define LANG_HOOKS_INIT_TS lto_init_ts"}, {"sha": "b6001d85dd0becd1f7729a5e63d42052af984bca", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cee01013603d62bf3e8985f0699d562c9efe813/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cee01013603d62bf3e8985f0699d562c9efe813/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=2cee01013603d62bf3e8985f0699d562c9efe813", "patch": "@@ -378,7 +378,7 @@ lto_file_read (lto_file *file, FILE *resolution_file)\n \n   file_data = XCNEW (struct lto_file_decl_data);\n   file_data->file_name = file->filename;\n-  file_data->section_hash_table = lto_elf_build_section_table (file);\n+  file_data->section_hash_table = lto_obj_build_section_table (file);\n   file_data->renaming_hash_table = lto_create_renaming_table ();\n \n   data = lto_get_section_data (file_data, LTO_section_decls, NULL, &len);\n@@ -1040,16 +1040,16 @@ lto_wpa_write_files (void)\n       if (cgraph_node_set_needs_ltrans_p (set))\n \t{\n \t  /* Write all the nodes in SET to TEMP_FILENAME.  */\n-\t  file = lto_elf_file_open (temp_filename, true);\n+\t  file = lto_obj_file_open (temp_filename, true);\n \t  if (!file)\n-\t    fatal_error (\"lto_elf_file_open() failed\");\n+\t    fatal_error (\"lto_obj_file_open() failed\");\n \n \t  lto_set_current_out_file (file);\n \n \t  ipa_write_optimization_summaries (set);\n \n \t  lto_set_current_out_file (NULL);\n-\t  lto_elf_file_close (file);\n+\t  lto_obj_file_close (file);\n \t}\n     }\n \n@@ -1740,17 +1740,17 @@ lto_read_all_file_options (void)\n   for (i = 0; i < num_in_fnames; i++)\n     {\n       struct lto_file_decl_data *file_data;\n-      lto_file *file = lto_elf_file_open (in_fnames[i], false);\n+      lto_file *file = lto_obj_file_open (in_fnames[i], false);\n       if (!file)\n \tbreak;\n \n       file_data = XCNEW (struct lto_file_decl_data);\n       file_data->file_name = file->filename;\n-      file_data->section_hash_table = lto_elf_build_section_table (file);\n+      file_data->section_hash_table = lto_obj_build_section_table (file);\n \n       lto_read_file_options (file_data);\n \n-      lto_elf_file_close (file);\n+      lto_obj_file_close (file);\n       htab_delete (file_data->section_hash_table);\n       free (file_data);\n     }\n@@ -1813,7 +1813,7 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n \t  fflush (stderr);\n \t}\n \n-      current_lto_file = lto_elf_file_open (fnames[i], false);\n+      current_lto_file = lto_obj_file_open (fnames[i], false);\n       if (!current_lto_file)\n \tbreak;\n \n@@ -1823,7 +1823,7 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n \n       all_file_decl_data[last_file_ix++] = file_data;\n \n-      lto_elf_file_close (current_lto_file);\n+      lto_obj_file_close (current_lto_file);\n       current_lto_file = NULL;\n     }\n "}, {"sha": "e55342b754a8a6f4aee386f899e3606d6d3de1fc", "filename": "gcc/lto/lto.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cee01013603d62bf3e8985f0699d562c9efe813/gcc%2Flto%2Flto.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cee01013603d62bf3e8985f0699d562c9efe813/gcc%2Flto%2Flto.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.h?ref=2cee01013603d62bf3e8985f0699d562c9efe813", "patch": "@@ -38,13 +38,13 @@ extern const char *resolution_file_name;\n extern void lto_main (int);\n extern void lto_read_all_file_options (void);\n \n-/* In lto-elf.c  */\n-extern lto_file *lto_elf_file_open (const char *filename, bool writable);\n-extern void lto_elf_file_close (lto_file *file);\n-extern htab_t lto_elf_build_section_table (lto_file *file);\n-extern void lto_elf_begin_section (const char *name);\n-extern void lto_elf_append_data (const void *data, size_t len, void *block);\n-extern void lto_elf_end_section (void);\n+/* In lto-elf.c or lto-coff.c  */\n+extern lto_file *lto_obj_file_open (const char *filename, bool writable);\n+extern void lto_obj_file_close (lto_file *file);\n+extern htab_t lto_obj_build_section_table (lto_file *file);\n+extern void lto_obj_begin_section (const char *name);\n+extern void lto_obj_append_data (const void *data, size_t len, void *block);\n+extern void lto_obj_end_section (void);\n extern lto_file *lto_set_current_out_file (lto_file *file);\n extern lto_file *lto_get_current_out_file (void);\n "}]}