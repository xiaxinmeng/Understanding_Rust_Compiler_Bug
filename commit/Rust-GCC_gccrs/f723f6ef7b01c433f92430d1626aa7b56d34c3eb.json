{"sha": "f723f6ef7b01c433f92430d1626aa7b56d34c3eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcyM2Y2ZWY3YjAxYzQzM2Y5MjQzMGQxNjI2YWE3YjU2ZDM0YzNlYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-10T21:57:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-10T21:57:40Z"}, "message": "(cmpsi): Make this into a define_expand; legitimize PIC addresses if necessary.\n\n(cmpsi): Make this into a define_expand; legitimize PIC addresses if\nnecessary.\nOld cmpsi code now unnamed define_insn pattern.\n\nFrom-SVN: r8642", "tree": {"sha": "f2cfb20b4111ff969a2c14c884817f17ff83c74a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2cfb20b4111ff969a2c14c884817f17ff83c74a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f723f6ef7b01c433f92430d1626aa7b56d34c3eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f723f6ef7b01c433f92430d1626aa7b56d34c3eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f723f6ef7b01c433f92430d1626aa7b56d34c3eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f723f6ef7b01c433f92430d1626aa7b56d34c3eb/comments", "author": null, "committer": null, "parents": [{"sha": "4ab3cb6597c6a02d6795975c3abf8f1d4012a8ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ab3cb6597c6a02d6795975c3abf8f1d4012a8ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ab3cb6597c6a02d6795975c3abf8f1d4012a8ce"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "f71e9edf708dd438f0c06b03bc4e2becb212be2d", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f723f6ef7b01c433f92430d1626aa7b56d34c3eb/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f723f6ef7b01c433f92430d1626aa7b56d34c3eb/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=f723f6ef7b01c433f92430d1626aa7b56d34c3eb", "patch": "@@ -377,8 +377,29 @@\n \f\n ;; compare instructions.\n \n+;; This is the second \"hook\" for PIC code (in addition to movsi). See\n+;; comment of movsi for a description of PIC handling.\n+(define_expand \"cmpsi\"\n+  [(set (cc0)\n+\t(compare (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t\t (match_operand:SI 1 \"general_operand\" \"\")))]\n+  \"\"\n+  \"\n+{\n+  if (flag_pic && symbolic_operand (operands[1], SImode)) \n+    {\n+      /* The source is an address which requires PIC relocation.  \n+         Call legitimize_pic_address with the source, mode, and a relocation\n+         register (a new pseudo, or the final destination if reload_in_progress\n+         is set).   Then fall through normally */\n+      extern rtx legitimize_pic_address();\n+      rtx temp = reload_in_progress ? operands[0] : gen_reg_rtx (Pmode);\n+      operands[1] = legitimize_pic_address (operands[1], SImode, temp);\n+    }\n+}\")\n+\n ;; A composite of the cmp, cmpa, & cmpi m68000 op codes.\n-(define_insn \"cmpsi\"\n+(define_insn \"\"\n   [(set (cc0)\n \t(compare (match_operand:SI 0 \"nonimmediate_operand\" \"rKs,mr,>\")\n \t\t (match_operand:SI 1 \"general_operand\" \"mr,Ksr,>\")))]"}]}