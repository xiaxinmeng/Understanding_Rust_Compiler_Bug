{"sha": "fe75bd206937c1362f3d97e6e8bed55fa912461b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU3NWJkMjA2OTM3YzEzNjJmM2Q5N2U2ZThiZWQ1NWZhOTEyNDYxYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-03-05T00:10:29Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-03-05T00:10:29Z"}, "message": "re PR ipa/65270 (issues with merging memory accesses from different code paths)\n\n \tPR ipa/65270\n\t* ipa-icf.c (sem_item::compare_cgraph_references): Compare\n\tvtable references for their containing type.\n\t(sem_function::equals_wpa): Compare TYPE_RESTRICT\n\tand type attributes.\n\nFrom-SVN: r221199", "tree": {"sha": "81dc24309df2019c75eaf84f0e3205a5dfbb72ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81dc24309df2019c75eaf84f0e3205a5dfbb72ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe75bd206937c1362f3d97e6e8bed55fa912461b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe75bd206937c1362f3d97e6e8bed55fa912461b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe75bd206937c1362f3d97e6e8bed55fa912461b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe75bd206937c1362f3d97e6e8bed55fa912461b/comments", "author": null, "committer": null, "parents": [{"sha": "d10a61fbe8a35256164aca7a9a7a51d16cc57370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d10a61fbe8a35256164aca7a9a7a51d16cc57370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d10a61fbe8a35256164aca7a9a7a51d16cc57370"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "55e212dffd5b629c90e16a44c3fc54b6d318e1b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe75bd206937c1362f3d97e6e8bed55fa912461b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe75bd206937c1362f3d97e6e8bed55fa912461b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe75bd206937c1362f3d97e6e8bed55fa912461b", "patch": "@@ -1,3 +1,11 @@\n+2015-03-03  Jan Hubicka  <hubicka@ucw.cz>\n+\n+ \tPR ipa/65270\n+\t* ipa-icf.c (sem_item::compare_cgraph_references): Compare\n+\tvtable references for their containing type.\n+\t(sem_function::equals_wpa): Compare TYPE_RESTRICT\n+\tand type attributes.\n+\n 2015-03-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fold-const.c (round_up_loc): Cast divisor to signed on all paths"}, {"sha": "c55a09f72810a0a9fffa6c9ad7a5dc37abcd3482", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe75bd206937c1362f3d97e6e8bed55fa912461b/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe75bd206937c1362f3d97e6e8bed55fa912461b/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=fe75bd206937c1362f3d97e6e8bed55fa912461b", "patch": "@@ -345,6 +345,20 @@ sem_item::compare_cgraph_references (\n {\n   enum availability avail1, avail2;\n \n+  if (n1 == n2)\n+    return true;\n+\n+  /* Merging two definitions with a reference to equivalent vtables, but\n+     belonging to a different type may result in ipa-polymorphic-call analysis\n+     giving a wrong answer about the dynamic type of instance.  */\n+  if (is_a <varpool_node *> (n1)\n+      && (DECL_VIRTUAL_P (n1->decl) || DECL_VIRTUAL_P (n2->decl))\n+      && (DECL_VIRTUAL_P (n1->decl) != DECL_VIRTUAL_P (n2->decl)\n+\t  || !types_must_be_same_for_odr (DECL_CONTEXT (n1->decl),\n+\t\t\t\t\t  DECL_CONTEXT (n2->decl))))\n+    return return_false_with_msg\n+\t     (\"references to virtual tables can not be merged\");\n+\n   if (address && n1->equal_address_to (n2) == 1)\n     return true;\n   if (!address && n1->semantically_equivalent_p (n2))\n@@ -407,6 +421,10 @@ sem_function::equals_wpa (sem_item *item,\n \t\t\t\t\t     m_compared_func->arg_types[i],\n \t\t\t\t\t     is_not_leaf, i == 0))\n \treturn return_false_with_msg (\"argument type is different\");\n+      if (POINTER_TYPE_P (arg_types[i])\n+\t  && (TYPE_RESTRICT (arg_types[i])\n+\t      != TYPE_RESTRICT (m_compared_func->arg_types[i])))\n+\treturn return_false_with_msg (\"argument restrict flag mismatch\");\n     }\n \n   /* Result type checking.  */\n@@ -417,6 +435,10 @@ sem_function::equals_wpa (sem_item *item,\n   if (node->num_references () != item->node->num_references ())\n     return return_false_with_msg (\"different number of references\");\n \n+  if (comp_type_attributes (TREE_TYPE (decl),\n+\t\t\t    TREE_TYPE (item->decl)) != 1)\n+    return return_false_with_msg (\"different type attributes\");\n+\n   ipa_ref *ref = NULL, *ref2 = NULL;\n   for (unsigned i = 0; node->iterate_reference (i, ref); i++)\n     {"}]}