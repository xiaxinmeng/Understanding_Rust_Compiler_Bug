{"sha": "c245362b973e42616ac5d677539b7f3313b8c28e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI0NTM2MmI5NzNlNDI2MTZhYzVkNjc3NTM5YjdmMzMxM2I4YzI4ZQ==", "commit": {"author": {"name": "Ilya Enkovich", "email": "enkovich.gnu@gmail.com", "date": "2015-11-23T10:01:51Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-11-23T10:01:51Z"}, "message": "re PR tree-optimization/68327 (ICE on valid code at -O3 on x86_64-linux-gnu in vect_is_simple_use, at tree-vect-stmts.c:8562)\n\ngcc/\n\n\tPR tree-optimization/68327\n\t* tree-vect-loop.c (vect_determine_vectorization_factor): Don't\n\tcompute vectype for non-relevant mask producers.\n\t* gcc/tree-vect-stmts.c (vectorizable_comparison): Check stmt\n\trelevance earlier.\n\ngcc/testsuite/\n\n\tPR tree-optimization/68327\n\t* gcc.dg/pr68327.c: New test.\n\n\nCo-Authored-By: Richard Biener <rguenther@suse.de>\n\nFrom-SVN: r230743", "tree": {"sha": "5e55937f221635153ca002132b5d14cbfba816c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e55937f221635153ca002132b5d14cbfba816c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c245362b973e42616ac5d677539b7f3313b8c28e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c245362b973e42616ac5d677539b7f3313b8c28e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c245362b973e42616ac5d677539b7f3313b8c28e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c245362b973e42616ac5d677539b7f3313b8c28e/comments", "author": null, "committer": null, "parents": [{"sha": "1cabb204394a2369ee7deeb518cbed038b33939b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cabb204394a2369ee7deeb518cbed038b33939b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cabb204394a2369ee7deeb518cbed038b33939b"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "530cf7810f9750c58f616833f17ad864ca08ad73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c245362b973e42616ac5d677539b7f3313b8c28e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c245362b973e42616ac5d677539b7f3313b8c28e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c245362b973e42616ac5d677539b7f3313b8c28e", "patch": "@@ -1,3 +1,12 @@\n+2015-11-23  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68327\n+\t* tree-vect-loop.c (vect_determine_vectorization_factor): Don't\n+\tcompute vectype for non-relevant mask producers.\n+\t* gcc/tree-vect-stmts.c (vectorizable_comparison): Check stmt\n+\trelevance earlier.\n+\n 2015-11-23  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/68460"}, {"sha": "142347de801812cccfa97bd7e3b5692c4cb369cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c245362b973e42616ac5d677539b7f3313b8c28e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c245362b973e42616ac5d677539b7f3313b8c28e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c245362b973e42616ac5d677539b7f3313b8c28e", "patch": "@@ -1,3 +1,8 @@\n+2015-11-23  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\tPR tree-optimization/68327\n+\t* gcc.dg/pr68327.c: New test.\n+\n 2015-11-23  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/68460"}, {"sha": "c3e6a9434a6a5f87c642cbd4cad6cd7b2b1f2e7a", "filename": "gcc/testsuite/gcc.dg/pr68327.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c245362b973e42616ac5d677539b7f3313b8c28e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68327.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c245362b973e42616ac5d677539b7f3313b8c28e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68327.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68327.c?ref=c245362b973e42616ac5d677539b7f3313b8c28e", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+int a, d;\n+char b, c;\n+\n+void\n+fn1 ()\n+{\n+  int i = 0;\n+  for (; i < 1; i++)\n+    d = 1;\n+  for (; b; b++)\n+    a = 1 && (d & b);\n+}"}, {"sha": "cc272b23e8b1cb5864e6ca6b3a25d88d5ebf8595", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c245362b973e42616ac5d677539b7f3313b8c28e/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c245362b973e42616ac5d677539b7f3313b8c28e/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=c245362b973e42616ac5d677539b7f3313b8c28e", "patch": "@@ -439,7 +439,8 @@ vect_determine_vectorization_factor (loop_vec_info loop_vinfo)\n \t\t compute a factor.  */\n \t      if (TREE_CODE (scalar_type) == BOOLEAN_TYPE)\n \t\t{\n-\t\t  mask_producers.safe_push (stmt_info);\n+\t\t  if (STMT_VINFO_RELEVANT_P (stmt_info))\n+\t\t    mask_producers.safe_push (stmt_info);\n \t\t  bool_result = true;\n \n \t\t  if (gimple_code (stmt) == GIMPLE_ASSIGN"}, {"sha": "687f98253fecd740abd664b16692d5413ed6f4b7", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c245362b973e42616ac5d677539b7f3313b8c28e/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c245362b973e42616ac5d677539b7f3313b8c28e/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=c245362b973e42616ac5d677539b7f3313b8c28e", "patch": "@@ -7590,6 +7590,9 @@ vectorizable_comparison (gimple *stmt, gimple_stmt_iterator *gsi,\n   tree mask_type;\n   tree mask;\n \n+  if (!STMT_VINFO_RELEVANT_P (stmt_info) && !bb_vinfo)\n+    return false;\n+\n   if (!VECTOR_BOOLEAN_TYPE_P (vectype))\n     return false;\n \n@@ -7602,9 +7605,6 @@ vectorizable_comparison (gimple *stmt, gimple_stmt_iterator *gsi,\n     ncopies = LOOP_VINFO_VECT_FACTOR (loop_vinfo) / nunits;\n \n   gcc_assert (ncopies >= 1);\n-  if (!STMT_VINFO_RELEVANT_P (stmt_info) && !bb_vinfo)\n-    return false;\n-\n   if (STMT_VINFO_DEF_TYPE (stmt_info) != vect_internal_def\n       && !(STMT_VINFO_DEF_TYPE (stmt_info) == vect_nested_cycle\n \t   && reduc_def))"}]}