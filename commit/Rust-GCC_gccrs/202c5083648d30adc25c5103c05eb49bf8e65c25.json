{"sha": "202c5083648d30adc25c5103c05eb49bf8e65c25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAyYzUwODM2NDhkMzBhZGMyNWM1MTAzYzA1ZWI0OWJmOGU2NWMyNQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-04-16T14:18:12Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-04-16T14:18:12Z"}, "message": "Add compare-all-tests.\n\nFrom-SVN: r146193", "tree": {"sha": "306977e21b6c8f8a658027dda8c74a4cb7b6821e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/306977e21b6c8f8a658027dda8c74a4cb7b6821e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/202c5083648d30adc25c5103c05eb49bf8e65c25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/202c5083648d30adc25c5103c05eb49bf8e65c25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/202c5083648d30adc25c5103c05eb49bf8e65c25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/202c5083648d30adc25c5103c05eb49bf8e65c25/comments", "author": null, "committer": null, "parents": [{"sha": "ccacdf0682bd9d3f9c1646a83328b39a67e60cc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccacdf0682bd9d3f9c1646a83328b39a67e60cc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccacdf0682bd9d3f9c1646a83328b39a67e60cc6"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "91d0e7852dec78a8f711071d549dc53efe54bc7c", "filename": "contrib/compare-all-tests", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/202c5083648d30adc25c5103c05eb49bf8e65c25/contrib%2Fcompare-all-tests", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/202c5083648d30adc25c5103c05eb49bf8e65c25/contrib%2Fcompare-all-tests", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcompare-all-tests?ref=202c5083648d30adc25c5103c05eb49bf8e65c25", "patch": "@@ -0,0 +1,99 @@\n+#! /bin/bash\n+\n+# Compare the assembly language output for all the gcc tests.\n+# Copyright (C) 2009 Free Software Foundation, Inc.\n+# Contributed by Paolo Bonzini.\n+#\n+# Invoke it as \"bash compare-all-tests target1 target2 ... targetN\".\n+# Assumptions are:\n+#\n+# 1) that the base and patched compilers reside respectively in\n+# base-$target-build and $target-build, where $target is the commandline\n+# argument to compare-all-tests, and should match the variables in the\n+# script itself so that the correct set of options is tested.  Both\n+# compilers should be fully built (including target libraries).\n+# \n+# 2) that the testsuite has been run on the base compiler (since it's\n+# just compilation testing, using RUNTESTFLAGS=--target_board=basic-sim\n+# usually suffices).\n+# \n+# Tests that fail to compile on the base compiler are not compared.\n+\n+alpha_opts='-mlong-double-64/-mieee -mlong-double-64 -mlong-double-128/-mieee -mlong-double-128'\n+arm_opts='-mthumb/-march=armv5t -mthumb/-march=armv6t2 -march=armv5 -mthumb/-march=armv6t2/-mfpu=vfp/-mfloat-abi=softfp -march=armv5/-mfpu=vfp/-mfloat-abi=softfp'\n+cris_opts='-march=v32 -march=v1'\n+h8300_opts='/ -mh -mh/-mn -ms -ms/-mn -msx -msx/-mn -mint32 -mh/-mint32 -mh/-mn/-mint32 -ms/-mint32 -ms/-mn/-mint32 -msx/-mint32 -msx/-mn/-mint32'\n+i386_opts='-m32 -m64 -m32/-msse/-msse2/-mfpmath=sse'\n+m32c_opts='-mcpu=r8c -mcpu=m16c -mcpu=m32c'\n+m68k_opts='-m68000 -m68020 -m68020/-m68881 -m68040/-m68881 -m68060/-m68881 -mcfv4e'\n+mips_opts='-msoft-float/-mgp32/-mips16 -mabi=32/-mfp32/-mgp32/-mips16 -mabi=o64/-mfp64/-mgp64/-mips16 -msoft-float/-mgp32 -mfp32/-mgp32 -march=mips64r2/-mabi=32/-mfp64/-mgp32 -msoft-float/-mgp64 -msingle-float/-mfp32/-mgp64 -mfp64/-mgp64'\n+mn10300_opts='-mam33 -mam33-2'\n+pa_opts='-march=2.0 -march=1.0 -march=1.1'\n+ppc_opts='-m32 -m64'\n+s390_opts='-m31 -m31/-mzarch -m64'\n+score_opts='-mscore3 -mscore7'\n+sh64_opts='-m5-32media -m5-32media-nofpu -m5-64media -m5-64media-nofpu -m5-compact -m5-compact-nofpu'\n+sh_opts='-m3 -m3e -m4 -m4a -m4al -m4/-mieee -m1 -m1/-mno-cbranchdi -m2a -m2a/-mieee -m2e -m2e/-mieee'\n+sparc_opts='-mcpu=v8/-m32 -mcpu=v9/-m32 -m64'\n+\n+all_targets='alpha arm avr bfin cris crx fr30 frv h8300 ia64 iq2000 m32c m32r m68hc11 m68k mcore mips mmix mn10300 pa pdp11 picochip ppc score sh sh64 sparc spu v850 vax xstormy16 xtensa' # e500 \n+\n+test_one_file ()\n+{\n+  local bdir pdir opts bline pline\n+  bdir=base-$1-gcc-build\n+  pdir=$1-gcc-build\n+  bline=$2\n+  pline=${2//$bdir/$pdir}\n+  opts=${3//\\// }\n+  echo \"$pline $opts\"\n+  $bline $opts 2>/dev/null >/dev/null || return 0\n+  diff -L \"$bdir/gcc/cc1 $opts\" -L \"$pdir/gcc/cc1 $opts\" -u \\\n+    <( $bline $opts 2>&1 ) <( $pline $opts 2>&1 ) || { echo -n . >&2; return 1; }\n+}\n+  \n+test_all_opts ()\n+{\n+  eval opts=\\$${1}_opts\n+  if test -z \"$opts\"; then\n+    test_one_file $1 \"$2\"\n+  else\n+    for opt in $opts; do\n+      test_one_file $1 \"$2\" $opt\n+    done\n+  fi\n+}\n+\n+for target in ${*-$all_targets}; do\n+  mkdir -p $target-gcc-build/gcc/testsuite/gcc\n+  cp -R base-$target-gcc-build/gcc/testsuite/gcc/gcc.dg-struct-layout-1 \\\n+    $target-gcc-build/gcc/testsuite/gcc/gcc.dg-struct-layout-1 \n+\n+  # Provide targ-include files for newlib\n+  # for newlib_path in `echo base-$target-gcc-build/*/newlib`; do\n+  #   test -d $newlib_path && ln -sf ../../$newlib_path ${newlib_path/base-}\n+  # done\n+\n+  echo -n Testing $target >&2\n+  sed '/^Executing on host: /!d\n+    /xgcc -B/!d\n+    / -E /d\n+    / -g/d\n+    / -print-prog-name=/d\n+    s/^Executing on host: //\n+    s/   *(timeout.*//\n+    s/ -fverbose-asm / /\n+    s/ -frtl-abstract-sequences / /\n+    s/ -fdump[-a-z0-9]* / /g\n+    s/ -da / /g\n+    s/ -\\{1,2\\}save-temps / /\n+    s/ -c / -S /\n+    / -S /! s/ -o / -S -o /\n+    s/ -o [^ ]*/ -frandom-seed=0 -o -/' base-$target-gcc-build/gcc/testsuite/gcc/gcc.log | while read line; do\n+    case \"$line\" in\n+      *\" -m\"*) test_one_file $target \"$line\" \"\" ;;\n+      *) test_all_opts $target \"$line\" ;;\n+    esac\n+  done > compare-$target.log\n+  echo >&2\n+done"}]}