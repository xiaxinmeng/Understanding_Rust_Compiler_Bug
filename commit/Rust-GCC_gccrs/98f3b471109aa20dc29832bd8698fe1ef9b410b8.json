{"sha": "98f3b471109aa20dc29832bd8698fe1ef9b410b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThmM2I0NzExMDlhYTIwZGMyOTgzMmJkODY5OGZlMWVmOWI0MTBiOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-19T19:49:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-19T19:49:48Z"}, "message": "(tail_recursion_args): Use mode of DECL_RTL, not DECL_MODE.\n\n(expand_decl): Promote modes of scalar variables when useful on target.\n\nFrom-SVN: r2180", "tree": {"sha": "460296dba33913c7755cd51e5060f2dae9aab3f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/460296dba33913c7755cd51e5060f2dae9aab3f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98f3b471109aa20dc29832bd8698fe1ef9b410b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98f3b471109aa20dc29832bd8698fe1ef9b410b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98f3b471109aa20dc29832bd8698fe1ef9b410b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98f3b471109aa20dc29832bd8698fe1ef9b410b8/comments", "author": null, "committer": null, "parents": [{"sha": "f3f391d75b2c7cfed6afde4286edb2359b616429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3f391d75b2c7cfed6afde4286edb2359b616429", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3f391d75b2c7cfed6afde4286edb2359b616429"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "286fce2ce5b71f2ffbb39558f012376714a4f5b4", "filename": "gcc/stmt.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f3b471109aa20dc29832bd8698fe1ef9b410b8/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f3b471109aa20dc29832bd8698fe1ef9b410b8/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=98f3b471109aa20dc29832bd8698fe1ef9b410b8", "patch": "@@ -2456,7 +2456,7 @@ tail_recursion_args (actuals, formals)\n   for (f = formals, a = actuals, i = 0; f;\n        f = TREE_CHAIN (f), a = TREE_CHAIN (a), i++)\n     {\n-      if (DECL_MODE (f) == GET_MODE (argvec[i]))\n+      if (GET_MODE (DECL_RTL (f)) == GET_MODE (argvec[i]))\n \temit_move_insn (DECL_RTL (f), argvec[i]);\n       else\n \tconvert_move (DECL_RTL (f), argvec[i],\n@@ -2834,7 +2834,18 @@ expand_decl (decl)\n \t   && (DECL_REGISTER (decl) || ! obey_regdecls))\n     {\n       /* Automatic variable that can go in a register.  */\n-      DECL_RTL (decl) = gen_reg_rtx (DECL_MODE (decl));\n+      enum machine_mode reg_mode = DECL_MODE (decl);\n+      int unsignedp = TREE_UNSIGNED (type);\n+\n+      if (TREE_CODE (type) == INTEGER_TYPE || TREE_CODE (type) == ENUMERAL_TYPE\n+\t  || TREE_CODE (type) == BOOLEAN_TYPE || TREE_CODE (type) == CHAR_TYPE\n+\t  || TREE_CODE (type) == REAL_TYPE || TREE_CODE (type) == POINTER_TYPE\n+\t  || TREE_CODE (type) == OFFSET_TYPE)\n+\t{\n+\t  PROMOTE_MODE (reg_mode, unsignedp, type);\n+\t}\n+\n+      DECL_RTL (decl) = gen_reg_rtx (reg_mode);\n       if (TREE_CODE (type) == POINTER_TYPE)\n \tmark_reg_pointer (DECL_RTL (decl));\n       REG_USERVAR_P (DECL_RTL (decl)) = 1;"}]}