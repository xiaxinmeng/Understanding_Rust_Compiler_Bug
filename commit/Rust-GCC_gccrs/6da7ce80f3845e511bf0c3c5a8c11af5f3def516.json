{"sha": "6da7ce80f3845e511bf0c3c5a8c11af5f3def516", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRhN2NlODBmMzg0NWU1MTFiZjBjM2M1YThjMTFhZjVmM2RlZjUxNg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2017-09-19T07:51:49Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2017-09-19T07:51:49Z"}, "message": "Fix some gotools testing problems\n\n\t* Makefile.am (GOTESTFLAGS): New variable.\n\t(check-runtime): Pass it to gotest.\n\t(check-go-tools): Sort summary.\n\t(check-runtime): Likewise.\n\t(check-cgo-test): Likewise.\n\t(check-carchive-test): Likewise.\n\t(check): Likewise.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r252963", "tree": {"sha": "6d941fb119195bedd2b8df460273a27d2fcde095", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d941fb119195bedd2b8df460273a27d2fcde095"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6da7ce80f3845e511bf0c3c5a8c11af5f3def516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da7ce80f3845e511bf0c3c5a8c11af5f3def516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6da7ce80f3845e511bf0c3c5a8c11af5f3def516", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da7ce80f3845e511bf0c3c5a8c11af5f3def516/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "129d9dc2927dfe6343386d40697adfdd0582df2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/129d9dc2927dfe6343386d40697adfdd0582df2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/129d9dc2927dfe6343386d40697adfdd0582df2a"}], "stats": {"total": 44, "additions": 29, "deletions": 15}, "files": [{"sha": "a78e762dd770c6880a2a889c00b172bddad54b94", "filename": "gotools/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da7ce80f3845e511bf0c3c5a8c11af5f3def516/gotools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da7ce80f3845e511bf0c3c5a8c11af5f3def516/gotools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FChangeLog?ref=6da7ce80f3845e511bf0c3c5a8c11af5f3def516", "patch": "@@ -1,3 +1,14 @@\n+2017-09-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Makefile.am (GOTESTFLAGS): New variable.\n+\t(check-runtime): Pass it to gotest.\n+\t(check-go-tools): Sort summary.\n+\t(check-runtime): Likewise.\n+\t(check-cgo-test): Likewise.\n+\t(check-carchive-test): Likewise.\n+\t(check): Likewise.\n+\t* Makefile.in: Regenerate.\n+\n 2017-09-14  Ian Lance Taylor  <iant@golang.org>\n \n \t* Makefile.am (LIBGOTOOL): Define."}, {"sha": "7ed5bc315c4bc2e2aad416829fd7e6df66c55265", "filename": "gotools/Makefile.am", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da7ce80f3845e511bf0c3c5a8c11af5f3def516/gotools%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da7ce80f3845e511bf0c3c5a8c11af5f3def516/gotools%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FMakefile.am?ref=6da7ce80f3845e511bf0c3c5a8c11af5f3def516", "patch": "@@ -115,6 +115,8 @@ install-exec-local: cgo$(EXEEXT)\n uninstall-local:\n \trm -f $(DESTDIR)$(libexecsubdir)/cgo$(exeext)\n \n+GOTESTFLAGS =\n+\n # Run tests using the go tool, and frob the output to look like that\n # generated by DejaGNU.  The main output of this is two files:\n # gotools.sum and gotools.log.\n@@ -192,7 +194,7 @@ check-go-tool: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n \tGOPATH=`cd check-go-dir && $(PWD_COMMAND)`; \\\n \texport GOPATH; \\\n \t(cd check-go-dir/src/cmd/go && $(abs_builddir)/go$(EXEEXT) test -test.short -test.v) >> cmd_go-testlog 2>&1 || echo \"--- $${fl} go test cmd/go (0.00s)\" >> cmd_go-testlog\n-\tgrep '^--- ' cmd_go-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+\tgrep '^--- ' cmd_go-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' | sort -k 2\n \n # check-runtime runs `go test runtime` in our environment.\n # The runtime package is also tested as part of libgo,\n@@ -206,15 +208,15 @@ check-runtime: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n \tGOARCH=`$(abs_builddir)/go$(EXEEXT) env GOARCH`; \\\n \tGOOS=`$(abs_builddir)/go$(EXEEXT) env GOOS`; \\\n \tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go\" --tag=libffi`; \\\n-\techo \"$(ECHO_ENV) GC='$(abs_builddir)/check-gccgo -fgo-compiling-runtime' GOARCH=$${GOARCH} GOOS=$${GOOS} $(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles='$${files}' -test.v\" > runtime-testlog\n+\techo \"$(ECHO_ENV) GC='$(abs_builddir)/check-gccgo -fgo-compiling-runtime' GOARCH=$${GOARCH} GOOS=$${GOOS} $(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles='$${files}' $(GOTESTFLAGS) -test.v\" > runtime-testlog\n \t$(CHECK_ENV) \\\n \tGC=\"$${GCCGO} -fgo-compiling-runtime\"; \\\n \texport GC; \\\n \tGOARCH=`$(abs_builddir)/go$(EXEEXT) env GOARCH`; \\\n \tGOOS=`$(abs_builddir)/go$(EXEEXT) env GOOS`; \\\n \tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go\" --tag=libffi`; \\\n-\t$(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles=\"$${files}\" -test.v >> runtime-testlog 2>&1 || echo \"--- $${fl} go test runtime (0.00s)\" >> runtime-testlog\n-\tgrep '^--- ' runtime-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+\t$(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles=\"$${files}\" $(GOTESTFLAGS) -test.v >> runtime-testlog 2>&1 || echo \"--- $${fl} go test runtime (0.00s)\" >> runtime-testlog\n+\tgrep '^--- ' runtime-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' | sort -k 2\n \n # check-cgo-test runs `go test misc/cgo/test` in our environment.\n check-cgo-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n@@ -227,7 +229,7 @@ check-cgo-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n \tGOTRACEBACK=2; \\\n \texport GOTRACEBACK; \\\n \t(cd cgo-test-dir/misc/cgo/test && $(abs_builddir)/go$(EXEEXT) test -test.short -test.v) >> cgo-testlog 2>&1 || echo \"--- $${fl} go test misc/cgo/test (0.00s)\" >> cgo-testlog\n-\tgrep '^--- ' cgo-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+\tgrep '^--- ' cgo-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' | sort -k 2\n \n # check-carchive-test runs `go test misc/cgo/testcarchive/carchive_test.go`\n # in our environment.\n@@ -241,7 +243,7 @@ check-carchive-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n \tLIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; \\\n \texport LIBRARY_PATH; \\\n \t(cd carchive-test-dir/misc/cgo/testcarchive && $(abs_builddir)/go$(EXEEXT) test -test.v carchive_test.go) >> carchive-testlog 2>&1 || echo \"--- $${fl} go test misc/cgo/testcarchive (0.00s)\" >> carchive-testlog\n-\tgrep '^--- ' carchive-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+\tgrep '^--- ' carchive-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' | sort -k 2\n \n # The check targets runs the tests and assembles the output files.\n check: check-head check-go-tool check-runtime check-cgo-test check-carchive-test\n@@ -252,7 +254,7 @@ check: check-head check-go-tool check-runtime check-cgo-test check-carchive-test\n \t  echo \"Running $${testname}\" >> gotools.sum; \\\n \t  echo \"Running $${testname}\" >> gotools.log; \\\n \t  sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' < $${file} >> gotools.log; \\\n-\t  grep '^--- ' $${file} | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' -e 's/SKIP/UNTESTED/' >> gotools.sum; \\\n+\t  grep '^--- ' $${file} | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' -e 's/SKIP/UNTESTED/' | sort -k 2 >> gotools.sum; \\\n \tdone\n \t@echo >> gotools.sum\n \t@echo \"\t\t=== gotools Summary ===\" >> gotools.sum"}, {"sha": "ad0fc2e1705b8781ff9d59eb39871eb01a84ee57", "filename": "gotools/Makefile.in", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da7ce80f3845e511bf0c3c5a8c11af5f3def516/gotools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da7ce80f3845e511bf0c3c5a8c11af5f3def516/gotools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FMakefile.in?ref=6da7ce80f3845e511bf0c3c5a8c11af5f3def516", "patch": "@@ -302,6 +302,7 @@ MOSTLYCLEANFILES = \\\n @NATIVE_TRUE@bin_PROGRAMS = go$(EXEEXT) gofmt$(EXEEXT)\n @NATIVE_TRUE@noinst_PROGRAMS = cgo$(EXEEXT)\n @NATIVE_TRUE@man_MANS = go.1 gofmt.1\n+@NATIVE_TRUE@GOTESTFLAGS = \n \n # CHECK_ENV sets up the environment to run the newly built go tool.\n # If you change this, change ECHO_ENV, below.\n@@ -576,8 +577,8 @@ distclean-generic:\n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n-@NATIVE_FALSE@install-exec-local:\n @NATIVE_FALSE@uninstall-local:\n+@NATIVE_FALSE@install-exec-local:\n clean: clean-am\n \n clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \\\n@@ -751,7 +752,7 @@ mostlyclean-local:\n @NATIVE_TRUE@\tGOPATH=`cd check-go-dir && $(PWD_COMMAND)`; \\\n @NATIVE_TRUE@\texport GOPATH; \\\n @NATIVE_TRUE@\t(cd check-go-dir/src/cmd/go && $(abs_builddir)/go$(EXEEXT) test -test.short -test.v) >> cmd_go-testlog 2>&1 || echo \"--- $${fl} go test cmd/go (0.00s)\" >> cmd_go-testlog\n-@NATIVE_TRUE@\tgrep '^--- ' cmd_go-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+@NATIVE_TRUE@\tgrep '^--- ' cmd_go-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' | sort -k 2\n \n # check-runtime runs `go test runtime` in our environment.\n # The runtime package is also tested as part of libgo,\n@@ -765,15 +766,15 @@ mostlyclean-local:\n @NATIVE_TRUE@\tGOARCH=`$(abs_builddir)/go$(EXEEXT) env GOARCH`; \\\n @NATIVE_TRUE@\tGOOS=`$(abs_builddir)/go$(EXEEXT) env GOOS`; \\\n @NATIVE_TRUE@\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go\" --tag=libffi`; \\\n-@NATIVE_TRUE@\techo \"$(ECHO_ENV) GC='$(abs_builddir)/check-gccgo -fgo-compiling-runtime' GOARCH=$${GOARCH} GOOS=$${GOOS} $(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles='$${files}' -test.v\" > runtime-testlog\n+@NATIVE_TRUE@\techo \"$(ECHO_ENV) GC='$(abs_builddir)/check-gccgo -fgo-compiling-runtime' GOARCH=$${GOARCH} GOOS=$${GOOS} $(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles='$${files}' $(GOTESTFLAGS) -test.v\" > runtime-testlog\n @NATIVE_TRUE@\t$(CHECK_ENV) \\\n @NATIVE_TRUE@\tGC=\"$${GCCGO} -fgo-compiling-runtime\"; \\\n @NATIVE_TRUE@\texport GC; \\\n @NATIVE_TRUE@\tGOARCH=`$(abs_builddir)/go$(EXEEXT) env GOARCH`; \\\n @NATIVE_TRUE@\tGOOS=`$(abs_builddir)/go$(EXEEXT) env GOOS`; \\\n @NATIVE_TRUE@\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go\" --tag=libffi`; \\\n-@NATIVE_TRUE@\t$(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles=\"$${files}\" -test.v >> runtime-testlog 2>&1 || echo \"--- $${fl} go test runtime (0.00s)\" >> runtime-testlog\n-@NATIVE_TRUE@\tgrep '^--- ' runtime-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+@NATIVE_TRUE@\t$(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles=\"$${files}\" $(GOTESTFLAGS) -test.v >> runtime-testlog 2>&1 || echo \"--- $${fl} go test runtime (0.00s)\" >> runtime-testlog\n+@NATIVE_TRUE@\tgrep '^--- ' runtime-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' | sort -k 2\n \n # check-cgo-test runs `go test misc/cgo/test` in our environment.\n @NATIVE_TRUE@check-cgo-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n@@ -786,7 +787,7 @@ mostlyclean-local:\n @NATIVE_TRUE@\tGOTRACEBACK=2; \\\n @NATIVE_TRUE@\texport GOTRACEBACK; \\\n @NATIVE_TRUE@\t(cd cgo-test-dir/misc/cgo/test && $(abs_builddir)/go$(EXEEXT) test -test.short -test.v) >> cgo-testlog 2>&1 || echo \"--- $${fl} go test misc/cgo/test (0.00s)\" >> cgo-testlog\n-@NATIVE_TRUE@\tgrep '^--- ' cgo-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+@NATIVE_TRUE@\tgrep '^--- ' cgo-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' | sort -k 2\n \n # check-carchive-test runs `go test misc/cgo/testcarchive/carchive_test.go`\n # in our environment.\n@@ -800,7 +801,7 @@ mostlyclean-local:\n @NATIVE_TRUE@\tLIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; \\\n @NATIVE_TRUE@\texport LIBRARY_PATH; \\\n @NATIVE_TRUE@\t(cd carchive-test-dir/misc/cgo/testcarchive && $(abs_builddir)/go$(EXEEXT) test -test.v carchive_test.go) >> carchive-testlog 2>&1 || echo \"--- $${fl} go test misc/cgo/testcarchive (0.00s)\" >> carchive-testlog\n-@NATIVE_TRUE@\tgrep '^--- ' carchive-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+@NATIVE_TRUE@\tgrep '^--- ' carchive-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' | sort -k 2\n \n # The check targets runs the tests and assembles the output files.\n @NATIVE_TRUE@check: check-head check-go-tool check-runtime check-cgo-test check-carchive-test\n@@ -811,7 +812,7 @@ mostlyclean-local:\n @NATIVE_TRUE@\t  echo \"Running $${testname}\" >> gotools.sum; \\\n @NATIVE_TRUE@\t  echo \"Running $${testname}\" >> gotools.log; \\\n @NATIVE_TRUE@\t  sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' < $${file} >> gotools.log; \\\n-@NATIVE_TRUE@\t  grep '^--- ' $${file} | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' -e 's/SKIP/UNTESTED/' >> gotools.sum; \\\n+@NATIVE_TRUE@\t  grep '^--- ' $${file} | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' -e 's/SKIP/UNTESTED/' | sort -k 2 >> gotools.sum; \\\n @NATIVE_TRUE@\tdone\n @NATIVE_TRUE@\t@echo >> gotools.sum\n @NATIVE_TRUE@\t@echo \"\t\t=== gotools Summary ===\" >> gotools.sum"}]}