{"sha": "b63781e94179d89b95a2a74cd41aa70412e7dba4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYzNzgxZTk0MTc5ZDg5Yjk1YTJhNzRjZDQxYWE3MDQxMmU3ZGJhNA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2001-10-31T15:28:41Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-10-31T15:28:41Z"}, "message": "tree.h (tree_index): Add support for V16QI and V8HI.\n\n\t* tree.h (tree_index): Add support for V16QI and V8HI.\n\t      (V8HI_type_node): New.\n\t(V16QI_type_node): New.\n\nFrom-SVN: r46678", "tree": {"sha": "39ea75262e5aed4926cd83d594fcb02bb2baf7a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39ea75262e5aed4926cd83d594fcb02bb2baf7a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b63781e94179d89b95a2a74cd41aa70412e7dba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b63781e94179d89b95a2a74cd41aa70412e7dba4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b63781e94179d89b95a2a74cd41aa70412e7dba4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b63781e94179d89b95a2a74cd41aa70412e7dba4/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "892a2d681f1049b4411a5327a2992da8bddf0dbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892a2d681f1049b4411a5327a2992da8bddf0dbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/892a2d681f1049b4411a5327a2992da8bddf0dbc"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "a0bac328b725d056cc3f600f79180cad1937ebca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63781e94179d89b95a2a74cd41aa70412e7dba4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63781e94179d89b95a2a74cd41aa70412e7dba4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b63781e94179d89b95a2a74cd41aa70412e7dba4", "patch": "@@ -1,3 +1,13 @@\n+2001-10-31  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree.h (tree_index): Add support for V16QI and V8HI.\n+\t(V8HI_type_node): New.\n+\t(V16QI_type_node): New.\n+\n+\t* tree.c (build_common_tree_nodes_2): Same.\n+\n+\t* c-common.c (type_for_mode): Same.\n+\n 2001-10-31  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/i386/att.h: Fix comment formatting."}, {"sha": "ee633a5f063a71d4f4f91404326094f8a50f376a", "filename": "gcc/c-common.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63781e94179d89b95a2a74cd41aa70412e7dba4/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63781e94179d89b95a2a74cd41aa70412e7dba4/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=b63781e94179d89b95a2a74cd41aa70412e7dba4", "patch": "@@ -1340,6 +1340,10 @@ type_for_mode (mode, unsignedp)\n     return build_pointer_type (integer_type_node);\n \n #ifdef VECTOR_MODE_SUPPORTED_P\n+  if (mode == TYPE_MODE (V16QI_type_node) && VECTOR_MODE_SUPPORTED_P (mode))\n+    return V16QI_type_node;\n+  if (mode == TYPE_MODE (V8HI_type_node) && VECTOR_MODE_SUPPORTED_P (mode))\n+    return V8HI_type_node;\n   if (mode == TYPE_MODE (V4SF_type_node) && VECTOR_MODE_SUPPORTED_P (mode))\n     return V4SF_type_node;\n   if (mode == TYPE_MODE (V4SI_type_node) && VECTOR_MODE_SUPPORTED_P (mode))"}, {"sha": "aec124221233af9295e26a20ed6b5479afbde977", "filename": "gcc/tree.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63781e94179d89b95a2a74cd41aa70412e7dba4/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63781e94179d89b95a2a74cd41aa70412e7dba4/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=b63781e94179d89b95a2a74cd41aa70412e7dba4", "patch": "@@ -4875,8 +4875,18 @@ build_common_tree_nodes_2 (short_double)\n   TYPE_MODE (V8QI_type_node) = V8QImode;\n   finish_vector_type (V8QI_type_node);\n \n+  V8HI_type_node = make_node (VECTOR_TYPE);\n+  TREE_TYPE (V8HI_type_node) = intHI_type_node;\n+  TYPE_MODE (V8HI_type_node) = V8HImode;\n+  finish_vector_type (V8HI_type_node);\n+\n   V2SF_type_node = make_node (VECTOR_TYPE);\n   TREE_TYPE (V2SF_type_node) = float_type_node;\n   TYPE_MODE (V2SF_type_node) = V2SFmode;\n   finish_vector_type (V2SF_type_node);\n+\n+  V16QI_type_node = make_node (VECTOR_TYPE);\n+  TREE_TYPE (V16QI_type_node) = intQI_type_node;\n+  TYPE_MODE (V16QI_type_node) = V16QImode;\n+  finish_vector_type (V16QI_type_node);\n }"}, {"sha": "93ca9af58bbd6f9178fe803dbae1450c1a0fc308", "filename": "gcc/tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63781e94179d89b95a2a74cd41aa70412e7dba4/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63781e94179d89b95a2a74cd41aa70412e7dba4/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b63781e94179d89b95a2a74cd41aa70412e7dba4", "patch": "@@ -1862,10 +1862,12 @@ enum tree_index\n \n   TI_V4SF_TYPE,\n   TI_V4SI_TYPE,\n+  TI_V8HI_TYPE,\n   TI_V8QI_TYPE,\n   TI_V4HI_TYPE,\n   TI_V2SI_TYPE,\n   TI_V2SF_TYPE,\n+  TI_V16QI_TYPE,\n \n   TI_MAIN_IDENTIFIER,\n \n@@ -1926,9 +1928,11 @@ extern tree global_trees[TI_MAX];\n #define main_identifier_node\t\tglobal_trees[TI_MAIN_IDENTIFIER]\n #define MAIN_NAME_P(NODE) (IDENTIFIER_NODE_CHECK (NODE) == main_identifier_node)\n \n+#define V16QI_type_node\t\t\tglobal_trees[TI_V16QI_TYPE]\n #define V4SF_type_node\t\t\tglobal_trees[TI_V4SF_TYPE]\n #define V4SI_type_node\t\t\tglobal_trees[TI_V4SI_TYPE]\n #define V8QI_type_node\t\t\tglobal_trees[TI_V8QI_TYPE]\n+#define V8HI_type_node\t\t\tglobal_trees[TI_V8HI_TYPE]\n #define V4HI_type_node\t\t\tglobal_trees[TI_V4HI_TYPE]\n #define V2SI_type_node\t\t\tglobal_trees[TI_V2SI_TYPE]\n #define V2SF_type_node\t\t\tglobal_trees[TI_V2SF_TYPE]"}]}