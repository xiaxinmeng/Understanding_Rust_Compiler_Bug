{"sha": "4674dd2104ea80247a6fda5e95ff27120ba48062", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY3NGRkMjEwNGVhODAyNDdhNmZkYTVlOTVmZjI3MTIwYmE0ODA2Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-13T10:40:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-13T10:40:53Z"}, "message": "[multiple changes]\n\n2011-10-13  Sergey Rybin  <rybin@adacore.com>\n\n\t* gnat_ugn.texi: Minor correction.\n\n2011-10-13  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb: Minor error message improvement.\n\n2011-10-13  Robert Dewar  <dewar@adacore.com>\n\n\t* a-cbprqu.adb, a-ciorma.adb, exp_ch3.adb: Minor reformatting.\n\nFrom-SVN: r179905", "tree": {"sha": "0a098af83119a28a0bdd7a0f28254355d116766c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a098af83119a28a0bdd7a0f28254355d116766c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4674dd2104ea80247a6fda5e95ff27120ba48062", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4674dd2104ea80247a6fda5e95ff27120ba48062", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4674dd2104ea80247a6fda5e95ff27120ba48062", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4674dd2104ea80247a6fda5e95ff27120ba48062/comments", "author": null, "committer": null, "parents": [{"sha": "95aeda79481084e8b7f3900958236e331c7e1903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95aeda79481084e8b7f3900958236e331c7e1903", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95aeda79481084e8b7f3900958236e331c7e1903"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "c095a77dc9e5374a9fe31b5144f798f4e0456923", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4674dd2104ea80247a6fda5e95ff27120ba48062/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4674dd2104ea80247a6fda5e95ff27120ba48062/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4674dd2104ea80247a6fda5e95ff27120ba48062", "patch": "@@ -1,3 +1,15 @@\n+2011-10-13  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_ugn.texi: Minor correction.\n+\n+2011-10-13  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb: Minor error message improvement.\n+\n+2011-10-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-cbprqu.adb, a-ciorma.adb, exp_ch3.adb: Minor reformatting.\n+\n 2011-10-13  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_ch5.adb (Expand_N_Loop_Statement): For the transformation"}, {"sha": "cb96167be411a63a8457063a4abce569b61df73c", "filename": "gcc/ada/a-cbprqu.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4674dd2104ea80247a6fda5e95ff27120ba48062/gcc%2Fada%2Fa-cbprqu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4674dd2104ea80247a6fda5e95ff27120ba48062/gcc%2Fada%2Fa-cbprqu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbprqu.adb?ref=4674dd2104ea80247a6fda5e95ff27120ba48062", "patch": "@@ -80,8 +80,10 @@ package body Ada.Containers.Bounded_Priority_Queues is\n       begin\n          C := List.Container.First;\n          while Has_Element (C) loop\n-            --  ???\n+\n+            --  ??? why is following commented out ???\n             --  if Before (P, Get_Priority (List.Constant_Reference (C))) then\n+\n             if Before (P, Get_Priority (Element (C))) then\n                List.Container.Insert (C, New_Item);\n                exit;\n@@ -109,7 +111,9 @@ package body Ada.Containers.Bounded_Priority_Queues is\n         (List : List_Type) return Queue_Interfaces.Element_Type\n       is\n       begin\n+\n          --  Use Constant_Reference for this.  ???\n+\n          return List.Container.First_Element;\n       end First_Element;\n "}, {"sha": "3de57c76aa45d6b679505f0b978e7f2780835e96", "filename": "gcc/ada/a-ciorma.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4674dd2104ea80247a6fda5e95ff27120ba48062/gcc%2Fada%2Fa-ciorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4674dd2104ea80247a6fda5e95ff27120ba48062/gcc%2Fada%2Fa-ciorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorma.adb?ref=4674dd2104ea80247a6fda5e95ff27120ba48062", "patch": "@@ -1152,7 +1152,6 @@ package body Ada.Containers.Indefinite_Ordered_Maps is\n       return Reference_Type\n    is\n       Node : aliased Element_Type := Element (Container, Key);\n-\n    begin\n       return (Element => Node'Access);\n    end Reference;"}, {"sha": "df7c551c9d6f95f511ef467dddc9763a424699cd", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4674dd2104ea80247a6fda5e95ff27120ba48062/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4674dd2104ea80247a6fda5e95ff27120ba48062/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=4674dd2104ea80247a6fda5e95ff27120ba48062", "patch": "@@ -4207,11 +4207,10 @@ package body Exp_Ch3 is\n       --  anonymous access-to-task pointers.\n \n       elsif Ada_Version >= Ada_2005\n-        and then\n-          (Is_Record_Type (Def_Id)\n-             or else\n-               (Is_Array_Type (Def_Id)\n-                  and then Is_Record_Type (Component_Type (Def_Id))))\n+        and then (Is_Record_Type (Def_Id)\n+                   or else\n+                     (Is_Array_Type (Def_Id)\n+                       and then Is_Record_Type (Component_Type (Def_Id))))\n       then\n          declare\n             Comp  : Entity_Id;\n@@ -4270,7 +4269,7 @@ package body Exp_Ch3 is\n       end if;\n \n       if Nkind (Type_Definition (Original_Node (N))) =\n-           N_Derived_Type_Definition\n+                                                   N_Derived_Type_Definition\n         and then not Is_Tagged_Type (Def_Id)\n         and then Present (Freeze_Node (Par_Id))\n         and then Present (TSS_Elist (Freeze_Node (Par_Id)))"}, {"sha": "13a4e82ea9ccd7f8b852aad4f3e7c4dc8fe70bce", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4674dd2104ea80247a6fda5e95ff27120ba48062/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4674dd2104ea80247a6fda5e95ff27120ba48062/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=4674dd2104ea80247a6fda5e95ff27120ba48062", "patch": "@@ -17503,7 +17503,7 @@ current directory)\n \n @item @samp{@var{gcc_switches}} is a list of switches for\n @command{gcc}. They will be passed on to all compiler invocations made by\n-@command{gnatelim} to generate the ASIS trees. Here you can provide\n+@command{gnatstub} to generate the ASIS trees. Here you can provide\n @option{^-I^/INCLUDE_DIRS=^} switches to form the source search path,\n use the @option{-gnatec} switch to set the configuration file,\n use the @option{-gnat05} switch if sources should be compiled in"}, {"sha": "21f535c599eb8ed43c5af4f1d0d985f9f19fea50", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4674dd2104ea80247a6fda5e95ff27120ba48062/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4674dd2104ea80247a6fda5e95ff27120ba48062/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=4674dd2104ea80247a6fda5e95ff27120ba48062", "patch": "@@ -2398,7 +2398,15 @@ package body Sem_Ch8 is\n       elsif not Is_Entity_Name (Nam)\n         or else not Is_Overloadable (Entity (Nam))\n       then\n-         Error_Msg_N (\"expect valid subprogram name in renaming\", N);\n+         --  Do not mention the renaming if it comes from an instance\n+\n+         if not Is_Actual then\n+            Error_Msg_N (\"expect valid subprogram name in renaming\", N);\n+\n+         else\n+            Error_Msg_NE (\"no visible subprogram for formal&\", N, Nam);\n+         end if;\n+\n          return;\n       end if;\n "}]}