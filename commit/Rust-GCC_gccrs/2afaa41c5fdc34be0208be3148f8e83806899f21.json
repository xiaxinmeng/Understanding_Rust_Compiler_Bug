{"sha": "2afaa41c5fdc34be0208be3148f8e83806899f21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFmYWE0MWM1ZmRjMzRiZTAyMDhiZTMxNDhmOGU4MzgwNjg5OWYyMQ==", "commit": {"author": {"name": "Greg McGary", "email": "greg@mcgary.org", "date": "2000-08-30T22:50:52Z"}, "committer": {"name": "Greg McGary", "email": "gkm@gcc.gnu.org", "date": "2000-08-30T22:50:52Z"}, "message": "tree.h (struct tree_int_cst): Wrap low and high in a sub-struct.\n\n\t* tree.h (struct tree_int_cst): Wrap low and high in a sub-struct.\n\t(TREE_INT_CST_LOW, TREE_INT_CST_HIGH): Access through sub-struct.\n\t(TREE_INT_CST): New macro.\n\t* varasm.c (const_hash, compare_constant_1, record_constant_1):\n\tUse new macro TREE_INT_CST.\n\nFrom-SVN: r36076", "tree": {"sha": "042ac04f650e870a46a4b967cad55fc6c0fee687", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/042ac04f650e870a46a4b967cad55fc6c0fee687"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2afaa41c5fdc34be0208be3148f8e83806899f21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afaa41c5fdc34be0208be3148f8e83806899f21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2afaa41c5fdc34be0208be3148f8e83806899f21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afaa41c5fdc34be0208be3148f8e83806899f21/comments", "author": null, "committer": null, "parents": [{"sha": "1d92b3e1d64e84c9a268dceea46a3b1026d32858", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d92b3e1d64e84c9a268dceea46a3b1026d32858", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d92b3e1d64e84c9a268dceea46a3b1026d32858"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "31b3e0825552441ccea5469b2692a702e44ba11f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afaa41c5fdc34be0208be3148f8e83806899f21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afaa41c5fdc34be0208be3148f8e83806899f21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2afaa41c5fdc34be0208be3148f8e83806899f21", "patch": "@@ -1,3 +1,11 @@\n+2000-08-30  Greg McGary  <greg@mcgary.org>\n+\n+\t* tree.h (struct tree_int_cst): Wrap low and high in a sub-struct.\n+\t(TREE_INT_CST_LOW, TREE_INT_CST_HIGH): Access through sub-struct.\n+\t(TREE_INT_CST): New macro.\n+\t* varasm.c (const_hash, compare_constant_1, record_constant_1):\n+\tUse new macro TREE_INT_CST.\n+\n Wed 30-Aug-2000 23:18:59 BST  Neil Booth  <NeilB@earthling.net>\n \n \t* contrib.texi: Add self."}, {"sha": "245f413c77b3f40916218941819b664efb667f59", "filename": "gcc/tree.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afaa41c5fdc34be0208be3148f8e83806899f21/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afaa41c5fdc34be0208be3148f8e83806899f21/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=2afaa41c5fdc34be0208be3148f8e83806899f21", "patch": "@@ -655,8 +655,9 @@ extern void tree_class_check_failed PARAMS ((const tree, int,\n    If the data type is signed, the value is sign-extended to 2 words\n    even though not all of them may really be in use.\n    In an unsigned constant shorter than 2 words, the extra bits are 0.  */\n-#define TREE_INT_CST_LOW(NODE) (INTEGER_CST_CHECK (NODE)->int_cst.int_cst_low)\n-#define TREE_INT_CST_HIGH(NODE) (INTEGER_CST_CHECK (NODE)->int_cst.int_cst_high)\n+#define TREE_INT_CST(NODE) (INTEGER_CST_CHECK (NODE)->int_cst.int_cst)\n+#define TREE_INT_CST_LOW(NODE) (TREE_INT_CST (NODE).low)\n+#define TREE_INT_CST_HIGH(NODE) (TREE_INT_CST (NODE).high)\n \n #define INT_CST_LT(A, B)  \\\n (TREE_INT_CST_HIGH (A) < TREE_INT_CST_HIGH (B)\t\t\t\\\n@@ -675,8 +676,13 @@ struct tree_int_cst\n   struct tree_common common;\n   struct rtx_def *rtl;\t/* acts as link to register transfer language\n \t\t\t   (rtl) info */\n-  unsigned HOST_WIDE_INT int_cst_low;\n-  HOST_WIDE_INT int_cst_high;\n+  /* A sub-struct is necessary here because the function `const_hash'\n+     wants to scan both words as a unit and taking the address of the\n+     sub-struct yields the properly inclusive bounded pointer.  */\n+  struct {\n+    unsigned HOST_WIDE_INT low;\n+    HOST_WIDE_INT high;\n+  } int_cst;\n };\n \n /* In REAL_CST, STRING_CST, COMPLEX_CST nodes, and CONSTRUCTOR nodes,"}, {"sha": "5a10d65687fdd0b3a2b7788e57a9151a7b621db0", "filename": "gcc/varasm.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afaa41c5fdc34be0208be3148f8e83806899f21/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afaa41c5fdc34be0208be3148f8e83806899f21/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=2afaa41c5fdc34be0208be3148f8e83806899f21", "patch": "@@ -2361,8 +2361,8 @@ const_hash (exp)\n   switch (code)\n     {\n     case INTEGER_CST:\n-      p = (char *) &TREE_INT_CST_LOW (exp);\n-      len = 2 * sizeof TREE_INT_CST_LOW (exp);\n+      p = (char *) &TREE_INT_CST (exp);\n+      len = sizeof TREE_INT_CST (exp);\n       break;\n \n     case REAL_CST:\n@@ -2506,8 +2506,8 @@ compare_constant_1 (exp, p)\n       if (*p++ != TYPE_PRECISION (TREE_TYPE (exp)))\n \treturn 0;\n \n-      strp = (unsigned char *) &TREE_INT_CST_LOW (exp);\n-      len = 2 * sizeof TREE_INT_CST_LOW (exp);\n+      strp = (unsigned char *) &TREE_INT_CST (exp);\n+      len = sizeof TREE_INT_CST (exp);\n       break;\n \n     case REAL_CST:\n@@ -2745,8 +2745,8 @@ record_constant_1 (exp)\n     {\n     case INTEGER_CST:\n       obstack_1grow (&permanent_obstack, TYPE_PRECISION (TREE_TYPE (exp)));\n-      strp = (unsigned char *) &TREE_INT_CST_LOW (exp);\n-      len = 2 * sizeof TREE_INT_CST_LOW (exp);\n+      strp = (unsigned char *) &TREE_INT_CST (exp);\n+      len = sizeof TREE_INT_CST (exp);\n       break;\n \n     case REAL_CST:"}]}