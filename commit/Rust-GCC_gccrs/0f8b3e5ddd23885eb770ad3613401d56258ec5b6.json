{"sha": "0f8b3e5ddd23885eb770ad3613401d56258ec5b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY4YjNlNWRkZDIzODg1ZWI3NzBhZDM2MTM0MDFkNTYyNThlYzViNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T10:43:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T10:43:03Z"}, "message": "[multiple changes]\n\n2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Selected_Component): A reference to the\n\tcurrent instance of a task type is legal if the prefix is an\n\texpression of that task type and the selector is an entry or\n\tentry family.\n\n2016-04-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* a-cfdlli.ads (List): Type is no longer tagged, not needed. Move\n\tvarsize field at the end for efficiency.\n\nFrom-SVN: r235261", "tree": {"sha": "c3b71f0239a85b252e0c0c376e7a97d11dafa6a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3b71f0239a85b252e0c0c376e7a97d11dafa6a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f8b3e5ddd23885eb770ad3613401d56258ec5b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8b3e5ddd23885eb770ad3613401d56258ec5b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f8b3e5ddd23885eb770ad3613401d56258ec5b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8b3e5ddd23885eb770ad3613401d56258ec5b6/comments", "author": null, "committer": null, "parents": [{"sha": "0c61772a122cc888d0aafffbaa35d4c95cc7abcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c61772a122cc888d0aafffbaa35d4c95cc7abcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c61772a122cc888d0aafffbaa35d4c95cc7abcc"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "185040a55cc32afcbc49ac3e6dc784ea6c26df18", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8b3e5ddd23885eb770ad3613401d56258ec5b6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8b3e5ddd23885eb770ad3613401d56258ec5b6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0f8b3e5ddd23885eb770ad3613401d56258ec5b6", "patch": "@@ -1,3 +1,15 @@\n+2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Selected_Component): A reference to the\n+\tcurrent instance of a task type is legal if the prefix is an\n+\texpression of that task type and the selector is an entry or\n+\tentry family.\n+\n+2016-04-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* a-cfdlli.ads (List): Type is no longer tagged, not needed. Move\n+\tvarsize field at the end for efficiency.\n+\n 2016-04-20  Vincent Celier  <celier@adacore.com>\n \n \t* gnatcmd.adb: Do not invoke gprls when the invocation of \"gnat"}, {"sha": "8e17479fc3ab9df76bb4d89914cfd0c210610cb1", "filename": "gcc/ada/a-cfdlli.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8b3e5ddd23885eb770ad3613401d56258ec5b6/gcc%2Fada%2Fa-cfdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8b3e5ddd23885eb770ad3613401d56258ec5b6/gcc%2Fada%2Fa-cfdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.ads?ref=0f8b3e5ddd23885eb770ad3613401d56258ec5b6", "patch": "@@ -353,12 +353,12 @@ private\n    type Node_Array is array (Count_Type range <>) of Node_Type;\n    function \"=\" (L, R : Node_Array) return Boolean is abstract;\n \n-   type List (Capacity : Count_Type) is tagged record\n-      Nodes  : Node_Array (1 .. Capacity) := (others => <>);\n+   type List (Capacity : Count_Type) is record\n       Free   : Count_Type'Base := -1;\n       Length : Count_Type := 0;\n       First  : Count_Type := 0;\n       Last   : Count_Type := 0;\n+      Nodes  : Node_Array (1 .. Capacity) := (others => <>);\n    end record;\n \n    type Cursor is record"}, {"sha": "6226c8c137acf9bb7283f6940ccaddb416f28e5a", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8b3e5ddd23885eb770ad3613401d56258ec5b6/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8b3e5ddd23885eb770ad3613401d56258ec5b6/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=0f8b3e5ddd23885eb770ad3613401d56258ec5b6", "patch": "@@ -4109,7 +4109,7 @@ package body Sem_Ch4 is\n       --  indexed component rather than a function call.\n \n       function Has_Dereference (Nod : Node_Id) return Boolean;\n-      --  Check whether prefix includes a dereference at any level\n+      --  Check whether prefix includes a dereference at any level.\n \n       --------------------------------\n       -- Find_Component_In_Instance --\n@@ -4689,17 +4689,27 @@ package body Sem_Ch4 is\n          --  reach an internal entity of another synchronized object).\n          --  This is legal if prefix is an access to such type and there is\n          --  a dereference, or is a component with a dereferenced prefix.\n+         --  It is also legal if the prefix is a component of a task type,\n+         --  and the selector is one of the task operations.\n \n          if In_Scope\n            and then not Is_Entity_Name (Name)\n            and then not Has_Dereference (Name)\n          then\n-            Error_Msg_NE\n-              (\"invalid reference to internal operation of some object of \"\n-               & \"type &\", N, Type_To_Use);\n-            Set_Entity (Sel, Any_Id);\n-            Set_Etype  (Sel, Any_Type);\n-            return;\n+            if Is_Task_Type (Prefix_Type)\n+              and then Present (Entity (Sel))\n+              and then Ekind_In (Entity (Sel), E_Entry, E_Entry_Family)\n+            then\n+               null;\n+\n+            else\n+               Error_Msg_NE\n+                 (\"invalid reference to internal operation of some object of \"\n+                  & \"type &\", N, Type_To_Use);\n+               Set_Entity (Sel, Any_Id);\n+               Set_Etype  (Sel, Any_Type);\n+               return;\n+            end if;\n          end if;\n \n          --  If there is no visible entity with the given name or none of the"}]}