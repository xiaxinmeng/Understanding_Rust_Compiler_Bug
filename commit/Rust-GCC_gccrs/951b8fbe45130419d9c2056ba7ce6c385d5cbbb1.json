{"sha": "951b8fbe45130419d9c2056ba7ce6c385d5cbbb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUxYjhmYmU0NTEzMDQxOWQ5YzIwNTZiYTdjZTZjMzg1ZDVjYmJiMQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-09-08T00:59:05Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-09-08T00:59:05Z"}, "message": "re PR fortran/41192 (NAMELIST input with just a comment (\"&NAME ! comment \\\") fails)\n\n2009-09-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/41192\n\t* io/list_read.c (eat_line): Enable eat_line to function on\n\tinternal units.\n\n\tPR libgfortran/41219\n\t* io/list_read.c (nml_read_obj): Replace GFC_DTYPE_UNKNOWN with\n\tBT_NULL to get rid of warning.\n\nFrom-SVN: r151495", "tree": {"sha": "1c62a05043205eba5d1092f7db8e53aaebad5181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c62a05043205eba5d1092f7db8e53aaebad5181"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/951b8fbe45130419d9c2056ba7ce6c385d5cbbb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/951b8fbe45130419d9c2056ba7ce6c385d5cbbb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/951b8fbe45130419d9c2056ba7ce6c385d5cbbb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/951b8fbe45130419d9c2056ba7ce6c385d5cbbb1/comments", "author": null, "committer": null, "parents": [{"sha": "21a4564b8ee221373cc0a90da12784e9093c72b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21a4564b8ee221373cc0a90da12784e9093c72b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21a4564b8ee221373cc0a90da12784e9093c72b8"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "262039ad53ee68a3f0e2e7456c1770f1d4de52fb", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951b8fbe45130419d9c2056ba7ce6c385d5cbbb1/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951b8fbe45130419d9c2056ba7ce6c385d5cbbb1/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=951b8fbe45130419d9c2056ba7ce6c385d5cbbb1", "patch": "@@ -1,3 +1,13 @@\n+2009-09-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/41192\n+\t* io/list_read.c (eat_line): Enable eat_line to function on\n+\tinternal units.\n+\n+\tPR libgfortran/41219\n+\t* io/list_read.c (nml_read_obj): Replace GFC_DTYPE_UNKNOWN with\n+\tBT_NULL to get rid of warning.\n+\t\n 2009-09-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/41219"}, {"sha": "d8ad602e5936bfe1d29d23d9483324582ac2aa96", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951b8fbe45130419d9c2056ba7ce6c385d5cbbb1/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951b8fbe45130419d9c2056ba7ce6c385d5cbbb1/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=951b8fbe45130419d9c2056ba7ce6c385d5cbbb1", "patch": "@@ -287,10 +287,10 @@ static void\n eat_line (st_parameter_dt *dtp)\n {\n   char c;\n-  if (!is_internal_unit (dtp))\n-    do\n-      c = next_char (dtp);\n-    while (c != '\\n');\n+\n+  do\n+    c = next_char (dtp);\n+  while (c != '\\n');\n }\n \n \n@@ -2374,10 +2374,10 @@ nml_read_obj (st_parameter_dt *dtp, namelist_info * nl, index_type offset,\n \t  if (dtp->u.p.input_complete)\n \t    return SUCCESS;\n \n-\t  /* GFC_TYPE_UNKNOWN through for nulls and is detected\n-\t     after the switch block.  */\n+\t  /* BT_NULL (equivalent to GFC_DTYPE_UNKNOWN) falls through\n+\t     for nulls and is detected at default: of switch block.  */\n \n-\t  dtp->u.p.saved_type = GFC_DTYPE_UNKNOWN;\n+\t  dtp->u.p.saved_type = BT_NULL;\n \t  free_saved (dtp);\n \n           switch (nl->type)\n@@ -2467,7 +2467,7 @@ nml_read_obj (st_parameter_dt *dtp, namelist_info * nl, index_type offset,\n \t  return SUCCESS;\n \t}\n \n-      if (dtp->u.p.saved_type == GFC_DTYPE_UNKNOWN)\n+      if (dtp->u.p.saved_type == BT_NULL)\n \t{\n \t  dtp->u.p.expanded_read = 0;\n \t  goto incr_idx;"}]}