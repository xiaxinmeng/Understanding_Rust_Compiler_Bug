{"sha": "de77a81b2c974520183e6c2f205be54844f3d42e", "node_id": "C_kwDOANBUbNoAKGRlNzdhODFiMmM5NzQ1MjAxODNlNmMyZjIwNWJlNTQ4NDRmM2Q0MmU", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-12-09T23:51:10Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2023-01-03T09:29:54Z"}, "message": "ada: Fix premature finalization of return temporary\n\nVarious parts of the expander and the code generator must have a consistent\nview on which temporaries generated for return statements must be finalized\nbecause they are regular temporaries, and which ones must not be since they\nare allocated on the return stack directly.  The Is_Related_To_Func_Return\npredicate is used for this purpose and needs to be tested consistently.\n\ngcc/ada/\n\n\t* exp_ch6.adb (Expand_Simple_Function_Return): Make sure that a\n\tcaptured function call also verifies Is_Related_To_Func_Return.\n\tDo not generate an actual subtype for special return objects.\n\t* exp_util.ads (Is_Related_To_Func_Return): Add commentary.", "tree": {"sha": "f2f542240a495e9d8495ada7fddc0e17ab16e7be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2f542240a495e9d8495ada7fddc0e17ab16e7be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de77a81b2c974520183e6c2f205be54844f3d42e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de77a81b2c974520183e6c2f205be54844f3d42e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de77a81b2c974520183e6c2f205be54844f3d42e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de77a81b2c974520183e6c2f205be54844f3d42e/comments", "author": null, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3f50f75aa3e5054b28074c029d36c1cbce2d0cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f50f75aa3e5054b28074c029d36c1cbce2d0cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f50f75aa3e5054b28074c029d36c1cbce2d0cb"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "db1fd1d172b7df3e2d75df9968bd1a5715d4dcc0", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de77a81b2c974520183e6c2f205be54844f3d42e/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de77a81b2c974520183e6c2f205be54844f3d42e/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=de77a81b2c974520183e6c2f205be54844f3d42e", "patch": "@@ -6435,12 +6435,21 @@ package body Exp_Ch6 is\n       --  The result type of the function\n \n       Utyp : constant Entity_Id := Underlying_Type (R_Type);\n+      --  The underlying result type of the function\n \n       Exp : Node_Id := Expression (N);\n       pragma Assert (Present (Exp));\n \n       Exp_Is_Function_Call : constant Boolean :=\n-        Nkind (Exp) = N_Function_Call or else Is_Captured_Function_Call (Exp);\n+        Nkind (Exp) = N_Function_Call\n+          or else\n+            (Is_Captured_Function_Call (Exp)\n+              and then Is_Related_To_Func_Return (Entity (Prefix (Exp))));\n+      --  If the expression is a captured function call, then we need to make\n+      --  sure that the object doing the capture is properly recognized by the\n+      --  Is_Related_To_Func_Return predicate; otherwise, if it is of a type\n+      --  that needs finalization, Requires_Cleanup_Actions would return true\n+      --  because of it and Build_Finalizer would finalize it prematurely.\n \n       Exp_Typ : constant Entity_Id := Etype (Exp);\n       --  The type of the expression (not necessarily the same as R_Type)\n@@ -6624,7 +6633,8 @@ package body Exp_Ch6 is\n          --  size. We create an actual subtype for this purpose. However we\n          --  need not do it if the expression is a function call since this\n          --  will be done in the called function and doing it here too would\n-         --  cause a temporary with maximum size to be created.\n+         --  cause a temporary with maximum size to be created. Likewise for\n+         --  a special return object, since there is no copy in this case.\n \n          declare\n             Ubt  : constant Entity_Id := Underlying_Type (Base_Type (Exp_Typ));\n@@ -6633,6 +6643,8 @@ package body Exp_Ch6 is\n \n          begin\n             if not Exp_Is_Function_Call\n+              and then not (Is_Entity_Name (Exp)\n+                             and then Is_Special_Return_Object (Entity (Exp)))\n               and then Has_Defaulted_Discriminants (Ubt)\n               and then not Is_Constrained (Ubt)\n               and then not Has_Unchecked_Union (Ubt)"}, {"sha": "b770d029cd9e2d6e18f649bb5a2fe8d47c94fee4", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de77a81b2c974520183e6c2f205be54844f3d42e/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de77a81b2c974520183e6c2f205be54844f3d42e/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=de77a81b2c974520183e6c2f205be54844f3d42e", "patch": "@@ -825,6 +825,10 @@ package Exp_Util is\n    --  Determine whether object Id is related to an expanded return statement.\n    --  The case concerned is \"return Id.all;\".\n \n+   --  This is effectively used to determine which temporaries generated for\n+   --  return statements must be finalized because they are regular temporaries\n+   --  and which ones must not be since they are allocated on the return stack.\n+\n    --  WARNING: There is a matching C declaration of this subprogram in fe.h\n \n    function Is_Renamed_Object (N : Node_Id) return Boolean;"}]}