{"sha": "d15a79696738d4f81b17774af7f7d7a80f429d5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE1YTc5Njk2NzM4ZDRmODFiMTc3NzRhZjdmN2Q3YTgwZjQyOWQ1Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-11-27T21:04:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-11-27T21:04:41Z"}, "message": "re PR c++/88181 (ICE: verify_type failed (error: type variant differs by TYPE_PACKED))\n\n\tPR c++/88181\n\t* class.c (fixup_attribute_variants): Also propagate TYPE_PACKED\n\tto variants.\n\n\t* g++.dg/debug/pr88181.C: New test.\n\nFrom-SVN: r266527", "tree": {"sha": "d77dff145249da75eace3e836ebfb6b996256a7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d77dff145249da75eace3e836ebfb6b996256a7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d15a79696738d4f81b17774af7f7d7a80f429d5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d15a79696738d4f81b17774af7f7d7a80f429d5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d15a79696738d4f81b17774af7f7d7a80f429d5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d15a79696738d4f81b17774af7f7d7a80f429d5c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc74d562dee21346405b9bb4a7fe3bd0f2c43758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc74d562dee21346405b9bb4a7fe3bd0f2c43758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc74d562dee21346405b9bb4a7fe3bd0f2c43758"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "41e66c082974372e6c8860ea9ba505a2b38b60e6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d15a79696738d4f81b17774af7f7d7a80f429d5c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d15a79696738d4f81b17774af7f7d7a80f429d5c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d15a79696738d4f81b17774af7f7d7a80f429d5c", "patch": "@@ -1,3 +1,9 @@\n+2018-11-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/88181\n+\t* class.c (fixup_attribute_variants): Also propagate TYPE_PACKED\n+\tto variants.\n+\n 2018-11-26  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/88120 - ICE when calling save_expr in a template."}, {"sha": "be3b4bbbe19e6828374b4543a5f20a2ba09a579f", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d15a79696738d4f81b17774af7f7d7a80f429d5c/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d15a79696738d4f81b17774af7f7d7a80f429d5c/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d15a79696738d4f81b17774af7f7d7a80f429d5c", "patch": "@@ -1951,6 +1951,7 @@ fixup_attribute_variants (tree t)\n   unsigned align = TYPE_ALIGN (t);\n   bool user_align = TYPE_USER_ALIGN (t);\n   bool may_alias = lookup_attribute (\"may_alias\", attrs);\n+  bool packed = TYPE_PACKED (t);\n \n   if (may_alias)\n     fixup_may_alias (t);\n@@ -1968,6 +1969,7 @@ fixup_attribute_variants (tree t)\n       else\n \tTYPE_USER_ALIGN (variants) = user_align;\n       SET_TYPE_ALIGN (variants, valign);\n+      TYPE_PACKED (variants) = packed;\n       if (may_alias)\n \tfixup_may_alias (variants);\n     }"}, {"sha": "d35a3f87cd1bb58fbbf5d317368ac73f4460cd81", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d15a79696738d4f81b17774af7f7d7a80f429d5c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d15a79696738d4f81b17774af7f7d7a80f429d5c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d15a79696738d4f81b17774af7f7d7a80f429d5c", "patch": "@@ -1,5 +1,8 @@\n 2018-11-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/88181\n+\t* g++.dg/debug/pr88181.C: New test.\n+\n \tPR middle-end/87157\n \t* gcc.dg/vect/costmodel/ppc/costmodel-vect-33.c (main1): Add noipa\n \tattribute."}, {"sha": "fc6f8136b6153f79ce6a4c6579791fa85ebad317", "filename": "gcc/testsuite/g++.dg/debug/pr88181.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d15a79696738d4f81b17774af7f7d7a80f429d5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr88181.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d15a79696738d4f81b17774af7f7d7a80f429d5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr88181.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr88181.C?ref=d15a79696738d4f81b17774af7f7d7a80f429d5c", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/88181\n+// { dg-do compile }\n+// { dg-options \"-fpack-struct -g -std=c++11\" }\n+\n+template <typename T> struct A { typedef T B; };\n+template <typename...> class C;\n+template <typename e> struct D { constexpr D (e) {} };\n+template <int, typename...> struct E;\n+template <int N, typename T, typename... U>\n+struct E<N, T, U...> : E<1, U...>, D<T> {\n+  constexpr E (T x, U... y) : E<1, U...>(y...), D<T>(x) {}\n+};\n+template <int N, typename T> struct E<N, T> : D<T> {\n+  constexpr E (T x) : D<T>(x) {}\n+};\n+template <typename T, typename U> struct C<T, U> : E<0, T, U> {\n+  constexpr C (T x, U y) : E<0, T, U>(x, y) {}\n+  void operator= (typename A<const C>::B);\n+};\n+struct F {};\n+struct G {};\n+\n+int\n+main ()\n+{\n+  F f;\n+  G g;\n+  constexpr C<F, G> c(f, g);\n+}"}]}