{"sha": "d73c92c9f2297c57153beced2475ed79e0d0736b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDczYzkyYzlmMjI5N2M1NzE1M2JlY2VkMjQ3NWVkNzllMGQwNzM2Yg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-10-12T15:23:11Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-10-12T15:23:11Z"}, "message": "regrename: Don't rename restores\n\nA restore is supposed to restore some certain register.  Restoring it\ninto some other register will not work.  Don't.\n\n\n\t* regrename.c (build_def_use): Invalidate chains that have a\n\tREG_CFA_RESTORE on some instruction.\n\nFrom-SVN: r241061", "tree": {"sha": "bf4ef45290eb7a87c261dac5fc92ecd751a50c82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf4ef45290eb7a87c261dac5fc92ecd751a50c82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d73c92c9f2297c57153beced2475ed79e0d0736b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d73c92c9f2297c57153beced2475ed79e0d0736b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d73c92c9f2297c57153beced2475ed79e0d0736b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d73c92c9f2297c57153beced2475ed79e0d0736b/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aab648a9fcf8c222ab43612915d11b093e11849d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aab648a9fcf8c222ab43612915d11b093e11849d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aab648a9fcf8c222ab43612915d11b093e11849d"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "9b66e887787d1d247f24d9fd4cfbea36a631e5ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d73c92c9f2297c57153beced2475ed79e0d0736b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d73c92c9f2297c57153beced2475ed79e0d0736b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d73c92c9f2297c57153beced2475ed79e0d0736b", "patch": "@@ -1,3 +1,8 @@\n+2016-10-12  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* regrename.c (build_def_use): Invalidate chains that have a\n+\tREG_CFA_RESTORE on some instruction.\n+\n 2016-10-12  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* dce.c (delete_unmarked_insns): Don't delete instructions with"}, {"sha": "e0d2dd1f74c30dd035368ed7d315c3b0cb1b2814", "filename": "gcc/regrename.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d73c92c9f2297c57153beced2475ed79e0d0736b/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d73c92c9f2297c57153beced2475ed79e0d0736b/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=d73c92c9f2297c57153beced2475ed79e0d0736b", "patch": "@@ -1655,6 +1655,7 @@ build_def_use (basic_block bb)\n \t     (6) For any non-earlyclobber write we find in an operand, make\n \t         a new chain or mark the hard register as live.\n \t     (7) For any REG_UNUSED, close any chains we just opened.\n+\t     (8) For any REG_CFA_RESTORE, kill any chain containing it.\n \n \t     We cannot deal with situations where we track a reg in one mode\n \t     and see a reference in another mode; these will cause the chain\n@@ -1867,6 +1868,12 @@ build_def_use (basic_block bb)\n \t\tscan_rtx (insn, &XEXP (note, 0), NO_REGS, terminate_dead,\n \t\t\t  OP_IN);\n \t      }\n+\n+\t  /* Step 8: Kill the chains involving register restores.  Those\n+\t     should restore _that_ register.  */\n+\t  for (note = REG_NOTES (insn); note; note = XEXP (note, 1))\n+\t    if (REG_NOTE_KIND (note) == REG_CFA_RESTORE)\n+\t      scan_rtx (insn, &XEXP (note, 0), NO_REGS, mark_all_read, OP_IN);\n \t}\n       else if (DEBUG_INSN_P (insn)\n \t       && !VAR_LOC_UNKNOWN_P (INSN_VAR_LOCATION_LOC (insn)))"}]}