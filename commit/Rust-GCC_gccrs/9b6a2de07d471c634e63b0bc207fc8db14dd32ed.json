{"sha": "9b6a2de07d471c634e63b0bc207fc8db14dd32ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI2YTJkZTA3ZDQ3MWM2MzRlNjNiMGJjMjA3ZmM4ZGIxNGRkMzJlZA==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-01-07T19:16:21Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-04T09:17:34Z"}, "message": "[Ada] Do not \"optimize\" by converting Positive to Unsigned\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_Concatenate): Remove the non-optimization.", "tree": {"sha": "ec9601324fc5ac2385e970bc1b2913f93f2bd884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec9601324fc5ac2385e970bc1b2913f93f2bd884"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b6a2de07d471c634e63b0bc207fc8db14dd32ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b6a2de07d471c634e63b0bc207fc8db14dd32ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b6a2de07d471c634e63b0bc207fc8db14dd32ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b6a2de07d471c634e63b0bc207fc8db14dd32ed/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d20bab53d067fbcb028acaf0e7cbb97d2cd18acc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d20bab53d067fbcb028acaf0e7cbb97d2cd18acc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d20bab53d067fbcb028acaf0e7cbb97d2cd18acc"}], "stats": {"total": 8, "additions": 0, "deletions": 8}, "files": [{"sha": "a4af950dc0914880ca009c000630c03274d30cce", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6a2de07d471c634e63b0bc207fc8db14dd32ed/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6a2de07d471c634e63b0bc207fc8db14dd32ed/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=9b6a2de07d471c634e63b0bc207fc8db14dd32ed", "patch": "@@ -3025,14 +3025,6 @@ package body Exp_Ch4 is\n       if Is_Enumeration_Type (Ityp) then\n          Artyp := Standard_Integer;\n \n-      --  If index type is Positive, we use the standard unsigned type, to give\n-      --  more room on the top of the range, obviating the need for an overflow\n-      --  check when creating the upper bound. This is needed to avoid junk\n-      --  overflow checks in the common case of String types.\n-\n-      elsif Istyp = Standard_Positive then\n-         Artyp := Standard_Unsigned;\n-\n       --  For modular types, we use a 32-bit modular type for types whose size\n       --  is in the range 1-31 bits. For 32-bit unsigned types, we use the\n       --  identity type, and for larger unsigned types we use a 64-bit type."}]}