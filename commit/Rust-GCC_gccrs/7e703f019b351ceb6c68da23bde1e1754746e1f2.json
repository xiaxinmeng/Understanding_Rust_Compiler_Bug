{"sha": "7e703f019b351ceb6c68da23bde1e1754746e1f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U3MDNmMDE5YjM1MWNlYjZjNjhkYTIzYmRlMWUxNzU0NzQ2ZTFmMg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-03-18T07:28:42Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-03-18T07:28:42Z"}, "message": "re PR fortran/88008 (ICE in check_typebound_baseobject, at fortran/resolve.c:6058)\n\n2019-03-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/88008\n\t* gfortran.h (expr_t): Add EXPR_UNKNOWN.\n\t* expr.c (gfc_copy_expr): Add EXPR_UNKNOWN to switch statement.\n\t(gfc_simplify_expr): Likewise.\n\t* module.c (mio_expr): Likewise.\n\t* resovle.c (extract_compcall_passed_object): Issue error on\n\tunknown type.\n\t(check_typebound_baseobject): Issue error on wrong type.\n\t* trans-expr.c (gfc_apply_interface_mapping_to_expr): Add\n\tEXPR_UNKNOWN to switch statement.\n\n2019-03-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/88008\n\t * gfortran.dg/typebound_call_31.f90: New test.\n\nFrom-SVN: r269750", "tree": {"sha": "eafd6c6ec1a074bc9f6aa628548136aeb7378a6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eafd6c6ec1a074bc9f6aa628548136aeb7378a6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e703f019b351ceb6c68da23bde1e1754746e1f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e703f019b351ceb6c68da23bde1e1754746e1f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e703f019b351ceb6c68da23bde1e1754746e1f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e703f019b351ceb6c68da23bde1e1754746e1f2/comments", "author": null, "committer": null, "parents": [{"sha": "af52cce0afdf36a6ae6472a9f9ed279341f2dc23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af52cce0afdf36a6ae6472a9f9ed279341f2dc23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af52cce0afdf36a6ae6472a9f9ed279341f2dc23"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "8028118c97cef1988a89c554fec871e40831e416", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7e703f019b351ceb6c68da23bde1e1754746e1f2", "patch": "@@ -1,3 +1,16 @@\n+2019-03-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/88008\n+\t* gfortran.h (expr_t): Add EXPR_UNKNOWN.\n+\t* expr.c (gfc_copy_expr): Add EXPR_UNKNOWN to switch statement.\n+\t(gfc_simplify_expr): Likewise.\n+\t* module.c (mio_expr): Likewise.\n+\t* resovle.c (extract_compcall_passed_object): Issue error on\n+\tunknown type.\n+\t(check_typebound_baseobject): Issue error on wrong type.\n+\t* trans-expr.c (gfc_apply_interface_mapping_to_expr): Add\n+\tEXPR_UNKNOWN to switch statement.\n+\n 2019-03-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/89724"}, {"sha": "4c76f539031f5b9fc51dbe924e0bbb43efe58cb9", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=7e703f019b351ceb6c68da23bde1e1754746e1f2", "patch": "@@ -390,6 +390,9 @@ gfc_copy_expr (gfc_expr *p)\n     case EXPR_VARIABLE:\n     case EXPR_NULL:\n       break;\n+\n+    case EXPR_UNKNOWN:\n+      gcc_unreachable ();\n     }\n \n   q->shape = gfc_copy_shape (p->shape, p->rank);\n@@ -2206,6 +2209,9 @@ gfc_simplify_expr (gfc_expr *p, int type)\n     case EXPR_COMPCALL:\n     case EXPR_PPC:\n       break;\n+\n+    case EXPR_UNKNOWN:\n+      gcc_unreachable ();\n     }\n \n   return true;"}, {"sha": "2f55b9c387a6a9fe86374fbcd339f2e58f7807fb", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=7e703f019b351ceb6c68da23bde1e1754746e1f2", "patch": "@@ -142,7 +142,7 @@ enum gfc_source_form\n \n /* Expression node types.  */\n enum expr_t\n-{ EXPR_OP = 1, EXPR_FUNCTION, EXPR_CONSTANT, EXPR_VARIABLE,\n+  { EXPR_UNKNOWN = 0, EXPR_OP = 1, EXPR_FUNCTION, EXPR_CONSTANT, EXPR_VARIABLE,\n   EXPR_SUBSTRING, EXPR_STRUCTURE, EXPR_ARRAY, EXPR_NULL, EXPR_COMPCALL, EXPR_PPC\n };\n "}, {"sha": "0c2699c1260967105bfcea056732904b08f2743a", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=7e703f019b351ceb6c68da23bde1e1754746e1f2", "patch": "@@ -3694,6 +3694,7 @@ mio_expr (gfc_expr **ep)\n \n     case EXPR_COMPCALL:\n     case EXPR_PPC:\n+    case EXPR_UNKNOWN:\n       gcc_unreachable ();\n       break;\n     }"}, {"sha": "7539aa7038c499694a4fb111ecff548c2c7d0744", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=7e703f019b351ceb6c68da23bde1e1754746e1f2", "patch": "@@ -5945,6 +5945,13 @@ extract_compcall_passed_object (gfc_expr* e)\n {\n   gfc_expr* po;\n \n+  if (e->expr_type == EXPR_UNKNOWN)\n+    {\n+      gfc_error (\"Error in typebound call at %L\",\n+\t\t &e->where);\n+      return NULL;\n+    }\n+\n   gcc_assert (e->expr_type == EXPR_COMPCALL);\n \n   if (e->value.compcall.base_object)\n@@ -6090,7 +6097,11 @@ check_typebound_baseobject (gfc_expr* e)\n   if (!base)\n     return false;\n \n-  gcc_assert (base->ts.type == BT_DERIVED || base->ts.type == BT_CLASS);\n+  if (base->ts.type != BT_DERIVED && base->ts.type != BT_CLASS)\n+    {\n+      gfc_error (\"Error in typebound call at %L\", &e->where);\n+      goto cleanup;\n+    }\n \n   if (base->ts.type == BT_CLASS && !gfc_expr_attr (base).class_ok)\n     return false;"}, {"sha": "3cd2ffa722dd2ee097044d158b62b6c3511d183b", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=7e703f019b351ceb6c68da23bde1e1754746e1f2", "patch": "@@ -4536,6 +4536,7 @@ gfc_apply_interface_mapping_to_expr (gfc_interface_mapping * mapping,\n \n     case EXPR_COMPCALL:\n     case EXPR_PPC:\n+    case EXPR_UNKNOWN:\n       gcc_unreachable ();\n       break;\n     }"}, {"sha": "ecb996281674216fdae8bccf4f26074de8a3f6f2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e703f019b351ceb6c68da23bde1e1754746e1f2", "patch": "@@ -1,3 +1,8 @@\n+2019-03-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/88008\n+\t * gfortran.dg/typebound_call_31.f90: New test.\n+\n 2019-03-03-17  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* gcc.dg/compat/pr83487-1_x.c: Use -fno-common option on hppa*-*-hpux*."}, {"sha": "b33bbf1c52f8f75a49f9fec6dc0bae273a01653e", "filename": "gcc/testsuite/gfortran.dg/typebound_call_31.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_31.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e703f019b351ceb6c68da23bde1e1754746e1f2/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_31.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_31.f90?ref=7e703f019b351ceb6c68da23bde1e1754746e1f2", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do compile }\n+! PR 88008 - this use to ICE. Original test case by\n+! Gerhard Steinmetz.\n+\n+module m\n+   type t\n+      integer, pointer :: z\n+   contains\n+      procedure :: g\n+   end type\n+contains\n+   subroutine g(x)\n+      class(t) :: x\n+      call x%z%g()  ! { dg-error \"Error in typebound call\" }\n+   end\n+end"}]}