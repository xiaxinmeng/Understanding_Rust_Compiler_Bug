{"sha": "6d3715b90d7c024028af78b512c6796d3369f705", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQzNzE1YjkwZDdjMDI0MDI4YWY3OGI1MTJjNjc5NmQzMzY5ZjcwNQ==", "commit": {"author": {"name": "Renlin Li", "email": "renlin.li@arm.com", "date": "2014-02-11T15:26:46Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-02-11T15:26:46Z"}, "message": "sourcebuild.texi: Document check_effective_target_arm_vfp3_ok and add_options_for_arm_vfp3.\n\n2014-02-11  Renlin Li  <Renlin.Li@arm.com>\n\n\tgcc/\n\t* doc/sourcebuild.texi: Document check_effective_target_arm_vfp3_ok and\n\tadd_options_for_arm_vfp3.\n\n\tgcc/testsuite/\n\t* gcc.target/arm/fixed_float_conversion.c: Add arm_vfp3 option.\n\t* lib/target-supports.exp (check_effective_target_arm_vfp3_ok): New.\n\t(add_options_for_arm_vfp3): New.\n\nFrom-SVN: r207691", "tree": {"sha": "6b5da49fe04d515d38fa876c2ecfba915aaaa572", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b5da49fe04d515d38fa876c2ecfba915aaaa572"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d3715b90d7c024028af78b512c6796d3369f705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d3715b90d7c024028af78b512c6796d3369f705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d3715b90d7c024028af78b512c6796d3369f705", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d3715b90d7c024028af78b512c6796d3369f705/comments", "author": null, "committer": null, "parents": [{"sha": "cddddfff5b66e27088a746554aaa6f6315022ce8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cddddfff5b66e27088a746554aaa6f6315022ce8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cddddfff5b66e27088a746554aaa6f6315022ce8"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "e425b02682895231a762fbbdb70b7b1427dfc2f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d3715b90d7c024028af78b512c6796d3369f705/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d3715b90d7c024028af78b512c6796d3369f705/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d3715b90d7c024028af78b512c6796d3369f705", "patch": "@@ -1,3 +1,8 @@\n+2014-02-11  Renlin Li  <Renlin.Li@arm.com>\n+\n+\t* doc/sourcebuild.texi: Document check_effective_target_arm_vfp3_ok and\n+\tadd_options_for_arm_vfp3.\n+\n 2014-02-11  Jeff Law  <law@redhat.com>\n \n \tPR middle-end/54041"}, {"sha": "1ea57535e3373f5a6bdc5e926d272bb70ce8762b", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d3715b90d7c024028af78b512c6796d3369f705/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d3715b90d7c024028af78b512c6796d3369f705/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=6d3715b90d7c024028af78b512c6796d3369f705", "patch": "@@ -1551,6 +1551,10 @@ ARM target generates Thumb-2 code for @code{-mthumb}.\n ARM target supports @code{-mfpu=vfp -mfloat-abi=softfp}.\n Some multilibs may be incompatible with these options.\n \n+@item arm_vfp3_ok\n+ARM target supports @code{-mfpu=vfp3 -mfloat-abi=softfp}.\n+Some multilibs may be incompatible with these options.\n+\n @item arm_v8_vfp_ok\n ARM target supports @code{-mfpu=fp-armv8 -mfloat-abi=softfp}.\n Some multilibs may be incompatible with these options.\n@@ -1954,6 +1958,10 @@ NEON and half-precision floating point support.  Only ARM targets\n support this feature, and only then in certain modes; see\n the @ref{arm_neon_ok,,arm_neon_fp16_ok effective target keyword}.\n \n+@item arm_vfp3\n+arm vfp3 floating point support; see\n+the @ref{arm_vfp3_ok,,arm_vfp3_ok effective target keyword}.\n+\n @item bind_pic_locally\n Add the target-specific flags needed to enable functions to bind\n locally when using pic/PIC passes in the testsuite."}, {"sha": "c287b8da7723385e173337c01e2abb10907200ba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d3715b90d7c024028af78b512c6796d3369f705/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d3715b90d7c024028af78b512c6796d3369f705/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d3715b90d7c024028af78b512c6796d3369f705", "patch": "@@ -1,3 +1,9 @@\n+2014-02-11  Renlin Li  <Renlin.Li@arm.com>\n+\n+\t* gcc.target/arm/fixed_float_conversion.c: Add arm_vfp3 option.\n+\t* lib/target-supports.exp (check_effective_target_arm_vfp3_ok): New.\n+\t(add_options_for_arm_vfp3): New.\n+\n 2014-02-11  Jeff Law  <law@redhat.com>\n \n \tPR middle-end/54041"}, {"sha": "078b103745d6b9b7dfb73be22f67041924e64612", "filename": "gcc/testsuite/gcc.target/arm/fixed_float_conversion.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d3715b90d7c024028af78b512c6796d3369f705/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffixed_float_conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d3715b90d7c024028af78b512c6796d3369f705/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffixed_float_conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffixed_float_conversion.c?ref=6d3715b90d7c024028af78b512c6796d3369f705", "patch": "@@ -1,7 +1,8 @@\n /* Check that vcvt is used for fixed and float data conversions.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -mfpu=vfp3\" } */\n-/* { dg-require-effective-target arm_vfp_ok } */\n+/* { dg-require-effective-target arm_vfp3_ok } */\n+/* { dg-options \"-O1\" } */\n+/* { dg-add-options arm_vfp3 } */\n \n float\n fixed_to_float (int i)"}, {"sha": "3a8aa9856c3f68c99a1b6b5035368cc17312d9b4", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d3715b90d7c024028af78b512c6796d3369f705/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d3715b90d7c024028af78b512c6796d3369f705/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=6d3715b90d7c024028af78b512c6796d3369f705", "patch": "@@ -2259,6 +2259,19 @@ proc check_effective_target_arm_vfp_ok { } {\n     }\n }\n \n+# Return 1 if this is an ARM target supporting -mfpu=vfp3\n+# -mfloat-abi=softfp.\n+\n+proc check_effective_target_arm_vfp3_ok { } {\n+    if { [check_effective_target_arm32] } {\n+\treturn [check_no_compiler_messages arm_vfp3_ok object {\n+\t    int dummy;\n+\t} \"-mfpu=vfp3 -mfloat-abi=softfp\"]\n+    } else {\n+\treturn 0\n+    }\n+}\n+\n # Return 1 if this is an ARM target supporting -mfpu=fp-armv8\n # -mfloat-abi=softfp.\n proc check_effective_target_arm_v8_vfp_ok {} {\n@@ -2406,6 +2419,14 @@ proc add_options_for_arm_neonv2 { flags } {\n     return \"$flags $et_arm_neonv2_flags\"\n }\n \n+# Add the options needed for vfp3.\n+proc add_options_for_arm_vfp3 { flags } {\n+    if { ! [check_effective_target_arm_vfp3_ok] } {\n+        return \"$flags\"\n+    }\n+    return \"$flags -mfpu=vfp3 -mfloat-abi=softfp\"\n+}\n+\n # Return 1 if this is an ARM target supporting -mfpu=neon\n # -mfloat-abi=softfp or equivalent options.  Some multilibs may be\n # incompatible with these options.  Also set et_arm_neon_flags to the"}]}