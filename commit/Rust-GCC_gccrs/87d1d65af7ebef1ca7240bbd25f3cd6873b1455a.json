{"sha": "87d1d65af7ebef1ca7240bbd25f3cd6873b1455a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdkMWQ2NWFmN2ViZWYxY2E3MjQwYmJkMjVmM2NkNjg3M2IxNDU1YQ==", "commit": {"author": {"name": "Yury Gribov", "email": "y.gribov@samsung.com", "date": "2014-08-18T08:23:47Z"}, "committer": {"name": "Yury Gribov", "email": "ygribov@gcc.gnu.org", "date": "2014-08-18T08:23:47Z"}, "message": "re PR sanitizer/62089 (Sanitizer may fail to instrument struct accesses)\n\n2014-08-18  Yury Gribov  <y.gribov@samsung.com>\n\n\tPR sanitizer/62089\n\ngcc/\n\t* asan.c (instrument_derefs): Fix bitfield check.\n\ngcc/testsuite/\n\t* c-c++-common/asan/pr62089.c: New test.\n\t* c-c++-common/asan/bitfield-1.c: New test.\n\t* c-c++-common/asan/bitfield-2.c: New test.\n\t* c-c++-common/asan/bitfield-3.c: New test.\n\t* c-c++-common/asan/bitfield-4.c: New test.\n\nFrom-SVN: r214086", "tree": {"sha": "160aeb5c4f22a3043b40b7f8eeebe93c37cac94f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/160aeb5c4f22a3043b40b7f8eeebe93c37cac94f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/comments", "author": null, "committer": null, "parents": [{"sha": "495e77b35b09f0ff8d347bceb06deaa2dc72602b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/495e77b35b09f0ff8d347bceb06deaa2dc72602b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/495e77b35b09f0ff8d347bceb06deaa2dc72602b"}], "stats": {"total": 173, "additions": 161, "deletions": 12}, "files": [{"sha": "a4f386a096a53779e83c3c500d1ae67708f10467", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87d1d65af7ebef1ca7240bbd25f3cd6873b1455a", "patch": "@@ -1,3 +1,8 @@\n+2014-08-18  Yury Gribov  <y.gribov@samsung.com>\n+\n+\tPR sanitizer/62089\n+\t* asan.c (instrument_derefs): Fix bitfield check.\n+\n 2014-08-17  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/constraints.md (\"S\"): Require TARGET_POWERPC64."}, {"sha": "15c073785f944a86498f2618d286474f35ec5d0c", "filename": "gcc/asan.c", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=87d1d65af7ebef1ca7240bbd25f3cd6873b1455a", "patch": "@@ -1690,21 +1690,19 @@ instrument_derefs (gimple_stmt_iterator *iter, tree t,\n   int volatilep = 0, unsignedp = 0;\n   tree inner = get_inner_reference (t, &bitsize, &bitpos, &offset,\n \t\t\t\t    &mode, &unsignedp, &volatilep, false);\n-  if (((size_in_bytes & (size_in_bytes - 1)) == 0\n-       && (bitpos % (size_in_bytes * BITS_PER_UNIT)))\n-      || bitsize != size_in_bytes * BITS_PER_UNIT)\n+\n+  if (TREE_CODE (t) == COMPONENT_REF\n+      && DECL_BIT_FIELD_REPRESENTATIVE (TREE_OPERAND (t, 1)) != NULL_TREE)\n     {\n-      if (TREE_CODE (t) == COMPONENT_REF\n-\t  && DECL_BIT_FIELD_REPRESENTATIVE (TREE_OPERAND (t, 1)) != NULL_TREE)\n-\t{\n-\t  tree repr = DECL_BIT_FIELD_REPRESENTATIVE (TREE_OPERAND (t, 1));\n-\t  instrument_derefs (iter, build3 (COMPONENT_REF, TREE_TYPE (repr),\n-\t\t\t\t\t   TREE_OPERAND (t, 0), repr,\n-\t\t\t\t\t   NULL_TREE), location, is_store);\n-\t}\n+      tree repr = DECL_BIT_FIELD_REPRESENTATIVE (TREE_OPERAND (t, 1));\n+      instrument_derefs (iter, build3 (COMPONENT_REF, TREE_TYPE (repr),\n+\t\t\t\t       TREE_OPERAND (t, 0), repr,\n+\t\t\t\t       NULL_TREE), location, is_store);\n       return;\n     }\n-  if (bitpos % BITS_PER_UNIT)\n+\n+  if (bitpos % BITS_PER_UNIT\n+      || bitsize != size_in_bytes * BITS_PER_UNIT)\n     return;\n \n   if (TREE_CODE (inner) == VAR_DECL"}, {"sha": "d3781693b4616e79b0fa6765af71d476deccc7a5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=87d1d65af7ebef1ca7240bbd25f3cd6873b1455a", "patch": "@@ -1,3 +1,12 @@\n+2014-08-18  Yury Gribov  <y.gribov@samsung.com>\n+\n+\tPR sanitizer/62089\n+\t* c-c++-common/asan/pr62089.c: New test.\n+\t* c-c++-common/asan/bitfield-1.c: New test.\n+\t* c-c++-common/asan/bitfield-2.c: New test.\n+\t* c-c++-common/asan/bitfield-3.c: New test.\n+\t* c-c++-common/asan/bitfield-4.c: New test.\n+\n 2014-08-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR tree-optimization/52904"}, {"sha": "b3f300c6484ac39fc6c400d3d92ccd5f4a4d0285", "filename": "gcc/testsuite/c-c++-common/asan/bitfield-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fbitfield-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fbitfield-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fbitfield-1.c?ref=87d1d65af7ebef1ca7240bbd25f3cd6873b1455a", "patch": "@@ -0,0 +1,25 @@\n+/* Check that Asan correctly instruments bitfields with non-round size.  */\n+\n+/* { dg-do run } */\n+/* { dg-shouldfail \"asan\" } */\n+\n+struct A\n+{\n+  char base;\n+  int : 4;\n+  long x : 7;\n+};\n+\n+int __attribute__ ((noinline, noclone))\n+f (void *p) {\n+  return ((struct A *)p)->x;\n+}\n+\n+int\n+main ()\n+{\n+  char a = 0;\n+  return f (&a);\n+}\n+\n+/* { dg-output \"ERROR: AddressSanitizer: stack-buffer-overflow\" } */"}, {"sha": "8ab0f8069f376f1b82e87fe6fea6e2be547f7ab2", "filename": "gcc/testsuite/c-c++-common/asan/bitfield-2.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fbitfield-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fbitfield-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fbitfield-2.c?ref=87d1d65af7ebef1ca7240bbd25f3cd6873b1455a", "patch": "@@ -0,0 +1,25 @@\n+/* Check that Asan correctly instruments bitfields with non-round offset.  */\n+\n+/* { dg-do run } */\n+/* { dg-shouldfail \"asan\" } */\n+\n+struct A\n+{\n+  char base;\n+  int : 7;\n+  int x : 8;\n+};\n+\n+int __attribute__ ((noinline, noclone))\n+f (void *p) {\n+  return ((struct A *)p)->x;\n+}\n+\n+int\n+main ()\n+{\n+  char a = 0;\n+  return f (&a);\n+}\n+\n+/* { dg-output \"ERROR: AddressSanitizer: stack-buffer-overflow\" } */"}, {"sha": "c5907786f76b80d83546269c341ab973e8d24b53", "filename": "gcc/testsuite/c-c++-common/asan/bitfield-3.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fbitfield-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fbitfield-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fbitfield-3.c?ref=87d1d65af7ebef1ca7240bbd25f3cd6873b1455a", "patch": "@@ -0,0 +1,25 @@\n+/* Check that Asan correctly instruments bitfields with round offset.  */\n+\n+/* { dg-do run } */\n+/* { dg-shouldfail \"asan\" } */\n+\n+struct A\n+{\n+  char base;\n+  int : 8;\n+  int x : 8;\n+};\n+\n+int __attribute__ ((noinline, noclone))\n+f (void *p) {\n+  return ((struct A *)p)->x;\n+}\n+\n+int\n+main ()\n+{\n+  char a = 0;\n+  return f (&a);\n+}\n+\n+/* { dg-output \"ERROR: AddressSanitizer: stack-buffer-overflow\" } */"}, {"sha": "94de9a4376c45b3f490c99c36624c417489ebd35", "filename": "gcc/testsuite/c-c++-common/asan/bitfield-4.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fbitfield-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fbitfield-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fbitfield-4.c?ref=87d1d65af7ebef1ca7240bbd25f3cd6873b1455a", "patch": "@@ -0,0 +1,25 @@\n+/* Check that Asan correctly instruments bitfields with round offset.  */\n+\n+/* { dg-do run } */\n+/* { dg-shouldfail \"asan\" } */\n+\n+struct A\n+{\n+  char base;\n+  int : 0;\n+  int x : 8;\n+};\n+\n+int __attribute__ ((noinline, noclone))\n+f (void *p) {\n+  return ((struct A *)p)->x;\n+}\n+\n+int\n+main ()\n+{\n+  char a = 0;\n+  return f (&a);\n+}\n+\n+/* { dg-output \"ERROR: AddressSanitizer: stack-buffer-overflow\" } */"}, {"sha": "22b877b4c5bd45e4d3ad5285fe1b1bc73bdb34e4", "filename": "gcc/testsuite/c-c++-common/asan/pr62089.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr62089.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d1d65af7ebef1ca7240bbd25f3cd6873b1455a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr62089.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr62089.c?ref=87d1d65af7ebef1ca7240bbd25f3cd6873b1455a", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-shouldfail \"asan\" } */\n+\n+#include <sanitizer/asan_interface.h>\n+\n+struct vfsmount {};\n+struct dentry {};\n+\n+struct path {\n+  struct vfsmount *mnt;\n+  struct dentry *dentry;\n+};\n+\n+struct fs_struct {\n+  int users;\n+  int lock;\n+  int seq;\n+  int umask;\n+  int in_exec;\n+  struct path root, pwd;\n+};\n+\n+void __attribute__((noinline, noclone))\n+copy_fs_struct(struct fs_struct *a, struct fs_struct *b) {\n+  a->root = b->root;\n+}\n+\n+struct fs_struct a, b;\n+\n+int\n+main () {\n+  __asan_poison_memory_region (&a.root, sizeof (a.root));\n+  copy_fs_struct (&a, &b);\n+  return 0;\n+}\n+\n+/* { dg-output \"ERROR: AddressSanitizer: use-after-poison\" } */"}]}