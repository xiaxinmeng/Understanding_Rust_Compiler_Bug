{"sha": "dee75828b49690e14b12b949d07826774a023cfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVlNzU4MjhiNDk2OTBlMTRiMTJiOTQ5ZDA3ODI2Nzc0YTAyM2NmZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-12-10T13:56:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-12-10T13:56:51Z"}, "message": "re PR tree-optimization/88427 (ICE: tree check: expected integer_cst, have plus_expr in get_len, at tree.h:5617)\n\n2018-12-10  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/88427\n\t* vr-values.c (vr_values::extract_range_from_phi_node):\n\tHandle symbolic ranges conservatively when trying to drop\n\tto Inf +- 1.\n\n\t* gcc.dg/pr88427.c: New testcase.\n\nFrom-SVN: r266955", "tree": {"sha": "4855c8f6d1c205d85e4e598d58c84ed0cbcaf23b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4855c8f6d1c205d85e4e598d58c84ed0cbcaf23b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dee75828b49690e14b12b949d07826774a023cfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dee75828b49690e14b12b949d07826774a023cfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dee75828b49690e14b12b949d07826774a023cfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dee75828b49690e14b12b949d07826774a023cfd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a902ec80fd0be5d102dc0cc781a651b3e59b91c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a902ec80fd0be5d102dc0cc781a651b3e59b91c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a902ec80fd0be5d102dc0cc781a651b3e59b91c"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "e91b1f93e7e6aefd2ab75ac57d5998443985ee45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dee75828b49690e14b12b949d07826774a023cfd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dee75828b49690e14b12b949d07826774a023cfd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dee75828b49690e14b12b949d07826774a023cfd", "patch": "@@ -1,3 +1,10 @@\n+2018-12-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88427\n+\t* vr-values.c (vr_values::extract_range_from_phi_node):\n+\tHandle symbolic ranges conservatively when trying to drop\n+\tto Inf +- 1.\n+\n 2018-12-10  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/88214"}, {"sha": "2d5b36614dc0ffb4273539d1da3ac06a099c750f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dee75828b49690e14b12b949d07826774a023cfd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dee75828b49690e14b12b949d07826774a023cfd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dee75828b49690e14b12b949d07826774a023cfd", "patch": "@@ -1,3 +1,8 @@\n+2018-12-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88427\n+\t* gcc.dg/pr88427.c: New testcase.\n+\n 2018-12-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR ipa/87955"}, {"sha": "60b179c671ba2d46a264b85b15fdd35cb87d0301", "filename": "gcc/testsuite/gcc.dg/pr88427.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dee75828b49690e14b12b949d07826774a023cfd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88427.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dee75828b49690e14b12b949d07826774a023cfd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88427.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88427.c?ref=dee75828b49690e14b12b949d07826774a023cfd", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-dce -fno-tree-fre -Wno-div-by-zero\" } */\n+\n+void\n+uj (int eq, int s4)\n+{\n+  short int tm = 0;\n+\n+  for (;;)\n+    if (eq == s4)\n+      {\n+\ttm += !!s4;\n+\tif (tm == s4)\n+\t  {\n+\t    eq += tm;\n+\t    for (;;)\n+\t      eq /= 0;\n+\t  }\n+      }\n+}"}, {"sha": "cbc759a18e6af0843c8cc67975ab0ff37006a2f6", "filename": "gcc/vr-values.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dee75828b49690e14b12b949d07826774a023cfd/gcc%2Fvr-values.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dee75828b49690e14b12b949d07826774a023cfd/gcc%2Fvr-values.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvr-values.c?ref=dee75828b49690e14b12b949d07826774a023cfd", "patch": "@@ -2891,8 +2891,9 @@ vr_values::extract_range_from_phi_node (gphi *phi, value_range *vr_result)\n       if (cmp_min < 0)\n \tnew_min = lhs_vr->min ();\n       else if (cmp_min > 0\n-\t       && tree_int_cst_lt (vrp_val_min (vr_result->type ()),\n-\t\t\t\t   vr_result->min ()))\n+\t       && (TREE_CODE (vr_result->min ()) != INTEGER_CST\n+\t\t   || tree_int_cst_lt (vrp_val_min (vr_result->type ()),\n+\t\t\t\t       vr_result->min ())))\n \tnew_min = int_const_binop (PLUS_EXPR,\n \t\t\t\t   vrp_val_min (vr_result->type ()),\n \t\t\t\t   build_int_cst (vr_result->type (), 1));\n@@ -2901,8 +2902,9 @@ vr_values::extract_range_from_phi_node (gphi *phi, value_range *vr_result)\n       if (cmp_max > 0)\n \tnew_max = lhs_vr->max ();\n       else if (cmp_max < 0\n-\t       && tree_int_cst_lt (vr_result->max (),\n-\t\t\t\t   vrp_val_max (vr_result->type ())))\n+\t       && (TREE_CODE (vr_result->max ()) != INTEGER_CST\n+\t\t   || tree_int_cst_lt (vr_result->max (),\n+\t\t\t\t       vrp_val_max (vr_result->type ()))))\n \tnew_max = int_const_binop (MINUS_EXPR,\n \t\t\t\t   vrp_val_max (vr_result->type ()),\n \t\t\t\t   build_int_cst (vr_result->type (), 1));"}]}