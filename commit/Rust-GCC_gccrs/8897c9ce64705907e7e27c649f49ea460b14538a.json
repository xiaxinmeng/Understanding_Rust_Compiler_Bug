{"sha": "8897c9ce64705907e7e27c649f49ea460b14538a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg5N2M5Y2U2NDcwNTkwN2U3ZTI3YzY0OWY0OWVhNDYwYjE0NTM4YQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-10-09T00:44:46Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-10-09T00:44:46Z"}, "message": "builtins.c (fold_call_stmt): Don't copy gimple call arguments into a temporary array.\n\n\t* builtins.c (fold_call_stmt): Don't copy gimple call arguments\n\tinto a temporary array.\n\nFrom-SVN: r165213", "tree": {"sha": "7c194c8538b6c75a36092e6f52f7bbec37a4a7b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c194c8538b6c75a36092e6f52f7bbec37a4a7b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8897c9ce64705907e7e27c649f49ea460b14538a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8897c9ce64705907e7e27c649f49ea460b14538a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8897c9ce64705907e7e27c649f49ea460b14538a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8897c9ce64705907e7e27c649f49ea460b14538a/comments", "author": null, "committer": null, "parents": [{"sha": "5bdf87425600957aed8c6b02ac7289ef6abd203a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bdf87425600957aed8c6b02ac7289ef6abd203a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bdf87425600957aed8c6b02ac7289ef6abd203a"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "a560cc701b3fb6a4578e725f5a661ad25b527368", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8897c9ce64705907e7e27c649f49ea460b14538a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8897c9ce64705907e7e27c649f49ea460b14538a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8897c9ce64705907e7e27c649f49ea460b14538a", "patch": "@@ -1,3 +1,8 @@\n+2010-10-08  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* builtins.c (fold_call_stmt): Don't copy gimple call arguments\n+\tinto a temporary array.\n+\n 2010-10-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/45903"}, {"sha": "1764cb445663def83eafa7a482212f522e7e95df", "filename": "gcc/builtins.c", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8897c9ce64705907e7e27c649f49ea460b14538a/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8897c9ce64705907e7e27c649f49ea460b14538a/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=8897c9ce64705907e7e27c649f49ea460b14538a", "patch": "@@ -13627,26 +13627,20 @@ fold_call_stmt (gimple stmt, bool ignore)\n       && !gimple_call_va_arg_pack_p (stmt))\n     {\n       int nargs = gimple_call_num_args (stmt);\n+      tree *args = (nargs > 0\n+\t\t    ? gimple_call_arg_ptr (stmt, 0)\n+\t\t    : &error_mark_node);\n \n       if (avoid_folding_inline_builtin (fndecl))\n \treturn NULL_TREE;\n       if (DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_MD)\n         {\n-\t  return targetm.fold_builtin (fndecl, nargs,\n-\t\t\t\t       (nargs > 0\n-\t\t\t\t\t? gimple_call_arg_ptr (stmt, 0)\n-\t\t\t\t\t: &error_mark_node), ignore);\n+\t  return targetm.fold_builtin (fndecl, nargs, args, ignore);\n         }\n       else\n \t{\n \t  if (nargs <= MAX_ARGS_TO_FOLD_BUILTIN)\n-\t    {\n-              tree args[MAX_ARGS_TO_FOLD_BUILTIN];\n-              int i;\n-              for (i = 0; i < nargs; i++)\n-                args[i] = gimple_call_arg (stmt, i);\n-\t      ret = fold_builtin_n (loc, fndecl, args, nargs, ignore);\n-\t    }\n+\t    ret = fold_builtin_n (loc, fndecl, args, nargs, ignore);\n \t  if (!ret)\n \t    ret = gimple_fold_builtin_varargs (fndecl, stmt, ignore);\n \t  if (ret)"}]}