{"sha": "79bed25b2337df900dfa4d145883777112a0ee58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzliZWQyNWIyMzM3ZGY5MDBkZmE0ZDE0NTg4Mzc3NzExMmEwZWU1OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-05-05T12:51:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-05-05T12:51:36Z"}, "message": "tree-ssa-pre.c (get_or_alloc_expr_for): Simplify.\n\n2017-05-05  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-pre.c (get_or_alloc_expr_for): Simplify.\n\nFrom-SVN: r247634", "tree": {"sha": "323230317832b198b2c353af25b6041e18747e0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/323230317832b198b2c353af25b6041e18747e0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79bed25b2337df900dfa4d145883777112a0ee58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79bed25b2337df900dfa4d145883777112a0ee58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79bed25b2337df900dfa4d145883777112a0ee58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79bed25b2337df900dfa4d145883777112a0ee58/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3031802941cd7d20148b5992e7ca0ceca87ed2e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3031802941cd7d20148b5992e7ca0ceca87ed2e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3031802941cd7d20148b5992e7ca0ceca87ed2e9"}], "stats": {"total": 30, "additions": 5, "deletions": 25}, "files": [{"sha": "7bc32a9cb5a219eacf0a2502449a20f34846de2b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79bed25b2337df900dfa4d145883777112a0ee58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79bed25b2337df900dfa4d145883777112a0ee58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79bed25b2337df900dfa4d145883777112a0ee58", "patch": "@@ -1,3 +1,7 @@\n+2017-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-pre.c (get_or_alloc_expr_for): Simplify.\n+\n 2017-05-05  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.md [flag_strict_overflow]: Remove any occurence"}, {"sha": "b01fa8ada48df26045ffd621fcd7213a923b27ca", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79bed25b2337df900dfa4d145883777112a0ee58/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79bed25b2337df900dfa4d145883777112a0ee58/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=79bed25b2337df900dfa4d145883777112a0ee58", "patch": "@@ -1173,31 +1173,7 @@ get_or_alloc_expr_for (tree t)\n     return get_or_alloc_expr_for_name (t);\n   else if (is_gimple_min_invariant (t))\n     return get_or_alloc_expr_for_constant (t);\n-  else\n-    {\n-      /* More complex expressions can result from SCCVN expression\n-\t simplification that inserts values for them.  As they all\n-\t do not have VOPs the get handled by the nary ops struct.  */\n-      vn_nary_op_t result;\n-      unsigned int result_id;\n-      vn_nary_op_lookup (t, &result);\n-      if (result != NULL)\n-\t{\n-\t  pre_expr e = pre_expr_pool.allocate ();\n-\t  e->kind = NARY;\n-\t  PRE_EXPR_NARY (e) = result;\n-\t  result_id = lookup_expression_id (e);\n-\t  if (result_id != 0)\n-\t    {\n-\t      pre_expr_pool.remove (e);\n-\t      e = expression_for_id (result_id);\n-\t      return e;\n-\t    }\n-\t  alloc_expression_id (e);\n-\t  return e;\n-\t}\n-    }\n-  return NULL;\n+  gcc_unreachable ();\n }\n \n /* Return the folded version of T if T, when folded, is a gimple"}]}