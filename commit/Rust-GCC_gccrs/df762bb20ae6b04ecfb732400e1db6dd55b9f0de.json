{"sha": "df762bb20ae6b04ecfb732400e1db6dd55b9f0de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY3NjJiYjIwYWU2YjA0ZWNmYjczMjQwMGUxZGI2ZGQ1NWI5ZjBkZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-05T06:50:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-05T06:50:23Z"}, "message": "re PR c++/70084 (va_arg ((ap), int) regression on s390*-*)\n\n\tPR c++/70084\n\t* tree-inline.c (copy_tree_body_r): When cancelling ADDR_EXPR\n\tof INDIRECT_REF and ADDR_EXPR changed type, fold_convert it\n\tto the right type.\n\n\t* g++.dg/expr/stdarg3.C: New test.\n\nFrom-SVN: r234004", "tree": {"sha": "04ee91462eeefafc7e167012c44ecd0480dfa81a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04ee91462eeefafc7e167012c44ecd0480dfa81a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df762bb20ae6b04ecfb732400e1db6dd55b9f0de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df762bb20ae6b04ecfb732400e1db6dd55b9f0de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df762bb20ae6b04ecfb732400e1db6dd55b9f0de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df762bb20ae6b04ecfb732400e1db6dd55b9f0de/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d461295b8416387baf6875ab975d5a000299662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d461295b8416387baf6875ab975d5a000299662", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d461295b8416387baf6875ab975d5a000299662"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "1c775b255a6abbdd87f8a06dc1d1d13a417e48e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df762bb20ae6b04ecfb732400e1db6dd55b9f0de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df762bb20ae6b04ecfb732400e1db6dd55b9f0de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df762bb20ae6b04ecfb732400e1db6dd55b9f0de", "patch": "@@ -1,3 +1,10 @@\n+2016-03-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/70084\n+\t* tree-inline.c (copy_tree_body_r): When cancelling ADDR_EXPR\n+\tof INDIRECT_REF and ADDR_EXPR changed type, fold_convert it\n+\tto the right type.\n+\n 2016-03-04  Bernd Schmidt  <bschmidt@redhat.com>\n \n \tPR c/69973"}, {"sha": "808b0c8c31fcb0ff9e34bd9db519a3278bab05a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df762bb20ae6b04ecfb732400e1db6dd55b9f0de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df762bb20ae6b04ecfb732400e1db6dd55b9f0de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=df762bb20ae6b04ecfb732400e1db6dd55b9f0de", "patch": "@@ -1,3 +1,8 @@\n+2016-03-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/70084\n+\t* g++.dg/expr/stdarg3.C: New test.\n+\n 2016-03-04  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/69196"}, {"sha": "97aade00e040a4a0c052be79253eecf552fd7757", "filename": "gcc/testsuite/g++.dg/expr/stdarg3.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df762bb20ae6b04ecfb732400e1db6dd55b9f0de/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fstdarg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df762bb20ae6b04ecfb732400e1db6dd55b9f0de/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fstdarg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fstdarg3.C?ref=df762bb20ae6b04ecfb732400e1db6dd55b9f0de", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/70084\n+// { dg-do compile }\n+\n+#include <stdarg.h>\n+\n+struct A\n+{\n+  A (const char *f, ...);\n+};\n+\n+A::A (const char *f, ...)\n+{\n+  va_list ap;\n+  va_start (ap, f);\n+  int i = va_arg (ap, int);\t// { dg-bogus \"first argument to 'va_arg' not of type 'va_list'\" }\n+  int j = va_arg ((ap), int);\t// { dg-bogus \"first argument to 'va_arg' not of type 'va_list'\" }\n+  va_end (ap);\n+}"}, {"sha": "d52e0c6e20275c42018fc9b7a02e884476cc1edb", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df762bb20ae6b04ecfb732400e1db6dd55b9f0de/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df762bb20ae6b04ecfb732400e1db6dd55b9f0de/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=df762bb20ae6b04ecfb732400e1db6dd55b9f0de", "patch": "@@ -1266,7 +1266,12 @@ copy_tree_body_r (tree *tp, int *walk_subtrees, void *data)\n \t  /* Handle the case where we substituted an INDIRECT_REF\n \t     into the operand of the ADDR_EXPR.  */\n \t  if (TREE_CODE (TREE_OPERAND (*tp, 0)) == INDIRECT_REF)\n-\t    *tp = TREE_OPERAND (TREE_OPERAND (*tp, 0), 0);\n+\t    {\n+\t      tree t = TREE_OPERAND (TREE_OPERAND (*tp, 0), 0);\n+\t      if (TREE_TYPE (t) != TREE_TYPE (*tp))\n+\t\tt = fold_convert (remap_type (TREE_TYPE (*tp), id), t);\n+\t      *tp = t;\n+\t    }\n \t  else\n \t    recompute_tree_invariant_for_addr_expr (*tp);\n "}]}