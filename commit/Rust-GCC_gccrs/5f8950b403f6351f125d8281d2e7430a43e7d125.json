{"sha": "5f8950b403f6351f125d8281d2e7430a43e7d125", "node_id": "C_kwDOANBUbNoAKDVmODk1MGI0MDNmNjM1MWYxMjVkODI4MWQyZTc0MzBhNDNlN2QxMjU", "commit": {"author": {"name": "Flavio Cruz", "email": "flaviocruz@gmail.com", "date": "2023-01-27T03:45:27Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-01-30T15:34:48Z"}, "message": "Add support for x86_64-*-gnu-* targets to build x86_64 gnumach/hurd\n\nTested by building a toolchain and compiling gnumach for x86_64 [1].\nThis is the basic version without unwind support which I think is only\nrequired to implement exceptions.\n\n[1]\nhttps://github.com/flavioc/cross-hurd/blob/master/bootstrap-kernel.sh.\n\ngcc/ChangeLog:\n\t* config.gcc: Recognize x86_64-*-gnu* targets and include\n\ti386/gnu64.h.\n\t* config/i386/gnu64.h: Define configuration for new target\n\tincluding ld.so location.\n\nlibgcc/ChangeLog:\n\t* config.host: Recognize x86_64-*-gnu* targets.\n\t* config/i386/gnu-unwind.h: Update to handle __x86_64__ with a\n\tTODO for now.\n\nSigned-off-by: Flavio Cruz <flaviocruz@gmail.com>", "tree": {"sha": "07433f65baa97123d09a1df5d9beab048327de92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07433f65baa97123d09a1df5d9beab048327de92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f8950b403f6351f125d8281d2e7430a43e7d125", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8950b403f6351f125d8281d2e7430a43e7d125", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f8950b403f6351f125d8281d2e7430a43e7d125", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8950b403f6351f125d8281d2e7430a43e7d125/comments", "author": {"login": "flavioc", "id": 21938, "node_id": "MDQ6VXNlcjIxOTM4", "avatar_url": "https://avatars.githubusercontent.com/u/21938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flavioc", "html_url": "https://github.com/flavioc", "followers_url": "https://api.github.com/users/flavioc/followers", "following_url": "https://api.github.com/users/flavioc/following{/other_user}", "gists_url": "https://api.github.com/users/flavioc/gists{/gist_id}", "starred_url": "https://api.github.com/users/flavioc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flavioc/subscriptions", "organizations_url": "https://api.github.com/users/flavioc/orgs", "repos_url": "https://api.github.com/users/flavioc/repos", "events_url": "https://api.github.com/users/flavioc/events{/privacy}", "received_events_url": "https://api.github.com/users/flavioc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1472ba52f3f94a626b62a93a1dc44ca448555ef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1472ba52f3f94a626b62a93a1dc44ca448555ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1472ba52f3f94a626b62a93a1dc44ca448555ef8"}], "stats": {"total": 63, "additions": 61, "deletions": 2}, "files": [{"sha": "f0958e1c959d89f015cffb754dae61b4a3ae886f", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8950b403f6351f125d8281d2e7430a43e7d125/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8950b403f6351f125d8281d2e7430a43e7d125/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=5f8950b403f6351f125d8281d2e7430a43e7d125", "patch": "@@ -1971,7 +1971,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-gnu* | i[34567]8\n \t\t;;\n \tesac\n \t;;\n-x86_64-*-linux* | x86_64-*-kfreebsd*-gnu)\n+x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-gnu*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h gnu-user.h glibc-stdint.h \\\n \t\t i386/x86-64.h i386/gnu-user-common.h i386/gnu-user64.h\"\n \tcase ${target} in\n@@ -1982,6 +1982,9 @@ x86_64-*-linux* | x86_64-*-kfreebsd*-gnu)\n \tx86_64-*-kfreebsd*-gnu)\n \t\ttm_file=\"${tm_file} kfreebsd-gnu.h i386/kfreebsd-gnu64.h\"\n \t\t;;\n+\tx86_64-*-gnu*)\n+\t\ttm_file=\"${tm_file} gnu.h i386/gnu64.h\"\n+\t\t;;\n \tesac\n \ttmake_file=\"${tmake_file} i386/t-linux64\"\n \tx86_multilibs=\"${with_multilib_list}\""}, {"sha": "a411f0e802a9bdc4df1d86324cdd5016e7e80300", "filename": "gcc/config/i386/gnu64.h", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8950b403f6351f125d8281d2e7430a43e7d125/gcc%2Fconfig%2Fi386%2Fgnu64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8950b403f6351f125d8281d2e7430a43e7d125/gcc%2Fconfig%2Fi386%2Fgnu64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu64.h?ref=5f8950b403f6351f125d8281d2e7430a43e7d125", "patch": "@@ -0,0 +1,40 @@\n+/* Configuration for an x86_64 running GNU with ELF as the target machine.  */\n+\n+/*\n+Copyright (C) 2023 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software: you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation, either version 3 of the License, or\n+(at your option) any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC.  If not, see <http://www.gnu.org/licenses/>.\n+*/\n+\n+#define GNU_USER_LINK_EMULATION32 \"elf_i386\"\n+#define GNU_USER_LINK_EMULATION64 \"elf_x86_64\"\n+#define GNU_USER_LINK_EMULATIONX32 \"elf32_x86_64\"\n+\n+#undef GNU_USER_DYNAMIC_LINKER\n+#define GNU_USER_DYNAMIC_LINKER32 \"/lib/ld.so.1\"\n+#define GNU_USER_DYNAMIC_LINKER64 \"/lib/ld-x86-64.so.1\"\n+#define GNU_USER_DYNAMIC_LINKERX32 \"/lib/ld-x32.so.1\"\n+\n+#undef\tSTARTFILE_SPEC\n+#if defined HAVE_LD_PIE\n+#define STARTFILE_SPEC \\\n+  \"%{!shared: %{pg|p|profile:%{static:gcrt0.o%s;:gcrt1.o%s};pie:Scrt1.o%s;static:crt0.o%s;:crt1.o%s}} \\\n+   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n+#else\n+#define STARTFILE_SPEC \\\n+  \"%{!shared: %{pg|p|profile:%{static:gcrt0.o%s;:gcrt1.o%s};static:crt0.o%s;:crt1.o%s}} \\\n+   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n+#endif"}, {"sha": "70d47e08e40458a7a96d73ed492f43dcf82702f1", "filename": "libgcc/config.host", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8950b403f6351f125d8281d2e7430a43e7d125/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8950b403f6351f125d8281d2e7430a43e7d125/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=5f8950b403f6351f125d8281d2e7430a43e7d125", "patch": "@@ -751,6 +751,12 @@ x86_64-*-kfreebsd*-gnu)\n \ttmake_file=\"${tmake_file} i386/t-crtpc t-crtfm i386/t-crtstuff t-dfprules\"\n \ttm_file=\"${tm_file} i386/elf-lib.h\"\n \t;;\n+x86_64-*-gnu*)\n+\textra_parts=\"$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o\"\n+\ttmake_file=\"${tmake_file} i386/t-crtpc t-crtfm i386/t-crtstuff t-dfprules\"\n+\ttm_file=\"${tm_file} i386/elf-lib.h\"\n+\tmd_unwind_header=i386/gnu-unwind.h\n+\t;;\n i[34567]86-pc-msdosdjgpp*)\n \t;;\n i[34567]86-*-lynxos*)\n@@ -1523,7 +1529,7 @@ esac\n case ${host} in\n i[34567]86-*-linux* | x86_64-*-linux* | \\\n   i[34567]86-*-kfreebsd*-gnu | x86_64-*-kfreebsd*-gnu | \\\n-  i[34567]86-*-gnu*)\n+  i[34567]86-*-gnu* | x86_64-*-gnu*)\n \ttmake_file=\"${tmake_file} t-tls i386/t-linux i386/t-msabi t-slibgcc-libgcc\"\n \tif test \"$libgcc_cv_cfi\" = \"yes\"; then\n \t\ttmake_file=\"${tmake_file} t-stack i386/t-stack-i386\""}, {"sha": "85aa2d61b639ecfdc09df1176af9f12dd26c6276", "filename": "libgcc/config/i386/gnu-unwind.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8950b403f6351f125d8281d2e7430a43e7d125/libgcc%2Fconfig%2Fi386%2Fgnu-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8950b403f6351f125d8281d2e7430a43e7d125/libgcc%2Fconfig%2Fi386%2Fgnu-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fgnu-unwind.h?ref=5f8950b403f6351f125d8281d2e7430a43e7d125", "patch": "@@ -30,6 +30,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #include <signal.h>\n \n+#ifdef __x86_64__\n+\n+/*\n+ * TODO: support for 64 bits needs to be implemented.\n+ */\n+\n+#else /* ifdef __x86_64__  */\n+\n #define MD_FALLBACK_FRAME_STATE_FOR x86_gnu_fallback_frame_state\n \n static _Unwind_Reason_Code\n@@ -138,4 +146,6 @@ x86_gnu_fallback_frame_state\n   return _URC_NO_REASON;\n }\n \n+#endif /* ifdef __x86_64__  */\n+\n #endif /* ifndef inhibit_libc */"}]}