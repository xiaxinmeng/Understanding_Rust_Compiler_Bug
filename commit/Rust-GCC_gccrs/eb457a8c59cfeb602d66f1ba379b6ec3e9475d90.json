{"sha": "eb457a8c59cfeb602d66f1ba379b6ec3e9475d90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI0NTdhOGM1OWNmZWI2MDJkNjZmMWJhMzc5YjZlYzNlOTQ3NWQ5MA==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2015-12-09T02:59:05Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2015-12-09T02:59:05Z"}, "message": "rx.opt (-mjsr): Add.\n\n* config/rx/rx.opt (-mjsr): Add.\n* config/rx/predicates.md (rx_call_operand): Avoid overflowing\ncalls when -mjsr.\n* config/rx/rx.c (rx_function_ok_for_sibcall): Likewise for\noverflowing jumps.\n* doc/invoke.texi (-mjsr): Document it.\n\nFrom-SVN: r231439", "tree": {"sha": "2746026609721700402925e8fdc8815c905a67a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2746026609721700402925e8fdc8815c905a67a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90/comments", "author": null, "committer": null, "parents": [{"sha": "6b9ac1796ec8eed79e8d5e4ef03a347a6c86a25c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b9ac1796ec8eed79e8d5e4ef03a347a6c86a25c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b9ac1796ec8eed79e8d5e4ef03a347a6c86a25c"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "cc95209eba9bfca7d12f9d1d2cd112041bfa3124", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb457a8c59cfeb602d66f1ba379b6ec3e9475d90", "patch": "@@ -1,3 +1,12 @@\n+2015-12-08  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/rx/rx.opt (-mjsr): Add.\n+\t* config/rx/predicates.md (rx_call_operand): Avoid overflowing\n+\tcalls when -mjsr.\n+\t* config/rx/rx.c (rx_function_ok_for_sibcall): Likewise for\n+\toverflowing jumps.\n+\t* doc/invoke.texi (-mjsr): Document it.\n+\n 2015-12-08  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/61886"}, {"sha": "26667cfda05aca21b61be54447f5c170e77d3359", "filename": "gcc/config/rx/predicates.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90/gcc%2Fconfig%2Frx%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90/gcc%2Fconfig%2Frx%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Fpredicates.md?ref=eb457a8c59cfeb602d66f1ba379b6ec3e9475d90", "patch": "@@ -24,7 +24,9 @@\n ;; Only registers and symbol refs are allowed.\n \n (define_predicate \"rx_call_operand\"\n-  (match_code \"symbol_ref,reg\")\n+  (ior (match_code \"reg\")\n+       (and (match_test \"!TARGET_JSR\")\n+\t    (match_code \"symbol_ref\")))\n )\n \n ;; For sibcall operations we can only use a symbolic address."}, {"sha": "781b6b1b2b1f85db1d8475fd23f5aaa37a1d2eab", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=eb457a8c59cfeb602d66f1ba379b6ec3e9475d90", "patch": "@@ -2857,6 +2857,9 @@ rx_warn_func_return (tree decl)\n static bool\n rx_function_ok_for_sibcall (tree decl, tree exp ATTRIBUTE_UNUSED)\n {\n+  if (TARGET_JSR)\n+    return false;\n+\n   /* Do not allow indirect tailcalls.  The\n      sibcall patterns do not support them.  */\n   if (decl == NULL)"}, {"sha": "56e8adf3f5cedf881487152f93b1008aeefd5e74", "filename": "gcc/config/rx/rx.opt", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90/gcc%2Fconfig%2Frx%2Frx.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90/gcc%2Fconfig%2Frx%2Frx.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.opt?ref=eb457a8c59cfeb602d66f1ba379b6ec3e9475d90", "patch": "@@ -149,3 +149,9 @@ Enable the use of the LRA register allocator.\n mallow-string-insns\n Target Report Var(rx_allow_string_insns) Init(1)\n Enables or disables the use of the SMOVF, SMOVB, SMOVU, SUNTIL, SWHILE and RMPA instructions.  Enabled by default.\n+\n+;---------------------------------------------------\n+\n+mjsr\n+Target Report Mask(JSR)\n+Always use JSR, never BSR, for calls."}, {"sha": "6162a609604d5f1a31d1a5fca4d136f2ae2bcad4", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb457a8c59cfeb602d66f1ba379b6ec3e9475d90/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=eb457a8c59cfeb602d66f1ba379b6ec3e9475d90", "patch": "@@ -968,6 +968,7 @@ See RS/6000 and PowerPC Options.\n -mint-register=@gol\n -mpid@gol\n -mallow-string-insns -mno-allow-string-insns@gol\n+-mjsr@gol\n -mno-warn-multiple-fast-interrupts@gol\n -msave-acc-in-interrupts}\n \n@@ -20685,6 +20686,15 @@ accesses I/O space.\n When the instructions are enabled GCC defines the C preprocessor\n symbol @code{__RX_ALLOW_STRING_INSNS__}, otherwise it defines the\n symbol @code{__RX_DISALLOW_STRING_INSNS__}.\n+\n+@item -mjsr\n+@itemx -mno-jsr\n+@opindex mjsr\n+@opindex mno-jsr\n+Use only (or not only) @code{JSR} instructions to access functions.\n+This option can be used when code size exceeds the range of @code{BSR}\n+instructions.  Note that @option{-mno-jsr} does not mean to not use\n+@code{JSR} but instead means that any type of branch may be used.\n @end table\n \n @emph{Note:} The generic GCC command-line option @option{-ffixed-@var{reg}}"}]}