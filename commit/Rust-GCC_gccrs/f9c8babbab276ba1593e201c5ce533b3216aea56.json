{"sha": "f9c8babbab276ba1593e201c5ce533b3216aea56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjljOGJhYmJhYjI3NmJhMTU5M2UyMDFjNWNlNTMzYjMyMTZhZWE1Ng==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-03-24T13:04:12Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-03-24T13:04:12Z"}, "message": "Properly assign to packet header (PR hsa/70394)\n\n\t* plugin/plugin-hsa.c (packet_store_release): New function\n\tthat is taken from the HSA runtime manual.\n\t(GOMP_OFFLOAD_run): Use the function.\n\nFrom-SVN: r234454", "tree": {"sha": "ae7e8fb917ef1ed5af713a7fc654c7468ed7c233", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae7e8fb917ef1ed5af713a7fc654c7468ed7c233"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9c8babbab276ba1593e201c5ce533b3216aea56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9c8babbab276ba1593e201c5ce533b3216aea56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9c8babbab276ba1593e201c5ce533b3216aea56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9c8babbab276ba1593e201c5ce533b3216aea56/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed87de55831955ee08398a3c5641ba92d31a39f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed87de55831955ee08398a3c5641ba92d31a39f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed87de55831955ee08398a3c5641ba92d31a39f1"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "5f2c401e461297a73f825730e65f701bd3741d34", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9c8babbab276ba1593e201c5ce533b3216aea56/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9c8babbab276ba1593e201c5ce533b3216aea56/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=f9c8babbab276ba1593e201c5ce533b3216aea56", "patch": "@@ -1,3 +1,9 @@\n+2016-03-24  Martin Liska  <mliska@suse.cz>\n+\n+\t* plugin/plugin-hsa.c (packet_store_release): New function\n+\tthat is taken from the HSA runtime manual.\n+\t(GOMP_OFFLOAD_run): Use the function.\n+\n 2016-03-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/70376"}, {"sha": "0b3b67ac01c656610c4f2eb0b151d4646a79470a", "filename": "libgomp/plugin/plugin-hsa.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9c8babbab276ba1593e201c5ce533b3216aea56/libgomp%2Fplugin%2Fplugin-hsa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9c8babbab276ba1593e201c5ce533b3216aea56/libgomp%2Fplugin%2Fplugin-hsa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-hsa.c?ref=f9c8babbab276ba1593e201c5ce533b3216aea56", "patch": "@@ -1185,6 +1185,14 @@ GOMP_OFFLOAD_can_run (void *fn_ptr)\n   return false;\n }\n \n+/* Atomically store pair of uint16_t values (HEADER and REST) to a PACKET.  */\n+\n+void\n+packet_store_release (uint32_t* packet, uint16_t header, uint16_t rest)\n+{\n+  __atomic_store_n (packet, header | (rest << 16), __ATOMIC_RELEASE);\n+}\n+\n /* Part of the libgomp plugin interface.  Run a kernel on device N and pass it\n    an array of pointers in VARS as a parameter.  The kernel is identified by\n    FN_PTR which must point to a kernel_info structure.  */\n@@ -1232,7 +1240,6 @@ GOMP_OFFLOAD_run (int n, void *fn_ptr, void *vars, void **args)\n \t   + index % agent->command_q->size;\n \n   memset (((uint8_t *) packet) + 4, 0, sizeof (*packet) - 4);\n-  packet->setup |= (uint16_t) 1 << HSA_KERNEL_DISPATCH_PACKET_SETUP_DIMENSIONS;\n   packet->grid_size_x = kla->gdims[0];\n   uint32_t wgs = kla->wdims[0];\n   if (wgs == 0)\n@@ -1275,7 +1282,9 @@ GOMP_OFFLOAD_run (int n, void *fn_ptr, void *vars, void **args)\n \n   HSA_DEBUG (\"Going to dispatch kernel %s\\n\", kernel->name);\n \n-  __atomic_store_n ((uint16_t *) (&packet->header), header, __ATOMIC_RELEASE);\n+  packet_store_release ((uint32_t *) packet, header,\n+\t\t\t1 << HSA_KERNEL_DISPATCH_PACKET_SETUP_DIMENSIONS);\n+\n   hsa_signal_store_release (agent->command_q->doorbell_signal, index);\n \n   /* TODO: GPU agents in Carrizo APUs cannot properly update L2 cache for"}]}