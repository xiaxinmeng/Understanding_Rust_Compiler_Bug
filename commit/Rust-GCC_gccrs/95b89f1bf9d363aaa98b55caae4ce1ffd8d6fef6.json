{"sha": "95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTViODlmMWJmOWQzNjNhYWE5OGI1NWNhYWU0Y2UxZmZkOGQ2ZmVmNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-09T08:15:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-09T08:15:14Z"}, "message": "[multiple changes]\n\n2009-04-09  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_attr.adb (Check_Stream_Attribute): Check violation of\n\trestriction No_Streams\n\n\t* gnat_rm.texi: Clarify No_Streams restriction\n\n\t* g-socket.adb: Minor reformatting.\n\n2009-04-09  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socket.ads: Mark Initialize and Finalize as obsolesent interfaces.\n\n2009-04-09  Geert Bosch  <bosch@adacore.com>\n\n\t* exp_fixd.adb (Build_Conversion): Accept new optional Trunc argument.\n\t(Set_Result): Likewise.\n\t(Expand_Convert_Float_To_Fixed): Have Set_Result truncate the\n\tconversion, as required by RM 4.6(31).\n\nFrom-SVN: r145801", "tree": {"sha": "236adc50322de1758c8aa4890b42e1334ae112c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/236adc50322de1758c8aa4890b42e1334ae112c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/comments", "author": null, "committer": null, "parents": [{"sha": "22a65a54cc52c1e2081ef202523cce5505f6d85b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a65a54cc52c1e2081ef202523cce5505f6d85b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a65a54cc52c1e2081ef202523cce5505f6d85b"}], "stats": {"total": 99, "additions": 73, "deletions": 26}, "files": [{"sha": "1756db017eb918ecb8cc959e8c189b550b8df7b9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6", "patch": "@@ -1,3 +1,23 @@\n+2009-04-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_attr.adb (Check_Stream_Attribute): Check violation of\n+\trestriction No_Streams\n+\n+\t* gnat_rm.texi: Clarify No_Streams restriction\n+\n+\t* g-socket.adb: Minor reformatting.\n+\n+2009-04-09  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socket.ads: Mark Initialize and Finalize as obsolesent interfaces.\n+\n+2009-04-09  Geert Bosch  <bosch@adacore.com>\n+\n+\t* exp_fixd.adb (Build_Conversion): Accept new optional Trunc argument.\n+\t(Set_Result): Likewise.\n+\t(Expand_Convert_Float_To_Fixed): Have Set_Result truncate the\n+\tconversion, as required by RM 4.6(31).\n+\n 2009-04-08  Robert Dewar  <dewar@adacore.com>\n \n \t* checks.adb (Enable_Overflow_Check): Do not enable if overflow checks"}, {"sha": "afac7b0b298e7d3150c04949b89d6bc1b2e42bea", "filename": "gcc/ada/exp_fixd.adb", "status": "modified", "additions": 32, "deletions": 20, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/gcc%2Fada%2Fexp_fixd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/gcc%2Fada%2Fexp_fixd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.adb?ref=95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6", "patch": "@@ -57,16 +57,19 @@ package body Exp_Fixd is\n    --  still dealing with a normal fixed-point operation and mess it up).\n \n    function Build_Conversion\n-     (N    : Node_Id;\n-      Typ  : Entity_Id;\n-      Expr : Node_Id;\n-      Rchk : Boolean := False) return Node_Id;\n+     (N     : Node_Id;\n+      Typ   : Entity_Id;\n+      Expr  : Node_Id;\n+      Rchk  : Boolean := False;\n+      Trunc : Boolean := False) return Node_Id;\n    --  Build an expression that converts the expression Expr to type Typ,\n    --  taking the source location from Sloc (N). If the conversions involve\n    --  fixed-point types, then the Conversion_OK flag will be set so that the\n    --  resulting conversions do not get re-expanded. On return the resulting\n    --  node has its Etype set. If Rchk is set, then Do_Range_Check is set\n-   --  in the resulting conversion node.\n+   --  in the resulting conversion node. If Trunc is set, then the\n+   --  Float_Truncate flag is set on the conversion, which must be from\n+   --  a floating-point type to an integer type.\n \n    function Build_Divide (N : Node_Id; L, R : Node_Id) return Node_Id;\n    --  Builds an N_Op_Divide node from the given left and right operand\n@@ -203,26 +206,32 @@ package body Exp_Fixd is\n    --  Returns True if N is a node that contains the Rounded_Result flag\n    --  and if the flag is true or the target type is an integer type.\n \n-   procedure Set_Result (N : Node_Id; Expr : Node_Id; Rchk : Boolean := False);\n+   procedure Set_Result\n+     (N     : Node_Id;\n+      Expr  : Node_Id;\n+      Rchk  : Boolean := False;\n+      Trunc : Boolean := False);\n    --  N is the node for the current conversion, division or multiplication\n    --  operation, and Expr is an expression representing the result. Expr may\n    --  be of floating-point or integer type. If the operation result is fixed-\n    --  point, then the value of Expr is in units of small of the result type\n    --  (i.e. small's have already been dealt with). The result of the call is\n    --  to replace N by an appropriate conversion to the result type, dealing\n    --  with rounding for the decimal types case. The node is then analyzed and\n-   --  resolved using the result type. If Rchk is True, then Do_Range_Check is\n-   --  set in the resulting conversion.\n+   --  resolved using the result type. If Rchk or Trunc are True, then\n+   --  respectively Do_Range_Check and Float_Truncate are set in the\n+   --  resulting conversion.\n \n    ----------------------\n    -- Build_Conversion --\n    ----------------------\n \n    function Build_Conversion\n-     (N    : Node_Id;\n-      Typ  : Entity_Id;\n-      Expr : Node_Id;\n-      Rchk : Boolean := False) return Node_Id\n+     (N     : Node_Id;\n+      Typ   : Entity_Id;\n+      Expr  : Node_Id;\n+      Rchk  : Boolean := False;\n+      Trunc : Boolean := False) return Node_Id\n    is\n       Loc    : constant Source_Ptr := Sloc (N);\n       Result : Node_Id;\n@@ -269,6 +278,8 @@ package body Exp_Fixd is\n               Make_Type_Conversion (Loc,\n                 Subtype_Mark => New_Occurrence_Of (Typ, Loc),\n                 Expression   => Expr);\n+\n+            Set_Float_Truncate (Result, Trunc);\n          end if;\n \n          --  Set Conversion_OK if either result or expression type is a\n@@ -1687,7 +1698,7 @@ package body Exp_Fixd is\n       --  Optimize small = 1, where we can avoid the multiply completely\n \n       if Small = Ureal_1 then\n-         Set_Result (N, Expr, Rng_Check);\n+         Set_Result (N, Expr, Rng_Check, Trunc => True);\n \n       --  Normal case where multiply is required\n \n@@ -1696,7 +1707,7 @@ package body Exp_Fixd is\n            Build_Multiply (N,\n              Fpt_Value (Expr),\n              Real_Literal (N, Ureal_1 / Small)),\n-           Rng_Check);\n+           Rng_Check, Trunc => True);\n       end if;\n    end Expand_Convert_Float_To_Fixed;\n \n@@ -2349,25 +2360,26 @@ package body Exp_Fixd is\n    ----------------\n \n    procedure Set_Result\n-     (N    : Node_Id;\n-      Expr : Node_Id;\n-      Rchk : Boolean := False)\n+     (N     : Node_Id;\n+      Expr  : Node_Id;\n+      Rchk  : Boolean := False;\n+      Trunc : Boolean := False)\n    is\n       Cnode : Node_Id;\n \n       Expr_Type   : constant Entity_Id := Etype (Expr);\n       Result_Type : constant Entity_Id := Etype (N);\n \n    begin\n-      --  No conversion required if types match and no range check\n+      --  No conversion required if types match and no range check or truncate\n \n-      if Result_Type = Expr_Type and then not Rchk then\n+      if Result_Type = Expr_Type and then not (Rchk or Trunc) then\n          Cnode := Expr;\n \n       --  Else perform required conversion\n \n       else\n-         Cnode := Build_Conversion (N, Result_Type, Expr, Rchk);\n+         Cnode := Build_Conversion (N, Result_Type, Expr, Rchk, Trunc);\n       end if;\n \n       Rewrite (N, Cnode);"}, {"sha": "92407cc188ba10a5562c1640fae8f774d82d2768", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6", "patch": "@@ -802,6 +802,7 @@ package body GNAT.Sockets is\n \n    procedure Finalize (X : in out Sockets_Library_Controller) is\n       pragma Unreferenced (X);\n+\n    begin\n       --  Finalization operation for the GNAT.Sockets package\n \n@@ -817,6 +818,7 @@ package body GNAT.Sockets is\n       --  This is a dummy placeholder for an obsolete API.\n       --  The real finalization actions are in Initialize primitive operation\n       --  of Sockets_Library_Controller.\n+\n       null;\n    end Finalize;\n \n@@ -1304,6 +1306,7 @@ package body GNAT.Sockets is\n \n    procedure Initialize (X : in out Sockets_Library_Controller) is\n       pragma Unreferenced (X);\n+\n    begin\n       --  Initialization operation for the GNAT.Sockets package\n \n@@ -1325,7 +1328,8 @@ package body GNAT.Sockets is\n            \"incorrect Process_Blocking_IO setting, expected \" & Expected'Img;\n       end if;\n \n-      --  This is a dummy placeholder for an obsolete API.\n+      --  This is a dummy placeholder for an obsolete API\n+\n       --  Real initialization actions are in Initialize primitive operation\n       --  of Sockets_Library_Controller.\n \n@@ -1338,9 +1342,11 @@ package body GNAT.Sockets is\n \n    procedure Initialize is\n    begin\n-      --  This is a dummy placeholder for an obsolete API.\n+      --  This is a dummy placeholder for an obsolete API\n+\n       --  Real initialization actions are in Initialize primitive operation\n       --  of Sockets_Library_Controller.\n+\n       null;\n    end Initialize;\n "}, {"sha": "39107783eb14fd4523b2a26760102d6ac17680fa", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6", "patch": "@@ -379,6 +379,9 @@ package GNAT.Sockets is\n    --  including through this renaming.\n \n    procedure Initialize;\n+   pragma Obsolescent\n+     (Entity  => Initialize,\n+      Message => \"explicit initialization is no longer required\");\n    --  Initialize must be called before using any other socket routines.\n    --  Note that this operation is a no-op on UNIX platforms, but applications\n    --  should make sure to call it if portability is expected: some platforms\n@@ -389,7 +392,7 @@ package GNAT.Sockets is\n    procedure Initialize (Process_Blocking_IO : Boolean);\n    pragma Obsolescent\n      (Entity  => Initialize,\n-      Message => \"passing a parameter to Initialize is not supported anymore\");\n+      Message => \"passing a parameter to Initialize is no longer supported\");\n    --  Previous versions of GNAT.Sockets used to require the user to indicate\n    --  whether socket I/O was process- or thread-blocking on the platform.\n    --  This property is now determined automatically when the run-time library\n@@ -400,6 +403,9 @@ package GNAT.Sockets is\n    --  automatically).\n \n    procedure Finalize;\n+   pragma Obsolescent\n+     (Entity  => Finalize,\n+      Message => \"explicit finalization is no longer required\");\n    --  After Finalize is called it is not possible to use any routines\n    --  exported in by this package. This procedure is idempotent.\n    --  This is now a no-op (initialization and finalization are done"}, {"sha": "ae93d0173e096de67bc40e320b760aedc80a411c", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6", "patch": "@@ -8592,11 +8592,12 @@ user-defined storage pool.\n @item No_Streams\n @findex No_Streams\n This restriction ensures at compile/bind time that there are no\n-stream objects created (and therefore no actual stream operations).\n+stream objects created and no use of stream attributes.\n This restriction does not forbid dependences on the package\n @code{Ada.Streams}. So it is permissible to with\n @code{Ada.Streams} (or another package that does so itself)\n-as long as no actual stream objects are created.\n+as long as no actual stream objects are created and no\n+stream attributes are used.\n \n @item No_Task_Attributes_Package\n @findex No_Task_Attributes_Package"}, {"sha": "0871ce83d0b84eb1e850f7f0f31225d18e390dbe", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=95b89f1bf9d363aaa98b55caae4ce1ffd8d6fef6", "patch": "@@ -1554,7 +1554,9 @@ package body Sem_Attr is\n             end if;\n          end if;\n \n-         --  Check for violation of restriction No_Stream_Attributes\n+         --  Check restriction violations\n+\n+         Check_Restriction (No_Streams, P);\n \n          if Is_RTE (P_Type, RE_Exception_Id)\n               or else"}]}