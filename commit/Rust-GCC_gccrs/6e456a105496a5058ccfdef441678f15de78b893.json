{"sha": "6e456a105496a5058ccfdef441678f15de78b893", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU0NTZhMTA1NDk2YTUwNThjY2ZkZWY0NDE2NzhmMTVkZTc4Yjg5Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-07-17T18:12:37Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-07-17T18:12:37Z"}, "message": "re PR rtl-optimization/16294 (Missed delay slot scheduling opportunity)\n\n\tPR rtl-optimization/16294\n\t* resource.c (return_insn_p): New predicate.\n\t(mark_target_live_regs): Use it.  Special-case return insns.\n\t(init_resource_info): Use it.  Don't scan the epilogue past\n\ta return.\n\nFrom-SVN: r84874", "tree": {"sha": "644d0f4f5e087fec3c389cf35c1c4cc29f74be50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/644d0f4f5e087fec3c389cf35c1c4cc29f74be50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e456a105496a5058ccfdef441678f15de78b893", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e456a105496a5058ccfdef441678f15de78b893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e456a105496a5058ccfdef441678f15de78b893", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e456a105496a5058ccfdef441678f15de78b893/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a807136e16752e8024f34967cf2071e4c1c284f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a807136e16752e8024f34967cf2071e4c1c284f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a807136e16752e8024f34967cf2071e4c1c284f"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "7d4756cc4c4311406f0762ea2adb05debb904f21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e456a105496a5058ccfdef441678f15de78b893/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e456a105496a5058ccfdef441678f15de78b893/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e456a105496a5058ccfdef441678f15de78b893", "patch": "@@ -1,3 +1,11 @@\n+2004-07-17  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR rtl-optimization/16294\n+\t* resource.c (return_insn_p): New predicate.\n+\t(mark_target_live_regs): Use it.  Special-case return insns.\n+\t(init_resource_info): Use it.  Don't scan the epilogue past\n+\ta return.\n+\n 2004-07-17  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* loop-init.c (loop_optimizer_init, loop_optimizer_finalize): Do not"}, {"sha": "a536dd905a7f688aaf0dbbbe44402e3bf6052c4f", "filename": "gcc/resource.c", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e456a105496a5058ccfdef441678f15de78b893/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e456a105496a5058ccfdef441678f15de78b893/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=6e456a105496a5058ccfdef441678f15de78b893", "patch": "@@ -836,6 +836,20 @@ mark_set_resources (rtx x, struct resources *res, int in_dest,\n       }\n }\n \f\n+/* Return TRUE if INSN is a return, possibly with a filled delay slot.  */\n+\n+static bool\n+return_insn_p (rtx insn)\n+{\n+  if (GET_CODE (insn) == JUMP_INSN && GET_CODE (PATTERN (insn)) == RETURN)\n+    return true;\n+\n+  if (GET_CODE (insn) == INSN && GET_CODE (PATTERN (insn)) == SEQUENCE)\n+    return return_insn_p (XVECEXP (PATTERN (insn), 0, 0));\n+\n+  return false;\n+}\n+\n /* Set the resources that are live at TARGET.\n \n    If TARGET is zero, we refer to the end of the current function and can\n@@ -894,6 +908,14 @@ mark_target_live_regs (rtx insns, rtx target, struct resources *res)\n       return;\n     }\n \n+  /* Handle return insn.  */\n+  else if (return_insn_p (target))\n+    {\n+      *res = end_of_function_needs;\n+      mark_referenced_resources (target, res, 0);\n+      return;\n+    }\n+\n   /* We have to assume memory is needed, but the CC isn't.  */\n   res->memory = 1;\n   res->volatil = res->unch_memory = 0;\n@@ -1204,8 +1226,12 @@ init_resource_info (rtx epilogue_insn)\n   start_of_epilogue_needs = end_of_function_needs;\n \n   while ((epilogue_insn = next_nonnote_insn (epilogue_insn)))\n-    mark_set_resources (epilogue_insn, &end_of_function_needs, 0,\n-\t\t\tMARK_SRC_DEST_CALL);\n+    {\n+      mark_set_resources (epilogue_insn, &end_of_function_needs, 0,\n+\t\t\t  MARK_SRC_DEST_CALL);\n+      if (return_insn_p (epilogue_insn))\n+\tbreak;\n+    }\n \n   /* Allocate and initialize the tables used by mark_target_live_regs.  */\n   target_hash_table = xcalloc (TARGET_HASH_PRIME, sizeof (struct target_info *));"}]}