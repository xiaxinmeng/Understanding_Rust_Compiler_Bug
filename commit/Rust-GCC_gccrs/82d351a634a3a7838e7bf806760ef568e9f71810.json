{"sha": "82d351a634a3a7838e7bf806760ef568e9f71810", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJkMzUxYTYzNGEzYTc4MzhlN2JmODA2NzYwZWY1NjhlOWY3MTgxMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-12-14T03:08:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-12-14T03:08:50Z"}, "message": "c-common.h (COMPOUND_STMT_BODY_BLOCK): New macro.\n\n        * c-common.h (COMPOUND_STMT_BODY_BLOCK): New macro.\n\n        Use cleanups to run base and member destructors.\n        * init.c (push_base_cleanups): New function, split out from...\n        (build_delete): ...here.  Lose !TYPE_HAS_DESTRUCTOR code.\n        * decl.c (finish_destructor_body): Move vbase destruction code to\n        push_base_cleanups.\n        (begin_function_body, finish_function_body): New fns.\n        (finish_function): Move [cd]tor handling and call_poplevel to\n        finish_function_body.\n        (pushdecl): Skip the new level.\n        * semantics.c (genrtl_try_block): Don't call end_protect_partials.\n        (setup_vtbl_ptr): Call push_base_cleanups.\n        * method.c (synthesize_method): Call {begin,end}_function_body.\n        * pt.c (tsubst_expr): Handle COMPOUND_STMT_BODY_BLOCK.\n        * cp-tree.h: Declare new fns.\n        * parse.y (function_body, .begin_function_body): New nonterminals.\n        (fndef, pending_inline, function_try_block): Use function_body.\n        (ctor_initializer_opt, function_try_block): No longer has a value.\n        (base_init): Remove .set_base_init token.\n        (.set_base_init, compstmt_or_error): Remove.\n        * Make-lang.in (parse.c): Expect two fewer s/r conflicts.\n\nFrom-SVN: r47988", "tree": {"sha": "d329a000e74c33201df51391bd18def45b7ef6c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d329a000e74c33201df51391bd18def45b7ef6c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82d351a634a3a7838e7bf806760ef568e9f71810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d351a634a3a7838e7bf806760ef568e9f71810", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82d351a634a3a7838e7bf806760ef568e9f71810", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d351a634a3a7838e7bf806760ef568e9f71810/comments", "author": null, "committer": null, "parents": [{"sha": "ade3dc07d50ecfc3ede5ce20cc40f055c1a2f36e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ade3dc07d50ecfc3ede5ce20cc40f055c1a2f36e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ade3dc07d50ecfc3ede5ce20cc40f055c1a2f36e"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "c1c3adaec96fe01cfe586ffd79f08a03fcbc04d1", "filename": "gcc/testsuite/g++.dg/eh/dtor1.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82d351a634a3a7838e7bf806760ef568e9f71810/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fdtor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82d351a634a3a7838e7bf806760ef568e9f71810/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fdtor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fdtor1.C?ref=82d351a634a3a7838e7bf806760ef568e9f71810", "patch": "@@ -0,0 +1,33 @@\n+// Test that a fully-constructed base is destroyed before transferring\n+// control to the handler of a function-try-block.\n+\n+// { dg-do run }\n+\n+int ad;\n+int r;\n+\n+struct A {\n+  ~A() { ++ad; }\n+};\n+\n+struct B: public A {\n+  ~B();\n+};\n+\n+B::~B ()\n+try\n+  {\n+    throw 1;\n+  }\n+catch (...)\n+  {\n+    if (!ad)\n+      r = 1;\n+    return;\n+  }\n+\n+int main ()\n+{\n+  { B b; }\n+  return r;\n+}"}]}