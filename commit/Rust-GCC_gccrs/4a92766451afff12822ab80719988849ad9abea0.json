{"sha": "4a92766451afff12822ab80719988849ad9abea0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE5Mjc2NjQ1MWFmZmYxMjgyMmFiODA3MTk5ODg4NDlhZDlhYmVhMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-04-14T11:31:04Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2005-04-14T11:31:04Z"}, "message": "reg-stack.c (subst_stack_regs_pat): Handle <UNSPEC_FIST_FLOOR> and <UNSPEC_FIST_CEIL> case.\n\n\t* reg-stack.c (subst_stack_regs_pat): Handle <UNSPEC_FIST_FLOOR> and\n\t<UNSPEC_FIST_CEIL> case.\n\n\t* config/i386/i386.md (UNSPEC_FIST_FLOOR, UNSPEC_FIST_CEIL): New.\n\t(*fist<mode>2_floor_1, fistdi2_floor, fistdi2_floor_with_temp)\n\t(fist<mode>2_floor, fist<mode>2_floor_with_temp): New isns patterns\n\tto implement lfloor and llfloor built-ins as x87 intrinsic function.\n\t(fistdi2_floor, fist<mode>2_floor splitters): New splitters.\n\t(lfloor<mode>2): New expanders.\n\t(*fist<mode>2_ceil_1, fistdi2_ceil, fistdi2_ceil_with_temp)\n\t(fist<mode>2_ceil, fist<mode>2_ceil_with_temp): New isns patterns\n\tto implement lceil and llceil built-ins as x87 intrinsic function.\n\t(fistdi2_ceil, fist<mode>2_ceil splitters): New splitters.\n\t(lceil<mode>2): New expanders.\n\nFrom-SVN: r98132", "tree": {"sha": "10f9970687d86f79e9d680bc125b4ae6668a598c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10f9970687d86f79e9d680bc125b4ae6668a598c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a92766451afff12822ab80719988849ad9abea0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a92766451afff12822ab80719988849ad9abea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a92766451afff12822ab80719988849ad9abea0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a92766451afff12822ab80719988849ad9abea0/comments", "author": null, "committer": null, "parents": [{"sha": "2ec76fdb2413bee3123b322e4f4259ba9f9c8310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ec76fdb2413bee3123b322e4f4259ba9f9c8310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ec76fdb2413bee3123b322e4f4259ba9f9c8310"}], "stats": {"total": 337, "additions": 337, "deletions": 0}, "files": [{"sha": "5dc6889c69eaad645de3c282a463378599b0ea7f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a92766451afff12822ab80719988849ad9abea0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a92766451afff12822ab80719988849ad9abea0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a92766451afff12822ab80719988849ad9abea0", "patch": "@@ -1,3 +1,20 @@\n+2005-04-14  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* reg-stack.c (subst_stack_regs_pat): Handle <UNSPEC_FIST_FLOOR> and\n+\t<UNSPEC_FIST_CEIL> case.\n+\n+\t* config/i386/i386.md (UNSPEC_FIST_FLOOR, UNSPEC_FIST_CEIL): New.\n+\t(*fist<mode>2_floor_1, fistdi2_floor, fistdi2_floor_with_temp)\n+\t(fist<mode>2_floor, fist<mode>2_floor_with_temp): New isns patterns\n+\tto implement lfloor and llfloor built-ins as x87 intrinsic function.\n+\t(fistdi2_floor, fist<mode>2_floor splitters): New splitters.\n+\t(lfloor<mode>2): New expanders.\n+\t(*fist<mode>2_ceil_1, fistdi2_ceil, fistdi2_ceil_with_temp)\n+\t(fist<mode>2_ceil, fist<mode>2_ceil_with_temp): New isns patterns\n+\tto implement lceil and llceil built-ins as x87 intrinsic function.\n+\t(fistdi2_ceil, fist<mode>2_ceil splitters): New splitters.\n+\t(lceil<mode>2): New expanders.\n+\n 2005-04-14  Uros Bizjak  <uros@kss-loka.si>\n \n \t* convert.c (convert_to_integer): Convert (long int)trunc{,f,l},"}, {"sha": "e65d9c790afc9c2bb0a90d7341d0e5298e173bb4", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 316, "deletions": 0, "changes": 316, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a92766451afff12822ab80719988849ad9abea0/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a92766451afff12822ab80719988849ad9abea0/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=4a92766451afff12822ab80719988849ad9abea0", "patch": "@@ -122,6 +122,8 @@\n    (UNSPEC_FRNDINT_CEIL \t71)\n    (UNSPEC_FRNDINT_TRUNC\t72)\n    (UNSPEC_FRNDINT_MASK_PM\t73)\n+   (UNSPEC_FIST_FLOOR\t\t74)\n+   (UNSPEC_FIST_CEIL \t\t75)\n \n    ; x87 Double output FP\n    (UNSPEC_SINCOS_COS\t\t80)\n@@ -16435,6 +16437,163 @@\n   DONE;\n })\n \n+(define_insn_and_split \"*fist<mode>2_floor_1\"\n+  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"=m,?r\")\n+\t(unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+\t UNSPEC_FIST_FLOOR))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\n+   && !(reload_completed || reload_in_progress)\"\n+  \"#\"\n+  \"&& 1\"\n+  [(const_int 0)]\n+{\n+  ix86_optimize_mode_switching = 1;\n+  operands[2] = assign_386_stack_local (HImode, 1);\n+  operands[3] = assign_386_stack_local (HImode, 2);\n+  if (memory_operand (operands[0], VOIDmode))\n+    emit_insn (gen_fist<mode>2_floor (operands[0], operands[1],\n+\t\t\t\t      operands[2], operands[3]));\n+  else\n+    {\n+      operands[4] = assign_386_stack_local (<MODE>mode, 0);\n+      emit_insn (gen_fist<mode>2_floor_with_temp (operands[0], operands[1],\n+\t\t\t\t\t\t  operands[2], operands[3],\n+\t\t\t\t\t\t  operands[4]));\n+    }\n+  DONE;\n+}\n+  [(set_attr \"type\" \"fistp\")\n+   (set_attr \"i387_cw\" \"floor\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"fistdi2_floor\"\n+  [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n+\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f\")]\n+\t UNSPEC_FIST_FLOOR))\n+   (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"m\"))\n+   (clobber (match_scratch:XF 4 \"=&1f\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+  \"* return output_fix_trunc (insn, operands, 0);\"\n+  [(set_attr \"type\" \"fistp\")\n+   (set_attr \"i387_cw\" \"floor\")\n+   (set_attr \"mode\" \"DI\")])\n+\n+(define_insn \"fistdi2_floor_with_temp\"\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n+\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+\t UNSPEC_FIST_FLOOR))\n+   (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n+   (clobber (match_operand:DI 4 \"memory_operand\" \"=m,m\"))\n+   (clobber (match_scratch:XF 5 \"=&1f,&1f\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+  \"#\"\n+  [(set_attr \"type\" \"fistp\")\n+   (set_attr \"i387_cw\" \"floor\")\n+   (set_attr \"mode\" \"DI\")])\n+\n+(define_split \n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t UNSPEC_FIST_FLOOR))\n+   (use (match_operand:HI 2 \"memory_operand\" \"\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"\"))\n+   (clobber (match_operand:DI 4 \"memory_operand\" \"\"))\n+   (clobber (match_scratch 5 \"\"))]\n+  \"reload_completed\"\n+  [(parallel [(set (match_dup 4) (unspec:DI [(match_dup 1)] UNSPEC_FIST_FLOOR))\n+\t      (use (match_dup 2))\n+\t      (use (match_dup 3))\n+\t      (clobber (match_dup 5))])\n+   (set (match_dup 0) (match_dup 4))]\n+  \"\")\n+\n+(define_split \n+  [(set (match_operand:DI 0 \"memory_operand\" \"\")\n+\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t UNSPEC_FIST_FLOOR))\n+   (use (match_operand:HI 2 \"memory_operand\" \"\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"\"))\n+   (clobber (match_operand:DI 4 \"memory_operand\" \"\"))\n+   (clobber (match_scratch 5 \"\"))]\n+  \"reload_completed\"\n+  [(parallel [(set (match_dup 0) (unspec:DI [(match_dup 1)] UNSPEC_FIST_FLOOR))\n+\t      (use (match_dup 2))\n+\t      (use (match_dup 3))\n+\t      (clobber (match_dup 5))])]\n+  \"\")\n+\n+(define_insn \"fist<mode>2_floor\"\n+  [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"=m\")\n+\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n+\t UNSPEC_FIST_FLOOR))\n+   (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"m\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+  \"* return output_fix_trunc (insn, operands, 0);\"\n+  [(set_attr \"type\" \"fistp\")\n+   (set_attr \"i387_cw\" \"floor\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"fist<mode>2_floor_with_temp\"\n+  [(set (match_operand:X87MODEI12 0 \"nonimmediate_operand\" \"=m,?r\")\n+\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+\t UNSPEC_FIST_FLOOR))\n+   (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n+   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"=m,m\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+  \"#\"\n+  [(set_attr \"type\" \"fistp\")\n+   (set_attr \"i387_cw\" \"floor\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_split \n+  [(set (match_operand:X87MODEI12 0 \"register_operand\" \"\")\n+\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t UNSPEC_FIST_FLOOR))\n+   (use (match_operand:HI 2 \"memory_operand\" \"\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"\"))\n+   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"\"))]\n+  \"reload_completed\"\n+  [(parallel [(set (match_dup 4) (unspec:X87MODEI12 [(match_dup 1)]\n+\t\t\t\t  UNSPEC_FIST_FLOOR))\n+\t      (use (match_dup 2))\n+\t      (use (match_dup 3))])\n+   (set (match_dup 0) (match_dup 4))]\n+  \"\")\n+\n+(define_split \n+  [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"\")\n+\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t UNSPEC_FIST_FLOOR))\n+   (use (match_operand:HI 2 \"memory_operand\" \"\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"\"))\n+   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"\"))]\n+  \"reload_completed\"\n+  [(parallel [(set (match_dup 0) (unspec:X87MODEI12 [(match_dup 1)]\n+\t\t\t\t  UNSPEC_FIST_FLOOR))\n+\t      (use (match_dup 2))\n+\t      (use (match_dup 3))])]\n+  \"\")\n+\n+(define_expand \"lfloor<mode>2\"\n+  [(parallel [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n+\t\t   (unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t    UNSPEC_FIST_FLOOR))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n+   && flag_unsafe_math_optimizations\"\n+  \"\")\n+\n ;; Rounding mode control word calculation could clobber FLAGS_REG.\n (define_insn_and_split \"frndintxf2_ceil\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n@@ -16518,6 +16677,163 @@\n   DONE;\n })\n \n+(define_insn_and_split \"*fist<mode>2_ceil_1\"\n+  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"=m,?r\")\n+\t(unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+\t UNSPEC_FIST_CEIL))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\n+   && !(reload_completed || reload_in_progress)\"\n+  \"#\"\n+  \"&& 1\"\n+  [(const_int 0)]\n+{\n+  ix86_optimize_mode_switching = 1;\n+  operands[2] = assign_386_stack_local (HImode, 1);\n+  operands[3] = assign_386_stack_local (HImode, 2);\n+  if (memory_operand (operands[0], VOIDmode))\n+    emit_insn (gen_fist<mode>2_ceil (operands[0], operands[1],\n+\t\t\t\t     operands[2], operands[3]));\n+  else\n+    {\n+      operands[4] = assign_386_stack_local (<MODE>mode, 0);\n+      emit_insn (gen_fist<mode>2_ceil_with_temp (operands[0], operands[1],\n+\t\t\t\t\t\t operands[2], operands[3],\n+\t\t\t\t\t\t operands[4]));\n+    }\n+  DONE;\n+}\n+  [(set_attr \"type\" \"fistp\")\n+   (set_attr \"i387_cw\" \"ceil\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"fistdi2_ceil\"\n+  [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n+\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f\")]\n+\t UNSPEC_FIST_CEIL))\n+   (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"m\"))\n+   (clobber (match_scratch:XF 4 \"=&1f\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+  \"* return output_fix_trunc (insn, operands, 0);\"\n+  [(set_attr \"type\" \"fistp\")\n+   (set_attr \"i387_cw\" \"ceil\")\n+   (set_attr \"mode\" \"DI\")])\n+\n+(define_insn \"fistdi2_ceil_with_temp\"\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n+\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+\t UNSPEC_FIST_CEIL))\n+   (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n+   (clobber (match_operand:DI 4 \"memory_operand\" \"=m,m\"))\n+   (clobber (match_scratch:XF 5 \"=&1f,&1f\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+  \"#\"\n+  [(set_attr \"type\" \"fistp\")\n+   (set_attr \"i387_cw\" \"ceil\")\n+   (set_attr \"mode\" \"DI\")])\n+\n+(define_split \n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t UNSPEC_FIST_CEIL))\n+   (use (match_operand:HI 2 \"memory_operand\" \"\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"\"))\n+   (clobber (match_operand:DI 4 \"memory_operand\" \"\"))\n+   (clobber (match_scratch 5 \"\"))]\n+  \"reload_completed\"\n+  [(parallel [(set (match_dup 4) (unspec:DI [(match_dup 1)] UNSPEC_FIST_CEIL))\n+\t      (use (match_dup 2))\n+\t      (use (match_dup 3))\n+\t      (clobber (match_dup 5))])\n+   (set (match_dup 0) (match_dup 4))]\n+  \"\")\n+\n+(define_split \n+  [(set (match_operand:DI 0 \"memory_operand\" \"\")\n+\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t UNSPEC_FIST_CEIL))\n+   (use (match_operand:HI 2 \"memory_operand\" \"\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"\"))\n+   (clobber (match_operand:DI 4 \"memory_operand\" \"\"))\n+   (clobber (match_scratch 5 \"\"))]\n+  \"reload_completed\"\n+  [(parallel [(set (match_dup 0) (unspec:DI [(match_dup 1)] UNSPEC_FIST_CEIL))\n+\t      (use (match_dup 2))\n+\t      (use (match_dup 3))\n+\t      (clobber (match_dup 5))])]\n+  \"\")\n+\n+(define_insn \"fist<mode>2_ceil\"\n+  [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"=m\")\n+\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n+\t UNSPEC_FIST_CEIL))\n+   (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"m\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+  \"* return output_fix_trunc (insn, operands, 0);\"\n+  [(set_attr \"type\" \"fistp\")\n+   (set_attr \"i387_cw\" \"ceil\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"fist<mode>2_ceil_with_temp\"\n+  [(set (match_operand:X87MODEI12 0 \"nonimmediate_operand\" \"=m,?r\")\n+\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+\t UNSPEC_FIST_CEIL))\n+   (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n+   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"=m,m\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+  \"#\"\n+  [(set_attr \"type\" \"fistp\")\n+   (set_attr \"i387_cw\" \"ceil\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_split \n+  [(set (match_operand:X87MODEI12 0 \"register_operand\" \"\")\n+\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t UNSPEC_FIST_CEIL))\n+   (use (match_operand:HI 2 \"memory_operand\" \"\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"\"))\n+   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"\"))]\n+  \"reload_completed\"\n+  [(parallel [(set (match_dup 4) (unspec:X87MODEI12 [(match_dup 1)]\n+\t\t\t\t  UNSPEC_FIST_CEIL))\n+\t      (use (match_dup 2))\n+\t      (use (match_dup 3))])\n+   (set (match_dup 0) (match_dup 4))]\n+  \"\")\n+\n+(define_split \n+  [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"\")\n+\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t UNSPEC_FIST_CEIL))\n+   (use (match_operand:HI 2 \"memory_operand\" \"\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"\"))\n+   (clobber (match_operand:X87MODEI12 4 \"memory_operand\" \"\"))]\n+  \"reload_completed\"\n+  [(parallel [(set (match_dup 0) (unspec:X87MODEI12 [(match_dup 1)]\n+\t\t\t\t  UNSPEC_FIST_CEIL))\n+\t      (use (match_dup 2))\n+\t      (use (match_dup 3))])]\n+  \"\")\n+\n+(define_expand \"lceil<mode>2\"\n+  [(parallel [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n+\t\t   (unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t    UNSPEC_FIST_CEIL))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n+   && flag_unsafe_math_optimizations\"\n+  \"\")\n+\n ;; Rounding mode control word calculation could clobber FLAGS_REG.\n (define_insn_and_split \"frndintxf2_trunc\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")"}, {"sha": "a49d9e9a10860e974b9098a5ea217b1e2adcf1dc", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a92766451afff12822ab80719988849ad9abea0/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a92766451afff12822ab80719988849ad9abea0/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=4a92766451afff12822ab80719988849ad9abea0", "patch": "@@ -1671,6 +1671,10 @@ subst_stack_regs_pat (rtx insn, stack regstack, rtx pat)\n \t    switch (XINT (pat_src, 1))\n \t      {\n \t      case UNSPEC_FIST:\n+\n+\t      case UNSPEC_FIST_FLOOR:\n+\t      case UNSPEC_FIST_CEIL:\n+\n \t\t/* These insns only operate on the top of the stack.  */\n \n \t\tsrc1 = get_true_reg (&XVECEXP (pat_src, 0, 0));"}]}