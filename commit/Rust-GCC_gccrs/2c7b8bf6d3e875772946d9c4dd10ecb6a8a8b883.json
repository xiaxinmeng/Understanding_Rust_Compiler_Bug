{"sha": "2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM3YjhiZjZkM2U4NzU3NzI5NDZkOWM0ZGQxMGVjYjZhOGE4Yjg4Mw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2013-06-11T11:13:59Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2013-06-11T11:13:59Z"}, "message": "varasm.c (get_section): Don't die on !DECL_P decl.\n\n\t* varasm.c (get_section): Don't die on !DECL_P decl.  Tidy error\n\treporting.\n\t(get_named_section): Don't NULL !DECL_P decl.\n\nFrom-SVN: r199949", "tree": {"sha": "4aace318bebf16cf709ecf3a3db77e883e760ccd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4aace318bebf16cf709ecf3a3db77e883e760ccd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0372af98bd3e02f578f1ad0c097e3619e28c64e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0372af98bd3e02f578f1ad0c097e3619e28c64e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0372af98bd3e02f578f1ad0c097e3619e28c64e4"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "f346780e5f26b8c1191f4e9f4720b103765f0d45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883", "patch": "@@ -1,3 +1,9 @@\n+2013-06-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* varasm.c (get_section): Don't die on !DECL_P decl.  Tidy error\n+\treporting.\n+\t(get_named_section): Don't NULL !DECL_P decl.\n+\n 2013-06-11  Igor Zamyatin  <igor.zamyatin@intel.com>\n \n \t* doc/invoke.texi (core-avx2): Document."}, {"sha": "d2b9415477d22e07ab335794f343e6a0bd406e9f", "filename": "gcc/varasm.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883", "patch": "@@ -307,19 +307,22 @@ get_section (const char *name, unsigned int flags, tree decl)\n \t      return sect;\n \t    }\n \t  /* Sanity check user variables for flag changes.  */\n-\t  if (decl == 0)\n-\t    decl = sect->named.decl;\n-\t  gcc_assert (decl);\n-\t  if (sect->named.decl == NULL)\n-\t    error (\"%+D causes a section type conflict\", decl);\n-\t  else\n+\t  if (sect->named.decl != NULL\n+\t      && DECL_P (sect->named.decl)\n+\t      && decl != sect->named.decl)\n \t    {\n-\t      error (\"%+D causes a section type conflict with %D\",\n-\t\t     decl, sect->named.decl);\n-\t      if (decl != sect->named.decl)\n-\t\tinform (DECL_SOURCE_LOCATION (sect->named.decl),\n-\t\t\t\"%qD was declared here\", sect->named.decl);\n+\t      if (decl != NULL && DECL_P (decl))\n+\t\terror (\"%+D causes a section type conflict with %D\",\n+\t\t       decl, sect->named.decl);\n+\t      else\n+\t\terror (\"section type conflict with %D\", sect->named.decl);\n+\t      inform (DECL_SOURCE_LOCATION (sect->named.decl),\n+\t\t      \"%qD was declared here\", sect->named.decl);\n \t    }\n+\t  else if (decl != NULL && DECL_P (decl))\n+\t    error (\"%+D causes a section type conflict\", decl);\n+\t  else\n+\t    error (\"section type conflict\");\n \t  /* Make sure we don't error about one section multiple times.  */\n \t  sect->common.flags |= SECTION_OVERRIDE;\n \t}\n@@ -409,9 +412,6 @@ get_named_section (tree decl, const char *name, int reloc)\n     }\n \n   flags = targetm.section_type_flags (decl, name, reloc);\n-\n-  if (decl && !DECL_P (decl))\n-    decl = NULL_TREE;\n   return get_section (name, flags, decl);\n }\n "}]}