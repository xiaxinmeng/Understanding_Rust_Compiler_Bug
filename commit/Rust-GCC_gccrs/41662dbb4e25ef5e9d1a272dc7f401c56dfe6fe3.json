{"sha": "41662dbb4e25ef5e9d1a272dc7f401c56dfe6fe3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE2NjJkYmI0ZTI1ZWY1ZTlkMWEyNzJkYzdmNDAxYzU2ZGZlNmZlMw==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-02-20T00:11:43Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-02-20T00:11:43Z"}, "message": "re PR libstdc++/9582 (ODR violation in std::allocator)\n\n2003-02-19  Phil Edwards  <pme@gcc.gnu.org>\n\n\tPR libstdc++/9582\n\t* include/bits/stl_alloc.h:  Remove all traces of assert().\n\nFrom-SVN: r63136", "tree": {"sha": "c72dcc546d3cafe8c4ac8adad9e544eb18ab6f38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c72dcc546d3cafe8c4ac8adad9e544eb18ab6f38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41662dbb4e25ef5e9d1a272dc7f401c56dfe6fe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41662dbb4e25ef5e9d1a272dc7f401c56dfe6fe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41662dbb4e25ef5e9d1a272dc7f401c56dfe6fe3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41662dbb4e25ef5e9d1a272dc7f401c56dfe6fe3/comments", "author": null, "committer": null, "parents": [{"sha": "274aef32d98ae86d38243f785226d3f261f14a4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/274aef32d98ae86d38243f785226d3f261f14a4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/274aef32d98ae86d38243f785226d3f261f14a4a"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "469f36d1fa2d89e6cc0d7a568eddde17b265f28a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41662dbb4e25ef5e9d1a272dc7f401c56dfe6fe3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41662dbb4e25ef5e9d1a272dc7f401c56dfe6fe3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=41662dbb4e25ef5e9d1a272dc7f401c56dfe6fe3", "patch": "@@ -1,3 +1,8 @@\n+2003-02-19  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\tPR libstdc++/9582\n+\t* include/bits/stl_alloc.h:  Remove all traces of assert().\n+\n 2003-02-18  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/std/std_sstream.h (str()): the size of the"}, {"sha": "fae53bd581bc35e4f5a58f888112dbce3bd06c4c", "filename": "libstdc++-v3/include/bits/stl_alloc.h", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41662dbb4e25ef5e9d1a272dc7f401c56dfe6fe3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41662dbb4e25ef5e9d1a272dc7f401c56dfe6fe3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h?ref=41662dbb4e25ef5e9d1a272dc7f401c56dfe6fe3", "patch": "@@ -81,7 +81,6 @@\n #include <cstddef>\n #include <cstdlib>\n #include <cstring>\n-#include <cassert>\n #include <bits/functexcept.h>   // For __throw_bad_alloc\n #include <bits/stl_threads.h>\n \n@@ -217,10 +216,7 @@ namespace std\n   /**\n    *  @if maint\n    *  An adaptor for an underlying allocator (_Alloc) to check the size\n-   *  arguments for debugging.  Errors are reported using assert; these\n-   *  checks can be disabled via NDEBUG, but the space penalty is still\n-   *  paid, therefore it is far better to just use the underlying allocator\n-   *  by itelf when no checking is desired.\n+   *  arguments for debugging.\n    *\n    *  \"There is some evidence that this can confuse Purify.\" - SGI comment\n    *\n@@ -249,7 +245,8 @@ namespace std\n       deallocate(void* __p, size_t __n)\n       {\n         char* __real_p = (char*)__p - (int) _S_extra;\n-        assert(*(size_t*)__real_p == __n);\n+        if (*(size_t*)__real_p != __n)\n+          abort();\n         _Alloc::deallocate(__real_p, __n + (int) _S_extra);\n       }\n     };"}]}