{"sha": "86c2f4b76123e283b387cf82a3fb0c2a293e982d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZjMmY0Yjc2MTIzZTI4M2IzODdjZjgyYTNmYjBjMmEyOTNlOTgyZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-06-20T17:08:51Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-06-20T17:08:51Z"}, "message": "fpu-387.h (_FPU_MASK_ALL): New.\n\n\t* config/fpu-387.h (_FPU_MASK_ALL): New.\n\t(_FPU_EX_ALL): Ditto.\n\t(set_fpu): Use fstcw to store x87 FPU control word. Use fnclex to\n\tclear stalled exception flags.  Correctly clear stalled SSE\n\texception flags.  Simplify code.\n\t(get_fpu_except_flags): Simplify code.\n\nFrom-SVN: r200255", "tree": {"sha": "3d8b9d4d6942766e89168518129d63e78ce8f16e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d8b9d4d6942766e89168518129d63e78ce8f16e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86c2f4b76123e283b387cf82a3fb0c2a293e982d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86c2f4b76123e283b387cf82a3fb0c2a293e982d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86c2f4b76123e283b387cf82a3fb0c2a293e982d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86c2f4b76123e283b387cf82a3fb0c2a293e982d/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ef3b58e572bc76797b69159117ba8ab6da13391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ef3b58e572bc76797b69159117ba8ab6da13391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ef3b58e572bc76797b69159117ba8ab6da13391"}], "stats": {"total": 69, "additions": 39, "deletions": 30}, "files": [{"sha": "5ea24864adcb3a163eadeef7ba8ad5cf5692ed83", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86c2f4b76123e283b387cf82a3fb0c2a293e982d/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86c2f4b76123e283b387cf82a3fb0c2a293e982d/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=86c2f4b76123e283b387cf82a3fb0c2a293e982d", "patch": "@@ -1,9 +1,16 @@\n+2013-06-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/fpu-387.h (_FPU_MASK_ALL): New.\n+\t(set_fpu): Use fstcw to store x87 FPU control word. Use fnclex to\n+\tclear stalled exception flags.  Correctly clear stalled SSE\n+\texception flags.  Simplify code.\n+\n 2013-06-20  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57633\n \t* io/list_read.c (next_char, eat_separator): Don't set EOL for \\r.\n \n-2012-06-19  Uros Bizjak  <ubizjak@gmail.com>\n+2013-06-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/fpu-387.h: Use __asm__ and __volatile__ consistently.\n \t(get_fpu_except_flags): Initialize result."}, {"sha": "09709b2ea245f23102b562919394e6b184598aa9", "filename": "libgfortran/config/fpu-387.h", "status": "modified", "additions": 31, "deletions": 29, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86c2f4b76123e283b387cf82a3fb0c2a293e982d/libgfortran%2Fconfig%2Ffpu-387.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86c2f4b76123e283b387cf82a3fb0c2a293e982d/libgfortran%2Fconfig%2Ffpu-387.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-387.h?ref=86c2f4b76123e283b387cf82a3fb0c2a293e982d", "patch": "@@ -95,70 +95,72 @@ has_sse (void)\n #define _FPU_MASK_OM  0x08\n #define _FPU_MASK_UM  0x10\n #define _FPU_MASK_PM  0x20\n+#define _FPU_MASK_ALL 0x3f\n+\n+#define _FPU_EX_ALL   0x3f\n \n void set_fpu (void)\n {\n+  int excepts = 0;\n   unsigned short cw;\n \n-  __asm__ __volatile__ (\"fnstcw\\t%0\" : \"=m\" (cw));\n+  __asm__ __volatile__ (\"fstcw\\t%0\" : \"=m\" (cw));\n \n-  cw |= (_FPU_MASK_IM | _FPU_MASK_DM | _FPU_MASK_ZM | _FPU_MASK_OM\n-\t | _FPU_MASK_UM | _FPU_MASK_PM);\n+  if (options.fpe & GFC_FPE_INVALID) excepts |= _FPU_MASK_IM;\n+  if (options.fpe & GFC_FPE_DENORMAL) excepts |= _FPU_MASK_DM;\n+  if (options.fpe & GFC_FPE_ZERO) excepts |= _FPU_MASK_ZM;\n+  if (options.fpe & GFC_FPE_OVERFLOW) excepts |= _FPU_MASK_OM;\n+  if (options.fpe & GFC_FPE_UNDERFLOW) excepts |= _FPU_MASK_UM;\n+  if (options.fpe & GFC_FPE_INEXACT) excepts |= _FPU_MASK_PM;\n \n-  if (options.fpe & GFC_FPE_INVALID) cw &= ~_FPU_MASK_IM;\n-  if (options.fpe & GFC_FPE_DENORMAL) cw &= ~_FPU_MASK_DM;\n-  if (options.fpe & GFC_FPE_ZERO) cw &= ~_FPU_MASK_ZM;\n-  if (options.fpe & GFC_FPE_OVERFLOW) cw &= ~_FPU_MASK_OM;\n-  if (options.fpe & GFC_FPE_UNDERFLOW) cw &= ~_FPU_MASK_UM;\n-  if (options.fpe & GFC_FPE_INEXACT) cw &= ~_FPU_MASK_PM;\n+  cw |= _FPU_MASK_ALL;\n+  cw &= ~excepts;\n \n-  __asm__ __volatile__ (\"fldcw\\t%0\" : : \"m\" (cw));\n+  __asm__ __volatile__ (\"fnclex\\n\\tfldcw\\t%0\" : : \"m\" (cw));\n \n   if (has_sse())\n     {\n       unsigned int cw_sse;\n \n       __asm__ __volatile__ (\"%vstmxcsr\\t%0\" : \"=m\" (cw_sse));\n \n-      cw_sse &= 0xffff0000;\n-      cw_sse |= (_FPU_MASK_IM | _FPU_MASK_DM | _FPU_MASK_ZM | _FPU_MASK_OM\n-\t\t | _FPU_MASK_UM | _FPU_MASK_PM ) << 7;\n+      /* The SSE exception masks are shifted by 7 bits.  */\n+      cw_sse |= _FPU_MASK_ALL << 7;\n+      cw_sse &= ~(excepts << 7);\n \n-      if (options.fpe & GFC_FPE_INVALID) cw_sse &= ~(_FPU_MASK_IM << 7);\n-      if (options.fpe & GFC_FPE_DENORMAL) cw_sse &= ~(_FPU_MASK_DM << 7);\n-      if (options.fpe & GFC_FPE_ZERO) cw_sse &= ~(_FPU_MASK_ZM << 7);\n-      if (options.fpe & GFC_FPE_OVERFLOW) cw_sse &= ~(_FPU_MASK_OM << 7);\n-      if (options.fpe & GFC_FPE_UNDERFLOW) cw_sse &= ~(_FPU_MASK_UM << 7);\n-      if (options.fpe & GFC_FPE_INEXACT) cw_sse &= ~(_FPU_MASK_PM << 7);\n+      /* Clear stalled exception flags.  */\n+      cw_sse &= ~_FPU_EX_ALL;\n \n       __asm__ __volatile__ (\"%vldmxcsr\\t%0\" : : \"m\" (cw_sse));\n     }\n }\n \n-\n int\n get_fpu_except_flags (void)\n {\n-  int result = 0;\n   unsigned short cw;\n+  int excepts;\n+  int result = 0;\n \n   __asm__ __volatile__ (\"fnstsw\\t%0\" : \"=a\" (cw));\n+  excepts = cw;\n \n   if (has_sse())\n     {\n       unsigned int cw_sse;\n \n       __asm__ __volatile__ (\"%vstmxcsr\\t%0\" : \"=m\" (cw_sse));\n-\n-      cw |= cw_sse;\n+      excepts |= cw_sse;\n     }\n \n-  if (cw & _FPU_MASK_IM) result |= GFC_FPE_INVALID;\n-  if (cw & _FPU_MASK_DM) result |= GFC_FPE_DENORMAL;\n-  if (cw & _FPU_MASK_ZM) result |= GFC_FPE_ZERO;\n-  if (cw & _FPU_MASK_OM) result |= GFC_FPE_OVERFLOW;\n-  if (cw & _FPU_MASK_UM) result |= GFC_FPE_UNDERFLOW;\n-  if (cw & _FPU_MASK_PM) result |= GFC_FPE_INEXACT;\n+  excepts &= _FPU_EX_ALL;\n+\n+  if (excepts & _FPU_MASK_IM) result |= GFC_FPE_INVALID;\n+  if (excepts & _FPU_MASK_DM) result |= GFC_FPE_DENORMAL;\n+  if (excepts & _FPU_MASK_ZM) result |= GFC_FPE_ZERO;\n+  if (excepts & _FPU_MASK_OM) result |= GFC_FPE_OVERFLOW;\n+  if (excepts & _FPU_MASK_UM) result |= GFC_FPE_UNDERFLOW;\n+  if (excepts & _FPU_MASK_PM) result |= GFC_FPE_INEXACT;\n \n   return result;\n }"}]}