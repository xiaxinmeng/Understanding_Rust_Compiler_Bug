{"sha": "ff65e98035f39bbd577fd50ccafa7743d4ac42a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY2NWU5ODAzNWYzOWJiZDU3N2ZkNTBjY2FmYTc3NDNkNGFjNDJhNQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-10-31T14:41:35Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-10-31T14:41:35Z"}, "message": "[1/7] Preprocessor cleanup\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-10/msg02037.html\n\t* directives.c (DIRECTIVE_TABLE): Drop historical frequency\n\tcomments.\n\t* files.c (_cpp_stack_file): Fix indentation.\n\nFrom-SVN: r265685", "tree": {"sha": "0b36b66552e0a2a08ff12ea9f71b3fe05ee21413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b36b66552e0a2a08ff12ea9f71b3fe05ee21413"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff65e98035f39bbd577fd50ccafa7743d4ac42a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff65e98035f39bbd577fd50ccafa7743d4ac42a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff65e98035f39bbd577fd50ccafa7743d4ac42a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff65e98035f39bbd577fd50ccafa7743d4ac42a5/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5e33619bf7766bcd1419da6d32780199db8df86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5e33619bf7766bcd1419da6d32780199db8df86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5e33619bf7766bcd1419da6d32780199db8df86"}], "stats": {"total": 57, "additions": 29, "deletions": 28}, "files": [{"sha": "07361746eb465edd3f3510e6b0e4e084cb91c5b4", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff65e98035f39bbd577fd50ccafa7743d4ac42a5/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff65e98035f39bbd577fd50ccafa7743d4ac42a5/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=ff65e98035f39bbd577fd50ccafa7743d4ac42a5", "patch": "@@ -1,3 +1,9 @@\n+2018-10-31  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* directives.c (DIRECTIVE_TABLE): Drop historical frequency\n+\tcomments.\n+\t* files.c (_cpp_stack_file): Fix indentation.\n+\n 2018-10-17  Joseph Myers  <joseph@codesourcery.com>\n \n \t* include/cpplib.h (enum c_lang): Add CLK_GNUC2X and CLK_STDC2X."}, {"sha": "b91c2e918a5378c1fb711ce021038d09d8837246", "filename": "libcpp/directives.c", "status": "modified", "additions": 22, "deletions": 27, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff65e98035f39bbd577fd50ccafa7743d4ac42a5/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff65e98035f39bbd577fd50ccafa7743d4ac42a5/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=ff65e98035f39bbd577fd50ccafa7743d4ac42a5", "patch": "@@ -133,35 +133,30 @@ static void do_pragma_push_macro (cpp_reader *);\n static void do_pragma_pop_macro (cpp_reader *);\n static void cpp_pop_definition (cpp_reader *, struct def_pragma_macro *);\n \n-/* This is the table of directive handlers.  It is ordered by\n-   frequency of occurrence; the numbers at the end are directive\n-   counts from all the source code I have lying around (egcs and libc\n-   CVS as of 1999-05-18, plus grub-0.5.91, linux-2.2.9, and\n-   pcmcia-cs-3.0.9).  This is no longer important as directive lookup\n-   is now O(1).  All extensions other than #warning, #include_next,\n-   and #import are deprecated.  The name is where the extension\n-   appears to have come from.  */\n+/* This is the table of directive handlers.  All extensions other than\n+   #warning, #include_next, and #import are deprecated.  The name is\n+   where the extension appears to have come from.  */\n \n #define DIRECTIVE_TABLE\t\t\t\t\t\t\t\\\n-D(define,\tT_DEFINE = 0,\tKANDR,     IN_I)\t   /* 270554 */ \\\n-D(include,\tT_INCLUDE,\tKANDR,     INCL | EXPAND)  /*  52262 */ \\\n-D(endif,\tT_ENDIF,\tKANDR,     COND)\t   /*  45855 */ \\\n-D(ifdef,\tT_IFDEF,\tKANDR,     COND | IF_COND) /*  22000 */ \\\n-D(if,\t\tT_IF,\t\tKANDR, COND | IF_COND | EXPAND) /*  18162 */ \\\n-D(else,\t\tT_ELSE,\t\tKANDR,     COND)\t   /*   9863 */ \\\n-D(ifndef,\tT_IFNDEF,\tKANDR,     COND | IF_COND) /*   9675 */ \\\n-D(undef,\tT_UNDEF,\tKANDR,     IN_I)\t   /*   4837 */ \\\n-D(line,\t\tT_LINE,\t\tKANDR,     EXPAND)\t   /*   2465 */ \\\n-D(elif,\t\tT_ELIF,\t\tSTDC89,    COND | EXPAND)  /*    610 */ \\\n-D(error,\tT_ERROR,\tSTDC89,    0)\t\t   /*    475 */ \\\n-D(pragma,\tT_PRAGMA,\tSTDC89,    IN_I)\t   /*    195 */ \\\n-D(warning,\tT_WARNING,\tEXTENSION, 0)\t\t   /*     22 */ \\\n-D(include_next,\tT_INCLUDE_NEXT,\tEXTENSION, INCL | EXPAND)  /*     19 */ \\\n-D(ident,\tT_IDENT,\tEXTENSION, IN_I)           /*     11 */ \\\n-D(import,\tT_IMPORT,\tEXTENSION, INCL | EXPAND)  /* 0 ObjC */\t\\\n-D(assert,\tT_ASSERT,\tEXTENSION, DEPRECATED)\t   /* 0 SVR4 */\t\\\n-D(unassert,\tT_UNASSERT,\tEXTENSION, DEPRECATED)\t   /* 0 SVR4 */\t\\\n-D(sccs,\t\tT_SCCS,\t\tEXTENSION, IN_I)           /* 0 SVR4? */\n+  D(define,\tT_DEFINE = 0,\tKANDR,     IN_I)\t\t\t\\\n+  D(include,\tT_INCLUDE,\tKANDR,     INCL | EXPAND)\t\t\\\n+  D(endif,\tT_ENDIF,\tKANDR,     COND)\t\t\t\\\n+  D(ifdef,\tT_IFDEF,\tKANDR,     COND | IF_COND)\t\t\\\n+  D(if,\t\tT_IF,\t\tKANDR, \t   COND | IF_COND | EXPAND) \t\\\n+  D(else,\tT_ELSE,\t\tKANDR,     COND)\t   \t\t\\\n+  D(ifndef,\tT_IFNDEF,\tKANDR,     COND | IF_COND)\t\t\\\n+  D(undef,\tT_UNDEF,\tKANDR,     IN_I)\t\t\t\\\n+  D(line,\tT_LINE,\t\tKANDR,     EXPAND)\t\t\t\\\n+  D(elif,\tT_ELIF,\t\tSTDC89,    COND | EXPAND)\t\t\\\n+  D(error,\tT_ERROR,\tSTDC89,    0)\t\t\t\t\\\n+  D(pragma,\tT_PRAGMA,\tSTDC89,    IN_I)\t\t\t\\\n+  D(warning,\tT_WARNING,\tEXTENSION, 0)\t\t\t\t\\\n+  D(include_next, T_INCLUDE_NEXT, EXTENSION, INCL | EXPAND)\t\t\\\n+  D(ident,\tT_IDENT,\tEXTENSION, IN_I)\t\t\t\\\n+  D(import,\tT_IMPORT,\tEXTENSION, INCL | EXPAND)  /* ObjC */\t\\\n+  D(assert,\tT_ASSERT,\tEXTENSION, DEPRECATED)\t   /* SVR4 */\t\\\n+  D(unassert,\tT_UNASSERT,\tEXTENSION, DEPRECATED)\t   /* SVR4 */\t\\\n+  D(sccs,\tT_SCCS,\t\tEXTENSION, IN_I)   \t   /*  SVR4? */\n \n /* #sccs is synonymous with #ident.  */\n #define do_sccs do_ident"}, {"sha": "0f0cc7be1b60d78d48100960c92568f64806b4cb", "filename": "libcpp/files.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff65e98035f39bbd577fd50ccafa7743d4ac42a5/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff65e98035f39bbd577fd50ccafa7743d4ac42a5/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=ff65e98035f39bbd577fd50ccafa7743d4ac42a5", "patch": "@@ -898,7 +898,7 @@ _cpp_stack_file (cpp_reader *pfile, _cpp_file *file, bool import,\n   int sysp;\n \n   if (!should_stack_file (pfile, file, import, loc))\n-      return false;\n+    return false;\n \n   if (pfile->buffer == NULL || file->dir == NULL)\n     sysp = 0;"}]}