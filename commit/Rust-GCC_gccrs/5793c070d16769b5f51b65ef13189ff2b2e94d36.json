{"sha": "5793c070d16769b5f51b65ef13189ff2b2e94d36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc5M2MwNzBkMTY3NjliNWY1MWI2NWVmMTMxODlmZjJiMmU5NGQzNg==", "commit": {"author": {"name": "Carlos O'Donell", "email": "carlos@codesourcery.com", "date": "2006-10-13T21:28:28Z"}, "committer": {"name": "Carlos O'Donell", "email": "carlos@gcc.gnu.org", "date": "2006-10-13T21:28:28Z"}, "message": "revert: elfos.h (MAX_OFILE_ALIGNMENT): Default to largest alignment supported by 32-bit ELF.\n\ngcc/\n\n2006-10-13  Carlos O'Donell  <carlos@codesourcery.com>\n\n\tRevert this change:\n\t2006-10-13  Carlos O'Donell  <carlos@codesourcery.com>\n\t* config/elfos.h (MAX_OFILE_ALIGNMENT): Default to largest\n\talignment supported by 32-bit ELF.\n\nFrom-SVN: r117709", "tree": {"sha": "e96b9cf7dcfbcecffc83863c5226c32466c9a12f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e96b9cf7dcfbcecffc83863c5226c32466c9a12f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5793c070d16769b5f51b65ef13189ff2b2e94d36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5793c070d16769b5f51b65ef13189ff2b2e94d36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5793c070d16769b5f51b65ef13189ff2b2e94d36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5793c070d16769b5f51b65ef13189ff2b2e94d36/comments", "author": null, "committer": null, "parents": [{"sha": "44ef77c15e8ac17bb7ba76686fc4a6a6bf089b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ef77c15e8ac17bb7ba76686fc4a6a6bf089b2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44ef77c15e8ac17bb7ba76686fc4a6a6bf089b2d"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "8947677d233620f5ea78d0ae02a841f00b7c744f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5793c070d16769b5f51b65ef13189ff2b2e94d36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5793c070d16769b5f51b65ef13189ff2b2e94d36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5793c070d16769b5f51b65ef13189ff2b2e94d36", "patch": "@@ -1,3 +1,10 @@\n+2006-10-13  Carlos O'Donell  <carlos@codesourcery.com>\n+\n+\tRevert this change:\n+\t2006-10-13  Carlos O'Donell  <carlos@codesourcery.com>\n+\t* config/elfos.h (MAX_OFILE_ALIGNMENT): Default to largest\n+\talignment supported by 32-bit ELF.\n+\n 2006-10-13  Eric Christopher  <echristo@apple.com>\n \n \t* config/darwin.c (darwin_emit_unwind_label): Strip"}, {"sha": "a2bd49f909ad7d32f9249d951681fd3984f30dc6", "filename": "gcc/config/elfos.h", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5793c070d16769b5f51b65ef13189ff2b2e94d36/gcc%2Fconfig%2Felfos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5793c070d16769b5f51b65ef13189ff2b2e94d36/gcc%2Fconfig%2Felfos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felfos.h?ref=5793c070d16769b5f51b65ef13189ff2b2e94d36", "patch": "@@ -40,17 +40,12 @@ Boston, MA 02110-1301, USA.  */\n #undef  USER_LABEL_PREFIX\n #define USER_LABEL_PREFIX \"\"\n \n-/* The biggest alignment supported by ELF. 32-bit ELF supports \n-   section alignment up to (0x80000000 * 8), while 64-bit ELF\n-   supports (0x8000000000000000 * 8). If this macro is not\n-   defined, the default is the largest alignment supported by\n-   32-bit ELF. Use this macro to limit the alignment which can \n-   be specified using the `__attribute__ ((aligned (N)))' \n-   construct.  */\n-#if (HOST_BITS_PER_WIDEST_INT >= 64)\n-#define MAX_OFILE_ALIGNMENT (((unsigned HOST_WIDEST_INT) 1 << 31) * 8)\n-#else\n-#define MAX_OFILE_ALIGNMENT (((unsigned HOST_WIDEST_INT) 1 << 28) * 8)\n+/* Biggest alignment supported by the object file format of this\n+   machine.  Use this macro to limit the alignment which can be\n+   specified using the `__attribute__ ((aligned (N)))' construct.  If\n+   not defined, the default value is `BIGGEST_ALIGNMENT'.  */\n+#ifndef MAX_OFILE_ALIGNMENT\n+#define MAX_OFILE_ALIGNMENT (32768 * 8)\n #endif\n \n /* Use periods rather than dollar signs in special g++ assembler names.  */"}]}