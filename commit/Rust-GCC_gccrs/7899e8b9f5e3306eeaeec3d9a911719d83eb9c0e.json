{"sha": "7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg5OWU4YjlmNWUzMzA2ZWVhZWVjM2Q5YTkxMTcxOWQ4M2ViOWMwZQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2001-12-20T22:50:21Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-12-20T22:50:21Z"}, "message": "decl.c (java_init_decl_processing): Don't initialize finit_leg_identifier_node.\n\n\t* decl.c (java_init_decl_processing): Don't initialize\n\tfinit_leg_identifier_node.\n\t* java-tree.h (java_tree_index): Remove JTI_FINIT_LEG_IDENTIFIER_NODE.\n\t(finit_leg_identifier_node): Remove.\n\t(ID_FINIT_P): Don't check for JTI_FINIT_LEG_IDENTIFIER_NODE.\n\nFrom-SVN: r48221", "tree": {"sha": "27dc2187094fd2c87f7c2e6d6ccc7cf6f2e16b68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27dc2187094fd2c87f7c2e6d6ccc7cf6f2e16b68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e/comments", "author": null, "committer": null, "parents": [{"sha": "de4984af13a0f7edab6466b76afde368e8bc19c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de4984af13a0f7edab6466b76afde368e8bc19c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de4984af13a0f7edab6466b76afde368e8bc19c8"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "9c125389f9f1bd17f4711204f33392119942c22f", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e", "patch": "@@ -1,3 +1,11 @@\n+2001-12-20  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\t* decl.c (java_init_decl_processing): Don't initialize \n+\tfinit_leg_identifier_node.\n+\t* java-tree.h (java_tree_index): Remove JTI_FINIT_LEG_IDENTIFIER_NODE.\n+\t(finit_leg_identifier_node): Remove.\n+\t(ID_FINIT_P): Don't check for JTI_FINIT_LEG_IDENTIFIER_NODE.\n+\n 2001-12-20  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n \t* mangle.c (mangle_member_name): Don't special-case for "}, {"sha": "f7464a847f1eb9bf6305d6b511167a3e60f5e06a", "filename": "gcc/java/decl.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e", "patch": "@@ -577,11 +577,6 @@ java_init_decl_processing ()\n   TYPE_identifier_node = get_identifier (\"TYPE\");\n   init_identifier_node = get_identifier (\"<init>\");\n   clinit_identifier_node = get_identifier (\"<clinit>\");\n-  /* Legacy `$finit$' special method identifier. This needs to be\n-     recognized as equivalent to `finit$' but isn't generated anymore.  */\n-  finit_leg_identifier_node = get_identifier (\"$finit$\");\n-  /* The new `finit$' special method identifier. This one is now\n-     generated in place of `$finit$'.  */\n   finit_identifier_node = get_identifier (\"finit$\");\n   instinit_identifier_node = get_identifier (\"instinit$\");\n   void_signature_node = get_identifier (\"()V\");"}, {"sha": "a96a7f771588b42339a641a3e1f58c6ea7788b4d", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e", "patch": "@@ -304,7 +304,6 @@ enum java_tree_index\n   JTI_CLINIT_IDENTIFIER_NODE,      \n   JTI_FINIT_IDENTIFIER_NODE,      \n   JTI_INSTINIT_IDENTIFIER_NODE,\n-  JTI_FINIT_LEG_IDENTIFIER_NODE,  \n   JTI_VOID_SIGNATURE_NODE,       \n   JTI_LENGTH_IDENTIFIER_NODE,  \n   JTI_FINALIZE_IDENTIFIER_NODE,\n@@ -504,8 +503,6 @@ extern tree java_global_trees[JTI_MAX];\n   java_global_trees[JTI_CLINIT_IDENTIFIER_NODE]      /* \"<clinit>\" */\n #define finit_identifier_node \\\n   java_global_trees[JTI_FINIT_IDENTIFIER_NODE]      /* \"finit$\" */\n-#define finit_leg_identifier_node \\\n-  java_global_trees[JTI_FINIT_LEG_IDENTIFIER_NODE]  /* \"$finit$\" */\n /* FIXME \"instinit$\" and \"finit$\" should be merged  */\n #define instinit_identifier_node \\\n   java_global_trees[JTI_INSTINIT_IDENTIFIER_NODE]  /* \"instinit$\" */\n@@ -997,7 +994,7 @@ struct lang_type\n   struct JCF *jcf;\n   struct CPool *cpool;\n   tree cpool_data_ref;\t\t/* Cached */\n-  tree finit_stmt_list;\t\t/* List of statements $finit$ will use */\n+  tree finit_stmt_list;\t\t/* List of statements finit$ will use */\n   tree clinit_stmt_list;\t/* List of statements <clinit> will use  */\n   tree ii_block;\t\t/* Instance initializer block */\n   tree dot_class;\t\t/* The decl of the `class$' function that\n@@ -1261,12 +1258,7 @@ struct rtx_def * java_lang_expand_expr PARAMS ((tree, rtx, enum machine_mode,\n /* Predicates on method identifiers. Kept close to other macros using\n    them  */\n #define ID_INIT_P(ID)   ((ID) == init_identifier_node)\n-/* Match ID to either `$finit$' or `finit$', so that `$finit$'\n-   continues to be recognized as an equivalent to `finit$' which is\n-   now the preferred name used for the field initialization special\n-   method.  */\n-#define ID_FINIT_P(ID)  ((ID) == finit_identifier_node \\\n-\t\t\t || (ID) == finit_leg_identifier_node)\n+#define ID_FINIT_P(ID)  ((ID) == finit_identifier_node)\n #define ID_CLINIT_P(ID) ((ID) == clinit_identifier_node)\n #define ID_CLASSDOLLAR_P(ID) ((ID) == classdollar_identifier_node)\n #define ID_INSTINIT_P(ID) ((ID) == instinit_identifier_node)\n@@ -1426,7 +1418,7 @@ extern tree *type_map;\n    layout of a class.  */\n #define CLASS_BEING_LAIDOUT(TYPE) TYPE_LANG_FLAG_6 (TYPE)\n \n-/* True if class TYPE has a field initializer $finit$ function */\n+/* True if class TYPE has a field initializer finit$ function */\n #define CLASS_HAS_FINIT_P(TYPE) TYPE_FINIT_STMT_LIST (TYPE)\n \n /* True if identifier ID was seen while processing a single type import stmt */"}]}