{"sha": "a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI3NzNiZDNlNmZkODQ3MTRkOTU2OGViYzllMTViYzQ2ZGNkMWM2Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-05T15:17:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-05T15:17:37Z"}, "message": "[multiple changes]\n\n2011-08-05  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch11.adb: Add comment.\n\n2011-08-05  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_util.adb: Minor comment fix.\n\n2011-08-05  Robert Dewar  <dewar@adacore.com>\n\n\t* scng.adb (Error_Unterminated_String): Improve flag position when\n\tcomma present.\n\n2011-08-05  Matthew Heaney  <heaney@adacore.com>\n\n\t* Makefile.rtl, impunit.adb: Added a-cbmutr.ad[sb] (bounded multiway\n\ttree containers).\n\t* a-cbmutr.ads, a-cbmutr.adb: This is the new Ada 2012 unit for bounded\n\tmultiway tree containers.\n\n2011-08-05  Robert Dewar  <dewar@adacore.com>\n\n\t* styleg.adb (Check_Comment): Implement comment spacing of 1 or 2\n\t* stylesw.adb: Implement -gnatyC to control comment spacing\n\t* stylesw.ads (Style_Check_Comments_Spacing): New switch (set by\n\t-gnatyc/C).\n\t* usage.adb: Add line for -gnatyC.\n\n2011-08-05  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_ugn.texi: Document -gnatyC for J505-006\n\t* vms_data.ads: Implement COMMENTS1/COMMENTS2 (retaining COMMENTS as a\n\tsynonym for COMMENTS2).\n\nFrom-SVN: r177453", "tree": {"sha": "ba708f88b444bcbc812ada1c70ff45ef811962f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba708f88b444bcbc812ada1c70ff45ef811962f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/comments", "author": null, "committer": null, "parents": [{"sha": "aca0b0b315f6e5a0ee60981fd4b0cbc9a7f59096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca0b0b315f6e5a0ee60981fd4b0cbc9a7f59096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aca0b0b315f6e5a0ee60981fd4b0cbc9a7f59096"}], "stats": {"total": 3516, "additions": 3488, "deletions": 28}, "files": [{"sha": "3ca2a71c1df1a38a199394c2814859f736e1b1bb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -1,3 +1,37 @@\n+2011-08-05  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch11.adb: Add comment.\n+\n+2011-08-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_util.adb: Minor comment fix.\n+\n+2011-08-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* scng.adb (Error_Unterminated_String): Improve flag position when\n+\tcomma present.\n+\n+2011-08-05  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* Makefile.rtl, impunit.adb: Added a-cbmutr.ad[sb] (bounded multiway\n+\ttree containers).\n+\t* a-cbmutr.ads, a-cbmutr.adb: This is the new Ada 2012 unit for bounded\n+\tmultiway tree containers.\n+\n+2011-08-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* styleg.adb (Check_Comment): Implement comment spacing of 1 or 2\n+\t* stylesw.adb: Implement -gnatyC to control comment spacing\n+\t* stylesw.ads (Style_Check_Comments_Spacing): New switch (set by\n+\t-gnatyc/C).\n+\t* usage.adb: Add line for -gnatyC.\n+\n+2011-08-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_ugn.texi: Document -gnatyC for J505-006\n+\t* vms_data.ads: Implement COMMENTS1/COMMENTS2 (retaining COMMENTS as a\n+\tsynonym for COMMENTS2).\n+\n 2011-08-05  Robert Dewar  <dewar@adacore.com>\n \n \t* par_sco.adb, sem_ch3.adb, scos.ads, a-iteint.ads, sem_ch12.adb,"}, {"sha": "22eb02f18ef5ffbab70638946bedbb7ed67af25e", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -90,6 +90,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-cbhase$(objext) \\\n   a-cborse$(objext) \\\n   a-cbdlli$(objext) \\\n+  a-cbmutr$(objext) \\\n   a-cborma$(objext) \\\n   a-cdlili$(objext) \\\n   a-cfdlli$(objext) \\"}, {"sha": "6e22e0e8756057946f18f4a0096d68af14d36db0", "filename": "gcc/ada/a-cbmutr.adb", "status": "added", "additions": 3042, "deletions": 0, "changes": 3042, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fa-cbmutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fa-cbmutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbmutr.adb?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f"}, {"sha": "bc6de38b0aeadf3e0bbf7d53bcc781326c7f8d3d", "filename": "gcc/ada/a-cbmutr.ads", "status": "added", "additions": 321, "deletions": 0, "changes": 321, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fa-cbmutr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fa-cbmutr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbmutr.ads?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -0,0 +1,321 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT LIBRARY COMPONENTS                          --\n+--                                                                          --\n+--                   ADA.CONTAINERS.BOUNDED_MULTIWAY_TREES                  --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- This unit was originally developed by Matthew J Heaney.                  --\n+------------------------------------------------------------------------------\n+\n+private with Ada.Streams;\n+\n+generic\n+   type Element_Type is private;\n+\n+   with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n+\n+package Ada.Containers.Bounded_Multiway_Trees is\n+   pragma Pure;\n+   pragma Remote_Types;\n+\n+   type Tree (Capacity : Count_Type) is tagged private;\n+   pragma Preelaborable_Initialization (Tree);\n+\n+   type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n+\n+   Empty_Tree : constant Tree;\n+\n+   No_Element : constant Cursor;\n+\n+   function Equal_Subtree\n+     (Left_Position  : Cursor;\n+      Right_Position : Cursor) return Boolean;\n+\n+   function \"=\" (Left, Right : Tree) return Boolean;\n+\n+   function Is_Empty (Container : Tree) return Boolean;\n+\n+   function Node_Count (Container : Tree) return Count_Type;\n+\n+   function Subtree_Node_Count (Position : Cursor) return Count_Type;\n+\n+   function Depth (Position : Cursor) return Count_Type;\n+\n+   function Is_Root (Position : Cursor) return Boolean;\n+\n+   function Is_Leaf (Position : Cursor) return Boolean;\n+\n+   function Root (Container : Tree) return Cursor;\n+\n+   procedure Clear (Container : in out Tree);\n+\n+   function Element (Position : Cursor) return Element_Type;\n+\n+   procedure Replace_Element\n+     (Container : in out Tree;\n+      Position  : Cursor;\n+      New_Item  : Element_Type);\n+\n+   procedure Query_Element\n+     (Position : Cursor;\n+      Process  : not null access procedure (Element : Element_Type));\n+\n+   procedure Update_Element\n+     (Container : in out Tree;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : in out Element_Type));\n+\n+   procedure Assign (Target : in out Tree; Source : Tree);\n+\n+   function Copy (Source : Tree; Capacity : Count_Type := 0) return Tree;\n+\n+   procedure Move (Target : in out Tree; Source : in out Tree);\n+\n+   procedure Delete_Leaf\n+     (Container : in out Tree;\n+      Position  : in out Cursor);\n+\n+   procedure Delete_Subtree\n+     (Container : in out Tree;\n+      Position  : in out Cursor);\n+\n+   procedure Swap\n+     (Container : in out Tree;\n+      I, J      : Cursor);\n+\n+   function Find\n+     (Container : Tree;\n+      Item      : Element_Type) return Cursor;\n+\n+   --  This version of the AI:\n+   --   10-06-02  AI05-0136-1/07\n+   --  declares Find_In_Subtree with a Container parameter,\n+   --  but this seems incorrect. We need a ruling from the\n+   --  ARG about whether this really was intended.  ???\n+\n+   function Find_In_Subtree\n+     (Container : Tree;\n+      Item      : Element_Type;\n+      Position  : Cursor) return Cursor;\n+\n+   function Ancestor_Find\n+     (Container : Tree;\n+      Item      : Element_Type;\n+      Position  : Cursor) return Cursor;\n+\n+   function Contains\n+     (Container : Tree;\n+      Item      : Element_Type) return Boolean;\n+\n+   function Has_Element (Position : Cursor) return Boolean;\n+\n+   procedure Iterate\n+     (Container : Tree;\n+      Process   : not null access procedure (Position : Cursor));\n+\n+   procedure Iterate_Subtree\n+     (Position  : Cursor;\n+      Process   : not null access procedure (Position : Cursor));\n+\n+   function Child_Count (Parent : Cursor) return Count_Type;\n+\n+   function Child_Depth (Parent, Child : Cursor) return Count_Type;\n+\n+   procedure Insert_Child\n+     (Container : in out Tree;\n+      Parent    : Cursor;\n+      Before    : Cursor;\n+      New_Item  : Element_Type;\n+      Count     : Count_Type := 1);\n+\n+   procedure Insert_Child\n+     (Container : in out Tree;\n+      Parent    : Cursor;\n+      Before    : Cursor;\n+      New_Item  : Element_Type;\n+      Position  : out Cursor;\n+      Count     : Count_Type := 1);\n+\n+   procedure Insert_Child\n+     (Container : in out Tree;\n+      Parent    : Cursor;\n+      Before    : Cursor;\n+      Position  : out Cursor;\n+      Count     : Count_Type := 1);\n+\n+   procedure Prepend_Child\n+     (Container : in out Tree;\n+      Parent    : Cursor;\n+      New_Item  : Element_Type;\n+      Count     : Count_Type := 1);\n+\n+   procedure Append_Child\n+     (Container : in out Tree;\n+      Parent    : Cursor;\n+      New_Item  : Element_Type;\n+      Count     : Count_Type := 1);\n+\n+   procedure Delete_Children\n+     (Container : in out Tree;\n+      Parent    : Cursor);\n+\n+   procedure Copy_Subtree\n+     (Target   : in out Tree;\n+      Parent   : Cursor;\n+      Before   : Cursor;\n+      Source   : Cursor);\n+\n+   procedure Splice_Subtree\n+     (Target   : in out Tree;\n+      Parent   : Cursor;\n+      Before   : Cursor;\n+      Source   : in out Tree;\n+      Position : in out Cursor);\n+\n+   procedure Splice_Subtree\n+     (Container : in out Tree;\n+      Parent    : Cursor;\n+      Before    : Cursor;\n+      Position  : Cursor);\n+\n+   procedure Splice_Children\n+     (Target          : in out Tree;\n+      Target_Parent   : Cursor;\n+      Before          : Cursor;\n+      Source          : in out Tree;\n+      Source_Parent   : Cursor);\n+\n+   procedure Splice_Children\n+     (Container       : in out Tree;\n+      Target_Parent   : Cursor;\n+      Before          : Cursor;\n+      Source_Parent   : Cursor);\n+\n+   function Parent (Position : Cursor) return Cursor;\n+\n+   function First_Child (Parent : Cursor) return Cursor;\n+\n+   function First_Child_Element (Parent : Cursor) return Element_Type;\n+\n+   function Last_Child (Parent : Cursor) return Cursor;\n+\n+   function Last_Child_Element (Parent : Cursor) return Element_Type;\n+\n+   function Next_Sibling (Position : Cursor) return Cursor;\n+\n+   function Previous_Sibling (Position : Cursor) return Cursor;\n+\n+   procedure Next_Sibling (Position : in out Cursor);\n+\n+   procedure Previous_Sibling (Position : in out Cursor);\n+\n+   --  This version of the AI:\n+   --   10-06-02  AI05-0136-1/07\n+   --  declares Iterate_Children this way:\n+   --\n+   --  procedure Iterate_Children\n+   --    (Container : Tree;\n+   --     Parent    : Cursor;\n+   --     Process   : not null access procedure (Position : Cursor));\n+   --\n+   --  It seems that the Container parameter is there by mistake, but\n+   --  we need an official ruling from the ARG.  ???\n+\n+   procedure Iterate_Children\n+     (Parent  : Cursor;\n+      Process : not null access procedure (Position : Cursor));\n+\n+   procedure Reverse_Iterate_Children\n+     (Parent  : Cursor;\n+      Process : not null access procedure (Position : Cursor));\n+\n+private\n+\n+   type Children_Type is record\n+      First : Count_Type'Base;\n+      Last  : Count_Type'Base;\n+   end record;\n+\n+   type Tree_Node_Type is record\n+      Parent   : Count_Type'Base;\n+      Prev     : Count_Type'Base;\n+      Next     : Count_Type'Base;\n+      Children : Children_Type;\n+   end record;\n+\n+   type Tree_Node_Array is array (Count_Type range <>) of Tree_Node_Type;\n+   type Element_Array is array (Count_Type range <>) of Element_Type;\n+\n+   type Tree (Capacity : Count_Type) is tagged record\n+      Nodes    : Tree_Node_Array (0 .. Capacity) := (others => <>);\n+      Elements : Element_Array (1 .. Capacity) := (others => <>);\n+      Free     : Count_Type'Base := -1;\n+      Busy     : Integer := 0;\n+      Lock     : Integer := 0;\n+      Count    : Count_Type := 0;\n+   end record;\n+\n+   use Ada.Streams;\n+\n+   procedure Write\n+     (Stream    : not null access Root_Stream_Type'Class;\n+      Container : Tree);\n+\n+   for Tree'Write use Write;\n+\n+   procedure Read\n+     (Stream    : not null access Root_Stream_Type'Class;\n+      Container : out Tree);\n+\n+   for Tree'Read use Read;\n+\n+   type Tree_Access is access all Tree;\n+   for Tree_Access'Storage_Size use 0;\n+\n+   type Cursor is record\n+      Container : Tree_Access;\n+      Node      : Count_Type'Base := -1;\n+   end record;\n+\n+   procedure Write\n+     (Stream   : not null access Root_Stream_Type'Class;\n+      Position : Cursor);\n+\n+   for Cursor'Write use Write;\n+\n+   procedure Read\n+     (Stream   : not null access Root_Stream_Type'Class;\n+      Position : out Cursor);\n+\n+   for Cursor'Read use Read;\n+\n+   Empty_Tree : constant Tree := Tree'(Capacity => 0, others => <>);\n+\n+   No_Element : constant Cursor := Cursor'(others => <>);\n+\n+end Ada.Containers.Bounded_Multiway_Trees;"}, {"sha": "55090e72de33d69967cfcac3e706dbe6dc5a9d81", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -176,14 +176,8 @@ package body Exp_Util is\n          Ti  : Entity_Id;\n \n       begin\n-         --  For now, we simply ignore a call where the argument has no type\n-         --  (probably case of unanalyzed condition), or has a type that is not\n-         --  Boolean. This is because this is a pretty marginal piece of\n-         --  functionality, and violations of these rules are likely to be\n-         --  truly marginal (how much code uses Fortran Logical as the barrier\n-         --  to a protected entry?) and we do not want to blow up existing\n-         --  programs. We can change this to an assertion after 3.12a is\n-         --  released ???\n+         --  Defend against a call where the argument has no type, or has a\n+         --  type that is not Boolean. This can occur because of prior errors.\n \n          if No (T) or else not Is_Boolean_Type (T) then\n             return;"}, {"sha": "48725cff908bee5f217b212e02f82fb1bff0687f", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -6258,8 +6258,8 @@ The use of AND/OR operators is not permitted except in the cases of modular\n operands, array operands, and simple stand-alone boolean variables or\n boolean constants. In all other cases AND THEN/OR ELSE are required.\n \n-@item ^c^COMMENTS^\n-@emph{Check comments.}\n+@item ^c^COMMENTS^ (double space)\n+@emph{Check comments, double space.}\n Comments must meet the following set of rules:\n \n @itemize @bullet\n@@ -6310,6 +6310,11 @@ example:\n @end smallexample\n @end itemize\n \n+@item ^C^COMMENTS1^ (single space)\n+@emph{Check comments, single space.}\n+This is identical to @code{^c^COMMENTS} except that only one space\n+is required following the @code{--} of a comment instead of two.\n+\n @item ^d^DOS_LINE_ENDINGS^\n @emph{Check no DOS line terminators present.}\n All lines must be terminated by a single ASCII.LF"}, {"sha": "1fdf36adff907181a7e1436239c25088b56f4ab8", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -517,6 +517,7 @@ package body Impunit is\n      \"a-coinho\",    -- Ada.Containers.Indefinite_Holders\n      \"a-comutr\",    -- Ada.Containers.Multiway_Trees\n      \"a-cimutr\",    -- Ada.Containers.Indefinite_Multiway_Trees\n+     \"a-cbmutr\",    -- Ada.Containers.Bounded_Multiway_Trees\n      \"a-extiin\",    -- Ada.Execution_Time.Interrupts\n      \"a-iteint\",    -- Ada.Iterator_Interfaces\n "}, {"sha": "2935bdbe6fbcfa279b16bcb6f6f239263410778a", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -919,6 +919,9 @@ package body Scng is\n          Err : Boolean;\n          --  Error flag for Scan_Wide call\n \n+         String_Start : Source_Ptr;\n+         --  Point to first character of string\n+\n          procedure Error_Bad_String_Char;\n          --  Signal bad character in string/character literal. On entry\n          --  Scan_Ptr points to the improper character encountered during the\n@@ -966,13 +969,16 @@ package body Scng is\n          -------------------------------\n \n          procedure Error_Unterminated_String is\n+            S : Source_Ptr;\n+\n          begin\n             --  An interesting little refinement. Consider the following\n             --  examples:\n \n             --     A := \"this is an unterminated string;\n             --     A := \"this is an unterminated string &\n             --     P(A, \"this is a parameter that didn't get terminated);\n+            --     P(\"this is a parameter that didn't get terminated, A);\n \n             --  We fiddle a little to do slightly better placement in these\n             --  cases also if there is white space at the end of the line we\n@@ -1012,6 +1018,8 @@ package body Scng is\n                return;\n             end if;\n \n+            --  Backup over semicolon or right-paren/semicolon sequence\n+\n             if Source (Scan_Ptr - 1) = ';' then\n                Scan_Ptr := Scan_Ptr - 1;\n                Unstore_String_Char;\n@@ -1022,6 +1030,25 @@ package body Scng is\n                end if;\n             end if;\n \n+            --  See if there is a comma in the string, if so, guess that\n+            --  the first comma terminates the string.\n+\n+            S := String_Start;\n+            while S < Scan_Ptr loop\n+               if Source (S) = ',' then\n+                  while Scan_Ptr > S loop\n+                     Scan_Ptr := Scan_Ptr - 1;\n+                     Unstore_String_Char;\n+                  end loop;\n+\n+                  exit;\n+               end if;\n+\n+               S := S + 1;\n+            end loop;\n+\n+            --  Now we have adjusted the scan pointer, give message\n+\n             Error_Msg_S -- CODEFIX\n               (\"missing string quote\");\n          end Error_Unterminated_String;\n@@ -1161,6 +1188,8 @@ package body Scng is\n          --  quote). The latter case is an error detected by the character\n          --  literal circuit.\n \n+         String_Start := Scan_Ptr;\n+\n          Delimiter := Source (Scan_Ptr);\n          Accumulate_Checksum (Delimiter);\n "}, {"sha": "d3d8528c872161a56caba92c6355b40d5a9a9e08", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -481,7 +481,10 @@ package body Sem_Ch11 is\n                   --  handler, since this may result in false positives, since\n                   --  the handler may handle the exception and return normally.\n \n-                  --  First find enclosing sequence of statements\n+                  --  First find the enclosing handled sequence of statements\n+                  --  (note, we could also look for a handler in an outer block\n+                  --  but currently we don't, and in that case we'll emit the\n+                  --  warning).\n \n                   Par := N;\n                   loop"}, {"sha": "7cb4d823a752934297ece1da5adf4a1ea002885e", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -507,7 +507,9 @@ package body Styleg is\n             S := Scan_Ptr + 2;\n             while Source (S) >= ' ' loop\n                if Source (S) /= '-' then\n-                  if Is_Box_Comment then\n+                  if Is_Box_Comment\n+                    or else Style_Check_Comments_Spacing = 1\n+                  then\n                      Error_Space_Required (Scan_Ptr + 2);\n                   else\n                      Error_Msg -- CODEFIX\n@@ -522,14 +524,17 @@ package body Styleg is\n \n          --  If we are followed by a blank, then the comment is OK if the\n          --  character following this blank is another blank or a format\n-         --  effector.\n+         --  effector, or if the required comment spacing is 1.\n \n-         elsif Source (Scan_Ptr + 3) <= ' ' then\n+         elsif Source (Scan_Ptr + 3) <= ' '\n+           or else Style_Check_Comments_Spacing = 1\n+         then\n             return;\n \n-         --  Here is the case where we only have one blank after the two\n-         --  minus signs, which is an error unless the line ends with two\n-         --  minus signs, the case of a box comment.\n+         --  Here is the case where we only have one blank after the two minus\n+         --  signs, with Style_Check_Comments_Spacing set to 2, which is an\n+         --  error unless the line ends with two minus signs, the case of a\n+         --  box comment.\n \n          elsif not Is_Box_Comment then\n             Error_Space_Required (Scan_Ptr + 3);"}, {"sha": "cce2b8ff74593a8fb1190a3461464216475fb13b", "filename": "gcc/ada/stylesw.adb", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fstylesw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fstylesw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.adb?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -160,7 +160,13 @@ package body Stylesw is\n       Add ('A', Style_Check_Array_Attribute_Index);\n       Add ('b', Style_Check_Blanks_At_End);\n       Add ('B', Style_Check_Boolean_And_Or);\n-      Add ('c', Style_Check_Comments);\n+\n+      if Style_Check_Comments_Spacing = 2 then\n+         Add ('c', Style_Check_Comments);\n+      elsif Style_Check_Comments_Spacing = 1 then\n+         Add ('C', Style_Check_Comments);\n+      end if;\n+\n       Add ('d', Style_Check_DOS_Line_Terminator);\n       Add ('e', Style_Check_End_Labels);\n       Add ('f', Style_Check_Form_Feeds);\n@@ -322,6 +328,11 @@ package body Stylesw is\n \n             when 'c' =>\n                Style_Check_Comments              := True;\n+               Style_Check_Comments_Spacing      := 2;\n+\n+            when 'C' =>\n+               Style_Check_Comments              := True;\n+               Style_Check_Comments_Spacing      := 1;\n \n             when 'd' =>\n                Style_Check_DOS_Line_Terminator   := True;\n@@ -484,7 +495,7 @@ package body Stylesw is\n             when 'B' =>\n                Style_Check_Boolean_And_Or        := False;\n \n-            when 'c' =>\n+            when 'c' | 'C' =>\n                Style_Check_Comments              := False;\n \n             when 'd' =>"}, {"sha": "fc6f5ef13ba6e32f2be7cdb6e00d27cae5e4d6b7", "filename": "gcc/ada/stylesw.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fstylesw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fstylesw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.ads?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -94,7 +94,8 @@ package Stylesw is\n    --      The comment characters are followed by an exclamation point (the\n    --      sequence --! is used by gnatprep for marking deleted lines).\n    --\n-   --      The comment characters are followed by two space characters\n+   --      The comment characters are followed by two space characters if\n+   --      Comment_Spacing = 2, else by one character if Comment_Spacing = 1.\n    --\n    --      The line consists entirely of minus signs\n    --\n@@ -104,6 +105,9 @@ package Stylesw is\n    --  Note: the reason for the last two conditions is to allow \"boxed\"\n    --  comments where only a single space separates the comment characters.\n \n+   Style_Check_Comments_Spacing : Nat range 1 .. 2;\n+   --  Spacing required for comments, valid only if Style_Check_Comments true.\n+\n    Style_Check_DOS_Line_Terminator : Boolean := False;\n    --  This can be set true by using the -gnatyd switch. If it is True, then\n    --  the line terminator must be a single LF, without an associated CR (e.g."}, {"sha": "6c9839ddd14475a23077c97c3885122968040ee6", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -548,7 +548,8 @@ begin\n    Write_Line (\"        A    check array attribute indexes\");\n    Write_Line (\"        b    check no blanks at end of lines\");\n    Write_Line (\"        B    check no use of AND/OR for boolean expressions\");\n-   Write_Line (\"        c    check comment format\");\n+   Write_Line (\"        c    check comment format (two spaces)\");\n+   Write_Line (\"        C    check comment format (one space)\");\n    Write_Line (\"        d    check no DOS line terminators\");\n    Write_Line (\"        e    check end/exit labels present\");\n    Write_Line (\"        f    check no form feeds/vertical tabs in source\");"}, {"sha": "b742c69265b5dac7f2cde80a50dd8775e65fcdec", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=a2773bd3e6fd84714d9568ebc9e15bc46dcd1c6f", "patch": "@@ -2319,6 +2319,10 @@ package VMS_Data is\n                                                \"-gnaty-B \"                 &\n                                             \"COMMENTS \"                    &\n                                                \"-gnatyc \"                  &\n+                                            \"COMMENTS1 \"                   &\n+                                               \"-gnatyC \"                  &\n+                                            \"COMMENTS2 \"                   &\n+                                               \"-gnatyc \"                  &\n                                             \"NOCOMMENTS \"                  &\n                                                \"-gnaty-c \"                 &\n                                             \"DOS_LINE_ENDINGS \"            &\n@@ -2409,7 +2413,7 @@ package VMS_Data is\n    --   input source code.  The following keywords are supported:\n    --\n    --      ALL_BUILTIN (D)      Equivalent to the following list of options:\n-   --                           3, ATTRIBUTE, BLANKS, COMMENTS, END, VTABS,\n+   --                           3, ATTRIBUTE, BLANKS, COMMENTS2, END, VTABS,\n    --                           HTABS, IF_THEN, KEYWORD, LAYOUT, LINE_LENGTH,\n    --                           PRAGMA, REFERENCES, SPECS, TOKEN.\n    --\n@@ -2441,8 +2445,8 @@ package VMS_Data is\n    --                           enforce a canonical format for the use of\n    --                           blanks to separate source tokens.\n    --\n-   --      COMMENTS             Check comments.\n-   --                           Comments must meet the following set of rules:\n+   --      COMMENTS2            Check comments.\n+   --      COMMENTS             Comments must meet the following set of rules:\n    --\n    --                             * The \"--\" that starts the column must either\n    --                               start in column one, or else at least one\n@@ -2488,6 +2492,11 @@ package VMS_Data is\n    --                               -- This is a box comment --\n    --                               ---------------------------\n    --\n+   --      COMMENTS1            Check comments (single space).\n+   --                           Like COMMENTS2, but the -- of a comment only\n+   --                           requires one or more spaces following, instead\n+   --                           of two or more spaces.\n+   --\n    --      DOS_LINE_ENDINGS     Check that no DOS line terminators are present\n    --                           All lines must be terminated by a single\n    --                           ASCII.LF character. In particular the DOS line"}]}