{"sha": "9723778490b9963e98658dc82a5f48b291cfe67a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcyMzc3ODQ5MGI5OTYzZTk4NjU4ZGM4MmE1ZjQ4YjI5MWNmZTY3YQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2007-09-21T14:14:45Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2007-09-21T14:14:45Z"}, "message": "utils.c (type_for_nonaliased_component_p): Return false for all AGGREGATE_TYPEs.\n\n2007-09-21  Olivier Hainque  <hainque@adacore.com>\n\n\tada/\n        * utils.c (type_for_nonaliased_component_p): Return false for\n        all AGGREGATE_TYPEs.\n\n\ttestsuite/\n        * gnat.dg/nested_subtype_byref.ad[bs]: Part of new test.\n        * gnat.dg/test_nested_subtype_byref.adb: New test.\n\nFrom-SVN: r128650", "tree": {"sha": "2e798ccdee0816b4a2dc1b1ce10530fe5848a6ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e798ccdee0816b4a2dc1b1ce10530fe5848a6ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9723778490b9963e98658dc82a5f48b291cfe67a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9723778490b9963e98658dc82a5f48b291cfe67a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9723778490b9963e98658dc82a5f48b291cfe67a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9723778490b9963e98658dc82a5f48b291cfe67a/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5bc31e42071e1cc19560dab58d5e574c44b464f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc31e42071e1cc19560dab58d5e574c44b464f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bc31e42071e1cc19560dab58d5e574c44b464f9"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "bd2560cfcac98c2edb20d6f815072024efdadceb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9723778490b9963e98658dc82a5f48b291cfe67a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9723778490b9963e98658dc82a5f48b291cfe67a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9723778490b9963e98658dc82a5f48b291cfe67a", "patch": "@@ -1,3 +1,8 @@\n+2007-09-21  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* utils.c (type_for_nonaliased_component_p): Return false for\n+\tall AGGREGATE_TYPEs.\n+\n 2007-09-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* decl.c (gnat_to_gnu_entity) <object>: Make again the type of an"}, {"sha": "e9adfa649a0d81c554e6a396bc2afe2dc1ef775f", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9723778490b9963e98658dc82a5f48b291cfe67a/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9723778490b9963e98658dc82a5f48b291cfe67a/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=9723778490b9963e98658dc82a5f48b291cfe67a", "patch": "@@ -4005,10 +4005,22 @@ type_for_nonaliased_component_p (tree gnu_type)\n   if (must_pass_by_ref (gnu_type) || default_pass_by_ref (gnu_type))\n     return false;\n \n-  /* We might need the address for any array type, even if normally\n-     passed by copy, to construct a fat pointer if the component is\n-     used as an actual for an unconstrained formal.  */\n-  if (TREE_CODE (gnu_type) == ARRAY_TYPE)\n+  /* We used to say that any component of aggregate type is aliased\n+     because the front-end may take 'Reference of it.  The front-end\n+     has been enhanced in the meantime so as to use a renaming instead\n+     in most cases, but the back-end can probably take the address of\n+     such a component too so we go for the conservative stance.\n+\n+     For instance, we might need the address of any array type, even\n+     if normally passed by copy, to construct a fat pointer if the\n+     component is used as an actual for an unconstrained formal.\n+\n+     Likewise for record types: even if a specific record subtype is\n+     passed by copy, the parent type might be passed by ref (e.g. if\n+     it's of variable size) and we might take the address of a child\n+     component to pass to a parent formal.  We have no way to check\n+     for such conditions here.  */\n+  if (AGGREGATE_TYPE_P (gnu_type))\n     return false;\n \n   return true;"}, {"sha": "3b95f1d8833b53c376bdc808bb9464f9479d57bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9723778490b9963e98658dc82a5f48b291cfe67a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9723778490b9963e98658dc82a5f48b291cfe67a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9723778490b9963e98658dc82a5f48b291cfe67a", "patch": "@@ -1,3 +1,8 @@\n+2007-09-21  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gnat.dg/nested_subtype_byref.ad[bs]: Part of new test.\n+\t* gnat.dg/test_nested_subtype_byref.adb: New test.\n+\n 2007-09-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/33439"}, {"sha": "b232aa36da266852515ef1f88e1ae533d04cbd29", "filename": "gcc/testsuite/gnat.dg/nested_subtype_byref.adb", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9723778490b9963e98658dc82a5f48b291cfe67a/gcc%2Ftestsuite%2Fgnat.dg%2Fnested_subtype_byref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9723778490b9963e98658dc82a5f48b291cfe67a/gcc%2Ftestsuite%2Fgnat.dg%2Fnested_subtype_byref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnested_subtype_byref.adb?ref=9723778490b9963e98658dc82a5f48b291cfe67a", "patch": "@@ -0,0 +1,23 @@\n+\n+package body Nested_Subtype_Byref is\n+\n+   type Data (Stamped : Boolean) is record\n+      case Stamped is\n+         when True   => Valid : Boolean;\n+         when others => null;\n+      end case;\n+   end record;\n+\n+   type Message is record\n+      F : Integer := 1;\n+      D : Data (Stamped => True);\n+   end record;\n+\n+   procedure Check  is\n+      M : Message;\n+   begin\n+      M.D.Valid := True;\n+   end;\n+\n+end;\n+"}, {"sha": "24e3f1eaaf8d52e5d22f6d83a73074bc13a28393", "filename": "gcc/testsuite/gnat.dg/nested_subtype_byref.ads", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9723778490b9963e98658dc82a5f48b291cfe67a/gcc%2Ftestsuite%2Fgnat.dg%2Fnested_subtype_byref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9723778490b9963e98658dc82a5f48b291cfe67a/gcc%2Ftestsuite%2Fgnat.dg%2Fnested_subtype_byref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnested_subtype_byref.ads?ref=9723778490b9963e98658dc82a5f48b291cfe67a", "patch": "@@ -0,0 +1,4 @@\n+\n+package Nested_Subtype_Byref is\n+   procedure Check;\n+end;"}, {"sha": "282aefd1a29dda0baf111f62e7d404c6700dd812", "filename": "gcc/testsuite/gnat.dg/test_nested_subtype_byref.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9723778490b9963e98658dc82a5f48b291cfe67a/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_nested_subtype_byref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9723778490b9963e98658dc82a5f48b291cfe67a/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_nested_subtype_byref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_nested_subtype_byref.adb?ref=9723778490b9963e98658dc82a5f48b291cfe67a", "patch": "@@ -0,0 +1,8 @@\n+-- { dg-do run }\n+-- { dg-options \"-O2\" }\n+\n+with Nested_Subtype_Byref;\n+procedure Test_Nested_Subtype_Byref is\n+begin\n+   Nested_Subtype_Byref.Check;\n+end;"}]}