{"sha": "0bbb169793d38721a6c0c5de8bc0fdaeafee03ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJiYjE2OTc5M2QzODcyMWE2YzBjNWRlOGJjMGZkYWVhZmVlMDNiYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-27T22:47:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-27T22:47:40Z"}, "message": "(--enable-threads): New parameter.\n\nFrom-SVN: r14348", "tree": {"sha": "f91b2941fa00ab77eb3307331271508cce47c568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f91b2941fa00ab77eb3307331271508cce47c568"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bbb169793d38721a6c0c5de8bc0fdaeafee03ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bbb169793d38721a6c0c5de8bc0fdaeafee03ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bbb169793d38721a6c0c5de8bc0fdaeafee03ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bbb169793d38721a6c0c5de8bc0fdaeafee03ba/comments", "author": null, "committer": null, "parents": [{"sha": "24e22c117c83356e1028f41a9be50d8e76acd691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e22c117c83356e1028f41a9be50d8e76acd691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24e22c117c83356e1028f41a9be50d8e76acd691"}], "stats": {"total": 119, "additions": 80, "deletions": 39}, "files": [{"sha": "2d72d2b2173f63012a41ea91b305801526e55761", "filename": "gcc/configure.in", "status": "modified", "additions": 80, "deletions": 39, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bbb169793d38721a6c0c5de8bc0fdaeafee03ba/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bbb169793d38721a6c0c5de8bc0fdaeafee03ba/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=0bbb169793d38721a6c0c5de8bc0fdaeafee03ba", "patch": "@@ -77,6 +77,37 @@ if [[ x$gxx_include_dir = x ]]; then\n \tgxx_include_dir='${prefix}/include/g++'\n fi\n \n+# Enable threads\n+# Pass with no value to take the default\n+# Pass with a value to specify a thread package\n+AC_ARG_ENABLE(threads,\n+[  --enable-threads        enable thread usage for target GCC.\n+  --enable-threads=LIB    use LIB thread package for target GCC.],\n+if [[[ x$enable_threads = xno ]]]; then\n+\tenable_threads=''\n+fi,\n+enable_threads='')\n+\n+# Check if a valid thread package\n+case x${enable_threads} in\n+\tx | xno)\n+\t\t# No threads\n+\t\tthread_file='single'\n+\t\t;;\n+\txyes)\n+\t\t# default\n+\t\tthread_file=''\n+\t\t;;\n+\txdecosf1 | xirix | xmach | xos2 | xposix | xpthreads | xsingle | \\\n+\txsolaris | xwin32)\n+\t\tthread_file=$enable_threads\n+\t\t;;\n+\t*)\n+\t\techo \"$enable_threads is an unknown thread package\" 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+\n # Determine the host, build, and target systems\n AC_CANONICAL_SYSTEM\n \n@@ -142,16 +173,6 @@ for machine in $build $host $target; do\n \ttruncate_target=\n \t# Set this if gdb needs a dir command with `dirname $out_file`\n \tgdb_needs_out_file_path=\n-\t# Set this to the tag of the Objective-C runtime thread file to compile\n-        # It may be set (in the absence of autoconf configuration) by\n-        # --enable-objcthreads=posix (for instance) where it's not\n-        # well defined as is the case for Linux.\n-\tobjc_thread_file=\n-        case x${enable_objcthreads-x} in\n-        x | xyes)\n-            echo \"\\`--enable-objcthreads' must be passed a value.\" 1>&2\n-            exit 1 ;;\n-        esac\n \t# Set this if the build machine requires executables to have a\n \t# file name suffix.\n \texeext=\n@@ -231,7 +252,6 @@ for machine in $build $host $target; do\n \talpha-*-linux*ecoff*)\n \t\ttm_file=\"${tm_file} alpha/linux.h\"\n \t\txm_file=\"${xm_file} alpha/xm-linux.h\"\n-\t\tobjc_thread_file=${enable_objcthreads-single}\n \t\ttarget_cpu_default=4\n \t\txmake_file=none\n \t\tfixincludes=Makefile.in\n@@ -316,7 +336,9 @@ for machine in $build $host $target; do\n \t\tthen\n \t\t\textra_programs=ld.exe\n \t\tfi\n-\t\tobjc_thread_file=${enable_objcthreads-win32}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='win32'\n+\t\tfi\n \t\t;;\n \talpha-dec-vms*)\n \t\ttm_file=alpha/vms.h\n@@ -620,7 +642,9 @@ for machine in $build $host $target; do\n \t\ttmake_file=i386/t-next\n \t\txmake_file=i386/x-next\n \t\textra_objs=nextstep.o\n-\t\tobjc_thread_file=${enable_objcthreads-mach}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='mach'\n+\t\tfi\n \t\t;;\n \ti[[3456]]86-sequent-bsd*) \t\t# 80386 from Sequent\n \t\tuse_collect2=yes\n@@ -741,7 +765,6 @@ for machine in $build $host $target; do\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n \t\tbroken_install=yes\n \t\tgnu_ld=yes\n-\t\tobjc_thread_file=${enable_objcthreads-single}\n \t\t;;\n \ti[[3456]]86-*-linux*aout*)\t\t# Intel 80386's running Linux\n \t\txm_file=i386/xm-linux.h\t\t# with a.out format\n@@ -751,7 +774,6 @@ for machine in $build $host $target; do\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n \t\tbroken_install=yes\n \t\tgnu_ld=yes\n-\t\tobjc_thread_file=${enable_objcthreads-single}\n \t\t;;\n \ti[[3456]]86-*-linux*)\t\t# Intel 80386's running Linux\n \t\txm_file=i386/xm-linux.h # with ELF format\n@@ -762,7 +784,6 @@ for machine in $build $host $target; do\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n \t\tbroken_install=yes\n \t\tgnu_ld=yes\n-\t\tobjc_thread_file=${enable_objcthreads-single}\n \t\t;;\n \ti[[3456]]86-*-gnu*)\n \t\t;;\n@@ -876,7 +897,9 @@ for machine in $build $host $target; do\n \t\txmake_file=x-svr4\n \t\tfixincludes=fixinc.svr4\n \t\tbroken_install=yes\n-\t\tobjc_thread_file=${enable_objcthreads-solaris}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='solaris'\n+\t\tfi\n \t\t;;\n \ti[[3456]]86-*-sysv4*)\t\t# Intel 80386's running system V.4\n \t\txm_file=i386/xm-sysv4.h\n@@ -923,7 +946,9 @@ for machine in $build $host $target; do\n \t\txmake_file=i386/x-cygwin32\n \t\textra_objs=winnt.o\n \t\tfixincludes=Makefile.in\n-\t\tobjc_thread_file=${enable_objcthreads-win32}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='win32'\n+\t\tfi\n \t\texeext=.exe\n \t\t;;\n \ti[[3456]]86-*-mingw32)\n@@ -933,7 +958,9 @@ for machine in $build $host $target; do\n \t\textra_objs=winnt.o\n \t\txmake_file=i386/x-cygwin32\n \t\tfixincludes=Makefile.in\n-\t\tobjc_thread_file=${enable_objcthreads-win32}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='win32'\n+\t\tfi\n \t\texeext=.exe\n \t\t;;\n \ti[[3456]]86-*-winnt3*)\n@@ -949,7 +976,9 @@ for machine in $build $host $target; do\n \t\tthen\n \t\t\textra_programs=ld.exe\n \t\tfi\n-\t\tobjc_thread_file=${enable_objcthreads-win32}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='win32'\n+\t\tfi\n \t\t;;\n \ti[[3456]]86-dg-dgux)\n \t\txm_file=i386/xm-dgux.h\n@@ -1300,7 +1329,9 @@ for machine in $build $host $target; do\n \t\txmake_file=m68k/x-next\n \t\textra_objs=nextstep.o\n \t\textra_headers=math-68881.h\n-\t\tobjc_thread_file=${enable_objcthreads-mach}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='mach'\n+\t\tfi\n \t\t;;\n \tm68k-sun-sunos3*)\n \t\tif [[ x$with_fp = xno ]]\n@@ -1378,7 +1409,6 @@ for machine in $build $host $target; do\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n \t\textra_headers=math-68881.h\n \t\tgnu_ld=yes\n-\t\tobjc_thread_file=${enable_objcthreads-single}\n \t\t;;\n \tm68k-*-linux*)\t\t\t# Motorola m68k's running Linux\n \t\txm_file=m68k/xm-linux.h\t# with ELF format\n@@ -1389,7 +1419,6 @@ for machine in $build $host $target; do\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n \t\textra_headers=math-68881.h\n \t\tgnu_ld=yes\n-\t\tobjc_thread_file=${enable_objcthreads-single}\n \t\t;;\n \tm68k-*-psos*)\n \t\ttmake_file=m68k/t-m68kbare\n@@ -1482,7 +1511,9 @@ for machine in $build $host $target; do\n \t\tfixincludes=fixinc.irix\n \t\txmake_file=mips/x-iris6\n \t\ttmake_file=mips/t-iris6\n-\t\tobjc_thread_file=${enable_objcthreads-irix}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='irix'\n+\t\tfi\n \t\t;;\n \tmips-sgi-irix5cross64)\t\t# Irix5 host, Irix 6 target, cross64\n \t\ttm_file=mips/cross64.h\n@@ -1493,7 +1524,9 @@ for machine in $build $host $target; do\n \t\ttmake_file=mips/t-cross64\n \t\t# See comment in mips/iris[56].h files.\n \t\tuse_collect2=yes\n-\t\tobjc_thread_file=${enable_objcthreads-irix}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='irix'\n+\t\tfi\n \t\t;;\n         mips-sni-sysv4)\n \t\tif [[ x$gas = xyes ]]\n@@ -1535,7 +1568,9 @@ for machine in $build $host $target; do\n \t\ttmake_file=mips/t-mips-gas\n \t\t# See comment in mips/iris5.h file.\n \t\tuse_collect2=yes\n-\t\tobjc_thread_file=${enable_objcthreads-irix}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='irix'\n+\t\tfi\n \t\t;;\n \tmips-sgi-irix4loser*)\t\t# Mostly like a MIPS.\n \t\ttm_file=mips/iris4loser.h\n@@ -1555,7 +1590,9 @@ for machine in $build $host $target; do\n \t\tthen\n \t\t\tuse_collect2=yes\n \t\tfi\n-\t\tobjc_thread_file=${enable_objcthreads-irix}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='irix'\n+\t\tfi\n \t\t;;\n \tmips-sgi-irix4*)\t\t# Mostly like a MIPS.\n \t\ttm_file=mips/iris4.h\n@@ -1575,7 +1612,9 @@ for machine in $build $host $target; do\n \t\tthen\n \t\t\tuse_collect2=yes\n \t\tfi\n-\t\tobjc_thread_file=${enable_objcthreads-irix}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='irix'\n+\t\tfi\n \t\t;;\n \tmips-sgi-*)\t\t\t# Mostly like a MIPS.\n \t\ttm_file=mips/iris3.h\n@@ -2054,7 +2093,6 @@ for machine in $build $host $target; do\n \t\tfi\n \t\txmake_file=rs6000/x-sysv4\n \t\tfixincludes=Makefile.in\n-\t\tobjc_thread_file=${enable_objcthreads-single}\n \t\textra_headers=ppc-asm.h\n \t\t;;\n         powerpc-*-vxworks*)\n@@ -2098,7 +2136,9 @@ for machine in $build $host $target; do\n                 tmake_file=rs6000/t-winnt\n #               extra_objs=pe.o\n \t\tfixincludes=Makefile.in\n-\t\tobjc_thread_file=${enable_objcthreads-win32}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='win32'\n+\t\tfi\n \t\textra_headers=ppc-asm.h\n \t\t;;\n \tpowerpcle-*-pe | powerpcle-*-cygwin32)\n@@ -2108,7 +2148,9 @@ for machine in $build $host $target; do\n \t\txmake_file=rs6000/x-cygwin32\n #\t\textra_objs=pe.o\n \t\tfixincludes=Makefile.in\n-\t\tobjc_thread_file=${enable_objcthreads-win32}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='win32'\n+\t\tfi\n \t\texeext=.exe\n \t\textra_headers=ppc-asm.h\n \t\t;;\n@@ -2207,7 +2249,6 @@ for machine in $build $host $target; do\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n \t\tbroken_install=yes\n \t\tgnu_ld=yes\n-\t\tobjc_thread_file=${enable_objcthreads-single}\n \t\t;;\n \tsparc-*-linux*)\t\t\t# Sparc's running Linux, ELF\n \t\txm_file=sparc/xm-linux.h\n@@ -2219,7 +2260,6 @@ for machine in $build $host $target; do\n \t\t# Don't use it. Linux uses a slightly different one.\n \t\t# The real one comes with the Linux C library.\n \t\t#extra_parts=\"crtbegin.o crtend.o\"\n-\t\tobjc_thread_file=${enable_objcthreads-single}\n \t\t;;\n \tsparc-*-lynxos*)\n \t\tif [[ x$gas = xyes ]]\n@@ -2244,7 +2284,9 @@ for machine in $build $host $target; do\n \t\textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n \t\tfixincludes=fixinc.svr4\n \t\tbroken_install=yes\n-\t\tobjc_thread_file=${enable_objcthreads-solaris}\n+\t\tif [[ x$thread_file = x ]]; then\n+\t\t\tthread_file='solaris'\n+\t\tfi\n \t\t;;\n \tsparc-*-sunos4.0*)\n \t\ttm_file=sparc/sunos4.h\n@@ -2571,10 +2613,9 @@ if [[ \"$host_xm_file\" != \"$build_xm_file\" ]]; then\n \tfi\n fi\n \n-if [[ x$objc_thread_file = x ]]\n-then objc_thread_file=${enable_objcthreads-single}\n+if [[ x$thread_file = x ]]\n+then thread_file='single'\n fi\n-echo \"Using \\`$srcdir/objc/thr-${objc_thread_file}.c' as Objective-C Runtime thread file.\"\n \n # Set up the header files.\n # $links is the list of header files to create.\n@@ -2975,7 +3016,7 @@ AC_SUBST(build_xm_file_list)\n AC_SUBST(host_xm_file_list)\n AC_SUBST(lang_specs_files)\n AC_SUBST(lang_options_files)\n-AC_SUBST(objc_thread_file)\n+AC_SUBST(thread_file)\n AC_SUBST(version)\n AC_SUBST(local_prefix)\n AC_SUBST(gxx_include_dir)\n@@ -3069,7 +3110,7 @@ host_xm_file_list='${host_xm_file_list}'\n host_xm_file_sub='${host_xm_file_sub}'\n lang_specs_files='${lang_specs_files}'\n lang_options_files='${lang_options_files}'\n-objc_thread_file='${objc_thread_file}'\n+thread_file='${thread_file}'\n version='${version}'\n local_prefix='${local_prefix}'\n gxx_include_dir='${gxx_include_dir}'"}]}