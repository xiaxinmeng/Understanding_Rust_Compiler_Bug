{"sha": "4bd5635487c4a0623c2ea4f825611edcc528a360", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJkNTYzNTQ4N2M0YTA2MjNjMmVhNGY4MjU2MTFlZGNjNTI4YTM2MA==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2003-07-22T10:54:14Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2003-07-22T10:54:14Z"}, "message": "re PR c++/3004 (Accepts illegal code)\n\n\tPR c++/3004\n\t* g++.dg/parse/typedef3.C: New test.\n\n\tPR c++/7906\n\t* g++.dg/parse/operator2.C: New test.\n\n\tPR c++/8895\n\t* g++.dg/parse/def-tmpl-arg1.C: New test.\n\n\tPR c++/9282\n\t* g++.dg/parse/funptr1.C: New test.\n\n\tPR c++/9452\n\t* g++.dg/parse/ambig3.C: New test.\n\n\tPR c++/9454\n\t* g++.dg/parse/operator3.C: New test.\n\n\tPR c++/9486\n\t* g++.dg/parse/template10.C: New test.\n\n\tPR c++/9488\n\t* g++.dg/parse/template11.C: New test.\n\n\tPR c++/10150\n\t* g++.dg/parse/invalid-op1.C: New test.\n\n\tPR c++/10247\n\t* g++.dg/parse/condexpr1.C: New test.\n\nFrom-SVN: r69670", "tree": {"sha": "4d437fc947a5a55626fea6398fa5b369ef68e534", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d437fc947a5a55626fea6398fa5b369ef68e534"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bd5635487c4a0623c2ea4f825611edcc528a360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bd5635487c4a0623c2ea4f825611edcc528a360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bd5635487c4a0623c2ea4f825611edcc528a360", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bd5635487c4a0623c2ea4f825611edcc528a360/comments", "author": null, "committer": null, "parents": [{"sha": "e0d1297c4320ae158fbba12f8d2a0ec2970462ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0d1297c4320ae158fbba12f8d2a0ec2970462ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0d1297c4320ae158fbba12f8d2a0ec2970462ba"}], "stats": {"total": 155, "additions": 155, "deletions": 0}, "files": [{"sha": "49f0c618e6852692321d4a0ade7ea069c7b0202e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4bd5635487c4a0623c2ea4f825611edcc528a360", "patch": "@@ -1,3 +1,35 @@\n+2003-07-22  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/3004\n+\t* g++.dg/parse/typedef3.C: New test.\n+\n+\tPR c++/7906\n+\t* g++.dg/parse/operator2.C: New test.\n+\n+\tPR c++/8895\n+\t* g++.dg/parse/def-tmpl-arg1.C: New test.\n+\n+\tPR c++/9282\n+\t* g++.dg/parse/funptr1.C: New test.\n+\n+\tPR c++/9452\n+\t* g++.dg/parse/ambig3.C: New test.\n+\n+\tPR c++/9454\n+\t* g++.dg/parse/operator3.C: New test.\n+\n+\tPR c++/9486\n+\t* g++.dg/parse/template10.C: New test.\n+\n+\tPR c++/9488\n+\t* g++.dg/parse/template11.C: New test.\n+\n+\tPR c++/10150\n+\t* g++.dg/parse/invalid-op1.C: New test.\n+\n+\tPR c++/10247\n+\t* g++.dg/parse/condexpr1.C: New test.\n+\n 2003-07-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/ext/packed3.C: New test."}, {"sha": "72ee960c95e4a731a5650661157da41eb47b1574", "filename": "gcc/testsuite/g++.dg/parse/ambig3.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig3.C?ref=4bd5635487c4a0623c2ea4f825611edcc528a360", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/9452\n+// Origin: Wolfgang Bangerth <bangerth@ticam.utexas.edu>\n+// { dg-do compile }\n+\n+template <int> struct A { static const int i = 1; };\n+template <int> struct B {};\n+\n+template <typename> void foo(B<0>) {} // { dg-error \"\" }\n+\n+template <typename, int j> B<A<j>::i-1> foo(B<j>) { return B<0>(); } // { dg-error \"\" }\n+\n+void bar() { foo<int>(B<0>()); } // { dg-error \"ambiguous\" }"}, {"sha": "1ca7dbfa64600458c13f5ec5be5f928a0b2662b1", "filename": "gcc/testsuite/g++.dg/parse/condexpr1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcondexpr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcondexpr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcondexpr1.C?ref=4bd5635487c4a0623c2ea4f825611edcc528a360", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/10247\n+// Origin: Lars Gullik Bj\ufffdnes <larsbj@lyx.org>\n+// { dg-do compile }\n+\n+struct A {};\n+\n+A const foo();\n+\n+void bar()\n+{\n+    A a = foo();\n+    A b = true ? a : foo();\n+}"}, {"sha": "fd85b97c15a20337e6d2c61638d09a56f3d707d7", "filename": "gcc/testsuite/g++.dg/parse/def-tmpl-arg1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdef-tmpl-arg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdef-tmpl-arg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdef-tmpl-arg1.C?ref=4bd5635487c4a0623c2ea4f825611edcc528a360", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/8895\n+// Origin: Wolfgang Bangerth <bangerth@ticam.utexas.edu>\n+// { dg-do compile }\n+\n+template <typename X, typename Y = B<X> > struct A // { dg-error \"\" }\n+{\n+    A();\n+    A(const A&);\n+}; // { dg-error \"\" }"}, {"sha": "bf63c122e8bc8e6ed549022eb17504e8d4ac8b2c", "filename": "gcc/testsuite/g++.dg/parse/funptr1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffunptr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffunptr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffunptr1.C?ref=4bd5635487c4a0623c2ea4f825611edcc528a360", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/9282\n+// Origin: Thomas Richter <thor@math.tu-berlin.de>\n+// { dg-do compile }\n+\n+typedef void (*fptr)();\n+\n+struct A\n+{\n+    template<int>    static void foo() {}\n+    template<fptr f> static void bar() { (*f)(); }\n+};\n+\n+fptr f = A::bar< A::foo<0> >;"}, {"sha": "37e480983f82861e0fa324559dcc277b53925a08", "filename": "gcc/testsuite/g++.dg/parse/invalid-op1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Finvalid-op1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Finvalid-op1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Finvalid-op1.C?ref=4bd5635487c4a0623c2ea4f825611edcc528a360", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/10150\n+// Origin: Tom Evans <te200@eng.cam.ac.uk>\n+// { dg-do compile }\n+\n+template <int I> struct A\n+{\n+    template <int> struct B\n+    {\n+        enum { e = I * A<I-1>::B }; // { dg-error \"\" }\n+    };\n+};\n+\n+A<0>::B<0> a; // { dg-error \"instantiated\" }"}, {"sha": "a9ebde0d4f5954493a2b55ec83fdae94c846379a", "filename": "gcc/testsuite/g++.dg/parse/operator2.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Foperator2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Foperator2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Foperator2.C?ref=4bd5635487c4a0623c2ea4f825611edcc528a360", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/7906\n+// Origin: Marcel Loose <loose@astron.nl>\n+// { dg-do compile }\n+\n+template <typename> struct A { typedef int X; };\n+\n+template <typename T> struct B\n+{\n+    typedef A<T> Y;\n+    struct C { operator typename Y::X() const; };\n+};\n+\n+template <typename T> B<T>::C::operator typename B<T>::Y::X() const { return 0; }\n+\n+B<int> b;"}, {"sha": "08f5c83f229d9aaaa5439df98be2a18f8a7d6435", "filename": "gcc/testsuite/g++.dg/parse/operator3.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Foperator3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Foperator3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Foperator3.C?ref=4bd5635487c4a0623c2ea4f825611edcc528a360", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/9454\n+// Origin: Wolfgang Bangerth <bangerth@ticam.utexas.edu>\n+// { dg-do compile }\n+\n+template <int> struct A\n+{\n+    struct B     { operator int (); };\n+    struct C : B { operator int (); };\n+};\n+\n+A<0> a;"}, {"sha": "d5dec6ed1119fe06b09bcd2495abcc2a61db04fa", "filename": "gcc/testsuite/g++.dg/parse/template10.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate10.C?ref=4bd5635487c4a0623c2ea4f825611edcc528a360", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/9486\n+// Origin: John Levon <levon@movementarian.org>\n+// { dg-do compile }\n+\n+template <typename> struct A\n+{\n+    template <typename T> void foo(T);\n+};\n+\n+template <typename T> void bar()\n+{\n+    A<void>().template foo<T>(0);\n+}\n+\n+template void bar<int>();"}, {"sha": "e651a3bd076ca766b8b54da001d5c6b18ae30487", "filename": "gcc/testsuite/g++.dg/parse/template11.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate11.C?ref=4bd5635487c4a0623c2ea4f825611edcc528a360", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/9488\n+// Origin: Wolfgang Bangerth <bangerth@ticam.utexas.edu>\n+// { dg-do compile }\n+\n+struct A\n+{\n+    template <typename> void foo() {}\n+};\n+\n+template <typename T> struct B\n+{\n+    void bar() { A().foo<T>(); }\n+};\n+\n+template struct B<int>;"}, {"sha": "380b75305420b4255565202d1aa858bd94fd45d5", "filename": "gcc/testsuite/g++.dg/parse/typedef3.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypedef3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd5635487c4a0623c2ea4f825611edcc528a360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypedef3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypedef3.C?ref=4bd5635487c4a0623c2ea4f825611edcc528a360", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/3004\n+// Origin: Travis J.I. Corcoran <tjic@permabit.com>\n+// { dg-do compile }\n+\n+struct A { typedef A* Ptr; };\n+\n+struct A::Ptr; // { dg-error \"\" }"}]}