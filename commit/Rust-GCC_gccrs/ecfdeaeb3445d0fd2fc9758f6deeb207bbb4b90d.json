{"sha": "ecfdeaeb3445d0fd2fc9758f6deeb207bbb4b90d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNmZGVhZWIzNDQ1ZDBmZDJmYzk3NThmNmRlZWIyMDdiYmI0YjkwZA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-12-01T02:03:24Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-12-01T02:03:24Z"}, "message": "sh.md (fpu_switch0, [...]): Only match on TARGET_SH4.\n\n* config/sh/sh.md (fpu_switch0, fpu_switch1, movpsi, fpu_switch,\nsplits): Only match on TARGET_SH4.\n\nFrom-SVN: r37907", "tree": {"sha": "a08f99604d8a8f3ed8ea92b695cb54d4536a6dbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a08f99604d8a8f3ed8ea92b695cb54d4536a6dbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecfdeaeb3445d0fd2fc9758f6deeb207bbb4b90d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecfdeaeb3445d0fd2fc9758f6deeb207bbb4b90d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecfdeaeb3445d0fd2fc9758f6deeb207bbb4b90d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecfdeaeb3445d0fd2fc9758f6deeb207bbb4b90d/comments", "author": null, "committer": null, "parents": [{"sha": "6934615b9736d0a777ce7f6933129ea1cdd2dd23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6934615b9736d0a777ce7f6933129ea1cdd2dd23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6934615b9736d0a777ce7f6933129ea1cdd2dd23"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "ebed5d0d2e7ac40638852c666e9b542a0cf4491b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecfdeaeb3445d0fd2fc9758f6deeb207bbb4b90d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecfdeaeb3445d0fd2fc9758f6deeb207bbb4b90d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecfdeaeb3445d0fd2fc9758f6deeb207bbb4b90d", "patch": "@@ -1,5 +1,8 @@\n 2000-11-30  Alexandre Oliva  <aoliva@redhat.com>\n \n+\t* config/sh/sh.md (fpu_switch0, fpu_switch1, movpsi, fpu_switch,\n+\tsplits): Only match on TARGET_SH4.\n+\n \t* combine.c (try_combine): Disregard USEs when updating LOG_LINKS\n \tof subsequent insns.\n "}, {"sha": "5973bb1f161cb9db3033acd623aafb64a31fddbe", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecfdeaeb3445d0fd2fc9758f6deeb207bbb4b90d/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecfdeaeb3445d0fd2fc9758f6deeb207bbb4b90d/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=ecfdeaeb3445d0fd2fc9758f6deeb207bbb4b90d", "patch": "@@ -4295,7 +4295,7 @@\n (define_expand \"fpu_switch0\"\n   [(set (match_operand:SI 0 \"\" \"\") (match_dup 2))\n    (set (match_dup 1) (mem:PSI (match_dup 0)))]\n-  \"\"\n+  \"TARGET_SH4\"\n   \"\n {\n   operands[1] = get_fpscr_rtx ();\n@@ -4309,7 +4309,7 @@\n   [(set (match_operand:SI 0 \"\" \"\") (match_dup 2))\n    (set (match_dup 3) (plus:SI (match_dup 0) (const_int 4)))\n    (set (match_dup 1) (mem:PSI (match_dup 3)))]\n-  \"\"\n+  \"TARGET_SH4\"\n   \"\n {\n   operands[1] = get_fpscr_rtx ();\n@@ -4323,7 +4323,7 @@\n (define_expand \"movpsi\"\n   [(set (match_operand:PSI 0 \"register_operand\" \"\")\n \t(match_operand:PSI 1 \"general_movsrc_operand\" \"\"))]\n-  \"\"\n+  \"TARGET_SH4\"\n   \"\")\n \n ;; The c / m alternative is a fake to guide reload to load directly into\n@@ -4336,9 +4336,11 @@\n (define_insn \"fpu_switch\"\n   [(set (match_operand:PSI 0 \"register_operand\" \"=c,c,r,c,c,r,m,r\")\n \t(match_operand:PSI 1 \"general_movsrc_operand\" \"c,>,m,m,r,r,r,!c\"))]\n-  \"! reload_completed\n-   || true_regnum (operands[0]) != FPSCR_REG || GET_CODE (operands[1]) != MEM\n-   || GET_CODE (XEXP (operands[1], 0)) != PLUS\"\n+  \"TARGET_SH4\n+   && (! reload_completed\n+       || true_regnum (operands[0]) != FPSCR_REG\n+       || GET_CODE (operands[1]) != MEM\n+       || GET_CODE (XEXP (operands[1], 0)) != PLUS)\"\n   \"@\n \t! precision stays the same\n \tlds.l\t%1,fpscr\n@@ -4354,7 +4356,7 @@\n (define_split\n   [(set (reg:PSI FPSCR_REG)\n \t(mem:PSI (match_operand:SI 0 \"register_operand\" \"r\")))]\n-  \"find_regno_note (insn, REG_DEAD, true_regnum (operands[0]))\"\n+  \"TARGET_SH4 && find_regno_note (insn, REG_DEAD, true_regnum (operands[0]))\"\n   [(set (match_dup 0) (match_dup 0))]\n   \"\n {\n@@ -4368,7 +4370,7 @@\n (define_split\n   [(set (reg:PSI FPSCR_REG)\n \t(mem:PSI (match_operand:SI 0 \"register_operand\" \"r\")))]\n-  \"\"\n+  \"TARGET_SH4\"\n   [(set (match_dup 0) (plus:SI (match_dup 0) (const_int -4)))]\n   \"\n {"}]}