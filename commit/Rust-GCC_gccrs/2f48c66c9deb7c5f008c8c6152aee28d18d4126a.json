{"sha": "2f48c66c9deb7c5f008c8c6152aee28d18d4126a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY0OGM2NmM5ZGViN2M1ZjAwOGM4YzYxNTJhZWUyOGQxOGQ0MTI2YQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-01-06T04:24:45Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-01-06T04:24:45Z"}, "message": "combine.c (combine_validate_cost): Do not count the cost of a split I2 twice.\n\n\t* combine.c (combine_validate_cost): Do not count the cost of a\n\tsplit I2 twice.  Do not display it twice in the dump, either.\n\nFrom-SVN: r219216", "tree": {"sha": "9e4cdfb89303c96b905f1156e38dc42d40741a1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e4cdfb89303c96b905f1156e38dc42d40741a1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f48c66c9deb7c5f008c8c6152aee28d18d4126a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f48c66c9deb7c5f008c8c6152aee28d18d4126a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f48c66c9deb7c5f008c8c6152aee28d18d4126a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f48c66c9deb7c5f008c8c6152aee28d18d4126a/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0964f8458a88c8ce7ba37f6be05017933ac04fd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0964f8458a88c8ce7ba37f6be05017933ac04fd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0964f8458a88c8ce7ba37f6be05017933ac04fd0"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "e85a9fdf0b197ade5ae7b044e2240e9a0f0535bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f48c66c9deb7c5f008c8c6152aee28d18d4126a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f48c66c9deb7c5f008c8c6152aee28d18d4126a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f48c66c9deb7c5f008c8c6152aee28d18d4126a", "patch": "@@ -1,3 +1,8 @@\n+2015-01-05  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* combine.c (combine_validate_cost): Do not count the cost of a\n+\tsplit I2 twice.  Do not display it twice in the dump, either.\n+\n 2015-01-05  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tRevert parts of r219199."}, {"sha": "8e78e18eb135ef35dc2d3b726e82242bf69e6167", "filename": "gcc/combine.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f48c66c9deb7c5f008c8c6152aee28d18d4126a/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f48c66c9deb7c5f008c8c6152aee28d18d4126a/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=2f48c66c9deb7c5f008c8c6152aee28d18d4126a", "patch": "@@ -885,6 +885,12 @@ combine_validate_cost (rtx_insn *i0, rtx_insn *i1, rtx_insn *i2, rtx_insn *i3,\n       i1_cost = i0_cost = 0;\n     }\n \n+  /* If we have split a PARALLEL I2 to I1,I2, we have counted its cost twice;\n+     correct that.  */\n+  if (old_cost && i1 && INSN_UID (i1) == INSN_UID (i2))\n+    old_cost -= i1_cost;\n+\n+\n   /* Calculate the replacement insn_rtx_costs.  */\n   new_i3_cost = insn_rtx_cost (newpat, optimize_this_for_speed_p);\n   if (newi2pat)\n@@ -924,14 +930,14 @@ combine_validate_cost (rtx_insn *i0, rtx_insn *i1, rtx_insn *i2, rtx_insn *i3,\n \t       reject ? \"rejecting\" : \"allowing\");\n       if (i0)\n \tfprintf (dump_file, \"%d, \", INSN_UID (i0));\n-      if (i1)\n+      if (i1 && INSN_UID (i1) != INSN_UID (i2))\n \tfprintf (dump_file, \"%d, \", INSN_UID (i1));\n       fprintf (dump_file, \"%d and %d\\n\", INSN_UID (i2), INSN_UID (i3));\n \n       fprintf (dump_file, \"original costs \");\n       if (i0)\n \tfprintf (dump_file, \"%d + \", i0_cost);\n-      if (i1)\n+      if (i1 && INSN_UID (i1) != INSN_UID (i2))\n \tfprintf (dump_file, \"%d + \", i1_cost);\n       fprintf (dump_file, \"%d + %d = %d\\n\", i2_cost, i3_cost, old_cost);\n "}]}