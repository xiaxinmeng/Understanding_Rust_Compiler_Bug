{"sha": "26b67e383f4b1df812cd7ba33de43451aff883ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZiNjdlMzgzZjRiMWRmODEyY2Q3YmEzM2RlNDM0NTFhZmY4ODNiYQ==", "commit": {"author": {"name": "Felipe Magno de Almeida", "email": "felipe@expertisesolutions.com.br", "date": "2017-01-10T14:15:59Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-01-10T14:15:59Z"}, "message": "Use temporary int objects to access struct tm members\n\nCall _M_extract_* functions family through temporary int objects, so\nit doesn't convert from lvalue to rvalue through a temporary in AVR\nbecause of the incompatible types used in AVR-Libc.\n\nThis fixes compilation errors with AVR-Libc while compiling libstdc++\nfor AVR target.\n\n2017-01-10  Felipe Magno de Almeida <felipe@expertisesolutions.com.br>\n\n\t* include/bits/locale_facets_nonio.tcc\n\t(time_get::_M_extract_via_format): Avoid compilation errors with\n\tnon-standard struct tm.\n\nFrom-SVN: r244271", "tree": {"sha": "74b3473fecf4cef43262f2278bc1ae07a01244ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74b3473fecf4cef43262f2278bc1ae07a01244ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26b67e383f4b1df812cd7ba33de43451aff883ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26b67e383f4b1df812cd7ba33de43451aff883ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26b67e383f4b1df812cd7ba33de43451aff883ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26b67e383f4b1df812cd7ba33de43451aff883ba/comments", "author": {"login": "felipealmeida", "id": 252110, "node_id": "MDQ6VXNlcjI1MjExMA==", "avatar_url": "https://avatars.githubusercontent.com/u/252110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felipealmeida", "html_url": "https://github.com/felipealmeida", "followers_url": "https://api.github.com/users/felipealmeida/followers", "following_url": "https://api.github.com/users/felipealmeida/following{/other_user}", "gists_url": "https://api.github.com/users/felipealmeida/gists{/gist_id}", "starred_url": "https://api.github.com/users/felipealmeida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felipealmeida/subscriptions", "organizations_url": "https://api.github.com/users/felipealmeida/orgs", "repos_url": "https://api.github.com/users/felipealmeida/repos", "events_url": "https://api.github.com/users/felipealmeida/events{/privacy}", "received_events_url": "https://api.github.com/users/felipealmeida/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79fc8ffe6cd6e4b23c797e166ea3b0c1c0703c29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79fc8ffe6cd6e4b23c797e166ea3b0c1c0703c29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79fc8ffe6cd6e4b23c797e166ea3b0c1c0703c29"}], "stats": {"total": 50, "additions": 38, "deletions": 12}, "files": [{"sha": "b81ecc89f6a8bce085b7d07a9b4b64bc1140fcef", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26b67e383f4b1df812cd7ba33de43451aff883ba/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26b67e383f4b1df812cd7ba33de43451aff883ba/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=26b67e383f4b1df812cd7ba33de43451aff883ba", "patch": "@@ -1,3 +1,9 @@\n+2017-01-10  Felipe Magno de Almeida <felipe@expertisesolutions.com.br>\n+\n+\t* include/bits/locale_facets_nonio.tcc\n+\t(time_get::_M_extract_via_format): Avoid compilation errors with\n+\tnon-standard struct tm.\n+\n 2017-01-10  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \t    Jonathan Wakely  <jwakely@redhat.com>\n "}, {"sha": "a449c41e6b8de6ac5e3bbaa44aa5ffb7797d9066", "filename": "libstdc++-v3/include/bits/locale_facets_nonio.tcc", "status": "modified", "additions": 32, "deletions": 12, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26b67e383f4b1df812cd7ba33de43451aff883ba/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26b67e383f4b1df812cd7ba33de43451aff883ba/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc?ref=26b67e383f4b1df812cd7ba33de43451aff883ba", "patch": "@@ -659,30 +659,38 @@ _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11\n \t\t  // Abbreviated weekday name [tm_wday]\n \t\t  const char_type*  __days1[7];\n \t\t  __tp._M_days_abbreviated(__days1);\n-\t\t  __beg = _M_extract_name(__beg, __end, __tm->tm_wday, __days1,\n+\t\t  __beg = _M_extract_name(__beg, __end, __mem, __days1,\n \t\t\t\t\t  7, __io, __tmperr);\n+\t\t  if (!__tmperr)\n+\t\t    __tm->tm_wday = __mem;\n \t\t  break;\n \t\tcase 'A':\n \t\t  // Weekday name [tm_wday].\n \t\t  const char_type*  __days2[7];\n \t\t  __tp._M_days(__days2);\n-\t\t  __beg = _M_extract_name(__beg, __end, __tm->tm_wday, __days2,\n+\t\t  __beg = _M_extract_name(__beg, __end, __mem, __days2,\n \t\t\t\t\t  7, __io, __tmperr);\n+\t\t  if (!__tmperr)\n+\t\t    __tm->tm_wday = __mem;\n \t\t  break;\n \t\tcase 'h':\n \t\tcase 'b':\n \t\t  // Abbreviated month name [tm_mon]\n \t\t  const char_type*  __months1[12];\n \t\t  __tp._M_months_abbreviated(__months1);\n-\t\t  __beg = _M_extract_name(__beg, __end, __tm->tm_mon, \n+\t\t  __beg = _M_extract_name(__beg, __end, __mem,\n \t\t\t\t\t  __months1, 12, __io, __tmperr);\n+\t\t  if (!__tmperr)\n+\t\t    __tm->tm_mon = __mem;\n \t\t  break;\n \t\tcase 'B':\n \t\t  // Month name [tm_mon].\n \t\t  const char_type*  __months2[12];\n \t\t  __tp._M_months(__months2);\n-\t\t  __beg = _M_extract_name(__beg, __end, __tm->tm_mon, \n+\t\t  __beg = _M_extract_name(__beg, __end, __mem,\n \t\t\t\t\t  __months2, 12, __io, __tmperr);\n+\t\t  if (!__tmperr)\n+\t\t    __tm->tm_mon = __mem;\n \t\t  break;\n \t\tcase 'c':\n \t\t  // Default time and date representation.\n@@ -693,18 +701,22 @@ _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11\n \t\t  break;\n \t\tcase 'd':\n \t\t  // Day [01, 31]. [tm_mday]\n-\t\t  __beg = _M_extract_num(__beg, __end, __tm->tm_mday, 1, 31, 2,\n+\t\t  __beg = _M_extract_num(__beg, __end, __mem, 1, 31, 2,\n \t\t\t\t\t __io, __tmperr);\n+\t\t  if (!__tmperr)\n+\t\t    __tm->tm_mday = __mem;\n \t\t  break;\n \t\tcase 'e':\n \t\t  // Day [1, 31], with single digits preceded by\n \t\t  // space. [tm_mday]\n \t\t  if (__ctype.is(ctype_base::space, *__beg))\n-\t\t    __beg = _M_extract_num(++__beg, __end, __tm->tm_mday, 1, 9,\n+\t\t    __beg = _M_extract_num(++__beg, __end, __mem, 1, 9,\n \t\t\t\t\t   1, __io, __tmperr);\n \t\t  else\n-\t\t    __beg = _M_extract_num(__beg, __end, __tm->tm_mday, 10, 31,\n+\t\t    __beg = _M_extract_num(__beg, __end, __mem, 10, 31,\n \t\t\t\t\t   2, __io, __tmperr);\n+\t\t  if (!__tmperr)\n+\t\t    __tm->tm_mday = __mem;\n \t\t  break;\n \t\tcase 'D':\n \t\t  // Equivalent to %m/%d/%y.[tm_mon, tm_mday, tm_year]\n@@ -715,13 +727,17 @@ _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11\n \t\t  break;\n \t\tcase 'H':\n \t\t  // Hour [00, 23]. [tm_hour]\n-\t\t  __beg = _M_extract_num(__beg, __end, __tm->tm_hour, 0, 23, 2,\n+\t\t  __beg = _M_extract_num(__beg, __end, __mem, 0, 23, 2,\n \t\t\t\t\t __io, __tmperr);\n+\t\t  if (!__tmperr)\n+\t\t    __tm->tm_hour = __mem;\n \t\t  break;\n \t\tcase 'I':\n \t\t  // Hour [01, 12]. [tm_hour]\n-\t\t  __beg = _M_extract_num(__beg, __end, __tm->tm_hour, 1, 12, 2,\n+\t\t  __beg = _M_extract_num(__beg, __end, __mem, 1, 12, 2,\n \t\t\t\t\t __io, __tmperr);\n+\t\t  if (!__tmperr)\n+\t\t    __tm->tm_hour = __mem;\n \t\t  break;\n \t\tcase 'm':\n \t\t  // Month [01, 12]. [tm_mon]\n@@ -732,8 +748,10 @@ _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11\n \t\t  break;\n \t\tcase 'M':\n \t\t  // Minute [00, 59]. [tm_min]\n-\t\t  __beg = _M_extract_num(__beg, __end, __tm->tm_min, 0, 59, 2,\n+\t\t  __beg = _M_extract_num(__beg, __end, __mem, 0, 59, 2,\n \t\t\t\t\t __io, __tmperr);\n+\t\t  if (!__tmperr)\n+\t\t    __tm->tm_min = __mem;\n \t\t  break;\n \t\tcase 'n':\n \t\t  if (__ctype.narrow(*__beg, 0) == '\\n')\n@@ -752,11 +770,13 @@ _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11\n \t\t  // Seconds. [tm_sec]\n \t\t  // [00, 60] in C99 (one leap-second), [00, 61] in C89.\n #if _GLIBCXX_USE_C99\n-\t\t  __beg = _M_extract_num(__beg, __end, __tm->tm_sec, 0, 60, 2,\n+\t\t  __beg = _M_extract_num(__beg, __end, __mem, 0, 60, 2,\n #else\n-\t\t  __beg = _M_extract_num(__beg, __end, __tm->tm_sec, 0, 61, 2,\n+\t\t  __beg = _M_extract_num(__beg, __end, __mem, 0, 61, 2,\n #endif\n \t\t\t\t\t __io, __tmperr);\n+\t\t  if (!__tmperr)\n+\t\t  __tm->tm_sec = __mem;\n \t\t  break;\n \t\tcase 't':\n \t\t  if (__ctype.narrow(*__beg, 0) == '\\t')"}]}