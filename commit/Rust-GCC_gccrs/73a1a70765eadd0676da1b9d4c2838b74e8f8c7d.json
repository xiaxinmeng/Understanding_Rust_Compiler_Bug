{"sha": "73a1a70765eadd0676da1b9d4c2838b74e8f8c7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNhMWE3MDc2NWVhZGQwNjc2ZGExYjlkNGMyODM4Yjc0ZThmOGM3ZA==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2013-05-22T15:26:20Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2013-05-22T15:26:20Z"}, "message": "Fix PR target/57340 and additionally for PR target/19599. \n\n2013-05-22  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n\tPR target/19599\n\tPR target/57340\n\t* config/arm/arm.c (any_sibcall_uses_r3): Rename to ..\n\t(any_sibcall_could_use_r3): this and handle indirect calls.\n\t(arm_get_frame_offsets): Rename use of any_sibcall_uses_r3.\n\nFrom-SVN: r199203", "tree": {"sha": "6901eb834e2ebd7de3d41078750ac140f76414c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6901eb834e2ebd7de3d41078750ac140f76414c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73a1a70765eadd0676da1b9d4c2838b74e8f8c7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a1a70765eadd0676da1b9d4c2838b74e8f8c7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73a1a70765eadd0676da1b9d4c2838b74e8f8c7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a1a70765eadd0676da1b9d4c2838b74e8f8c7d/comments", "author": null, "committer": null, "parents": [{"sha": "4270eba558cf314d10ec2bac851b87307c309005", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4270eba558cf314d10ec2bac851b87307c309005", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4270eba558cf314d10ec2bac851b87307c309005"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "b7b9eea1ae959a1bf7fccd40c4dd1657b2866388", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a1a70765eadd0676da1b9d4c2838b74e8f8c7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a1a70765eadd0676da1b9d4c2838b74e8f8c7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73a1a70765eadd0676da1b9d4c2838b74e8f8c7d", "patch": "@@ -1,3 +1,11 @@\n+2013-05-22  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+\tPR target/19599\n+\tPR target/57340\n+\t* config/arm/arm.c (any_sibcall_uses_r3): Rename to ..\n+\t(any_sibcall_could_use_r3): this and handle indirect calls.\n+\t(arm_get_frame_offsets): Rename use of any_sibcall_uses_r3.\n+\n 2013-05-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.h (MALLOC_ABI_ALIGNMENT): New #define."}, {"sha": "951a0c91455dab09eeaa3a32e56fff521982c4c1", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a1a70765eadd0676da1b9d4c2838b74e8f8c7d/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a1a70765eadd0676da1b9d4c2838b74e8f8c7d/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=73a1a70765eadd0676da1b9d4c2838b74e8f8c7d", "patch": "@@ -17568,11 +17568,27 @@ thumb_force_lr_save (void)\n \t     || df_regs_ever_live_p (LR_REGNUM));\n }\n \n+/* We do not know if r3 will be available because\n+   we do have an indirect tailcall happening in this\n+   particular case.  */\n+static bool\n+is_indirect_tailcall_p (rtx call)\n+{\n+  rtx pat = PATTERN (call);\n+\n+  /* Indirect tail call.  */\n+  pat = XVECEXP (pat, 0, 0);\n+  if (GET_CODE (pat) == SET)\n+    pat = SET_SRC (pat);\n+\n+  pat = XEXP (XEXP (pat, 0), 0);\n+  return REG_P (pat);\n+}\n \n /* Return true if r3 is used by any of the tail call insns in the\n    current function.  */\n static bool\n-any_sibcall_uses_r3 (void)\n+any_sibcall_could_use_r3 (void)\n {\n   edge_iterator ei;\n   edge e;\n@@ -17586,7 +17602,8 @@ any_sibcall_uses_r3 (void)\n \tif (!CALL_P (call))\n \t  call = prev_nonnote_nondebug_insn (call);\n \tgcc_assert (CALL_P (call) && SIBLING_CALL_P (call));\n-\tif (find_regno_fusage (call, USE, 3))\n+\tif (find_regno_fusage (call, USE, 3)\n+\t    || is_indirect_tailcall_p (call))\n \t  return true;\n       }\n   return false;\n@@ -17753,7 +17770,7 @@ arm_get_frame_offsets (void)\n \t  /* If it is safe to use r3, then do so.  This sometimes\n \t     generates better code on Thumb-2 by avoiding the need to\n \t     use 32-bit push/pop instructions.  */\n-          if (! any_sibcall_uses_r3 ()\n+          if (! any_sibcall_could_use_r3 ()\n \t      && arm_size_return_regs () <= 12\n \t      && (offsets->saved_regs_mask & (1 << 3)) == 0\n               && (TARGET_THUMB2 || !current_tune->prefer_ldrd_strd))"}]}