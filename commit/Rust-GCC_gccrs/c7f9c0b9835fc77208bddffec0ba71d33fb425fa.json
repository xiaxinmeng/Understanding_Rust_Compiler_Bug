{"sha": "c7f9c0b9835fc77208bddffec0ba71d33fb425fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdmOWMwYjk4MzVmYzc3MjA4YmRkZmZlYzBiYTcxZDMzZmI0MjVmYQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-04-18T17:36:28Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-04-18T17:36:28Z"}, "message": "re PR preprocessor/39646 (__FILE__ breaks for empty file name)\n\nlibcpp:\n\tPR preprocessor/39646\n\t* include/line-map.h (enum lc_reason): Add LC_RENAME_VERBATIM.\n\t* line-map.c (linemap_add): Handle LC_RENAME_VERBATIM.\n\t* directives.c (do_line, do_linemarker): Use LC_RENAME_VERBATIM in\n\tplace of LC_RENAME.\n\ngcc/testsuite:\n\t* gcc.dg/cpp/line8.c: New test.\n\nFrom-SVN: r146319", "tree": {"sha": "59684b555702b1b2456e3b64f86fd190e1b48332", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59684b555702b1b2456e3b64f86fd190e1b48332"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7f9c0b9835fc77208bddffec0ba71d33fb425fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f9c0b9835fc77208bddffec0ba71d33fb425fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7f9c0b9835fc77208bddffec0ba71d33fb425fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8add5942c0ce71990233b594d5f0bdec31d73c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8add5942c0ce71990233b594d5f0bdec31d73c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8add5942c0ce71990233b594d5f0bdec31d73c8"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "075c7b56687f2f3931c69e842ea5f9a5f65e78d9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7f9c0b9835fc77208bddffec0ba71d33fb425fa", "patch": "@@ -1,3 +1,8 @@\n+2009-04-18  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR preprocessor/39646\n+\t* gcc.dg/cpp/line8.c: New test.\n+\n 2009-04-18  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR preprocessor/39647"}, {"sha": "5aeb26ca325f4524cec097d8a8ba6c780061689b", "filename": "gcc/testsuite/gcc.dg/cpp/line8.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fline8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fline8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fline8.c?ref=c7f9c0b9835fc77208bddffec0ba71d33fb425fa", "patch": "@@ -0,0 +1,10 @@\n+/* Test that \"\" is not specially interpreted as \"<stdin>\" in a #line\n+   directive.  PR 39646.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors\" } */\n+\n+extern int x;\n+\n+#line 24 \"\"\n+extern char z[sizeof __FILE__ == 1];"}, {"sha": "ab72fa61061529c7915daf23d04373600ac9d592", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=c7f9c0b9835fc77208bddffec0ba71d33fb425fa", "patch": "@@ -1,3 +1,11 @@\n+2009-04-18  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR preprocessor/39646\n+\t* include/line-map.h (enum lc_reason): Add LC_RENAME_VERBATIM.\n+\t* line-map.c (linemap_add): Handle LC_RENAME_VERBATIM.\n+\t* directives.c (do_line, do_linemarker): Use LC_RENAME_VERBATIM in\n+\tplace of LC_RENAME.\n+\n 2009-04-18  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR preprocessor/39647"}, {"sha": "9e26732337bba3ebe2abf47bcf87b2002c0c7ba9", "filename": "libcpp/directives.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=c7f9c0b9835fc77208bddffec0ba71d33fb425fa", "patch": "@@ -924,7 +924,7 @@ do_line (cpp_reader *pfile)\n     }\n \n   skip_rest_of_line (pfile);\n-  _cpp_do_file_change (pfile, LC_RENAME, new_file, new_lineno,\n+  _cpp_do_file_change (pfile, LC_RENAME_VERBATIM, new_file, new_lineno,\n \t\t       map_sysp);\n }\n \n@@ -940,7 +940,7 @@ do_linemarker (cpp_reader *pfile)\n   const char *new_file = map->to_file;\n   linenum_type new_lineno;\n   unsigned int new_sysp = map->sysp;\n-  enum lc_reason reason = LC_RENAME;\n+  enum lc_reason reason = LC_RENAME_VERBATIM;\n   int flag;\n   bool wrapped;\n "}, {"sha": "56ab79a26080729dcbcc0dc7bfa309c355c6a54d", "filename": "libcpp/include/line-map.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/libcpp%2Finclude%2Fline-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/libcpp%2Finclude%2Fline-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fline-map.h?ref=c7f9c0b9835fc77208bddffec0ba71d33fb425fa", "patch": "@@ -31,8 +31,9 @@ along with this program; see the file COPYING3.  If not see\n    when including a new file, e.g. a #include directive in C.\n    LC_LEAVE is when reaching a file's end.  LC_RENAME is when a file\n    name or line number changes for neither of the above reasons\n-   (e.g. a #line directive in C).  */\n-enum lc_reason {LC_ENTER = 0, LC_LEAVE, LC_RENAME};\n+   (e.g. a #line directive in C); LC_RENAME_VERBATIM is like LC_RENAME\n+   but a filename of \"\" is not specially interpreted as standard input.  */\n+enum lc_reason {LC_ENTER = 0, LC_LEAVE, LC_RENAME, LC_RENAME_VERBATIM};\n \n /* The type of line numbers.  */\n typedef unsigned int linenum_type;"}, {"sha": "553cc2ab605e183ffe72c3a3eb575c58710038cf", "filename": "libcpp/line-map.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f9c0b9835fc77208bddffec0ba71d33fb425fa/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=c7f9c0b9835fc77208bddffec0ba71d33fb425fa", "patch": "@@ -109,9 +109,12 @@ linemap_add (struct line_maps *set, enum lc_reason reason,\n \n   map = &set->maps[set->used];\n \n-  if (to_file && *to_file == '\\0')\n+  if (to_file && *to_file == '\\0' && reason != LC_RENAME_VERBATIM)\n     to_file = \"<stdin>\";\n \n+  if (reason == LC_RENAME_VERBATIM)\n+    reason = LC_RENAME;\n+\n   /* If we don't keep our line maps consistent, we can easily\n      segfault.  Don't rely on the client to do it for us.  */\n   if (set->depth == 0)"}]}