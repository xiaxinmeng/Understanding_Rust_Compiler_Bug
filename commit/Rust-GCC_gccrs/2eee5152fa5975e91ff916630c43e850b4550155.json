{"sha": "2eee5152fa5975e91ff916630c43e850b4550155", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVlZTUxNTJmYTU5NzVlOTFmZjkxNjYzMGM0M2U4NTBiNDU1MDE1NQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2008-08-01T10:36:01Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2008-08-01T10:36:01Z"}, "message": "decl.c (gnat_to_gnu_entity): Do not turn Ada Pure into GCC const, now implicitely implying nothrow as well.\n\n        ada/\n        * decl.c (gnat_to_gnu_entity) <case E_Function>: Do not turn Ada\n        Pure into GCC const, now implicitely implying nothrow as well.\n\n        testsuite/\n        * gnat.dg/raise_from_pure.ad[bs],\n        * gnat.dg/wrap_raise_from_pure.ad[bs]: Support for ...\n        * gnat.dg/test_raise_from_pure.adb: New test.\n\nFrom-SVN: r138509", "tree": {"sha": "16ff9fffba11e30b8c249b036fc1ce14f772ee2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16ff9fffba11e30b8c249b036fc1ce14f772ee2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2eee5152fa5975e91ff916630c43e850b4550155", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2eee5152fa5975e91ff916630c43e850b4550155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2eee5152fa5975e91ff916630c43e850b4550155", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2eee5152fa5975e91ff916630c43e850b4550155/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b7473059a6a2b42731f78480d1b8ecf2215e70f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b7473059a6a2b42731f78480d1b8ecf2215e70f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b7473059a6a2b42731f78480d1b8ecf2215e70f"}], "stats": {"total": 66, "additions": 56, "deletions": 10}, "files": [{"sha": "4101dada644599748ce83c3c4f31f299a370e838", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2eee5152fa5975e91ff916630c43e850b4550155", "patch": "@@ -1,3 +1,8 @@\n+2008-08-01  Olivier Hainque  <hainque@adacore.com>\n+\t\n+\t* decl.c (gnat_to_gnu_entity) <case E_Function>: Do not turn Ada\n+\tPure into GCC const, now implicitely implying nothrow as well.\n+\n 2008-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_prag.adb (Check_Form_Of_Interface_Name): Refine and improve"}, {"sha": "89621db6eabd291debf060d93abda091d2c07f4f", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=2eee5152fa5975e91ff916630c43e850b4550155", "patch": "@@ -4025,19 +4025,15 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \tif (TREE_CODE (gnu_return_type) == VOID_TYPE)\n \t  pure_flag = false;\n \n-\t/* The semantics of \"pure\" in Ada essentially matches that of \"const\"\n-\t   in the back-end.  In particular, both properties are orthogonal to\n-\t   the \"nothrow\" property.  But this is true only if the EH circuitry\n-\t   is explicit in the internal representation of the back-end.  If we\n-\t   are to completely hide the EH circuitry from it, we need to declare\n-\t   that calls to pure Ada subprograms that can throw have side effects\n-\t   since they can trigger an \"abnormal\" transfer of control flow; thus\n-\t   they can be neither \"const\" nor \"pure\" in the back-end sense.  */\n+\t/* The semantics of \"pure\" in Ada used to essentially match that of\n+\t   \"const\" in the middle-end.  In particular, both properties were\n+\t   orthogonal to the \"nothrow\" property.  This is not true in the\n+\t   middle-end any more and we have no choice but to ignore the hint\n+\t   at this stage.  */\n+\n \tgnu_type\n \t  = build_qualified_type (gnu_type,\n \t\t\t\t  TYPE_QUALS (gnu_type)\n-\t\t\t\t  | (Exception_Mechanism == Back_End_Exceptions\n-\t\t\t\t     ? TYPE_QUAL_CONST * pure_flag : 0)\n \t\t\t\t  | (TYPE_QUAL_VOLATILE * volatile_flag));\n \n \tSloc_to_locus (Sloc (gnat_entity), &input_location);"}, {"sha": "bd823ca614a469f9d0dad1b528f85be63339a448", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2eee5152fa5975e91ff916630c43e850b4550155", "patch": "@@ -1,3 +1,9 @@\n+2008-08-01  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gnat.dg/raise_from_pure.ad[bs],\n+\t* gnat.dg/wrap_raise_from_pure.ad[bs]: Support for ...\n+\t* gnat.dg/test_raise_from_pure.adb: New test.\n+\t\n 2008-07-31  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* gcc.target/mips/ext-1.c: New test."}, {"sha": "62e543e94dbe25b958c776e576498219699807ad", "filename": "gcc/testsuite/gnat.dg/raise_from_pure.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Ftestsuite%2Fgnat.dg%2Fraise_from_pure.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Ftestsuite%2Fgnat.dg%2Fraise_from_pure.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fraise_from_pure.adb?ref=2eee5152fa5975e91ff916630c43e850b4550155", "patch": "@@ -0,0 +1,11 @@\n+package body raise_from_pure is\n+   function Raise_CE_If_0 (P : Integer) return Integer is\n+   begin\n+      if P = 0 then\n+         raise Constraint_error;\n+      end if;\n+      return 1;\n+   end;\n+end;\n+\n+"}, {"sha": "9c363a5be4833ca0e62aaf5c32e0c39d7e7f77e0", "filename": "gcc/testsuite/gnat.dg/raise_from_pure.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Ftestsuite%2Fgnat.dg%2Fraise_from_pure.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Ftestsuite%2Fgnat.dg%2Fraise_from_pure.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fraise_from_pure.ads?ref=2eee5152fa5975e91ff916630c43e850b4550155", "patch": "@@ -0,0 +1,5 @@\n+\n+package raise_from_pure is\n+   pragma Pure;\n+   function Raise_CE_If_0 (P : Integer) return Integer;\n+end;"}, {"sha": "ab1ed16db5c2e8c69e3f2a0b8cde5f8db05b19d2", "filename": "gcc/testsuite/gnat.dg/test_raise_from_pure.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_raise_from_pure.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_raise_from_pure.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_raise_from_pure.adb?ref=2eee5152fa5975e91ff916630c43e850b4550155", "patch": "@@ -0,0 +1,9 @@\n+--  { dg-do run }\n+--  { dg-options \"-O2\" }\n+with Wrap_Raise_From_Pure; use Wrap_Raise_From_Pure;\n+procedure test_raise_from_pure is\n+begin\n+   Wrap_Raise_From_Pure.Check;\n+exception\n+   when Constraint_Error => null;\n+end;"}, {"sha": "ec8f342c6b593cec6ff02c1bfe48848c3c5bc66a", "filename": "gcc/testsuite/gnat.dg/wrap_raise_from_pure.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Ftestsuite%2Fgnat.dg%2Fwrap_raise_from_pure.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Ftestsuite%2Fgnat.dg%2Fwrap_raise_from_pure.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fwrap_raise_from_pure.adb?ref=2eee5152fa5975e91ff916630c43e850b4550155", "patch": "@@ -0,0 +1,10 @@\n+with Ada.Text_Io; use Ada.Text_Io;\n+with Raise_From_Pure; use Raise_From_Pure;\n+package body Wrap_Raise_From_Pure is\n+   procedure Check is\n+      K : Integer;\n+   begin\n+      K := Raise_CE_If_0 (0);\n+      Put_Line (\"Should never reach here\");\n+   end;\n+end;"}, {"sha": "521c04a5fc9e19d486f08afd4de66cefb8c2f826", "filename": "gcc/testsuite/gnat.dg/wrap_raise_from_pure.ads", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Ftestsuite%2Fgnat.dg%2Fwrap_raise_from_pure.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eee5152fa5975e91ff916630c43e850b4550155/gcc%2Ftestsuite%2Fgnat.dg%2Fwrap_raise_from_pure.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fwrap_raise_from_pure.ads?ref=2eee5152fa5975e91ff916630c43e850b4550155", "patch": "@@ -0,0 +1,4 @@\n+\n+package Wrap_Raise_From_Pure is\n+   procedure Check;\n+end;"}]}