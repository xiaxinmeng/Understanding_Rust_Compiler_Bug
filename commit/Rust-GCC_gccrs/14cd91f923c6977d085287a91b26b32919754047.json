{"sha": "14cd91f923c6977d085287a91b26b32919754047", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRjZDkxZjkyM2M2OTc3ZDA4NTI4N2E5MWIyNmIzMjkxOTc1NDA0Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-12-05T14:31:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-12-05T14:31:44Z"}, "message": "tree-ssa-alias.h (struct ao_ref_s): Add volatile_p field.\n\n2011-12-05  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-alias.h (struct ao_ref_s): Add volatile_p field.\n\t* tree-ssa-alias.c (ao_ref_init): Initialize it.\n\t(ao_ref_init_from_ptr_and_size): Likewise.\n\t(refs_may_alias_p_1): Two volatile accesses conflict.\n\t(ref_maybe_used_by_call_p_1): Likewise.\n\t(call_may_clobber_ref_p_1): Likewise.\n\t* tree-ssa-sccvn.c (ao_ref_init_from_vn_reference): Initialize\n\tvolatile_p field.\n\nFrom-SVN: r182009", "tree": {"sha": "337d4dd6961a88c69b24dda561d596121394e7e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/337d4dd6961a88c69b24dda561d596121394e7e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14cd91f923c6977d085287a91b26b32919754047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cd91f923c6977d085287a91b26b32919754047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14cd91f923c6977d085287a91b26b32919754047", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cd91f923c6977d085287a91b26b32919754047/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68872bedca22a323d3dafc68c53975a35fde87b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68872bedca22a323d3dafc68c53975a35fde87b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68872bedca22a323d3dafc68c53975a35fde87b2"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "d49646cd75aa66baf7b674058680de8c32ffbfb8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd91f923c6977d085287a91b26b32919754047/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd91f923c6977d085287a91b26b32919754047/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14cd91f923c6977d085287a91b26b32919754047", "patch": "@@ -1,3 +1,14 @@\n+2011-12-05  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-alias.h (struct ao_ref_s): Add volatile_p field.\n+\t* tree-ssa-alias.c (ao_ref_init): Initialize it.\n+\t(ao_ref_init_from_ptr_and_size): Likewise.\n+\t(refs_may_alias_p_1): Two volatile accesses conflict.\n+\t(ref_maybe_used_by_call_p_1): Likewise.\n+\t(call_may_clobber_ref_p_1): Likewise.\n+\t* tree-ssa-sccvn.c (ao_ref_init_from_vn_reference): Initialize\n+\tvolatile_p field.\n+\n 2011-12-05  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa.c (verify_ssa): Verify SSA names in the loop"}, {"sha": "21dc5fbcc51e6f87d7b3e812b181b4b5b287b167", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd91f923c6977d085287a91b26b32919754047/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd91f923c6977d085287a91b26b32919754047/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=14cd91f923c6977d085287a91b26b32919754047", "patch": "@@ -456,6 +456,7 @@ ao_ref_init (ao_ref *r, tree ref)\n   r->max_size = -1;\n   r->ref_alias_set = -1;\n   r->base_alias_set = -1;\n+  r->volatile_p = ref ? TREE_THIS_VOLATILE (ref) : false;\n }\n \n /* Returns the base object of the memory reference *REF.  */\n@@ -525,6 +526,7 @@ ao_ref_init_from_ptr_and_size (ao_ref *ref, tree ptr, tree size)\n     ref->max_size = ref->size = -1;\n   ref->ref_alias_set = 0;\n   ref->base_alias_set = 0;\n+  ref->volatile_p = false;\n }\n \n /* Return 1 if TYPE1 and TYPE2 are to be considered equivalent for the\n@@ -1021,6 +1023,11 @@ refs_may_alias_p_1 (ao_ref *ref1, ao_ref *ref2, bool tbaa_p)\n       || TREE_CODE (base2) == LABEL_DECL)\n     return true;\n \n+  /* Two volatile accesses always conflict.  */\n+  if (ref1->volatile_p\n+      && ref2->volatile_p)\n+    return true;\n+\n   /* Defer to simple offset based disambiguation if we have\n      references based on two decls.  Do this before defering to\n      TBAA to handle must-alias cases in conformance with the\n@@ -1144,6 +1151,11 @@ ref_maybe_used_by_call_p_1 (gimple call, ao_ref *ref)\n   if (!base)\n     return true;\n \n+  /* A call that is not without side-effects might involve volatile\n+     accesses and thus conflicts with all other volatile accesses.  */\n+  if (ref->volatile_p)\n+    return true;\n+\n   /* If the reference is based on a decl that is not aliased the call\n      cannot possibly use it.  */\n   if (DECL_P (base)\n@@ -1477,6 +1489,11 @@ call_may_clobber_ref_p_1 (gimple call, ao_ref *ref)\n       || CONSTANT_CLASS_P (base))\n     return false;\n \n+  /* A call that is not without side-effects might involve volatile\n+     accesses and thus conflicts with all other volatile accesses.  */\n+  if (ref->volatile_p)\n+    return true;\n+\n   /* If the reference is based on a decl that is not aliased the call\n      cannot possibly clobber it.  */\n   if (DECL_P (base)"}, {"sha": "59f0ebca953a5846e6a4c2f8dce5b84fc41da18a", "filename": "gcc/tree-ssa-alias.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd91f923c6977d085287a91b26b32919754047/gcc%2Ftree-ssa-alias.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd91f923c6977d085287a91b26b32919754047/gcc%2Ftree-ssa-alias.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.h?ref=14cd91f923c6977d085287a91b26b32919754047", "patch": "@@ -86,6 +86,9 @@ typedef struct ao_ref_s\n \n   /* The alias set of the base object or -1 if not yet computed.  */\n   alias_set_type base_alias_set;\n+\n+  /* Whether the memory is considered a volatile access.  */\n+  bool volatile_p;\n } ao_ref;\n \n "}, {"sha": "274def32d5a6b6128c9be7deb221c1f9617c7084", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd91f923c6977d085287a91b26b32919754047/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd91f923c6977d085287a91b26b32919754047/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=14cd91f923c6977d085287a91b26b32919754047", "patch": "@@ -918,6 +918,8 @@ ao_ref_init_from_vn_reference (ao_ref *ref,\n     ref->base_alias_set = base_alias_set;\n   else\n     ref->base_alias_set = get_alias_set (base);\n+  /* We discount volatiles from value-numbering elsewhere.  */\n+  ref->volatile_p = false;\n \n   return true;\n }"}]}