{"sha": "eda19906998dbfcc1444296fa6a288456339cd17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRhMTk5MDY5OThkYmZjYzE0NDQyOTZmYTZhMjg4NDU2MzM5Y2QxNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-26T02:22:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-26T02:22:46Z"}, "message": "re PR c++/49156 ([C++0x] Error reporting routines re-entered)\n\n\tPR c++/49156\n\t* error.c (dump_template_bindings): Set processing_template_decl\n\tfor a partial instantiation.\n\nFrom-SVN: r174256", "tree": {"sha": "4d1f981999df88f8339e69192f2340e64f81747b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d1f981999df88f8339e69192f2340e64f81747b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eda19906998dbfcc1444296fa6a288456339cd17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda19906998dbfcc1444296fa6a288456339cd17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eda19906998dbfcc1444296fa6a288456339cd17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda19906998dbfcc1444296fa6a288456339cd17/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc31ddad44bb44e5f715d0f730e16166621c573c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc31ddad44bb44e5f715d0f730e16166621c573c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc31ddad44bb44e5f715d0f730e16166621c573c"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "06d51594bb8f8c32cc2e9ace4569e5db76ba1292", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda19906998dbfcc1444296fa6a288456339cd17/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda19906998dbfcc1444296fa6a288456339cd17/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=eda19906998dbfcc1444296fa6a288456339cd17", "patch": "@@ -1,5 +1,10 @@\n 2011-05-25  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/44944\n+\tPR c++/49156\n+\t* error.c (dump_template_bindings): Set processing_template_decl\n+\tfor a partial instantiation.\n+\n \tPR c++/45401\n \t* decl.c (grokdeclarator): Don't change type when adding rvalue ref\n \tto another reference type."}, {"sha": "8d7aaa71c85a302bec338fc534d472972654fa61", "filename": "gcc/cp/error.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda19906998dbfcc1444296fa6a288456339cd17/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda19906998dbfcc1444296fa6a288456339cd17/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=eda19906998dbfcc1444296fa6a288456339cd17", "patch": "@@ -307,14 +307,19 @@ dump_template_bindings (tree parms, tree args, VEC(tree,gc)* typenames)\n \n   FOR_EACH_VEC_ELT (tree, typenames, i, t)\n     {\n+      bool dependent = uses_template_parms (args);\n       if (need_comma)\n \tpp_separate_with_comma (cxx_pp);\n       dump_type (t, TFF_PLAIN_IDENTIFIER);\n       pp_cxx_whitespace (cxx_pp);\n       pp_equal (cxx_pp);\n       pp_cxx_whitespace (cxx_pp);\n       push_deferring_access_checks (dk_no_check);\n+      if (dependent)\n+\t++processing_template_decl;\n       t = tsubst (t, args, tf_none, NULL_TREE);\n+      if (dependent)\n+\t--processing_template_decl;\n       pop_deferring_access_checks ();\n       /* Strip typedefs.  We can't just use TFF_CHASE_TYPEDEF because\n \t pp_simple_type_specifier doesn't know about it.  */"}, {"sha": "07f4845ee01df5a8d3b11abb33143cca200046b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda19906998dbfcc1444296fa6a288456339cd17/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda19906998dbfcc1444296fa6a288456339cd17/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eda19906998dbfcc1444296fa6a288456339cd17", "patch": "@@ -1,5 +1,7 @@\n 2011-05-25  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/error4.C: New.\n+\n \t* g++.dg/cpp0x/rv-restrict.C: New.\n \n \t* g++.dg/cpp0x/enum15.C: New."}, {"sha": "29a1cddab16f553ccda9e10d3ce16a4fde2e8c65", "filename": "gcc/testsuite/g++.dg/cpp0x/error4.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda19906998dbfcc1444296fa6a288456339cd17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ferror4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda19906998dbfcc1444296fa6a288456339cd17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ferror4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ferror4.C?ref=eda19906998dbfcc1444296fa6a288456339cd17", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/49156\n+// { dg-options -std=c++0x }\n+\n+template<typename T> T declval();\n+\n+template<typename T>\n+struct S {\n+\n+  template<typename U>\n+    static U get(const volatile T&);\n+\n+  template<typename U>\n+    static decltype(*declval<U>()) get(...);\n+\n+  typedef decltype(get<T>(declval<T>())) type; // { dg-error \"no match\" }\n+};\n+\n+struct X { };\n+\n+S<X>::type x;\n+\n+// { dg-prune-output \"note\" }"}]}