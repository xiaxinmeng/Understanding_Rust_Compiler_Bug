{"sha": "9e3b9ddb996f18d541a3e03611d46c3a6c0c0b5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUzYjlkZGI5OTZmMThkNTQxYTNlMDM2MTFkNDZjM2E2YzBjMGI1Zg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2020-10-23T09:37:07Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2020-10-23T09:37:07Z"}, "message": "more wraplf for aux long long float: s390, sparc and powerpc\n\nThe wraplf version of Ada.Numerics.Aux_Long_Long_Float is needed on\ns390* as well.  Also add it to sparc*-linux-gnu and powerpc-darwin,\nthat were missed when adding it for sparc and ppc targets.\n\n\nfor  gcc/ada/ChangeLog\n\n\tPR ada/97504\n\t* Makefile.rtl (LIBGNAT_TARGET_PAIRS): Select wraplf version\n\tof Aux_Long_Long_Float for s390 and remaining sparc and\n\tpowerpc targets.", "tree": {"sha": "b3da6ca623543c36d6fab1ba6282062c20f65527", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3da6ca623543c36d6fab1ba6282062c20f65527"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e3b9ddb996f18d541a3e03611d46c3a6c0c0b5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e3b9ddb996f18d541a3e03611d46c3a6c0c0b5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e3b9ddb996f18d541a3e03611d46c3a6c0c0b5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e3b9ddb996f18d541a3e03611d46c3a6c0c0b5f/comments", "author": null, "committer": null, "parents": [{"sha": "d08d481912b9a2dc3388f8e1183cea0bf3ffae9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d08d481912b9a2dc3388f8e1183cea0bf3ffae9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d08d481912b9a2dc3388f8e1183cea0bf3ffae9f"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "cc957b6a2c6c857fd9767e65975b04cac020d126", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e3b9ddb996f18d541a3e03611d46c3a6c0c0b5f/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e3b9ddb996f18d541a3e03611d46c3a6c0c0b5f/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=9e3b9ddb996f18d541a3e03611d46c3a6c0c0b5f", "patch": "@@ -1958,6 +1958,7 @@ endif\n ifeq ($(strip $(filter-out s390% linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  a-nallfl.ads<libgnat/a-nallfl__wraplf.ads \\\n   s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n   s-intman.adb<libgnarl/s-intman__posix.adb \\\n   s-linux.ads<libgnarl/s-linux.ads \\\n@@ -2393,6 +2394,7 @@ endif\n ifeq ($(strip $(filter-out sparc% linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  a-nallfl.ads<libgnat/a-nallfl__wraplf.ads \\\n   s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n   s-intman.adb<libgnarl/s-intman__posix.adb \\\n   s-linux.ads<libgnarl/s-linux__sparc.ads \\\n@@ -2786,6 +2788,7 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n \n   ifeq ($(strip $(filter-out powerpc%,$(target_cpu))),)\n     LIBGNAT_TARGET_PAIRS += \\\n+      a-nallfl.ads<libgnat/a-nallfl__wraplf.ads \\\n       s-intman.adb<libgnarl/s-intman__posix.adb \\\n       s-osprim.adb<libgnat/s-osprim__posix.adb \\\n       $(ATOMICS_TARGET_PAIRS) \\"}]}