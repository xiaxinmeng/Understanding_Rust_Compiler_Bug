{"sha": "2e5eb5c578774168395f6b6e47f503841850589f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU1ZWI1YzU3ODc3NDE2ODM5NWY2YjZlNDdmNTAzODQxODUwNTg5Zg==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-05-17T19:33:13Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-05-17T19:33:13Z"}, "message": "parse.y (constructor_block_end:): New rule, tagged <node>.\n\nMon May 17 19:20:24 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n        * parse.y (constructor_block_end:): New rule, tagged <node>.\n        (constructor_body:): Use `constructor_block_end' instead of\n        `block_end'.\n\nFrom-SVN: r26978", "tree": {"sha": "ff63539469bc79e873663c6d1db94e7cef4a7865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff63539469bc79e873663c6d1db94e7cef4a7865"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e5eb5c578774168395f6b6e47f503841850589f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e5eb5c578774168395f6b6e47f503841850589f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e5eb5c578774168395f6b6e47f503841850589f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e5eb5c578774168395f6b6e47f503841850589f/comments", "author": null, "committer": null, "parents": [{"sha": "6efa1cc2732196980ee9d3f0f864e3de79764142", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6efa1cc2732196980ee9d3f0f864e3de79764142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6efa1cc2732196980ee9d3f0f864e3de79764142"}], "stats": {"total": 3950, "additions": 1971, "deletions": 1979}, "files": [{"sha": "3732d7491cf1ded2bb47f1427b24485dba177301", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e5eb5c578774168395f6b6e47f503841850589f/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e5eb5c578774168395f6b6e47f503841850589f/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=2e5eb5c578774168395f6b6e47f503841850589f", "patch": "@@ -1,7 +1,13 @@\n+Mon May 17 19:20:24 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (constructor_block_end:): New rule, tagged <node>.\n+\t(constructor_body:): Use `constructor_block_end' instead of\n+ \t`block_end'.\n+\n Mon May 17 18:01:40 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (statement_nsi:): Pop `for' statement block.\n-\t(java_complete_lhs): Labelled blocks containing no statement are\n+\t(java_complete_lhs): Labeled blocks containing no statement are\n  \tmarked as completing normally.\n \n Fri May 14 12:31:08 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>"}, {"sha": "2fc3491d27c1175a731965bc1b8fa20ff07e0669", "filename": "gcc/java/parse.c", "status": "modified", "additions": 1955, "deletions": 1973, "changes": 3928, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e5eb5c578774168395f6b6e47f503841850589f/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e5eb5c578774168395f6b6e47f503841850589f/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=2e5eb5c578774168395f6b6e47f503841850589f"}, {"sha": "3013c762e4483116ad92f3a0bfc42308847487ea", "filename": "gcc/java/parse.y", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e5eb5c578774168395f6b6e47f503841850589f/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e5eb5c578774168395f6b6e47f503841850589f/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=2e5eb5c578774168395f6b6e47f503841850589f", "patch": "@@ -396,7 +396,7 @@ static tree current_static_block = NULL_TREE;\n \t\t\tvariable_initializers constructor_body\n \t\t\tarray_initializer\n \n-%type\t <node>\t\tclass_body block_end\n+%type\t <node>\t\tclass_body block_end constructor_block_end\n %type\t <node>\t\tstatement statement_without_trailing_substatement\n \t\t\tlabeled_statement if_then_statement label_decl\n \t\t\tif_then_else_statement while_statement for_statement\n@@ -1001,19 +1001,23 @@ constructor_body:\n \t/* Unlike regular method, we always need a complete (empty)\n \t   body so we can safely perform all the required code\n \t   addition (super invocation and field initialization) */\n-\tblock_begin block_end\n+\tblock_begin constructor_block_end\n \t\t{ \n \t\t  BLOCK_EXPR_BODY ($2) = empty_stmt_node;\n \t\t  $$ = $2;\n \t\t}\n-|\tblock_begin explicit_constructor_invocation block_end\n+|\tblock_begin explicit_constructor_invocation constructor_block_end\n \t\t{ $$ = $3; }\n-|\tblock_begin block_statements block_end\n+|\tblock_begin block_statements constructor_block_end\n \t\t{ $$ = $3; }\n-|       block_begin explicit_constructor_invocation block_statements block_end\n+|       block_begin explicit_constructor_invocation block_statements constructor_block_end\n \t\t{ $$ = $4; }\n ;\n \n+constructor_block_end:\n+\tblock_end\n+|\tblock_end SC_TK\n+\n /* Error recovery for that rule moved down expression_statement: rule.  */\n explicit_constructor_invocation:\n \tthis_or_super OP_TK CP_TK SC_TK"}]}