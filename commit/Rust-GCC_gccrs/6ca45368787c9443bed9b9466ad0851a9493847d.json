{"sha": "6ca45368787c9443bed9b9466ad0851a9493847d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNhNDUzNjg3ODdjOTQ0M2JlZDliOTQ2NmFkMDg1MWE5NDkzODQ3ZA==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2010-06-29T19:11:47Z"}, "committer": {"name": "Douglas Rupp", "email": "rupp@gcc.gnu.org", "date": "2010-06-29T19:11:47Z"}, "message": "vmsdbgout.c (func_table): Replace with VEC func{nam,num}_tables.\n\n\t* vmsdbgout.c (func_table): Replace with VEC func{nam,num}_tables.\n\t(funcnam_table): New static table.\n\t(funcnum_table): New static table.\n\t(write_rtnbeg): Write value saved in funcnum_table.\n\t(write_rtnend): Write value saved in funcnum_table.\n\t(vmsdbgout_begin_function): Save current function info in\n\t(vmsdbgout_init): Initialize func{nam,num}_tables. Minor reformatting.\n\t(vmsdbgout_finish): Iterate over funcnum_table.\n\nFrom-SVN: r161556", "tree": {"sha": "54fe6a68e66695b7048fd4b022546cd29cf41dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54fe6a68e66695b7048fd4b022546cd29cf41dcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ca45368787c9443bed9b9466ad0851a9493847d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ca45368787c9443bed9b9466ad0851a9493847d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ca45368787c9443bed9b9466ad0851a9493847d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ca45368787c9443bed9b9466ad0851a9493847d/comments", "author": null, "committer": null, "parents": [{"sha": "e82a40fcb47f501926bad51e86dc3bebfa1f6723", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e82a40fcb47f501926bad51e86dc3bebfa1f6723", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e82a40fcb47f501926bad51e86dc3bebfa1f6723"}], "stats": {"total": 84, "additions": 37, "deletions": 47}, "files": [{"sha": "f1b3cd8a515c8fb013ab2a9ae25121055dc7b936", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ca45368787c9443bed9b9466ad0851a9493847d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ca45368787c9443bed9b9466ad0851a9493847d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ca45368787c9443bed9b9466ad0851a9493847d", "patch": "@@ -1,3 +1,14 @@\n+2010-06-29  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* vmsdbgout.c (func_table): Replace with VEC func{nam,num}_tables.\n+\t(funcnam_table): New static table.\n+\t(funcnum_table): New static table.\n+\t(write_rtnbeg): Write value saved in funcnum_table.\n+\t(write_rtnend): Write value saved in funcnum_table.\n+\t(vmsdbgout_begin_function): Save current function info in\n+\t(vmsdbgout_init): Initialize func{nam,num}_tables. Minor reformatting.\n+\t(vmsdbgout_finish): Iterate over funcnum_table.\n+\n 2010-06-29  Douglas B Rupp  <rupp@gnat.com>\n \n \t* vmsdbgout.c (vmsdbgout_begin_epilogue): Declare"}, {"sha": "dba126d7739920a13bb0382fdc6b41a0099fb818", "filename": "gcc/vmsdbgout.c", "status": "modified", "additions": 26, "deletions": 47, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ca45368787c9443bed9b9466ad0851a9493847d/gcc%2Fvmsdbgout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ca45368787c9443bed9b9466ad0851a9493847d/gcc%2Fvmsdbgout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsdbgout.c?ref=6ca45368787c9443bed9b9466ad0851a9493847d", "patch": "@@ -106,25 +106,13 @@ static unsigned int file_info_table_in_use;\n    table.  */\n #define FILE_TABLE_INCREMENT 64\n \n-/* A structure to hold basic information for the VMS end\n-   routine.  */\n+typedef char *char_p;\n+DEF_VEC_P(char_p);\n+DEF_VEC_ALLOC_P(char_p,heap);\n \n-typedef struct vms_func_struct\n-{\n-  const char *vms_func_name;\n-  unsigned funcdef_number;\n-}\n-vms_func_node;\n-\n-typedef struct vms_func_struct *vms_func_ref;\n-\n-static unsigned int func_table_allocated;\n-static unsigned int func_table_in_use;\n-#define FUNC_TABLE_INCREMENT 256\n-\n-/* A pointer to the base of a table that contains frame description\n-   information for each routine.  */\n-static vms_func_ref func_table;\n+static VEC(char_p,heap) *funcnam_table;\n+static VEC(unsigned,heap) *funcnum_table;\n+#define FUNC_TABLE_INITIAL 256\n \n /* Local pointer to the name of the main input file.  Initialized in\n    vmsdbgout_init.  */\n@@ -679,9 +667,8 @@ write_rtnbeg (int rtnnum, int dosizeonly)\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n   DST_ROUTINE_BEGIN rtnbeg;\n   DST_PROLOG prolog;\n-  vms_func_ref fde = &func_table[rtnnum];\n \n-  rtnname = fde->vms_func_name;\n+  rtnname = VEC_index (char_p, funcnam_table, rtnnum);\n   rtnnamelen = strlen (rtnname);\n   rtnentryname = concat (rtnname, \"..en\", NULL);\n \n@@ -752,7 +739,9 @@ write_rtnbeg (int rtnnum, int dosizeonly)\n       totsize += write_debug_header (&prolog.dst_a_prolog_header, \"prolog\",\n \t\t\t\t     dosizeonly);\n \n-      ASM_GENERATE_INTERNAL_LABEL (label, FUNC_PROLOG_LABEL, fde->funcdef_number);\n+      ASM_GENERATE_INTERNAL_LABEL\n+        (label, FUNC_PROLOG_LABEL,\n+\t VEC_index (unsigned, funcnum_table, rtnnum));\n       totsize += write_debug_addr (label, \"prolog breakpoint addr\",\n \t\t\t\t   dosizeonly);\n     }\n@@ -770,8 +759,6 @@ write_rtnend (int rtnnum, int dosizeonly)\n   char label1[MAX_ARTIFICIAL_LABEL_BYTES];\n   char label2[MAX_ARTIFICIAL_LABEL_BYTES];\n   int totsize;\n-  vms_func_ref fde = &func_table[rtnnum];\n-  int corrected_rtnnum = fde->funcdef_number;\n \n   totsize = 0;\n \n@@ -786,8 +773,12 @@ write_rtnend (int rtnnum, int dosizeonly)\n   totsize += write_debug_data1 (rtnend.dst_b_rtnend_unused, \"unused\",\n \t\t\t\tdosizeonly);\n \n-  ASM_GENERATE_INTERNAL_LABEL (label1, FUNC_BEGIN_LABEL, corrected_rtnnum);\n-  ASM_GENERATE_INTERNAL_LABEL (label2, FUNC_END_LABEL, corrected_rtnnum);\n+  ASM_GENERATE_INTERNAL_LABEL\n+   (label1, FUNC_BEGIN_LABEL,\n+    VEC_index (unsigned, funcnum_table, rtnnum));\n+  ASM_GENERATE_INTERNAL_LABEL\n+   (label2, FUNC_END_LABEL,\n+    VEC_index (unsigned, funcnum_table, rtnnum));\n   totsize += write_debug_delta4 (label2, label1, \"routine size\", dosizeonly);\n \n   return totsize;\n@@ -1289,30 +1280,20 @@ vmsdbgout_ignore_block (const_tree block)\n   return retval;\n }\n \n-/* Add an entry for function DECL into the func_table.  */\n+/* Add an entry for function DECL into the funcnam_table.  */\n \n static void\n vmsdbgout_begin_function (tree decl)\n {\n   const char *name = XSTR (XEXP (DECL_RTL (decl), 0), 0);\n-  vms_func_ref fde;\n \n   if (write_symbols == VMS_AND_DWARF2_DEBUG)\n     (*dwarf2_debug_hooks.begin_function) (decl);\n \n-  if (func_table_in_use == func_table_allocated)\n-    {\n-      func_table_allocated += FUNC_TABLE_INCREMENT;\n-      func_table\n-        = (vms_func_ref) xrealloc (func_table,\n-\t\t\t\t   func_table_allocated * sizeof (vms_func_node));\n-    }\n-\n   /* Add the new entry to the end of the function name table.  */\n-  fde = &func_table[func_table_in_use++];\n-  fde->vms_func_name = xstrdup (name);\n-  fde->funcdef_number = current_function_funcdef_no;\n-\n+  VEC_safe_push (char_p, heap, funcnam_table, xstrdup (name));\n+  VEC_safe_push (unsigned, heap, funcnum_table,\n+\t\t current_function_funcdef_no);\n }\n \n static char fullname_buff [4096];\n@@ -1492,13 +1473,11 @@ vmsdbgout_init (const char *main_input_filename)\n   /* Allocate the initial hunk of the file_info_table.  */\n   file_info_table = XCNEWVEC (dst_file_info_entry, FILE_TABLE_INCREMENT);\n   file_info_table_allocated = FILE_TABLE_INCREMENT;\n-\n-  /* Skip the first entry - file numbers begin at 1 */\n+  /* Skip the first entry - file numbers begin at 1.  */\n   file_info_table_in_use = 1;\n \n-  func_table = (vms_func_ref) xcalloc (FUNC_TABLE_INCREMENT, sizeof (vms_func_node));\n-  func_table_allocated = FUNC_TABLE_INCREMENT;\n-  func_table_in_use = 1;\n+  funcnam_table = VEC_alloc (char_p, heap, FUNC_TABLE_INITIAL);\n+  funcnum_table = VEC_alloc (unsigned, heap, FUNC_TABLE_INITIAL);\n \n   /* Allocate the initial hunk of the line_info_table.  */\n   line_info_table = XCNEWVEC (dst_line_info_entry, LINE_INFO_TABLE_INCREMENT);\n@@ -1594,7 +1573,7 @@ vmsdbgout_abstract_function (tree decl)\n static void\n vmsdbgout_finish (const char *main_input_filename ATTRIBUTE_UNUSED)\n {\n-  unsigned int i;\n+  unsigned int i, ifunc;\n   int totsize;\n \n   if (write_symbols == VMS_AND_DWARF2_DEBUG)\n@@ -1614,15 +1593,15 @@ vmsdbgout_finish (const char *main_input_filename ATTRIBUTE_UNUSED)\n   ASM_OUTPUT_ALIGN (asm_out_file, 0);\n \n   totsize = write_modbeg (1);\n-  for (i = 1; i < func_table_in_use; i++)\n+  for (i = 0; VEC_iterate (unsigned, funcnum_table, i, ifunc); i++)\n     {\n       totsize += write_rtnbeg (i, 1);\n       totsize += write_rtnend (i, 1);\n     }\n   totsize += write_pclines (1);\n \n   write_modbeg (0);\n-  for (i = 1; i < func_table_in_use; i++)\n+  for (i = 0; VEC_iterate (unsigned, funcnum_table, i, ifunc); i++)\n     {\n       write_rtnbeg (i, 0);\n       write_rtnend (i, 0);"}]}