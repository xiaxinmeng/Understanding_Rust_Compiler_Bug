{"sha": "337633f9c613670b07b4309cf92469e89f3f6685", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM3NjMzZjljNjEzNjcwYjA3YjQzMDljZjkyNDY5ZTg5ZjNmNjY4NQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-19T08:44:43Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-19T08:44:43Z"}, "message": "(digest_init): Typo in last change.\n\nFrom-SVN: r3785", "tree": {"sha": "bdbe3871d8c5d31848406e3a47c7eb969265eb27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdbe3871d8c5d31848406e3a47c7eb969265eb27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/337633f9c613670b07b4309cf92469e89f3f6685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/337633f9c613670b07b4309cf92469e89f3f6685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/337633f9c613670b07b4309cf92469e89f3f6685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/337633f9c613670b07b4309cf92469e89f3f6685/comments", "author": null, "committer": null, "parents": [{"sha": "665381933b28226f275d86853b0bbfe96693759b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/665381933b28226f275d86853b0bbfe96693759b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/665381933b28226f275d86853b0bbfe96693759b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e3fd8896b098c14ce9746e35a48cb56ef88acb45", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/337633f9c613670b07b4309cf92469e89f3f6685/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/337633f9c613670b07b4309cf92469e89f3f6685/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=337633f9c613670b07b4309cf92469e89f3f6685", "patch": "@@ -4903,7 +4903,7 @@ digest_init (type, init, tail, require_constant, constructor_constant, ofwhat)\n   /* Handle scalar types, including conversions.  */\n \n   if (code == INTEGER_TYPE || code == REAL_TYPE || code == POINTER_TYPE\n-      || code == ENUMERAL_TYPE || code == COMPEX_TYPE)\n+      || code == ENUMERAL_TYPE || code == COMPLEX_TYPE)\n     {\n       if (raw_constructor)\n \t{"}]}