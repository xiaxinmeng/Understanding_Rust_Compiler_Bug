{"sha": "d3133e688d46aa668981d013ab331cddccdd4444", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMxMzNlNjg4ZDQ2YWE2Njg5ODFkMDEzYWIzMzFjZGRjY2RkNDQ0NA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-10-17T02:07:45Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-10-17T02:07:45Z"}, "message": "mangle.c (write_expression): Correct handling of enumeration constants.\n\n\t* mangle.c (write_expression): Correct handling of enumeration\n\tconstants.\n\t(write_template_arg): Likewise.\n\t* pt.c (convert_template_argument): Do not fold non-type template\n\targuments when inside a template.\n\n\t* g++.dg/abi/mangle16.C: New test.\n\t* g++.dg/abi/mangle17.C: Likewise.\n\nFrom-SVN: r58234", "tree": {"sha": "eda1ca44cb14c87a4d2a7dcdbf78f41890400359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eda1ca44cb14c87a4d2a7dcdbf78f41890400359"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3133e688d46aa668981d013ab331cddccdd4444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3133e688d46aa668981d013ab331cddccdd4444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3133e688d46aa668981d013ab331cddccdd4444", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3133e688d46aa668981d013ab331cddccdd4444/comments", "author": null, "committer": null, "parents": [{"sha": "2982f6ffc47493a6560ad8cf290c8315be5b24e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2982f6ffc47493a6560ad8cf290c8315be5b24e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2982f6ffc47493a6560ad8cf290c8315be5b24e2"}], "stats": {"total": 55, "additions": 50, "deletions": 5}, "files": [{"sha": "ce7f82939d8cb8fc15cd77b2a12b4fc94218408f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3133e688d46aa668981d013ab331cddccdd4444/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3133e688d46aa668981d013ab331cddccdd4444/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d3133e688d46aa668981d013ab331cddccdd4444", "patch": "@@ -1,5 +1,11 @@\n 2002-10-16  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* mangle.c (write_expression): Correct handling of enumeration\n+\tconstants.\n+\t(write_template_arg): Likewise.\n+\t* pt.c (convert_template_argument): Do not fold non-type template\n+\targuments when inside a template.\n+\n \tPR c++/7478\n \t* cvt.c (convert_to_reference): Allow references as the incoming\n \ttype."}, {"sha": "bc7e970cdd978399fd617ca2f3c7c211ec661f16", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3133e688d46aa668981d013ab331cddccdd4444/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3133e688d46aa668981d013ab331cddccdd4444/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=d3133e688d46aa668981d013ab331cddccdd4444", "patch": "@@ -1869,10 +1869,15 @@ write_expression (expr)\n       || code == TEMPLATE_PARM_INDEX)\n     write_template_param (expr);\n   /* Handle literals.  */\n-  else if (TREE_CODE_CLASS (code) == 'c')\n+  else if (TREE_CODE_CLASS (code) == 'c' \n+\t   || (abi_version_at_least (2) && code == CONST_DECL))\n     write_template_arg_literal (expr);\n   else if (DECL_P (expr))\n     {\n+      /* G++ 3.2 incorrectly mangled non-type template arguments of\n+\t enumeration type using their names.  */\n+      if (code == CONST_DECL)\n+\tG.need_abi_warning = 1;\n       write_char ('L');\n       write_mangled_name (expr);\n       write_char ('E');\n@@ -2105,15 +2110,20 @@ write_template_arg (node)\n   else if (code == TEMPLATE_DECL)\n     /* A template appearing as a template arg is a template template arg.  */\n     write_template_template_arg (node);\n+  else if ((TREE_CODE_CLASS (code) == 'c' && code != PTRMEM_CST)\n+\t   || (abi_version_at_least (2) && code == CONST_DECL))\n+    write_template_arg_literal (node);\n   else if (DECL_P (node))\n     {\n+      /* G++ 3.2 incorrectly mangled non-type template arguments of\n+\t enumeration type using their names.  */\n+      if (code == CONST_DECL)\n+\tG.need_abi_warning = 1;\n       write_char ('L');\n       write_char ('Z');\n       write_encoding (node);\n       write_char ('E');\n     }\n-  else if (TREE_CODE_CLASS (code) == 'c' && code != PTRMEM_CST)\n-    write_template_arg_literal (node);\n   else\n     {\n       /* Template arguments may be expressions.  */"}, {"sha": "046294e14862650a1ca6309c80dc48c91614422f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3133e688d46aa668981d013ab331cddccdd4444/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3133e688d46aa668981d013ab331cddccdd4444/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=d3133e688d46aa668981d013ab331cddccdd4444", "patch": "@@ -3487,10 +3487,11 @@ convert_template_argument (parm, arg, args, complain, i, in_decl)\n       if (invalid_nontype_parm_type_p (t, complain))\n         return error_mark_node;\n       \n-      if (processing_template_decl)\n+      if (processing_template_decl && !abi_version_at_least (2))\n \targ = maybe_fold_nontype_arg (arg);\n \n-      if (!uses_template_parms (arg) && !uses_template_parms (t))\n+      if ((!abi_version_at_least (2) || !processing_template_decl)\n+\t  && (!uses_template_parms (arg) && !uses_template_parms (t)))\n \t/* We used to call digest_init here.  However, digest_init\n \t   will report errors, which we don't want when complain\n \t   is zero.  More importantly, digest_init will try too"}, {"sha": "2ca295ecf163baf02fdccde014d8a5f6c61b2e47", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3133e688d46aa668981d013ab331cddccdd4444/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3133e688d46aa668981d013ab331cddccdd4444/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3133e688d46aa668981d013ab331cddccdd4444", "patch": "@@ -1,5 +1,8 @@\n 2002-10-16  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* g++.dg/abi/mangle16.C: New test.\n+\t* g++.dg/abi/mangle17.C: Likewise.\n+\n \tPR c++/7478\n \t* g++.dg/template/ref1.C: New test.\n "}, {"sha": "1d40aca55d26c35e4dec9efd60117cde0dbcf7c1", "filename": "gcc/testsuite/g++.dg/abi/mangle16.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3133e688d46aa668981d013ab331cddccdd4444/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3133e688d46aa668981d013ab331cddccdd4444/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle16.C?ref=d3133e688d46aa668981d013ab331cddccdd4444", "patch": "@@ -0,0 +1,14 @@\n+// { dg-options \"-fabi-version=0\" }\n+\n+enum E { e = 3 };\n+\n+template <int I> struct S {};\n+\n+template <int I> void f (S<e + 1>) {}\n+template void f<7>(S<e + 1>);\n+\n+template <int I> void g (S<e>) {}\n+template void g<7>(S<e>);\n+\n+// { dg-final { scan-assembler _Z1fILi7EEv1SIXplL1E3ELi1EEE } }\n+// { dg-final { scan-assembler _Z1gILi7EEv1SIL1E3EE } }"}, {"sha": "1da6dea632b7373b36542680127c72a32ec8be8a", "filename": "gcc/testsuite/g++.dg/abi/mangle17.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3133e688d46aa668981d013ab331cddccdd4444/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3133e688d46aa668981d013ab331cddccdd4444/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle17.C?ref=d3133e688d46aa668981d013ab331cddccdd4444", "patch": "@@ -0,0 +1,11 @@\n+// { dg-options \"-Wabi\" }\n+\n+enum E { e = 3 };\n+\n+template <int I> struct S {};\n+\n+template <int I> void f (S<e + int (3.7)>) {}\n+template void f<7>(S<e + int (3.7)>);  // { dg-warning \"mangle\" }\n+\n+template <int I> void g (S<e + int (3.7)>) {}\n+template void g<7>(S<e + int (3.7)>); // { dg-warning \"mangle\" }"}]}