{"sha": "d71ff3faa157470cb3425c7009ccddc335919ab3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcxZmYzZmFhMTU3NDcwY2IzNDI1YzcwMDljY2RkYzMzNTkxOWFiMw==", "commit": {"author": {"name": "Zhouyi Zhou", "email": "yizhouzhou@ict.ac.cn", "date": "2013-08-20T06:25:10Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-08-20T06:25:10Z"}, "message": "tree-ssa-ccp.c (get_default_value): Remove redundant condition checks.\n\n       * tree-ssa-ccp.c (get_default_value): Remove redundant condition\n       checks.\n\nFrom-SVN: r201870", "tree": {"sha": "0b39e1aa3dc0b1f1cd32d8d2529a42ca517dc25b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b39e1aa3dc0b1f1cd32d8d2529a42ca517dc25b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d71ff3faa157470cb3425c7009ccddc335919ab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d71ff3faa157470cb3425c7009ccddc335919ab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d71ff3faa157470cb3425c7009ccddc335919ab3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d71ff3faa157470cb3425c7009ccddc335919ab3/comments", "author": null, "committer": null, "parents": [{"sha": "a98cbc3694b03f28ebd51581c6d1cd5c13c52e10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a98cbc3694b03f28ebd51581c6d1cd5c13c52e10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a98cbc3694b03f28ebd51581c6d1cd5c13c52e10"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "56e6fd416b292b1154e23884be0b09ef74a6fd6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71ff3faa157470cb3425c7009ccddc335919ab3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71ff3faa157470cb3425c7009ccddc335919ab3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d71ff3faa157470cb3425c7009ccddc335919ab3", "patch": "@@ -1,3 +1,8 @@\n+2013-08-20  Zhouyi Zhou <yizhouzhou@ict.ac.cn>\n+\n+\t* tree-ssa-ccp.c (get_default_value): Remove redundant condition\n+\tchecks.\n+\n 2013-08-20  David Malcolm  <dmalcolm@redhat.com>\n \n \tMake opt_pass and gcc::pass_manager be GC-managed, so that pass"}, {"sha": "78687f7fac8e8aea1038fef4050a511f5c65d13a", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71ff3faa157470cb3425c7009ccddc335919ab3/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71ff3faa157470cb3425c7009ccddc335919ab3/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=d71ff3faa157470cb3425c7009ccddc335919ab3", "patch": "@@ -258,12 +258,7 @@ get_default_value (tree var)\n \t  val.mask = double_int_minus_one;\n \t}\n     }\n-  else if (is_gimple_assign (stmt)\n-\t   /* Value-returning GIMPLE_CALL statements assign to\n-\t      a variable, and are treated similarly to GIMPLE_ASSIGN.  */\n-\t   || (is_gimple_call (stmt)\n-\t       && gimple_call_lhs (stmt) != NULL_TREE)\n-\t   || gimple_code (stmt) == GIMPLE_PHI)\n+  else if (is_gimple_assign (stmt))\n     {\n       tree cst;\n       if (gimple_assign_single_p (stmt)\n@@ -274,9 +269,19 @@ get_default_value (tree var)\n \t  val.value = cst;\n \t}\n       else\n-\t/* Any other variable defined by an assignment or a PHI node\n-\t   is considered UNDEFINED.  */\n-\tval.lattice_val = UNDEFINED;\n+\t{\n+\t  /* Any other variable defined by an assignment is considered\n+\t     UNDEFINED.  */\n+\t  val.lattice_val = UNDEFINED;\n+\t}\n+    }\n+  else if ((is_gimple_call (stmt)\n+\t    && gimple_call_lhs (stmt) != NULL_TREE)\n+\t   || gimple_code (stmt) == GIMPLE_PHI)\n+    {\n+      /* A variable defined by a call or a PHI node is considered\n+\t UNDEFINED.  */\n+      val.lattice_val = UNDEFINED;\n     }\n   else\n     {"}]}