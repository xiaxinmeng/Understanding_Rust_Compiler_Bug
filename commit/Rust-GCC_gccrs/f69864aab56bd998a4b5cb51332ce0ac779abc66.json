{"sha": "f69864aab56bd998a4b5cb51332ce0ac779abc66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY5ODY0YWFiNTZiZDk5OGE0YjVjYjUxMzMyY2UwYWM3NzlhYmM2Ng==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-10-14T02:03:03Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-10-14T02:03:03Z"}, "message": "Document eh_epilogue.\n\nFrom-SVN: r23076", "tree": {"sha": "46c4ab3f2a67bf1f29627d706ce053ec1109ac8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46c4ab3f2a67bf1f29627d706ce053ec1109ac8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f69864aab56bd998a4b5cb51332ce0ac779abc66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f69864aab56bd998a4b5cb51332ce0ac779abc66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f69864aab56bd998a4b5cb51332ce0ac779abc66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f69864aab56bd998a4b5cb51332ce0ac779abc66/comments", "author": null, "committer": null, "parents": [{"sha": "18a90182e3204fe9418addfd3824d7ca68007128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a90182e3204fe9418addfd3824d7ca68007128", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18a90182e3204fe9418addfd3824d7ca68007128"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "f3f6cd6a3aae50d65bbfef8171858993f1aa3da7", "filename": "gcc/md.texi", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f69864aab56bd998a4b5cb51332ce0ac779abc66/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f69864aab56bd998a4b5cb51332ce0ac779abc66/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=f69864aab56bd998a4b5cb51332ce0ac779abc66", "patch": "@@ -2531,6 +2531,27 @@ This pattern, if defined, performs the entire action of the longjmp.\n You will not normally need to define this pattern unless you also define\n @code{builtin_setjmp_setup}.  The single argument is a pointer to the\n @code{jmp_buf}.\n+\n+@cindex @code{eh_epilogue} instruction pattern\n+@item @samp{eh_epilogue}\n+This pattern, if defined, affects the way @code{__builtin_eh_return},\n+and thence @code{__throw} are built.  It is intended to allow communication\n+between the exception handling machinery and the normal epilogue code\n+for the target.\n+\n+The pattern takes three arguments.  The first is the exception context\n+pointer.  This will have already been copied to the function return\n+register appropriate for a pointer; normally this can be ignored.  The\n+second argument is an offset to be added to the stack pointer.  It will \n+have been copied to some arbitrary call-clobbered hard reg so that it\n+will survive until after reload to when the normal epilogue is generated. \n+The final argument is the address of the exception handler to which\n+the function should return.  This will normally need to copied by the\n+pattern to some special register.\n+\n+This pattern must be defined if @code{RETURN_ADDR_RTX} does not yield\n+something that can be reliably and permanently modified, i.e. a fixed\n+hard register or a stack memory reference.\n @end table\n \n @node Pattern Ordering"}]}