{"sha": "a6354842df32417f55a9635e98f7e00bd412e13a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYzNTQ4NDJkZjMyNDE3ZjU1YTk2MzVlOThmN2UwMGJkNDEyZTEzYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-05-02T08:57:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-05-02T08:57:44Z"}, "message": "[multiple changes]\n\n2017-05-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Null_Procedure): Revert previous change.\n\n2017-05-02  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Case_Expression): Add check for valid\n\texpression (Analyze_If_Expression): Add check for valid condition\n\t* sem_eval.adb (Eval_Case_Expression): Add check for error posted\n\ton case-expression\n\t* sem_res.adb (Resolve_If_Expression): Add check for valid\n\tcondition and then-expression.\n\nFrom-SVN: r247477", "tree": {"sha": "5a69566d8d4c6344cb126c05daa04be0c33e4494", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a69566d8d4c6344cb126c05daa04be0c33e4494"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6354842df32417f55a9635e98f7e00bd412e13a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6354842df32417f55a9635e98f7e00bd412e13a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6354842df32417f55a9635e98f7e00bd412e13a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6354842df32417f55a9635e98f7e00bd412e13a/comments", "author": null, "committer": null, "parents": [{"sha": "97ac2d62fa6fc002ff9f7ddee620e2bdaaa1cde8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ac2d62fa6fc002ff9f7ddee620e2bdaaa1cde8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97ac2d62fa6fc002ff9f7ddee620e2bdaaa1cde8"}], "stats": {"total": 60, "additions": 47, "deletions": 13}, "files": [{"sha": "f11110e01c0f08b2d29d63e6caf1c23d29d5ff0c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6354842df32417f55a9635e98f7e00bd412e13a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6354842df32417f55a9635e98f7e00bd412e13a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a6354842df32417f55a9635e98f7e00bd412e13a", "patch": "@@ -1,3 +1,16 @@\n+2017-05-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Null_Procedure): Revert previous change.\n+\n+2017-05-02  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Case_Expression): Add check for valid\n+\texpression (Analyze_If_Expression): Add check for valid condition\n+\t* sem_eval.adb (Eval_Case_Expression): Add check for error posted\n+\ton case-expression\n+\t* sem_res.adb (Resolve_If_Expression): Add check for valid\n+\tcondition and then-expression.\n+\n 2017-05-02  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch3.adb (Build_Initialization_Call): Generate a null"}, {"sha": "3952789f762c80c086c7bf552a34066413c1e14b", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6354842df32417f55a9635e98f7e00bd412e13a/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6354842df32417f55a9635e98f7e00bd412e13a/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=a6354842df32417f55a9635e98f7e00bd412e13a", "patch": "@@ -1560,6 +1560,10 @@ package body Sem_Ch4 is\n       --  Get our initial type from the first expression for which we got some\n       --  useful type information from the expression.\n \n+      if No (FirstX) then\n+         return;\n+      end if;\n+\n       if not Is_Overloaded (FirstX) then\n          Set_Etype (N, Etype (FirstX));\n \n@@ -2212,23 +2216,28 @@ package body Sem_Ch4 is\n \n    procedure Analyze_If_Expression (N : Node_Id) is\n       Condition : constant Node_Id := First (Expressions (N));\n-      Then_Expr : constant Node_Id := Next (Condition);\n+      Then_Expr : Node_Id;\n       Else_Expr : Node_Id;\n \n    begin\n       --  Defend against error of missing expressions from previous error\n \n+      if No (Condition) then\n+         Check_Error_Detected;\n+         return;\n+      end if;\n+      Then_Expr := Next (Condition);\n+\n       if No (Then_Expr) then\n          Check_Error_Detected;\n          return;\n       end if;\n+      Else_Expr := Next (Then_Expr);\n \n       if Comes_From_Source (N) then\n          Check_SPARK_05_Restriction (\"if expression is not allowed\", N);\n       end if;\n \n-      Else_Expr := Next (Then_Expr);\n-\n       if Comes_From_Source (N) then\n          Check_Compiler_Unit (\"if expression\", N);\n       end if;"}, {"sha": "61e4f86c6cacc1b3de915cf24305da5210d67a40", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6354842df32417f55a9635e98f7e00bd412e13a/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6354842df32417f55a9635e98f7e00bd412e13a/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=a6354842df32417f55a9635e98f7e00bd412e13a", "patch": "@@ -1450,19 +1450,14 @@ package body Sem_Ch6 is\n \n          Is_Completion := False;\n \n-         --  Link the body to the null procedure spec\n-\n-         if Nkind (N) = N_Subprogram_Declaration then\n-            Set_Corresponding_Body (N, Defining_Entity (Null_Body));\n-         end if;\n-\n          --  Null procedures are always inlined, but generic formal subprograms\n          --  which appear as such in the internal instance of formal packages,\n          --  need no completion and are not marked Inline.\n \n          if Expander_Active\n            and then Nkind (N) /= N_Formal_Concrete_Subprogram_Declaration\n          then\n+            Set_Corresponding_Body (N, Defining_Entity (Null_Body));\n             Set_Body_To_Inline (N, Null_Body);\n             Set_Is_Inlined (Designator);\n          end if;"}, {"sha": "5a40ed97630b6eaa5b39f11d4a82545427ff7e8f", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6354842df32417f55a9635e98f7e00bd412e13a/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6354842df32417f55a9635e98f7e00bd412e13a/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=a6354842df32417f55a9635e98f7e00bd412e13a", "patch": "@@ -2158,7 +2158,9 @@ package body Sem_Eval is\n    begin\n       Set_Is_Static_Expression (N, False);\n \n-      if not Is_Static_Expression (Expression (N)) then\n+      if Error_Posted (Expression (N))\n+        or else not Is_Static_Expression (Expression (N))\n+      then\n          Check_Non_Static_Context (Expression (N));\n          return;\n       end if;"}, {"sha": "ff0a3e85f3a5e22c3f40bda7e0802e253d74af43", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6354842df32417f55a9635e98f7e00bd412e13a/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6354842df32417f55a9635e98f7e00bd412e13a/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=a6354842df32417f55a9635e98f7e00bd412e13a", "patch": "@@ -8241,12 +8241,24 @@ package body Sem_Res is\n \n    procedure Resolve_If_Expression (N : Node_Id; Typ : Entity_Id) is\n       Condition : constant Node_Id := First (Expressions (N));\n-      Then_Expr : constant Node_Id := Next (Condition);\n-      Else_Expr : Node_Id          := Next (Then_Expr);\n+      Then_Expr : Node_Id;\n+      Else_Expr : Node_Id;\n       Else_Typ  : Entity_Id;\n       Then_Typ  : Entity_Id;\n \n    begin\n+      --  Defend against malformed expressions\n+\n+      if No (Condition) then\n+         return;\n+      end if;\n+      Then_Expr := Next (Condition);\n+\n+      if No (Then_Expr) then\n+         return;\n+      end if;\n+      Else_Expr := Next (Then_Expr);\n+\n       Resolve (Condition, Any_Boolean);\n       Resolve (Then_Expr, Typ);\n       Then_Typ := Etype (Then_Expr);\n@@ -8311,7 +8323,10 @@ package body Sem_Res is\n       end if;\n \n       Set_Etype (N, Typ);\n-      Eval_If_Expression (N);\n+\n+      if not Error_Posted (N) then\n+         Eval_If_Expression (N);\n+      end if;\n    end Resolve_If_Expression;\n \n    -------------------------------"}]}