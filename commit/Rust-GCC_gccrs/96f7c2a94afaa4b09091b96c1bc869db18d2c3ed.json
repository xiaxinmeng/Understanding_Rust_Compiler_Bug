{"sha": "96f7c2a94afaa4b09091b96c1bc869db18d2c3ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZmN2MyYTk0YWZhYTRiMDkwOTFiOTZjMWJjODY5ZGIxOGQyYzNlZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2018-01-25T18:14:04Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-25T18:14:04Z"}, "message": "elf.c (elf_open_debugfile_by_debuglink): Don't check CRC if the desired CRC is zero.\n\n\t* elf.c (elf_open_debugfile_by_debuglink): Don't check CRC if the\n\tdesired CRC is zero.\n\t(elf_add): Don't clear *found_sym and *found_dwarf if debuginfo.\n\nFrom-SVN: r257062", "tree": {"sha": "46a2c9696935f89af755b2fe8d3c8b5ecc549499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46a2c9696935f89af755b2fe8d3c8b5ecc549499"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96f7c2a94afaa4b09091b96c1bc869db18d2c3ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f7c2a94afaa4b09091b96c1bc869db18d2c3ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96f7c2a94afaa4b09091b96c1bc869db18d2c3ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f7c2a94afaa4b09091b96c1bc869db18d2c3ed/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a88d1f8bb2015c752fc783e168e25e5dab99a8b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a88d1f8bb2015c752fc783e168e25e5dab99a8b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a88d1f8bb2015c752fc783e168e25e5dab99a8b9"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "bb449e4d8ac4eb5a8a87256eff567967f2e96803", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f7c2a94afaa4b09091b96c1bc869db18d2c3ed/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f7c2a94afaa4b09091b96c1bc869db18d2c3ed/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=96f7c2a94afaa4b09091b96c1bc869db18d2c3ed", "patch": "@@ -1,3 +1,9 @@\n+2018-01-25  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* elf.c (elf_open_debugfile_by_debuglink): Don't check CRC if the\n+\tdesired CRC is zero.\n+\t(elf_add): Don't clear *found_sym and *found_dwarf if debuginfo.\n+\n 2018-01-25  Ian Lance Taylor  <iant@golang.org>\n \n \t* pecoff.c (coff_add): Only release syms_view if it is valid."}, {"sha": "6403c08fa893d94ad7042e70a832d7a9143f87ab", "filename": "libbacktrace/elf.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f7c2a94afaa4b09091b96c1bc869db18d2c3ed/libbacktrace%2Felf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f7c2a94afaa4b09091b96c1bc869db18d2c3ed/libbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Felf.c?ref=96f7c2a94afaa4b09091b96c1bc869db18d2c3ed", "patch": "@@ -997,19 +997,23 @@ elf_open_debugfile_by_debuglink (struct backtrace_state *state,\n \t\t\t\t void *data)\n {\n   int ddescriptor;\n-  uint32_t got_crc;\n \n   ddescriptor = elf_find_debugfile_by_debuglink (state, filename,\n \t\t\t\t\t\t debuglink_name,\n \t\t\t\t\t\t error_callback, data);\n   if (ddescriptor < 0)\n     return -1;\n \n-  got_crc = elf_crc32_file (state, ddescriptor, error_callback, data);\n-  if (got_crc != debuglink_crc)\n+  if (debuglink_crc != 0)\n     {\n-      backtrace_close (ddescriptor, error_callback, data);\n-      return -1;\n+      uint32_t got_crc;\n+\n+      got_crc = elf_crc32_file (state, ddescriptor, error_callback, data);\n+      if (got_crc != debuglink_crc)\n+\t{\n+\t  backtrace_close (ddescriptor, error_callback, data);\n+\t  return -1;\n+\t}\n     }\n \n   return ddescriptor;\n@@ -2634,8 +2638,11 @@ elf_add (struct backtrace_state *state, const char *filename, int descriptor,\n   unsigned int using_debug_view;\n   uint16_t *zdebug_table;\n \n-  *found_sym = 0;\n-  *found_dwarf = 0;\n+  if (!debuginfo)\n+    {\n+      *found_sym = 0;\n+      *found_dwarf = 0;\n+    }\n \n   shdrs_view_valid = 0;\n   names_view_valid = 0;"}]}