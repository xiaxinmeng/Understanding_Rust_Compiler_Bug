{"sha": "48f30f629fb6991ba1ddbd40385993a2a29457a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhmMzBmNjI5ZmI2OTkxYmExZGRiZDQwMzg1OTkzYTJhMjk0NTdhOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-01-13T13:31:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-01-13T13:31:13Z"}, "message": "re PR middle-end/42716 (ICE in extract_range_from_assert, at tree-vrp.c:1423)\n\n2010-01-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/42716\n\t* fold-const.c (fold_unary_loc): Fold INDIRECT_REFs.\n\n\t* gcc.c-torture/compile/pr42716.c: New testcase.\n\nFrom-SVN: r155859", "tree": {"sha": "53f4a546ee8865499b7d85bcfaf0e4d567e56007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53f4a546ee8865499b7d85bcfaf0e4d567e56007"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48f30f629fb6991ba1ddbd40385993a2a29457a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f30f629fb6991ba1ddbd40385993a2a29457a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f30f629fb6991ba1ddbd40385993a2a29457a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f30f629fb6991ba1ddbd40385993a2a29457a8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e73c69087510db9321f4f6d91280519a643ff55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e73c69087510db9321f4f6d91280519a643ff55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e73c69087510db9321f4f6d91280519a643ff55"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "1d66583818e2077b2e789ae600e8cd65e8da86a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f30f629fb6991ba1ddbd40385993a2a29457a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f30f629fb6991ba1ddbd40385993a2a29457a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48f30f629fb6991ba1ddbd40385993a2a29457a8", "patch": "@@ -1,3 +1,8 @@\n+2010-01-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/42716\n+\t* fold-const.c (fold_unary_loc): Fold INDIRECT_REFs.\n+\n 2010-01-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/41371"}, {"sha": "9e40296123cd07448561c9213a35e281fcf21c29", "filename": "gcc/fold-const.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f30f629fb6991ba1ddbd40385993a2a29457a8/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f30f629fb6991ba1ddbd40385993a2a29457a8/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=48f30f629fb6991ba1ddbd40385993a2a29457a8", "patch": "@@ -8942,6 +8942,19 @@ fold_unary_loc (location_t loc, enum tree_code code, tree type, tree op0)\n \t}\n       return NULL_TREE;\n \n+    case INDIRECT_REF:\n+      /* Fold *&X to X if X is an lvalue.  */\n+      if (TREE_CODE (op0) == ADDR_EXPR)\n+\t{\n+\t  tree op00 = TREE_OPERAND (op0, 0);\n+\t  if ((TREE_CODE (op00) == VAR_DECL\n+\t       || TREE_CODE (op00) == PARM_DECL\n+\t       || TREE_CODE (op00) == RESULT_DECL)\n+\t      && !TREE_READONLY (op00))\n+\t    return op00;\n+\t}\n+      return NULL_TREE;\n+\n     default:\n       return NULL_TREE;\n     } /* switch (code) */"}, {"sha": "38241e23fbb5656b05bda074dbadd8066fc1f165", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f30f629fb6991ba1ddbd40385993a2a29457a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f30f629fb6991ba1ddbd40385993a2a29457a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=48f30f629fb6991ba1ddbd40385993a2a29457a8", "patch": "@@ -1,3 +1,8 @@\n+2010-01-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/42716\n+\t* gcc.c-torture/compile/pr42716.c: New testcase.\n+\n 2010-01-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/42678"}, {"sha": "e52df0f4ae3f7524bba870736b6128463765d5a4", "filename": "gcc/testsuite/gcc.c-torture/compile/pr42716.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f30f629fb6991ba1ddbd40385993a2a29457a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42716.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f30f629fb6991ba1ddbd40385993a2a29457a8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42716.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42716.c?ref=48f30f629fb6991ba1ddbd40385993a2a29457a8", "patch": "@@ -0,0 +1,18 @@\n+static short foo (long long si1, short si2)\n+{\n+  return si1 > 0 && si2 > 0 || si1 < 0\n+      && si2 < 0 && si1 < 1 - si2 ? : si1 + si2;\n+}\n+\n+int g_13;\n+unsigned g_17;\n+\n+int safe (int, int);\n+\n+void bar (short p_51, short * p_52)\n+{\n+  int *const l_55 = &g_13;\n+  if (safe (*p_52, g_13 != foo (*p_52 & *l_55 == g_13 && g_17 >= 1, 0)))\n+    {\n+    }\n+}"}]}