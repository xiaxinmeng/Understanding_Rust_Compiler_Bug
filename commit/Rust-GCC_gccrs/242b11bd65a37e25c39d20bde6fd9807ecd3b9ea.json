{"sha": "242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQyYjExYmQ2NWEzN2UyNWMzOWQyMGJkZTZmZDk4MDdlY2QzYjllYQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-10-20T07:21:49Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-10-20T07:21:49Z"}, "message": "AlgorithmParameterGenerator.java, [...]: Import statements reorganized...\n\n2004-10-20  Michael Koch  <konqueror@gmx.de>\n\n\t* java/security/AlgorithmParameterGenerator.java,\n\tjava/security/AlgorithmParameters.java,\n\tjava/security/DigestInputStream.java,\n\tjava/security/Identity.java,\n\tjava/security/KeyFactory.java,\n\tjava/security/KeyPairGenerator.java,\n\tjava/security/KeyStore.java,\n\tjava/security/MessageDigest.java,\n\tjava/security/MessageDigestSpi.java,\n\tjava/security/Policy.java,\n\tjava/security/SecureRandom.java,\n\tjava/security/Security.java,\n\tjava/security/Signature.java,\n\tjava/security/SignatureSpi.java,\n\tjava/security/cert/CertPathBuilder.java,\n\tjava/security/cert/CertPathValidator.java,\n\tjava/security/cert/CertStore.java,\n\tjava/security/cert/Certificate.java,\n\tjava/security/cert/CertificateFactory.java,\n\tjava/security/cert/PolicyQualifierInfo.java,\n\tjava/security/cert/TrustAnchor.java,\n\tjava/security/cert/X509CRL.java,\n\tjava/security/cert/X509CRLEntry.java,\n\tjava/security/cert/X509Certificate.java,\n\tjava/security/spec/RSAMultiPrimePrivateCrtKeySpec.java:\n\tImport statements reorganized, some little formatting issues,\n\tused java-style array declarations, added comments in empty catch\n\tblocks.\n\nFrom-SVN: r89319", "tree": {"sha": "e390601f01817ed98c7658d474f37a5f4a4022d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e390601f01817ed98c7658d474f37a5f4a4022d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/comments", "author": null, "committer": null, "parents": [{"sha": "f45bdcd05e1f38b467ab6973c54f65d7dd430038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f45bdcd05e1f38b467ab6973c54f65d7dd430038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f45bdcd05e1f38b467ab6973c54f65d7dd430038"}], "stats": {"total": 147, "additions": 98, "deletions": 49}, "files": [{"sha": "ee5c8a499b54c554fc1ec91892eee1eba290bf37", "filename": "libjava/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -1,3 +1,34 @@\n+2004-10-20  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/security/AlgorithmParameterGenerator.java,\n+\tjava/security/AlgorithmParameters.java,\n+\tjava/security/DigestInputStream.java,\n+\tjava/security/Identity.java,\n+\tjava/security/KeyFactory.java,\n+\tjava/security/KeyPairGenerator.java,\n+\tjava/security/KeyStore.java,\n+\tjava/security/MessageDigest.java,\n+\tjava/security/MessageDigestSpi.java,\n+\tjava/security/Policy.java,\n+\tjava/security/SecureRandom.java,\n+\tjava/security/Security.java,\n+\tjava/security/Signature.java,\n+\tjava/security/SignatureSpi.java,\n+\tjava/security/cert/CertPathBuilder.java,\n+\tjava/security/cert/CertPathValidator.java,\n+\tjava/security/cert/CertStore.java,\n+\tjava/security/cert/Certificate.java,\n+\tjava/security/cert/CertificateFactory.java,\n+\tjava/security/cert/PolicyQualifierInfo.java,\n+\tjava/security/cert/TrustAnchor.java,\n+\tjava/security/cert/X509CRL.java,\n+\tjava/security/cert/X509CRLEntry.java,\n+\tjava/security/cert/X509Certificate.java,\n+\tjava/security/spec/RSAMultiPrimePrivateCrtKeySpec.java:\n+\tImport statements reorganized, some little formatting issues,\n+\tused java-style array declarations, added comments in empty catch\n+\tblocks.\n+\n 2004-10-18  Jeroen Frijters  <jeroen@frijters.net>\n \n \t* java/security/Security.java"}, {"sha": "fca301477757b25091d694a26f6d5a7c358fbd5f", "filename": "libjava/java/security/AlgorithmParameterGenerator.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FAlgorithmParameterGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FAlgorithmParameterGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FAlgorithmParameterGenerator.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -140,7 +140,10 @@ public static AlgorithmParameterGenerator getInstance(String algorithm)\n         {\n           return getInstance(algorithm, p[i]);\n         }\n-      catch (NoSuchAlgorithmException ignored) {}\n+      catch (NoSuchAlgorithmException e)\n+\t{\n+\t  // Ignore.\n+\t}\n \n     throw new NoSuchAlgorithmException(algorithm);\n   }"}, {"sha": "9671907342ed0e87f16111c36db74d9d109170d0", "filename": "libjava/java/security/AlgorithmParameters.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FAlgorithmParameters.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FAlgorithmParameters.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FAlgorithmParameters.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -136,12 +136,16 @@ public static AlgorithmParameters getInstance(String algorithm)\n     throws NoSuchAlgorithmException\n   {\n     Provider[] p = Security.getProviders();\n+\n     for (int i = 0; i < p.length; i++)\n       try\n         {\n           return getInstance(algorithm, p[i]);\n         }\n-      catch (NoSuchAlgorithmException ignored) {}\n+      catch (NoSuchAlgorithmException e)\n+\t{\n+\t  // Ignore this.\n+\t}\n \n     throw new NoSuchAlgorithmException(algorithm);\n   }"}, {"sha": "f175312e286309857a71de1345f982d691128f91", "filename": "libjava/java/security/DigestInputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FDigestInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FDigestInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FDigestInputStream.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -36,7 +36,7 @@\n exception statement from your version. */\n \n package java.security;\n-//import java.security.MessageDigest;\n+\n import java.io.InputStream;\n import java.io.FilterInputStream;\n import java.io.IOException;"}, {"sha": "99af844e1afb743de6fdc379de242c2862f5c686", "filename": "libjava/java/security/Identity.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FIdentity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FIdentity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FIdentity.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -269,7 +269,7 @@ public void removeCertificate(Certificate certificate)\n    */\n   public Certificate[] certificates()\n   {\n-    Certificate certs[] = new Certificate[certificates.size()];\n+    Certificate[] certs = new Certificate[certificates.size()];\n     int max = certificates.size();\n     for (int i = 0; i < max; i++)\n       certs[i] = (Certificate) certificates.elementAt(i);"}, {"sha": "bbca50859f86d9677743fc46b014656423c2778c", "filename": "libjava/java/security/KeyFactory.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FKeyFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FKeyFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FKeyFactory.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -39,7 +39,6 @@\n \n import java.security.spec.KeySpec;\n import java.security.spec.InvalidKeySpecException;\n-import java.security.NoSuchAlgorithmException;\n \n import gnu.java.security.Engine;\n \n@@ -132,7 +131,10 @@ public static KeyFactory getInstance(String algorithm)\n         {\n           return getInstance(algorithm, p[i]);\n         }\n-      catch (NoSuchAlgorithmException ignored) {}\n+      catch (NoSuchAlgorithmException e)\n+\t{\n+\t  // Ignore.\n+\t}\n \n     throw new NoSuchAlgorithmException(algorithm);\n   }"}, {"sha": "11b143cc663e9b6046fe1b5ee32b5469184b775e", "filename": "libjava/java/security/KeyPairGenerator.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FKeyPairGenerator.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -173,7 +173,10 @@ public static KeyPairGenerator getInstance(String algorithm)\n           {\n             return getInstance(algorithm, p[i]);\n \t  }\n-        catch (NoSuchAlgorithmException ignored) {}\n+\tcatch (NoSuchAlgorithmException e)\n+\t  {\n+\t    // Ignored.\n+\t  }\n       }\n \n     throw new NoSuchAlgorithmException(algorithm);"}, {"sha": "2010e4ce487a9b36b50f08d79b04d94eb03463b5", "filename": "libjava/java/security/KeyStore.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FKeyStore.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FKeyStore.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FKeyStore.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -36,6 +36,7 @@\n exception statement from your version. */\n \n package java.security;\n+\n import java.io.InputStream;\n import java.io.IOException;\n import java.io.OutputStream;\n@@ -129,8 +130,9 @@ public static KeyStore getInstance(String type) throws KeyStoreException\n           {\n             return getInstance(type, p[i]);\n           }\n-        catch (KeyStoreException ignore)\n+        catch (KeyStoreException e)\n           {\n+\t    // Ignore.\n           }\n       }\n "}, {"sha": "30c303537240d9a41eeff50cd9a71d4071e13a75", "filename": "libjava/java/security/MessageDigest.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FMessageDigest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FMessageDigest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FMessageDigest.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -138,7 +138,10 @@ public static MessageDigest getInstance(String algorithm)\n           {\n             return getInstance(algorithm, p[i]);\n           }\n-        catch (NoSuchAlgorithmException ignored) {}\n+        catch (NoSuchAlgorithmException ignored)\n+\t  {\n+\t    // Ignore.\n+\t  }\n       }\n \n     throw new NoSuchAlgorithmException(algorithm);"}, {"sha": "f2447f17d865d5a9562b5476d2c61ffe6123f155", "filename": "libjava/java/security/MessageDigestSpi.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FMessageDigestSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FMessageDigestSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FMessageDigestSpi.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -126,7 +126,7 @@ protected int engineDigest(byte[]buf, int offset, int len)\n     if (engineGetDigestLength() > len)\n       throw new DigestException(\"Buffer is too small.\");\n \n-    byte tmp[] = engineDigest();\n+    byte[] tmp = engineDigest();\n     if (tmp.length > len)\n       throw new DigestException(\"Buffer is too small\");\n "}, {"sha": "817d62377490cc2e6681e983ec93d3212ecb5c2a", "filename": "libjava/java/security/Policy.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FPolicy.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -191,7 +191,10 @@ static Policy getCurrentPolicy()\n             {\n               currentPolicy = (Policy) Class.forName(pp).newInstance();\n             }\n-          catch (Exception ignored) {}\n+\t  catch (Exception e)\n+\t    {\n+\t      // Ignored.\n+\t    }\n \n         if (currentPolicy == null)\n           currentPolicy = new gnu.java.security.provider.DefaultPolicy();"}, {"sha": "5e410c0405c315c6bbf1da1ba56668b6490d3256", "filename": "libjava/java/security/SecureRandom.java", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FSecureRandom.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FSecureRandom.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSecureRandom.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -87,7 +87,7 @@ public class SecureRandom extends Random\n    */\n   public SecureRandom()\n   {\n-    Provider p[] = Security.getProviders();\n+    Provider[] p = Security.getProviders();\n \n     //Format of Key: SecureRandom.algname\n     String key;\n@@ -112,7 +112,10 @@ public SecureRandom()\n                         provider = p[i];\n                         return;\n                       }\n-                    catch (Throwable ignore) { }\n+                    catch (Throwable t)\n+\t\t      {\n+\t\t\t// Ignore.\n+\t\t      }\n                   }\n               }\n           }\n@@ -167,18 +170,20 @@ protected SecureRandom(SecureRandomSpi secureRandomSpi, Provider provider)\n    * @throws NoSuchAlgorithmException If no installed provider implements\n    *         the given algorithm.\n    */\n-  public static SecureRandom getInstance(String algorithm) throws\n-    NoSuchAlgorithmException\n+  public static SecureRandom getInstance(String algorithm)\n+    throws NoSuchAlgorithmException\n   {\n-    Provider p[] = Security.getProviders();\n+    Provider[] p = Security.getProviders();\n+    \n     for (int i = 0; i < p.length; i++)\n       {\n         try\n           {\n             return getInstance(algorithm, p[i]);\n           }\n-        catch (NoSuchAlgorithmException ignored)\n+        catch (NoSuchAlgorithmException e)\n           {\n+\t    // Ignore.\n           }\n       }\n \n@@ -284,7 +289,7 @@ public void setSeed(long seed)\n     // Therefore we test.\n     if (secureRandomSpi != null)\n       {\n-        byte tmp[] = { (byte) (0xff & (seed >> 56)),\n+        byte[] tmp = { (byte) (0xff & (seed >> 56)),\n \t\t       (byte) (0xff & (seed >> 48)),\n \t\t       (byte) (0xff & (seed >> 40)),\n \t\t       (byte) (0xff & (seed >> 32)),\n@@ -324,7 +329,7 @@ protected final int next(int numBits)\n     if (numBits == 0)\n       return 0;\n \n-    byte tmp[] = new byte[numBits / 8 + (1 * (numBits % 8))];\n+    byte[] tmp = new byte[numBits / 8 + (1 * (numBits % 8))];\n \n     secureRandomSpi.engineNextBytes(tmp);\n     randomBytesUsed += tmp.length;\n@@ -349,7 +354,7 @@ protected final int next(int numBits)\n    */\n   public static byte[] getSeed(int numBytes)\n   {\n-    byte tmp[] = new byte[numBytes];\n+    byte[] tmp = new byte[numBytes];\n \n     new Random().nextBytes(tmp);\n     return tmp;"}, {"sha": "3f17067981be321fcee2cc9cfbd0b42c51e58c3c", "filename": "libjava/java/security/Security.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FSecurity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FSecurity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSecurity.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -38,12 +38,10 @@\n package java.security;\n \n import gnu.java.security.action.GetPropertyAction;\n-import java.io.FileNotFoundException;\n import java.io.InputStream;\n import java.io.IOException;\n import java.net.URL;\n import java.security.AccessController;\n-import java.security.Provider;\n import java.util.Collections;\n import java.util.Enumeration;\n import java.util.HashMap;\n@@ -332,7 +330,7 @@ public static void removeProvider(String name)\n    */\n   public static Provider[] getProviders()\n   {\n-    Provider array[] = new Provider[providers.size ()];\n+    Provider[] array = new Provider[providers.size ()];\n     providers.copyInto (array);\n     return array;\n   }"}, {"sha": "463f4105568b58b64eaa689a87db359ab00acfa9", "filename": "libjava/java/security/Signature.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSignature.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -177,7 +177,10 @@ public static Signature getInstance(String algorithm)\n           {\n             return getInstance(algorithm, p[i]);\n           }\n-        catch (NoSuchAlgorithmException ignored) {}\n+\tcatch (NoSuchAlgorithmException e)\n+\t  {\n+\t    // Ignored.\n+\t  }\n       }\n \n     throw new NoSuchAlgorithmException(algorithm);"}, {"sha": "3b6bdbc99ab2f8272680b63e4508879a20c7ada1", "filename": "libjava/java/security/SignatureSpi.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FSignatureSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2FSignatureSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSignatureSpi.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -165,7 +165,7 @@ protected abstract void engineUpdate(byte[] b, int off, int len)\n   protected int engineSign(byte[] outbuf, int offset, int len)\n     throws SignatureException\n   {\n-    byte tmp[] = engineSign();\n+    byte[] tmp = engineSign();\n     if (tmp.length > len)\n       throw new SignatureException(\"Invalid Length\");\n "}, {"sha": "c7cef43ecdf31baaa1cad5f283336604a531b49c", "filename": "libjava/java/security/cert/CertPathBuilder.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FCertPathBuilder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FCertPathBuilder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FCertPathBuilder.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -130,8 +130,9 @@ public static CertPathBuilder getInstance(String algorithm)\n           {\n             return getInstance(algorithm, p[i]);\n           }\n-        catch (NoSuchAlgorithmException ignored)\n+        catch (NoSuchAlgorithmException e)\n           {\n+\t    // Ignored.\n           }\n       }\n "}, {"sha": "2ccce722c23dc99b35c992e1e96175bd85a1a848", "filename": "libjava/java/security/cert/CertPathValidator.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FCertPathValidator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FCertPathValidator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FCertPathValidator.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -142,8 +142,9 @@ public static CertPathValidator getInstance(String algorithm)\n           {\n             return getInstance(algorithm, p[i]);\n           }\n-        catch (NoSuchAlgorithmException ignored)\n+        catch (NoSuchAlgorithmException e)\n           {\n+\t    // Ignored.\n           }\n       }\n     throw new NoSuchAlgorithmException(algorithm);"}, {"sha": "84e235057110a3888df807113ef02c068a3a40ff", "filename": "libjava/java/security/cert/CertStore.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FCertStore.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FCertStore.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FCertStore.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -146,8 +146,9 @@ public static CertStore getInstance(String type, CertStoreParameters params)\n           {\n             return getInstance(type, params, p[i]);\n           }\n-        catch (NoSuchAlgorithmException ignored)\n+        catch (NoSuchAlgorithmException e)\n           {\n+\t    // Ignored.\n           }\n       }\n "}, {"sha": "72842fc6067e895cba917fcca254c024db04aee9", "filename": "libjava/java/security/cert/Certificate.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FCertificate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FCertificate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FCertificate.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -43,7 +43,6 @@\n import java.security.InvalidKeyException;\n import java.security.NoSuchProviderException;\n import java.security.SignatureException;\n-import java.io.ObjectInputStream;\n import java.io.ByteArrayInputStream;\n import java.io.InvalidObjectException;\n import java.io.ObjectStreamException;\n@@ -116,8 +115,8 @@ public boolean equals(Object other)\n \tif( getEncoded().length != x.getEncoded().length )\n \t  return false;\n \n-\tbyte b1[] = getEncoded();\n-\tbyte b2[] = x.getEncoded();\n+\tbyte[] b1 = getEncoded();\n+\tbyte[] b2 = x.getEncoded();\n \n \tfor( int i = 0; i < b1.length; i++ )\n \t  if( b1[i] != b2[i] )"}, {"sha": "92736e3881da29b39ad5d11baa6798d6fd98f045", "filename": "libjava/java/security/cert/CertificateFactory.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FCertificateFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FCertificateFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FCertificateFactory.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -110,8 +110,9 @@ public static final CertificateFactory getInstance(String type)\n           {\n             return getInstance(type, p[i]);\n           }\n-        catch (CertificateException ignored)\n+        catch (CertificateException e)\n           {\n+\t    // Ignored.\n           }\n       }\n "}, {"sha": "ab83901cc25de2967e0f97c34aea26e74da4e00c", "filename": "libjava/java/security/cert/PolicyQualifierInfo.java", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FPolicyQualifierInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FPolicyQualifierInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FPolicyQualifierInfo.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -39,16 +39,12 @@\n package java.security.cert;\n \n import java.io.ByteArrayInputStream;\n-import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n \n import gnu.java.io.ASN1ParsingException;\n import gnu.java.security.OID;\n-import gnu.java.security.der.DER;\n-import gnu.java.security.der.DEREncodingException;\n import gnu.java.security.der.DERReader;\n import gnu.java.security.der.DERValue;\n-import gnu.java.security.der.DERWriter;\n \n /**\n  * The PolicyQualifierInfo X.509 certificate extension."}, {"sha": "3bb6ede004975b399c74ce21c9f36430559e4281", "filename": "libjava/java/security/cert/TrustAnchor.java", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FTrustAnchor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FTrustAnchor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FTrustAnchor.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -38,9 +38,6 @@\n \n package java.security.cert;\n \n-import java.io.ByteArrayInputStream;\n-import java.io.IOException;\n-\n import java.security.PublicKey;\n \n import gnu.java.security.x509.X500DistinguishedName;"}, {"sha": "74f090c9de6df6aa5e67c982f84207973464872a", "filename": "libjava/java/security/cert/X509CRL.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FX509CRL.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FX509CRL.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FX509CRL.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -37,6 +37,7 @@\n \n \n package java.security.cert;\n+\n import java.math.BigInteger;\n import java.security.Principal;\n import java.security.PublicKey;\n@@ -126,8 +127,8 @@ public boolean equals(Object other)\n \tif( getEncoded().length != x.getEncoded().length )\n \t  return false;\n \n-\tbyte b1[] = getEncoded();\n-\tbyte b2[] = x.getEncoded();\n+\tbyte[] b1 = getEncoded();\n+\tbyte[] b2 = x.getEncoded();\n \n \tfor( int i = 0; i < b1.length; i++ )\n \t  if( b1[i] != b2[i] )"}, {"sha": "99ff615cb4785691c7273863dd1127145654d5df", "filename": "libjava/java/security/cert/X509CRLEntry.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FX509CRLEntry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FX509CRLEntry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FX509CRLEntry.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -37,6 +37,7 @@\n \n \n package java.security.cert;\n+\n import java.math.BigInteger;\n import java.util.Date;\n \n@@ -96,8 +97,8 @@ public boolean equals(Object other)\n \tif( getEncoded().length != xe.getEncoded().length )\n \t  return false;\n \n-\tbyte b1[] = getEncoded();\n-\tbyte b2[] = xe.getEncoded();\n+\tbyte[] b1 = getEncoded();\n+\tbyte[] b2 = xe.getEncoded();\n \n \tfor( int i = 0; i < b1.length; i++ )\n \t  if( b1[i] != b2[i] )"}, {"sha": "6b764842f61847c689fb5d8bfd51be7d870db4d7", "filename": "libjava/java/security/cert/X509Certificate.java", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FX509Certificate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fcert%2FX509Certificate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FX509Certificate.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -40,11 +40,6 @@\n \n import java.math.BigInteger;\n import java.security.Principal;\n-import java.security.PublicKey;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.InvalidKeyException;\n-import java.security.NoSuchProviderException;\n-import java.security.SignatureException;\n import java.util.Date;\n \n /**"}, {"sha": "9bec96d1b378d8e5b4312f0ebe4a1640b7dac7fa", "filename": "libjava/java/security/spec/RSAMultiPrimePrivateCrtKeySpec.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fspec%2FRSAMultiPrimePrivateCrtKeySpec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/242b11bd65a37e25c39d20bde6fd9807ecd3b9ea/libjava%2Fjava%2Fsecurity%2Fspec%2FRSAMultiPrimePrivateCrtKeySpec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fspec%2FRSAMultiPrimePrivateCrtKeySpec.java?ref=242b11bd65a37e25c39d20bde6fd9807ecd3b9ea", "patch": "@@ -38,7 +38,6 @@\n package java.security.spec;\n \n import java.math.BigInteger;\n-import java.security.spec.RSAOtherPrimeInfo;\n \n /**\n  * This class specifies an RSA multi-prime private key, as defined in the"}]}