{"sha": "a9ea161d628b73aafc07960797031c3b66ccfe9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTllYTE2MWQ2MjhiNzNhYWZjMDc5NjA3OTcwMzFjM2I2NmNjZmU5Yw==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2018-01-26T15:20:45Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2018-01-26T15:20:45Z"}, "message": "powerpcfold-vec-neg-longlong.h: New.\n\n[testsuite]\n\n2018-01-23  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n\t* gcc.target/powerpcfold-vec-neg-longlong.h:  New.\n\t* gcc.target/powerpc/fold-vec-neg-longlong.p8.c:  New.\n\t* gcc.target/powerpc/fold-vec-neg-longlong.p9.c:  New.\n\t* gcc.target/powerpc/fold-vec-neg-longlong.c:  Delete.\n\n\t* gcc.target/powerpc/fold-vec-neg-int.c: Remove scan-assembler stanzas.\n\t* gcc.target/powerpc/fold-vec-neg-int.p7.c: New.\n\t* gcc.target/powerpc/fold-vec-neg-int.p8.c: New.\n\t* gcc.target/powerpc/fold-vec-neg-int.p9.c: New.\n\nFrom-SVN: r257092", "tree": {"sha": "6ca1974d330031b88d1fe584092d8b25c2ddd843", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ca1974d330031b88d1fe584092d8b25c2ddd843"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9ea161d628b73aafc07960797031c3b66ccfe9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9ea161d628b73aafc07960797031c3b66ccfe9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9ea161d628b73aafc07960797031c3b66ccfe9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9ea161d628b73aafc07960797031c3b66ccfe9c/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7e1f499ed046bd1d57eaf4510778d2fc2666653", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e1f499ed046bd1d57eaf4510778d2fc2666653", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e1f499ed046bd1d57eaf4510778d2fc2666653"}], "stats": {"total": 112, "additions": 102, "deletions": 10}, "files": [{"sha": "56e127149055397174984d7fe805896196fee390", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a9ea161d628b73aafc07960797031c3b66ccfe9c", "patch": "@@ -1,3 +1,14 @@\n+2018-01-26  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/fold-vec-neg-longlong.h:  New.\n+\t* gcc.target/powerpc/fold-vec-neg-longlong.p8.c:  New.\n+\t* gcc.target/powerpc/fold-vec-neg-longlong.p9.c:  New.\n+\t* gcc.target/powerpc/fold-vec-neg-longlong.c:  Delete.\n+\t* gcc.target/powerpc/fold-vec-neg-int.c: Remove scan-assembler stanzas.\n+\t* gcc.target/powerpc/fold-vec-neg-int.p7.c: New.\n+\t* gcc.target/powerpc/fold-vec-neg-int.p8.c: New.\n+\t* gcc.target/powerpc/fold-vec-neg-int.p9.c: New.\n+\n 2018-01-26  Richard Biener  <rguenther@suse.de>\n \n \tPR rtl-optimization/84003"}, {"sha": "4f358560c98fa93fee6f287c72ab19a3110de053", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-int.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.c?ref=a9ea161d628b73aafc07960797031c3b66ccfe9c", "patch": "@@ -13,6 +13,4 @@ test1 (vector signed int x)\n   return vec_neg (x);\n }\n \n-/* { dg-final { scan-assembler-times \"xxspltib|vspltisw|vxor\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vsubuwm\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmaxsw\" 0 } } */\n+/* Scan-assembler stanzas have been moved to fold-vec-neg-int.p*.c tests. */"}, {"sha": "8e99de3827145a8841848220feb97ba979f88bfe", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-int.p7.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.p7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.p7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.p7.c?ref=a9ea161d628b73aafc07960797031c3b66ccfe9c", "patch": "@@ -0,0 +1,19 @@\n+/* Verify that overloaded built-ins for vec_neg with int\n+   inputs produce the right code when -mcpu=power7 is specified.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2 -mcpu=power7\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n+\n+#include <altivec.h>\n+\n+vector signed int\n+test1 (vector signed int x)\n+{\n+  return vec_neg (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"xxspltib|vspltisw|vxor\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vsubuwm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmaxsw\" 0 } } */"}, {"sha": "91067ab69168e37325f8a38d19d3d5d60117931a", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-int.p8.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.p8.c?ref=a9ea161d628b73aafc07960797031c3b66ccfe9c", "patch": "@@ -0,0 +1,19 @@\n+/* Verify that overloaded built-ins for vec_neg with int\n+   inputs produce the right code when -mcpu=power8 is specified.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2 -mcpu=power8\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+\n+#include <altivec.h>\n+\n+vector signed int\n+test1 (vector signed int x)\n+{\n+  return vec_neg (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"xxspltib|vspltisw|vxor\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vsubuwm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmaxsw\" 0 } } */"}, {"sha": "44732c89ad3f0bbeef67358124434f8b729e5d31", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-int.p9.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.p9.c?ref=a9ea161d628b73aafc07960797031c3b66ccfe9c", "patch": "@@ -0,0 +1,18 @@\n+/* Verify that overloaded built-ins for vec_neg with int\n+   inputs produce the right code when -mcpu=power9 is specified.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2 -mcpu=power9\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n+\n+#include <altivec.h>\n+\n+vector signed int\n+test1 (vector signed int x)\n+{\n+  return vec_neg (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vnegw\" 1 } } */\n+"}, {"sha": "53312ac00d0b11dec15a1c75be0b19a2c7e42450", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-longlong.h", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-longlong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-longlong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-longlong.h?ref=a9ea161d628b73aafc07960797031c3b66ccfe9c", "patch": "@@ -0,0 +1,17 @@\n+/* Verify that overloaded built-ins for vec_neg with long long\n+   inputs produce the right code.  */\n+\n+/* vec_neg testcase, included by fold-vec-neg-longlong.p*.c */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-options \"-mpower8-vector -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector signed long long\n+test3 (vector signed long long x)\n+{\n+  return vec_neg (x);\n+}\n+"}, {"sha": "90f9abcc441950f0ae841536fc99f181d23285f2", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-longlong.p8.c", "status": "renamed", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-longlong.p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-longlong.p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-longlong.p8.c?ref=a9ea161d628b73aafc07960797031c3b66ccfe9c", "patch": "@@ -3,15 +3,11 @@\n \n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_p8vector_ok } */\n-/* { dg-options \"-mpower8-vector -O2\" } */\n+/* { dg-options \"-mpower8-vector -mcpu=power8 -O2\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n \n-#include <altivec.h>\n \n-vector signed long long\n-test3 (vector signed long long x)\n-{\n-  return vec_neg (x);\n-}\n+#include \"fold-vec-neg-longlong.h\"\n \n /* { dg-final { scan-assembler-times \"xxspltib|vspltisw\" 1 } } */\n /* { dg-final { scan-assembler-times \"vsubudm\" 1 } } */", "previous_filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-longlong.c"}, {"sha": "39fbaf1e49dc69dba3d730e0208740440cfbea81", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-longlong.p9.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-longlong.p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ea161d628b73aafc07960797031c3b66ccfe9c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-longlong.p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-longlong.p9.c?ref=a9ea161d628b73aafc07960797031c3b66ccfe9c", "patch": "@@ -0,0 +1,14 @@\n+/* Verify that overloaded built-ins for vec_neg with long long\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_p9vector_ok } */\n+/* { dg-options \"-mcpu=power9 -O2\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n+\n+#include \"fold-vec-neg-longlong.h\"\n+\n+\n+/* { dg-final { scan-assembler-times \"vnegd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmaxsd\" 0 } } */\n+"}]}