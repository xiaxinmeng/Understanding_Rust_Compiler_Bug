{"sha": "68581ee1c343fb52065f6ff39ea0d84175b12a66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg1ODFlZTFjMzQzZmI1MjA2NWY2ZmYzOWVhMGQ4NDE3NWIxMmE2Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-10-19T19:14:41Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-10-19T19:14:41Z"}, "message": "Fix oversights\n\nFrom-SVN: r253909", "tree": {"sha": "9b547695cee0a50fe18a41cadfded073605c71bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b547695cee0a50fe18a41cadfded073605c71bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68581ee1c343fb52065f6ff39ea0d84175b12a66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68581ee1c343fb52065f6ff39ea0d84175b12a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68581ee1c343fb52065f6ff39ea0d84175b12a66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68581ee1c343fb52065f6ff39ea0d84175b12a66/comments", "author": null, "committer": null, "parents": [{"sha": "d4e7de58116155e79272ea2b876a7c94115dbed1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4e7de58116155e79272ea2b876a7c94115dbed1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4e7de58116155e79272ea2b876a7c94115dbed1"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "8d628e200def9aa34392baf5861f7b641c4320fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68581ee1c343fb52065f6ff39ea0d84175b12a66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68581ee1c343fb52065f6ff39ea0d84175b12a66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68581ee1c343fb52065f6ff39ea0d84175b12a66", "patch": "@@ -40,15 +40,13 @@\n \t* explow.c (allocate_dynamic_stack_space): Add MAX_SIZE parameter and\n \tuse it for the stack usage computation.\n \t* explow.h (allocate_dynamic_stack_space): Adjust prototype.\n-\t* function.c (gimplify_parameters): Turn BUILT_IN_ALLOCA_WITH_ALIGN\n-\tinto BUILT_IN_ALLOCA_WITH_ALIGN_AND_MAX and pass maximum size.\n+\t* function.c (gimplify_parameters): Call build_alloca_call_expr.\n \t* gimple-ssa-warn-alloca.c (alloca_call_type): Simplify control flow.\n \tTake into account 3rd argument of __builtin_alloca_with_align_and_max.\n \t(in_loop_p): Remove first argument and useless check.\n \t(pass_walloca::execute): Remove useless test and adjust call to above.\n \t* gimple.c (gimple_build_call_from_tree): Deal with all alloc variants\n-\t* gimplify.c (gimplify_vla_decl): Turn BUILT_IN_ALLOCA_WITH_ALIGN into\n-\tBUILT_IN_ALLOCA_WITH_ALIGN_AND_MAX and pass maximum size.\n+\t* gimplify.c (gimplify_vla_decl): Call build_alloca_call_expr.\n \t(gimplify_call_expr): Deal with all alloca variants.\n \t* hsa-gen.c (gen_hsa_alloca): Likewise.\n \t(gen_hsa_insns_for_call): Likewise.\n@@ -66,8 +64,10 @@\n \t(eliminate_unnecessary_stmts): Likewise.\n \t* tree.c (build_common_builtin_nodes): Build\n \tBUILT_IN_ALLOCA_WITH_ALIGN_AND_MAX.\n+\t(build_alloca_call_expr): New function.\n \t* tree.h (ALLOCA_FUNCTION_CODE_P): New macro.\n \t(CASE_BUILT_IN_ALLOCA): Likewise.\n+\t(build_alloca_call_expr): Declare.\n \t* varasm.c (incorporeal_function_p): Deal with all alloca variants.\n \n 2017-10-19  Eric Botcazou  <ebotcazou@adacore.com>"}]}