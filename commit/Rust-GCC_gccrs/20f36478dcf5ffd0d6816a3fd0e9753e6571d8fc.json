{"sha": "20f36478dcf5ffd0d6816a3fd0e9753e6571d8fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBmMzY0NzhkY2Y1ZmZkMGQ2ODE2YTNmZDBlOTc1M2U2NTcxZDhmYw==", "commit": {"author": {"name": "Shenghou Ma", "email": "minux.ma@gmail.com", "date": "2013-01-16T16:32:35Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-01-16T16:32:35Z"}, "message": "* gospec.c: pass -u pthread_create to linker when static linking.\n\nFrom-SVN: r195244", "tree": {"sha": "2a4c712c49bdecebb3c2ee59b3f489e69a68a3ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a4c712c49bdecebb3c2ee59b3f489e69a68a3ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20f36478dcf5ffd0d6816a3fd0e9753e6571d8fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f36478dcf5ffd0d6816a3fd0e9753e6571d8fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20f36478dcf5ffd0d6816a3fd0e9753e6571d8fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f36478dcf5ffd0d6816a3fd0e9753e6571d8fc/comments", "author": {"login": "minux", "id": 135652, "node_id": "MDQ6VXNlcjEzNTY1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/135652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minux", "html_url": "https://github.com/minux", "followers_url": "https://api.github.com/users/minux/followers", "following_url": "https://api.github.com/users/minux/following{/other_user}", "gists_url": "https://api.github.com/users/minux/gists{/gist_id}", "starred_url": "https://api.github.com/users/minux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minux/subscriptions", "organizations_url": "https://api.github.com/users/minux/orgs", "repos_url": "https://api.github.com/users/minux/repos", "events_url": "https://api.github.com/users/minux/events{/privacy}", "received_events_url": "https://api.github.com/users/minux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0b6bb1b12b417f73f36a7405b44fd5b51197159", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b6bb1b12b417f73f36a7405b44fd5b51197159", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0b6bb1b12b417f73f36a7405b44fd5b51197159"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "61739cea4f2202d9fa5c1cc63892d7606616ce88", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f36478dcf5ffd0d6816a3fd0e9753e6571d8fc/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f36478dcf5ffd0d6816a3fd0e9753e6571d8fc/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=20f36478dcf5ffd0d6816a3fd0e9753e6571d8fc", "patch": "@@ -1,3 +1,7 @@\n+2013-01-16  Shenghou Ma  <minux.ma@gmail.com>\n+\n+\t* gospec.c: pass -u pthread_create to linker when static linking.\n+\n 2012-12-21  Ian Lance Taylor  <iant@google.com>\n \n \tPR bootstrap/54659"}, {"sha": "0be7716be5c3afd72534e924fff8ade289888e89", "filename": "gcc/go/gospec.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f36478dcf5ffd0d6816a3fd0e9753e6571d8fc/gcc%2Fgo%2Fgospec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f36478dcf5ffd0d6816a3fd0e9753e6571d8fc/gcc%2Fgo%2Fgospec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgospec.c?ref=20f36478dcf5ffd0d6816a3fd0e9753e6571d8fc", "patch": "@@ -227,7 +227,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n #endif\n \n   /* Make sure to have room for the trailing NULL argument.  */\n-  num_args = argc + need_math + shared_libgcc + (library > 0) * 5 + 5;\n+  num_args = argc + need_math + shared_libgcc + (library > 0) * 5 + 10;\n   new_decoded_options = XNEWVEC (struct cl_decoded_option, num_args);\n \n   i = 0;\n@@ -381,6 +381,20 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n     generate_option (OPT_shared_libgcc, NULL, 1, CL_DRIVER,\n \t\t     &new_decoded_options[j++]);\n \n+#ifdef TARGET_CAN_SPLIT_STACK\n+  /* libgcc wraps pthread_create to support split stack, however, due to\n+     relative ordering of -lpthread and -lgcc, we can't just mark\n+     __real_pthread_create in libgcc as non-weak.  But we need to link in\n+     pthread_create from pthread if we are statically linking, so we work-\n+     around by passing -u pthread_create to to the linker. */\n+  if (static_link)\n+    {\n+      generate_option (OPT_Wl_, \"-u,pthread_create\", 1, CL_DRIVER,\n+\t\t       &new_decoded_options[j]);\n+      j++;\n+    }\n+#endif\n+\n   *in_decoded_options_count = j;\n   *in_decoded_options = new_decoded_options;\n   *in_added_libraries = added_libraries;"}]}