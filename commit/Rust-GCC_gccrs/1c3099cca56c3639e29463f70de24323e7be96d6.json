{"sha": "1c3099cca56c3639e29463f70de24323e7be96d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMzMDk5Y2NhNTZjMzYzOWUyOTQ2M2Y3MGRlMjQzMjNlN2JlOTZkNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-11-28T15:04:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-11-28T15:04:45Z"}, "message": "tree-vrp.c (vrp_visit_assignment_or_call): Handle simplifications to SSA names via extract_range_from_ssa_name if allowed.\n\n2016-11-28  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vrp.c (vrp_visit_assignment_or_call): Handle\n\tsimplifications to SSA names via extract_range_from_ssa_name\n\tif allowed.\n\nFrom-SVN: r242921", "tree": {"sha": "d46e82781e14a3e28e90fa99acbb24859c204987", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d46e82781e14a3e28e90fa99acbb24859c204987"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c3099cca56c3639e29463f70de24323e7be96d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3099cca56c3639e29463f70de24323e7be96d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c3099cca56c3639e29463f70de24323e7be96d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3099cca56c3639e29463f70de24323e7be96d6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6522add29b65f7fe572202b2a1e83a8cd00b07fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6522add29b65f7fe572202b2a1e83a8cd00b07fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6522add29b65f7fe572202b2a1e83a8cd00b07fa"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "9baf4bd8d46c07d93ebb9ff842a5f40124f77402", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3099cca56c3639e29463f70de24323e7be96d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3099cca56c3639e29463f70de24323e7be96d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c3099cca56c3639e29463f70de24323e7be96d6", "patch": "@@ -1,3 +1,9 @@\n+2016-11-28  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vrp.c (vrp_visit_assignment_or_call): Handle\n+\tsimplifications to SSA names via extract_range_from_ssa_name\n+\tif allowed.\n+\n 2016-11-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/78542"}, {"sha": "f3d571d98b2898d6109182e836a601c25413ac60", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3099cca56c3639e29463f70de24323e7be96d6/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3099cca56c3639e29463f70de24323e7be96d6/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=1c3099cca56c3639e29463f70de24323e7be96d6", "patch": "@@ -7132,17 +7132,31 @@ vrp_visit_assignment_or_call (gimple *stmt, tree *output_p, value_range *vr)\n \t   && TYPE_MAX_VALUE (TREE_TYPE (lhs)))\n \t  || POINTER_TYPE_P (TREE_TYPE (lhs))))\n     {\n+      *output_p = lhs;\n+\n       /* Try folding the statement to a constant first.  */\n       tree tem = gimple_fold_stmt_to_constant_1 (stmt, vrp_valueize,\n \t\t\t\t\t\t vrp_valueize_1);\n-      if (tem && is_gimple_min_invariant (tem))\n-\tset_value_range_to_value (vr, tem, NULL);\n+      if (tem)\n+\t{\n+\t  if (TREE_CODE (tem) == SSA_NAME\n+\t      && (SSA_NAME_IS_DEFAULT_DEF (tem)\n+\t\t  || ! prop_simulate_again_p (SSA_NAME_DEF_STMT (tem))))\n+\t    {\n+\t      extract_range_from_ssa_name (vr, tem);\n+\t      return;\n+\t    }\n+\t  else if (is_gimple_min_invariant (tem))\n+\t    {\n+\t      set_value_range_to_value (vr, tem, NULL);\n+\t      return;\n+\t    }\n+\t}\n       /* Then dispatch to value-range extracting functions.  */\n-      else if (code == GIMPLE_CALL)\n+      if (code == GIMPLE_CALL)\n \textract_range_basic (vr, stmt);\n       else\n \textract_range_from_assignment (vr, as_a <gassign *> (stmt));\n-      *output_p = lhs;\n     }\n }\n "}]}