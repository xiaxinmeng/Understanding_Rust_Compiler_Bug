{"sha": "800b865318682fd9b4014e1c9947728c924531b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAwYjg2NTMxODY4MmZkOWI0MDE0ZTFjOTk0NzcyOGM5MjQ1MzFiNw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-16T14:21:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-16T14:21:34Z"}, "message": "gnat_rm.texi: Document that leading/trailing asterisks are now implied for the pattern match...\n\n2014-07-16  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Document that leading/trailing asterisks are\n\tnow implied for the pattern match string for pragma Warnings\n\tand Warning_As_Error.\n\t* sem_prag.adb (Acquire_Warning_Match_String): New procedure.\n\t(Analyze_Pragma, case Warning_As_Error): Call\n\tAcquire_Warning_Match_String.\n\t(Analyze_Pragma, case Warnings): Call Acquire_Warning_Match_String.\n\nFrom-SVN: r212651", "tree": {"sha": "fe660786a086e74af2669d5df532ded0131e633b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe660786a086e74af2669d5df532ded0131e633b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/800b865318682fd9b4014e1c9947728c924531b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800b865318682fd9b4014e1c9947728c924531b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/800b865318682fd9b4014e1c9947728c924531b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800b865318682fd9b4014e1c9947728c924531b7/comments", "author": null, "committer": null, "parents": [{"sha": "350f5d3bc401adc4b3115c39b98608209a46e611", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350f5d3bc401adc4b3115c39b98608209a46e611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/350f5d3bc401adc4b3115c39b98608209a46e611"}], "stats": {"total": 76, "additions": 64, "deletions": 12}, "files": [{"sha": "abee07f9b5da3a29fa34f2dc374e110db181b79f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800b865318682fd9b4014e1c9947728c924531b7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800b865318682fd9b4014e1c9947728c924531b7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=800b865318682fd9b4014e1c9947728c924531b7", "patch": "@@ -1,3 +1,13 @@\n+2014-07-16  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Document that leading/trailing asterisks are\n+\tnow implied for the pattern match string for pragma Warnings\n+\tand Warning_As_Error.\n+\t* sem_prag.adb (Acquire_Warning_Match_String): New procedure.\n+\t(Analyze_Pragma, case Warning_As_Error): Call\n+\tAcquire_Warning_Match_String.\n+\t(Analyze_Pragma, case Warnings): Call Acquire_Warning_Match_String.\n+\n 2014-07-16  Bob Duff  <duff@adacore.com>\n \n \t* gnat_ugn.texi: Document need for project file"}, {"sha": "166a6cce21dccd2a06b2cbab6aad893667e59632", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800b865318682fd9b4014e1c9947728c924531b7/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800b865318682fd9b4014e1c9947728c924531b7/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=800b865318682fd9b4014e1c9947728c924531b7", "patch": "@@ -7328,7 +7328,8 @@ pragma Unreferenced (library_unit_NAME @{, library_unit_NAME@});\n \n @noindent\n This pragma signals that the entities whose names are listed are\n-deliberately not referenced in the current source unit. This\n+deliberately not referenced in the current source unit after the\n+occurrence of the pragma. This\n suppresses warnings about the\n entities being unreferenced, and in addition a warning will be\n generated if one of these entities is in fact subsequently referenced in the\n@@ -7576,12 +7577,16 @@ which treats all warnings as errors.\n \n The pattern may contain asterisks, which match zero or more characters in\n the message. For example, you can use\n-@code{pragma Warning_As_Error (\"*bits of*unused\")} to treat the warning\n+@code{pragma Warning_As_Error (\"bits of*unused\")} to treat the warning\n message @code{warning: 960 bits of \"a\" unused} as an error. No other regular\n expression notations are permitted. All characters other than asterisk in\n these three specific cases are treated as literal characters in the match.\n The match is case insensitive, for example XYZ matches xyz.\n \n+Note that the pattern matches if it occurs anywhere within the warning\n+message string (it is not necessary to put an asterisk at the start and\n+the end of the message, since this is implied).\n+\n Another possibility for the static_string_EXPRESSION which works whether\n or not error tags are enabled (@option{-gnatw.d}) is to use the\n @option{-gnatw} tag string, enclosed in brackets,\n@@ -7716,20 +7721,24 @@ warning messages (not including the initial \"warning: \" tag).\n \n The pattern may contain asterisks, which match zero or more characters in\n the message. For example, you can use\n-@code{pragma Warnings (Off, \"*bits of*unused\")} to suppress the warning\n+@code{pragma Warnings (Off, \"bits of*unused\")} to suppress the warning\n message @code{warning: 960 bits of \"a\" unused}. No other regular\n expression notations are permitted. All characters other than asterisk in\n these three specific cases are treated as literal characters in the match.\n The match is case insensitive, for example XYZ matches xyz.\n \n+Note that the pattern matches if it occurs anywhere within the warning\n+message string (it is not necessary to put an asterisk at the start and\n+the end of the message, since this is implied).\n+\n The above use of patterns to match the message applies only to warning\n messages generated by the front end. This form of the pragma with a string\n argument can also be used to control warnings provided by the back end and\n mentioned above. By using a single full @option{-Wxxx} switch in the pragma,\n such warnings can be turned on and off.\n \n-There are two ways to use the pragma in this form. The OFF form can be used as a\n-configuration pragma. The effect is to suppress all warnings (if any)\n+There are two ways to use the pragma in this form. The OFF form can be used\n+as a configuration pragma. The effect is to suppress all warnings (if any)\n that match the pattern string throughout the compilation (or match the\n -W switch in the back end case).\n "}, {"sha": "2c99be19dd39c83d23d5843ddaeedb3fc1e6a657", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 40, "deletions": 7, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800b865318682fd9b4014e1c9947728c924531b7/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800b865318682fd9b4014e1c9947728c924531b7/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=800b865318682fd9b4014e1c9947728c924531b7", "patch": "@@ -2781,6 +2781,16 @@ package body Sem_Prag is\n       type Args_List is array (Natural range <>) of Node_Id;\n       --  Types used for arguments to Check_Arg_Order and Gather_Associations\n \n+      -----------------------\n+      -- Local Subprograms --\n+      -----------------------\n+\n+      procedure Acquire_Warning_Match_String (Arg : Node_Id);\n+      --  Used by pragma Warnings (Off, string), and Warn_As_Error (string) to\n+      --  get the given string argument, and place it in Name_Buffer, adding\n+      --  leading and trailing asterisks if they are not already present. The\n+      --  caller has already checked that Arg is a static string expression.\n+\n       procedure Ada_2005_Pragma;\n       --  Called for pragmas defined in Ada 2005, that are not in Ada 95. In\n       --  Ada 95 mode, these are implementation defined pragmas, so should be\n@@ -3341,8 +3351,33 @@ package body Sem_Prag is\n       procedure Set_Ravenscar_Profile (N : Node_Id);\n       --  Activate the set of configuration pragmas and restrictions that make\n       --  up the Ravenscar Profile. N is the corresponding pragma node, which\n-      --  is used for error messages on any constructs that violate the\n-      --  profile.\n+      --  is used for error messages on any constructs violating the profile.\n+\n+      ----------------------------------\n+      -- Acquire_Warning_Match_String --\n+      ----------------------------------\n+\n+      procedure Acquire_Warning_Match_String (Arg : Node_Id) is\n+      begin\n+         String_To_Name_Buffer\n+           (Strval (Expr_Value_S (Get_Pragma_Arg (Arg))));\n+\n+         --  Add asterisk at start if not already there\n+\n+         if Name_Len > 0 and then Name_Buffer (1) /= '*' then\n+            Name_Buffer (2 .. Name_Len + 1) :=\n+              Name_Buffer (1 .. Name_Len);\n+            Name_Buffer (1) := '*';\n+            Name_Len := Name_Len + 1;\n+         end if;\n+\n+         --  Add asterisk at end if not already there\n+\n+         if Name_Buffer (Name_Len) /= '*' then\n+            Name_Len := Name_Len + 1;\n+            Name_Buffer (Name_Len) := '*';\n+         end if;\n+      end Acquire_Warning_Match_String;\n \n       ---------------------\n       -- Ada_2005_Pragma --\n@@ -21209,8 +21244,7 @@ package body Sem_Prag is\n             --  OK static string expression\n \n             else\n-               String_To_Name_Buffer\n-                 (Strval (Expr_Value_S (Get_Pragma_Arg (Arg1))));\n+               Acquire_Warning_Match_String (Arg1);\n                Warnings_As_Errors_Count := Warnings_As_Errors_Count + 1;\n                Warnings_As_Errors (Warnings_As_Errors_Count) :=\n                  new String'(Name_Buffer (1 .. Name_Len));\n@@ -21364,7 +21398,7 @@ package body Sem_Prag is\n \n                else\n                   Check_Arg_Is_One_Of (Arg1, Name_On, Name_Off);\n-                  Check_At_Most_N_Arguments (2);\n+                  Check_Arg_Count (2);\n \n                   declare\n                      E_Id : Node_Id;\n@@ -21438,8 +21472,7 @@ package body Sem_Prag is\n                      --  Static string expression case\n \n                      else\n-                        String_To_Name_Buffer\n-                          (Strval (Expr_Value_S (Get_Pragma_Arg (Arg2))));\n+                        Acquire_Warning_Match_String (Arg2);\n \n                         --  Note on configuration pragma case: If this is a\n                         --  configuration pragma, then for an OFF pragma, we"}]}