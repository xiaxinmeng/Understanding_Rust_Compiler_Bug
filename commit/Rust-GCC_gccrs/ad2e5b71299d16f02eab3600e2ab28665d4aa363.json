{"sha": "ad2e5b71299d16f02eab3600e2ab28665d4aa363", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQyZTViNzEyOTlkMTZmMDJlYWIzNjAwZTJhYjI4NjY1ZDRhYTM2Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-01-10T13:58:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-01-10T13:58:51Z"}, "message": "builtins.c (expand_builtin_init_trampoline): Use set_mem_attributes.\n\n2013-01-10  Richard Biener  <rguenther@suse.de>\n\n\t* builtins.c (expand_builtin_init_trampoline): Use\n\tset_mem_attributes.\n\nFrom-SVN: r195086", "tree": {"sha": "6564c50e5a001aee3b782765b654fac1563c39f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6564c50e5a001aee3b782765b654fac1563c39f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad2e5b71299d16f02eab3600e2ab28665d4aa363", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad2e5b71299d16f02eab3600e2ab28665d4aa363", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad2e5b71299d16f02eab3600e2ab28665d4aa363", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad2e5b71299d16f02eab3600e2ab28665d4aa363/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d02a9a19d6251c29b4b6dd9d50871325504029e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d02a9a19d6251c29b4b6dd9d50871325504029e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d02a9a19d6251c29b4b6dd9d50871325504029e9"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "fc79821d8722ec20361a7f43f56f23f75b47e87b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad2e5b71299d16f02eab3600e2ab28665d4aa363/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad2e5b71299d16f02eab3600e2ab28665d4aa363/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad2e5b71299d16f02eab3600e2ab28665d4aa363", "patch": "@@ -1,3 +1,8 @@\n+2013-01-10  Richard Biener  <rguenther@suse.de>\n+\n+\t* builtins.c (expand_builtin_init_trampoline): Use\n+\tset_mem_attributes.\n+\n 2013-01-10  Richard Biener  <rguenther@suse.de>\n \n \tPR bootstrap/55792"}, {"sha": "8ae4988418a0bd2be75a07a113103946361e417f", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad2e5b71299d16f02eab3600e2ab28665d4aa363/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad2e5b71299d16f02eab3600e2ab28665d4aa363/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=ad2e5b71299d16f02eab3600e2ab28665d4aa363", "patch": "@@ -4853,8 +4853,7 @@ expand_builtin_init_trampoline (tree exp, bool onstack)\n      within the local function's FRAME decl.  Either way, let's see if\n      we can fill in the MEM_ATTRs for this memory.  */\n   if (TREE_CODE (t_tramp) == ADDR_EXPR)\n-    set_mem_attributes_minus_bitpos (m_tramp, TREE_OPERAND (t_tramp, 0),\n-\t\t\t\t     true, 0);\n+    set_mem_attributes (m_tramp, TREE_OPERAND (t_tramp, 0), true);\n \n   /* Creator of a heap trampoline is responsible for making sure the\n      address is aligned to at least STACK_BOUNDARY.  Normally malloc"}]}