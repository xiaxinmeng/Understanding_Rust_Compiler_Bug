{"sha": "2473ee110ff4c7159e9db97aa15df313be56dbbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ3M2VlMTEwZmY0YzcxNTllOWRiOTdhYTE1ZGYzMTNiZTU2ZGJiZA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2001-11-09T22:34:47Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-11-09T22:34:47Z"}, "message": "rs6000.h (REG_CLASS_CONTENTS): Add VRSAVE bit to ALL_REGS.\n\n2001-11-09  Aldy Hernandez  <aldyh@redhat.com>\n\n        * rs6000.h (REG_CLASS_CONTENTS): Add VRSAVE bit to ALL_REGS.\n\t(CONDITIONAL_REGISTER_USAGE): Disable AltiVec registers unless\n\tgenerating altivec code.\n\t(FIXED_REGISTERS): VRSAVE is fixed.\n\t(CALL_USED_REGISTERS): VRSAVE is call used.\n\nFrom-SVN: r46895", "tree": {"sha": "258ef840293a512bfb9d61097cc00f908ec1126d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/258ef840293a512bfb9d61097cc00f908ec1126d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2473ee110ff4c7159e9db97aa15df313be56dbbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2473ee110ff4c7159e9db97aa15df313be56dbbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2473ee110ff4c7159e9db97aa15df313be56dbbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2473ee110ff4c7159e9db97aa15df313be56dbbd/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53c12e8dfc994f0fabccfb8c94cb35f1b59b7f2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c12e8dfc994f0fabccfb8c94cb35f1b59b7f2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53c12e8dfc994f0fabccfb8c94cb35f1b59b7f2f"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "573cb92abc29ecd98be087889aead9fbefe54bc8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2473ee110ff4c7159e9db97aa15df313be56dbbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2473ee110ff4c7159e9db97aa15df313be56dbbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2473ee110ff4c7159e9db97aa15df313be56dbbd", "patch": "@@ -1,3 +1,11 @@\n+2001-11-09  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * rs6000.h (REG_CLASS_CONTENTS): Add VRSAVE bit to ALL_REGS.\n+\t(CONDITIONAL_REGISTER_USAGE): Disable AltiVec registers unless\n+\tgenerating altivec code.\n+\t(FIXED_REGISTERS): VRSAVE is fixed.\n+\t(CALL_USED_REGISTERS): VRSAVE is call used.\n+\n 2001-11-08  Jason Eckhardt  <jle@rice.edu>\n \n \t* config/mips/mips.c (mips_output_conditional_branch): Do not hard"}, {"sha": "60ac42de94741cbea7dd94d98f8319e97e6e3770", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2473ee110ff4c7159e9db97aa15df313be56dbbd/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2473ee110ff4c7159e9db97aa15df313be56dbbd/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=2473ee110ff4c7159e9db97aa15df313be56dbbd", "patch": "@@ -687,7 +687,7 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n    /* AltiVec registers.  */\t\t\t   \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-   0\t\t\t\t\t\t   \\\n+   1\t\t\t\t\t\t   \\\n }\n \n /* 1 for registers not available across function calls.\n@@ -706,7 +706,7 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n    /* AltiVec registers.  */\t\t\t   \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-   0\t\t\t\t\t\t   \\\n+   1\t\t\t\t\t\t   \\\n }\n \n \n@@ -923,12 +923,12 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n     global_regs[PIC_OFFSET_TABLE_REGNUM]\t\t\t\t\\\n       = fixed_regs[PIC_OFFSET_TABLE_REGNUM]\t\t\t\t\\\n         = call_used_regs[PIC_OFFSET_TABLE_REGNUM] = 1;\t\t\t\\\n+  if (! TARGET_ALTIVEC)\t\t\t\t\t\t\t\\\n+    for (i = FIRST_ALTIVEC_REGNO; i <= LAST_ALTIVEC_REGNO; ++i)\t\t\\\n+      fixed_regs[i] = call_used_regs[i] = 1;\t\t\t\t\\\n   if (TARGET_ALTIVEC_ABI)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fixed_regs[VRSAVE_REGNO] = call_used_regs[VRSAVE_REGNO] = 1;\t\\\n-      for (i = FIRST_ALTIVEC_REGNO; i < FIRST_ALTIVEC_REGNO + 20; ++i)\t\\\n-        call_used_regs[i] = 1;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n+    for (i = FIRST_ALTIVEC_REGNO; i < FIRST_ALTIVEC_REGNO + 20; ++i)\t\\\n+      call_used_regs[i] = 1;\t\t\t\t\t\t\\\n }\n \n /* Specify the registers used for certain standard purposes.\n@@ -1068,7 +1068,7 @@ enum reg_class\n   { 0x00000000, 0x00000000, 0x00000ff0, 0x00000000 }, /* CR_REGS */\t     \\\n   { 0xffffffff, 0x00000000, 0x0000ffff, 0x00000000 }, /* NON_FLOAT_REGS */   \\\n   { 0x00000000, 0x00000000, 0x00010000, 0x00000000 }, /* XER_REGS */\t     \\\n-  { 0xffffffff, 0xffffffff, 0xffffffff, 0x0001ffff }  /* ALL_REGS */\t     \\\n+  { 0xffffffff, 0xffffffff, 0xffffffff, 0x0003ffff }  /* ALL_REGS */\t     \\\n }\n \n /* The same information, inverted:"}]}