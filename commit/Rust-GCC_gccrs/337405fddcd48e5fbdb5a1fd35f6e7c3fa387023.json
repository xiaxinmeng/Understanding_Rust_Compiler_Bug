{"sha": "337405fddcd48e5fbdb5a1fd35f6e7c3fa387023", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM3NDA1ZmRkY2Q0OGU1ZmJkYjVhMWZkMzVmNmU3YzNmYTM4NzAyMw==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2013-11-02T00:26:48Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2013-11-02T00:26:48Z"}, "message": "gcse.c (pre_delete): Remove references to regmove from comments.\n\n\n\t* gcse.c (pre_delete): Remove references to regmove from comments.\n\t* recog.c: (validate_replace_rtx_1): Likewise.\n\t* config/rl78/rl78.c: Likewise.\n\t* config/v850/v850.h: Likewise, and remove unused ENABLE_REGMOVE_PASS.\n\t* common/config/m32r/m32r-common.c: Don't manipulate OPT_fregmove.\n\t* common/config/mmix/mmix-common.c: Likewise.\n\nFrom-SVN: r204309", "tree": {"sha": "957ebd616ecadebe8567404b9bab31d993ffe3e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/957ebd616ecadebe8567404b9bab31d993ffe3e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023", "html_url": "https://github.com/Rust-GCC/gccrs/commit/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/comments", "author": null, "committer": null, "parents": [{"sha": "98e43317975a7f0f8da2335e4c39ecc685ae7658", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e43317975a7f0f8da2335e4c39ecc685ae7658", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98e43317975a7f0f8da2335e4c39ecc685ae7658"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "52b0aabc1d3eef8598bf033a99554c17f82bf8b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=337405fddcd48e5fbdb5a1fd35f6e7c3fa387023", "patch": "@@ -1,3 +1,12 @@\n+2013-11-02  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* gcse.c (pre_delete): Remove references to regmove from comments.\n+\t* recog.c: (validate_replace_rtx_1): Likewise.\n+\t* config/rl78/rl78.c: Likewise.\n+\t* config/v850/v850.h: Likewise, and remove unused ENABLE_REGMOVE_PASS.\n+\t* common/config/m32r/m32r-common.c: Don't manipulate OPT_fregmove.\n+\t* common/config/mmix/mmix-common.c: Likewise.\n+\n 2013-11-01  Trevor Saunders  <tsaunders@mozilla.com>\n \n \t* function.c (reorder_blocks): Convert block_stack to a stack_vec."}, {"sha": "f8df5a847fdd27495de9f2de57db6b866dd3df43", "filename": "gcc/common/config/m32r/m32r-common.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2Fcommon%2Fconfig%2Fm32r%2Fm32r-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2Fcommon%2Fconfig%2Fm32r%2Fm32r-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fm32r%2Fm32r-common.c?ref=337405fddcd48e5fbdb5a1fd35f6e7c3fa387023", "patch": "@@ -29,7 +29,6 @@\n static const struct default_options m32r_option_optimization_table[] =\n   {\n     { OPT_LEVELS_1_PLUS, OPT_fomit_frame_pointer, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS, OPT_fregmove, NULL, 1 },\n     { OPT_LEVELS_NONE, 0, NULL, 0 }\n   };\n "}, {"sha": "54acb4d892b006276692b91fb063b7859294bc9c", "filename": "gcc/common/config/mmix/mmix-common.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2Fcommon%2Fconfig%2Fmmix%2Fmmix-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2Fcommon%2Fconfig%2Fmmix%2Fmmix-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fmmix%2Fmmix-common.c?ref=337405fddcd48e5fbdb5a1fd35f6e7c3fa387023", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n \n static const struct default_options mmix_option_optimization_table[] =\n   {\n-    { OPT_LEVELS_1_PLUS, OPT_fregmove, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fomit_frame_pointer, NULL, 1 },\n     { OPT_LEVELS_NONE, 0, NULL, 0 }\n   };"}, {"sha": "f071e31daf287b180188bedea616dcfbc978758c", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=337405fddcd48e5fbdb5a1fd35f6e7c3fa387023", "patch": "@@ -1894,8 +1894,8 @@ post-reload optimizers could operate on the real registers, but when I\n tried that there were some issues building the target libraries.\n \n During devirtualization, a simple register move optimizer is run.  It\n-would be better to run a full CSE/propogation pass on it through, or\n-re-run regmove, but that has not yet been attempted.\n+would be better to run a full CSE/propogation pass on it though, but\n+that has not yet been attempted.\n \n  */\n #define DEBUG_ALLOC 0"}, {"sha": "9b5053337f59b95a64da86beb8d7be45a8f4856b", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=337405fddcd48e5fbdb5a1fd35f6e7c3fa387023", "patch": "@@ -954,10 +954,6 @@ extern tree GHS_current_section_names [(int) COUNT_OF_GHS_SECTION_KINDS];\n \n #define FILE_ASM_OP \"\\t.file\\n\"\n \n-/* Enable the register move pass to improve code.  */\n-#define ENABLE_REGMOVE_PASS\n-\n-\n /* Implement ZDA, TDA, and SDA */\n \n #define EP_REGNUM 30\t/* ep register number */"}, {"sha": "571e8788c83db469d06876e2b9c1e2ea94e9ea36", "filename": "gcc/gcse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=337405fddcd48e5fbdb5a1fd35f6e7c3fa387023", "patch": "@@ -2535,7 +2535,7 @@ gcse_emit_move_after (rtx dest, rtx src, rtx insn)\n /* Delete redundant computations.\n    Deletion is done by changing the insn to copy the `reaching_reg' of\n    the expression into the result of the SET.  It is left to later passes\n-   (cprop, cse2, flow, combine, regmove) to propagate the copy or eliminate it.\n+   to propagate the copy or eliminate it.\n \n    Return nonzero if a change is made.  */\n "}, {"sha": "c8594bb59044577d67adc655264b5bd4ceade272", "filename": "gcc/recog.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/337405fddcd48e5fbdb5a1fd35f6e7c3fa387023/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=337405fddcd48e5fbdb5a1fd35f6e7c3fa387023", "patch": "@@ -726,7 +726,7 @@ validate_replace_rtx_1 (rtx *loc, rtx from, rtx to, rtx object,\n   /* Call ourself recursively to perform the replacements.\n      We must not replace inside already replaced expression, otherwise we\n      get infinite recursion for replacements like (reg X)->(subreg (reg X))\n-     done by regmove, so we must special case shared ASM_OPERANDS.  */\n+     so we must special case shared ASM_OPERANDS.  */\n \n   if (GET_CODE (x) == PARALLEL)\n     {\n@@ -762,6 +762,7 @@ validate_replace_rtx_1 (rtx *loc, rtx from, rtx to, rtx object,\n   if (num_changes == prev_changes)\n     return;\n \n+  /* ??? The regmove is no more, so is this aberration still necessary?  */\n   /* Allow substituted expression to have different mode.  This is used by\n      regmove to change mode of pseudo register.  */\n   if (fmt[0] == 'e' && GET_MODE (XEXP (x, 0)) != VOIDmode)"}]}