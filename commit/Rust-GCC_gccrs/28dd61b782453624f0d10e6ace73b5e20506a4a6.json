{"sha": "28dd61b782453624f0d10e6ace73b5e20506a4a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhkZDYxYjc4MjQ1MzYyNGYwZDEwZTZhY2U3M2I1ZTIwNTA2YTRhNg==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2019-12-09T14:49:08Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2019-12-09T14:49:08Z"}, "message": "Fix more unrecognised GCN instructions\n\n2019-12-09  Andrew Stubbs  <ams@codesourcery.com>\n\n\tgcc/\n\t* config/gcn/gcn-valu.md (gather<mode>_insn_1offset<exec>): Change\n\t%s to %o in asm output.\n\t(gather<mode>_insn_2offsets<exec>): Likewise.\n\nFrom-SVN: r279131", "tree": {"sha": "7ff9f4050fe28aff1dbd5a44c363a5faa34d6153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ff9f4050fe28aff1dbd5a44c363a5faa34d6153"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28dd61b782453624f0d10e6ace73b5e20506a4a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28dd61b782453624f0d10e6ace73b5e20506a4a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28dd61b782453624f0d10e6ace73b5e20506a4a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28dd61b782453624f0d10e6ace73b5e20506a4a6/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc548411ff587c105be0a9cd37877eb4b3d4b834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc548411ff587c105be0a9cd37877eb4b3d4b834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc548411ff587c105be0a9cd37877eb4b3d4b834"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "82a1bfb6ef29e793f71fe4d42c296586a161b55b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dd61b782453624f0d10e6ace73b5e20506a4a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dd61b782453624f0d10e6ace73b5e20506a4a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28dd61b782453624f0d10e6ace73b5e20506a4a6", "patch": "@@ -1,3 +1,9 @@\n+2019-12-09  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn-valu.md (gather<mode>_insn_1offset<exec>): Change\n+\t%s to %o in asm output.\n+\t(gather<mode>_insn_2offsets<exec>): Likewise.\n+\n 2019-12-09  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* config/arm/t-multilib: Use arm->thumb multilib reuse rules"}, {"sha": "16b37e8daab9a804f94714f05377ef03a5a7cd06", "filename": "gcc/config/gcn/gcn-valu.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dd61b782453624f0d10e6ace73b5e20506a4a6/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dd61b782453624f0d10e6ace73b5e20506a4a6/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md?ref=28dd61b782453624f0d10e6ace73b5e20506a4a6", "patch": "@@ -722,7 +722,7 @@\n \t  sprintf (buf, \"flat_load%%o0\\t%%0, %%1%s\\;s_waitcnt\\t0\", glc);\n       }\n     else if (AS_GLOBAL_P (as))\n-      sprintf (buf, \"global_load%%s0\\t%%0, %%1, off offset:%%2%s\\;\"\n+      sprintf (buf, \"global_load%%o0\\t%%0, %%1, off offset:%%2%s\\;\"\n \t       \"s_waitcnt\\tvmcnt(0)\", glc);\n     else\n       gcc_unreachable ();\n@@ -780,7 +780,7 @@\n \t/* Work around assembler bug in which a 64-bit register is expected,\n \tbut a 32-bit value would be correct.  */\n \tint reg = REGNO (operands[2]) - FIRST_VGPR_REG;\n-\tsprintf (buf, \"global_load%%s0\\t%%0, v[%d:%d], %%1 offset:%%3%s\\;\"\n+\tsprintf (buf, \"global_load%%o0\\t%%0, v[%d:%d], %%1 offset:%%3%s\\;\"\n \t\t      \"s_waitcnt\\tvmcnt(0)\", reg, reg + 1, glc);\n       }\n     else"}]}