{"sha": "515dfc7a237bc1f02b23e12b004937800f21a5a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE1ZGZjN2EyMzdiYzFmMDJiMjNlMTJiMDA0OTM3ODAwZjIxYTVhMw==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-07-06T07:20:48Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-07-06T07:20:48Z"}, "message": "(expand_divmod): Clear out TARGET also if OP1 is a constant,\n\nwhen TARGET == OP0.\n\nFrom-SVN: r7661", "tree": {"sha": "59ad7a001fd90481bb110892690c9a9ae4844484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59ad7a001fd90481bb110892690c9a9ae4844484"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/515dfc7a237bc1f02b23e12b004937800f21a5a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515dfc7a237bc1f02b23e12b004937800f21a5a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/515dfc7a237bc1f02b23e12b004937800f21a5a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515dfc7a237bc1f02b23e12b004937800f21a5a3/comments", "author": null, "committer": null, "parents": [{"sha": "9a0e77ba1327661271053585fcc696cbc8215133", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a0e77ba1327661271053585fcc696cbc8215133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a0e77ba1327661271053585fcc696cbc8215133"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e5ff61a7fadd6811e21d900844d965ace2f3c5b4", "filename": "gcc/expmed.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515dfc7a237bc1f02b23e12b004937800f21a5a3/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515dfc7a237bc1f02b23e12b004937800f21a5a3/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=515dfc7a237bc1f02b23e12b004937800f21a5a3", "patch": "@@ -2605,7 +2605,7 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t and function-inlining gets confused by this.  */\n       && ((REG_P (target) && REG_FUNCTION_VALUE_P (target))\n \t  /* Don't clobber an operand while doing a multi-step calculation.  */\n-\t  || (rem_flag\n+\t  || ((rem_flag || op1_is_constant)\n \t      && (reg_mentioned_p (target, op0)\n \t\t  || (GET_CODE (op0) == MEM && GET_CODE (target) == MEM)))\n \t  || reg_mentioned_p (target, op1)"}]}