{"sha": "d3f78917e1310d7d00e4f955c8e5d30a777f7d35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNmNzg5MTdlMTMxMGQ3ZDAwZTRmOTU1YzhlNWQzMGE3NzdmN2QzNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-04-08T14:00:03Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-04-08T14:00:03Z"}, "message": "testsuite: Fix sve/mul_2.c failures\n\nSome sve/mul_2.c tests were failing because we'd (reasonably)\ndecided to use shifts and adds instead of MULs for some simple\nnegative constants.  We'd already needed to avoid that when\npicking positive constants, so this patch does the same thing\nfor the negative ones.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/mul_2.c: Adjust negative constants to avoid\n\tconversion to shifts and adds.", "tree": {"sha": "621e066c4d82180b4d1fd689e7f3f3381780f312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/621e066c4d82180b4d1fd689e7f3f3381780f312"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3f78917e1310d7d00e4f955c8e5d30a777f7d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f78917e1310d7d00e4f955c8e5d30a777f7d35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f78917e1310d7d00e4f955c8e5d30a777f7d35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f78917e1310d7d00e4f955c8e5d30a777f7d35/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acbbb82ea3e2ae145e59ffca6f1ec0699b5f7383", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acbbb82ea3e2ae145e59ffca6f1ec0699b5f7383", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acbbb82ea3e2ae145e59ffca6f1ec0699b5f7383"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b57e321c01f874a02c6c7d9ff1c032a4c7a00a60", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mul_2.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3f78917e1310d7d00e4f955c8e5d30a777f7d35/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmul_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3f78917e1310d7d00e4f955c8e5d30a777f7d35/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmul_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmul_2.c?ref=d3f78917e1310d7d00e4f955c8e5d30a777f7d35", "patch": "@@ -21,14 +21,14 @@ TEST_TYPE (uint8_t, 32, 2, 250)\n \n TEST_TYPE (int8_t, 64, -110, 110)\n TEST_TYPE (uint8_t, 64, 3, 253)\n-TEST_TYPE (int16_t, 64, -128, 123)\n+TEST_TYPE (int16_t, 64, -123, 123)\n TEST_TYPE (uint16_t, 64, 3, 255)\n \n-TEST_TYPE (int8_t, 128, -120, 120)\n+TEST_TYPE (int8_t, 128, -119, 120)\n TEST_TYPE (uint8_t, 128, 4, 251)\n-TEST_TYPE (int16_t, 128, -128, 123)\n+TEST_TYPE (int16_t, 128, -123, 123)\n TEST_TYPE (uint16_t, 128, 2, 255)\n-TEST_TYPE (int32_t, 128, -128, 123)\n+TEST_TYPE (int32_t, 128, -123, 123)\n TEST_TYPE (uint32_t, 128, 4, 255)\n \n /* { dg-final { scan-assembler-times {\\tmul\\tz[0-9]+\\.b, p[0-7]/m, z[0-9]+\\.b, z[0-9]+\\.b\\n} 6 } } */\n@@ -37,9 +37,9 @@ TEST_TYPE (uint32_t, 128, 4, 255)\n \n /* { dg-final { scan-assembler-times {\\tmul\\tz[0-9]+\\.b, z[0-9]+\\.b, #-100\\n} 1 } } */\n /* { dg-final { scan-assembler-times {\\tmul\\tz[0-9]+\\.b, z[0-9]+\\.b, #-110\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tmul\\tz[0-9]+\\.b, z[0-9]+\\.b, #-120\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tmul\\tz[0-9]+\\.h, z[0-9]+\\.h, #-128\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tmul\\tz[0-9]+\\.s, z[0-9]+\\.s, #-128\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tmul\\tz[0-9]+\\.b, z[0-9]+\\.b, #-119\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tmul\\tz[0-9]+\\.h, z[0-9]+\\.h, #-123\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tmul\\tz[0-9]+\\.s, z[0-9]+\\.s, #-123\\n} 1 } } */\n \n /* { dg-final { scan-assembler-times {\\tmul\\tz[0-9]+\\.b, z[0-9]+\\.b, #50\\n} 6 } } */\n /* { dg-final { scan-assembler-times {\\tmul\\tz[0-9]+\\.h, z[0-9]+\\.h, #50\\n} 4 } } */"}]}