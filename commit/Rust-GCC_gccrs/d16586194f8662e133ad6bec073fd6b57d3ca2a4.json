{"sha": "d16586194f8662e133ad6bec073fd6b57d3ca2a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE2NTg2MTk0Zjg2NjJlMTMzYWQ2YmVjMDczZmQ2YjU3ZDNjYTJhNA==", "commit": {"author": {"name": "Siddhesh Poyarekar", "email": "siddhesh@redhat.com", "date": "2012-07-25T16:01:17Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-07-25T16:01:17Z"}, "message": "Split out do_assembler_dialects.\n\n\t* final.c [ASSEMBLER_DIALECT](do_assembler_dialects): New\n\tfunction to implement assembler dialects.\n\t(output_asm_insn): Use do_assembler_dialects.\n\t(asm_fprintf): Likewise.\n\n\t* gcc.target/i386/asm-dialect-1.c: New test case.\n\nFrom-SVN: r189854", "tree": {"sha": "09cde1bba9ce1826494c5df0da175c90744b6920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09cde1bba9ce1826494c5df0da175c90744b6920"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d16586194f8662e133ad6bec073fd6b57d3ca2a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d16586194f8662e133ad6bec073fd6b57d3ca2a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d16586194f8662e133ad6bec073fd6b57d3ca2a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d16586194f8662e133ad6bec073fd6b57d3ca2a4/comments", "author": {"login": "siddhesh", "id": 158582, "node_id": "MDQ6VXNlcjE1ODU4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/158582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siddhesh", "html_url": "https://github.com/siddhesh", "followers_url": "https://api.github.com/users/siddhesh/followers", "following_url": "https://api.github.com/users/siddhesh/following{/other_user}", "gists_url": "https://api.github.com/users/siddhesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/siddhesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siddhesh/subscriptions", "organizations_url": "https://api.github.com/users/siddhesh/orgs", "repos_url": "https://api.github.com/users/siddhesh/repos", "events_url": "https://api.github.com/users/siddhesh/events{/privacy}", "received_events_url": "https://api.github.com/users/siddhesh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5714c34f155fc589f7da1d625990ac4a92679dc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5714c34f155fc589f7da1d625990ac4a92679dc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5714c34f155fc589f7da1d625990ac4a92679dc9"}], "stats": {"total": 168, "additions": 99, "deletions": 69}, "files": [{"sha": "5a635683c27db57da4190d645d9adc8b6f6c56ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16586194f8662e133ad6bec073fd6b57d3ca2a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16586194f8662e133ad6bec073fd6b57d3ca2a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d16586194f8662e133ad6bec073fd6b57d3ca2a4", "patch": "@@ -1,3 +1,10 @@\n+2012-07-25  Siddhesh Poyarekar  <siddhesh@redhat.com>\n+\n+\t* final.c [ASSEMBLER_DIALECT](do_assembler_dialects): New\n+\tfunction to implement assembler dialects.\n+\t(output_asm_insn): Use do_assembler_dialects.\n+\t(asm_fprintf): Likewise.\n+\n 2012-07-25  Richard Henderson  <rth@redhat.com>\n \n \tPR bootstrap/54092"}, {"sha": "095d608cdc3987c641c5e2a4227b27dbbb7d1b2f", "filename": "gcc/final.c", "status": "modified", "additions": 73, "deletions": 69, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16586194f8662e133ad6bec073fd6b57d3ca2a4/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16586194f8662e133ad6bec073fd6b57d3ca2a4/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=d16586194f8662e133ad6bec073fd6b57d3ca2a4", "patch": "@@ -3338,6 +3338,72 @@ output_asm_operand_names (rtx *operands, int *oporder, int nops)\n     }\n }\n \n+#ifdef ASSEMBLER_DIALECT\n+/* Helper function to parse assembler dialects in the asm string.\n+   This is called from output_asm_insn and asm_fprintf.  */\n+static const char *\n+do_assembler_dialects (const char *p, int *dialect)\n+{\n+  char c = *(p - 1);\n+\n+  switch (c)\n+    {\n+    case '{':\n+      {\n+        int i;\n+\n+        if (*dialect)\n+          output_operand_lossage (\"nested assembly dialect alternatives\");\n+        else\n+          *dialect = 1;\n+\n+        /* If we want the first dialect, do nothing.  Otherwise, skip\n+           DIALECT_NUMBER of strings ending with '|'.  */\n+        for (i = 0; i < dialect_number; i++)\n+          {\n+            while (*p && *p != '}' && *p++ != '|')\n+\t      ;\n+            if (*p == '}')\n+\t      break;\n+          }\n+\n+        if (*p == '\\0')\n+          output_operand_lossage (\"unterminated assembly dialect alternative\");\n+      }\n+      break;\n+\n+    case '|':\n+      if (*dialect)\n+        {\n+          /* Skip to close brace.  */\n+          do\n+            {\n+\t      if (*p == '\\0')\n+\t\t{\n+\t\t  output_operand_lossage (\"unterminated assembly dialect alternative\");\n+\t\t  break;\n+\t\t}\n+            }\n+          while (*p++ != '}');\n+          *dialect = 0;\n+        }\n+      else\n+        putc (c, asm_out_file);\n+      break;\n+\n+    case '}':\n+      if (! *dialect)\n+        putc (c, asm_out_file);\n+      *dialect = 0;\n+      break;\n+    default:\n+      gcc_unreachable ();\n+    }\n+\n+  return p;\n+}\n+#endif\n+\n /* Output text from TEMPLATE to the assembler output file,\n    obeying %-directions to substitute operands taken from\n    the vector OPERANDS.\n@@ -3404,54 +3470,9 @@ output_asm_insn (const char *templ, rtx *operands)\n \n #ifdef ASSEMBLER_DIALECT\n       case '{':\n-\t{\n-\t  int i;\n-\n-\t  if (dialect)\n-\t    output_operand_lossage (\"nested assembly dialect alternatives\");\n-\t  else\n-\t    dialect = 1;\n-\n-\t  /* If we want the first dialect, do nothing.  Otherwise, skip\n-\t     DIALECT_NUMBER of strings ending with '|'.  */\n-\t  for (i = 0; i < dialect_number; i++)\n-\t    {\n-\t      while (*p && *p != '}' && *p++ != '|')\n-\t\t;\n-\t      if (*p == '}')\n-\t\tbreak;\n-\t      if (*p == '|')\n-\t\tp++;\n-\t    }\n-\n-\t  if (*p == '\\0')\n-\t    output_operand_lossage (\"unterminated assembly dialect alternative\");\n-\t}\n-\tbreak;\n-\n-      case '|':\n-\tif (dialect)\n-\t  {\n-\t    /* Skip to close brace.  */\n-\t    do\n-\t      {\n-\t\tif (*p == '\\0')\n-\t\t  {\n-\t\t    output_operand_lossage (\"unterminated assembly dialect alternative\");\n-\t\t    break;\n-\t\t  }\n-\t      }\n-\t    while (*p++ != '}');\n-\t    dialect = 0;\n-\t  }\n-\telse\n-\t  putc (c, asm_out_file);\n-\tbreak;\n-\n       case '}':\n-\tif (! dialect)\n-\t  putc (c, asm_out_file);\n-\tdialect = 0;\n+      case '|':\n+\tp = do_assembler_dialects (p, &dialect);\n \tbreak;\n #endif\n \n@@ -3910,6 +3931,9 @@ asm_fprintf (FILE *file, const char *p, ...)\n {\n   char buf[10];\n   char *q, c;\n+#ifdef ASSEMBLER_DIALECT\n+  int dialect = 0;\n+#endif\n   va_list argptr;\n \n   va_start (argptr, p);\n@@ -3921,29 +3945,9 @@ asm_fprintf (FILE *file, const char *p, ...)\n       {\n #ifdef ASSEMBLER_DIALECT\n       case '{':\n-\t{\n-\t  int i;\n-\n-\t  /* If we want the first dialect, do nothing.  Otherwise, skip\n-\t     DIALECT_NUMBER of strings ending with '|'.  */\n-\t  for (i = 0; i < dialect_number; i++)\n-\t    {\n-\t      while (*p && *p++ != '|')\n-\t\t;\n-\n-\t      if (*p == '|')\n-\t\tp++;\n-\t    }\n-\t}\n-\tbreak;\n-\n-      case '|':\n-\t/* Skip to close brace.  */\n-\twhile (*p && *p++ != '}')\n-\t  ;\n-\tbreak;\n-\n       case '}':\n+      case '|':\n+\tp = do_assembler_dialects (p, &dialect);\n \tbreak;\n #endif\n "}, {"sha": "0c57bc34388e29ac3aa958a1b69df144decbdff8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16586194f8662e133ad6bec073fd6b57d3ca2a4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16586194f8662e133ad6bec073fd6b57d3ca2a4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d16586194f8662e133ad6bec073fd6b57d3ca2a4", "patch": "@@ -1,3 +1,7 @@\n+2012-07-25  Siddhesh Poyarekar  <siddhesh@redhat.com>\n+\n+\t* gcc.target/i386/asm-dialect-1.c: New test case.\n+\n 2012-07-25  Kirill Yukhin  <kirill.yukhin@intel.com>\n \t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n "}, {"sha": "a53d2e939f328c9588a08e48ec1594ac0ed68971", "filename": "gcc/testsuite/gcc.target/i386/asm-dialect-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16586194f8662e133ad6bec073fd6b57d3ca2a4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-dialect-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16586194f8662e133ad6bec073fd6b57d3ca2a4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-dialect-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-dialect-1.c?ref=d16586194f8662e133ad6bec073fd6b57d3ca2a4", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-options \"-masm=intel\" } */\n+\n+extern void abort (void);\n+\n+int\n+main (void)\n+{\n+  int f = 0;\n+  asm (\"{movl $42, %%eax | mov eax, 42}\" : :);\n+  asm (\"{movl $41, %0||mov %0, 43}\" : \"=r\"(f));\n+  if (f != 42)\n+    abort ();\n+\n+  return 0;\n+}"}]}