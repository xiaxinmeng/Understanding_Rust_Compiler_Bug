{"sha": "59a576f274b9093fd4b25eb6be556b40c2424478", "node_id": "C_kwDOANBUbNoAKDU5YTU3NmYyNzRiOTA5M2ZkNGIyNWViNmJlNTU2YjQwYzI0MjQ0Nzg", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-03-03T16:41:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-03-03T18:14:51Z"}, "message": "gcc: Fix gdbhooks.py VecPrinter for vec<> as well as vec<>* [PR109006]\n\ngcc/ChangeLog:\n\n\tPR middle-end/109006\n\t* gdbhooks.py (VecPrinter): Handle vec<T> as well as vec<T>*.", "tree": {"sha": "0a2dbb514c15269b7b95168111d57831a94db1ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a2dbb514c15269b7b95168111d57831a94db1ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59a576f274b9093fd4b25eb6be556b40c2424478", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a576f274b9093fd4b25eb6be556b40c2424478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59a576f274b9093fd4b25eb6be556b40c2424478", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a576f274b9093fd4b25eb6be556b40c2424478/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce1c99f1ccd7b1229a4f8531d6b6de6cf571a9ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce1c99f1ccd7b1229a4f8531d6b6de6cf571a9ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce1c99f1ccd7b1229a4f8531d6b6de6cf571a9ef"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "e29bd458909c3410fed32edd6f163b83e3da0961", "filename": "gcc/gdbhooks.py", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a576f274b9093fd4b25eb6be556b40c2424478/gcc%2Fgdbhooks.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a576f274b9093fd4b25eb6be556b40c2424478/gcc%2Fgdbhooks.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgdbhooks.py?ref=59a576f274b9093fd4b25eb6be556b40c2424478", "patch": "@@ -461,13 +461,16 @@ def children (self):\n             return\n         m_vecpfx = self.gdbval['m_vecpfx']\n         m_num = m_vecpfx['m_num']\n-        typ = self.gdbval.type\n+        val = self.gdbval\n+        typ = val.type\n         if typ.code == gdb.TYPE_CODE_PTR:\n             typ = typ.target()\n-        typ = typ.template_argument(0) # the type T\n-        m_vecdata = (self.gdbval.address + 1).cast(typ.pointer())\n+        else:\n+            val = val.address\n+        typ_T = typ.template_argument(0) # the type T\n+        vecdata = (val + 1).cast(typ_T.pointer())\n         for i in range(m_num):\n-            yield ('[%d]' % i, m_vecdata[i])\n+            yield ('[%d]' % i, vecdata[i])\n \n ######################################################################\n "}]}