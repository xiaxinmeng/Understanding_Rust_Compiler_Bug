{"sha": "be5090b0957200dfd9022360510c6265cae162b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU1MDkwYjA5NTcyMDBkZmQ5MDIyMzYwNTEwYzYyNjVjYWUxNjJiNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-04-26T01:05:13Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-04-26T01:05:13Z"}, "message": "alpha.md (fix_trunc patterns): Use reg_no_subreg_operand on op0 for less work in reload.\n\n        * alpha.md (fix_trunc patterns): Use reg_no_subreg_operand on op0\n        for less work in reload.\n        (movsf and movdf patterns): Put fp reg alternatives first.\n\nFrom-SVN: r26639", "tree": {"sha": "e8a7d9dc87e9779f5d28f104b1de4d13b7b98017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8a7d9dc87e9779f5d28f104b1de4d13b7b98017"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be5090b0957200dfd9022360510c6265cae162b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be5090b0957200dfd9022360510c6265cae162b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be5090b0957200dfd9022360510c6265cae162b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be5090b0957200dfd9022360510c6265cae162b4/comments", "author": null, "committer": null, "parents": [{"sha": "766518a01a271adf0472cc2109a5055c1e132fbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/766518a01a271adf0472cc2109a5055c1e132fbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/766518a01a271adf0472cc2109a5055c1e132fbb"}], "stats": {"total": 66, "additions": 36, "deletions": 30}, "files": [{"sha": "5d568506600cffc6648078c05d5b86e9764f0511", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be5090b0957200dfd9022360510c6265cae162b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be5090b0957200dfd9022360510c6265cae162b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be5090b0957200dfd9022360510c6265cae162b4", "patch": "@@ -1,3 +1,9 @@\n+Mon Apr 26 01:02:38 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* alpha.md (fix_trunc patterns): Use reg_no_subreg_operand on op0\n+\tfor less work in reload.\n+\t(movsf and movdf patterns): Put fp reg alternatives first.\n+\n Mon Apr 26 01:55:56 1999  Marc Espie  <espie@cvs.openbsd.org>\n \n \t* configure.in (openbsd): Factorize xmake_file."}, {"sha": "98e21138c70a2501695739c068c8de6acef7a881", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be5090b0957200dfd9022360510c6265cae162b4/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be5090b0957200dfd9022360510c6265cae162b4/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=be5090b0957200dfd9022360510c6265cae162b4", "patch": "@@ -1945,15 +1945,15 @@\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=&f\")\n+  [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=&f\")\n \t(fix:DI (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n   \"cvt%-q%(c %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"fix_truncdfdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=f\")\n \t(fix:DI (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cvt%-q%(c %R1,%0\"\n@@ -2008,7 +2008,7 @@\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=&f\")\n+  [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=&f\")\n \t(fix:DI (float_extend:DF\n \t\t (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_tp == ALPHA_TP_INSN\"\n@@ -2017,7 +2017,7 @@\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"fix_truncsfdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=f\")\n \t(fix:DI (float_extend:DF\n \t\t (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP\"\n@@ -4013,68 +4013,68 @@\n ;; they are simpler.\n \n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,m\")\n-\t(match_operand:SF 1 \"input_operand\" \"rG,m,r,fG,m,fG\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f,f,r,r,m,m\")\n+\t(match_operand:SF 1 \"input_operand\" \"fG,m,rG,m,fG,r\"))]\n   \"! TARGET_CIX\n    && (register_operand (operands[0], SFmode)\n        || reg_or_fp0_operand (operands[1], SFmode))\"\n   \"@\n-   mov %r1,%0\n-   ldl %0,%1\n-   stl %r1,%0\n    fmov %R1,%0\n    ld%, %0,%1\n-   st%, %R1,%0\"\n-  [(set_attr \"type\" \"ilog,ild,ist,fcpys,fld,fst\")])\n+   mov %r1,%0\n+   ldl %0,%1\n+   st%, %R1,%0\n+   stl %r1,%0\"\n+  [(set_attr \"type\" \"fcpys,fld,ilog,ild,fst,ist\")])\n \n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,m,f,*r\")\n-\t(match_operand:SF 1 \"input_operand\" \"rG,m,r,fG,m,fG,r,*f\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f,f,r,r,m,m,f,*r\")\n+\t(match_operand:SF 1 \"input_operand\" \"fG,m,rG,m,fG,r,r,*f\"))]\n   \"TARGET_CIX\n    && (register_operand (operands[0], SFmode)\n        || reg_or_fp0_operand (operands[1], SFmode))\"\n   \"@\n-   mov %r1,%0\n-   ldl %0,%1\n-   stl %r1,%0\n    fmov %R1,%0\n    ld%, %0,%1\n+   mov %r1,%0\n+   ldl %0,%1\n    st%, %R1,%0\n+   stl %r1,%0\n    itofs %1,%0\n    ftois %1,%0\"\n-  [(set_attr \"type\" \"ilog,ild,ist,fcpys,fld,fst,itof,ftoi\")])\n+  [(set_attr \"type\" \"fcpys,fld,ilog,ild,fst,ist,itof,ftoi\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,m\")\n-\t(match_operand:DF 1 \"input_operand\" \"rG,m,r,fG,m,fG\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,r,r,m,m\")\n+\t(match_operand:DF 1 \"input_operand\" \"fG,m,rG,m,fG,r\"))]\n   \"! TARGET_CIX\n    && (register_operand (operands[0], DFmode)\n        || reg_or_fp0_operand (operands[1], DFmode))\"\n   \"@\n-   mov %r1,%0\n-   ldq %0,%1\n-   stq %r1,%0\n    fmov %R1,%0\n    ld%- %0,%1\n-   st%- %R1,%0\"\n-  [(set_attr \"type\" \"ilog,ild,ist,fcpys,fld,fst\")])\n+   mov %r1,%0\n+   ldq %0,%1\n+   st%- %R1,%0\n+   stq %r1,%0\"\n+  [(set_attr \"type\" \"fcpys,fld,ilog,ild,fst,ist\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,m,f,*r\")\n-\t(match_operand:DF 1 \"input_operand\" \"rG,m,r,fG,m,fG,r,*f\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,r,r,m,m,f,*r\")\n+\t(match_operand:DF 1 \"input_operand\" \"fG,m,rG,m,fG,r,r,*f\"))]\n   \"TARGET_CIX\n    && (register_operand (operands[0], DFmode)\n        || reg_or_fp0_operand (operands[1], DFmode))\"\n   \"@\n-   mov %r1,%0\n-   ldq %0,%1\n-   stq %r1,%0\n    fmov %R1,%0\n    ld%- %0,%1\n+   mov %r1,%0\n+   ldq %0,%1\n    st%- %R1,%0\n+   stq %r1,%0\n    itoft %1,%0\n    ftoit %1,%0\"\n-  [(set_attr \"type\" \"ilog,ild,ist,fcpys,fld,fst,itof,ftoi\")])\n+  [(set_attr \"type\" \"fcpys,fld,ilog,ild,fst,ist,itof,ftoi\")])\n \n (define_expand \"movsf\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"\")"}]}