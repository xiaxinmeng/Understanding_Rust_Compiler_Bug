{"sha": "5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMzYzY5ZjRiYWI5YzY4YWI3ZjcwYWI1OTBjMGZmMTI2NzNmYjZiZQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2004-03-15T10:32:41Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2004-03-15T10:32:41Z"}, "message": "c-pretty-print.c (pp_c_semicolon): Fix formatting.\n\n\t* c-pretty-print.c (pp_c_semicolon): Fix formatting.\n\t(pp_c_cv_qualifier): Document.\n\t(pp_c_space_for_pointer_operator): Likewise.\n\t(pp_c_integer_constant): Likewise.\n\t(pp_c_identifier): Likewise.\n\t(pp_c_init_declarator): Don't print function body.\n\nFrom-SVN: r79492", "tree": {"sha": "01f8d6dc010a650e1b4aac9776f6fb509a10ef71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01f8d6dc010a650e1b4aac9776f6fb509a10ef71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33674f003add463d25c998eacf5eea0b6bd6c7cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33674f003add463d25c998eacf5eea0b6bd6c7cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33674f003add463d25c998eacf5eea0b6bd6c7cc"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "365cd54814a64fa7df3f7c59cacbc0622787540e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be", "patch": "@@ -1,3 +1,12 @@\n+2004-03-15  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* c-pretty-print.c (pp_c_semicolon): Fix formatting.\n+\t(pp_c_cv_qualifier): Document.\n+\t(pp_c_space_for_pointer_operator): Likewise.\n+\t(pp_c_integer_constant): Likewise.\n+\t(pp_c_identifier): Likewise.\n+\t(pp_c_init_declarator): Don't print function body.\n+\n 2004-03-14  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* doc/contrib.texi, doc/extend.texi, doc/gcov.texi,"}, {"sha": "94869b4c77e0e347902adfdb5f19367f7e39d589", "filename": "gcc/c-pretty-print.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be/gcc%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be/gcc%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pretty-print.c?ref=5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be", "patch": "@@ -140,17 +140,22 @@ pp_c_arrow (c_pretty_printer *pp)\n }\n \n void\n-pp_c_semicolon(c_pretty_printer *pp)\n+pp_c_semicolon (c_pretty_printer *pp)\n {\n   pp_semicolon (pp);\n   pp_base (pp)->padding = pp_none;\n }\n \n+/* Print out the external representation of CV-QUALIFIER.  */\n+\n static void\n pp_c_cv_qualifier (c_pretty_printer *pp, const char *cv)\n {\n   const char *p = pp_last_position_in_text (pp);\n-  if (p != NULL && *p == '*')\n+  /* The C programming language does not have references, but it is much\n+     simpler to handle those here rather than going through the same\n+     logic in the C++ pretty-printer.  */\n+  if (p != NULL && (*p == '*' || *p == '&'))\n     pp_c_whitespace (pp);\n   pp_c_identifier (pp, cv);\n }\n@@ -165,6 +170,9 @@ pp_c_type_cast (c_pretty_printer *pp, tree t)\n   pp_c_right_paren (pp);\n }\n \n+/* We're about to pretty-print a pointer type as indicated by T.\n+   Output a whitespace, if needed, preparing for subsequent output.  */\n+\n void\n pp_c_space_for_pointer_operator (c_pretty_printer *pp, tree t)\n {\n@@ -737,6 +745,8 @@ pp_c_string_literal (c_pretty_printer *pp, tree s)\n   pp_doublequote (pp);\n }\n \n+/* Pretty-print an INTEGER literal.  */\n+\n static void\n pp_c_integer_constant (c_pretty_printer *pp, tree i)\n {\n@@ -922,6 +932,8 @@ pp_c_constant (c_pretty_printer *pp, tree e)\n     }\n }\n \n+/* Pretty-print an IDENTIFIER_NODE, precedeed by whitespace is necessary.  */\n+\n void\n pp_c_identifier (c_pretty_printer *pp, const char *id)\n {\n@@ -1012,7 +1024,9 @@ void\n pp_c_init_declarator (c_pretty_printer *pp, tree t)\n {\n   pp_declarator (pp, t);\n-  if (DECL_INITIAL (t))\n+  /* We don't want to output function definitions here.  There are handled\n+     elsewhere (and the syntactic form is bogus anyway).  */\n+  if (TREE_CODE (t) != FUNCTION_DECL && DECL_INITIAL (t))\n     {\n       tree init = DECL_INITIAL (t);\n       /* This C++ bit is handled here because it is easier to do so."}]}