{"sha": "79eefb0dd2ba75119f3c722f775b9d60d056f8ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzllZWZiMGRkMmJhNzUxMTlmM2M3MjJmNzc1YjlkNjBkMDU2ZjhhYw==", "commit": {"author": {"name": "Pat Haugen", "email": "pthaugen@us.ibm.com", "date": "2011-03-07T19:27:09Z"}, "committer": {"name": "Pat Haugen", "email": "pthaugen@gcc.gnu.org", "date": "2011-03-07T19:27:09Z"}, "message": "re PR rtl-optimization/47862 (Incorrect code for spilling a vector register)\n\n        PR target/47862\n        * config/rs6000/rs6000.h (HARD_REGNO_CALLER_SAVE_MODE): Define.\n        * config/rs6000/e500.h (HARD_REGNO_CALLER_SAVE_MODE): Undefine\n        before definition.\n\n        * testsuite/gcc.target/powerpc/pr47862.c: New.\n\nFrom-SVN: r170748", "tree": {"sha": "0d3c2626b631f76c34cb8a64c70b259c965000d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d3c2626b631f76c34cb8a64c70b259c965000d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79eefb0dd2ba75119f3c722f775b9d60d056f8ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79eefb0dd2ba75119f3c722f775b9d60d056f8ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79eefb0dd2ba75119f3c722f775b9d60d056f8ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79eefb0dd2ba75119f3c722f775b9d60d056f8ac/comments", "author": null, "committer": null, "parents": [{"sha": "5fc7780874160376d9b1d223fa95d6949f5d29e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fc7780874160376d9b1d223fa95d6949f5d29e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fc7780874160376d9b1d223fa95d6949f5d29e6"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "64ff65e3d1a94789e75c734cffe9902f5e834536", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79eefb0dd2ba75119f3c722f775b9d60d056f8ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79eefb0dd2ba75119f3c722f775b9d60d056f8ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79eefb0dd2ba75119f3c722f775b9d60d056f8ac", "patch": "@@ -1,3 +1,10 @@\n+2011-03-07  Pat Haugen <pthaugen@us.ibm.com>\n+\n+\tPR target/47862\n+\t* config/rs6000/rs6000.h (HARD_REGNO_CALLER_SAVE_MODE): Define.\n+\t* config/rs6000/e500.h (HARD_REGNO_CALLER_SAVE_MODE): Undefine\n+\tbefore definition.\n+\n 2011-03-07  Zdenek Dvorak  <ook@ucw.cz>\n \n \tPR bootstrap/48000"}, {"sha": "807df0900a531713f590e6b9d70b14f9fa798e78", "filename": "gcc/config/rs6000/e500.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79eefb0dd2ba75119f3c722f775b9d60d056f8ac/gcc%2Fconfig%2Frs6000%2Fe500.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79eefb0dd2ba75119f3c722f775b9d60d056f8ac/gcc%2Fconfig%2Frs6000%2Fe500.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500.h?ref=79eefb0dd2ba75119f3c722f775b9d60d056f8ac", "patch": "@@ -47,6 +47,8 @@\n       }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n \n+/* Override rs6000.h definition.  */\n+#undef HARD_REGNO_CALLER_SAVE_MODE\n /* When setting up caller-save slots (MODE == VOIDmode) ensure we\n    allocate space for DFmode.  Save gprs in the correct mode too.  */\n #define HARD_REGNO_CALLER_SAVE_MODE(REGNO, NREGS, MODE) \\"}, {"sha": "49134568b71359e1cd7aa17fc4ee92d401c02042", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79eefb0dd2ba75119f3c722f775b9d60d056f8ac/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79eefb0dd2ba75119f3c722f775b9d60d056f8ac/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=79eefb0dd2ba75119f3c722f775b9d60d056f8ac", "patch": "@@ -1005,6 +1005,16 @@ extern unsigned rs6000_pointer_size;\n \n #define HARD_REGNO_NREGS(REGNO, MODE) rs6000_hard_regno_nregs[(MODE)][(REGNO)]\n \n+/* When setting up caller-save slots (MODE == VOIDmode) ensure we allocate\n+   enough space to account for vectors in FP regs. */\n+#define HARD_REGNO_CALLER_SAVE_MODE(REGNO, NREGS, MODE)\t\\\n+  (TARGET_VSX\t\t\t\t\t\t\\\n+   && ((MODE) == VOIDmode || VSX_VECTOR_MODE (MODE)\t\\\n+       || ALTIVEC_VECTOR_MODE (MODE))\t\t\t\\\n+   && FP_REGNO_P (REGNO)\t\t\t\t\\\n+   ? V2DFmode\t\t\t\t\t\t\\\n+   : choose_hard_reg_mode ((REGNO), (NREGS), false))\n+\n #define HARD_REGNO_CALL_PART_CLOBBERED(REGNO, MODE)\t\t\t\\\n   (((TARGET_32BIT && TARGET_POWERPC64\t\t\t\t\t\\\n      && (GET_MODE_SIZE (MODE) > 4)\t\t\t\t\t\\"}, {"sha": "7635092e6963754063b1c0567e62a27bfb3f0c6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79eefb0dd2ba75119f3c722f775b9d60d056f8ac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79eefb0dd2ba75119f3c722f775b9d60d056f8ac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79eefb0dd2ba75119f3c722f775b9d60d056f8ac", "patch": "@@ -1,3 +1,8 @@\n+2011-03-07  Pat Haugen <pthaugen@us.ibm.com>\n+\n+\tPR target/47862\n+\t* gcc.target/powerpc/pr47862.c: New.\n+\n 2011-03-07  Jack Howarth <howarth@bromo.med.uc.edu>\n \n \tPR target/45413"}, {"sha": "528cace383cdd4930794f06bfc51d2845da503bc", "filename": "gcc/testsuite/gcc.target/powerpc/pr47862.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79eefb0dd2ba75119f3c722f775b9d60d056f8ac/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr47862.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79eefb0dd2ba75119f3c722f775b9d60d056f8ac/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr47862.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr47862.c?ref=79eefb0dd2ba75119f3c722f775b9d60d056f8ac", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-skip-if \"\" { powerpc*-*-darwin* } { \"*\" } { \"\" } } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-O2 -mcpu=power7\" } */\n+/* { dg-final { scan-assembler-not \"stfd\" } } */\n+\n+/* PR 47862: Verify caller-save spill of vectors in FP regs do not use\n+   legacy FP insns, which spill only half the vector.  */\n+extern vector double dd[15];\n+\n+vector double foo() {\n+  vector double a,b,c,d,e,f,g,h,i,j,k,l,m,n;\n+\n+  a=dd[1]; b=dd[2]; c=dd[3]; d=dd[4]; e=dd[5]; f=dd[6]; g=dd[7]; h=dd[8]; i=dd[9];\n+  j=dd[10]; k=dd[11]; l=dd[12]; m=dd[13]; n=dd[14];\n+  bar();\n+  return (a+b+c+d+e+f+g+h+i+j+k+l+m+n);\n+}\n+"}]}