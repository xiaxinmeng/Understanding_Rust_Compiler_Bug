{"sha": "0f04ebb49468bc99b58e8726b6ddcff47086d562", "node_id": "C_kwDOANBUbNoAKDBmMDRlYmI0OTQ2OGJjOTliNThlODcyNmI2ZGRjZmY0NzA4NmQ1NjI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-04-09T00:16:37Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-04-09T00:16:37Z"}, "message": "Daily bump.", "tree": {"sha": "45149dcfbd2b4ea8ec5b342e8d9208bc63dc5f60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45149dcfbd2b4ea8ec5b342e8d9208bc63dc5f60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f04ebb49468bc99b58e8726b6ddcff47086d562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f04ebb49468bc99b58e8726b6ddcff47086d562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f04ebb49468bc99b58e8726b6ddcff47086d562", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f04ebb49468bc99b58e8726b6ddcff47086d562/comments", "author": null, "committer": null, "parents": [{"sha": "101380a8394c22a7a2ea70de2060ee93716156e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/101380a8394c22a7a2ea70de2060ee93716156e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/101380a8394c22a7a2ea70de2060ee93716156e2"}], "stats": {"total": 118, "additions": 117, "deletions": 1}, "files": [{"sha": "6367bcec740fe239de670087d8fd1cfdfbeb5d6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f04ebb49468bc99b58e8726b6ddcff47086d562/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f04ebb49468bc99b58e8726b6ddcff47086d562/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f04ebb49468bc99b58e8726b6ddcff47086d562", "patch": "@@ -1,3 +1,18 @@\n+2023-04-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/109392\n+\t* tree-vect-generic.cc (tree_vec_extract): Handle failure\n+\tof maybe_push_res_to_seq better.\n+\n+2023-04-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Makefile.in (CORETYPES_H): Depend on align.h, poly-int.h and\n+\tpoly-int-types.h.\n+\t(SYSTEM_H): Depend on $(HASHTAB_H).\n+\t* config/riscv/t-riscv (build/genrvv-type-indexer.o): Remove unused\n+\tdependency on $(RTL_BASE_H), remove redundant dependency on\n+\tinsn-modes.h.\n+\n 2023-04-06  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/107674"}, {"sha": "d9c6ca6f33a1deb24891875f2afde7a4fc2d32bc", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f04ebb49468bc99b58e8726b6ddcff47086d562/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f04ebb49468bc99b58e8726b6ddcff47086d562/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=0f04ebb49468bc99b58e8726b6ddcff47086d562", "patch": "@@ -1 +1 @@\n-20230408\n+20230409"}, {"sha": "bed68444aff9f4720a187fcba8cee33f8514ef64", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f04ebb49468bc99b58e8726b6ddcff47086d562/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f04ebb49468bc99b58e8726b6ddcff47086d562/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0f04ebb49468bc99b58e8726b6ddcff47086d562", "patch": "@@ -1,3 +1,35 @@\n+2023-04-08  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/87477\n+\t* iresolve.cc (gfc_resolve_adjustl, gfc_resolve_adjustr): if\n+\tstring length is deferred use the string typespec for result.\n+\t* resolve.cc (resolve_assoc_var): Handle parentheses around the\n+\ttarget expression.\n+\t(resolve_block_construct): Remove unnecessary static decls.\n+\t* trans-array.cc (gfc_conv_expr_descriptor): Guard string len\n+\texpression in condition. Improve handling of string length and\n+\tspan, especially for substrings of the descriptor.\n+\t(duplicate_allocatable): Make element type more explicit with\n+\t'eltype'.\n+\t* trans-decl.cc (gfc_get_symbol_decl): Emit a fatal error with\n+\tappropriate message instead of ICE if symbol type is unknown.\n+\t(gfc_generate_function_code): Set current locus to proc_sym\n+\tdeclared_at.\n+\t* trans-expr.cc (gfc_get_expr_charlen): Retain last charlen in\n+\t'previous' and use if end expression in substring reference is\n+\tnull.\n+\t(gfc_conv_string_length): Use gfc_conv_expr_descriptor if\n+\t'expr_flat' is an array. Add post block to catch deallocation\n+\tof temporaries.\n+\t(gfc_conv_procedure_call): Assign the parmse string length to\n+\tthe expression string length, if it is deferred.\n+\t(gfc_trans_alloc_subarray_assign): If this is a deferred string\n+\tlength component, store the string length in the hidden comp.\n+\tUpdate the typespec length accordingly. Generate a new type\n+\tspec for the call to gfc_duplicate-allocatable in this case.\n+\t* trans-io.cc (gfc_trans_transfer): Scalarize transfer of\n+\tdeferred character array components.\n+\n 2023-04-04  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/104349"}, {"sha": "f127c66067f292f959e21e8a5cc17b9de5e622be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f04ebb49468bc99b58e8726b6ddcff47086d562/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f04ebb49468bc99b58e8726b6ddcff47086d562/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f04ebb49468bc99b58e8726b6ddcff47086d562", "patch": "@@ -1,3 +1,66 @@\n+2023-04-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/109392\n+\t* gcc.dg/pr109392.c: New test.\n+\n+2023-04-08  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* gcc.dg/pr84877.c: xfail on hppa*-*-*.\n+\n+2023-04-08  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* gcc.dg/long_branch.c: Use timeout factor 2.0 on hppa*-*-*.\n+\n+2023-04-08  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/87477\n+\tPR fortran/85686\n+\tPR fortran/88247\n+\tPR fortran/91941\n+\tPR fortran/92779\n+\tPR fortran/93339\n+\tPR fortran/93813\n+\tPR fortran/100948\n+\tPR fortran/102106\n+\tPR fortran/98408\n+\tPR fortran/105205\n+\tPR fortran/106918\n+\t* gfortran.dg/associate_47.f90 : Enable substring test.\n+\t* gfortran.dg/associate_51.f90 : Update an error message.\n+\t* gfortran.dg/goacc/array-with-dt-2.f90 : Add span to\n+\tuninitialzed dg-warnings.\n+\t* gfortran.dg/associate_60.f90 : New test\n+\t* gfortran.dg/pr98408.f90 : New test\n+\t* gfortran.dg/pr105205.f90 : New test\n+\t* gfortran.dg/pr106918.f90 : New test\n+\n+2023-04-08   Paul Thomas  <pault@gcc.gnu.org>\n+\n+\t* gfortran.dg/c-interop/allocatable-optional-pointer.f90 : Fix\n+\tdg directive and remove trailing whitespace.\n+\t* gfortran.dg/c-interop/c407a-1.f90 : ditto\n+\t* gfortran.dg/c-interop/c407b-1.f90 : ditto\n+\t* gfortran.dg/c-interop/c407b-2.f90 : ditto\n+\t* gfortran.dg/c-interop/c407c-1.f90 : ditto\n+\t* gfortran.dg/c-interop/c535a-1.f90 : ditto\n+\t* gfortran.dg/c-interop/c535a-2.f90 : ditto\n+\t* gfortran.dg/c-interop/c535b-1.f90 : ditto\n+\t* gfortran.dg/c-interop/c535b-2.f90 : ditto\n+\t* gfortran.dg/c-interop/c535b-3.f90 : ditto\n+\t* gfortran.dg/c-interop/c535c-1.f90 : ditto\n+\t* gfortran.dg/c-interop/c535c-2.f90 : ditto\n+\t* gfortran.dg/c-interop/deferred-character-1.f90 : ditto\n+\t* gfortran.dg/c-interop/removed-restrictions-1.f90 : ditto\n+\t* gfortran.dg/c-interop/removed-restrictions-2.f90 : ditto\n+\t* gfortran.dg/c-interop/removed-restrictions-4.f90 : ditto\n+\t* gfortran.dg/c-interop/tkr.f90 : ditto\n+\t* gfortran.dg/class_result_10.f90 : ditto\n+\t* gfortran.dg/dtio_35.f90 : ditto\n+\t* gfortran.dg/gomp/affinity-clause-1.f90 : ditto\n+\t* gfortran.dg/pr103258.f90 : ditto\n+\t* gfortran.dg/pr59107.f90 : ditto\n+\t* gfortran.dg/pr93835.f08 : ditto\n+\n 2023-04-07  Alexandre Oliva  <oliva@adacore.com>\n \n \t* gcc.target/powerpc/ppc-fortran/ppc-fortran.exp: Test for"}, {"sha": "40de969d18c9e4c3f20d8e94e805521cef05c02f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f04ebb49468bc99b58e8726b6ddcff47086d562/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f04ebb49468bc99b58e8726b6ddcff47086d562/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=0f04ebb49468bc99b58e8726b6ddcff47086d562", "patch": "@@ -1,3 +1,9 @@\n+2023-04-08  Tetsuma Hoshino  <t-hoshino@pony-e.jp>\n+\n+\tPR target/109402\n+\t* config/v850/lib1funcs.S (___muldi3): Remove unnecessary\n+\tstack manipulations.\n+\n 2023-04-05  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR target/109374"}]}