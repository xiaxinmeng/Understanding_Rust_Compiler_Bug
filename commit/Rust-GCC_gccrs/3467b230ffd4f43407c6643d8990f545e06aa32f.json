{"sha": "3467b230ffd4f43407c6643d8990f545e06aa32f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ2N2IyMzBmZmQ0ZjQzNDA3YzY2NDNkODk5MGY1NDVlMDZhYTMyZg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2008-02-05T04:17:58Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2008-02-05T04:17:58Z"}, "message": "http://gcc.gnu.org/ml/gcc-patches/2008-02/msg00110.html\n\n\tPR 33738\n\t* tree-vrp.c (vrp_evaluate_conditional): With\n\t-Wtype-limits, emit a warning when comparing against a\n\tconstant outside the natural range of OP0's type.\n\ntestsuite/ChangeLog\n\n\tPR 33738\n\t* testsuite/g++.dg/warn/pr33738.C: New.\n\nFrom-SVN: r132111", "tree": {"sha": "120cc926d9831ee3f75941a07032ac3ae6176d78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/120cc926d9831ee3f75941a07032ac3ae6176d78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3467b230ffd4f43407c6643d8990f545e06aa32f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3467b230ffd4f43407c6643d8990f545e06aa32f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3467b230ffd4f43407c6643d8990f545e06aa32f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3467b230ffd4f43407c6643d8990f545e06aa32f/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b452c14185d1be92fa936611ecf84dfe475b703c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b452c14185d1be92fa936611ecf84dfe475b703c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b452c14185d1be92fa936611ecf84dfe475b703c"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "13b13df11330ce7b4621de05c699e1c8821a40a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3467b230ffd4f43407c6643d8990f545e06aa32f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3467b230ffd4f43407c6643d8990f545e06aa32f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3467b230ffd4f43407c6643d8990f545e06aa32f", "patch": "@@ -1,3 +1,12 @@\n+2008-02-04  Diego Novillo  <dnovillo@google.com>\n+\n+\thttp://gcc.gnu.org/ml/gcc-patches/2008-02/msg00110.html\n+\n+\tPR 33738\n+\t* tree-vrp.c (vrp_evaluate_conditional): With\n+\t-Wtype-limits, emit a warning when comparing against a\n+\tconstant outside the natural range of OP0's type.\n+\n 2008-02-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/33631"}, {"sha": "cc6a362b1102be91dfdaceebd49078f87eb7fa35", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3467b230ffd4f43407c6643d8990f545e06aa32f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3467b230ffd4f43407c6643d8990f545e06aa32f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3467b230ffd4f43407c6643d8990f545e06aa32f", "patch": "@@ -1,3 +1,10 @@\n+2008-02-04  Diego Novillo  <dnovillo@google.com>\n+\n+\thttp://gcc.gnu.org/ml/gcc-patches/2008-02/msg00110.html\n+\n+\tPR 33738\n+\t* testsuite/g++.dg/warn/pr33738.C: New.\n+\n 2008-02-04  Daniel Franke  <franke.daniel@gmail.com>\n \n \t* gfortran.dg/where_operator_assign_4.f90: Fix typo in error message"}, {"sha": "8847b6e342cd6449ffef548bcb2e5e454412c5d6", "filename": "gcc/testsuite/g++.dg/warn/pr33738.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3467b230ffd4f43407c6643d8990f545e06aa32f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr33738.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3467b230ffd4f43407c6643d8990f545e06aa32f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr33738.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr33738.C?ref=3467b230ffd4f43407c6643d8990f545e06aa32f", "patch": "@@ -0,0 +1,26 @@\n+// { dg-do run }\n+// { dg-options \"-O2 -Wtype-limits\" }\n+extern void link_error (void);\n+\n+enum Alpha {\n+ ZERO = 0, ONE, TWO, THREE\n+};\n+\n+Alpha a2;\n+\n+int m1 = -1;\n+int GetM1() {\n+ return m1;\n+}\n+\n+int main() {\n+ a2 = static_cast<Alpha>(GetM1());\n+ if (a2 == -1) {\t// { dg-warning \"always false due\" }\n+    link_error ();\n+ }\n+ if (-1 == a2) {\t// { dg-warning \"always false due\" }\n+    link_error ();\n+ }\n+ return 0;\n+}\n+"}, {"sha": "9b9cc030d7fbe78e5dea5760cb774a7a2929ada6", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3467b230ffd4f43407c6643d8990f545e06aa32f/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3467b230ffd4f43407c6643d8990f545e06aa32f/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=3467b230ffd4f43407c6643d8990f545e06aa32f", "patch": "@@ -5073,6 +5073,48 @@ vrp_evaluate_conditional (tree cond, tree stmt)\n \t}\n     }\n \n+  if (warn_type_limits\n+      && ret\n+      && TREE_CODE_CLASS (TREE_CODE (cond)) == tcc_comparison)\n+    {\n+      /* If the comparison is being folded and the operand on the LHS\n+\t is being compared against a constant value that is outside of\n+\t the natural range of OP0's type, then the predicate will\n+\t always fold regardless of the value of OP0.  If -Wtype-limits\n+\t was specified, emit a warning.  */\n+      const char *warnmsg = NULL;\n+      tree op0 = TREE_OPERAND (cond, 0);\n+      tree op1 = TREE_OPERAND (cond, 1);\n+      tree type = TREE_TYPE (op0);\n+      value_range_t *vr0 = get_value_range (op0);\n+\n+      if (vr0->type != VR_VARYING\n+\t  && INTEGRAL_TYPE_P (type)\n+\t  && vrp_val_is_min (vr0->min)\n+\t  && vrp_val_is_max (vr0->max)\n+\t  && is_gimple_min_invariant (op1))\n+\t{\n+\t  if (integer_zerop (ret))\n+\t    warnmsg = G_(\"comparison always false due to limited range of \"\n+\t\t         \"data type\");\n+\t  else\n+\t    warnmsg = G_(\"comparison always true due to limited range of \"\n+\t\t\t \"data type\");\n+\t}\n+\n+      if (warnmsg)\n+\t{\n+\t  location_t locus;\n+\n+\t  if (!EXPR_HAS_LOCATION (stmt))\n+\t    locus = input_location;\n+\t  else\n+\t    locus = EXPR_LOCATION (stmt);\n+\n+\t  warning (OPT_Wextra, \"%H%s\", &locus, warnmsg);\n+\t}\n+    }\n+\n   return ret;\n }\n "}]}