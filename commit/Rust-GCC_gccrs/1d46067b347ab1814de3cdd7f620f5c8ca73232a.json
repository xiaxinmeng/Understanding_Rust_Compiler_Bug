{"sha": "1d46067b347ab1814de3cdd7f620f5c8ca73232a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ0NjA2N2IzNDdhYjE4MTRkZTNjZGQ3ZjYyMGY1YzhjYTczMjMyYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-07-23T00:34:38Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-07-23T00:34:38Z"}, "message": "compiler: follow-on fix for finalizing imported methods\n    \n    This patch is a revision to CL 185518, which added code to perform\n    finalization of methods on types created by the importer and not\n    directly reachable until inlining is done.\n    \n    The original fix invoked the finalization code at the end of\n    Import::read_types(), but it turns out this doesn't handle the case\n    where a type with methods is read in due to a reference from something\n    later in the export data (a function or variable). The fix is to move\n    the import finalization call to the end of Import::import().\n    \n    Testcase for this bug is in CL 187057.\n    \n    Fixes golang/go#33219.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/187058\n\nFrom-SVN: r273713", "tree": {"sha": "347f784d5b19e1702eed59c9479fec0c5496c742", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/347f784d5b19e1702eed59c9479fec0c5496c742"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d46067b347ab1814de3cdd7f620f5c8ca73232a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d46067b347ab1814de3cdd7f620f5c8ca73232a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d46067b347ab1814de3cdd7f620f5c8ca73232a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d46067b347ab1814de3cdd7f620f5c8ca73232a/comments", "author": null, "committer": null, "parents": [{"sha": "22e4efa142acc9c7cdabc4ace27e306b8e807a56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22e4efa142acc9c7cdabc4ace27e306b8e807a56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22e4efa142acc9c7cdabc4ace27e306b8e807a56"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "dabd5a30989c0dca34970591dabf05fa09800734", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46067b347ab1814de3cdd7f620f5c8ca73232a/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46067b347ab1814de3cdd7f620f5c8ca73232a/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=1d46067b347ab1814de3cdd7f620f5c8ca73232a", "patch": "@@ -1,4 +1,4 @@\n-e242929304e7a524ced56dc94605bbf6d83e6489\n+b7bce0dbccb978d33eb8ce0bffc02fae2c2857c1\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "64c1ef2d9e3e7ec127c060deb9a6b7c094b2c58f", "filename": "gcc/go/gofrontend/import.cc", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46067b347ab1814de3cdd7f620f5c8ca73232a/gcc%2Fgo%2Fgofrontend%2Fimport.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46067b347ab1814de3cdd7f620f5c8ca73232a/gcc%2Fgo%2Fgofrontend%2Fimport.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fimport.cc?ref=1d46067b347ab1814de3cdd7f620f5c8ca73232a", "patch": "@@ -450,6 +450,14 @@ Import::import(Gogo* gogo, const std::string& local_name,\n       this->require_c_string(\"\\n\");\n     }\n \n+  // Finalize methods for any imported types. This call is made late in the\n+  // import process so as to A) avoid finalization of a type whose methods\n+  // refer to types that are only partially read in, and B) capture both the\n+  // types imported by read_types() directly, and those imported indirectly\n+  // because they are referenced by an imported function or variable.\n+  // See issues #33013 and #33219 for more on why this is needed.\n+  this->finalize_methods();\n+\n   return this->package_;\n }\n \n@@ -678,12 +686,6 @@ Import::read_types()\n \tthis->gogo_->add_named_type(nt);\n     }\n \n-  // Finalize methods for any imported types. This is done after most of\n-  // read_types() is complete so as to avoid method finalization of a type\n-  // whose methods refer to types that are only partially read in.\n-  // See issue #33013 for more on why this is needed.\n-  this->finalize_methods();\n-\n   return true;\n }\n "}]}