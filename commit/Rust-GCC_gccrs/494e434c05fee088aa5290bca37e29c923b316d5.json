{"sha": "494e434c05fee088aa5290bca37e29c923b316d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk0ZTQzNGMwNWZlZTA4OGFhNTI5MGJjYTM3ZTI5YzkyM2IzMTZkNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-27T08:38:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-27T08:38:12Z"}, "message": "maintainer-scripts: Speed up git clone in gcc_release\n\nWhen doing the 8.4-rc1, I've noticed (probably also because of the dying\ndisk on sourceware) that git clone is extremely slow, and furthermore when\nall of us have some local snapshots, it is a waste of resources to download\neverything again.  Especially for the -f runs when we'll need to wait until\ngit tag -s asks us for a gpg password interactively.\n\nThe following patch adds an option through which one can point the script\nat a local gcc .git directory from which it can --dissociate --reference ...\nduring cloning to speed it up.\n\n2020-02-27  Jakub Jelinek  <jakub@redhat.com>\n\n\t* gcc_release: Add support for -b local-git-repo argument.", "tree": {"sha": "566563d731354623b8fb76aa15e14484ac24a4a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/566563d731354623b8fb76aa15e14484ac24a4a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/494e434c05fee088aa5290bca37e29c923b316d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/494e434c05fee088aa5290bca37e29c923b316d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/494e434c05fee088aa5290bca37e29c923b316d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/494e434c05fee088aa5290bca37e29c923b316d5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf70bb0fbd7fb0f4bca99c53a36d0a389dcc2fc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf70bb0fbd7fb0f4bca99c53a36d0a389dcc2fc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf70bb0fbd7fb0f4bca99c53a36d0a389dcc2fc5"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "4efd47569d438af82e724b930cbf39723f2e5577", "filename": "maintainer-scripts/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/494e434c05fee088aa5290bca37e29c923b316d5/maintainer-scripts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/494e434c05fee088aa5290bca37e29c923b316d5/maintainer-scripts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2FChangeLog?ref=494e434c05fee088aa5290bca37e29c923b316d5", "patch": "@@ -1,3 +1,7 @@\n+2020-02-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc_release: Add support for -b local-git-repo argument.\n+\n 2020-01-13  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* update_web_docs_libstdcxx_git: New file."}, {"sha": "74cce1af18d3f341c291d939a914150feab69ae7", "filename": "maintainer-scripts/gcc_release", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/494e434c05fee088aa5290bca37e29c923b316d5/maintainer-scripts%2Fgcc_release", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/494e434c05fee088aa5290bca37e29c923b316d5/maintainer-scripts%2Fgcc_release", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fgcc_release?ref=494e434c05fee088aa5290bca37e29c923b316d5", "patch": "@@ -9,7 +9,7 @@\n # Contents:\n #   Script to create a GCC release.\n #\n-# Copyright (c) 2001-2018 Free Software Foundation.\n+# Copyright (c) 2001-2020 Free Software Foundation.\n #\n # This file is part of GCC.\n #\n@@ -78,6 +78,7 @@ Options:\n   -p previous-tarball  Location of a previous tarball (to generate diff files).\n   -t tag               Tag to mark the release in git.\n   -u username          Username for upload operations.\n+  -b local-git-repo    Local git repository to speed up cloning.\n EOF\n     exit 1\n }\n@@ -103,8 +104,14 @@ build_sources() {\n   changedir \"${WORKING_DIRECTORY}\"\n \n   # Check out the sources.\n-  ${GIT} clone -q -b \"${GITBRANCH}\" \"${GITROOT}\" \"`basename ${SOURCE_DIRECTORY}`\" || \\\n-      error \"Could not check out release sources\"\n+  if [ -n \"${GIT_REFERENCE}\" ]; then\n+    ${GIT} clone -q --dissociate --reference \"${GIT_REFERENCE}\" \\\n+\t\t -b \"${GITBRANCH}\" \"${GITROOT}\" \"`basename ${SOURCE_DIRECTORY}`\" || \\\n+        error \"Could not check out release sources\"\n+  else\n+    ${GIT} clone -q -b \"${GITBRANCH}\" \"${GITROOT}\" \"`basename ${SOURCE_DIRECTORY}`\" || \\\n+        error \"Could not check out release sources\"\n+  fi\n \n   # If this is a final release, make sure that the ChangeLogs\n   # and version strings are updated.\n@@ -567,6 +574,9 @@ TAG=\"\"\n # The old tarballs from which to generate diffs.\n OLD_TARS=\"\"\n \n+# Local gcc git checkout to speed up git cloning.\n+GIT_REFERENCE=\"\"\n+\n # The directory that will be used to construct the release.  The\n # release itself will be placed in a subdirectory of this directory.\n DESTINATION=${HOME}\n@@ -613,7 +623,7 @@ TAR=\"${TAR:-tar}\"\n ########################################################################\n \n # Parse the options.\n-while getopts \"d:fr:u:t:p:s:l\" ARG; do\n+while getopts \"d:fr:u:t:p:s:lb:\" ARG; do\n     case $ARG in\n     d)    DESTINATION=\"${OPTARG}\";;\n     r)    RELEASE=\"${OPTARG}\";;\n@@ -631,6 +641,7 @@ while getopts \"d:fr:u:t:p:s:l\" ARG; do\n           if [ ! -f ${OPTARG} ]; then\n \t    error \"-p argument must name a tarball\"\n \t  fi;;\n+    b)    GIT_REFERENCE=\"${OPTARG}\";;\n     \\?)   usage;;\n     esac\n done"}]}