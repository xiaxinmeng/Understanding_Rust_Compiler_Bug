{"sha": "fb5c309d63100120db3c2656a0e518eca7941ecd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI1YzMwOWQ2MzEwMDEyMGRiM2MyNjU2YTBlNTE4ZWNhNzk0MWVjZA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2005-12-18T09:39:23Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2005-12-18T09:39:23Z"}, "message": "post: New.\n\n2005-12-18  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* config/abi/post: New.\n\t* config/abi/*-linux-gnu: Move to..\n\t* config/abi/post/*-linux-gnu: ... here.\t\n\t* config/abi/pre: New.\n\t* config/linker-map.gnu: Move to ..\n\t* config/abi/pre/gnu.ver: ... here.\t\n\t* config/linker-map.dummy: Move to..\n\t* config/abi/pre/none.ver: ... here.\n\t* src/Makefile.am: Use ENABLE_SYMVERS_GNU,\n\tENABLE_SYMVERS_DARWIN, ENABLE_SYMVERS_GNU_NAMESPACE.\n\tUse libstdc++-symbols.ver instead of libstdc++-symbol.ver.\n\t* src/Makefile.in: Regnerate.\n\t* acinclude.m4 (GLIBCXX_CONFIGURE_TESTSUITE): Adjust paths for new\n\tplacement of abi baseline files.\n\t(GLIBCXX_ENABLE_SYMVERS): Add ENABLE_SYMVERS, ENABLE_SYMVERS_GNU,\n\tENABLE_SYMVERS_DARWIN.  SYMVER_MAP to SYMVER_FILE.\n\t* configure: Regnerate.\n\t* config.h.in: Regnerate.\n\t* src/compatibility.cc: Adjust macro usage.\n\nFrom-SVN: r108748", "tree": {"sha": "c4844070b26856b310a5d96734ff82e54ca084dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4844070b26856b310a5d96734ff82e54ca084dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb5c309d63100120db3c2656a0e518eca7941ecd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5c309d63100120db3c2656a0e518eca7941ecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5c309d63100120db3c2656a0e518eca7941ecd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5c309d63100120db3c2656a0e518eca7941ecd/comments", "author": null, "committer": null, "parents": [{"sha": "e1111e8ebebd06ab2fcd02f9698d2ff90697a1b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1111e8ebebd06ab2fcd02f9698d2ff90697a1b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1111e8ebebd06ab2fcd02f9698d2ff90697a1b6"}], "stats": {"total": 357, "additions": 220, "deletions": 137}, "files": [{"sha": "60f7b8ef4dad7ea6299f0507b8fdb537716c70b3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -1,3 +1,25 @@\n+2005-12-18  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* config/abi/post: New.\n+\t* config/abi/*-linux-gnu: Move to..\n+\t* config/abi/post/*-linux-gnu: ... here.\t\n+\t* config/abi/pre: New.\n+\t* config/linker-map.gnu: Move to ..\n+\t* config/abi/pre/gnu.ver: ... here.\t\n+\t* config/linker-map.dummy: Move to..\n+\t* config/abi/pre/none.ver: ... here.\n+\t* src/Makefile.am: Use ENABLE_SYMVERS_GNU,\n+\tENABLE_SYMVERS_DARWIN, ENABLE_SYMVERS_GNU_NAMESPACE.\n+\tUse libstdc++-symbols.ver instead of libstdc++-symbol.ver.\n+\t* src/Makefile.in: Regnerate.\n+\t* acinclude.m4 (GLIBCXX_CONFIGURE_TESTSUITE): Adjust paths for new\n+\tplacement of abi baseline files.\n+\t(GLIBCXX_ENABLE_SYMVERS): Add ENABLE_SYMVERS, ENABLE_SYMVERS_GNU,\n+\tENABLE_SYMVERS_DARWIN.  SYMVER_MAP to SYMVER_FILE.\n+\t* configure: Regnerate.\n+\t* config.h.in: Regnerate.\n+\t* src/compatibility.cc: Adjust macro usage.\n+\t\n 2005-12-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n         * src/io-inst.cc: Separate instantiations into..."}, {"sha": "f7d0f70740ee353c5c10f21285b575d7f3314cf4", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -131,10 +131,12 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n-ENABLE_SYMVERS_DARWIN_EXPORT_FALSE = @ENABLE_SYMVERS_DARWIN_EXPORT_FALSE@\n-ENABLE_SYMVERS_DARWIN_EXPORT_TRUE = @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@\n+ENABLE_SYMVERS_DARWIN_FALSE = @ENABLE_SYMVERS_DARWIN_FALSE@\n+ENABLE_SYMVERS_DARWIN_TRUE = @ENABLE_SYMVERS_DARWIN_TRUE@\n+ENABLE_SYMVERS_FALSE = @ENABLE_SYMVERS_FALSE@\n ENABLE_SYMVERS_GNU_FALSE = @ENABLE_SYMVERS_GNU_FALSE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n+ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@\n@@ -183,7 +185,7 @@ SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n-SYMVER_MAP = @SYMVER_MAP@\n+SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@"}, {"sha": "d32c799644806765e776b5816c08c55420483256", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 39, "deletions": 28, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -577,7 +577,7 @@ AC_DEFUN([GLIBCXX_CONFIGURE_TESTSUITE], [\n   fi\n   \n   # Export file names for ABI checking.\n-  baseline_dir=\"$glibcxx_srcdir/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n+  baseline_dir=\"$glibcxx_srcdir/config/abi/post/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n   AC_SUBST(baseline_dir)\n ])\n \n@@ -1685,32 +1685,35 @@ AC_DEFUN([GLIBCXX_ENABLE_SYMVERS], [\n \n GLIBCXX_ENABLE(symvers,$1,[=STYLE],\n   [enables symbol versioning of the shared library],\n-  [permit yes|no|gnu|darwin-export])\n+  [permit yes|no|gnu|darwin|darwin-export])\n \n # If we never went through the GLIBCXX_CHECK_LINKER_FEATURES macro, then we\n # don't know enough about $LD to do tricks...\n AC_REQUIRE([GLIBCXX_CHECK_LINKER_FEATURES])\n \n # Turn a 'yes' into a suitable default.\n if test x$enable_symvers = xyes ; then\n-  if test $enable_shared = no ||\n-     test \"x$LD\" = x ; then\n+  if test $enable_shared = no || test \"x$LD\" = x ; then\n     enable_symvers=no\n-  elif test $with_gnu_ld = yes ; then\n-    enable_symvers=gnu\n   else\n-    case ${target_os} in\n-      darwin*)\n-\tenable_symvers=darwin-export ;;\n-      *)\n-      AC_MSG_WARN([=== You have requested some kind of symbol versioning, but])\n-      AC_MSG_WARN([=== you are not using a supported linker.])\n-      AC_MSG_WARN([=== Symbol versioning will be disabled.])\n-\tenable_symvers=no ;;\n-    esac\n+    if test $with_gnu_ld = yes ; then\n+      enable_symvers=gnu\n+    else\n+      case ${target_os} in\n+        darwin*)\n+\t  enable_symvers=darwin ;;\n+        *)\n+          enable_symvers=no ;;\n+      esac\n+    fi\n   fi\n fi\n \n+# Check to see if 'darwin' or 'darwin-export' can win.\n+if test x$enable_symvers = xdarwin-export ; then\n+    enable_symvers=darwin\n+fi\n+\n # Check to see if 'gnu' can win.\n if test $enable_symvers = gnu; then\n   # Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n@@ -1768,18 +1771,33 @@ fi\n # Everything parsed; figure out what file to use.\n case $enable_symvers in\n   no)\n-    SYMVER_MAP=config/linker-map.dummy\n+    SYMVER_FILE=config/abi/pre/none.ver\n     ;;\n   gnu)\n-    SYMVER_MAP=config/linker-map.gnu\n-    AC_DEFINE(_GLIBCXX_SYMVER, 1, \n-              [Define to use GNU symbol versioning in the shared library.])\n+    SYMVER_FILE=config/abi/pre/gnu.ver\n+    AC_DEFINE(_GLIBCXX_SYMVER_GNU, 1, \n+              [Define to use GNU versioning in the shared library.])\n     ;;\n-  darwin-export)\n-    SYMVER_MAP=config/linker-map.gnu\n+  darwin)\n+    SYMVER_FILE=config/abi/pre/gnu.ver\n+    AC_DEFINE(_GLIBCXX_SYMVER_DARWIN, 1, \n+              [Define to use darwin versioning in the shared library.])\n     ;;\n esac\n \n+if test x$enable_symvers != xno ; then\n+  AC_DEFINE(_GLIBCXX_SYMVER, 1,\n+\t [Define to use symbol versioning in the shared library.])\n+fi\n+\n+AC_SUBST(SYMVER_FILE)\n+AC_SUBST(port_specific_symbol_files)\n+GLIBCXX_CONDITIONAL(ENABLE_SYMVERS, test $enable_symvers != no)\n+GLIBCXX_CONDITIONAL(ENABLE_SYMVERS_GNU, test $enable_symvers = gnu)\n+GLIBCXX_CONDITIONAL(ENABLE_SYMVERS_DARWIN, test $enable_symvers = darwin)\n+AC_MSG_NOTICE(versioning on shared library symbols is $enable_symvers)\n+\n+# Now, set up compatibility support, if any.\n # In addition, need this to deal with std::size_t mangling in\n # src/compatibility.cc.  In a perfect world, could use\n # typeid(std::size_t).name()[0] to do direct substitution.\n@@ -1804,13 +1822,6 @@ if test \"$glibcxx_ptrdiff_t_is_i\" = yes; then\n   AC_DEFINE(_GLIBCXX_PTRDIFF_T_IS_INT, 1, [Define if ptrdiff_t is int.])\n fi\n AC_MSG_RESULT([$glibcxx_ptrdiff_t_is_i])\n-\n-AC_SUBST(SYMVER_MAP)\n-AC_SUBST(port_specific_symbol_files)\n-GLIBCXX_CONDITIONAL(ENABLE_SYMVERS_GNU, test $enable_symvers = gnu)\n-GLIBCXX_CONDITIONAL(ENABLE_SYMVERS_DARWIN_EXPORT, dnl\n-  test $enable_symvers = darwin-export)\n-AC_MSG_NOTICE(versioning on shared library symbols is $enable_symvers)\n ])\n \n "}, {"sha": "124ce6e2c8a3899b87c425c302e70facaa535910", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -670,9 +670,15 @@\n /* Define if the compiler is configured for setjmp/longjmp exceptions. */\n #undef _GLIBCXX_SJLJ_EXCEPTIONS\n \n-/* Define to use GNU symbol versioning in the shared library. */\n+/* Define to use symbol versioning in the shared library. */\n #undef _GLIBCXX_SYMVER\n \n+/* Define to use darwin versioning in the shared library. */\n+#undef _GLIBCXX_SYMVER_DARWIN\n+\n+/* Define to use GNU versioning in the shared library. */\n+#undef _GLIBCXX_SYMVER_GNU\n+\n /* Define if C99 functions or macros from <wchar.h>, <math.h>, <complex.h>,\n    <stdio.h>, and <stdlib.h> can be used or exposed. */\n #undef _GLIBCXX_USE_C99"}, {"sha": "3a4568bfec64ee4357cb91a92fb6bd9a773d4a3d", "filename": "libstdc++-v3/config/abi/post/alpha-linux-gnu/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Falpha-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Falpha-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Falpha-linux-gnu%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/alpha-linux-gnu/baseline_symbols.txt"}, {"sha": "f4ea1e3a174e7ab85ed5b90411a047b2a3ae3e4f", "filename": "libstdc++-v3/config/abi/post/hppa-linux-gnu/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fhppa-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fhppa-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fhppa-linux-gnu%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/hppa-linux-gnu/baseline_symbols.txt"}, {"sha": "6ee44ab042d83ed39c60cbba55eb2f82bdc25fe0", "filename": "libstdc++-v3/config/abi/post/i386-linux-gnu/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-linux-gnu%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/i386-linux-gnu/baseline_symbols.txt"}, {"sha": "6ee44ab042d83ed39c60cbba55eb2f82bdc25fe0", "filename": "libstdc++-v3/config/abi/post/i486-linux-gnu/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi486-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi486-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi486-linux-gnu%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/i486-linux-gnu/baseline_symbols.txt"}, {"sha": "2e3c5e507748187c5f12dc94d7755f398981f954", "filename": "libstdc++-v3/config/abi/post/ia64-linux-gnu/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fia64-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fia64-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fia64-linux-gnu%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/ia64-linux-gnu/baseline_symbols.txt"}, {"sha": "f4ea1e3a174e7ab85ed5b90411a047b2a3ae3e4f", "filename": "libstdc++-v3/config/abi/post/mips-linux-gnu/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fmips-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fmips-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fmips-linux-gnu%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/mips-linux-gnu/baseline_symbols.txt"}, {"sha": "f4ea1e3a174e7ab85ed5b90411a047b2a3ae3e4f", "filename": "libstdc++-v3/config/abi/post/powerpc-linux-gnu/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fpowerpc-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fpowerpc-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fpowerpc-linux-gnu%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/powerpc-linux-gnu/baseline_symbols.txt"}, {"sha": "f4ea1e3a174e7ab85ed5b90411a047b2a3ae3e4f", "filename": "libstdc++-v3/config/abi/post/powerpc64-linux-gnu/32/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fpowerpc64-linux-gnu%2F32%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fpowerpc64-linux-gnu%2F32%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fpowerpc64-linux-gnu%2F32%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/powerpc64-linux-gnu/32/baseline_symbols.txt"}, {"sha": "3a4568bfec64ee4357cb91a92fb6bd9a773d4a3d", "filename": "libstdc++-v3/config/abi/post/powerpc64-linux-gnu/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fpowerpc64-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fpowerpc64-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fpowerpc64-linux-gnu%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/powerpc64-linux-gnu/baseline_symbols.txt"}, {"sha": "8c0278771cdb8fe88d5542cdf582c9f2ccee34ea", "filename": "libstdc++-v3/config/abi/post/s390-linux-gnu/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fs390-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fs390-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fs390-linux-gnu%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/s390-linux-gnu/baseline_symbols.txt"}, {"sha": "3a4568bfec64ee4357cb91a92fb6bd9a773d4a3d", "filename": "libstdc++-v3/config/abi/post/s390x-linux-gnu/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fs390x-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fs390x-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fs390x-linux-gnu%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/s390x-linux-gnu/baseline_symbols.txt"}, {"sha": "f4ea1e3a174e7ab85ed5b90411a047b2a3ae3e4f", "filename": "libstdc++-v3/config/abi/post/sparc-linux-gnu/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-linux-gnu%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/sparc-linux-gnu/baseline_symbols.txt"}, {"sha": "6ee44ab042d83ed39c60cbba55eb2f82bdc25fe0", "filename": "libstdc++-v3/config/abi/post/x86_64-linux-gnu/32/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fx86_64-linux-gnu%2F32%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fx86_64-linux-gnu%2F32%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fx86_64-linux-gnu%2F32%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/x86_64-linux-gnu/32/baseline_symbols.txt"}, {"sha": "69936065342740a94dd8c3ef6dbb42f2ad52aa3c", "filename": "libstdc++-v3/config/abi/post/x86_64-linux-gnu/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fx86_64-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fx86_64-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fx86_64-linux-gnu%2Fbaseline_symbols.txt?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/abi/x86_64-linux-gnu/baseline_symbols.txt"}, {"sha": "fa13a614e2e1bec7751639b69e33ac7e7efb0b5e", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/linker-map.gnu"}, {"sha": "58e14135388e34b4300e53f5320c935de986553a", "filename": "libstdc++-v3/config/abi/pre/none.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fnone.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fnone.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fnone.ver?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "previous_filename": "libstdc++-v3/config/linker-map.dummy"}, {"sha": "246e520da1b38c2b85c0851b232693313844a1a1", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 77, "deletions": 42, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libtool_VERSION multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar glibcxx_builddir glibcxx_srcdir toplevel_srcdir CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LN_S AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBTOOL CXXCPP CPPFLAGS enable_shared enable_static GLIBCXX_HOSTED_TRUE GLIBCXX_HOSTED_FALSE GLIBCXX_BUILD_PCH_TRUE GLIBCXX_BUILD_PCH_FALSE glibcxx_PCHFLAGS CSTDIO_H BASIC_FILE_H BASIC_FILE_CC CPP EGREP check_msgfmt glibcxx_MOFILES glibcxx_POFILES glibcxx_localedir USE_NLS CLOCALE_H CMESSAGES_H CCODECVT_CC CCOLLATE_CC CCTYPE_CC CMESSAGES_CC CMONEY_CC CNUMERIC_CC CTIME_H CTIME_CC CLOCALE_CC CLOCALE_INTERNAL_H ALLOCATOR_H ALLOCATOR_NAME C_INCLUDE_DIR GLIBCXX_C_HEADERS_C_TRUE GLIBCXX_C_HEADERS_C_FALSE GLIBCXX_C_HEADERS_C_STD_TRUE GLIBCXX_C_HEADERS_C_STD_FALSE GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE DEBUG_FLAGS GLIBCXX_BUILD_DEBUG_TRUE GLIBCXX_BUILD_DEBUG_FALSE EXTRA_CXX_FLAGS glibcxx_thread_h WERROR SECTION_FLAGS SECTION_LDFLAGS OPT_LDFLAGS LIBMATHOBJS LIBICONV SYMVER_MAP port_specific_symbol_files ENABLE_SYMVERS_GNU_TRUE ENABLE_SYMVERS_GNU_FALSE ENABLE_SYMVERS_DARWIN_EXPORT_TRUE ENABLE_SYMVERS_DARWIN_EXPORT_FALSE baseline_dir ATOMICITY_SRCDIR ATOMIC_WORD_SRCDIR CPU_DEFINES_SRCDIR ABI_TWEAKS_SRCDIR OS_INC_SRCDIR glibcxx_prefixdir gxx_include_dir glibcxx_toolexecdir glibcxx_toolexeclibdir GLIBCXX_INCLUDES TOPLEVEL_INCLUDES OPTIMIZE_CXXFLAGS WARN_FLAGS LIBSUPCXX_PICFLAGS LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libtool_VERSION multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar glibcxx_builddir glibcxx_srcdir toplevel_srcdir CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LN_S AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBTOOL CXXCPP CPPFLAGS enable_shared enable_static GLIBCXX_HOSTED_TRUE GLIBCXX_HOSTED_FALSE GLIBCXX_BUILD_PCH_TRUE GLIBCXX_BUILD_PCH_FALSE glibcxx_PCHFLAGS CSTDIO_H BASIC_FILE_H BASIC_FILE_CC CPP EGREP check_msgfmt glibcxx_MOFILES glibcxx_POFILES glibcxx_localedir USE_NLS CLOCALE_H CMESSAGES_H CCODECVT_CC CCOLLATE_CC CCTYPE_CC CMESSAGES_CC CMONEY_CC CNUMERIC_CC CTIME_H CTIME_CC CLOCALE_CC CLOCALE_INTERNAL_H ALLOCATOR_H ALLOCATOR_NAME C_INCLUDE_DIR GLIBCXX_C_HEADERS_C_TRUE GLIBCXX_C_HEADERS_C_FALSE GLIBCXX_C_HEADERS_C_STD_TRUE GLIBCXX_C_HEADERS_C_STD_FALSE GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE DEBUG_FLAGS GLIBCXX_BUILD_DEBUG_TRUE GLIBCXX_BUILD_DEBUG_FALSE EXTRA_CXX_FLAGS glibcxx_thread_h WERROR SECTION_FLAGS SECTION_LDFLAGS OPT_LDFLAGS LIBMATHOBJS LIBICONV SYMVER_FILE port_specific_symbol_files ENABLE_SYMVERS_TRUE ENABLE_SYMVERS_FALSE ENABLE_SYMVERS_GNU_TRUE ENABLE_SYMVERS_GNU_FALSE ENABLE_SYMVERS_DARWIN_TRUE ENABLE_SYMVERS_DARWIN_FALSE baseline_dir ATOMICITY_SRCDIR ATOMIC_WORD_SRCDIR CPU_DEFINES_SRCDIR ABI_TWEAKS_SRCDIR OS_INC_SRCDIR glibcxx_prefixdir gxx_include_dir glibcxx_toolexecdir glibcxx_toolexeclibdir GLIBCXX_INCLUDES TOPLEVEL_INCLUDES OPTIMIZE_CXXFLAGS WARN_FLAGS LIBSUPCXX_PICFLAGS LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -87368,7 +87368,7 @@ if test \"${enable_symvers+set}\" = set; then\n   enableval=\"$enable_symvers\"\n \n       case \"$enableval\" in\n-       yes|no|gnu|darwin-export) ;;\n+       yes|no|gnu|darwin|darwin-export) ;;\n        *) { { echo \"$as_me:$LINENO: error: Unknown argument to enable/disable symvers\" >&5\n echo \"$as_me: error: Unknown argument to enable/disable symvers\" >&2;}\n    { (exit 1); exit 1; }; } ;;\n@@ -87385,27 +87385,27 @@ fi;\n \n # Turn a 'yes' into a suitable default.\n if test x$enable_symvers = xyes ; then\n-  if test $enable_shared = no ||\n-     test \"x$LD\" = x ; then\n+  if test $enable_shared = no || test \"x$LD\" = x ; then\n     enable_symvers=no\n-  elif test $with_gnu_ld = yes ; then\n-    enable_symvers=gnu\n   else\n-    case ${target_os} in\n-      darwin*)\n-\tenable_symvers=darwin-export ;;\n-      *)\n-      { echo \"$as_me:$LINENO: WARNING: === You have requested some kind of symbol versioning, but\" >&5\n-echo \"$as_me: WARNING: === You have requested some kind of symbol versioning, but\" >&2;}\n-      { echo \"$as_me:$LINENO: WARNING: === you are not using a supported linker.\" >&5\n-echo \"$as_me: WARNING: === you are not using a supported linker.\" >&2;}\n-      { echo \"$as_me:$LINENO: WARNING: === Symbol versioning will be disabled.\" >&5\n-echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n-\tenable_symvers=no ;;\n-    esac\n+    if test $with_gnu_ld = yes ; then\n+      enable_symvers=gnu\n+    else\n+      case ${target_os} in\n+        darwin*)\n+\t  enable_symvers=darwin ;;\n+        *)\n+          enable_symvers=no ;;\n+      esac\n+    fi\n   fi\n fi\n \n+# Check to see if 'darwin' or 'darwin-export' can win.\n+if test x$enable_symvers = xdarwin-export ; then\n+    enable_symvers=darwin\n+fi\n+\n # Check to see if 'gnu' can win.\n if test $enable_symvers = gnu; then\n   # Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n@@ -87573,21 +87573,43 @@ fi\n # Everything parsed; figure out what file to use.\n case $enable_symvers in\n   no)\n-    SYMVER_MAP=config/linker-map.dummy\n+    SYMVER_FILE=config/abi/pre/none.ver\n     ;;\n   gnu)\n-    SYMVER_MAP=config/linker-map.gnu\n+    SYMVER_FILE=config/abi/pre/gnu.ver\n \n cat >>confdefs.h <<\\_ACEOF\n-#define _GLIBCXX_SYMVER 1\n+#define _GLIBCXX_SYMVER_GNU 1\n _ACEOF\n \n     ;;\n-  darwin-export)\n-    SYMVER_MAP=config/linker-map.gnu\n+  darwin)\n+    SYMVER_FILE=config/abi/pre/gnu.ver\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define _GLIBCXX_SYMVER_DARWIN 1\n+_ACEOF\n+\n     ;;\n esac\n \n+if test x$enable_symvers != xno ; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define _GLIBCXX_SYMVER 1\n+_ACEOF\n+\n+fi\n+\n+\n+\n+\n+\n+\n+{ echo \"$as_me:$LINENO: versioning on shared library symbols is $enable_symvers\" >&5\n+echo \"$as_me: versioning on shared library symbols is $enable_symvers\" >&6;}\n+\n+# Now, set up compatibility support, if any.\n # In addition, need this to deal with std::size_t mangling in\n # src/compatibility.cc.  In a perfect world, could use\n # typeid(std::size_t).name()[0] to do direct substitution.\n@@ -87712,13 +87734,6 @@ echo \"$as_me:$LINENO: result: $glibcxx_ptrdiff_t_is_i\" >&5\n echo \"${ECHO_T}$glibcxx_ptrdiff_t_is_i\" >&6\n \n \n-\n-\n-\n-{ echo \"$as_me:$LINENO: versioning on shared library symbols is $enable_symvers\" >&5\n-echo \"$as_me: versioning on shared library symbols is $enable_symvers\" >&6;}\n-\n-\n # This depends on GLIBCXX_ENABLE_SYMVERS and GLIBCXX_IS_NATIVE.\n \n   if $GLIBCXX_IS_NATIVE ; then\n@@ -88460,7 +88475,7 @@ done\n   fi\n \n   # Export file names for ABI checking.\n-  baseline_dir=\"$glibcxx_srcdir/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n+  baseline_dir=\"$glibcxx_srcdir/config/abi/post/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n \n \n \n@@ -88549,6 +88564,17 @@ fi\n \n \n \n+if test $enable_symvers != no; then\n+  ENABLE_SYMVERS_TRUE=\n+  ENABLE_SYMVERS_FALSE='#'\n+else\n+  ENABLE_SYMVERS_TRUE='#'\n+  ENABLE_SYMVERS_FALSE=\n+fi\n+\n+\n+\n+\n if test $enable_symvers = gnu; then\n   ENABLE_SYMVERS_GNU_TRUE=\n   ENABLE_SYMVERS_GNU_FALSE='#'\n@@ -88560,12 +88586,12 @@ fi\n \n \n \n-if   test $enable_symvers = darwin-export; then\n-  ENABLE_SYMVERS_DARWIN_EXPORT_TRUE=\n-  ENABLE_SYMVERS_DARWIN_EXPORT_FALSE='#'\n+if test $enable_symvers = darwin; then\n+  ENABLE_SYMVERS_DARWIN_TRUE=\n+  ENABLE_SYMVERS_DARWIN_FALSE='#'\n else\n-  ENABLE_SYMVERS_DARWIN_EXPORT_TRUE='#'\n-  ENABLE_SYMVERS_DARWIN_EXPORT_FALSE=\n+  ENABLE_SYMVERS_DARWIN_TRUE='#'\n+  ENABLE_SYMVERS_DARWIN_FALSE=\n fi\n \n \n@@ -88912,17 +88938,24 @@ echo \"$as_me: error: conditional \\\"GLIBCXX_BUILD_DEBUG\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${ENABLE_SYMVERS_TRUE}\" && test -z \"${ENABLE_SYMVERS_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"ENABLE_SYMVERS\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"ENABLE_SYMVERS\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${ENABLE_SYMVERS_GNU_TRUE}\" && test -z \"${ENABLE_SYMVERS_GNU_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"ENABLE_SYMVERS_GNU\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n echo \"$as_me: error: conditional \\\"ENABLE_SYMVERS_GNU\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n-if test -z \"${ENABLE_SYMVERS_DARWIN_EXPORT_TRUE}\" && test -z \"${ENABLE_SYMVERS_DARWIN_EXPORT_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"ENABLE_SYMVERS_DARWIN_EXPORT\\\" was never defined.\n+if test -z \"${ENABLE_SYMVERS_DARWIN_TRUE}\" && test -z \"${ENABLE_SYMVERS_DARWIN_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"ENABLE_SYMVERS_DARWIN\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"ENABLE_SYMVERS_DARWIN_EXPORT\\\" was never defined.\n+echo \"$as_me: error: conditional \\\"ENABLE_SYMVERS_DARWIN\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n@@ -89590,12 +89623,14 @@ s,@SECTION_LDFLAGS@,$SECTION_LDFLAGS,;t t\n s,@OPT_LDFLAGS@,$OPT_LDFLAGS,;t t\n s,@LIBMATHOBJS@,$LIBMATHOBJS,;t t\n s,@LIBICONV@,$LIBICONV,;t t\n-s,@SYMVER_MAP@,$SYMVER_MAP,;t t\n+s,@SYMVER_FILE@,$SYMVER_FILE,;t t\n s,@port_specific_symbol_files@,$port_specific_symbol_files,;t t\n+s,@ENABLE_SYMVERS_TRUE@,$ENABLE_SYMVERS_TRUE,;t t\n+s,@ENABLE_SYMVERS_FALSE@,$ENABLE_SYMVERS_FALSE,;t t\n s,@ENABLE_SYMVERS_GNU_TRUE@,$ENABLE_SYMVERS_GNU_TRUE,;t t\n s,@ENABLE_SYMVERS_GNU_FALSE@,$ENABLE_SYMVERS_GNU_FALSE,;t t\n-s,@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@,$ENABLE_SYMVERS_DARWIN_EXPORT_TRUE,;t t\n-s,@ENABLE_SYMVERS_DARWIN_EXPORT_FALSE@,$ENABLE_SYMVERS_DARWIN_EXPORT_FALSE,;t t\n+s,@ENABLE_SYMVERS_DARWIN_TRUE@,$ENABLE_SYMVERS_DARWIN_TRUE,;t t\n+s,@ENABLE_SYMVERS_DARWIN_FALSE@,$ENABLE_SYMVERS_DARWIN_FALSE,;t t\n s,@baseline_dir@,$baseline_dir,;t t\n s,@ATOMICITY_SRCDIR@,$ATOMICITY_SRCDIR,;t t\n s,@ATOMIC_WORD_SRCDIR@,$ATOMIC_WORD_SRCDIR,;t t"}, {"sha": "590a1076934d3762f75f6474d7b8744ec734152f", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -99,10 +99,12 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n-ENABLE_SYMVERS_DARWIN_EXPORT_FALSE = @ENABLE_SYMVERS_DARWIN_EXPORT_FALSE@\n-ENABLE_SYMVERS_DARWIN_EXPORT_TRUE = @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@\n+ENABLE_SYMVERS_DARWIN_FALSE = @ENABLE_SYMVERS_DARWIN_FALSE@\n+ENABLE_SYMVERS_DARWIN_TRUE = @ENABLE_SYMVERS_DARWIN_TRUE@\n+ENABLE_SYMVERS_FALSE = @ENABLE_SYMVERS_FALSE@\n ENABLE_SYMVERS_GNU_FALSE = @ENABLE_SYMVERS_GNU_FALSE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n+ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@\n@@ -151,7 +153,7 @@ SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n-SYMVER_MAP = @SYMVER_MAP@\n+SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@"}, {"sha": "84469b0036576591ce6a37df8f2f64aa99c4e422", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -114,10 +114,12 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n-ENABLE_SYMVERS_DARWIN_EXPORT_FALSE = @ENABLE_SYMVERS_DARWIN_EXPORT_FALSE@\n-ENABLE_SYMVERS_DARWIN_EXPORT_TRUE = @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@\n+ENABLE_SYMVERS_DARWIN_FALSE = @ENABLE_SYMVERS_DARWIN_FALSE@\n+ENABLE_SYMVERS_DARWIN_TRUE = @ENABLE_SYMVERS_DARWIN_TRUE@\n+ENABLE_SYMVERS_FALSE = @ENABLE_SYMVERS_FALSE@\n ENABLE_SYMVERS_GNU_FALSE = @ENABLE_SYMVERS_GNU_FALSE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n+ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@\n@@ -168,7 +170,7 @@ SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n-SYMVER_MAP = @SYMVER_MAP@\n+SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@"}, {"sha": "2a1d52f0954607cc9f2207480708a4ffbc96c4dc", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -155,10 +155,12 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n-ENABLE_SYMVERS_DARWIN_EXPORT_FALSE = @ENABLE_SYMVERS_DARWIN_EXPORT_FALSE@\n-ENABLE_SYMVERS_DARWIN_EXPORT_TRUE = @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@\n+ENABLE_SYMVERS_DARWIN_FALSE = @ENABLE_SYMVERS_DARWIN_FALSE@\n+ENABLE_SYMVERS_DARWIN_TRUE = @ENABLE_SYMVERS_DARWIN_TRUE@\n+ENABLE_SYMVERS_FALSE = @ENABLE_SYMVERS_FALSE@\n ENABLE_SYMVERS_GNU_FALSE = @ENABLE_SYMVERS_GNU_FALSE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n+ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@\n@@ -207,7 +209,7 @@ SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n-SYMVER_MAP = @SYMVER_MAP@\n+SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@"}, {"sha": "b953b568bc6f1e62d29ddb366f57d0e96a3a12e7", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -99,10 +99,12 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n-ENABLE_SYMVERS_DARWIN_EXPORT_FALSE = @ENABLE_SYMVERS_DARWIN_EXPORT_FALSE@\n-ENABLE_SYMVERS_DARWIN_EXPORT_TRUE = @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@\n+ENABLE_SYMVERS_DARWIN_FALSE = @ENABLE_SYMVERS_DARWIN_FALSE@\n+ENABLE_SYMVERS_DARWIN_TRUE = @ENABLE_SYMVERS_DARWIN_TRUE@\n+ENABLE_SYMVERS_FALSE = @ENABLE_SYMVERS_FALSE@\n ENABLE_SYMVERS_GNU_FALSE = @ENABLE_SYMVERS_GNU_FALSE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n+ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@\n@@ -151,7 +153,7 @@ SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n-SYMVER_MAP = @SYMVER_MAP@\n+SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@"}, {"sha": "4d51036fe6b58046cbb38bcb5180c88b7e5097b7", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -28,12 +28,10 @@ include $(top_srcdir)/fragment.am\n toolexeclib_LTLIBRARIES = libstdc++.la\n \n # Symbol versioning for shared libraries.\n-# This could be conditional on\n-# ENABLE_SYMVERS_GNU || ENABLE_SYMVERS_DARWIN_EXPORT\n-# but automake doesn't support OR operations in conditionals.\n-libstdc++-symbol.ver:  ${glibcxx_srcdir}/$(SYMVER_MAP) \\\n+if ENABLE_SYMVERS\n+libstdc++-symbols.ver:  ${glibcxx_srcdir}/$(SYMVER_FILE) \\\n \t\t$(port_specific_symbol_files)\n-\tcp ${glibcxx_srcdir}/$(SYMVER_MAP) ./libstdc++-symbol.ver\n+\tcp ${glibcxx_srcdir}/$(SYMVER_FILE) ./libstdc++-symbols.ver\n \tif test \"x$(port_specific_symbol_files)\" != x; then \\\n \t  sed -n '1,/DO NOT DELETE/p' $@ > tmp.top; \\\n \t  sed -n '/DO NOT DELETE/,$$p' $@ > tmp.bottom; \\\n@@ -42,26 +40,26 @@ libstdc++-symbol.ver:  ${glibcxx_srcdir}/$(SYMVER_MAP) \\\n \tfi\n \n if ENABLE_SYMVERS_GNU\n-version_arg = -Wl,--version-script=libstdc++-symbol.ver\n-version_dep = libstdc++-symbol.ver\n-else\n-if ENABLE_SYMVERS_DARWIN_EXPORT\n-version_arg = -Wl,-exported_symbols_list,libstdc++-symbol.explist\n-version_dep = libstdc++-symbol.explist\n-libstdc++-symbol.explist : libstdc++-symbol.ver \\\n+version_arg = -Wl,--version-script=libstdc++-symbols.ver\n+version_dep = libstdc++-symbols.ver\n+endif\n+if ENABLE_SYMVERS_DARWIN\n+version_arg = -Wl,-exported_symbols_list,libstdc++-symbols.explist\n+version_dep = libstdc++-symbols.explist\n+libstdc++-symbols.explist : libstdc++-symbols.ver \\\n \t\t${glibcxx_srcdir}/scripts/make_exports.pl \\\n \t\t$(libstdc___la_OBJECTS) $(libstdc___la_LIBADD)\n \tperl ${glibcxx_srcdir}/scripts/make_exports.pl \\\n-\t  libstdc++-symbol.ver \\\n+\t  libstdc++-symbols.ver \\\n \t  $(libstdc___la_OBJECTS:%.lo=.libs/%.o) \\\n \t `echo $(libstdc___la_LIBADD) | \\\n \t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n \t > $@ || (rm -f $@ ; exit 1)\n+endif\n else\n version_arg =\n version_dep =\n endif\n-endif\n \n \n # Source files linked in via configuration/make substitution for a"}, {"sha": "f751600fcc306a1dec1f429810d59142020b2292", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 29, "deletions": 30, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -133,10 +133,12 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n-ENABLE_SYMVERS_DARWIN_EXPORT_FALSE = @ENABLE_SYMVERS_DARWIN_EXPORT_FALSE@\n-ENABLE_SYMVERS_DARWIN_EXPORT_TRUE = @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@\n+ENABLE_SYMVERS_DARWIN_FALSE = @ENABLE_SYMVERS_DARWIN_FALSE@\n+ENABLE_SYMVERS_DARWIN_TRUE = @ENABLE_SYMVERS_DARWIN_TRUE@\n+ENABLE_SYMVERS_FALSE = @ENABLE_SYMVERS_FALSE@\n ENABLE_SYMVERS_GNU_FALSE = @ENABLE_SYMVERS_GNU_FALSE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n+ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@\n@@ -185,7 +187,7 @@ SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n-SYMVER_MAP = @SYMVER_MAP@\n+SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n@@ -275,12 +277,12 @@ AM_CPPFLAGS = $(GLIBCXX_INCLUDES)\n \n # Cross compiler support.\n toolexeclib_LTLIBRARIES = libstdc++.la\n-@ENABLE_SYMVERS_DARWIN_EXPORT_FALSE@@ENABLE_SYMVERS_GNU_FALSE@version_arg = \n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@version_arg = -Wl,-exported_symbols_list,libstdc++-symbol.explist\n-@ENABLE_SYMVERS_GNU_TRUE@version_arg = -Wl,--version-script=libstdc++-symbol.ver\n-@ENABLE_SYMVERS_DARWIN_EXPORT_FALSE@@ENABLE_SYMVERS_GNU_FALSE@version_dep = \n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@version_dep = libstdc++-symbol.explist\n-@ENABLE_SYMVERS_GNU_TRUE@version_dep = libstdc++-symbol.ver\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,-exported_symbols_list,libstdc++-symbols.explist\n+@ENABLE_SYMVERS_FALSE@version_arg = \n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,--version-script=libstdc++-symbols.ver\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.explist\n+@ENABLE_SYMVERS_FALSE@version_dep = \n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver\n \n # Source files linked in via configuration/make substitution for a\n # particular host.\n@@ -670,27 +672,24 @@ uninstall-am: uninstall-info-am uninstall-toolexeclibLTLIBRARIES\n \n \n # Symbol versioning for shared libraries.\n-# This could be conditional on\n-# ENABLE_SYMVERS_GNU || ENABLE_SYMVERS_DARWIN_EXPORT\n-# but automake doesn't support OR operations in conditionals.\n-libstdc++-symbol.ver:  ${glibcxx_srcdir}/$(SYMVER_MAP) \\\n-\t\t$(port_specific_symbol_files)\n-\tcp ${glibcxx_srcdir}/$(SYMVER_MAP) ./libstdc++-symbol.ver\n-\tif test \"x$(port_specific_symbol_files)\" != x; then \\\n-\t  sed -n '1,/DO NOT DELETE/p' $@ > tmp.top; \\\n-\t  sed -n '/DO NOT DELETE/,$$p' $@ > tmp.bottom; \\\n-\t  cat tmp.top $(port_specific_symbol_files) tmp.bottom > $@; \\\n-\t  rm tmp.top tmp.bottom; \\\n-\tfi\n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@libstdc++-symbol.explist : libstdc++-symbol.ver \\\n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t\t${glibcxx_srcdir}/scripts/make_exports.pl \\\n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t\t$(libstdc___la_OBJECTS) $(libstdc___la_LIBADD)\n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\tperl ${glibcxx_srcdir}/scripts/make_exports.pl \\\n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t  libstdc++-symbol.ver \\\n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t  $(libstdc___la_OBJECTS:%.lo=.libs/%.o) \\\n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t `echo $(libstdc___la_LIBADD) | \\\n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t > $@ || (rm -f $@ ; exit 1)\n+@ENABLE_SYMVERS_TRUE@libstdc++-symbols.ver:  ${glibcxx_srcdir}/$(SYMVER_FILE) \\\n+@ENABLE_SYMVERS_TRUE@\t\t$(port_specific_symbol_files)\n+@ENABLE_SYMVERS_TRUE@\tcp ${glibcxx_srcdir}/$(SYMVER_FILE) ./libstdc++-symbols.ver\n+@ENABLE_SYMVERS_TRUE@\tif test \"x$(port_specific_symbol_files)\" != x; then \\\n+@ENABLE_SYMVERS_TRUE@\t  sed -n '1,/DO NOT DELETE/p' $@ > tmp.top; \\\n+@ENABLE_SYMVERS_TRUE@\t  sed -n '/DO NOT DELETE/,$$p' $@ > tmp.bottom; \\\n+@ENABLE_SYMVERS_TRUE@\t  cat tmp.top $(port_specific_symbol_files) tmp.bottom > $@; \\\n+@ENABLE_SYMVERS_TRUE@\t  rm tmp.top tmp.bottom; \\\n+@ENABLE_SYMVERS_TRUE@\tfi\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@libstdc++-symbols.explist : libstdc++-symbols.ver \\\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t\t${glibcxx_srcdir}/scripts/make_exports.pl \\\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t\t$(libstdc___la_OBJECTS) $(libstdc___la_LIBADD)\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\tperl ${glibcxx_srcdir}/scripts/make_exports.pl \\\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t  libstdc++-symbols.ver \\\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t  $(libstdc___la_OBJECTS:%.lo=.libs/%.o) \\\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t `echo $(libstdc___la_LIBADD) | \\\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t > $@ || (rm -f $@ ; exit 1)\n \n codecvt_members.cc: ${glibcxx_srcdir}/$(CCODECVT_CC)\n \t$(LN_S) ${glibcxx_srcdir}/$(CCODECVT_CC) . || true"}, {"sha": "2261ad57b240da0e6bdbbbebebc34bcacdacffab", "filename": "libstdc++-v3/src/compatibility.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -30,7 +30,7 @@\n \n #include <bits/c++config.h>\n \n-#if defined(_GLIBCXX_SYMVER) && defined(PIC)\n+#if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC)\n #define istreambuf_iterator istreambuf_iteratorXX\n #define basic_fstream basic_fstreamXX\n #define basic_ifstream basic_ifstreamXX\n@@ -188,7 +188,7 @@ namespace std\n \n // NB: These symbols renames should go into the shared library only,\n // and only those shared libraries that support versioning.\n-#if defined(_GLIBCXX_SYMVER) && defined(PIC)\n+#if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC)\n \n /* gcc-3.4.4\n _ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv\n@@ -362,7 +362,7 @@ namespace std\n \n #endif\n \n-#ifdef __APPLE__\n+#ifdef _GLIBCXX_SYMVER_DARWIN\n #if (defined(__ppc__) || defined (__ppc64__)) && defined (PIC)\n /* __eprintf shouldn't have been made visible from libstdc++, or\n    anywhere, but on Mac OS X 10.4 it was defined in\n@@ -385,4 +385,4 @@ __eprintf (const char *string, const char *expression,\n   abort ();\n }\n #endif\n-#endif /* __APPLE__ */\n+#endif"}, {"sha": "0d9ba5ab4cb4e757323c07312614e43e648a248b", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c309d63100120db3c2656a0e518eca7941ecd/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=fb5c309d63100120db3c2656a0e518eca7941ecd", "patch": "@@ -103,10 +103,12 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n-ENABLE_SYMVERS_DARWIN_EXPORT_FALSE = @ENABLE_SYMVERS_DARWIN_EXPORT_FALSE@\n-ENABLE_SYMVERS_DARWIN_EXPORT_TRUE = @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@\n+ENABLE_SYMVERS_DARWIN_FALSE = @ENABLE_SYMVERS_DARWIN_FALSE@\n+ENABLE_SYMVERS_DARWIN_TRUE = @ENABLE_SYMVERS_DARWIN_TRUE@\n+ENABLE_SYMVERS_FALSE = @ENABLE_SYMVERS_FALSE@\n ENABLE_SYMVERS_GNU_FALSE = @ENABLE_SYMVERS_GNU_FALSE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n+ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@\n@@ -155,7 +157,7 @@ SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n-SYMVER_MAP = @SYMVER_MAP@\n+SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@"}]}