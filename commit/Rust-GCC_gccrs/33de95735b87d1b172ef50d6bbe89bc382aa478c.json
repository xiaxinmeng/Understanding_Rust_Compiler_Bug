{"sha": "33de95735b87d1b172ef50d6bbe89bc382aa478c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNkZTk1NzM1Yjg3ZDFiMTcyZWY1MGQ2YmJlODliYzM4MmFhNDc4Yw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-07-05T07:20:32Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-07-05T07:20:32Z"}, "message": "re PR driver/11417 (fortran options warned about in cc1 when *.F or -x f77-cpp-input)\n\n\tPR driver/11417\n\t* c-opts.c (permit_fortran_options): New.\n\t(c_common_init_options): Accept fortran front end options if\n\tit looks like we might be preprocessing Fortran.\n\t(c_common_handle_option): Don't reject switch if permit_fotran_options.\n\nFrom-SVN: r68961", "tree": {"sha": "3f24346dcd7bcabf8f506cbb2c10d6e305358fd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f24346dcd7bcabf8f506cbb2c10d6e305358fd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33de95735b87d1b172ef50d6bbe89bc382aa478c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33de95735b87d1b172ef50d6bbe89bc382aa478c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33de95735b87d1b172ef50d6bbe89bc382aa478c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33de95735b87d1b172ef50d6bbe89bc382aa478c/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2778669a8fdc421669d335ecd923c1d49fbee7ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2778669a8fdc421669d335ecd923c1d49fbee7ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2778669a8fdc421669d335ecd923c1d49fbee7ef"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "6dd0c8779dbd43ba8fbdbed345b4080bcbf5085e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33de95735b87d1b172ef50d6bbe89bc382aa478c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33de95735b87d1b172ef50d6bbe89bc382aa478c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33de95735b87d1b172ef50d6bbe89bc382aa478c", "patch": "@@ -1,3 +1,11 @@\n+2003-07-05  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\tPR driver/11417\n+\t* c-opts.c (permit_fortran_options): New.\n+\t(c_common_init_options): Accept fortran front end options if\n+\tit looks like we might be preprocessing Fortran.\n+\t(c_common_handle_option): Don't reject switch if permit_fotran_options.\n+\n 2003-07-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* genattr.c (internal_dfa_insn_code): Output prototype."}, {"sha": "3bccc7e0c93fff7e0d7f16056e46a4f52ee78109", "filename": "gcc/c-opts.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33de95735b87d1b172ef50d6bbe89bc382aa478c/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33de95735b87d1b172ef50d6bbe89bc382aa478c/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=33de95735b87d1b172ef50d6bbe89bc382aa478c", "patch": "@@ -94,6 +94,9 @@ static size_t deferred_count;\n /* Number of deferred options scanned for -include.  */\n static size_t include_cursor;\n \n+/* Permit Fotran front-end options.  */\n+static bool permit_fortran_options;\n+\n void missing_arg (enum opt_code);\n static void set_Wimplicit (int);\n static void print_help (void);\n@@ -199,6 +202,7 @@ unsigned int\n c_common_init_options (unsigned int argc, const char **argv ATTRIBUTE_UNUSED)\n {\n   static const unsigned int lang_flags[] = {CL_C, CL_ObjC, CL_CXX, CL_ObjCXX};\n+  unsigned int result;\n \n   /* This is conditionalized only because that is the way the front\n      ends used to do it.  Maybe this should be unconditional?  */\n@@ -230,7 +234,20 @@ c_common_init_options (unsigned int argc, const char **argv ATTRIBUTE_UNUSED)\n   deferred_opts = (struct deferred_opt *)\n     xmalloc (argc * sizeof (struct deferred_opt));\n \n-  return lang_flags[c_language];\n+  result = lang_flags[c_language];\n+\n+  /* If potentially preprocessing Fortran we have to accept its front\n+     end options since the driver passes most of them through.  */\n+#ifdef CL_F77\n+  if (c_language == clk_c && argc > 2\n+      && !strcmp (argv[2], \"-traditional-cpp\" ))\n+    {\n+      permit_fortran_options = true;\n+      result |= CL_F77;\n+    }\n+#endif\n+\n+  return result;\n }\n \n /* Handle switch SCODE with argument ARG.  ON is true, unless no-\n@@ -259,7 +276,8 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n   switch (code)\n     {\n     default:\n-      return 0;\n+      result = permit_fortran_options;\n+      break;\n \n     case OPT__help:\n       print_help ();"}]}