{"sha": "f901401e53769c0b0272a91417f161ad314f6c4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkwMTQwMWU1Mzc2OWMwYjAyNzJhOTE0MTdmMTYxYWQzMTRmNmM0Yg==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-08-06T10:17:05Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-08-06T10:17:05Z"}, "message": "[PATCH AArch64] Prefer dup to zip for vec_perm_const; enable dup for bigendian; add testcase.\n\ngcc/:\n\t* config/aarch64/aarch64.c (aarch64_evpc_dup): Enable for bigendian.\n\t(aarch64_expand_vec_perm_const): Check for dup before zip.\n\ngcc/testsuite:\n\n\t* gcc.target/aarch64/vdup_n_2.c: New test.\n\nFrom-SVN: r213659", "tree": {"sha": "dc6d1a6bc8d026fe7661a51e2686a038a74061be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc6d1a6bc8d026fe7661a51e2686a038a74061be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f901401e53769c0b0272a91417f161ad314f6c4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f901401e53769c0b0272a91417f161ad314f6c4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f901401e53769c0b0272a91417f161ad314f6c4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f901401e53769c0b0272a91417f161ad314f6c4b/comments", "author": null, "committer": null, "parents": [{"sha": "06e105fc9bc2aeba719e670a8b63982cff7dae1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06e105fc9bc2aeba719e670a8b63982cff7dae1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06e105fc9bc2aeba719e670a8b63982cff7dae1a"}], "stats": {"total": 47, "additions": 40, "deletions": 7}, "files": [{"sha": "39111746c3bfbaecdfb90945c6a56e490b811ceb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f901401e53769c0b0272a91417f161ad314f6c4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f901401e53769c0b0272a91417f161ad314f6c4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f901401e53769c0b0272a91417f161ad314f6c4b", "patch": "@@ -1,3 +1,8 @@\n+2014-08-06  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_evpc_dup): Enable for bigendian.\n+\t(aarch64_expand_vec_perm_const): Check for dup before zip.\n+\n 2014-08-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_classify_address): Use REG_P and"}, {"sha": "11654283055996a59a17f721948d0f3cdbb8229b", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f901401e53769c0b0272a91417f161ad314f6c4b/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f901401e53769c0b0272a91417f161ad314f6c4b/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=f901401e53769c0b0272a91417f161ad314f6c4b", "patch": "@@ -9378,10 +9378,6 @@ aarch64_evpc_dup (struct expand_vec_perm_d *d)\n   unsigned int i, elt, nelt = d->nelt;\n   rtx lane;\n \n-  /* TODO: This may not be big-endian safe.  */\n-  if (BYTES_BIG_ENDIAN)\n-    return false;\n-\n   elt = d->perm[0];\n   for (i = 1; i < nelt; i++)\n     {\n@@ -9395,7 +9391,7 @@ aarch64_evpc_dup (struct expand_vec_perm_d *d)\n      use d->op0 and need not do any extra arithmetic to get the\n      correct lane number.  */\n   in0 = d->op0;\n-  lane = GEN_INT (elt);\n+  lane = GEN_INT (elt); /* The pattern corrects for big-endian.  */\n \n   switch (vmode)\n     {\n@@ -9476,14 +9472,14 @@ aarch64_expand_vec_perm_const_1 (struct expand_vec_perm_d *d)\n \treturn true;\n       else if (aarch64_evpc_ext (d))\n \treturn true;\n+      else if (aarch64_evpc_dup (d))\n+\treturn true;\n       else if (aarch64_evpc_zip (d))\n \treturn true;\n       else if (aarch64_evpc_uzp (d))\n \treturn true;\n       else if (aarch64_evpc_trn (d))\n \treturn true;\n-      else if (aarch64_evpc_dup (d))\n-\treturn true;\n       return aarch64_evpc_tbl (d);\n     }\n   return false;"}, {"sha": "096c489696f0e13a61b231f7757d534d67a8d3c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f901401e53769c0b0272a91417f161ad314f6c4b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f901401e53769c0b0272a91417f161ad314f6c4b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f901401e53769c0b0272a91417f161ad314f6c4b", "patch": "@@ -1,3 +1,7 @@\n+2014-08-06  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* gcc.target/aarch64/vdup_n_2.c: New test.\n+\n 2014-08-06  Maciej W. Rozycki  <macro@codesourcery.com>\n \n \t* gcc.dg/pr44194-1.c: Also exclude powerpc*-*-linux*, except if"}, {"sha": "660fb0faeabcc632ae3edb1fb8fa9b96d57a4923", "filename": "gcc/testsuite/gcc.target/aarch64/vdup_n_2.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f901401e53769c0b0272a91417f161ad314f6c4b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvdup_n_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f901401e53769c0b0272a91417f161ad314f6c4b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvdup_n_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvdup_n_2.c?ref=f901401e53769c0b0272a91417f161ad314f6c4b", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-inline --save-temps\" } */\n+\n+extern void abort (void);\n+\n+typedef float float32x2_t __attribute__ ((__vector_size__ ((8))));\n+typedef unsigned int uint32x2_t __attribute__ ((__vector_size__ ((8))));\n+\n+float32x2_t\n+test_dup_1 (float32x2_t in)\n+{\n+  return __builtin_shuffle (in, (uint32x2_t) {1, 1});\n+}\n+\n+int\n+main (int argc, char **argv)\n+{\n+  float32x2_t test = {2.718, 3.141};\n+  float32x2_t res = test_dup_1 (test);\n+  if (res[0] != test[1] || res[1] != test[1])\n+    abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-times \"\\[ \\t\\]*dup\\[ \\t\\]+v\\[0-9\\]+\\.2s, ?v\\[0-9\\]+\\.s\\\\\\[\\[01\\]\\\\\\]\" 1 } } */\n+/* { dg-final { scan-assembler-not \"zip\" } } */\n+/* { dg-final { cleanup-saved-temps } } */\n+"}]}