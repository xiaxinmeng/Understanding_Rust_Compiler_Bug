{"sha": "8949b985dbaf07d433bd57d2883e1e5414f20e75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk0OWI5ODVkYmFmMDdkNDMzYmQ1N2QyODgzZTFlNTQxNGYyMGU3NQ==", "commit": {"author": {"name": "Kwok Cheung Yeung", "email": "kcy@codesourcery.com", "date": "2020-10-07T16:34:32Z"}, "committer": {"name": "Kwok Cheung Yeung", "email": "kcy@codesourcery.com", "date": "2020-10-13T20:21:02Z"}, "message": "openmp: Add support for the omp_get_supported_active_levels runtime library routine\n\nThis patch implements the omp_get_supported_active_levels runtime routine\nfrom the OpenMP 5.0 specification, which returns the maximum number of\nactive nested parallel regions supported by this implementation.  The\ncurrent maximum (set using the omp_set_max_active_levels routine or the\nOMP_MAX_ACTIVE_LEVELS environment variable) cannot exceed this number.\n\n2020-10-13  Kwok Cheung Yeung  <kcy@codesourcery.com>\n\n\tlibgomp/\n\t* env.c (gomp_max_active_levels_var): Initialize to\n\tgomp_supported_active_levels.\n\t(initialize_env): Limit gomp_max_active_levels_var to be at most\n\tequal to gomp_supported_active_levels.\n\t* fortran.c (omp_get_supported_active_levels): Add ialias_redirect.\n\t(omp_get_supported_active_levels_): New.\n\t* icv.c (omp_set_max_active_levels): Limit gomp_max_active_levels_var\n\tto at most equal to gomp_supported_active_levels.\n\t(omp_get_supported_active_levels): New.\n\t* libgomp.h (gomp_supported_active_levels): New.\n\t* libgomp.map (OMP_5.0.1): Add omp_get_supported_active_levels and\n\tomp_get_supported_active_levels_.\n\t* libgomp.texi (omp_get_supported_active_levels): New.\n\t(omp_set_max_active_levels): Update.  Add reference to\n\tomp_get_supported_active_levels.\n\t* omp.h.in (omp_get_supported_active_levels): New.\n\t* omp_lib.f90.in (omp_get_supported_active_levels): New.\n\t* omp_lib.h.in (omp_get_supported_active_levels): New.\n\t* testsuite/libgomp.c/lib-2.c (main): Check omp_get_max_active_levels\n\tagainst omp_get_supported_active_levels.\n\t* testsuite/libgomp.fortran/lib4.f90 (lib4): Likewise.", "tree": {"sha": "720277ee543e8dd32777b172aa37f5848a9f12fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/720277ee543e8dd32777b172aa37f5848a9f12fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8949b985dbaf07d433bd57d2883e1e5414f20e75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8949b985dbaf07d433bd57d2883e1e5414f20e75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8949b985dbaf07d433bd57d2883e1e5414f20e75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8949b985dbaf07d433bd57d2883e1e5414f20e75/comments", "author": {"login": "k-yeung", "id": 16960193, "node_id": "MDQ6VXNlcjE2OTYwMTkz", "avatar_url": "https://avatars.githubusercontent.com/u/16960193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-yeung", "html_url": "https://github.com/k-yeung", "followers_url": "https://api.github.com/users/k-yeung/followers", "following_url": "https://api.github.com/users/k-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/k-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-yeung/subscriptions", "organizations_url": "https://api.github.com/users/k-yeung/orgs", "repos_url": "https://api.github.com/users/k-yeung/repos", "events_url": "https://api.github.com/users/k-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/k-yeung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "k-yeung", "id": 16960193, "node_id": "MDQ6VXNlcjE2OTYwMTkz", "avatar_url": "https://avatars.githubusercontent.com/u/16960193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-yeung", "html_url": "https://github.com/k-yeung", "followers_url": "https://api.github.com/users/k-yeung/followers", "following_url": "https://api.github.com/users/k-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/k-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-yeung/subscriptions", "organizations_url": "https://api.github.com/users/k-yeung/orgs", "repos_url": "https://api.github.com/users/k-yeung/repos", "events_url": "https://api.github.com/users/k-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/k-yeung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5204cc561a8d3c1a671969715ceb507ece8edef7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5204cc561a8d3c1a671969715ceb507ece8edef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5204cc561a8d3c1a671969715ceb507ece8edef7"}], "stats": {"total": 74, "additions": 70, "deletions": 4}, "files": [{"sha": "d730c483d7f7f33dd7523862599d1c48a8e85b61", "filename": "libgomp/env.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fenv.c?ref=8949b985dbaf07d433bd57d2883e1e5414f20e75", "patch": "@@ -73,7 +73,7 @@ struct gomp_task_icv gomp_global_icv = {\n   .target_data = NULL\n };\n \n-unsigned long gomp_max_active_levels_var = INT_MAX;\n+unsigned long gomp_max_active_levels_var = gomp_supported_active_levels;\n bool gomp_cancel_var = false;\n int gomp_max_task_priority_var = 0;\n #ifndef HAVE_SYNC_BUILTINS\n@@ -1369,6 +1369,8 @@ initialize_env (void)\n   parse_int (\"OMP_MAX_TASK_PRIORITY\", &gomp_max_task_priority_var, true);\n   parse_unsigned_long (\"OMP_MAX_ACTIVE_LEVELS\", &gomp_max_active_levels_var,\n \t\t       true);\n+  if (gomp_max_active_levels_var > gomp_supported_active_levels)\n+    gomp_max_active_levels_var = gomp_supported_active_levels;\n   gomp_def_allocator = parse_allocator ();\n   if (parse_unsigned_long (\"OMP_THREAD_LIMIT\", &thread_limit_var, false))\n     {"}, {"sha": "029dec17459412d04753f0eb10e307baede2c94b", "filename": "libgomp/fortran.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Ffortran.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Ffortran.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ffortran.c?ref=8949b985dbaf07d433bd57d2883e1e5414f20e75", "patch": "@@ -63,6 +63,7 @@ ialias_redirect (omp_get_schedule)\n ialias_redirect (omp_get_thread_limit)\n ialias_redirect (omp_set_max_active_levels)\n ialias_redirect (omp_get_max_active_levels)\n+ialias_redirect (omp_get_supported_active_levels)\n ialias_redirect (omp_get_level)\n ialias_redirect (omp_get_ancestor_thread_num)\n ialias_redirect (omp_get_team_size)\n@@ -417,6 +418,12 @@ omp_get_max_active_levels_ (void)\n   return omp_get_max_active_levels ();\n }\n \n+int32_t\n+omp_get_supported_active_levels_ (void)\n+{\n+  return omp_get_supported_active_levels ();\n+}\n+\n int32_t\n omp_get_level_ (void)\n {"}, {"sha": "1bb46abac438e71cc7f50db2574a91d153e0fe6b", "filename": "libgomp/icv.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Ficv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Ficv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ficv.c?ref=8949b985dbaf07d433bd57d2883e1e5414f20e75", "patch": "@@ -116,7 +116,12 @@ void\n omp_set_max_active_levels (int max_levels)\n {\n   if (max_levels >= 0)\n-    gomp_max_active_levels_var = max_levels;\n+    {\n+      if (max_levels <= gomp_supported_active_levels)\n+\tgomp_max_active_levels_var = max_levels;\n+      else\n+\tgomp_max_active_levels_var = gomp_supported_active_levels;\n+    }\n }\n \n int\n@@ -125,6 +130,12 @@ omp_get_max_active_levels (void)\n   return gomp_max_active_levels_var;\n }\n \n+int\n+omp_get_supported_active_levels (void)\n+{\n+  return gomp_supported_active_levels;\n+}\n+\n int\n omp_get_cancellation (void)\n {\n@@ -227,6 +238,7 @@ ialias (omp_get_max_threads)\n ialias (omp_get_thread_limit)\n ialias (omp_set_max_active_levels)\n ialias (omp_get_max_active_levels)\n+ialias (omp_get_supported_active_levels)\n ialias (omp_get_cancellation)\n ialias (omp_get_proc_bind)\n ialias (omp_get_initial_device)"}, {"sha": "9d26de25cd79ffb1c1b7631e1756a851a3d51c91", "filename": "libgomp/libgomp.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Flibgomp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Flibgomp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.h?ref=8949b985dbaf07d433bd57d2883e1e5414f20e75", "patch": "@@ -434,6 +434,8 @@ struct gomp_task_icv\n   struct target_mem_desc *target_data;\n };\n \n+#define gomp_supported_active_levels INT_MAX\n+\n extern struct gomp_task_icv gomp_global_icv;\n #ifndef HAVE_SYNC_BUILTINS\n extern gomp_mutex_t gomp_managed_threads_lock;"}, {"sha": "c5f52f725d06b498b626c93c1c8b077f3a86fd00", "filename": "libgomp/libgomp.map", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Flibgomp.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Flibgomp.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.map?ref=8949b985dbaf07d433bd57d2883e1e5414f20e75", "patch": "@@ -193,6 +193,8 @@ OMP_5.0.1 {\n \tomp_destroy_allocator_;\n \tomp_alloc;\n \tomp_free;\n+\tomp_get_supported_active_levels;\n+\tomp_get_supported_active_levels_;\n } OMP_5.0;\n \n GOMP_1.0 {"}, {"sha": "1b7710cc93569ce65daa275c6e9dc81854ebb5a4", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=8949b985dbaf07d433bd57d2883e1e5414f20e75", "patch": "@@ -177,6 +177,7 @@ linkage, and do not throw exceptions.\n * omp_get_num_threads::         Size of the active team\n * omp_get_proc_bind::           Whether theads may be moved between CPUs\n * omp_get_schedule::            Obtain the runtime scheduling method\n+* omp_get_supported_active_levels:: Maxiumum number of active levels supported\n * omp_get_team_num::            Get team number\n * omp_get_team_size::           Number of threads in a team\n * omp_get_thread_limit::        Maximum number of threads\n@@ -638,6 +639,31 @@ set to the value @code{omp_sched_static}, @code{omp_sched_dynamic},\n @end table\n \n \n+@node omp_get_supported_active_levels\n+@section @code{omp_get_supported_active_levels} -- Maximum number of active regions supported\n+@table @asis\n+@item @emph{Description}:\n+This function returns the maximum number of nested, active parallel regions\n+supported by this implementation.\n+\n+@item @emph{C/C++}\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_supported_active_levels(void);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer function omp_get_supported_active_levels()}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{omp_get_max_active_levels}, @ref{omp_set_max_active_levels}\n+\n+@item @emph{Reference}:\n+@uref{https://www.openmp.org, OpenMP specification v5.0}, Section 3.2.15.\n+@end table\n+\n+\n \n @node omp_get_team_num\n @section @code{omp_get_team_num} -- Get team number\n@@ -877,7 +903,8 @@ adjustment of team sizes and @code{false} disables it.\n @table @asis\n @item @emph{Description}:\n This function limits the maximum allowed number of nested, active\n-parallel regions.\n+parallel regions.  @var{max_levels} must be less or equal to\n+the value returned by @code{omp_get_supported_active_levels}.\n \n @item @emph{C/C++}\n @multitable @columnfractions .20 .80\n@@ -891,7 +918,8 @@ parallel regions.\n @end multitable\n \n @item @emph{See also}:\n-@ref{omp_get_max_active_levels}, @ref{omp_get_active_level}\n+@ref{omp_get_max_active_levels}, @ref{omp_get_active_level},\n+@ref{omp_get_supported_active_levels}\n \n @item @emph{Reference}:\n @uref{https://www.openmp.org, OpenMP specification v4.5}, Section 3.2.15."}, {"sha": "a9e6c448dc3ca95fa6962e96e50aeeb887bef48e", "filename": "libgomp/omp.h.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Fomp.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Fomp.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fomp.h.in?ref=8949b985dbaf07d433bd57d2883e1e5414f20e75", "patch": "@@ -211,6 +211,7 @@ extern void omp_get_schedule (omp_sched_t *, int *) __GOMP_NOTHROW;\n extern int omp_get_thread_limit (void) __GOMP_NOTHROW;\n extern void omp_set_max_active_levels (int) __GOMP_NOTHROW;\n extern int omp_get_max_active_levels (void) __GOMP_NOTHROW;\n+extern int omp_get_supported_active_levels (void) __GOMP_NOTHROW;\n extern int omp_get_level (void) __GOMP_NOTHROW;\n extern int omp_get_ancestor_thread_num (int) __GOMP_NOTHROW;\n extern int omp_get_team_size (int) __GOMP_NOTHROW;"}, {"sha": "2fae57b0e5f5b5cced5cc153d9d07cd3c1959b44", "filename": "libgomp/omp_lib.f90.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Fomp_lib.f90.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Fomp_lib.f90.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fomp_lib.f90.in?ref=8949b985dbaf07d433bd57d2883e1e5414f20e75", "patch": "@@ -393,6 +393,12 @@\n           end function omp_get_max_active_levels\n         end interface\n \n+        interface\n+          function omp_get_supported_active_levels ()\n+            integer (4) :: omp_get_supported_active_levels\n+          end function omp_get_supported_active_levels\n+        end interface\n+\n         interface\n           function omp_get_level ()\n             integer (4) :: omp_get_level"}, {"sha": "eb1dcc44cfccafeee4330a33dd460b8857780b12", "filename": "libgomp/omp_lib.h.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Fomp_lib.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Fomp_lib.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fomp_lib.h.in?ref=8949b985dbaf07d433bd57d2883e1e5414f20e75", "patch": "@@ -205,9 +205,11 @@\n       external omp_get_max_active_levels, omp_get_level\n       external omp_get_ancestor_thread_num, omp_get_team_size\n       external omp_get_active_level\n+      external omp_get_supported_active_levels\n       integer(4) omp_get_thread_limit, omp_get_max_active_levels\n       integer(4) omp_get_level, omp_get_ancestor_thread_num\n       integer(4) omp_get_team_size, omp_get_active_level\n+      integer(4) omp_get_supported_active_levels\n \n       external omp_in_final\n       logical(4) omp_in_final"}, {"sha": "ea7a71904f09f30f29d9d9b86c4b5a370011f558", "filename": "libgomp/testsuite/libgomp.c/lib-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Ftestsuite%2Flibgomp.c%2Flib-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Ftestsuite%2Flibgomp.c%2Flib-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Flib-2.c?ref=8949b985dbaf07d433bd57d2883e1e5414f20e75", "patch": "@@ -20,6 +20,8 @@ main (void)\n   omp_set_max_active_levels (6);\n   if (omp_get_max_active_levels () != 6)\n     abort ();\n+  if (omp_get_max_active_levels () > omp_get_supported_active_levels ())\n+    abort ();\n \n   return 0;\n }"}, {"sha": "5259b3bd95d5566950c57c2cf4dac6ce08fe8a06", "filename": "libgomp/testsuite/libgomp.fortran/lib4.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8949b985dbaf07d433bd57d2883e1e5414f20e75/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib4.f90?ref=8949b985dbaf07d433bd57d2883e1e5414f20e75", "patch": "@@ -13,4 +13,6 @@ program lib4\n   if (omp_get_thread_limit ().lt.0) stop 3\n   call omp_set_max_active_levels (6)\n   if (omp_get_max_active_levels ().ne.6) stop 4\n+  if (omp_get_max_active_levels () &\n+      .gt.omp_get_supported_active_levels ()) stop 5\n end program lib4"}]}