{"sha": "20955f5acf05cd84927826a268caa847abfe3a6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA5NTVmNWFjZjA1Y2Q4NDkyNzgyNmEyNjhjYWE4NDdhYmZlM2E2ZA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-04-19T11:29:13Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-04-19T11:29:13Z"}, "message": "re PR target/53033 ([avr]: Wrong register number for 3-byte loads via X)\n\n\tPR target/53033\n\t* config/avr/avr.c (avr_out_load_psi): Fix assembler template for\n\tthe case *(X+const).\n\nFrom-SVN: r186588", "tree": {"sha": "2b67ca493661403c2e5df29d99183af34b15b21b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b67ca493661403c2e5df29d99183af34b15b21b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20955f5acf05cd84927826a268caa847abfe3a6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20955f5acf05cd84927826a268caa847abfe3a6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20955f5acf05cd84927826a268caa847abfe3a6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20955f5acf05cd84927826a268caa847abfe3a6d/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4eb230d8daeb364ed125d7275736b6befa9896a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4eb230d8daeb364ed125d7275736b6befa9896a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4eb230d8daeb364ed125d7275736b6befa9896a"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "086b8136f50076adff566ed31cc27d78c12dada5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20955f5acf05cd84927826a268caa847abfe3a6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20955f5acf05cd84927826a268caa847abfe3a6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20955f5acf05cd84927826a268caa847abfe3a6d", "patch": "@@ -1,3 +1,9 @@\n+2012-04-19  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/53033\n+\t* config/avr/avr.c (avr_out_load_psi): Fix assembler template for\n+\tthe case *(X+const).\n+\n 2012-04-19  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n \t* config/arm/sync.md (sync_optab): Change ior attribute to \"or\"."}, {"sha": "af00aeea07af6cae9f78c92ae3ceccc9ccdf851e", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20955f5acf05cd84927826a268caa847abfe3a6d/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20955f5acf05cd84927826a268caa847abfe3a6d/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=20955f5acf05cd84927826a268caa847abfe3a6d", "patch": "@@ -3476,15 +3476,16 @@ avr_out_load_psi (rtx insn, rtx *op, int *plen)\n                                   \"mov r27,__tmp_reg__\", op, plen, -6);\n             }\n           \n-            avr_asm_len (\"adiw r26,%o1\"      CR_TAB\n-                         \"ld r24,X+\"         CR_TAB\n-                         \"ld r25,X+\"         CR_TAB\n-                         \"ld r26,X\", op, plen, -4);\n+          avr_asm_len (\"adiw r26,%o1\" CR_TAB\n+                       \"ld %A0,X+\"    CR_TAB\n+                       \"ld %B0,X+\"    CR_TAB\n+                       \"ld %C0,X\", op, plen, -4);\n \n-            if (reg_dest != REG_X - 2)\n-              avr_asm_len (\"sbiw r26,%o1+2\", op, plen, 1);\n+          if (reg_dest != REG_W\n+              && !reg_unused_after (insn, XEXP (base, 0)))\n+            avr_asm_len (\"sbiw r26,%o1+2\", op, plen, 1);\n \n-            return \"\";\n+          return \"\";\n         }\n       \n       if (reg_dest == reg_base)"}]}