{"sha": "eefc884f314f76c81a64b390ac99b6c32ec45ce9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVmYzg4NGYzMTRmNzZjODFhNjRiMzkwYWM5OWI2YzMyZWM0NWNlOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-12-19T11:12:35Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-12-19T11:12:35Z"}, "message": "re PR c++/83482 (internal compiler error: Segmentation fault)\n\n\tPR tree-optimization/83482\n\t* g++.dg/torture/pr83482.C: New test.\n\nFrom-SVN: r255817", "tree": {"sha": "099254fbc48e5659da4d40121c28566c1651e4fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/099254fbc48e5659da4d40121c28566c1651e4fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eefc884f314f76c81a64b390ac99b6c32ec45ce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eefc884f314f76c81a64b390ac99b6c32ec45ce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eefc884f314f76c81a64b390ac99b6c32ec45ce9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eefc884f314f76c81a64b390ac99b6c32ec45ce9/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0c4eaee09c6cbf8b4fdf6aaaf5387ac49c60d5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0c4eaee09c6cbf8b4fdf6aaaf5387ac49c60d5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0c4eaee09c6cbf8b4fdf6aaaf5387ac49c60d5f"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "5c61361b4824fba7327d643a57301ce0bc961d88", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefc884f314f76c81a64b390ac99b6c32ec45ce9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefc884f314f76c81a64b390ac99b6c32ec45ce9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eefc884f314f76c81a64b390ac99b6c32ec45ce9", "patch": "@@ -1,3 +1,8 @@\n+2017-12-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/83482\n+\t* g++.dg/torture/pr83482.C: New test.\n+\n 2017-12-19  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/83329"}, {"sha": "5fa1ab1c1523b25d35724993ce54e964122c906c", "filename": "gcc/testsuite/g++.dg/torture/pr83482.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefc884f314f76c81a64b390ac99b6c32ec45ce9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr83482.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefc884f314f76c81a64b390ac99b6c32ec45ce9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr83482.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr83482.C?ref=eefc884f314f76c81a64b390ac99b6c32ec45ce9", "patch": "@@ -0,0 +1,20 @@\n+// PR tree-optimization/83482\n+// { dg-do compile }\n+\n+int _setjmp (void **);\n+void *buf[64];\n+\n+void a();\n+struct b {\n+  virtual long c() { return 0L; }\n+  void m_fn2() { c(); }\n+} d;\n+\n+void e() {\n+  d.m_fn2();\n+  try {\n+    a();\n+    _setjmp(0);\n+  } catch (...) {\n+  }\n+}"}]}