{"sha": "a78cc542019750a2c78cda87c874c0f8ad84c90f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc4Y2M1NDIwMTk3NTBhMmM3OGNkYTg3Yzg3NGMwZjhhZDg0YzkwZg==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2000-11-13T22:20:03Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2000-11-13T22:20:03Z"}, "message": "loop.c (basic_induction_var): Revert accidental checkin.\n\n\t2000-11-13  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n\t* loop.c (basic_induction_var): Revert accidental checkin.\n\nFrom-SVN: r37440", "tree": {"sha": "79954a654639235fde77a40a2d4ed5f97ab4e11a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79954a654639235fde77a40a2d4ed5f97ab4e11a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a78cc542019750a2c78cda87c874c0f8ad84c90f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a78cc542019750a2c78cda87c874c0f8ad84c90f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a78cc542019750a2c78cda87c874c0f8ad84c90f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a78cc542019750a2c78cda87c874c0f8ad84c90f/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66dfa1436fd19a02df2ada0e1e2e94e8f733e7fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66dfa1436fd19a02df2ada0e1e2e94e8f733e7fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66dfa1436fd19a02df2ada0e1e2e94e8f733e7fa"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "38734a896e8561e6e9322b6e1945411e90c34842", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a78cc542019750a2c78cda87c874c0f8ad84c90f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a78cc542019750a2c78cda87c874c0f8ad84c90f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a78cc542019750a2c78cda87c874c0f8ad84c90f", "patch": "@@ -1,3 +1,7 @@\n+2000-11-13  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* loop.c (basic_induction_var): Revert accidental checkin.\n+\n 2000-11-13  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* c-lex.c (cb_leave_file): Harmonize conditions and order of"}, {"sha": "267c4691afcb4489c1eb940b8dd500f8bf3b7e15", "filename": "gcc/loop.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a78cc542019750a2c78cda87c874c0f8ad84c90f/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a78cc542019750a2c78cda87c874c0f8ad84c90f/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=a78cc542019750a2c78cda87c874c0f8ad84c90f", "patch": "@@ -5486,13 +5486,14 @@ basic_induction_var (loop, x, mode, dest_reg, p, inc_val, mult_val, location)\n \t\t       <= UNITS_PER_WORD)\n \t\t   && (GET_MODE_CLASS (GET_MODE (SET_DEST (set)))\n \t\t       == MODE_INT)\n-\t\t   && SUBREG_REG (SET_DEST (set)) == x)))\n-\t      return basic_induction_var (loop, SET_SRC (set),\n-\t\t\t\t\t  (GET_MODE (SET_SRC (set)) == VOIDmode\n-\t\t\t\t\t   ? GET_MODE (x)\n-\t\t\t\t\t   : GET_MODE (SET_SRC (set))),\n-\t\t\t\t\t  dest_reg, insn,\n-\t\t\t\t\t  inc_val, mult_val, location);\n+\t\t   && SUBREG_REG (SET_DEST (set)) == x))\n+\t      && basic_induction_var (loop, SET_SRC (set),\n+\t\t\t\t      (GET_MODE (SET_SRC (set)) == VOIDmode\n+\t\t\t\t       ? GET_MODE (x)\n+\t\t\t\t       : GET_MODE (SET_SRC (set))),\n+\t\t\t\t      dest_reg, insn,\n+\t\t\t\t      inc_val, mult_val, location))\n+\t    return 1;\n \t}\n       /* Fall through.  */\n "}]}