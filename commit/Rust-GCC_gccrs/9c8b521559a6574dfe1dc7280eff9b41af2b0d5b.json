{"sha": "9c8b521559a6574dfe1dc7280eff9b41af2b0d5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM4YjUyMTU1OWE2NTc0ZGZlMWRjNzI4MGVmZjliNDFhZjJiMGQ1Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-11-11T06:17:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-11-11T06:17:32Z"}, "message": "re PR c++/46420 ([C++0X][4.6 regression] ICE: in tsubst_copy, at cp/pt.c:11677)\n\n\tPR c++/46420\n\t* pt.c (tsubst_copy_and_build) [TARGET_EXPR]: New case.\n\t[CONSTRUCTOR]: Use the tsubsted type.\n\nFrom-SVN: r166592", "tree": {"sha": "13ef2aa7d1ce3349e5c6648eb468da5e745869ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13ef2aa7d1ce3349e5c6648eb468da5e745869ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c8b521559a6574dfe1dc7280eff9b41af2b0d5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8b521559a6574dfe1dc7280eff9b41af2b0d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c8b521559a6574dfe1dc7280eff9b41af2b0d5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8b521559a6574dfe1dc7280eff9b41af2b0d5b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "72b53e21bd8a0d8136df0026956e47adec1f27ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b53e21bd8a0d8136df0026956e47adec1f27ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b53e21bd8a0d8136df0026956e47adec1f27ac"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "75c0c53dc8efef5dc73450fb7032920f0f114d5d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c8b521559a6574dfe1dc7280eff9b41af2b0d5b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c8b521559a6574dfe1dc7280eff9b41af2b0d5b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9c8b521559a6574dfe1dc7280eff9b41af2b0d5b", "patch": "@@ -1,5 +1,9 @@\n 2010-11-10  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/46420\n+\t* pt.c (tsubst_copy_and_build) [TARGET_EXPR]: New case.\n+\t[CONSTRUCTOR]: Use the tsubsted type.\n+\n \tPR c++/46369\n \t* semantics.c (cxx_eval_bit_field_ref): New.\n \t(cxx_eval_constant_expression): Call it."}, {"sha": "56b7543504cc96e3a5921aed781bab5d9616b84c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c8b521559a6574dfe1dc7280eff9b41af2b0d5b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c8b521559a6574dfe1dc7280eff9b41af2b0d5b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=9c8b521559a6574dfe1dc7280eff9b41af2b0d5b", "patch": "@@ -13197,6 +13197,7 @@ tsubst_copy_and_build (tree t,\n \tif (TREE_HAS_CONSTRUCTOR (t))\n \t  return finish_compound_literal (type, r);\n \n+\tTREE_TYPE (r) = type;\n \treturn r;\n       }\n \n@@ -13316,6 +13317,12 @@ tsubst_copy_and_build (tree t,\n \treturn build_lambda_object (r);\n       }\n \n+    case TARGET_EXPR:\n+      /* We can get here for a constant initializer of non-dependent type.\n+         FIXME stop folding in cp_parser_initializer_clause.  */\n+      gcc_assert (TREE_CONSTANT (t));\n+      return get_target_expr (RECUR (TARGET_EXPR_INITIAL (t)));\n+\n     default:\n       /* Handle Objective-C++ constructs, if appropriate.  */\n       {"}, {"sha": "467290d51b0d1b28d0531975d51ee844adc85f1d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c8b521559a6574dfe1dc7280eff9b41af2b0d5b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c8b521559a6574dfe1dc7280eff9b41af2b0d5b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9c8b521559a6574dfe1dc7280eff9b41af2b0d5b", "patch": "@@ -1,3 +1,7 @@\n+2010-11-10  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-46420.C: New.\n+\n 2010-11-10  Joseph Myers  <joseph@codesourcery.com>\n \n \t* g++.dg/ext/bitfield2.C, g++.dg/ext/bitfield4.C,"}, {"sha": "757a6e315b0deace8fe1b43b65b18364545575cd", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-46420.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c8b521559a6574dfe1dc7280eff9b41af2b0d5b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-46420.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c8b521559a6574dfe1dc7280eff9b41af2b0d5b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-46420.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-46420.C?ref=9c8b521559a6574dfe1dc7280eff9b41af2b0d5b", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/46420\n+// { dg-options -std=c++0x }\n+\n+template<typename> class vector { };\n+struct A{};\n+template <class T1>\n+void complete_test(vector<T1> data1){\n+        A drop=A();\n+}\n+int main(){\n+  vector<double> vect1;\n+  complete_test(vect1);\n+}"}]}