{"sha": "1bb99877d3353dbb216ee90a61bd9de811387c7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJiOTk4NzdkMzM1M2RiYjIxNmVlOTBhNjFiZDlkZTgxMTM4N2M3ZA==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2009-05-18T22:31:46Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2009-05-18T22:31:46Z"}, "message": "sh-protos.h (sh_legitimate_address_p): Remove.\n\n\t* config/sh/sh-protos.h (sh_legitimate_address_p): Remove.\n\t* config/sh/sh.c (sh_legitimate_address_p): Make static.\n\t(TARGET_LEGITIMATE_ADDRESS_P): New.\n\t* config/sh/sh.h (GO_IF_LEGITIMATE_ADDRESS): Delete.\n\t* config/sh/sh.md: Clean up references to GO_IF_LEGITIMATE_ADDRESS.\n\nFrom-SVN: r147679", "tree": {"sha": "47e4b75fcd061158001e39194bfc12f65db9f17a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47e4b75fcd061158001e39194bfc12f65db9f17a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bb99877d3353dbb216ee90a61bd9de811387c7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bb99877d3353dbb216ee90a61bd9de811387c7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bb99877d3353dbb216ee90a61bd9de811387c7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bb99877d3353dbb216ee90a61bd9de811387c7d/comments", "author": null, "committer": null, "parents": [{"sha": "ff74fd1325ef58c09af1b294338321df2f6b97f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff74fd1325ef58c09af1b294338321df2f6b97f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff74fd1325ef58c09af1b294338321df2f6b97f0"}], "stats": {"total": 31, "additions": 14, "deletions": 17}, "files": [{"sha": "26fca4a2cc632ea37df9d8fecaac317fc3c53d1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bb99877d3353dbb216ee90a61bd9de811387c7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bb99877d3353dbb216ee90a61bd9de811387c7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bb99877d3353dbb216ee90a61bd9de811387c7d", "patch": "@@ -1,3 +1,11 @@\n+2009-05-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/sh-protos.h (sh_legitimate_address_p): Remove.\n+\t* config/sh/sh.c (sh_legitimate_address_p): Make static.\n+\t(TARGET_LEGITIMATE_ADDRESS_P): New.\n+\t* config/sh/sh.h (GO_IF_LEGITIMATE_ADDRESS): Delete.\n+\t* config/sh/sh.md: Clean up references to GO_IF_LEGITIMATE_ADDRESS.\n+\t\n 2009-05-18  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR debug/40109"}, {"sha": "7e3f321c7b8f561ada8271bd6043efe160ca49e7", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bb99877d3353dbb216ee90a61bd9de811387c7d/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bb99877d3353dbb216ee90a61bd9de811387c7d/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=1bb99877d3353dbb216ee90a61bd9de811387c7d", "patch": "@@ -59,7 +59,6 @@ extern int fp_one_operand (rtx);\n extern int fp_int_operand (rtx);\n extern rtx get_fpscr_rtx (void);\n extern bool sh_legitimate_index_p (enum machine_mode, rtx);\n-extern bool sh_legitimate_address_p (enum machine_mode, rtx, bool);\n extern rtx legitimize_pic_address (rtx, enum machine_mode, rtx);\n extern int nonpic_symbol_mentioned_p (rtx);\n extern void emit_sf_insn (rtx);"}, {"sha": "836eb7522f2b6a54dfe86c503521ad0b0c8d35b7", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bb99877d3353dbb216ee90a61bd9de811387c7d/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bb99877d3353dbb216ee90a61bd9de811387c7d/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=1bb99877d3353dbb216ee90a61bd9de811387c7d", "patch": "@@ -238,6 +238,7 @@ static bool sh_rtx_costs (rtx, int, int, int *, bool);\n static int sh_address_cost (rtx, bool);\n static int sh_pr_n_sets (void);\n static rtx sh_allocate_initial_value (rtx);\n+static bool sh_legitimate_address_p (enum machine_mode, rtx, bool);\n static rtx sh_legitimize_address (rtx, rtx, enum machine_mode);\n static int shmedia_target_regs_stack_space (HARD_REG_SET *);\n static int shmedia_reserve_space_for_target_registers_p (int, HARD_REG_SET *);\n@@ -480,6 +481,9 @@ static int sh2a_function_vector_p (tree);\n #undef TARGET_SECONDARY_RELOAD\n #define TARGET_SECONDARY_RELOAD sh_secondary_reload\n \n+#undef TARGET_LEGITIMATE_ADDRESS_P\n+#define TARGET_LEGITIMATE_ADDRESS_P\tsh_legitimate_address_p\n+\n /* Machine-specific symbol_ref flags.  */\n #define SYMBOL_FLAG_FUNCVEC_FUNCTION    (SYMBOL_FLAG_MACH_DEP << 0)\n \n@@ -9029,7 +9033,7 @@ sh_legitimate_index_p (enum machine_mode mode, rtx op)\n \t  REG++\n \t  --REG  */\n \n-bool\n+static bool\n sh_legitimate_address_p (enum machine_mode mode, rtx x, bool strict)\n {\n   if (MAYBE_BASE_REGISTER_RTX_P (x, strict))"}, {"sha": "c3c08bb48a5ccd17a74b65380cf66a9bcdbeab36", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bb99877d3353dbb216ee90a61bd9de811387c7d/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bb99877d3353dbb216ee90a61bd9de811387c7d/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=1bb99877d3353dbb216ee90a61bd9de811387c7d", "patch": "@@ -2320,20 +2320,6 @@ struct sh_args {\n     if (sh_legitimate_index_p ((MODE), (OP)))\t\\\n       goto WIN;\t\t\t\t\t\\\n   } while (0)\n-\n-#ifdef REG_OK_STRICT\n-#define GO_IF_LEGITIMATE_ADDRESS(MODE, X, LABEL)\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    if (sh_legitimate_address_p ((MODE), (X), true))\t\\\n-      goto LABEL;\t\t\t\t\t\\\n-  } while (0)\n-#else\n-#define GO_IF_LEGITIMATE_ADDRESS(MODE, X, LABEL)\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    if (sh_legitimate_address_p ((MODE), (X), false))\t\\\n-      goto LABEL;\t\t\t\t\t\\\n-  } while (0)\n-#endif\n \f\n /* A C compound statement that attempts to replace X, which is an address\n    that needs reloading, with a valid memory address for an operand of"}, {"sha": "6f4d1b2f84b3c79d15c27f48ac9006388ecee3e1", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bb99877d3353dbb216ee90a61bd9de811387c7d/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bb99877d3353dbb216ee90a61bd9de811387c7d/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=1bb99877d3353dbb216ee90a61bd9de811387c7d", "patch": "@@ -9564,7 +9564,7 @@ mov.l\\\\t1f,r0\\\\n\\\\\n \n ;; The c / m alternative is a fake to guide reload to load directly into\n ;; fpscr, since reload doesn't know how to use post-increment.\n-;; GO_IF_LEGITIMATE_ADDRESS guards about bogus addresses before reload,\n+;; TARGET_LEGITIMATE_ADDRESS_P guards about bogus addresses before reload,\n ;; SECONDARY_INPUT_RELOAD_CLASS does this during reload, and the insn's\n ;; predicate after reload.\n ;; The mac_gp type for r/!c might look a bit odd, but it actually schedules"}]}