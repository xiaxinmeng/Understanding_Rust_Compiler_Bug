{"sha": "4392ebd361621bdc3f5a2426df102c2da3e25a53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM5MmViZDM2MTYyMWJkYzNmNWEyNDI2ZGYxMDJjMmRhM2UyNWE1Mw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2002-11-20T09:59:28Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2002-11-20T09:59:28Z"}, "message": "sh.md (udivsi3): Don't put udivsi3_i4_media instructions into a libcall block.\n\n\t* config/sh/sh.md (udivsi3): Don't put udivsi3_i4_media instructions\n\tinto a libcall block.\n\t(divsi3): Likewise divsi3_i4_media.\n\nFrom-SVN: r59299", "tree": {"sha": "7be5e549048a9e9ba6831c5dc806ac37a8c5567a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7be5e549048a9e9ba6831c5dc806ac37a8c5567a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4392ebd361621bdc3f5a2426df102c2da3e25a53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4392ebd361621bdc3f5a2426df102c2da3e25a53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4392ebd361621bdc3f5a2426df102c2da3e25a53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4392ebd361621bdc3f5a2426df102c2da3e25a53/comments", "author": null, "committer": null, "parents": [{"sha": "3748bd9e22eafbd213c7d268d0a00b8b35faf743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3748bd9e22eafbd213c7d268d0a00b8b35faf743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3748bd9e22eafbd213c7d268d0a00b8b35faf743"}], "stats": {"total": 57, "additions": 41, "deletions": 16}, "files": [{"sha": "414a9475858f1d7c86530ba273adf994829ac8ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4392ebd361621bdc3f5a2426df102c2da3e25a53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4392ebd361621bdc3f5a2426df102c2da3e25a53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4392ebd361621bdc3f5a2426df102c2da3e25a53", "patch": "@@ -1,3 +1,9 @@\n+2002-11-20  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/sh/sh.md (udivsi3): Don't put udivsi3_i4_media instructions\n+\tinto a libcall block.\n+\t(divsi3): Likewise divsi3_i4_media.\n+\n 2002-11-20  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* global.c (find_reg): Check HARD_REGNO_NREGS before kicking"}, {"sha": "956c2253b9bb198ddb0df7ff3a88042a538fac5c", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4392ebd361621bdc3f5a2426df102c2da3e25a53/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4392ebd361621bdc3f5a2426df102c2da3e25a53/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=4392ebd361621bdc3f5a2426df102c2da3e25a53", "patch": "@@ -1341,7 +1341,7 @@\n   \"\"\n   \"\n {\n-  rtx first = 0, last;\n+  rtx first, last;\n \n   operands[3] = gen_reg_rtx (Pmode);\n   /* Emit the move of the address to a pseudo outside of the libcall.  */\n@@ -1358,8 +1358,8 @@\n     {\n       operands[1] = force_reg (SImode, operands[1]);\n       operands[2] = force_reg (SImode, operands[2]);\n-      last = gen_udivsi3_i4_media (operands[0], operands[1], operands[2]);\n-      first = last;\n+      emit_insn (gen_udivsi3_i4_media (operands[0], operands[1], operands[2]));\n+      DONE;\n     }\n   else if (TARGET_SH5)\n     {\n@@ -1386,11 +1386,8 @@\n \t\t      gen_rtx_SYMBOL_REF (SImode, \\\"__udivsi3\\\"));\n       last = gen_udivsi3_i1 (operands[0], operands[3]);\n     }\n-  if (! first)\n-    {\n-      first = emit_move_insn (gen_rtx_REG (SImode, 4), operands[1]);\n-      emit_move_insn (gen_rtx_REG (SImode, 5), operands[2]);\n-    }\n+  first = emit_move_insn (gen_rtx_REG (SImode, 4), operands[1]);\n+  emit_move_insn (gen_rtx_REG (SImode, 5), operands[2]);\n   last = emit_insn (last);\n   /* Wrap the sequence in REG_LIBCALL / REG_RETVAL notes so that loop\n      invariant code motion can move it.  */\n@@ -1494,7 +1491,7 @@\n   \"\"\n   \"\n {\n-  rtx first = 0, last;\n+  rtx first, last;\n \n   operands[3] = gen_reg_rtx (Pmode);\n   /* Emit the move of the address to a pseudo outside of the libcall.  */\n@@ -1511,8 +1508,8 @@\n     {\n       operands[1] = force_reg (SImode, operands[1]);\n       operands[2] = force_reg (SImode, operands[2]);\n-      last = gen_divsi3_i4_media (operands[0], operands[1], operands[2]);\n-      first = last;\n+      emit_insn (gen_divsi3_i4_media (operands[0], operands[1], operands[2]));\n+      DONE;\n     }\n   else if (TARGET_SH5)\n     {\n@@ -1538,11 +1535,8 @@\n       emit_move_insn (operands[3], gen_rtx_SYMBOL_REF (SImode, \\\"__sdivsi3\\\"));\n       last = gen_divsi3_i1 (operands[0], operands[3]);\n     }\n-  if (! first)\n-    {\n-      first = emit_move_insn (gen_rtx_REG (SImode, 4), operands[1]);\n-      emit_move_insn (gen_rtx_REG (SImode, 5), operands[2]);\n-    }\n+  first = emit_move_insn (gen_rtx_REG (SImode, 4), operands[1]);\n+  emit_move_insn (gen_rtx_REG (SImode, 5), operands[2]);\n   last = emit_insn (last);\n   /* Wrap the sequence in REG_LIBCALL / REG_RETVAL notes so that loop\n      invariant code motion can move it.  */"}, {"sha": "01d9f4148adb4cdde744c3ab6bfcc705c9e5f101", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4392ebd361621bdc3f5a2426df102c2da3e25a53/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4392ebd361621bdc3f5a2426df102c2da3e25a53/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4392ebd361621bdc3f5a2426df102c2da3e25a53", "patch": "@@ -1,3 +1,7 @@\n+2002-11-20  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* gcc.c-torture/execute/20021120-2.c: New test.\n+\n 2002-11-20  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* gcc.c-torture/execute/20021120-1.c: New test."}, {"sha": "d8876c0ebfa8fd9d5f7ba8bd810fe892775ae457", "filename": "gcc/testsuite/gcc.c-torture/execute/20021120-2.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4392ebd361621bdc3f5a2426df102c2da3e25a53/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021120-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4392ebd361621bdc3f5a2426df102c2da3e25a53/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021120-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021120-2.c?ref=4392ebd361621bdc3f5a2426df102c2da3e25a53", "patch": "@@ -0,0 +1,21 @@\n+int g1, g2;\n+\n+void foo (int x)\n+{\n+  int y;\n+\n+  if (x)\n+    y = 793;\n+  else\n+    y = 793;\n+  g1 = 7930 / y;\n+  g2 = 7930 / x;\n+}\n+\n+int main ()\n+{\n+  foo (793);\n+  if (g1 != 10 || g2 != 10)\n+    abort ();\n+  exit (0);\n+}"}]}