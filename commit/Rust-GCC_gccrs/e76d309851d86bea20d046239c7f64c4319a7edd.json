{"sha": "e76d309851d86bea20d046239c7f64c4319a7edd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc2ZDMwOTg1MWQ4NmJlYTIwZDA0NjIzOWM3ZjY0YzQzMTlhN2VkZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-12-21T13:09:13Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-12-21T13:09:13Z"}, "message": "PR 71444 define more error constants for mingw-w64\n\n\tPR libstdc++/71444\n\t* config/os/mingw32-w64/error_constants.h\n\t(address_family_not_supported, address_in_use, address_not_available)\n\t(already_connected, connection_aborted, connection_already_in_progress)\n\tconnection_refused, connection_reset, cross_device_link)\n\t(destination_address_required, host_unreachable, message_size)\n\t(network_down, network_reset, network_unreachable, no_buffer_space)\n\t(no_protocol_option, not_a_socket, not_connected, operation_canceled)\n\t(operation_in_progress, operation_not_supported, protocol_error)\n\t(protocol_not_supported, too_many_links, too_many_symbolic_link_levels)\n\t(value_too_large, wrong_protocol_type): Define.\n\t(bad_message, identifier_removed, no_link, no_message_available)\n\t(no_message, no_stream_resources, not_a_stream, owner_dead)\n\t(state_not_recoverable, stream_timeout, text_file_busy): Define\n\tconditionally.\n\t* testsuite/19_diagnostics/headers/system_error/errc_std_c++0x.cc:\n\tGuard test for no_message with _GLIBCXX_HAVE_ENOMSG.\n\nFrom-SVN: r243853", "tree": {"sha": "8607fff8ffe9e969396afec5a0ab08faec196b19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8607fff8ffe9e969396afec5a0ab08faec196b19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e76d309851d86bea20d046239c7f64c4319a7edd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e76d309851d86bea20d046239c7f64c4319a7edd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e76d309851d86bea20d046239c7f64c4319a7edd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e76d309851d86bea20d046239c7f64c4319a7edd/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c21fdaa1a7c7487015123c67b0cfde3497e2bdb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21fdaa1a7c7487015123c67b0cfde3497e2bdb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21fdaa1a7c7487015123c67b0cfde3497e2bdb9"}], "stats": {"total": 123, "additions": 83, "deletions": 40}, "files": [{"sha": "02297e0f2bb03c7e6239ac8d504874a0edc9bdf2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e76d309851d86bea20d046239c7f64c4319a7edd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e76d309851d86bea20d046239c7f64c4319a7edd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e76d309851d86bea20d046239c7f64c4319a7edd", "patch": "@@ -1,3 +1,23 @@\n+2016-12-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/71444\n+\t* config/os/mingw32-w64/error_constants.h\n+\t(address_family_not_supported, address_in_use, address_not_available)\n+\t(already_connected, connection_aborted, connection_already_in_progress)\n+\tconnection_refused, connection_reset, cross_device_link)\n+\t(destination_address_required, host_unreachable, message_size)\n+\t(network_down, network_reset, network_unreachable, no_buffer_space)\n+\t(no_protocol_option, not_a_socket, not_connected, operation_canceled)\n+\t(operation_in_progress, operation_not_supported, protocol_error)\n+\t(protocol_not_supported, too_many_links, too_many_symbolic_link_levels)\n+\t(value_too_large, wrong_protocol_type): Define.\n+\t(bad_message, identifier_removed, no_link, no_message_available)\n+\t(no_message, no_stream_resources, not_a_stream, owner_dead)\n+\t(state_not_recoverable, stream_timeout, text_file_busy): Define\n+\tconditionally.\n+\t* testsuite/19_diagnostics/headers/system_error/errc_std_c++0x.cc:\n+\tGuard test for no_message with _GLIBCXX_HAVE_ENOMSG.\n+\n 2016-12-19  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tMake the perfect-forwarding constructor of a two-element tuple"}, {"sha": "f1003738ff74ff2394201a6f80a5e6509edbfcae", "filename": "libstdc++-v3/config/os/mingw32-w64/error_constants.h", "status": "modified", "additions": 61, "deletions": 40, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e76d309851d86bea20d046239c7f64c4319a7edd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Ferror_constants.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e76d309851d86bea20d046239c7f64c4319a7edd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Ferror_constants.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Ferror_constants.h?ref=e76d309851d86bea20d046239c7f64c4319a7edd", "patch": "@@ -41,99 +41,120 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n // replaced by Winsock WSA-prefixed equivalents.\n   enum class errc\n     {\n-//    address_family_not_supported = \t\tEAFNOSUPPORT,\n-//    address_in_use = \t\t\t\tEADDRINUSE,\n-//    address_not_available = \t\t\tEADDRNOTAVAIL,\n-//    already_connected = \t\t\tEISCONN,\n+      address_family_not_supported = \t\tEAFNOSUPPORT,\n+      address_in_use = \t\t\t\tEADDRINUSE,\n+      address_not_available = \t\t\tEADDRNOTAVAIL,\n+      already_connected = \t\t\tEISCONN,\n       argument_list_too_long = \t\t\tE2BIG,\n       argument_out_of_domain = \t\t\tEDOM,\n       bad_address = \t\t\t\tEFAULT,\n       bad_file_descriptor = \t\t\tEBADF,\n-//    bad_message = \t\t\t\tEBADMSG,\n+#ifdef _GLIBCXX_HAVE_EBADMSG\n+      bad_message = \t\t\t\tEBADMSG,\n+#endif\n       broken_pipe = \t\t\t\tEPIPE,\n-//    connection_aborted = \t\t\tECONNABORTED,\n-//    connection_already_in_progress = \t\tEALREADY,\n-//    connection_refused = \t\t\tECONNREFUSED,\n-//    connection_reset = \t\t\tECONNRESET,\n-//    cross_device_link = \t\t\tEXDEV,\n-//    destination_address_required = \t\tEDESTADDRREQ,\n+      connection_aborted = \t\t\tECONNABORTED,\n+      connection_already_in_progress = \t\tEALREADY,\n+      connection_refused = \t\t\tECONNREFUSED,\n+      connection_reset = \t\t\tECONNRESET,\n+      cross_device_link = \t\t\tEXDEV,\n+      destination_address_required = \t\tEDESTADDRREQ,\n       device_or_resource_busy = \t\tEBUSY,\n       directory_not_empty = \t\t\tENOTEMPTY,\n       executable_format_error = \t\tENOEXEC,\n       file_exists = \t       \t\t\tEEXIST,\n       file_too_large = \t\t\t\tEFBIG,\n       filename_too_long = \t\t\tENAMETOOLONG,\n       function_not_supported = \t\t\tENOSYS,\n-//    host_unreachable = \t\t\tEHOSTUNREACH,\n-//    identifier_removed = \t\t\tEIDRM,\n+      host_unreachable = \t\t\tEHOSTUNREACH,\n+#ifdef _GLIBCXX_HAVE_EIDRM\n+      identifier_removed = \t\t\tEIDRM,\n+#endif\n       illegal_byte_sequence = \t\t\tEILSEQ,\n       inappropriate_io_control_operation = \tENOTTY,\n       interrupted = \t\t\t\tEINTR,\n       invalid_argument = \t\t\tEINVAL,\n       invalid_seek = \t\t\t\tESPIPE,\n       io_error = \t\t\t\tEIO,\n       is_a_directory = \t\t\t\tEISDIR,\n-//    message_size = \t\t\t\tEMSGSIZE,\n-//    network_down = \t\t\t\tENETDOWN,\n-//    network_reset = \t\t\t\tENETRESET,\n-//    network_unreachable = \t\t\tENETUNREACH,\n-//    no_buffer_space = \t\t\tENOBUFS,\n+      message_size = \t\t\t\tEMSGSIZE,\n+      network_down = \t\t\t\tENETDOWN,\n+      network_reset = \t\t\t\tENETRESET,\n+      network_unreachable = \t\t\tENETUNREACH,\n+      no_buffer_space = \t\t\tENOBUFS,\n #ifdef _GLIBCXX_HAVE_ECHILD\n       no_child_process = \t\t\tECHILD,\n #endif\n-//    no_link = \t\t\t\tENOLINK,\n+#ifdef _GLIBCXX_HAVE_ENOLINK\n+      no_link = \t\t\t\tENOLINK,\n+#endif\n       no_lock_available = \t\t\tENOLCK,\n-//    no_message_available = \t\t\tENODATA,\n-//    no_message = \t\t\t\tENOMSG,\n-//    no_protocol_option = \t\t\tENOPROTOOPT,\n+#ifdef _GLIBCXX_HAVE_ENODATA\n+      no_message_available = \t\t\tENODATA,\n+#endif\n+#ifdef _GLIBCXX_HAVE_ENOMSG\n+      no_message = \t\t\t\tENOMSG,\n+#endif\n+      no_protocol_option = \t\t\tENOPROTOOPT,\n #ifdef _GLIBCXX_HAVE_ENOSPC\n       no_space_on_device = \t\t\tENOSPC,\n #endif\n-//    no_stream_resources = \t\t\tENOSR,\n+#ifdef _GLIBCXX_HAVE_ENOSR\n+      no_stream_resources = \t\t\tENOSR,\n+#endif\n       no_such_device_or_address = \t\tENXIO,\n       no_such_device = \t\t\t\tENODEV,\n       no_such_file_or_directory = \t\tENOENT,\n       no_such_process = \t\t\tESRCH,\n       not_a_directory = \t\t\tENOTDIR,\n-//    not_a_socket = \t\t\t\tENOTSOCK,\n-//    not_a_stream = \t\t\t\tENOSTR,\n-//    not_connected = \t\t\t\tENOTCONN,\n+      not_a_socket = \t\t\t\tENOTSOCK,\n+#ifdef _GLIBCXX_HAVE_ENOSTR\n+      not_a_stream = \t\t\t\tENOSTR,\n+#endif\n+      not_connected = \t\t\t\tENOTCONN,\n       not_enough_memory = \t\t\tENOMEM,\n #ifdef _GLIBCXX_HAVE_ENOTSUP\n       not_supported = \t\t\t\tENOTSUP,\n #endif\n-//    operation_canceled = \t\t\tECANCELED,\n-//    operation_in_progress = \t\t\tEINPROGRESS,\n+      operation_canceled = \t\t\tECANCELED,\n+      operation_in_progress = \t\t\tEINPROGRESS,\n #ifdef _GLIBCXX_HAVE_EPERM\n       operation_not_permitted = \t\tEPERM,\n #endif\n-//    operation_not_supported = \t\tEOPNOTSUPP,\n+      operation_not_supported = \t\tEOPNOTSUPP,\n #ifdef _GLIBCXX_HAVE_EWOULDBLOCK\n       operation_would_block = \t\t\tEWOULDBLOCK,\n #endif\n-//    owner_dead = \t\t\t\tEOWNERDEAD,\n+#ifdef _GLIBCXX_HAVE_EOWNERDEAD\n+      owner_dead = \t\t\t\tEOWNERDEAD,\n+#endif\n       permission_denied = \t\t\tEACCES,\n-//    protocol_error = \t\t\t\tEPROTO,\n-//    protocol_not_supported = \t\t\tEPROTONOSUPPORT,\n+      protocol_error = \t\t\t\tEPROTO,\n+      protocol_not_supported = \t\t\tEPROTONOSUPPORT,\n       read_only_file_system = \t\t\tEROFS,\n       resource_deadlock_would_occur = \t\tEDEADLK,\n       resource_unavailable_try_again = \t\tEAGAIN,\n       result_out_of_range = \t\t\tERANGE,\n-//    state_not_recoverable = \t\t\tENOTRECOVERABLE,\n-//    stream_timeout = \t\t\t\tETIME,\n-//    text_file_busy = \t\t\t\tETXTBSY,\n+#ifdef _GLIBCXX_HAVE_ENOTRECOVERABLE\n+      state_not_recoverable = \t\t\tENOTRECOVERABLE,\n+#endif\n+#ifdef _GLIBCXX_HAVE_ETIME\n+      stream_timeout = \t\t\t\tETIME,\n+#endif\n+#ifdef _GLIBCXX_HAVE_ETXTBSY\n+      text_file_busy = \t\t\t\tETXTBSY,\n+#endif\n #ifdef _GLIBCXX_HAVE_ETIMEDOUT\n       timed_out = \t\t\t\tETIMEDOUT,\n #endif\n       too_many_files_open_in_system = \t\tENFILE,\n       too_many_files_open = \t\t\tEMFILE,\n-      too_many_links = \t\t\t\tEMLINK\n-//    too_many_symbolic_link_levels = \t\tELOOP,\n+      too_many_links = \t\t\t\tEMLINK,\n+      too_many_symbolic_link_levels = \t\tELOOP,\n #ifdef _GLIBCXX_HAVE_EOVERFLOW\n-\t,\n-      value_too_large = \t\t\tEOVERFLOW\n+      value_too_large = \t\t\tEOVERFLOW,\n #endif\n-//    wrong_protocol_type = \t\t\tEPROTOTYPE\n+      wrong_protocol_type = \t\t\tEPROTOTYPE\n    };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "20b5cce8d1ace81dad03ffd84bcf45f52ef3d4ae", "filename": "libstdc++-v3/testsuite/19_diagnostics/headers/system_error/errc_std_c++0x.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e76d309851d86bea20d046239c7f64c4319a7edd/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Ferrc_std_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e76d309851d86bea20d046239c7f64c4319a7edd/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Ferrc_std_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Ferrc_std_c%2B%2B0x.cc?ref=e76d309851d86bea20d046239c7f64c4319a7edd", "patch": "@@ -82,7 +82,9 @@ void test01()\n   TEST_ERRC(no_message_available);\n #endif\n \n+#ifdef _GLIBCXX_HAVE_ENOMSG\n   TEST_ERRC(no_message);\n+#endif\n   TEST_ERRC(no_protocol_option);\n   TEST_ERRC(no_space_on_device);\n "}]}