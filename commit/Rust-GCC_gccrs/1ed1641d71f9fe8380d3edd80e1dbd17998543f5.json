{"sha": "1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVkMTY0MWQ3MWY5ZmU4MzgwZDNlZGQ4MGUxZGJkMTc5OTg1NDNmNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-05-24T11:49:46Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-05-24T11:49:46Z"}, "message": "Makefile.in (GCC_OBJS): Remove opts-common.o and options.o.\n\n\t* Makefile.in (GCC_OBJS): Remove opts-common.o and options.o.\n\t(OBJS): Remove options.o, opts-common.o and prefix.o.\n\t(OBJS-libcommon-target): New.\n\t(ALL_HOST_BACKEND_OBJS): Include $(OBJS-libcommon-target).\n\t(BACKEND): Include libcommon-target.a.\n\t(MOSTLYCLEANFILES): Include libcommon-target.a.\n\t(libcommon-target.a): New.\n\t(xgcc$(exeext), cpp$(exeext)): Use libcommon-target.a instead of\n\tprefix.o.\n\nada:\n\t* gcc-interface/Make-lang.in (GNAT1_OBJS): Don't include\n\t$(EXTRA_GNAT1_OBJS).\n\t(GNATBIND_OBJS): Don't include $(EXTRA_GNATBIND_OBJS).\n\t(EXTRA_GNAT1_OBJS, EXTRA_GNATBIND_OBJS): Remove.\n\t(gnat1$(exeext), gnatbind$(exeext)): Use libcommon-target.a.\n\t* gcc-interface/Makefile.in (EXTRA_GNATTOOLS_OBJS): Use\n\tlibcommon-target.a instead of prefix.o.\n\ncp:\n\t* Make-lang.in (GXX_OBJS): Remove prefix.o.\n\t(g++$(exeext)): Use libcommon-target.a.\n\t(CXX_C_OBJS): Remove prefix.o.\n\nfortran:\n\t* Make-lang.in (GFORTRAN_D_OBJS): Remove prefix.o.\n\t(gfortran$(exeext)): Use libcommon-target.a.\n\ngo:\n\t* Make-lang.in (GCCGO_OBJS): Remove prefix.o.\n\t(gccgo$(exeext)): Use libcommon-target.a.\n\njava:\n\t* Make-lang.in ($(XGCJ)$(exeext)): Use libcommon-target.a instead\n\tof prefix.o.\n\nFrom-SVN: r174109", "tree": {"sha": "022c86931b9a3b4e558e22ca7f2501607aa7bece", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/022c86931b9a3b4e558e22ca7f2501607aa7bece"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "782378a6aedade2d62515e7a09183beae3bfcebb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/782378a6aedade2d62515e7a09183beae3bfcebb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/782378a6aedade2d62515e7a09183beae3bfcebb"}], "stats": {"total": 120, "additions": 84, "deletions": 36}, "files": [{"sha": "cf44fed9bdf71e949deb33b9237c039b67282b1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -1,3 +1,15 @@\n+2011-05-24  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Makefile.in (GCC_OBJS): Remove opts-common.o and options.o.\n+\t(OBJS): Remove options.o, opts-common.o and prefix.o.\n+\t(OBJS-libcommon-target): New.\n+\t(ALL_HOST_BACKEND_OBJS): Include $(OBJS-libcommon-target).\n+\t(BACKEND): Include libcommon-target.a.\n+\t(MOSTLYCLEANFILES): Include libcommon-target.a.\n+\t(libcommon-target.a): New.\n+\t(xgcc$(exeext), cpp$(exeext)): Use libcommon-target.a instead of\n+\tprefix.o.\n+\n 2011-05-23  Joseph Myers  <joseph@codesourcery.com>\n \n \t* optc-save-gen.awk: New.  Based on optc-gen.awk.  Don't generate"}, {"sha": "2aee94839970b3cc54a40bb4f6678d93a1341d29", "filename": "gcc/Makefile.in", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -1168,7 +1168,7 @@ CXX_TARGET_OBJS=@cxx_target_objs@\n FORTRAN_TARGET_OBJS=@fortran_target_objs@\n \n # Object files for gcc driver.\n-GCC_OBJS = gcc.o opts-common.o options.o vec.o ggc-none.o\n+GCC_OBJS = gcc.o vec.o ggc-none.o\n \n # Language-specific object files shared by all C-family front ends.\n C_COMMON_OBJS = c-family/c-common.o c-family/c-cppbuiltin.o c-family/c-dump.o \\\n@@ -1340,9 +1340,7 @@ OBJS = \\\n \tomega.o \\\n \tomp-low.o \\\n \toptabs.o \\\n-\toptions.o \\\n \toptions-save.o \\\n-\topts-common.o \\\n \topts-global.o \\\n \topts.o \\\n \tparams.o \\\n@@ -1352,7 +1350,6 @@ OBJS = \\\n \tpostreload-gcse.o \\\n \tpostreload.o \\\n \tpredict.o \\\n-\tprefix.o \\\n \tprint-rtl.o \\\n \tprint-tree.o \\\n \tprofile.o \\\n@@ -1494,21 +1491,25 @@ OBJS = \\\n # no target dependencies.\n OBJS-libcommon = diagnostic.o pretty-print.o intl.o input.o version.o\n \n+# Objects in libcommon-target.a, used by drivers and by the core\n+# compiler and containing target-dependent code.\n+OBJS-libcommon-target = prefix.o opts-common.o options.o\n+\n # This lists all host objects for the front ends.\n ALL_HOST_FRONTEND_OBJS = $(C_OBJS) \\\n   $(foreach v,$(CONFIG_LANGUAGES),$($(v)_OBJS))\n \n ALL_HOST_BACKEND_OBJS = $(GCC_OBJS) $(OBJS) $(OBJS-libcommon) \\\n-  @TREEBROWSER@ main.o gccspec.o prefix.o cppspec.o \\\n+  $(OBJS-libcommon-target) @TREEBROWSER@ main.o gccspec.o cppspec.o \\\n   $(COLLECT2_OBJS) $(EXTRA_GCC_OBJS) mips-tfile.o mips-tdump.o \\\n   $(GCOV_OBJS) $(GCOV_DUMP_OBJS)\n \n # This lists all host object files, whether they are included in this\n # compilation or not.\n ALL_HOST_OBJS = $(ALL_HOST_FRONTEND_OBJS) $(ALL_HOST_BACKEND_OBJS)\n \n-BACKEND = main.o @TREEBROWSER@ libbackend.a libcommon.a $(CPPLIB) \\\n-\t$(LIBDECNUMBER)\n+BACKEND = main.o @TREEBROWSER@ libbackend.a libcommon-target.a libcommon.a \\\n+\t$(CPPLIB) $(LIBDECNUMBER)\n \n MOSTLYCLEANFILES = insn-flags.h insn-config.h insn-codes.h \\\n  insn-output.c insn-recog.c insn-emit.c insn-extract.c insn-peep.c \\\n@@ -1520,7 +1521,8 @@ MOSTLYCLEANFILES = insn-flags.h insn-config.h insn-codes.h \\\n  $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) \\\n  $(SPECS) collect2$(exeext) lto-wrapper$(exeext) \\\n  gcov-iov$(build_exeext) gcov$(exeext) gcov-dump$(exeext) \\\n- *.[0-9][0-9].* *.[si] *-checksum.c libbackend.a libcommon.a libgcc.mk\n+ *.[0-9][0-9].* *.[si] *-checksum.c libbackend.a libcommon-target.a \\\n+ libcommon.a libgcc.mk\n \n # Defined in libgcc2.c, included only in the static library.\n LIB2FUNCS_ST = _eprintf __gcc_bcmp\n@@ -1832,6 +1834,11 @@ libbackend.a: $(OBJS)\n \t$(AR) $(AR_FLAGS) libbackend.a $(OBJS)\n \t-$(RANLIB) $(RANLIB_FLAGS) libbackend.a\n \n+libcommon-target.a: $(OBJS-libcommon-target)\n+\t-rm -rf libcommon-target.a\n+\t$(AR) $(AR_FLAGS) libcommon-target.a $(OBJS-libcommon-target)\n+\t-$(RANLIB) $(RANLIB_FLAGS) libcommon-target.a\n+\n libcommon.a: $(OBJS-libcommon)\n \t-rm -rf libcommon.a\n \t$(AR) $(AR_FLAGS) libcommon.a $(OBJS-libcommon)\n@@ -1840,16 +1847,18 @@ libcommon.a: $(OBJS-libcommon)\n # We call this executable `xgcc' rather than `gcc'\n # to avoid confusion if the current directory is in the path\n # and CC is `gcc'.  It is renamed to `gcc' when it is installed.\n-xgcc$(exeext): $(GCC_OBJS) gccspec.o prefix.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n+xgcc$(exeext): $(GCC_OBJS) gccspec.o libcommon-target.a $(LIBDEPS) \\\n+\t$(EXTRA_GCC_OBJS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n-\t  gccspec.o prefix.o $(EXTRA_GCC_OBJS) $(LIBS)\n+\t  gccspec.o $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBS)\n \n # cpp is to cpp0 as gcc is to cc1.\n # The only difference from xgcc is that it's linked with cppspec.o\n # instead of gccspec.o.\n-cpp$(exeext): $(GCC_OBJS) cppspec.o prefix.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n+cpp$(exeext): $(GCC_OBJS) cppspec.o libcommon-target.a $(LIBDEPS) \\\n+\t$(EXTRA_GCC_OBJS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n-\t  cppspec.o prefix.o $(EXTRA_GCC_OBJS) $(LIBS)\n+\t  cppspec.o $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBS)\n \n # Dump a specs file to make -B./ read these specs over installed ones.\n $(SPECS): xgcc$(exeext)"}, {"sha": "2836e2619fd0f6d9edc643925f5f4f10c12a3a8a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -1,3 +1,13 @@\n+2011-05-24  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc-interface/Make-lang.in (GNAT1_OBJS): Don't include\n+\t$(EXTRA_GNAT1_OBJS).\n+\t(GNATBIND_OBJS): Don't include $(EXTRA_GNATBIND_OBJS).\n+\t(EXTRA_GNAT1_OBJS, EXTRA_GNATBIND_OBJS): Remove.\n+\t(gnat1$(exeext), gnatbind$(exeext)): Use libcommon-target.a.\n+\t* gcc-interface/Makefile.in (EXTRA_GNATTOOLS_OBJS): Use\n+\tlibcommon-target.a instead of prefix.o.\n+\n 2011-05-21  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR ada/49097"}, {"sha": "dbd1f08b7e1cf70f969bca1c6922ba92773c4210", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -340,7 +340,7 @@ GNAT_ADA_OBJS =\t\\\n # Object files for gnat executables\n GNAT1_ADA_OBJS = $(GNAT_ADA_OBJS) ada/back_end.o ada/gnat1drv.o\n \n-GNAT1_OBJS = $(GNAT1_C_OBJS) $(GNAT1_ADA_OBJS) $(EXTRA_GNAT1_OBJS)\n+GNAT1_OBJS = $(GNAT1_C_OBJS) $(GNAT1_ADA_OBJS)\n \n GNATBIND_OBJS = \\\n  ada/adaint.o     \\\n@@ -464,12 +464,7 @@ GNATBIND_OBJS = \\\n  ada/uintp.o      \\\n  ada/uname.o      \\\n  ada/urealp.o     \\\n- ada/widechar.o   \\\n- $(EXTRA_GNATBIND_OBJS)\n-\n-# List of extra object files linked in with various programs.\n-EXTRA_GNAT1_OBJS = prefix.o\n-EXTRA_GNATBIND_OBJS = prefix.o\n+ ada/widechar.o\n \n # Language-independent object files.\n ADA_BACKEND = $(BACKEND) attribs.o\n@@ -480,12 +475,12 @@ TARGET_ADA_SRCS =\n # Needs to be built with CC=gcc\n # Since the RTL should be built with the latest compiler, remove the\n #  stamp target in the parent directory whenever gnat1 is rebuilt\n-gnat1$(exeext): $(TARGET_ADA_SRCS) $(GNAT1_OBJS) $(ADA_BACKEND) $(LIBDEPS)\n-\t$(GCC_LINK) -o $@ $(GNAT1_OBJS) $(ADA_BACKEND) $(LIBS) $(SYSLIBS) $(BACKENDLIBS) $(CFLAGS)\n+gnat1$(exeext): $(TARGET_ADA_SRCS) $(GNAT1_OBJS) $(ADA_BACKEND) libcommon-target.a $(LIBDEPS)\n+\t$(GCC_LINK) -o $@ $(GNAT1_OBJS) $(ADA_BACKEND) libcommon-target.a $(LIBS) $(SYSLIBS) $(BACKENDLIBS) $(CFLAGS)\n \t$(RM) stamp-gnatlib2-rts stamp-tools\n \n-gnatbind$(exeext): ada/b_gnatb.o $(CONFIG_H) $(GNATBIND_OBJS) $(LIBDEPS)\n-\t$(GCC_LINK) -o $@ ada/b_gnatb.o $(GNATBIND_OBJS) $(LIBS) $(SYSLIBS) $(CFLAGS)\n+gnatbind$(exeext): ada/b_gnatb.o $(CONFIG_H) $(GNATBIND_OBJS) libcommon-target.a $(LIBDEPS)\n+\t$(GCC_LINK) -o $@ ada/b_gnatb.o $(GNATBIND_OBJS) libcommon-target.a $(LIBS) $(SYSLIBS) $(CFLAGS)\n \n # use cross-gcc\n gnat-cross: force"}, {"sha": "0b58c1889f4fb7df0554745c65cd32ada9964049", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -180,7 +180,7 @@ LIBINTL_DEP = @LIBINTL_DEP@\n SYSLIBS = @GNAT_LIBEXC@\n \n # List of extra object files linked in with various programs.\n-EXTRA_GNATTOOLS_OBJS = ../../prefix.o ../../libcommon.a\n+EXTRA_GNATTOOLS_OBJS = ../../libcommon-target.a ../../libcommon.a\n \n # List extra gnattools\n EXTRA_GNATTOOLS ="}, {"sha": "8c47e0f98cce286bad6da2dc833fba3c2cce036c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -1,3 +1,9 @@\n+2011-05-24  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in (GXX_OBJS): Remove prefix.o.\n+\t(g++$(exeext)): Use libcommon-target.a.\n+\t(CXX_C_OBJS): Remove prefix.o.\n+\n 2011-05-23  Jason Merrill  <jason@redhat.com>\n \n \t* pt.c (tsubst_copy_and_build): Use current_class_name."}, {"sha": "45efd67d8cdb15ac55d083163eb34d89f40b4f7e", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -60,10 +60,10 @@ g++spec.o: $(srcdir)/cp/g++spec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n \t\t$(INCLUDES) $(srcdir)/cp/g++spec.c)\n \n # Create the compiler driver for g++.\n-GXX_OBJS = $(GCC_OBJS) g++spec.o prefix.o\n-g++$(exeext): $(GXX_OBJS) $(EXTRA_GCC_OBJS) $(LIBDEPS)\n+GXX_OBJS = $(GCC_OBJS) g++spec.o\n+g++$(exeext): $(GXX_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n-\t  $(GXX_OBJS) $(EXTRA_GCC_OBJS) $(LIBS)\n+\t  $(GXX_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBS)\n \n # Create a version of the g++ driver which calls the cross-compiler.\n g++-cross$(exeext): g++$(exeext)\n@@ -72,7 +72,7 @@ g++-cross$(exeext): g++$(exeext)\n \n # The compiler itself.\n # Shared with C front end:\n-CXX_C_OBJS = attribs.o incpath.o prefix.o \\\n+CXX_C_OBJS = attribs.o incpath.o \\\n \t$(C_COMMON_OBJS) $(CXX_TARGET_OBJS)\n \n # Language-specific object files for C++ and Objective C++."}, {"sha": "e8a008452c4c1c65cab110cb7b0d568261e9bb15", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -1,3 +1,8 @@\n+2011-05-24  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in (GFORTRAN_D_OBJS): Remove prefix.o.\n+\t(gfortran$(exeext)): Use libcommon-target.a.\n+\n 2011-05-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* frontend-passes.c (cfe_register_funcs):  Also register"}, {"sha": "f20638cb9a8243ee41ff9c19a8346a3a90566768", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -84,10 +84,11 @@ gfortranspec.o: $(srcdir)/fortran/gfortranspec.c $(SYSTEM_H) $(TM_H) $(GCC_H) \\\n \t\t$(INCLUDES) $(srcdir)/fortran/gfortranspec.c)\n \n # Create the compiler driver gfortran.\n-GFORTRAN_D_OBJS = $(GCC_OBJS) gfortranspec.o prefix.o\n-gfortran$(exeext): $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) $(LIBDEPS)\n+GFORTRAN_D_OBJS = $(GCC_OBJS) gfortranspec.o\n+gfortran$(exeext): $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \\\n+\t$(LIBDEPS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n-\t  $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) $(LIBS)\n+\t  $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBS)\n \n # Create a version of the gfortran driver which calls the cross-compiler.\n gfortran-cross$(exeext): gfortran$(exeext)"}, {"sha": "1e936a69c93b6f00e6a8bbda80751bcaa86c6ce5", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -1,3 +1,8 @@\n+2011-05-24  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in (GCCGO_OBJS): Remove prefix.o.\n+\t(gccgo$(exeext)): Use libcommon-target.a.\n+\n 2011-05-20  Joseph Myers  <joseph@codesourcery.com>\n \n \t* Make-lang.in (GCCGO_OBJS): Remove intl.o and version.o."}, {"sha": "82e219baa6fecc00f5cd9d3b736a3438d2ac5670", "filename": "gcc/go/Make-lang.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fgo%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fgo%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FMake-lang.in?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -36,10 +36,10 @@ gospec.o: $(srcdir)/go/gospec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n \t\t$(INCLUDES) $(srcdir)/go/gospec.c)\n \n-GCCGO_OBJS = $(GCC_OBJS) gospec.o prefix.o\n-gccgo$(exeext): $(GCCGO_OBJS) $(EXTRA_GCC_OBJS) $(LIBDEPS)\n+GCCGO_OBJS = $(GCC_OBJS) gospec.o\n+gccgo$(exeext): $(GCCGO_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)\n \t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n-\t  $(GCCGO_OBJS) $(EXTRA_GCC_OBJS) $(LIBS)\n+\t  $(GCCGO_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBS)\n \n # Use strict warnings.\n go-warn = $(STRICT_WARN)"}, {"sha": "3bf7405d8e1ba73f1b88ef05ca1edb4c630517ac", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -1,3 +1,8 @@\n+2011-05-24  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in ($(XGCJ)$(exeext)): Use libcommon-target.a instead\n+\tof prefix.o.\n+\n 2011-05-20  Joseph Myers  <joseph@codesourcery.com>\n \n \t* Make-lang.in ($(XGCJ)$(exeext)): Don't explicitly use intl.o and"}, {"sha": "bdd8b18342a21b05a3493f78dc2fc85273173df1", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed1641d71f9fe8380d3edd80e1dbd17998543f5/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=1ed1641d71f9fe8380d3edd80e1dbd17998543f5", "patch": "@@ -64,9 +64,9 @@ jvspec.o: $(srcdir)/java/jvspec.c $(SYSTEM_H) coretypes.h $(TM_H) \\\n \n # Create the compiler driver for $(XGCJ).\n $(XGCJ)$(exeext): $(GCC_OBJS) jvspec.o java/jcf-path.o \\\n-\t   prefix.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n+\t   libcommon-target.a $(LIBDEPS) $(EXTRA_GCC_OBJS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n-\t  jvspec.o java/jcf-path.o prefix.o $(EXTRA_GCC_OBJS) $(LIBS)\n+\t  jvspec.o java/jcf-path.o $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBS)\n \n # Create a version of the $(XGCJ) driver which calls the cross-compiler.\n $(XGCJ)-cross$(exeext): $(XGCJ)$(exeext)"}]}