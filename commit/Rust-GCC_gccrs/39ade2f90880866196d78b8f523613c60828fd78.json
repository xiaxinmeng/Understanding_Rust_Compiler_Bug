{"sha": "39ade2f90880866196d78b8f523613c60828fd78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlhZGUyZjkwODgwODY2MTk2ZDc4YjhmNTIzNjEzYzYwODI4ZmQ3OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T08:33:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T08:33:14Z"}, "message": "[multiple changes]\n\n2011-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-pooloc.ads, s-pooglo.ads: Minor reformatting\n\n2011-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads, exp_ch4.adb: Minor reformatting.\n\n2011-08-04  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* back_end.ads (Gen_Or_Update_Object_File): Add more comments.\n\nFrom-SVN: r177333", "tree": {"sha": "f671819f963fa7db71bf6e46d56d973827d28ea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f671819f963fa7db71bf6e46d56d973827d28ea3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39ade2f90880866196d78b8f523613c60828fd78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ade2f90880866196d78b8f523613c60828fd78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39ade2f90880866196d78b8f523613c60828fd78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ade2f90880866196d78b8f523613c60828fd78/comments", "author": null, "committer": null, "parents": [{"sha": "a25f5ee669dd1e1b1e4e53b501b0ff416601c52c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a25f5ee669dd1e1b1e4e53b501b0ff416601c52c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a25f5ee669dd1e1b1e4e53b501b0ff416601c52c"}], "stats": {"total": 151, "additions": 85, "deletions": 66}, "files": [{"sha": "5fe886421a3d9652fe4100bd71918a758c61bd89", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ade2f90880866196d78b8f523613c60828fd78/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ade2f90880866196d78b8f523613c60828fd78/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=39ade2f90880866196d78b8f523613c60828fd78", "patch": "@@ -1,3 +1,21 @@\n+2011-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-pooloc.ads, s-pooglo.ads: Minor reformatting\n+\n+2011-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\tPR ada/47880\n+\t* s-pooloc.adb (Deallocate): Fix the case of deallocating the only\n+\tallocated object.\n+\n+2011-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads, exp_ch4.adb: Minor reformatting.\n+\n+2011-08-04  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* back_end.ads (Gen_Or_Update_Object_File): Add more comments.\n+\n 2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch4.adb (Expand_Composite_Equality): code cleanup: use component"}, {"sha": "bfa2eb5b440da98a642cd75de3d3cef91d819b0a", "filename": "gcc/ada/back_end.ads", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ade2f90880866196d78b8f523613c60828fd78/gcc%2Fada%2Fback_end.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ade2f90880866196d78b8f523613c60828fd78/gcc%2Fada%2Fback_end.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.ads?ref=39ade2f90880866196d78b8f523613c60828fd78", "patch": "@@ -83,7 +83,14 @@ package Back_End is\n    --  be added to the Compilation_Arguments table.\n \n    procedure Gen_Or_Update_Object_File;\n-   --  Is used to generate the object file, or update it so that its timestamp\n-   --  is updated.\n+   --  Is used to generate the object file (if generated directly by gnat1), or\n+   --  update it if it has already been generated by the call to Call_Back_End,\n+   --  so that its timestamp is updated by the call.\n+   --\n+   --  This is a no-op with the gcc back-end (the object file is generated by\n+   --  the assembler afterwards), but is needed for back-ends that directly\n+   --  generate the final object file (such as the .NET backend) so that the\n+   --  object file's timestamp is correct when compared with the corresponding\n+   --  ali file by gnatmake.\n \n end Back_End;"}, {"sha": "84fd79d3657567883ac76f8bdfcced4672f04c84", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ade2f90880866196d78b8f523613c60828fd78/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ade2f90880866196d78b8f523613c60828fd78/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=39ade2f90880866196d78b8f523613c60828fd78", "patch": "@@ -1273,8 +1273,9 @@ package Einfo is\n --       the floating-point representation to be used.\n \n --    Formal_Proof_On (Flag254)\n---       Present in subprogram entities. Set for subprograms whose body\n---       contains an Annotate pragma which forces formal proof on this body.\n+--       Present in subprogram and generic subprogram entities. Set on for\n+--       subprograms whose body contains an Annotate pragma which forces formal\n+--       proof on this body.\n \n --    Freeze_Node (Node7)\n --       Present in all entities. If there is an associated freeze node for\n@@ -5249,6 +5250,7 @@ package Einfo is\n    --    Delay_Cleanups                      (Flag114)\n    --    Delay_Subprogram_Descriptors        (Flag50)\n    --    Discard_Names                       (Flag88)\n+   --    Formal_Proof_On                     (Flag254)\n    --    Has_Completion                      (Flag26)\n    --    Has_Controlling_Result              (Flag98)\n    --    Has_Invariants                      (Flag232)\n@@ -5395,6 +5397,7 @@ package Einfo is\n    --    Is_Primitive                        (Flag218)\n    --    Is_Thunk                            (Flag225)\n    --    Default_Expressions_Processed       (Flag108)\n+   --    Formal_Proof_On                     (Flag254)\n    --    Aren't there more flags and fields? seems like this list should be\n    --    more similar to the E_Function list, which is much longer ???\n \n@@ -5515,6 +5518,7 @@ package Einfo is\n    --    Delay_Cleanups                      (Flag114)\n    --    Delay_Subprogram_Descriptors        (Flag50)\n    --    Discard_Names                       (Flag88)\n+   --    Formal_Proof_On                     (Flag254)\n    --    Has_Completion                      (Flag26)\n    --    Has_Invariants                      (Flag232)\n    --    Has_Master_Entity                   (Flag21)"}, {"sha": "2444e60004b29eec3e133292b29cbaf6d4a45ca1", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 44, "deletions": 54, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ade2f90880866196d78b8f523613c60828fd78/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ade2f90880866196d78b8f523613c60828fd78/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=39ade2f90880866196d78b8f523613c60828fd78", "patch": "@@ -2125,7 +2125,7 @@ package body Exp_Ch4 is\n \n             if Chars (Prim) = Name_Op_Eq\n               and then Etype (First_Formal (Prim)) =\n-                         Etype (Next_Formal (First_Formal (Prim)))\n+                       Etype (Next_Formal (First_Formal (Prim)))\n               and then Etype (Prim) = Standard_Boolean\n             then\n                if Is_Abstract_Subprogram (Prim) then\n@@ -2136,7 +2136,7 @@ package body Exp_Ch4 is\n                else\n                   return\n                     Make_Function_Call (Loc,\n-                      Name => New_Reference_To (Prim, Loc),\n+                      Name                   => New_Reference_To (Prim, Loc),\n                       Parameter_Associations => New_List (Lhs, Rhs));\n                end if;\n             end if;\n@@ -2177,7 +2177,7 @@ package body Exp_Ch4 is\n          if Is_Elementary_Type (Component_Type (Full_Type))\n            and then not Is_Floating_Point_Type (Component_Type (Full_Type))\n          then\n-            return Make_Op_Eq (Loc, Left_Opnd  => Lhs, Right_Opnd => Rhs);\n+            return Make_Op_Eq (Loc, Left_Opnd => Lhs, Right_Opnd => Rhs);\n \n          --  For composite component types, and floating-point types, use the\n          --  expansion. This deals with tagged component types (where we use\n@@ -2248,10 +2248,10 @@ package body Exp_Ch4 is\n                begin\n                   return\n                     Make_Function_Call (Loc,\n-                      Name => New_Reference_To (Eq_Op, Loc),\n-                      Parameter_Associations =>\n-                        New_List (OK_Convert_To (T, Lhs),\n-                                  OK_Convert_To (T, Rhs)));\n+                      Name                  => New_Reference_To (Eq_Op, Loc),\n+                      Parameter_Associations => New_List (\n+                        OK_Convert_To (T, Lhs),\n+                        OK_Convert_To (T, Rhs)));\n                end;\n \n             else\n@@ -2292,20 +2292,21 @@ package body Exp_Ch4 is\n                         then\n                            Lhs_Discr_Val :=\n                              Make_Selected_Component (Loc,\n-                               Prefix => Prefix (Lhs),\n+                               Prefix        => Prefix (Lhs),\n                                Selector_Name =>\n-                                 New_Copy (\n-                                   Get_Discriminant_Value (\n-                                     First_Discriminant (Lhs_Type),\n-                                     Lhs_Type,\n-                                     Stored_Constraint (Lhs_Type))));\n+                                 New_Copy\n+                                   (Get_Discriminant_Value\n+                                      (First_Discriminant (Lhs_Type),\n+                                       Lhs_Type,\n+                                       Stored_Constraint (Lhs_Type))));\n \n                         else\n-                           Lhs_Discr_Val := New_Copy (\n-                             Get_Discriminant_Value (\n-                               First_Discriminant (Lhs_Type),\n-                               Lhs_Type,\n-                               Stored_Constraint (Lhs_Type)));\n+                           Lhs_Discr_Val :=\n+                             New_Copy\n+                               (Get_Discriminant_Value\n+                                  (First_Discriminant (Lhs_Type),\n+                                   Lhs_Type,\n+                                   Stored_Constraint (Lhs_Type)));\n \n                         end if;\n                      else\n@@ -2321,25 +2322,26 @@ package body Exp_Ch4 is\n \n                      if Is_Constrained (Rhs_Type) then\n                         if Nkind (Rhs) = N_Selected_Component\n-                          and then Has_Per_Object_Constraint (\n-                                     Entity (Selector_Name (Rhs)))\n+                          and then Has_Per_Object_Constraint\n+                                     (Entity (Selector_Name (Rhs)))\n                         then\n                            Rhs_Discr_Val :=\n                              Make_Selected_Component (Loc,\n-                               Prefix => Prefix (Rhs),\n+                               Prefix        => Prefix (Rhs),\n                                Selector_Name =>\n-                                 New_Copy (\n-                                   Get_Discriminant_Value (\n-                                     First_Discriminant (Rhs_Type),\n-                                     Rhs_Type,\n-                                     Stored_Constraint (Rhs_Type))));\n+                                 New_Copy\n+                                   (Get_Discriminant_Value\n+                                      (First_Discriminant (Rhs_Type),\n+                                       Rhs_Type,\n+                                       Stored_Constraint (Rhs_Type))));\n \n                         else\n-                           Rhs_Discr_Val := New_Copy (\n-                             Get_Discriminant_Value (\n-                               First_Discriminant (Rhs_Type),\n-                               Rhs_Type,\n-                               Stored_Constraint (Rhs_Type)));\n+                           Rhs_Discr_Val :=\n+                             New_Copy\n+                               (Get_Discriminant_Value\n+                                  (First_Discriminant (Rhs_Type),\n+                                   Rhs_Type,\n+                                   Stored_Constraint (Rhs_Type)));\n \n                         end if;\n                      else\n@@ -2763,8 +2765,7 @@ package body Exp_Ch4 is\n                         if J = N and then Result_May_Be_Null then\n                            Last_Opnd_High_Bound :=\n                              Convert_To (Ityp,\n-                               Make_Integer_Literal (Loc,\n-                                 Intval => Expr_Value (Hi)));\n+                               Make_Integer_Literal (Loc, Expr_Value (Hi)));\n                         end if;\n \n                         --  Exclude null length case unless last operand\n@@ -2778,10 +2779,9 @@ package body Exp_Ch4 is\n                         Is_Fixed_Length (NN) := True;\n                         Fixed_Length (NN)    := Len;\n \n-                        Opnd_Low_Bound (NN) := To_Ityp (\n-                          Make_Integer_Literal (Loc,\n-                            Intval => Expr_Value (Lo)));\n-\n+                        Opnd_Low_Bound (NN) :=\n+                          To_Ityp\n+                            (Make_Integer_Literal (Loc, Expr_Value (Lo)));\n                         Set := True;\n                      end;\n                   end if;\n@@ -2823,10 +2823,7 @@ package body Exp_Ch4 is\n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => Var_Length (NN),\n                    Constant_Present    => True,\n-\n-                   Object_Definition   =>\n-                     New_Occurrence_Of (Artyp, Loc),\n-\n+                   Object_Definition   => New_Occurrence_Of (Artyp, Loc),\n                    Expression          =>\n                      Make_Attribute_Reference (Loc,\n                        Prefix         =>\n@@ -2842,12 +2839,9 @@ package body Exp_Ch4 is\n \n          if NN = 1 then\n             if Is_Fixed_Length (1) then\n-               Aggr_Length (1) :=\n-                 Make_Integer_Literal (Loc,\n-                   Intval => Fixed_Length (1));\n+               Aggr_Length (1) := Make_Integer_Literal (Loc, Fixed_Length (1));\n             else\n-               Aggr_Length (1) :=\n-                 New_Reference_To (Var_Length (1), Loc);\n+               Aggr_Length (1) := New_Reference_To (Var_Length (1), Loc);\n             end if;\n \n          --  If entry is fixed length and only fixed lengths so far, make\n@@ -2876,10 +2870,7 @@ package body Exp_Ch4 is\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Ent,\n                 Constant_Present    => True,\n-\n-                Object_Definition   =>\n-                  New_Occurrence_Of (Artyp, Loc),\n-\n+                Object_Definition   => New_Occurrence_Of (Artyp, Loc),\n                 Expression          =>\n                   Make_Op_Add (Loc,\n                     Left_Opnd  => New_Copy (Aggr_Length (NN - 1)),\n@@ -3214,13 +3205,12 @@ package body Exp_Ch4 is\n \n                      Assign :=\n                        Make_Implicit_If_Statement (Cnode,\n-                         Condition =>\n+                         Condition       =>\n                            Make_Op_Ne (Loc,\n-                             Left_Opnd =>\n+                             Left_Opnd  =>\n                                New_Occurrence_Of (Var_Length (J), Loc),\n                              Right_Opnd => Make_Integer_Literal (Loc, 0)),\n-                         Then_Statements =>\n-                           New_List (Assign));\n+                         Then_Statements => New_List (Assign));\n                   end if;\n \n                   Insert_Action (Cnode, Assign, Suppress => All_Checks);"}, {"sha": "0a4d8eb9b83d670e9393661e7cda50b71a0ec2f1", "filename": "gcc/ada/s-pooglo.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ade2f90880866196d78b8f523613c60828fd78/gcc%2Fada%2Fs-pooglo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ade2f90880866196d78b8f523613c60828fd78/gcc%2Fada%2Fs-pooglo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pooglo.ads?ref=39ade2f90880866196d78b8f523613c60828fd78", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,8 +29,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Storage pool corresponding to default global storage pool used for\n---  types for which no storage pool is specified.\n+--  Storage pool corresponding to default global storage pool used for types\n+--  for which no storage pool is specified.\n \n with System;\n with System.Storage_Pools;\n@@ -43,9 +43,9 @@ package System.Pool_Global is\n    --  Allocation strategy:\n \n    --    Call to malloc/free for each Allocate/Deallocate\n-   --    no user specifiable size\n-   --    no automatic reclaim\n-   --    minimal overhead\n+   --    No user specifiable size\n+   --    No automatic reclaim\n+   --    Minimal overhead\n \n    --  Pool simulating the allocation/deallocation strategy used by the\n    --  compiler for access types globally declared."}, {"sha": "1e7c8accd2d7643a3d00ba6e9a19b63e338219b1", "filename": "gcc/ada/s-pooloc.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ade2f90880866196d78b8f523613c60828fd78/gcc%2Fada%2Fs-pooloc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ade2f90880866196d78b8f523613c60828fd78/gcc%2Fada%2Fs-pooloc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pooloc.ads?ref=39ade2f90880866196d78b8f523613c60828fd78", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,7 +45,7 @@ package System.Pool_Local is\n    --  Allocation strategy:\n \n    --    Call to malloc/free for each Allocate/Deallocate\n-   --    no user specifiable size\n+   --    No user specifiable size\n    --    Space of allocated objects is reclaimed at pool finalization\n    --    Manages a list of allocated objects\n "}]}