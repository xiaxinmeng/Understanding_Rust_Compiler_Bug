{"sha": "dd39c7d1cbdd55657b7ef773f6fa743dcc328670", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzOWM3ZDFjYmRkNTU2NTdiN2VmNzczZjZmYTc0M2RjYzMyODY3MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-02-15T22:01:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-02-15T22:01:33Z"}, "message": "PR c++/84045 - ICE with typedef and noexcept.\n\n\t* except.c (build_noexcept_spec): Use strip_typedefs_expr.\n\nFrom-SVN: r257713", "tree": {"sha": "94dfb136fe2661f4ce4b54e2db0e656b27b34abf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94dfb136fe2661f4ce4b54e2db0e656b27b34abf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd39c7d1cbdd55657b7ef773f6fa743dcc328670", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd39c7d1cbdd55657b7ef773f6fa743dcc328670", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd39c7d1cbdd55657b7ef773f6fa743dcc328670", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd39c7d1cbdd55657b7ef773f6fa743dcc328670/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3ad8745b0559b3abc4253dbc3a659295b142379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3ad8745b0559b3abc4253dbc3a659295b142379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3ad8745b0559b3abc4253dbc3a659295b142379"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "33746aeb23e1931150eebcb429f46f01f92bda49", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd39c7d1cbdd55657b7ef773f6fa743dcc328670/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd39c7d1cbdd55657b7ef773f6fa743dcc328670/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dd39c7d1cbdd55657b7ef773f6fa743dcc328670", "patch": "@@ -1,5 +1,8 @@\n 2018-02-15  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/84045 - ICE with typedef and noexcept.\n+\t* except.c (build_noexcept_spec): Use strip_typedefs_expr.\n+\n \tPR c++/84376 - ICE with omitted template arguments.\n \t* pt.c (dguide_name_p): Check for IDENTIFIER_NODE.\n "}, {"sha": "0b46698b9740f0472b4f4b1138f387ed0e08966b", "filename": "gcc/cp/except.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd39c7d1cbdd55657b7ef773f6fa743dcc328670/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd39c7d1cbdd55657b7ef773f6fa743dcc328670/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=dd39c7d1cbdd55657b7ef773f6fa743dcc328670", "patch": "@@ -1217,6 +1217,10 @@ build_noexcept_spec (tree expr, int complain)\n     {\n       gcc_assert (processing_template_decl\n \t\t  || TREE_CODE (expr) == DEFERRED_NOEXCEPT);\n+      if (TREE_CODE (expr) != DEFERRED_NOEXCEPT)\n+\t/* Avoid problems with a function type built with a dependent typedef\n+\t   being reused in another scope (c++/84045).  */\n+\texpr = strip_typedefs_expr (expr);\n       return build_tree_list (expr, NULL_TREE);\n     }\n }"}, {"sha": "9a435049599af64e80370d99393d698f08a44a80", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept32.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd39c7d1cbdd55657b7ef773f6fa743dcc328670/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd39c7d1cbdd55657b7ef773f6fa743dcc328670/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept32.C?ref=dd39c7d1cbdd55657b7ef773f6fa743dcc328670", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/84045\n+// { dg-do compile { target c++11 } }\n+\n+template <typename T> struct K {\n+  static const bool d = true;\n+};\n+template <typename T, typename> struct B {\n+  typedef K<T> D;\n+  void foo () noexcept (D::d);\n+};\n+template <typename T> struct P {\n+  P () noexcept (K<T>::d);\n+};\n+P<int> p;"}]}