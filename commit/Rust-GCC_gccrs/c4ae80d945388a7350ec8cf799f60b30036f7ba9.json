{"sha": "c4ae80d945388a7350ec8cf799f60b30036f7ba9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRhZTgwZDk0NTM4OGE3MzUwZWM4Y2Y3OTlmNjBiMzAwMzZmN2JhOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-02-07T14:11:26Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-02-07T14:11:26Z"}, "message": "re PR tree-optimization/35085 (gcc.dg/vect/vect-iv-9.c fails)\n\n\tPR tree-optimization/35085\n\t* tree-ssa-reassoc.c (rewrite_expr_tree): Enable destructive update\n\tfor operand entry oe2 in addition to operand entry oe3 in order to\n\texpose more opportunities for vectorizer sum reduction.\n\nFrom-SVN: r132168", "tree": {"sha": "caa1218e23262b710b363a0ef1598e5755b4ea94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caa1218e23262b710b363a0ef1598e5755b4ea94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4ae80d945388a7350ec8cf799f60b30036f7ba9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ae80d945388a7350ec8cf799f60b30036f7ba9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4ae80d945388a7350ec8cf799f60b30036f7ba9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ae80d945388a7350ec8cf799f60b30036f7ba9/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d566d211a223de3a4745d511d4479b5db97b9be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d566d211a223de3a4745d511d4479b5db97b9be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d566d211a223de3a4745d511d4479b5db97b9be"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "334fabf07c16b49ccc415edbf11ebfdda75f8f42", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ae80d945388a7350ec8cf799f60b30036f7ba9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ae80d945388a7350ec8cf799f60b30036f7ba9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4ae80d945388a7350ec8cf799f60b30036f7ba9", "patch": "@@ -1,3 +1,10 @@\n+2008-02-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR tree-optimization/35085\n+\t* tree-ssa-reassoc.c (rewrite_expr_tree): Enable destructive update\n+\tfor operand entry oe2 in addition to operand entry oe3 in order to\n+\texpose more opportunities for vectorizer sum reduction.\n+\n 2008-02-06  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \tPR other/35107"}, {"sha": "a4118c923392ba9ad44cf19515c8f29b85f1fb85", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ae80d945388a7350ec8cf799f60b30036f7ba9/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ae80d945388a7350ec8cf799f60b30036f7ba9/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=c4ae80d945388a7350ec8cf799f60b30036f7ba9", "patch": "@@ -857,6 +857,18 @@ rewrite_expr_tree (tree stmt, unsigned int opindex,\n \t  oe1->op = temp.op;\n \t  oe1->rank= temp.rank;\n \t}\n+      else if ((oe1->rank == oe3->rank\n+\t\t&& oe2->rank != oe3->rank)\n+\t       || (is_phi_for_stmt (stmt, oe2->op)\n+\t\t   && !is_phi_for_stmt (stmt, oe1->op)\n+\t\t   && !is_phi_for_stmt (stmt, oe3->op)))\n+\t{\n+\t  struct operand_entry temp = *oe2;\n+\t  oe2->op = oe1->op;\n+\t  oe2->rank = oe1->rank;\n+\t  oe1->op = temp.op;\n+\t  oe1->rank= temp.rank;\n+\t}\n     }\n \n   /* The final recursion case for this function is that you have"}]}