{"sha": "138b3340e66b3e030d30bfbbeb30b9a10f4677c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM4YjMzNDBlNjZiM2UwMzBkMzBiZmJiZWIzMGI5YTEwZjQ2NzdjMA==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael.morin@tele2.fr", "date": "2008-12-09T19:20:18Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2008-12-09T19:20:18Z"}, "message": "re PR fortran/37469 (invalid GMP usage on gfortran.dg/parameter_array_init_3.f90)\n\n2008-12-09  Mikael Morin  <mikael.morin@tele2.fr>\n\n\tPR fortran/37469\n\t* expr.c (find_array_element): Simplify array bounds.\n\tAssert that both bounds are constant expressions.\n\nFrom-SVN: r142606", "tree": {"sha": "772db53e97ac15092efa5a199e22ce3096439b2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/772db53e97ac15092efa5a199e22ce3096439b2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/138b3340e66b3e030d30bfbbeb30b9a10f4677c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/138b3340e66b3e030d30bfbbeb30b9a10f4677c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/138b3340e66b3e030d30bfbbeb30b9a10f4677c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/138b3340e66b3e030d30bfbbeb30b9a10f4677c0/comments", "author": null, "committer": null, "parents": [{"sha": "fe7a047c75f5a96456ea750a9f91ff41786a23e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7a047c75f5a96456ea750a9f91ff41786a23e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe7a047c75f5a96456ea750a9f91ff41786a23e9"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "5c71e8f64e5521c5acd49bbcd1bdd6bcd5d43a7d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/138b3340e66b3e030d30bfbbeb30b9a10f4677c0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/138b3340e66b3e030d30bfbbeb30b9a10f4677c0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=138b3340e66b3e030d30bfbbeb30b9a10f4677c0", "patch": "@@ -1,3 +1,9 @@\n+2008-12-09  Mikael Morin  <mikael.morin@tele2.fr>\n+\n+\tPR fortran/37469\n+\t* expr.c (find_array_element): Simplify array bounds.\n+\tAssert that both bounds are constant expressions.\n+\n 2008-12-09  Mikael Morin  <mikael.morin@tele2.fr>\n \n \tPR fortran/35983"}, {"sha": "4bdee7c6a8c9230f6d5865459b6a7263f1e76ec3", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/138b3340e66b3e030d30bfbbeb30b9a10f4677c0/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/138b3340e66b3e030d30bfbbeb30b9a10f4677c0/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=138b3340e66b3e030d30bfbbeb30b9a10f4677c0", "patch": "@@ -1028,21 +1028,30 @@ find_array_element (gfc_constructor *cons, gfc_array_ref *ar,\n   mpz_init_set_ui (span, 1);\n   for (i = 0; i < ar->dimen; i++)\n     {\n+      if (gfc_reduce_init_expr (ar->as->lower[i]) == FAILURE\n+\t  || gfc_reduce_init_expr (ar->as->upper[i]) == FAILURE)\n+\t{\n+\t  t = FAILURE;\n+\t  cons = NULL;\n+\t  goto depart;\n+\t}\n+\n       e = gfc_copy_expr (ar->start[i]);\n       if (e->expr_type != EXPR_CONSTANT)\n \t{\n \t  cons = NULL;\n \t  goto depart;\n \t}\n \n+      gcc_assert (ar->as->upper[i]->expr_type == EXPR_CONSTANT\n+\t\t  && ar->as->lower[i]->expr_type == EXPR_CONSTANT);\n+\n       /* Check the bounds.  */\n       if ((ar->as->upper[i]\n-\t   && ar->as->upper[i]->expr_type == EXPR_CONSTANT\n \t   && mpz_cmp (e->value.integer,\n \t\t       ar->as->upper[i]->value.integer) > 0)\n-\t  || (ar->as->lower[i]->expr_type == EXPR_CONSTANT\n-\t      && mpz_cmp (e->value.integer,\n-\t\t\t  ar->as->lower[i]->value.integer) < 0))\n+\t  || (mpz_cmp (e->value.integer,\n+\t\t       ar->as->lower[i]->value.integer) < 0))\n \t{\n \t  gfc_error (\"Index in dimension %d is out of bounds \"\n \t\t     \"at %L\", i + 1, &ar->c_where[i]);"}]}