{"sha": "4a44abab56d863c6916cde14e67b78422a7a3f0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE0NGFiYWI1NmQ4NjNjNjkxNmNkZTE0ZTY3Yjc4NDIyYTdhM2YwYQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2008-10-27T16:45:40Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2008-10-27T16:45:40Z"}, "message": "re PR other/37897 (decNumber functions break strict-aliasing rules)\n\n\tPR other/37897\n\t* decDouble.h (decDouble): Replace struct with union accessible\n\tby more types.\n\t* decSingle.h (decSingle): Ditto.\n\t* decQuad.h (decQuad): Ditto.\n\t* decNumberLocal.h (DFWORD, DFBYTE, DFWWORD): access decFloat via\n\tnew members.\n\t* decBasic.c (decFloatCompareTotal): Avoid type-pun violation.\n\t(decNumberCompare): Ditto.\n\nFrom-SVN: r141386", "tree": {"sha": "130ea634c2b45eddb3c5bd4abf6babb041bd851a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/130ea634c2b45eddb3c5bd4abf6babb041bd851a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a44abab56d863c6916cde14e67b78422a7a3f0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a44abab56d863c6916cde14e67b78422a7a3f0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a44abab56d863c6916cde14e67b78422a7a3f0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a44abab56d863c6916cde14e67b78422a7a3f0a/comments", "author": null, "committer": null, "parents": [{"sha": "cb1ca6ac11d48dc88a44579ed631c3d9d8a3402c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1ca6ac11d48dc88a44579ed631c3d9d8a3402c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb1ca6ac11d48dc88a44579ed631c3d9d8a3402c"}], "stats": {"total": 53, "additions": 37, "deletions": 16}, "files": [{"sha": "eac5148e024f8453b18551e8f9063e782680619f", "filename": "libdecnumber/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a44abab56d863c6916cde14e67b78422a7a3f0a/libdecnumber%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a44abab56d863c6916cde14e67b78422a7a3f0a/libdecnumber%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FChangeLog?ref=4a44abab56d863c6916cde14e67b78422a7a3f0a", "patch": "@@ -1,3 +1,14 @@\n+2008-10-27  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* decDouble.h (decDouble): Replace struct with union accessible\n+\tby more types.\n+\t* decSingle.h (decSingle): Ditto.\n+\t* decQuad.h (decQuad): Ditto.\n+\t* decNumberLocal.h (DFWORD, DFBYTE, DFWWORD): access decFloat via\n+\tnew members.\n+\t* decBasic.c (decFloatCompareTotal): Avoid type-pun violation.\n+\t(decNumberCompare): Ditto.\n+\n 2008-06-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* Makefile.in ($(srcdir)/aclocal.m4): Update dependencies."}, {"sha": "fddba9790531cbc17b5c67963c0fe8dc106b9487", "filename": "libdecnumber/decBasic.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a44abab56d863c6916cde14e67b78422a7a3f0a/libdecnumber%2FdecBasic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a44abab56d863c6916cde14e67b78422a7a3f0a/libdecnumber%2FdecBasic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FdecBasic.c?ref=4a44abab56d863c6916cde14e67b78422a7a3f0a", "patch": "@@ -1660,8 +1660,10 @@ decFloat * decFloatCompareTotal(decFloat *result,\n       /* decode the coefficients */\n       /* (shift both right two if Quad to make a multiple of four) */\n       #if QUAD\n-\tUSHORTAT(bufl)=0;\n-\tUSHORTAT(bufr)=0;\n+\tub = bufl;                           /* avoid type-pun violation */\n+\tUSHORTAT(ub)=0;\n+\tuc = bufr;                           /* avoid type-pun violation */\n+\tUSHORTAT(uc)=0;\n       #endif\n       GETCOEFF(dfl, bufl+QUAD*2);\t     /* decode from decFloat */\n       GETCOEFF(dfr, bufr+QUAD*2);\t     /* .. */\n@@ -3542,8 +3544,10 @@ static Int decNumCompare(const decFloat *dfl, const decFloat *dfr, Flag tot) {\n   /* decode the coefficients */\n   /* (shift both right two if Quad to make a multiple of four) */\n   #if QUAD\n-    UINTAT(bufl)=0;\n-    UINTAT(bufr)=0;\n+    ub=bufl;                            /* avoid type-pun violation */\n+    UINTAT(ub)=0;\n+    uc=bufr;                            /* avoid type-pun violation */\n+    UINTAT(uc)=0;\n   #endif\n   GETCOEFF(dfl, bufl+QUAD*2);\t\t/* decode from decFloat */\n   GETCOEFF(dfr, bufr+QUAD*2);\t\t/* .. */"}, {"sha": "53fcf406bec5608854c2d398f8019f4706db2aea", "filename": "libdecnumber/decDouble.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a44abab56d863c6916cde14e67b78422a7a3f0a/libdecnumber%2FdecDouble.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a44abab56d863c6916cde14e67b78422a7a3f0a/libdecnumber%2FdecDouble.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FdecDouble.h?ref=4a44abab56d863c6916cde14e67b78422a7a3f0a", "patch": "@@ -58,9 +58,11 @@\n   #include \"decContext.h\"\n   #include \"decQuad.h\"\n \n-  /* The decDouble decimal 64-bit type, accessible by bytes */\n-  typedef struct {\n+  /* The decDouble decimal 64-bit type, accessible by various types */\n+  typedef union {\n     uint8_t bytes[DECDOUBLE_Bytes]; /* fields: 1, 5, 8, 50 bits\t  */\n+    uint16_t shorts[DECDOUBLE_Bytes/2];\n+    uint32_t words[DECDOUBLE_Bytes/4];\n     } decDouble;\n \n   /* ---------------------------------------------------------------- */"}, {"sha": "f1568f725e115879826bc7faf72fedc017cfc6af", "filename": "libdecnumber/decNumberLocal.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a44abab56d863c6916cde14e67b78422a7a3f0a/libdecnumber%2FdecNumberLocal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a44abab56d863c6916cde14e67b78422a7a3f0a/libdecnumber%2FdecNumberLocal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FdecNumberLocal.h?ref=4a44abab56d863c6916cde14e67b78422a7a3f0a", "patch": "@@ -308,13 +308,13 @@\n   #define DECWORDS  (DECBYTES/4)\n   #define DECWWORDS (DECWBYTES/4)\n   #if DECLITEND\n-    #define DFWORD(df, off) UINTAT((df)->bytes+(DECWORDS-1-(off))*4)\n-    #define DFBYTE(df, off) UBYTEAT((df)->bytes+(DECBYTES-1-(off)))\n-    #define DFWWORD(dfw, off) UINTAT((dfw)->bytes+(DECWWORDS-1-(off))*4)\n+    #define DFWORD(df, off) ((df)->words[DECWORDS-1-(off)])\n+    #define DFBYTE(df, off) ((df)->bytes[DECBYTES-1-(off)])\n+    #define DFWWORD(dfw, off) ((dfw)->words[DECWWORDS-1-(off)])\n   #else\n-    #define DFWORD(df, off) UINTAT((df)->bytes+(off)*4)\n-    #define DFBYTE(df, off) UBYTEAT((df)->bytes+(off))\n-    #define DFWWORD(dfw, off) UINTAT((dfw)->bytes+(off)*4)\n+    #define DFWORD(df, off) ((df)->words[off])\n+    #define DFBYTE(df, off) ((df)->bytes[off])\n+    #define DFWWORD(dfw, off) ((dfw)->words[off])\n   #endif\n \n   /* Tests for sign or specials, directly on DECFLOATs\t\t      */"}, {"sha": "af9bc24e26543d545ee0e8c79d0a0dc5c36f3cde", "filename": "libdecnumber/decQuad.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a44abab56d863c6916cde14e67b78422a7a3f0a/libdecnumber%2FdecQuad.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a44abab56d863c6916cde14e67b78422a7a3f0a/libdecnumber%2FdecQuad.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FdecQuad.h?ref=4a44abab56d863c6916cde14e67b78422a7a3f0a", "patch": "@@ -59,9 +59,11 @@\n   /* Required include\t\t\t\t\t\t      */\n   #include \"decContext.h\"\n \n-  /* The decQuad decimal 128-bit type, accessible by bytes */\n-  typedef struct {\n+  /* The decQuad decimal 128-bit type, accessible by various types */\n+  typedef union {\n     uint8_t bytes[DECQUAD_Bytes];  /* fields: 1, 5, 12, 110 bits */\n+    uint16_t shorts[DECQUAD_Bytes/2];\n+    uint32_t words[DECQUAD_Bytes/4];\n     } decQuad;\n \n   /* ---------------------------------------------------------------- */"}, {"sha": "bae39848eed7d084eec80b440265f4e223d008cd", "filename": "libdecnumber/decSingle.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a44abab56d863c6916cde14e67b78422a7a3f0a/libdecnumber%2FdecSingle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a44abab56d863c6916cde14e67b78422a7a3f0a/libdecnumber%2FdecSingle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FdecSingle.h?ref=4a44abab56d863c6916cde14e67b78422a7a3f0a", "patch": "@@ -59,9 +59,11 @@\n   #include \"decQuad.h\"\n   #include \"decDouble.h\"\n \n-  /* The decSingle decimal 32-bit type, accessible by bytes */\n-  typedef struct {\n+  /* The decSingle decimal 32-bit type, accessible by various types */\n+  typedef union {\n     uint8_t bytes[DECSINGLE_Bytes];\t/* fields: 1, 5, 6, 20 bits */\n+    uint16_t shorts[DECSINGLE_Bytes/2];\n+    uint32_t words[DECSINGLE_Bytes/4];\n     } decSingle;\n \n   /* ---------------------------------------------------------------- */"}]}