{"sha": "5f6061af2d05babf0c0053d51592a0612d23a196", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY2MDYxYWYyZDA1YmFiZjBjMDA1M2Q1MTU5MmEwNjEyZDIzYTE5Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-03-24T12:21:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-03-24T12:21:37Z"}, "message": "[multiple changes]\n\n2015-03-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb (Rep_Item_Too_Early): allow pragma Convention\n\ton generic type.\n\n2015-03-24  Gary Dismukes  <dismukes@adacore.com>\n\n\t* inline.adb: Minor typo fix.\n\nFrom-SVN: r221629", "tree": {"sha": "42a7063186ce09fb0980b3c941c8107925470e21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42a7063186ce09fb0980b3c941c8107925470e21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f6061af2d05babf0c0053d51592a0612d23a196", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f6061af2d05babf0c0053d51592a0612d23a196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f6061af2d05babf0c0053d51592a0612d23a196", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f6061af2d05babf0c0053d51592a0612d23a196/comments", "author": null, "committer": null, "parents": [{"sha": "a62638a3485c7fb31085a2b0fb973af618ae61d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a62638a3485c7fb31085a2b0fb973af618ae61d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a62638a3485c7fb31085a2b0fb973af618ae61d3"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "e0613e527eb561efe78b6d5347a9b809e55cd262", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f6061af2d05babf0c0053d51592a0612d23a196/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f6061af2d05babf0c0053d51592a0612d23a196/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5f6061af2d05babf0c0053d51592a0612d23a196", "patch": "@@ -1,3 +1,12 @@\n+2015-03-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Rep_Item_Too_Early): allow pragma Convention\n+\ton generic type.\n+\n+2015-03-24  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* inline.adb: Minor typo fix.\n+\n 2015-03-24  Arnaud Charlet  <charlet@adacore.com>\n \n \t* doc/gnat_ugn/building_executable_programs_with_gnat.rst,"}, {"sha": "cf53aae810a9635c9338259497cb850ec5d3acba", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f6061af2d05babf0c0053d51592a0612d23a196/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f6061af2d05babf0c0053d51592a0612d23a196/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=5f6061af2d05babf0c0053d51592a0612d23a196", "patch": "@@ -1337,7 +1337,7 @@ package body Inline is\n    is\n       function Has_Formal_With_Discriminant_Dependent_Fields\n         (Id : Entity_Id) return Boolean;\n-      --  Returns true if the subprogram has at least one formal parameters of\n+      --  Returns true if the subprogram has at least one formal parameter of\n       --  an unconstrained record type with per-object constraints on component\n       --  types.\n "}, {"sha": "6f68e9afbfbfd12437b92916e7b3fc720b589d64", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f6061af2d05babf0c0053d51592a0612d23a196/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f6061af2d05babf0c0053d51592a0612d23a196/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=5f6061af2d05babf0c0053d51592a0612d23a196", "patch": "@@ -11738,6 +11738,8 @@ package body Sem_Ch13 is\n \n       elsif Is_Type (T)\n         and then Is_Generic_Type (Root_Type (T))\n+        and then (Nkind (N) /= N_Pragma\n+                   or else Get_Pragma_Id (N) /= Pragma_Convention)\n       then\n          Error_Msg_N (\"representation item not allowed for generic type\", N);\n          return True;"}]}