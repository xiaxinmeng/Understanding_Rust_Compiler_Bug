{"sha": "f7d601a5bd4fddecedc87ac0a4a57921dac8da60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdkNjAxYTViZDRmZGRlY2VkYzg3YWMwYTRhNTc5MjFkYWM4ZGE2MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-09-06T15:41:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-09-06T15:41:38Z"}, "message": "re PR libstdc++/41267 (vector<>::resize() from an empty vector calls memmove for 0 bytes (twice), wasting a lot of cpu time in a production PowerDNS)\n\n2009-09-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/41267\n\t* include/bits/stl_algobase.h (__copy_move::__copy_m,\n\t__copy_move_backward::__copy_move_b): Don't call __builtin_memmove\n\twith a null third argument.\n\nFrom-SVN: r151459", "tree": {"sha": "3d4ffb55ede66ac17b980b5df1a89b5c78ca7489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d4ffb55ede66ac17b980b5df1a89b5c78ca7489"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7d601a5bd4fddecedc87ac0a4a57921dac8da60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d601a5bd4fddecedc87ac0a4a57921dac8da60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7d601a5bd4fddecedc87ac0a4a57921dac8da60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d601a5bd4fddecedc87ac0a4a57921dac8da60/comments", "author": null, "committer": null, "parents": [{"sha": "0d8d6c874e66e197f3af5c7835c7f0b0ff52f0ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d8d6c874e66e197f3af5c7835c7f0b0ff52f0ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d8d6c874e66e197f3af5c7835c7f0b0ff52f0ac"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "acc7355ac05da920956582bbea98a26241d1c0bd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d601a5bd4fddecedc87ac0a4a57921dac8da60/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d601a5bd4fddecedc87ac0a4a57921dac8da60/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f7d601a5bd4fddecedc87ac0a4a57921dac8da60", "patch": "@@ -1,3 +1,10 @@\n+2009-09-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/41267\n+\t* include/bits/stl_algobase.h (__copy_move::__copy_m,\n+\t__copy_move_backward::__copy_move_b): Don't call __builtin_memmove\n+\twith a null third argument.\n+\n 2009-09-04  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tRevert."}, {"sha": "c638c547887fd8955748613725e6afe60603f673", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d601a5bd4fddecedc87ac0a4a57921dac8da60/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d601a5bd4fddecedc87ac0a4a57921dac8da60/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=f7d601a5bd4fddecedc87ac0a4a57921dac8da60", "patch": "@@ -375,9 +375,10 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n         static _Tp*\n         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)\n         {\n-\t  __builtin_memmove(__result, __first,\n-\t\t\t    sizeof(_Tp) * (__last - __first));\n-\t  return __result + (__last - __first);\n+\t  const ptrdiff_t _Num = __last - __first;\n+\t  if (_Num)\n+\t    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);\n+\t  return __result + _Num;\n \t}\n     };\n \n@@ -572,7 +573,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)\n         {\n \t  const ptrdiff_t _Num = __last - __first;\n-\t  __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);\n+\t  if (_Num)\n+\t    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);\n \t  return __result - _Num;\n \t}\n     };"}]}