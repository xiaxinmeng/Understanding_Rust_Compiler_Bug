{"sha": "6d24de8354b32e9958fa662497525844886b18c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQyNGRlODM1NGIzMmU5OTU4ZmE2NjI0OTc1MjU4NDQ4ODZiMThjMg==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "francois.cppdevs@free.fr", "date": "2010-11-10T21:53:43Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2010-11-10T21:53:43Z"}, "message": "unordered_map (unordered_map<>::_M_profile_size): Simplify, don't take a __new_size argument; adjust all callers.\n\n2010-11-10  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n\n        * include/profile/unordered_map (unordered_map<>::_M_profile_size): \n        Simplify, don't take a __new_size argument; adjust all callers.\n\nFrom-SVN: r166560", "tree": {"sha": "b255d6384a0cd038062875b972a5e9a05276542e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b255d6384a0cd038062875b972a5e9a05276542e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d24de8354b32e9958fa662497525844886b18c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d24de8354b32e9958fa662497525844886b18c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d24de8354b32e9958fa662497525844886b18c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d24de8354b32e9958fa662497525844886b18c2/comments", "author": null, "committer": null, "parents": [{"sha": "5a4b6c0e977e8695f4d0c643d2c34b37b5aac810", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4b6c0e977e8695f4d0c643d2c34b37b5aac810", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a4b6c0e977e8695f4d0c643d2c34b37b5aac810"}], "stats": {"total": 42, "additions": 23, "deletions": 19}, "files": [{"sha": "ab6a3fc1612a3752df15c3bbf69932d3ec2f1140", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d24de8354b32e9958fa662497525844886b18c2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d24de8354b32e9958fa662497525844886b18c2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6d24de8354b32e9958fa662497525844886b18c2", "patch": "@@ -1,3 +1,8 @@\n+2010-11-10  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n+\n+\t* include/profile/unordered_map (unordered_map<>::_M_profile_size):\n+\tSimplify, don't take a __new_size argument; adjust all callers.\n+\n 2010-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/44436 (partial)\n@@ -1524,13 +1529,13 @@\n \n 2010-09-03  Fran\u00e7ois Dumont <francois.cppdevs@free.fr>\n \n-        * testsuite/lib/libstdc++.exp ([check_v3_target_debug_mode]): Fix so\n-        that it really detects when debug mode is activated.\n-        * testsuite/util/debug/construct_neg.h, insert_neg.h, assign_neg.h:\n-        Remove, content moved...\n-        * testsuite/util/debug/checks.h: ... here. Modify checks to take the\n+\t* testsuite/lib/libstdc++.exp ([check_v3_target_debug_mode]): Fix so\n+\tthat it really detects when debug mode is activated.\n+\t* testsuite/util/debug/construct_neg.h, insert_neg.h, assign_neg.h:\n+\tRemove, content moved...\n+\t* testsuite/util/debug/checks.h: ... here. Modify checks to take the\n \ttype of the container to test rather than an intermediate container\n-        type traits helper.\n+\ttype traits helper.\n \t* testsuite/23_containers/unordered_map/debug/insert1_neg.cc: Update to\n \tuse dg-require-debug-mode when necessary and use new check functions.\n \t* testsuite/23_containers/unordered_map/debug/construct1_neg.cc:"}, {"sha": "6d6a8b7e58ede5bc11874496e3dcb08335a7f6ff", "filename": "libstdc++-v3/include/profile/unordered_map", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d24de8354b32e9958fa662497525844886b18c2/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d24de8354b32e9958fa662497525844886b18c2/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map?ref=6d24de8354b32e9958fa662497525844886b18c2", "patch": "@@ -170,15 +170,15 @@ namespace __profile\n       { \n         size_type __old_size = _Base::bucket_count(); \n         _Base::insert(__l);\n-        _M_profile_resize(__old_size, _Base::bucket_count()); \n+        _M_profile_resize(__old_size); \n       }\n \n       std::pair<iterator, bool>\n       insert(const value_type& __obj)\n       {\n         size_type __old_size =  _Base::bucket_count();\n         std::pair<iterator, bool> __res = _Base::insert(__obj);\n-        _M_profile_resize(__old_size, _Base::bucket_count()); \n+        _M_profile_resize(__old_size); \n         return __res;\n       }\n \n@@ -187,7 +187,7 @@ namespace __profile\n       { \n         size_type __old_size = _Base::bucket_count(); \n         iterator __res = _Base::insert(__iter, __v);\n-        _M_profile_resize(__old_size, _Base::bucket_count()); \n+        _M_profile_resize(__old_size); \n         return __res;\n       }\n \n@@ -200,7 +200,7 @@ namespace __profile\n \t  size_type __old_size =  _Base::bucket_count();\n \t  std::pair<iterator, bool> __res\n \t    = _Base::insert(std::forward<_Pair>(__obj));\n-\t  _M_profile_resize(__old_size, _Base::bucket_count()); \n+\t  _M_profile_resize(__old_size); \n \t  return __res;\n \t}\n \n@@ -212,7 +212,7 @@ namespace __profile\n         { \n \t  size_type __old_size = _Base::bucket_count(); \n \t  iterator __res = _Base::insert(__iter, std::forward<_Pair>(__v));\n-\t  _M_profile_resize(__old_size, _Base::bucket_count()); \n+\t  _M_profile_resize(__old_size); \n \t  return __res;\n \t}\n \n@@ -222,15 +222,15 @@ namespace __profile\n         {\n \t  size_type __old_size = _Base::bucket_count(); \n \t  _Base::insert(__first, __last);\n-\t  _M_profile_resize(__old_size, _Base::bucket_count()); \n+\t  _M_profile_resize(__old_size); \n \t}\n \n       void\n       insert(const value_type* __first, const value_type* __last)\n       {\n         size_type __old_size = _Base::bucket_count(); \n         _Base::insert(__first, __last);\n-        _M_profile_resize(__old_size, _Base::bucket_count()); \n+        _M_profile_resize(__old_size); \n       }\n \n       // operator[]\n@@ -239,8 +239,7 @@ namespace __profile\n       {\n         size_type __old_size =  _Base::bucket_count();\n         mapped_type& __res = _M_base()[__k];\n-        size_type __new_size =  _Base::bucket_count();\n-        _M_profile_resize(__old_size, _Base::bucket_count()); \n+        _M_profile_resize(__old_size); \n         return __res;\n       }\n \n@@ -249,8 +248,7 @@ namespace __profile\n       {\n         size_type __old_size =  _Base::bucket_count();\n         mapped_type& __res = _M_base()[std::move(__k)];\n-        size_type __new_size =  _Base::bucket_count();\n-        _M_profile_resize(__old_size, _Base::bucket_count()); \n+        _M_profile_resize(__old_size); \n         return __res;\n       }\n \n@@ -262,13 +260,14 @@ namespace __profile\n       {\n         size_type __old_size =  _Base::bucket_count();\n         _Base::rehash(__n);\n-        _M_profile_resize(__old_size, _Base::bucket_count()); \n+        _M_profile_resize(__old_size); \n       }\n \n     private:\n       void\n-      _M_profile_resize(size_type __old_size, size_type __new_size)\n+      _M_profile_resize(size_type __old_size)\n       {\n+\tsize_type __new_size = _Base::bucket_count();\n         if (__old_size != __new_size)\n \t  __profcxx_hashtable_resize(this, __old_size, __new_size);\n       }"}]}