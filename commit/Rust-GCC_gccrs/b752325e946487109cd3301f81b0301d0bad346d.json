{"sha": "b752325e946487109cd3301f81b0301d0bad346d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc1MjMyNWU5NDY0ODcxMDljZDMzMDFmODFiMDMwMWQwYmFkMzQ2ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-09-30T17:12:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-09-30T17:12:49Z"}, "message": "c-common.h (enum rid): Add RID_IS_TRIVIALLY_COPYABLE.\n\nc-family/\n\t* c-common.h (enum rid): Add RID_IS_TRIVIALLY_COPYABLE.\n\t* c-common.c (c_common_reswords): Add __is_trivially_copyable.\ncp/\n\t* cp-tree.h (cp_trait_kind): Add CPTK_IS_TRIVIALLY_COPYABLE.\n\t* cxx-pretty-print.c (pp_cxx_trait_expression): Likewise.\n\t* parser.c (cp_parser_primary_expression): Likewise.\n\t(cp_parser_trait_expr): Likewise.\n\t* semantics.c (trait_expr_value): Likewise.\n\t(finish_trait_expr): Likewise.\n\nFrom-SVN: r215737", "tree": {"sha": "1ba084fb5f2a0a2907bfb37114205574ba4c6473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ba084fb5f2a0a2907bfb37114205574ba4c6473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b752325e946487109cd3301f81b0301d0bad346d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b752325e946487109cd3301f81b0301d0bad346d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b752325e946487109cd3301f81b0301d0bad346d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b752325e946487109cd3301f81b0301d0bad346d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32f3d0325439d650fef9a2675fbdcb53fa6ee893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32f3d0325439d650fef9a2675fbdcb53fa6ee893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32f3d0325439d650fef9a2675fbdcb53fa6ee893"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "8c44b18a85984ad4ebdcb67d1a78596191d1c4d7", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b752325e946487109cd3301f81b0301d0bad346d", "patch": "@@ -1,5 +1,8 @@\n 2014-09-30  Jason Merrill  <jason@redhat.com>\n \n+\t* c-common.h (enum rid): Add RID_IS_TRIVIALLY_COPYABLE.\n+\t* c-common.c (c_common_reswords): Add __is_trivially_copyable.\n+\n \t* c-common.h (enum rid): Remove RID_IS_CONVERTIBLE_TO.\n \t* c-common.c (c_common_reswords): Remove __is_convertible_to.\n "}, {"sha": "482dd44961161206e90c13983a79dc5bae40f41e", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=b752325e946487109cd3301f81b0301d0bad346d", "patch": "@@ -480,6 +480,7 @@ const struct c_common_resword c_common_reswords[] =\n   { \"__is_polymorphic\",\tRID_IS_POLYMORPHIC, D_CXXONLY },\n   { \"__is_standard_layout\", RID_IS_STD_LAYOUT, D_CXXONLY },\n   { \"__is_trivial\",     RID_IS_TRIVIAL, D_CXXONLY },\n+  { \"__is_trivially_copyable\", RID_IS_TRIVIALLY_COPYABLE, D_CXXONLY },\n   { \"__is_union\",\tRID_IS_UNION,\tD_CXXONLY },\n   { \"__label__\",\tRID_LABEL,\t0 },\n   { \"__null\",\t\tRID_NULL,\t0 },"}, {"sha": "b7e3385ab7a47e61b29b2b0e68815c55e20caf82", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=b752325e946487109cd3301f81b0301d0bad346d", "patch": "@@ -143,6 +143,7 @@ enum rid\n   RID_IS_FINAL,                RID_IS_LITERAL_TYPE,\n   RID_IS_POD,                  RID_IS_POLYMORPHIC,\n   RID_IS_STD_LAYOUT,           RID_IS_TRIVIAL,\n+  RID_IS_TRIVIALLY_COPYABLE,\n   RID_IS_UNION,                RID_UNDERLYING_TYPE,\n \n   /* C++11 */"}, {"sha": "d44d67a387576840b3372e583f8161cbda665fa6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b752325e946487109cd3301f81b0301d0bad346d", "patch": "@@ -1,5 +1,12 @@\n 2014-09-30  Jason Merrill  <jason@redhat.com>\n \n+\t* cp-tree.h (cp_trait_kind): Add CPTK_IS_TRIVIALLY_COPYABLE.\n+\t* cxx-pretty-print.c (pp_cxx_trait_expression): Likewise.\n+\t* parser.c (cp_parser_primary_expression): Likewise.\n+\t(cp_parser_trait_expr): Likewise.\n+\t* semantics.c (trait_expr_value): Likewise.\n+\t(finish_trait_expr): Likewise.\n+\n \t* method.c (build_stub_object): Use CONVERT_EXPR.\n \t* tree.c (build_dummy_object): Likewise.\n \t(is_dummy_object): Adjust."}, {"sha": "8e5c3b7909fb3689fc4b72ac586815d8d4d2e47f", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b752325e946487109cd3301f81b0301d0bad346d", "patch": "@@ -653,6 +653,7 @@ typedef enum cp_trait_kind\n   CPTK_IS_POLYMORPHIC,\n   CPTK_IS_STD_LAYOUT,\n   CPTK_IS_TRIVIAL,\n+  CPTK_IS_TRIVIALLY_COPYABLE,\n   CPTK_IS_UNION,\n   CPTK_UNDERLYING_TYPE\n } cp_trait_kind;"}, {"sha": "7b2d7fd205b3de3bcc0d7f9c7690ca374dcd7e5c", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=b752325e946487109cd3301f81b0301d0bad346d", "patch": "@@ -2393,6 +2393,9 @@ pp_cxx_trait_expression (cxx_pretty_printer *pp, tree t)\n     case CPTK_IS_TRIVIAL:\n       pp_cxx_ws_string (pp, \"__is_trivial\");\n       break;\n+    case CPTK_IS_TRIVIALLY_COPYABLE:\n+      pp_cxx_ws_string (pp, \"__is_trivially_copyable\");\n+      break;\n     case CPTK_IS_UNION:\n       pp_cxx_ws_string (pp, \"__is_union\");\n       break;"}, {"sha": "b1feef52b93ad89c86b8525e8c467c088c17e7b1", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=b752325e946487109cd3301f81b0301d0bad346d", "patch": "@@ -4490,6 +4490,7 @@ cp_parser_primary_expression (cp_parser *parser,\n \tcase RID_IS_POLYMORPHIC:\n \tcase RID_IS_STD_LAYOUT:\n \tcase RID_IS_TRIVIAL:\n+\tcase RID_IS_TRIVIALLY_COPYABLE:\n \tcase RID_IS_UNION:\n \t  return cp_parser_trait_expr (parser, token->keyword);\n \n@@ -8724,6 +8725,9 @@ cp_parser_trait_expr (cp_parser* parser, enum rid keyword)\n     case RID_IS_TRIVIAL:\n       kind = CPTK_IS_TRIVIAL;\n       break;\n+    case RID_IS_TRIVIALLY_COPYABLE:\n+      kind = CPTK_IS_TRIVIALLY_COPYABLE;\n+      break;\n     case RID_IS_UNION:\n       kind = CPTK_IS_UNION;\n       break;"}, {"sha": "9bcc6d73c78a1cda76f60de8e9991f9c3a952cfc", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b752325e946487109cd3301f81b0301d0bad346d/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=b752325e946487109cd3301f81b0301d0bad346d", "patch": "@@ -7379,6 +7379,9 @@ trait_expr_value (cp_trait_kind kind, tree type1, tree type2)\n     case CPTK_IS_TRIVIAL:\n       return (trivial_type_p (type1));\n \n+    case CPTK_IS_TRIVIALLY_COPYABLE:\n+      return (trivially_copyable_p (type1));\n+\n     case CPTK_IS_UNION:\n       return (type_code1 == UNION_TYPE);\n \n@@ -7442,6 +7445,7 @@ finish_trait_expr (cp_trait_kind kind, tree type1, tree type2)\n     case CPTK_IS_POLYMORPHIC:\n     case CPTK_IS_STD_LAYOUT:\n     case CPTK_IS_TRIVIAL:\n+    case CPTK_IS_TRIVIALLY_COPYABLE:\n       if (!check_trait_type (type1))\n \treturn error_mark_node;\n       break;"}]}