{"sha": "ddcd571a67fb205f7e168a3c3cd4e63080ed026b", "node_id": "C_kwDOANBUbNoAKGRkY2Q1NzFhNjdmYjIwNWY3ZTE2OGEzYzNjZDRlNjMwODBlZDAyNmI", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-04-20T11:44:31Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-04-26T15:02:44Z"}, "message": "gccrs: Fix ICE during method resolution\n\nWe were missing a check for trait item selection to ensure they are\nactually methods and remove assertion to check if the trait item is a\nfunction this is a valid error check not an assertion.\n\nFixes #2139\n\ngcc/rust/ChangeLog:\n\n\t* typecheck/rust-hir-dot-operator.cc (MethodResolver::select): verify it is a method\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/compile/issue-2139.rs: New test.\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>", "tree": {"sha": "ad02629c13e6c21909b39be2979c3f498a604b31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad02629c13e6c21909b39be2979c3f498a604b31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddcd571a67fb205f7e168a3c3cd4e63080ed026b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddcd571a67fb205f7e168a3c3cd4e63080ed026b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddcd571a67fb205f7e168a3c3cd4e63080ed026b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddcd571a67fb205f7e168a3c3cd4e63080ed026b/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34a5eebc1b98b6519d590c3b165c3bae1afa5fbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34a5eebc1b98b6519d590c3b165c3bae1afa5fbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34a5eebc1b98b6519d590c3b165c3bae1afa5fbb"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "29c3e4cbaf27a4cec9a71c1c64632f6e947a4823", "filename": "gcc/rust/typecheck/rust-hir-dot-operator.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddcd571a67fb205f7e168a3c3cd4e63080ed026b/gcc%2Frust%2Ftypecheck%2Frust-hir-dot-operator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddcd571a67fb205f7e168a3c3cd4e63080ed026b/gcc%2Frust%2Ftypecheck%2Frust-hir-dot-operator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-dot-operator.cc?ref=ddcd571a67fb205f7e168a3c3cd4e63080ed026b", "patch": "@@ -240,8 +240,12 @@ MethodResolver::select (TyTy::BaseType &receiver)\n \n     const HIR::Trait *trait = trait_ref->get_hir_trait_ref ();\n     HIR::TraitItem *item = item_ref->get_hir_trait_item ();\n-    rust_assert (item->get_item_kind () == HIR::TraitItem::TraitItemKind::FUNC);\n+    if (item->get_item_kind () != HIR::TraitItem::TraitItemKind::FUNC)\n+      return true;\n+\n     HIR::TraitItemFunc *func = static_cast<HIR::TraitItemFunc *> (item);\n+    if (!func->get_decl ().is_method ())\n+      return true;\n \n     TyTy::BaseType *ty = item_ref->get_tyty ();\n     rust_assert (ty->get_kind () == TyTy::TypeKind::FNDEF);"}, {"sha": "780ed58d5cc653f5028d7b26685f137116c10e56", "filename": "gcc/testsuite/rust/compile/issue-2139.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddcd571a67fb205f7e168a3c3cd4e63080ed026b/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-2139.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddcd571a67fb205f7e168a3c3cd4e63080ed026b/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-2139.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-2139.rs?ref=ddcd571a67fb205f7e168a3c3cd4e63080ed026b", "patch": "@@ -0,0 +1,16 @@\n+pub trait Foo {\n+    fn foo();\n+}\n+\n+impl Foo for u16 {\n+    fn foo() {\n+        <u16 as Foo>::foo()\n+    }\n+}\n+\n+fn main() {\n+    let a: u16 = 123;\n+    a.foo();\n+    // { dg-error \"failed to resolve method for .foo.\" \"\" { target *-*-* } .-1 }\n+    // { dg-error \"failed to type resolve expression\" \"\" { target *-*-* } .-2 }\n+}"}]}