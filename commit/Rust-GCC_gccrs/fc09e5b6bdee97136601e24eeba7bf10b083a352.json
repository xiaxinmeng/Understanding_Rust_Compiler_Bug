{"sha": "fc09e5b6bdee97136601e24eeba7bf10b083a352", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMwOWU1YjZiZGVlOTcxMzY2MDFlMjRlZWJhN2JmMTBiMDgzYTM1Mg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-11-19T11:50:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-11-19T11:50:44Z"}, "message": "bitset (operator[](size_t) const): Declare constexpr.\n\n2011-11-19  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/debug/bitset (operator[](size_t) const): Declare constexpr.\n\t* include/profile/bitset: Likewise.\n\t* testsuite/23_containers/bitset/operations/constexpr.cc: Split out\n\tnon portable bits to...\n\t* testsuite/23_containers/bitset/operations/constexpr-2.cc: ... here.\n\nFrom-SVN: r181506", "tree": {"sha": "01cee7a539f7b5f514289603b022800143838636", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01cee7a539f7b5f514289603b022800143838636"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc09e5b6bdee97136601e24eeba7bf10b083a352", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc09e5b6bdee97136601e24eeba7bf10b083a352", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc09e5b6bdee97136601e24eeba7bf10b083a352", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc09e5b6bdee97136601e24eeba7bf10b083a352/comments", "author": null, "committer": null, "parents": [{"sha": "cf651ca2e559c5f56f23764f1c90108c52015ea0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf651ca2e559c5f56f23764f1c90108c52015ea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf651ca2e559c5f56f23764f1c90108c52015ea0"}], "stats": {"total": 66, "additions": 52, "deletions": 14}, "files": [{"sha": "92fe3827e1bce31c42011b5e74818e80105647f5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc09e5b6bdee97136601e24eeba7bf10b083a352/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc09e5b6bdee97136601e24eeba7bf10b083a352/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fc09e5b6bdee97136601e24eeba7bf10b083a352", "patch": "@@ -1,3 +1,11 @@\n+2011-11-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/debug/bitset (operator[](size_t) const): Declare constexpr.\n+\t* include/profile/bitset: Likewise.\n+\t* testsuite/23_containers/bitset/operations/constexpr.cc: Split out\n+\tnon portable bits to...\n+\t* testsuite/23_containers/bitset/operations/constexpr-2.cc: ... here.\n+\n 2011-11-18  Harti Brandt  <hartmut.brandt@dlr.de>\n \n \tPR libstdc++/51209"}, {"sha": "3d865c1c1c24784c79c05b34eb4dfbc606299aa5", "filename": "libstdc++-v3/include/debug/bitset", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc09e5b6bdee97136601e24eeba7bf10b083a352/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc09e5b6bdee97136601e24eeba7bf10b083a352/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fbitset?ref=fc09e5b6bdee97136601e24eeba7bf10b083a352", "patch": "@@ -51,7 +51,7 @@ namespace __debug\n     public:\n       // In C++0x we rely on normal reference type to preserve the property\n       // of bitset to be use as a literal.\n-      // TODO: Find an other solution.\n+      // TODO: Find another solution.\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       typedef typename _Base::reference reference;\n #else\n@@ -272,11 +272,14 @@ namespace __debug\n \n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // 11. Bitset minor problems\n-      bool\n+      _GLIBCXX_CONSTEXPR bool\n       operator[](size_t __pos) const\n       {\n+#ifndef __GXX_EXPERIMENTAL_CXX0X__\n+\t// TODO: Check in debug-mode too.\n \t__glibcxx_check_subscript(__pos);\n-\treturn _M_base()[__pos];\n+#endif\n+\treturn _Base::operator[](__pos);\n       }\n \n       using _Base::to_ulong;"}, {"sha": "17ee49b5a600d786395871989f69a5364dffe831", "filename": "libstdc++-v3/include/profile/bitset", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc09e5b6bdee97136601e24eeba7bf10b083a352/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc09e5b6bdee97136601e24eeba7bf10b083a352/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fbitset?ref=fc09e5b6bdee97136601e24eeba7bf10b083a352", "patch": "@@ -232,10 +232,10 @@ namespace __profile\n \n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // 11. Bitset minor problems\n-      bool\n+      _GLIBCXX_CONSTEXPR bool\n       operator[](size_t __pos) const\n       {\n-\treturn _M_base()[__pos];\n+\treturn _Base::operator[](__pos);\n       }\n \n       using _Base::to_ulong;"}, {"sha": "14ab8e71275a01c3f601a30292a7a8ca8afb5746", "filename": "libstdc++-v3/testsuite/23_containers/bitset/operations/constexpr-2.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc09e5b6bdee97136601e24eeba7bf10b083a352/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2Fconstexpr-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc09e5b6bdee97136601e24eeba7bf10b083a352/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2Fconstexpr-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2Fconstexpr-2.cc?ref=fc09e5b6bdee97136601e24eeba7bf10b083a352", "patch": "@@ -0,0 +1,36 @@\n+// { dg-do compile }\n+// { dg-require-normal-mode \"\" }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <bitset>\n+\n+int main()\n+{\n+  // bitset base type\n+  typedef std::_Base_bitset<6> bitset_base;\n+  constexpr bitset_base base = bitset_base();\n+\n+  constexpr auto r1 __attribute__((unused)) = base._M_getword(2);\n+  // constexpr auto r2 = base._M_getdata(); // error, pointer to this\n+  auto r2 __attribute__((unused)) = base._M_getdata(); \n+  constexpr auto r3 __attribute__((unused)) = base._M_hiword();\n+\n+  return 0;\n+}"}, {"sha": "384f01a5dff9c3e2b7ada20eb2f9d422f00f8763", "filename": "libstdc++-v3/testsuite/23_containers/bitset/operations/constexpr.cc", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc09e5b6bdee97136601e24eeba7bf10b083a352/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc09e5b6bdee97136601e24eeba7bf10b083a352/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2Fconstexpr.cc?ref=fc09e5b6bdee97136601e24eeba7bf10b083a352", "patch": "@@ -22,15 +22,6 @@\n \n int main()\n {\n-  // bitset base type\n-  typedef std::_Base_bitset<6> bitset_base;\n-  constexpr bitset_base base = bitset_base();\n-\n-  constexpr auto r1 __attribute__((unused)) = base._M_getword(2);\n-  // constexpr auto r2 = base._M_getdata(); // error, pointer to this\n-  auto r2 __attribute__((unused)) = base._M_getdata(); \n-  constexpr auto r3 __attribute__((unused)) = base._M_hiword();\n-\n   // bitset operators\n   typedef std::bitset<6> bitset_type;\n   constexpr bitset_type a = bitset_type();"}]}