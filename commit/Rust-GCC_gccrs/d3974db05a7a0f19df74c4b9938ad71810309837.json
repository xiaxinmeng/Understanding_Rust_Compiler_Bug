{"sha": "d3974db05a7a0f19df74c4b9938ad71810309837", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM5NzRkYjA1YTdhMGYxOWRmNzRjNGI5OTM4YWQ3MTgxMDMwOTgzNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-01-03T16:41:23Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-01-03T16:41:23Z"}, "message": "fix comment spello\n\nFrom-SVN: r60835", "tree": {"sha": "a99540b4fa539e1267cde5dec5b9266ca867eae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a99540b4fa539e1267cde5dec5b9266ca867eae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3974db05a7a0f19df74c4b9938ad71810309837", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3974db05a7a0f19df74c4b9938ad71810309837", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3974db05a7a0f19df74c4b9938ad71810309837", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3974db05a7a0f19df74c4b9938ad71810309837/comments", "author": null, "committer": null, "parents": [{"sha": "7125beea7ade09245142f4807784f299f397a4f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7125beea7ade09245142f4807784f299f397a4f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7125beea7ade09245142f4807784f299f397a4f5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "93a237f73f2d1df5e0967749efd624c25ec238ef", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3974db05a7a0f19df74c4b9938ad71810309837/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3974db05a7a0f19df74c4b9938ad71810309837/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=d3974db05a7a0f19df74c4b9938ad71810309837", "patch": "@@ -851,7 +851,7 @@ struct tree_vec GTY(())\n #define SAVE_EXPR_NOPLACEHOLDER(NODE) TREE_UNSIGNED (SAVE_EXPR_CHECK (NODE))\n /* Nonzero if the SAVE_EXPRs value should be kept, even if it occurs\n    both in normal code and in a handler.  (Normally, in a handler, all\n-   SAVE_EXPRs are unsaved, meaning that there values are\n+   SAVE_EXPRs are unsaved, meaning that their values are\n    recalculated.)  */\n #define SAVE_EXPR_PERSISTENT_P(NODE) TREE_ASM_WRITTEN (SAVE_EXPR_CHECK (NODE))\n "}]}