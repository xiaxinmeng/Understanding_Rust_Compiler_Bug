{"sha": "88e091c3372048f6c3b3d41cbfedf422b5496808", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhlMDkxYzMzNzIwNDhmNmMzYjNkNDFjYmZlZGY0MjJiNTQ5NjgwOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-11-21T21:59:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-11-21T21:59:33Z"}, "message": "re PR middle-end/38200 (internal compiler error: in find_func_aliases, at tree-ssa-structalias.c:3905)\n\n\tPR middle-end/38200\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Only\n\tpropagate x = &a into *x = b if conversion from b to a's type is\n\tuseless.\n\n\t* gcc.dg/pr38200.c: New test.\n\nFrom-SVN: r142100", "tree": {"sha": "c0dad29bcfb209c5ed0c46b8e8b2cc20e4bdba85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0dad29bcfb209c5ed0c46b8e8b2cc20e4bdba85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88e091c3372048f6c3b3d41cbfedf422b5496808", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e091c3372048f6c3b3d41cbfedf422b5496808", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e091c3372048f6c3b3d41cbfedf422b5496808", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e091c3372048f6c3b3d41cbfedf422b5496808/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde"}], "stats": {"total": 60, "additions": 38, "deletions": 22}, "files": [{"sha": "e4790f18fbdbb640ea291c1d0ef836b94ba6b20b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e091c3372048f6c3b3d41cbfedf422b5496808/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e091c3372048f6c3b3d41cbfedf422b5496808/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88e091c3372048f6c3b3d41cbfedf422b5496808", "patch": "@@ -1,3 +1,10 @@\n+2008-11-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/38200\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Only\n+\tpropagate x = &a into *x = b if conversion from b to a's type is\n+\tuseless.\n+\n 2008-11-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* caller-save.c (insert_one_insn): Take into account REG_INC notes"}, {"sha": "c9e449fee1f0dd5c2e121cc358eb8f90e9dc4c0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e091c3372048f6c3b3d41cbfedf422b5496808/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e091c3372048f6c3b3d41cbfedf422b5496808/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=88e091c3372048f6c3b3d41cbfedf422b5496808", "patch": "@@ -1,3 +1,8 @@\n+2008-11-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/38200\n+\t* gcc.dg/pr38200.c: New test.\n+\n 2008-11-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/avx-1.c: Include <immintrin.h> instead of"}, {"sha": "d5391bd889e8fd0f0a146a1d3fc7d5ae47f9b4c0", "filename": "gcc/testsuite/gcc.dg/pr38200.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e091c3372048f6c3b3d41cbfedf422b5496808/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38200.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e091c3372048f6c3b3d41cbfedf422b5496808/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38200.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38200.c?ref=88e091c3372048f6c3b3d41cbfedf422b5496808", "patch": "@@ -0,0 +1,16 @@\n+/* PR middle-end/38200 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-strict-aliasing\" } */\n+\n+typedef int (*callptr) (void);\n+int foo (void **x);\n+void foo2 (callptr *);\n+int (*foo_ptr) (void **x) = foo;\n+\n+void\n+bar (void)\n+{\n+  void *ptr;\n+  foo2 ((callptr *) &ptr);\n+  *(void **) &foo_ptr = ptr;\n+}"}, {"sha": "b19879f7909377b7615d18bd2d26d5e07293dd94", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 10, "deletions": 22, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e091c3372048f6c3b3d41cbfedf422b5496808/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e091c3372048f6c3b3d41cbfedf422b5496808/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=88e091c3372048f6c3b3d41cbfedf422b5496808", "patch": "@@ -719,30 +719,18 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n      propagate the ADDR_EXPR into the use of NAME and fold the result.  */\n   if (TREE_CODE (lhs) == INDIRECT_REF\n       && TREE_OPERAND (lhs, 0) == name\n-      && may_propagate_address_into_dereference (def_rhs, lhs))\n+      && may_propagate_address_into_dereference (def_rhs, lhs)\n+      && (lhsp != gimple_assign_lhs_ptr (use_stmt)\n+\t  || useless_type_conversion_p (TREE_TYPE (TREE_OPERAND (def_rhs, 0)),\n+\t\t\t\t\tTREE_TYPE (rhs))))\n     {\n-      bool valid = true;\n-      if (lhsp == gimple_assign_lhs_ptr (use_stmt)\n-\t  && !useless_type_conversion_p (TREE_TYPE (TREE_OPERAND (def_rhs, 0)),\n-\t\t\t\t\t TREE_TYPE (rhs))\n-\t  && !CONVERT_EXPR_CODE_P (rhs_code))\n-\t{\n-\t  if (rhs_code == SSA_NAME)\n-\t    gimple_assign_set_rhs_code (use_stmt, NOP_EXPR);\n-\t  else\n-\t    valid = false;\n-\t}\n-      if (valid)\n-\t{\n-\t  *lhsp = unshare_expr (TREE_OPERAND (def_rhs, 0));\n-\t  fold_stmt_inplace (use_stmt);\n-\t  tidy_after_forward_propagate_addr (use_stmt);\n+      *lhsp = unshare_expr (TREE_OPERAND (def_rhs, 0));\n+      fold_stmt_inplace (use_stmt);\n+      tidy_after_forward_propagate_addr (use_stmt);\n \n-\t  /* Continue propagating into the RHS if this was not the only\n-\t     use.  */\n-\t  if (single_use_p)\n-\t    return true;\n-\t}\n+      /* Continue propagating into the RHS if this was not the only use.  */\n+      if (single_use_p)\n+\treturn true;\n     }\n \n   /* Strip away any outer COMPONENT_REF, ARRAY_REF or ADDR_EXPR"}]}