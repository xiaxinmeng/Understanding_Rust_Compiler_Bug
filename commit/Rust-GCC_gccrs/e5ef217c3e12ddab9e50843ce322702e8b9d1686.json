{"sha": "e5ef217c3e12ddab9e50843ce322702e8b9d1686", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVlZjIxN2MzZTEyZGRhYjllNTA4NDNjZTMyMjcwMmU4YjlkMTY4Ng==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2015-11-25T10:30:25Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2015-11-25T10:30:25Z"}, "message": "Port libvtv to Solaris\n\n\tlibstdc++-v3:\n\t* acinclude.m4 (GLIBCXX_ENABLE_VTABLE_VERIFY) <solaris2*>: Use\n\t-Wl,-R in VTV_CXXLINKFLAGS.\n\t* configure: Regenerate.\n\n\t* testsuite/18_support/bad_exception/23591_thread-1.c: Use\n\t-fvtable-verify=none on Solaris 12+.\n\n\tlibgcc:\n\t* Makefile.in (VTV_CFLAGS): New variable.\n\t(vtv_start$(objext), vtv_end$(objext), vtv_end$(objext))\n\t(vtv_start_preinit$(objext), vtv_end_preinit$(objext)): Use it.\n\t* config.host (*-*-solaris2*): Add t-crtstuff-pic to tmake_file.\n\tAdd vtv_start.o, vtv_end.o, vtv_start_preinit.o, vtv_end_preinit.o\n\tto extra_parts if $enable_vtable_verify = yes.\n\n\tlibvtv:\n\t* configure.tgt (*-*-solaris2.[1-9]*): Declare supported.\n\t* configure.ac: Call AC_USE_SYSTEM_EXTENSIONS.\n\t<*-*-solaris2*>: Check for init priority support.\n\tCheck for getexecname, __fortify_fail, _obstack_begin.\n\t(VTV_NO_OBSTACK): New conditional.\n\t* configure: Regenerate.\n\t* Makefile.am [VTV_NO_OBSTACK] (obstack.c): Use new condition.\n\tCreate empty config.h\n\t* Makefile.in: Regenerate.\n\n\t* vtv_rts.cc [HAVE_GETEXECNAME] (program_invocation_name): New\n\tvariable.\n\t(read_section_offset_and_length) [HAVE_GETEXECNAME]: Set it.\n\t(dl_iterate_phdr_callback) [HAVE_GETEXECNAME]: Set it.\n\n\t(__fortify_fail): Wrap in HAVE___FORTIFY_FAIL\n\t[!HAVE___FORTIFY_FAIL]: Provide non-Cygwin implementation.\n\n\t(read_section_offset_and_length): Assert sh_size >= VTV_PAGE_SIZE.\n\t(iterate_modules): Fix typo.\n\tUse VTV_PAGE_SIZE.\n\t(dl_iterate_phdr_callback): Fix typo.\n\tUse VTV_PAGE_SIZE.\n\t(__VLTChangePermission): Fix typos.\n\n\tinclude:\n\t* vtv-change-permission.h (VTV_PAGE_SIZE) [__sun__ && __svr4__ &&\n\t__sparc__]: Define.\n\n\tgcc:\n\t* config/sol2.h (SUPPORTS_INIT_PRIORITY): Move up.\n\t(STARTFILE_VTV_SPEC, ENDFILE_VTV_SPEC): Define.\n\t(STARTFILE_SPEC): Use %(startfile_vtv).\n\t(ENDFILE_SPEC): Use %(endfile_vtv).\n\t(SUBTARGET_EXTRA_SPECS): Handle STARTFILE_VTV_SPEC,\n\tENDFILE_VTV_SPEC.\n\n\t* gcc.c (LINK_COMMAND_SPEC): Move VTABLE_VERIFICATION_SPEC after %{L*}.\n\nFrom-SVN: r230865", "tree": {"sha": "9216240eb09617c83cf72cd69f1d6971f33b581d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9216240eb09617c83cf72cd69f1d6971f33b581d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5ef217c3e12ddab9e50843ce322702e8b9d1686", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ef217c3e12ddab9e50843ce322702e8b9d1686", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5ef217c3e12ddab9e50843ce322702e8b9d1686", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ef217c3e12ddab9e50843ce322702e8b9d1686/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70927cae316077708327bfe545a1464c7affe331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70927cae316077708327bfe545a1464c7affe331", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70927cae316077708327bfe545a1464c7affe331"}], "stats": {"total": 3833, "additions": 1966, "deletions": 1867}, "files": [{"sha": "b2efa82f04b4e0400b668a0a836f2aa24ac90f30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -1,3 +1,14 @@\n+2015-11-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/sol2.h (SUPPORTS_INIT_PRIORITY): Move up.\n+\t(STARTFILE_VTV_SPEC, ENDFILE_VTV_SPEC): Define.\n+\t(STARTFILE_SPEC): Use %(startfile_vtv).\n+\t(ENDFILE_SPEC): Use %(endfile_vtv).\n+\t(SUBTARGET_EXTRA_SPECS): Handle STARTFILE_VTV_SPEC,\n+\tENDFILE_VTV_SPEC.\n+\n+\t* gcc.c (LINK_COMMAND_SPEC): Move VTABLE_VERIFICATION_SPEC after %{L*}.\n+\n 2015-11-25  Bernd Schmidt  <bschmidt@redhat.com>\n \n \t* ifcvt.c (noce_mem_write_may_trap_or_fault_p,"}, {"sha": "1758b9158dbfb26450bfa641e5480e75132ebc5e", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 28, "deletions": 8, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -150,6 +150,10 @@ along with GCC; see the file COPYING3.  If not see\n #define MD_EXEC_PREFIX \"/usr/ccs/bin/\"\n #endif\n \n+/* Enable constructor priorities if the configured linker supports it.  */\n+#undef SUPPORTS_INIT_PRIORITY\n+#define SUPPORTS_INIT_PRIORITY HAVE_INITFINI_ARRAY_SUPPORT\n+\n #undef STARTFILE_ARCH_SPEC\n #define STARTFILE_ARCH_SPEC \"%{ansi:values-Xc.o%s} \\\n \t\t\t    %{!ansi:values-Xa.o%s}\"\n@@ -162,6 +166,22 @@ along with GCC; see the file COPYING3.  If not see\n #define STARTFILE_CRTBEGIN_SPEC\t\"crtbegin.o%s\"\n #endif\n \n+#if SUPPORTS_INIT_PRIORITY\n+#define STARTFILE_VTV_SPEC \\\n+  \"%{fvtable-verify=none:%s; \\\n+     fvtable-verify=preinit:vtv_start_preinit.o%s; \\\n+     fvtable-verify=std:vtv_start.o%s}\"\n+\n+#define ENDFILE_VTV_SPEC \\\n+  \"%{fvtable-verify=none:%s; \\\n+     fvtable-verify=preinit:vtv_end_preinit.o%s; \\\n+     fvtable-verify=std:vtv_end.o%s}\"\n+#else\n+#define STARTFILE_VTV_SPEC \\\n+  \"%{fvtable-verify:%e-fvtable-verify is not supported in this configuration}\"\n+#define ENDFILE_VTV_SPEC \"\"\n+#endif\n+\n /* We don't use the standard svr4 STARTFILE_SPEC because it's wrong for us.  */\n #undef STARTFILE_SPEC\n #ifdef HAVE_SOLARIS_CRTS\n@@ -172,13 +192,15 @@ along with GCC; see the file COPYING3.  If not see\n \t\t\t  %{p:%e-p is not supported; \\\n \t\t\t    pg:crtpg.o%s gmon.o%s; \\\n \t\t\t      :crtp.o%s}}} \\\n-\t\t\tcrti.o%s %(startfile_arch) %(startfile_crtbegin)\"\n+\t\t\tcrti.o%s %(startfile_arch) %(startfile_crtbegin) \\\n+\t\t\t%(startfile_vtv)\"\n #else\n #define STARTFILE_SPEC \"%{!shared:%{!symbolic: \\\n \t\t\t  %{p:mcrt1.o%s; \\\n                             pg:gcrt1.o%s gmon.o%s; \\\n                               :crt1.o%s}}} \\\n-\t\t\tcrti.o%s %(startfile_arch) %(startfile_crtbegin)\"\n+\t\t\tcrti.o%s %(startfile_arch) %(startfile_crtbegin) \\\n+\t\t\t%(startfile_vtv)\"\n #endif\n \n #if defined(HAVE_LD_PIE) && defined(HAVE_SOLARIS_CRTS)\n@@ -192,7 +214,7 @@ along with GCC; see the file COPYING3.  If not see\n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \\\n   \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n-   %(endfile_arch) %(endfile_crtend) crtn.o%s\"\n+   %(endfile_arch) %(endfile_vtv) %(endfile_crtend) crtn.o%s\"\n \n #undef LINK_ARCH32_SPEC_BASE\n #define LINK_ARCH32_SPEC_BASE \\\n@@ -267,12 +289,14 @@ along with GCC; see the file COPYING3.  If not see\n #define SUBTARGET_EXTRA_SPECS \\\n   { \"startfile_arch\",\t \tSTARTFILE_ARCH_SPEC },\t\t\\\n   { \"startfile_crtbegin\",\tSTARTFILE_CRTBEGIN_SPEC },\t\\\n+  { \"startfile_vtv\",\t\tSTARTFILE_VTV_SPEC },\t\t\\\n   { \"link_arch32\",       \tLINK_ARCH32_SPEC },\t\t\\\n   { \"link_arch64\",       \tLINK_ARCH64_SPEC },\t\t\\\n   { \"link_arch_default\", \tLINK_ARCH_DEFAULT_SPEC },\t\\\n   { \"link_arch\",\t \tLINK_ARCH_SPEC },\t\t\\\n   { \"endfile_arch\",\t \tENDFILE_ARCH_SPEC },\t\t\\\n-  { \"endfile_crtend\",\t\tENDFILE_CRTEND_SPEC },\t\\\n+  { \"endfile_crtend\",\t\tENDFILE_CRTEND_SPEC },\t\t\\\n+  { \"endfile_vtv\",\t\tENDFILE_VTV_SPEC },\t\t\\\n   SUBTARGET_CPU_EXTRA_SPECS\n \n /* C++11 programs need -lrt for nanosleep.  */\n@@ -398,10 +422,6 @@ along with GCC; see the file COPYING3.  If not see\n #define NO_DBX_BNSYM_ENSYM 1\n #endif\n \n-/* Enable constructor priorities if the configured linker supports it.  */\n-#undef SUPPORTS_INIT_PRIORITY\n-#define SUPPORTS_INIT_PRIORITY HAVE_INITFINI_ARRAY_SUPPORT\n-\n /* Solaris has an implementation of __enable_execute_stack.  */\n #define HAVE_ENABLE_EXECUTE_STACK\n "}, {"sha": "99dab30246ddecdc78c48b2b59dea7bbbe333184", "filename": "gcc/gcc.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -1016,9 +1016,9 @@ proper position among the other output files.  */\n     %{flto} %{fno-lto} %{flto=*} %l \" LINK_PIE_SPEC \\\n    \"%{fuse-ld=*:-fuse-ld=%*} \" LINK_COMPRESS_DEBUG_SPEC \\\n    \"%X %{o*} %{e*} %{N} %{n} %{r}\\\n-    %{s} %{t} %{u*} %{z} %{Z} %{!nostdlib:%{!nostartfiles:%S}} \" VTABLE_VERIFICATION_SPEC \" \\\n-    %{static:} %{L*} %(mfwrap) %(link_libgcc) \" SANITIZER_EARLY_SPEC \" %o\\\n-    \" CHKP_SPEC \" \\\n+    %{s} %{t} %{u*} %{z} %{Z} %{!nostdlib:%{!nostartfiles:%S}} \\\n+    %{static:} %{L*} %(mfwrap) %(link_libgcc) \" \\\n+    VTABLE_VERIFICATION_SPEC \" \" SANITIZER_EARLY_SPEC \" %o \" CHKP_SPEC \" \\\n     %{fopenacc|fopenmp|%:gt(%{ftree-parallelize-loops=*} 1):\\\n \t%:include(libgomp.spec)%(link_gomp)}\\\n     %{fcilkplus:%:include(libcilkrts.spec)%(link_cilkrts)}\\"}, {"sha": "d74a9bbf733afacb4420748e5b7860fc44ab85a8", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -1,3 +1,8 @@\n+2015-11-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* vtv-change-permission.h (VTV_PAGE_SIZE) [__sun__ && __svr4__ &&\n+\t__sparc__]: Define.\n+\n 2015-11-12  James Norris  <jnorris@codesourcery.com>\n \t    Joseph Myers  <joseph@codesourcery.com>\n "}, {"sha": "04ad8c3db60a6b367fddb5b261d20776335cb386", "filename": "include/vtv-change-permission.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/include%2Fvtv-change-permission.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/include%2Fvtv-change-permission.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fvtv-change-permission.h?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -46,8 +46,12 @@ extern void __VLTChangePermission (int);\n /* TODO - Replace '4096' below with correct big page size.  */\n #define VTV_PAGE_SIZE 4096\n #else \n+#if defined(__sun__) && defined(__svr4__) && defined(__sparc__)\n+#define VTV_PAGE_SIZE 8192\n+#else\n #define VTV_PAGE_SIZE 4096\n #endif\n+#endif\n \n \n "}, {"sha": "dcd11a23516a6dbdfc391284c73e78ed5dc1335f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -1,3 +1,12 @@\n+2015-11-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Makefile.in (VTV_CFLAGS): New variable.\n+\t(vtv_start$(objext), vtv_end$(objext), vtv_end$(objext))\n+\t(vtv_start_preinit$(objext), vtv_end_preinit$(objext)): Use it.\n+\t* config.host (*-*-solaris2*): Add t-crtstuff-pic to tmake_file.\n+\tAdd vtv_start.o, vtv_end.o, vtv_start_preinit.o, vtv_end_preinit.o\n+\tto extra_parts if $enable_vtable_verify = yes.\n+\n 2015-11-23  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \tPR target/68059"}, {"sha": "6b0b3f2251211afde748d880205d32183558b213", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -1006,17 +1006,22 @@ endif\n ifeq ($(enable_vtable_verify),yes)\n # These are used in vtable verification; see comments in source files for\n # more details.\n+\n+# Override -finhibit-size-directive to avoid mismatch between libgcc and libvtv\n+# compilations.\n+VTV_CFLAGS = $(CRTSTUFF_T_CFLAGS_S) -fno-inhibit-size-directive\n+\n vtv_start$(objext): $(srcdir)/vtv_start.c\n-\t$(crt_compile) $(CRTSTUFF_T_CFLAGS_S) -c $(srcdir)/vtv_start.c\n+\t$(crt_compile) $(VTV_CFLAGS) -c $(srcdir)/vtv_start.c\n \n vtv_end$(objext): $(srcdir)/vtv_end.c\n-\t$(crt_compile) $(CRTSTUFF_T_CFLAGS_S) -c $(srcdir)/vtv_end.c\n+\t$(crt_compile) $(VTV_CFLAGS) -c $(srcdir)/vtv_end.c\n \n vtv_start_preinit$(objext): $(srcdir)/vtv_start_preinit.c\n-\t$(crt_compile) $(CRTSTUFF_T_CFLAGS_S) -c $(srcdir)/vtv_start_preinit.c\n+\t$(crt_compile) $(VTV_CFLAGS) -c $(srcdir)/vtv_start_preinit.c\n \n vtv_end_preinit$(objext): $(srcdir)/vtv_end_preinit.c\n-\t$(crt_compile) $(CRTSTUFF_T_CFLAGS_S) -c $(srcdir)/vtv_end_preinit.c\n+\t$(crt_compile) $(VTV_CFLAGS) -c $(srcdir)/vtv_end_preinit.c\n endif\n \n ifeq ($(CUSTOM_CRTIN),)"}, {"sha": "9a58beb78478d2596e47ffe52a46b6d032fb38f9", "filename": "libgcc/config.host", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -294,6 +294,9 @@ case ${host} in\n         ;;\n     esac\n   fi\n+  if test x$enable_vtable_verify = xyes; then\n+    extra_parts=\"$extra_parts vtv_start.o vtv_end.o vtv_start_preinit.o vtv_end_preinit.o\"\n+  fi\n   ;;\n *-*-uclinux*)\n   extra_parts=\"crtbegin.o crtend.o\""}, {"sha": "2236cfb86c02ac810e4ba37330744016d85108e0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -1,3 +1,12 @@\n+2015-11-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_VTABLE_VERIFY) <solaris2*>: Use\n+\t-Wl,-R in VTV_CXXLINKFLAGS.\n+\t* configure: Regenerate.\n+\n+\t* testsuite/18_support/bad_exception/23591_thread-1.c: Use\n+\t-fvtable-verify=none on Solaris 12+.\n+\n 2015-11-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* acinclude.m4 (GLIBCXX_CHECK_MATH11_PROTO): New test."}, {"sha": "75e46671faf2b316d600fb2beb00d5c8a26ab80d", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -2628,6 +2628,10 @@ AC_DEFUN([GLIBCXX_ENABLE_VTABLE_VERIFY], [\n         VTV_CXXFLAGS=\"-fvtable-verify=std -Wl,-u,_vtable_map_vars_start -Wl,-u,_vtable_map_vars_end\"\n         VTV_CXXLINKFLAGS=\"-L${toplevel_builddir}/libvtv/.libs -Wl,-rpath,${toplevel_builddir}/libvtv/.libs\"\n         ;;\n+      solaris2*)\n+        VTV_CXXFLAGS=\"-fvtable-verify=std -Wl,-u_vtable_map_vars_start,-u_vtable_map_vars_end\"\n+        VTV_CXXLINKFLAGS=\"-L${toplevel_builddir}/libvtv/.libs -Wl,-R -Wl,${toplevel_builddir}/libvtv/.libs\"\n+        ;;\n       *)\n         VTV_CXXFLAGS=\"-fvtable-verify=std -Wl,-u_vtable_map_vars_start,-u_vtable_map_vars_end\"\n         VTV_CXXLINKFLAGS=\"-L${toplevel_builddir}/libvtv/.libs -Wl,--rpath -Wl,${toplevel_builddir}/libvtv/.libs\""}, {"sha": "868ac31cbf246d3dc375356931b47432afbc561f", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -18041,6 +18041,10 @@ $as_echo \"$enable_vtable_verify\" >&6; }\n         VTV_CXXFLAGS=\"-fvtable-verify=std -Wl,-u,_vtable_map_vars_start -Wl,-u,_vtable_map_vars_end\"\n         VTV_CXXLINKFLAGS=\"-L${toplevel_builddir}/libvtv/.libs -Wl,-rpath,${toplevel_builddir}/libvtv/.libs\"\n         ;;\n+      solaris2*)\n+        VTV_CXXFLAGS=\"-fvtable-verify=std -Wl,-u_vtable_map_vars_start,-u_vtable_map_vars_end\"\n+        VTV_CXXLINKFLAGS=\"-L${toplevel_builddir}/libvtv/.libs -Wl,-R -Wl,${toplevel_builddir}/libvtv/.libs\"\n+        ;;\n       *)\n         VTV_CXXFLAGS=\"-fvtable-verify=std -Wl,-u_vtable_map_vars_start,-u_vtable_map_vars_end\"\n         VTV_CXXLINKFLAGS=\"-L${toplevel_builddir}/libvtv/.libs -Wl,--rpath -Wl,${toplevel_builddir}/libvtv/.libs\""}, {"sha": "25dde7f19d6e786bcbeb87e759f544ce4c36050d", "filename": "libstdc++-v3/testsuite/18_support/bad_exception/23591_thread-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_exception%2F23591_thread-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_exception%2F23591_thread-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_exception%2F23591_thread-1.c?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -1,5 +1,5 @@\n // { dg-require-sharedlib \"\" }\n-// { dg-options \"-g -O2 -pthread -ldl -x c -fvtable-verify=none\" { target *-*-linux* *-*-gnu* } }\n+// { dg-options \"-g -O2 -pthread -ldl -x c -fvtable-verify=none\" { target *-*-linux* *-*-gnu* *-*-solaris2.1[2-9]* } }\n \n // Copyright (C) 2005-2015 Free Software Foundation, Inc.\n //"}, {"sha": "02dba258e16ec83be43ec61699b2182dc05cdb71", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -1,3 +1,30 @@\n+2015-11-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.tgt (*-*-solaris2.[1-9]*): Declare supported.\n+\t* configure.ac: Call AC_USE_SYSTEM_EXTENSIONS.\n+\t<*-*-solaris2*>: Check for init priority support.\n+\tCheck for getexecname, __fortify_fail, _obstack_begin.\n+\t(VTV_NO_OBSTACK): New conditional.\n+\t* configure: Regenerate.\n+\t* Makefile.am [VTV_NO_OBSTACK] (obstack.c): Use new condition.\n+\tCreate empty config.h\n+\t* Makefile.in: Regenerate.\n+\n+\t* vtv_rts.cc [HAVE_GETEXECNAME] (program_invocation_name): New\n+\tvariable.\n+\t(read_section_offset_and_length) [HAVE_GETEXECNAME]: Set it.\n+\t(dl_iterate_phdr_callback) [HAVE_GETEXECNAME]: Set it.\n+\n+\t(__fortify_fail): Wrap in HAVE___FORTIFY_FAIL\n+\t[!HAVE___FORTIFY_FAIL]: Provide non-Cygwin implementation.\n+\n+\t(read_section_offset_and_length): Assert sh_size >= VTV_PAGE_SIZE.\n+\t(iterate_modules): Fix typo.\n+\tUse VTV_PAGE_SIZE.\n+\t(dl_iterate_phdr_callback): Fix typo.\n+\tUse VTV_PAGE_SIZE.\n+\t(__VLTChangePermission): Fix typos.\n+\n 2015-11-09  Alan Modra  <amodra@gmail.com>\n \n \t* vtv_malloc.cc (obstack_chunk_free): Correct param type."}, {"sha": "edfd5ae13d7bc9b00a5c32cc62f1fb32dfd07145", "filename": "libvtv/Makefile.am", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.am?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -76,11 +76,14 @@ vtv_end.c:\n \trm -f $@\n \t$(LN_S) $(toplevel_srcdir)/libgcc/vtv_end.c $@\n \n-if VTV_CYGMIN\n+if VTV_NO_OBSTACK\n   obstack.c:\n \t  rm -f $@\n \t  $(LN_S) $(toplevel_srcdir)/libiberty/obstack.c $@\n-  \n+\t  > config.h\n+endif\n+\n+if VTV_CYGMIN\n   vtv_stubs.cc:\n \t  rm -f $@\n \t  $(LN_S) $(toplevel_srcdir)/libstdc++-v3/libsupc++/vtv_stubs.cc $@\n@@ -93,11 +96,12 @@ if VTV_CYGMIN\n endif\n \n if ENABLE_VTABLE_VERIFY\n+  libvtv_la_SOURCES = $(vtv_sources)\n+if VTV_NO_OBSTACK\n+  libvtv_la_SOURCES += obstack.c\n+endif\n if VTV_CYGMIN\n-  libvtv_la_SOURCES = $(vtv_sources) obstack.c\n   libvtv_stubs_la_SOURCES = $(vtv_stubs_sources)\n-else\n-  libvtv_la_SOURCES = $(vtv_sources)\n endif\n   libvtv_include_HEADERS = $(vtv_headers)\n else"}, {"sha": "4c8c3fb078e93bd67d5caa3d1f3f7fe54e2a152f", "filename": "libvtv/Makefile.in", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.in?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -53,6 +53,7 @@ POST_UNINSTALL = :\n build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_NO_OBSTACK_TRUE@am__append_1 = obstack.c\n subdir = .\n DIST_COMMON = ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(top_srcdir)/configure $(am__configure_deps) \\\n@@ -110,21 +111,20 @@ LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n libvtv_la_DEPENDENCIES =\n am__objects_1 = vtv_start.lo vtv_malloc.lo vtv_rts.lo vtv_utils.lo \\\n \tvtv_end.lo\n-@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_FALSE@am_libvtv_la_OBJECTS =  \\\n-@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_FALSE@\t$(am__objects_1)\n-@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@am_libvtv_la_OBJECTS =  \\\n-@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@\t$(am__objects_1) \\\n-@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@\tobstack.lo\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_NO_OBSTACK_TRUE@am__objects_2 =  \\\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_NO_OBSTACK_TRUE@\tobstack.lo\n+@ENABLE_VTABLE_VERIFY_TRUE@am_libvtv_la_OBJECTS = $(am__objects_1) \\\n+@ENABLE_VTABLE_VERIFY_TRUE@\t$(am__objects_2)\n libvtv_la_OBJECTS = $(am_libvtv_la_OBJECTS)\n libvtv_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n \t$(CXXFLAGS) $(libvtv_la_LDFLAGS) $(LDFLAGS) -o $@\n @VTV_CYGMIN_FALSE@am_libvtv_la_rpath = -rpath $(toolexeclibdir)\n @VTV_CYGMIN_TRUE@am_libvtv_la_rpath = -rpath $(toolexeclibdir)\n libvtv_stubs_la_LIBADD =\n-am__objects_2 = vtv_start.lo vtv_stubs.lo vtv_end.lo\n+am__objects_3 = vtv_start.lo vtv_stubs.lo vtv_end.lo\n @ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@am_libvtv_stubs_la_OBJECTS =  \\\n-@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@\t$(am__objects_2)\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@\t$(am__objects_3)\n libvtv_stubs_la_OBJECTS = $(am_libvtv_stubs_la_OBJECTS)\n libvtv_stubs_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n@@ -353,8 +353,8 @@ BUILT_SOURCES = vtv_start.c vtv_end.c\n @VTV_CYGMIN_TRUE@libvtv_la_LDFLAGS = $(lt_host_flags)\n @VTV_CYGMIN_TRUE@libvtv_stubs_la_LDFLAGS = $(lt_host_flags)\n @ENABLE_VTABLE_VERIFY_FALSE@libvtv_la_SOURCES = \n-@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_FALSE@libvtv_la_SOURCES = $(vtv_sources)\n-@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@libvtv_la_SOURCES = $(vtv_sources) obstack.c\n+@ENABLE_VTABLE_VERIFY_TRUE@libvtv_la_SOURCES = $(vtv_sources) \\\n+@ENABLE_VTABLE_VERIFY_TRUE@\t$(am__append_1)\n @ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@libvtv_stubs_la_SOURCES = $(vtv_stubs_sources)\n @ENABLE_VTABLE_VERIFY_FALSE@libvtv_include_HEADERS = \n @ENABLE_VTABLE_VERIFY_TRUE@libvtv_include_HEADERS = $(vtv_headers)\n@@ -832,9 +832,10 @@ vtv_end.c:\n \trm -f $@\n \t$(LN_S) $(toplevel_srcdir)/libgcc/vtv_end.c $@\n \n-@VTV_CYGMIN_TRUE@  obstack.c:\n-@VTV_CYGMIN_TRUE@\t  rm -f $@\n-@VTV_CYGMIN_TRUE@\t  $(LN_S) $(toplevel_srcdir)/libiberty/obstack.c $@\n+@VTV_NO_OBSTACK_TRUE@  obstack.c:\n+@VTV_NO_OBSTACK_TRUE@\t  rm -f $@\n+@VTV_NO_OBSTACK_TRUE@\t  $(LN_S) $(toplevel_srcdir)/libiberty/obstack.c $@\n+@VTV_NO_OBSTACK_TRUE@\t  > config.h\n \n @VTV_CYGMIN_TRUE@  vtv_stubs.cc:\n @VTV_CYGMIN_TRUE@\t  rm -f $@"}, {"sha": "64439f0906ba1faf523356f4a6fc042737f00cb1", "filename": "libvtv/configure", "status": "modified", "additions": 1763, "deletions": 1817, "changes": 3580, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686"}, {"sha": "32dc21aac649ce77f016bb31ad61a4b01e279b79", "filename": "libvtv/configure.ac", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure.ac?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -27,6 +27,8 @@ target_alias=${target_alias-$host_alias}\n AC_SUBST(target_alias)\n GCC_LIBSTDCXX_RAW_CXX_FLAGS\n \n+AC_USE_SYSTEM_EXTENSIONS\n+\n # Use same top-level configure hooks in libgcc/libstdc++/libvtv.\n AC_MSG_CHECKING([for --enable-vtable-verify])\n AC_ARG_ENABLE(vtable-verify,\n@@ -43,6 +45,21 @@ AC_MSG_RESULT($enable_vtable_verify)\n unset VTV_SUPPORTED\n AC_MSG_CHECKING([for host support for vtable verification])\n . ${srcdir}/configure.tgt\n+case ${host} in\n+  *-*-solaris2*)\n+    # libvtv requires init priority support, which depends on the linker\n+    # used on Solaris.\n+    AC_CACHE_CHECK(for init priority support, libvtv_cv_init_priority, [\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM(,\n+      [[void ip (void) __attribute__ ((constructor (1)));]])],\n+      [libgcc_cv_init_priority=yes],[libgcc_cv_init_priority=no])])\n+    if test x$libvtv_cv_init_priority = xno; then\n+      VTV_SUPPORTED=no\n+    fi\n+    # FIXME: Maybe check for dl_iterate_phdr, too?  Should be covered by\n+    # configure.tgt restricting to libvtv to Solaris 11+.\n+    ;;\n+esac\n AC_MSG_RESULT($VTV_SUPPORTED)\n \n # Decide if it's usable.\n@@ -97,6 +114,8 @@ AC_CHECK_FUNCS([__secure_getenv])\n AC_GNU_SOURCE\n AC_CHECK_FUNCS([secure_getenv])\n \n+AC_CHECK_FUNCS([getexecname __fortify_fail])\n+\n # Check for programs.\n m4_rename([_AC_ARG_VAR_PRECIOUS],[real_PRECIOUS])\n m4_define([_AC_ARG_VAR_PRECIOUS],[])\n@@ -167,4 +186,7 @@ esac\n \n AM_CONDITIONAL(VTV_CYGMIN, test $vtv_cygmin = yes)\n \n+AC_CHECK_FUNCS([_obstack_begin])\n+AM_CONDITIONAL(VTV_NO_OBSTACK, test $ac_cv_func__obstack_begin = no)\n+\n AC_OUTPUT"}, {"sha": "d63904d07fab5f8975d20abdc8198e4ef03d0a49", "filename": "libvtv/configure.tgt", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure.tgt?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -23,6 +23,12 @@ VTV_SUPPORTED=no\n case \"${target}\" in\n   *-*-*android*)\n \t;;\n+  *-*-solaris2.1[1-9]*)\n+        # Vtable verification requires constructor priority support and\n+        # dl_iterate_phdr.  The former requires a dynamic check in\n+        # configure.ac, the latter is fully present in Solaris 11 only.\n+\tVTV_SUPPORTED=yes\n+\t;;\n   x86_64-*-linux* | i?86-*-linux*)\n \tVTV_SUPPORTED=yes\n \t;;"}, {"sha": "ccc777b4161ed18876e23db6e94d8324227185ed", "filename": "libvtv/vtv_rts.cc", "status": "modified", "additions": 36, "deletions": 17, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2Fvtv_rts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ef217c3e12ddab9e50843ce322702e8b9d1686/libvtv%2Fvtv_rts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fvtv_rts.cc?ref=e5ef217c3e12ddab9e50843ce322702e8b9d1686", "patch": "@@ -150,13 +150,11 @@\n \n #include \"vtv-change-permission.h\"\n \n-#if defined (__CYGWIN__) || defined (__MINGW32__)\n-// porting: fix link error to libc\n-void __fortify_fail (const char * msg){\n-    OutputDebugString(msg);\n-    abort();\n-}\n-#else\n+#ifdef HAVE_GETEXECNAME\n+const char *program_invocation_name;\n+#endif\n+\n+#ifdef HAVE___FORTIFY_FAIL\n extern \"C\" {\n \n   /* __fortify_fail is a function in glibc that calls __libc_message,\n@@ -173,6 +171,20 @@ extern \"C\" {\n   extern void __fortify_fail (const char *) __attribute__((noreturn));\n \n } /* extern \"C\" */\n+#else\n+#if defined (__CYGWIN__) || defined (__MINGW32__)\n+// porting: fix link error to libc\n+void __fortify_fail (const char * msg){\n+    OutputDebugString(msg);\n+    abort();\n+}\n+#else\n+// FIXME: Provide backtrace via libbacktrace?\n+void __fortify_fail (const char *msg) {\n+    write (2, msg, strlen (msg));\n+    abort ();\n+}\n+#endif\n #endif\n \n /* The following variables are used only for debugging and performance\n@@ -573,6 +585,9 @@ read_section_offset_and_length (struct dl_phdr_info *info,\n   /* Get the name of the main executable.  This may or may not include\n      arguments passed to the program.  Find the first space, assume it\n      is the start of the argument list, and change it to a '\\0'. */\n+#ifdef HAVE_GETEXECNAME\n+  program_invocation_name = getexecname ();\n+#endif\n   snprintf (program_name, sizeof (program_name), program_invocation_name);\n \n   /* Check to see if we already have the data for this file.  */\n@@ -663,7 +678,10 @@ read_section_offset_and_length (struct dl_phdr_info *info,\n                      size.  */\n                   *sect_offset = sect_hdr.sh_addr;\n \t\t  if (!is_libvtv)\n-\t\t    *sect_len = sect_hdr.sh_size - VTV_PAGE_SIZE;\n+\t\t    {\n+\t\t      VTV_ASSERT (sect_hdr.sh_size - VTV_PAGE_SIZE >= 0);\n+\t\t      *sect_len = sect_hdr.sh_size - VTV_PAGE_SIZE;\n+\t\t    }\n \t\t  else\n \t\t    *sect_len = sect_hdr.sh_size;\n                   found = true;\n@@ -784,7 +802,7 @@ iterate_modules (void *data)\n                       if (debug_functions)\n                         {\n                           snprintf (buffer, sizeof (buffer),\n-                                    \"Failed called to mprotect for %s error: \",\n+                                    \"Failed call to mprotect for %s error: \",\n                                     (*mprotect_flags & PROT_WRITE) ?\n                                     \"READ/WRITE\" : \"READ-ONLY\");\n                           log_memory_protection_data (buffer);\n@@ -804,9 +822,8 @@ iterate_modules (void *data)\n                         }\n                     }\n                   increment_num_calls (&num_calls_to_mprotect);\n-                  /* num_pages_protected += (map_sect_len + VTV_PAGE_SIZE - 1) \n-                                            / VTV_PAGE_SIZE; */\n-                  num_pages_protected += (map_sect_len + 4096 - 1) / 4096;\n+                  num_pages_protected += (map_sect_len + VTV_PAGE_SIZE - 1) \n+\t\t    / VTV_PAGE_SIZE;\n                   continue;\n                 }\n             }\n@@ -853,6 +870,9 @@ dl_iterate_phdr_callback (struct dl_phdr_info *info, size_t, void *data)\n   /* Get the name of the main executable.  This may or may not include\n      arguments passed to the program.  Find the first space, assume it\n      is the start of the argument list, and change it to a '\\0'. */\n+#ifdef HAVE_GETEXECNAME\n+  program_invocation_name = getexecname ();\n+#endif\n   snprintf (program_name, sizeof (program_name), program_invocation_name);\n \n   read_section_offset_and_length (info, map_sect_name, *mprotect_flags,\n@@ -896,7 +916,7 @@ dl_iterate_phdr_callback (struct dl_phdr_info *info, size_t, void *data)\n           if (debug_functions)\n             {\n               snprintf (buffer, sizeof (buffer),\n-                        \"Failed called to mprotect for %s error: \",\n+                        \"Failed call to mprotect for %s error: \",\n                         (*mprotect_flags & PROT_WRITE) ?\n                         \"READ/WRITE\" : \"READ-ONLY\");\n               log_memory_protection_data (buffer);\n@@ -916,8 +936,7 @@ dl_iterate_phdr_callback (struct dl_phdr_info *info, size_t, void *data)\n             }\n         }\n       increment_num_calls (&num_calls_to_mprotect);\n-      /* num_pages_protected += (map_sect_len + VTV_PAGE_SIZE - 1) / VTV_PAGE_SIZE; */\n-      num_pages_protected += (map_sect_len + 4096 - 1) / 4096;\n+      num_pages_protected += (map_sect_len + VTV_PAGE_SIZE - 1) / VTV_PAGE_SIZE;\n     }\n \n   return 0;\n@@ -1054,9 +1073,9 @@ __VLTChangePermission (int perm)\n   if (debug_functions)\n     {\n       if (perm == __VLTP_READ_WRITE)\n-\tfprintf (stdout, \"Changing VLT permisisons to Read-Write.\\n\");\n+\tfprintf (stdout, \"Changing VLT permissions to Read-Write.\\n\");\n       else if (perm == __VLTP_READ_ONLY)\n-\tfprintf (stdout, \"Changing VLT permissions to Read-only.\\n\");\n+\tfprintf (stdout, \"Changing VLT permissions to Read-Only.\\n\");\n \n       else\n \tfprintf (stdout, \"Unrecognized permissions value: %d\\n\", perm);"}]}