{"sha": "4f87d4c5aec9a1eaca7be61e5c8aab4d6e61b1d8", "node_id": "C_kwDOANBUbNoAKDRmODdkNGM1YWVjOWExZWFjYTdiZTYxZTVjOGFhYjRkNmU2MWIxZDg", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-14T19:37:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-14T21:19:38Z"}, "message": "libstdc++: Simplify variant access functions\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/variant (__variant::__get(in_place_index_t<N>, U&&)):\n\tRename to __get_n and remove first argument. Replace pair of\n\toverloads with a single function using 'if constexpr'.\n\t(__variant::__get(Variant&&)): Adjust to use __get_n.", "tree": {"sha": "e21cdc3758d299ec8d316bf6b65f576675653f2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e21cdc3758d299ec8d316bf6b65f576675653f2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f87d4c5aec9a1eaca7be61e5c8aab4d6e61b1d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f87d4c5aec9a1eaca7be61e5c8aab4d6e61b1d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f87d4c5aec9a1eaca7be61e5c8aab4d6e61b1d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f87d4c5aec9a1eaca7be61e5c8aab4d6e61b1d8/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "373acac1c8f2d64409ccea6aea409a0e15e80a6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/373acac1c8f2d64409ccea6aea409a0e15e80a6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/373acac1c8f2d64409ccea6aea409a0e15e80a6a"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "b85a89d0b7bd74fa75a322f9146ea0b23e00b554", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f87d4c5aec9a1eaca7be61e5c8aab4d6e61b1d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f87d4c5aec9a1eaca7be61e5c8aab4d6e61b1d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=4f87d4c5aec9a1eaca7be61e5c8aab4d6e61b1d8", "patch": "@@ -279,27 +279,26 @@ namespace __variant\n       __gnu_cxx::__aligned_membuf<_Type> _M_storage;\n     };\n \n-  template<typename _Union>\n-    constexpr decltype(auto)\n-    __get(in_place_index_t<0>, _Union&& __u) noexcept\n-    { return std::forward<_Union>(__u)._M_first._M_get(); }\n-\n   template<size_t _Np, typename _Union>\n     constexpr decltype(auto)\n-    __get(in_place_index_t<_Np>, _Union&& __u) noexcept\n+    __get_n(_Union&& __u) noexcept\n     {\n-      return __variant::__get(in_place_index<_Np-1>,\n-\t\t\t      std::forward<_Union>(__u)._M_rest);\n+      if constexpr (_Np == 0)\n+\treturn std::forward<_Union>(__u)._M_first._M_get();\n+      else if constexpr (_Np == 1)\n+\treturn std::forward<_Union>(__u)._M_rest._M_first._M_get();\n+      else if constexpr (_Np == 2)\n+\treturn std::forward<_Union>(__u)._M_rest._M_rest._M_first._M_get();\n+      else\n+\treturn __variant::__get_n<_Np - 3>(\n+\t\t std::forward<_Union>(__u)._M_rest._M_rest._M_rest);\n     }\n \n   // Returns the typed storage for __v.\n   template<size_t _Np, typename _Variant>\n     constexpr decltype(auto)\n     __get(_Variant&& __v) noexcept\n-    {\n-      return __variant::__get(std::in_place_index<_Np>,\n-\t\t\t      std::forward<_Variant>(__v)._M_u);\n-    }\n+    { return __variant::__get_n<_Np>(std::forward<_Variant>(__v)._M_u); }\n \n   template<typename... _Types>\n     struct _Traits"}]}