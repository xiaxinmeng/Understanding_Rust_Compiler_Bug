{"sha": "13c4975c2d8673045aaf58a1553b35ee8788ad3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNjNDk3NWMyZDg2NzMwNDVhYWY1OGExNTUzYjM1ZWU4Nzg4YWQzYw==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2013-05-05T23:47:22Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2013-05-05T23:47:22Z"}, "message": "libcaf.h (_gfortran_caf_critical): Add a prototype.\n\n        * caf/libcaf.h (_gfortran_caf_critical): Add a prototype.\n        (_gfortran_caf_end_critical): Same.\n\nFrom-SVN: r198613", "tree": {"sha": "48bcdb24cad4aff40e776d5b95c5b3b85fc7590b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48bcdb24cad4aff40e776d5b95c5b3b85fc7590b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13c4975c2d8673045aaf58a1553b35ee8788ad3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c4975c2d8673045aaf58a1553b35ee8788ad3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13c4975c2d8673045aaf58a1553b35ee8788ad3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c4975c2d8673045aaf58a1553b35ee8788ad3c/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33e6755738a59a47e0f2e436e01b72514043e8cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33e6755738a59a47e0f2e436e01b72514043e8cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33e6755738a59a47e0f2e436e01b72514043e8cb"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "8b34b1257704ab4c49018fc822f476d3bbc03bbe", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c4975c2d8673045aaf58a1553b35ee8788ad3c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c4975c2d8673045aaf58a1553b35ee8788ad3c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=13c4975c2d8673045aaf58a1553b35ee8788ad3c", "patch": "@@ -1,3 +1,8 @@\n+2013-05-05  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* caf/libcaf.h (_gfortran_caf_critical): Add a prototype.\n+\t(_gfortran_caf_end_critical): Same.\n+\n 2013-05-04  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* runtime/environ.c: Include unistd.h."}, {"sha": "fda6dba985ed27446f4353c3ff0195076921218d", "filename": "libgfortran/caf/libcaf.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c4975c2d8673045aaf58a1553b35ee8788ad3c/libgfortran%2Fcaf%2Flibcaf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c4975c2d8673045aaf58a1553b35ee8788ad3c/libgfortran%2Fcaf%2Flibcaf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fcaf%2Flibcaf.h?ref=13c4975c2d8673045aaf58a1553b35ee8788ad3c", "patch": "@@ -76,7 +76,10 @@ void _gfortran_caf_sync_images (int, int[], int *, char *, int);\n \n /* FIXME: The CRITICAL functions should be removed;\n    the functionality is better represented using Coarray's lock feature.  */\n+void _gfortran_caf_critical (void);\n void _gfortran_caf_critical (void)  { }\n+\n+void _gfortran_caf_end_critical (void);\n void _gfortran_caf_end_critical (void)  { }\n \n "}]}