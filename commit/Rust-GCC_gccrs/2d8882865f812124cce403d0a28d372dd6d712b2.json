{"sha": "2d8882865f812124cce403d0a28d372dd6d712b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ4ODgyODY1ZjgxMjEyNGNjZTQwM2QwYTI4ZDM3MmRkNmQ3MTJiMg==", "commit": {"author": {"name": "David Binderman", "email": "dcb314@hotmail.com", "date": "2009-11-24T12:59:00Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-11-24T12:59:00Z"}, "message": "cfgrtl.c (commit_one_edge_insertion): Remove set but not used local variable bb_note.\n\n2009-11-24  David Binderman <dcb314@hotmail.com>\n\n\t* cfgrtl.c (commit_one_edge_insertion): Remove set but not used\n\tlocal variable bb_note.\n        * dominance.c (get_dominated_by): Likewise local var n.\n        (output_file_names): Likewise local var idx.\n        (add_location_or_const_value_attribute): Likewise local var status.\n        * dwarf2out.c (gen_variable_die): Likewise local var field.\n        * emit-rtl.c (no_line_numbers): Remove.\n\t(init_emit_once): Remove line_numbers parameter.\n        * rtl.h (init_emit_once): Adjust prototype.\n        * toplev.c (backend_init): Adjust init_emit_once call.\n\nFrom-SVN: r154496", "tree": {"sha": "c4c734414946f093503d760e00bd8bb69ef8e901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4c734414946f093503d760e00bd8bb69ef8e901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d8882865f812124cce403d0a28d372dd6d712b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8882865f812124cce403d0a28d372dd6d712b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8882865f812124cce403d0a28d372dd6d712b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8882865f812124cce403d0a28d372dd6d712b2/comments", "author": {"login": "dcb314", "id": 4262901, "node_id": "MDQ6VXNlcjQyNjI5MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/4262901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcb314", "html_url": "https://github.com/dcb314", "followers_url": "https://api.github.com/users/dcb314/followers", "following_url": "https://api.github.com/users/dcb314/following{/other_user}", "gists_url": "https://api.github.com/users/dcb314/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcb314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcb314/subscriptions", "organizations_url": "https://api.github.com/users/dcb314/orgs", "repos_url": "https://api.github.com/users/dcb314/repos", "events_url": "https://api.github.com/users/dcb314/events{/privacy}", "received_events_url": "https://api.github.com/users/dcb314/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44018bc325fd70bba94cbfa4f8fa4b51c56ea0b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44018bc325fd70bba94cbfa4f8fa4b51c56ea0b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44018bc325fd70bba94cbfa4f8fa4b51c56ea0b6"}], "stats": {"total": 52, "additions": 21, "deletions": 31}, "files": [{"sha": "87eed981f387c2b6d7f6145c2a2433a958d1d715", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d8882865f812124cce403d0a28d372dd6d712b2", "patch": "@@ -1,3 +1,16 @@\n+2009-11-24  David Binderman <dcb314@hotmail.com>\n+\n+\t* cfgrtl.c (commit_one_edge_insertion): Remove set but not used\n+\tlocal variable bb_note.\n+        * dominance.c (get_dominated_by): Likewise local var n.\n+        (output_file_names): Likewise local var idx.\n+        (add_location_or_const_value_attribute): Likewise local var status.\n+        * dwarf2out.c (gen_variable_die): Likewise local var field.\n+        * emit-rtl.c (no_line_numbers): Remove.\n+\t(init_emit_once): Remove line_numbers parameter.\n+        * rtl.h (init_emit_once): Adjust prototype.\n+        * toplev.c (backend_init): Adjust init_emit_once call.\n+\n 2009-11-24  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/42142"}, {"sha": "71c15408d4b871977435b7f37e86968a98330fe8", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=2d8882865f812124cce403d0a28d372dd6d712b2", "patch": "@@ -1506,16 +1506,12 @@ commit_one_edge_insertion (edge e)\n \t      && BB_PARTITION (e->src) == BB_COLD_PARTITION\n \t      && !(e->flags & EDGE_CROSSING))\n \t    {\n-\t      rtx bb_note, cur_insn;\n+\t      rtx cur_insn;\n \n-\t      bb_note = NULL_RTX;\n \t      for (cur_insn = BB_HEAD (bb); cur_insn != NEXT_INSN (BB_END (bb));\n \t\t   cur_insn = NEXT_INSN (cur_insn))\n \t\tif (NOTE_INSN_BASIC_BLOCK_P (cur_insn))\n-\t\t  {\n-\t\t    bb_note = cur_insn;\n-\t\t    break;\n-\t\t  }\n+\t\t  break;\n \n \t      if (JUMP_P (BB_END (bb))\n \t\t  && !any_condjump_p (BB_END (bb))"}, {"sha": "78ad48c25436049fb18129de879788628cbf262d", "filename": "gcc/dominance.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2Fdominance.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2Fdominance.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdominance.c?ref=2d8882865f812124cce403d0a28d372dd6d712b2", "patch": "@@ -739,7 +739,6 @@ set_immediate_dominator (enum cdi_direction dir, basic_block bb,\n VEC (basic_block, heap) *\n get_dominated_by (enum cdi_direction dir, basic_block bb)\n {\n-  int n;\n   unsigned int dir_index = dom_convert_dir_to_idx (dir);\n   struct et_node *node = bb->dom[dir_index], *son = node->son, *ason;\n   VEC (basic_block, heap) *bbs = NULL;\n@@ -750,7 +749,7 @@ get_dominated_by (enum cdi_direction dir, basic_block bb)\n     return NULL;\n \n   VEC_safe_push (basic_block, heap, bbs, (basic_block) son->data);\n-  for (ason = son->right, n = 1; ason != son; ason = ason->right)\n+  for (ason = son->right; ason != son; ason = ason->right)\n     VEC_safe_push (basic_block, heap, bbs, (basic_block) ason->data);\n \n   return bbs;"}, {"sha": "25b5fdc2b01ba0d5e2c630ac4cf4b0a061c828a0", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=2d8882865f812124cce403d0a28d372dd6d712b2", "patch": "@@ -11261,7 +11261,6 @@ output_file_names (void)\n   int ndirs;\n   int idx_offset;\n   int i;\n-  int idx;\n \n   if (!last_emitted_file)\n     {\n@@ -11388,7 +11387,6 @@ output_file_names (void)\n     }\n \n   /* Emit the directory name table.  */\n-  idx = 1;\n   idx_offset = dirs[0].length > 0 ? 1 : 0;\n   for (i = 1 - idx_offset; i < ndirs; i++)\n     dw2_asm_output_nstring (dirs[i].path,\n@@ -15721,11 +15719,10 @@ add_location_or_const_value_attribute (dw_die_ref die, tree decl,\n   loc_list = lookup_decl_loc (decl);\n   if (loc_list && loc_list->first && loc_list->first == loc_list->last)\n     {\n-      enum var_init_status status;\n       struct var_loc_node *node;\n \n       node = loc_list->first;\n-      status = NOTE_VAR_LOCATION_STATUS (node->var_loc_note);\n+      NOTE_VAR_LOCATION_STATUS (node->var_loc_note);\n       rtl = NOTE_VAR_LOCATION (node->var_loc_note);\n       if (GET_CODE (rtl) == VAR_LOCATION\n \t  && GET_CODE (XEXP (rtl, 1)) != PARALLEL)\n@@ -17962,7 +17959,6 @@ gen_variable_die (tree decl, tree origin, dw_die_ref context_die)\n      of a data member.  */\n   if (com_decl)\n     {\n-      tree field;\n       dw_die_ref com_die;\n       dw_loc_list_ref loc;\n       die_node com_die_arg;\n@@ -18000,7 +17996,6 @@ gen_variable_die (tree decl, tree origin, dw_die_ref context_die)\n \t  = htab_create_ggc (10, common_block_die_table_hash,\n \t\t\t     common_block_die_table_eq, NULL);\n \n-      field = TREE_OPERAND (DECL_VALUE_EXPR (decl), 0);\n       com_die_arg.decl_id = DECL_UID (com_decl);\n       com_die_arg.die_parent = context_die;\n       com_die = (dw_die_ref) htab_find (common_block_die_table, &com_die_arg);"}, {"sha": "6ef490e6442bdd6ae92419a4fcbae01d646ef946", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=2d8882865f812124cce403d0a28d372dd6d712b2", "patch": "@@ -84,10 +84,6 @@ rtx * regno_reg_rtx;\n \n static GTY(()) int label_num = 1;\n \n-/* Nonzero means do not generate NOTEs for source line numbers.  */\n-\n-static int no_line_numbers;\n-\n /* Commonly used rtx's, so that we only need space for one copy.\n    These are initialized once for the entire compilation.\n    All of these are unique; no other rtx-object will be equal to any\n@@ -5714,11 +5710,10 @@ init_emit_regs (void)\n     pic_offset_table_rtx = NULL_RTX;\n }\n \n-/* Create some permanent unique rtl objects shared between all functions.\n-   LINE_NUMBERS is nonzero if line numbers are to be generated.  */\n+/* Create some permanent unique rtl objects shared between all functions.  */\n \n void\n-init_emit_once (int line_numbers)\n+init_emit_once (void)\n {\n   int i;\n   enum machine_mode mode;\n@@ -5740,8 +5735,6 @@ init_emit_once (int line_numbers)\n   reg_attrs_htab = htab_create_ggc (37, reg_attrs_htab_hash,\n \t\t\t\t    reg_attrs_htab_eq, NULL);\n \n-  no_line_numbers = ! line_numbers;\n-\n   /* Compute the word and byte modes.  */\n \n   byte_mode = VOIDmode;"}, {"sha": "a44c59c7afd35f4d829d99b78715957b21cd3453", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=2d8882865f812124cce403d0a28d372dd6d712b2", "patch": "@@ -2224,7 +2224,7 @@ extern int in_sequence_p (void);\n extern void force_next_line_note (void);\n extern void init_emit (void);\n extern void init_emit_regs (void);\n-extern void init_emit_once (int);\n+extern void init_emit_once (void);\n extern void push_topmost_sequence (void);\n extern void pop_topmost_sequence (void);\n extern void set_new_first_and_last_insn (rtx, rtx);"}, {"sha": "44f10d66ffc6c164ea2dcc6a538dda3274b36df1", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8882865f812124cce403d0a28d372dd6d712b2/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=2d8882865f812124cce403d0a28d372dd6d712b2", "patch": "@@ -2182,13 +2182,7 @@ backend_init_target (void)\n static void\n backend_init (void)\n {\n-  init_emit_once (debug_info_level == DINFO_LEVEL_NORMAL\n-\t\t  || debug_info_level == DINFO_LEVEL_VERBOSE\n-#ifdef VMS_DEBUGGING_INFO\n-\t\t    /* Enable line number info for traceback.  */\n-\t\t    || debug_info_level > DINFO_LEVEL_NONE\n-#endif\n-\t\t    || flag_test_coverage);\n+  init_emit_once ();\n \n   init_rtlanal ();\n   init_inline_once ();"}]}