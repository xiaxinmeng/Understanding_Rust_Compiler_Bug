{"sha": "bed8a1e4d6234e7bb1199eaf8f72b9007dc47034", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVkOGExZTRkNjIzNGU3YmIxMTk5ZWFmOGY3MmI5MDA3ZGM0NzAzNA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-10-04T14:06:41Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-10-04T14:06:41Z"}, "message": "call.c (convert_arg_to_ellipsis): Correct comment about passing by reference.\n\n\t* call.c (convert_arg_to_ellipsis): Correct comment about passing\n\tby reference.\n\nFrom-SVN: r253410", "tree": {"sha": "e3c23d94b0f10f880a2c38850253ee01d4cb6fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3c23d94b0f10f880a2c38850253ee01d4cb6fea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bed8a1e4d6234e7bb1199eaf8f72b9007dc47034", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed8a1e4d6234e7bb1199eaf8f72b9007dc47034", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bed8a1e4d6234e7bb1199eaf8f72b9007dc47034", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed8a1e4d6234e7bb1199eaf8f72b9007dc47034/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6069fe72870e410c08570e94ce2b141c6bc88219", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6069fe72870e410c08570e94ce2b141c6bc88219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6069fe72870e410c08570e94ce2b141c6bc88219"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "0d20ea5d1fa0cb8db35fdbf492b788f7d82a3606", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed8a1e4d6234e7bb1199eaf8f72b9007dc47034/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed8a1e4d6234e7bb1199eaf8f72b9007dc47034/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bed8a1e4d6234e7bb1199eaf8f72b9007dc47034", "patch": "@@ -1,3 +1,8 @@\n+2017-10-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* call.c (convert_arg_to_ellipsis): Correct comment about passing\n+\tby reference.\n+\n 2017-10-02  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* constexpr.c (cxx_eval_store_expression): Use wi::to_widest"}, {"sha": "bfd928823937106d03a17922d4d8e9e6f189e044", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed8a1e4d6234e7bb1199eaf8f72b9007dc47034/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed8a1e4d6234e7bb1199eaf8f72b9007dc47034/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=bed8a1e4d6234e7bb1199eaf8f72b9007dc47034", "patch": "@@ -7178,8 +7178,9 @@ convert_arg_to_ellipsis (tree arg, tsubst_flags_t complain)\n \t with no corresponding parameter is conditionally-supported, with\n \t implementation-defined semantics.\n \n-\t We support it as pass-by-invisible-reference, just like a normal\n-\t value parameter.\n+\t We support it as pass-by-invisible-reference to the caller's\n+\t object.  That's different to named by-value parameters, which\n+\t construct a copy and pass a reference to that.\n \n \t If the call appears in the context of a sizeof expression,\n \t it is not potentially-evaluated.  */"}]}