{"sha": "1636ebdc8a21300aa5aa6b8cfd423d397394c7a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYzNmViZGM4YTIxMzAwYWE1YWE2YjhjZmQ0MjNkMzk3Mzk0YzdhNQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2016-12-01T10:09:56Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2016-12-01T10:09:56Z"}, "message": "avr.c (avr_print_operand): Use SYMBOL_REF_P if possible.\n\ngcc/\n\t* config/avr/avr.c (avr_print_operand): Use SYMBOL_REF_P if possible.\n\t(avr_handle_addr_attribute, avr_asm_output_aligned_decl_common)\n\t(avr_asm_asm_output_aligned_bss, avr_addr_space_convert): Dito.\n\nFrom-SVN: r243104", "tree": {"sha": "adf1319794231f539586e9194743ba619cb5e3e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adf1319794231f539586e9194743ba619cb5e3e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1636ebdc8a21300aa5aa6b8cfd423d397394c7a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1636ebdc8a21300aa5aa6b8cfd423d397394c7a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1636ebdc8a21300aa5aa6b8cfd423d397394c7a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1636ebdc8a21300aa5aa6b8cfd423d397394c7a5/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccbf6355186e78ac85245962be0d33c0c4c28ac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbf6355186e78ac85245962be0d33c0c4c28ac6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccbf6355186e78ac85245962be0d33c0c4c28ac6"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "2683757d1b2c02d0f1da5cbae4612554e073b948", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1636ebdc8a21300aa5aa6b8cfd423d397394c7a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1636ebdc8a21300aa5aa6b8cfd423d397394c7a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1636ebdc8a21300aa5aa6b8cfd423d397394c7a5", "patch": "@@ -1,3 +1,9 @@\n+2016-12-01  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.c (avr_print_operand): Use SYMBOL_REF_P if possible.\n+\t(avr_handle_addr_attribute, avr_asm_output_aligned_decl_common)\n+\t(avr_asm_asm_output_aligned_bss, avr_addr_space_convert): Dito.\n+\n 2016-12-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/78587"}, {"sha": "db3c55f96c6f9519a1cad032fba030e23422b5ce", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1636ebdc8a21300aa5aa6b8cfd423d397394c7a5/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1636ebdc8a21300aa5aa6b8cfd423d397394c7a5/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=1636ebdc8a21300aa5aa6b8cfd423d397394c7a5", "patch": "@@ -2726,7 +2726,7 @@ avr_print_operand (FILE *file, rtx x, int code)\n     }\n   else if (code == 'i')\n     {\n-      if (GET_CODE (x) == SYMBOL_REF && (SYMBOL_REF_FLAGS (x) & SYMBOL_FLAG_IO))\n+      if (SYMBOL_REF_P (x) && (SYMBOL_REF_FLAGS (x) & SYMBOL_FLAG_IO))\n \tavr_print_operand_address\n \t  (file, VOIDmode, plus_constant (HImode, x, -avr_arch->sfr_offset));\n       else\n@@ -9585,7 +9585,7 @@ avr_handle_addr_attribute (tree *node, tree name, tree args,\n rtx\n avr_eval_addr_attrib (rtx x)\n {\n-  if (GET_CODE (x) == SYMBOL_REF\n+  if (SYMBOL_REF_P (x)\n       && (SYMBOL_REF_FLAGS (x) & SYMBOL_FLAG_ADDRESS))\n     {\n       tree decl = SYMBOL_REF_DECL (x);\n@@ -9896,7 +9896,7 @@ avr_asm_output_aligned_decl_common (FILE * stream,\n   rtx symbol;\n \n   if (mem != NULL_RTX && MEM_P (mem)\n-      && GET_CODE ((symbol = XEXP (mem, 0))) == SYMBOL_REF\n+      && SYMBOL_REF_P ((symbol = XEXP (mem, 0)))\n       && (SYMBOL_REF_FLAGS (symbol) & (SYMBOL_FLAG_IO | SYMBOL_FLAG_ADDRESS)))\n     {\n \n@@ -9941,7 +9941,7 @@ avr_asm_asm_output_aligned_bss (FILE *file, tree decl, const char *name,\n   rtx symbol;\n \n   if (mem != NULL_RTX && MEM_P (mem)\n-      && GET_CODE ((symbol = XEXP (mem, 0))) == SYMBOL_REF\n+      && SYMBOL_REF_P ((symbol = XEXP (mem, 0)))\n       && (SYMBOL_REF_FLAGS (symbol) & (SYMBOL_FLAG_IO | SYMBOL_FLAG_ADDRESS)))\n     {\n       if (!(SYMBOL_REF_FLAGS (symbol) & SYMBOL_FLAG_ADDRESS))\n@@ -12715,7 +12715,7 @@ avr_addr_space_convert (rtx src, tree type_from, tree type_to)\n          but are located in flash.  In that case we patch the incoming\n          address space.  */\n \n-      if (SYMBOL_REF == GET_CODE (sym)\n+      if (SYMBOL_REF_P (sym)\n           && ADDR_SPACE_FLASH == AVR_SYMBOL_GET_ADDR_SPACE (sym))\n         {\n           as_from = ADDR_SPACE_FLASH;"}]}