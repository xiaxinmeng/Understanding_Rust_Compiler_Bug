{"sha": "d6d34aa9133afdee0ca74b354a72cb720f431c1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZkMzRhYTkxMzNhZmRlZTBjYTc0YjM1NGE3MmNiNzIwZjQzMWMxYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-12-03T16:44:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-12-03T16:44:27Z"}, "message": "Makefile.in (ALL_HOST_BACKEND_OBJS): Add $(GENGTYPE_OBJS), gcc-ar.o, gcc-nm.o and gcc-ranlib.o.\n\n\t* Makefile.in (ALL_HOST_BACKEND_OBJS): Add $(GENGTYPE_OBJS),\n\tgcc-ar.o, gcc-nm.o and gcc-ranlib.o.\n\t(GENGTYPE_OBJS): New.\n\t(gengtype-lex.o, gengtype-parse.o, gengtype-state.o, gengtype.o):\n\tRemove explicit dependencies.\n\t(CFLAGS-gengtype-lex.o, CFLAGS-gengtype-parse.o,\n\tCFLAGS-gengtype-state.o, CFLAGS-gengtype.o): Add -DHOST_GENERATOR_FILE\n\tinstead of -DGENERATOR_FILE.\n\t(CFLAGS-errors.o): New.\n\t* gengtype.c: Instead of testing GENERATOR_FILE define, test\n\tHOST_GENERATOR_FILE.  If defined, include config.h and define\n\tGENERATOR_FILE afterwards, otherwise include bconfig.h.\n\t* gengtype-parse.c: Likewise.\n\t* gengtype-state.c: Likewise.\n\t* gengtype-lex.l: Likewise.\n\t* errors.c: Likewise.\n\nFrom-SVN: r218325", "tree": {"sha": "210dfff56dd58777f4158379cad83d2abb5d41c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/210dfff56dd58777f4158379cad83d2abb5d41c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6d34aa9133afdee0ca74b354a72cb720f431c1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6d34aa9133afdee0ca74b354a72cb720f431c1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6d34aa9133afdee0ca74b354a72cb720f431c1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6d34aa9133afdee0ca74b354a72cb720f431c1a/comments", "author": null, "committer": null, "parents": [{"sha": "60e947c7d60b81dd3b2cca9f0770f9460fd78dff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e947c7d60b81dd3b2cca9f0770f9460fd78dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60e947c7d60b81dd3b2cca9f0770f9460fd78dff"}], "stats": {"total": 130, "additions": 77, "deletions": 53}, "files": [{"sha": "5110db93684f08c483b0789f887568473919936a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 29, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6d34aa9133afdee0ca74b354a72cb720f431c1a", "patch": "@@ -1,3 +1,22 @@\n+2014-12-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Makefile.in (ALL_HOST_BACKEND_OBJS): Add $(GENGTYPE_OBJS),\n+\tgcc-ar.o, gcc-nm.o and gcc-ranlib.o.\n+\t(GENGTYPE_OBJS): New.\n+\t(gengtype-lex.o, gengtype-parse.o, gengtype-state.o, gengtype.o):\n+\tRemove explicit dependencies.\n+\t(CFLAGS-gengtype-lex.o, CFLAGS-gengtype-parse.o,\n+\tCFLAGS-gengtype-state.o, CFLAGS-gengtype.o): Add -DHOST_GENERATOR_FILE\n+\tinstead of -DGENERATOR_FILE.\n+\t(CFLAGS-errors.o): New.\n+\t* gengtype.c: Instead of testing GENERATOR_FILE define, test\n+\tHOST_GENERATOR_FILE.  If defined, include config.h and define\n+\tGENERATOR_FILE afterwards, otherwise include bconfig.h.\n+\t* gengtype-parse.c: Likewise.\n+\t* gengtype-state.c: Likewise.\n+\t* gengtype-lex.l: Likewise.\n+\t* errors.c: Likewise.\n+\n 2014-12-03  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* config/epiphany/epiphany.c (epiphany_override_options):\n@@ -10,8 +29,8 @@\n \tRevert:\n \n \t2014-09-17  Andrew Stubbs  <ams@codesourcery.com>\n-       * config/arm/arm.c (arm_option_override): Reject -mfpu=neon\n-       when architecture is older than ARMv7.\n+\t* config/arm/arm.c (arm_option_override): Reject -mfpu=neon\n+\twhen architecture is older than ARMv7.\n \n 2014-12-03  Richard Biener  <rguenther@suse.de>\n \n@@ -5079,16 +5098,16 @@\n \tseparation class.\n \t(generate_luj_sepclass_opt): Build the separation class option.\n \t(generate_luj_options): Set unroll and jam options.\n-        (set_options): Support for unroll and jam options.\n+\t(set_options): Support for unroll and jam options.\n \t(scop_to_isl_ast): Likewise\n \t* graphite-optimize-isl.c (getPrevectorMap_full): New function for\n-        computing the separating class map.\n+\tcomputing the separating class map.\n \t(optimize_isl): Support for the separating class map.\n \t(apply_schedule_map_to_scop): Likewise.\n \t(getScheduleMap): Likewise.\n \t(getScheduleForBand): Likewise.\n \t(getScheduleForBandList): Likewise.\n-        * graphite.c (gate_graphite_transforms): Add unroll and jam flag.\n+\t* graphite.c (gate_graphite_transforms): Add unroll and jam flag.\n \t* toplev.c (process_options) Likewise.\n \n 2014-11-15  Eric Botcazou  <ebotcazou@adacore.com>\n@@ -5498,15 +5517,15 @@\n 2014-11-14  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/63724\n-        * config/aarch64/aarch64.c (aarch64_expand_mov_immediate): Split out\n-        numerical immediate handling to...\n-        (aarch64_internal_mov_immediate): ...this. New.\n-        (aarch64_rtx_costs): Use aarch64_internal_mov_immediate.\n-        (aarch64_mov_operand_p): Relax predicate.\n-        * config/aarch64/aarch64.md (mov<mode>:GPI): Do not expand CONST_INTs.\n-        (*movsi_aarch64): Turn into define_insn_and_split and new alternative\n-        for 'n'.\n-        (*movdi_aarch64): Likewise.\n+\t* config/aarch64/aarch64.c (aarch64_expand_mov_immediate): Split out\n+\tnumerical immediate handling to...\n+\t(aarch64_internal_mov_immediate): ...this. New.\n+\t(aarch64_rtx_costs): Use aarch64_internal_mov_immediate.\n+\t(aarch64_mov_operand_p): Relax predicate.\n+\t* config/aarch64/aarch64.md (mov<mode>:GPI): Do not expand CONST_INTs.\n+\t(*movsi_aarch64): Turn into define_insn_and_split and new alternative\n+\tfor 'n'.\n+\t(*movdi_aarch64): Likewise.\n \n 2014-11-14  Richard Biener  <rguenther@suse.de>\n \n@@ -5627,22 +5646,20 @@\n \n 2014-11-13  Alan Lawrence  <alan.lawrence@arm.com>\n \n-        * tree-vectorizer.h (vect_gen_perm_mask): Remove.\n-        (vect_gen_perm_mask_checked, vect_gen_perm_mask_any): New.\n+\t* tree-vectorizer.h (vect_gen_perm_mask): Remove.\n+\t(vect_gen_perm_mask_checked, vect_gen_perm_mask_any): New.\n \n-        tree_vec_data_refs.c (vect_permute_load_chain, vec_permute_store_chain,\n-        vec_shift_permute_load_chain): Replace vect_gen_perm_mask & assert\n-        with vect_gen_perm_mask_checked.\n+\t* tree_vec_data_refs.c (vect_permute_load_chain,\n+\tvec_permute_store_chain, vec_shift_permute_load_chain): Replace\n+\tvect_gen_perm_mask & assert with vect_gen_perm_mask_checked.\n \n-        * tree-vect-stmts.c (vectorizable_mask_load_store, vectorizable_load):\n-        Likewise.\n-\n-        (vect_gen_perm_mask_checked): New.\n-        (vect_gen_perm_mask): Remove can_vec_perm_p check, rename to...\n-        (vect_gen_perm_mask_any): ...this.\n-\n-        (perm_mask_for_reverse): Call can_vec_perm_p and\n-        vect_gen_perm_mask_checked.\n+\t* tree-vect-stmts.c (vectorizable_mask_load_store, vectorizable_load):\n+\tLikewise.\n+\t(vect_gen_perm_mask_checked): New.\n+\t(vect_gen_perm_mask): Remove can_vec_perm_p check, rename to...\n+\t(vect_gen_perm_mask_any): ...this.\n+\t(perm_mask_for_reverse): Call can_vec_perm_p and\n+\tvect_gen_perm_mask_checked.\n \n 2014-11-13  Felix Yang  <felix.yang@huawei.com>\n \n@@ -6459,7 +6476,7 @@\n \n 2014-11-11  Evgeny Stupachenko  <evstupac@gmail.com>\n \n-        * tree-vect-data-refs.c (vect_shift_permute_load_chain): Extend shift\n+\t* tree-vect-data-refs.c (vect_shift_permute_load_chain): Extend shift\n \tpermutations on power of 2 cases.\n \n 2014-11-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>"}, {"sha": "3820d0bc3c8acd92dbe9506552b197be4c25c40f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d6d34aa9133afdee0ca74b354a72cb720f431c1a", "patch": "@@ -1509,7 +1509,8 @@ ALL_HOST_FRONTEND_OBJS = $(foreach v,$(CONFIG_LANGUAGES),$($(v)_OBJS))\n ALL_HOST_BACKEND_OBJS = $(GCC_OBJS) $(OBJS) $(OBJS-libcommon) \\\n   $(OBJS-libcommon-target) @TREEBROWSER@ main.o c-family/cppspec.o \\\n   $(COLLECT2_OBJS) $(EXTRA_GCC_OBJS) $(GCOV_OBJS) $(GCOV_DUMP_OBJS) \\\n-  $(GCOV_TOOL_OBJS) lto-wrapper.o collect-utils.o\n+  $(GCOV_TOOL_OBJS) $(GENGTYPE_OBJS) gcc-ar.o gcc-nm.o gcc-ranlib.o \\\n+  lto-wrapper.o collect-utils.o\n \n # This lists all host object files, whether they are included in this\n # compilation or not.\n@@ -2484,30 +2485,31 @@ build/gengenrtl.o : gengenrtl.c $(BCONFIG_H) $(SYSTEM_H) rtl.def\n # on BCONFIG_H.  For the build objects, add -DGENERATOR_FILE manually,\n # the build-%: rule doesn't apply to them.\n \n+GENGTYPE_OBJS = gengtype.o gengtype-parse.o gengtype-state.o \\\n+  gengtype-lex.o errors.o\n+\n gengtype-lex.o build/gengtype-lex.o : gengtype-lex.c gengtype.h $(SYSTEM_H)\n-gengtype-lex.o: $(CONFIG_H) $(BCONFIG_H)\n-CFLAGS-gengtype-lex.o += -DGENERATOR_FILE\n+CFLAGS-gengtype-lex.o += -DHOST_GENERATOR_FILE\n build/gengtype-lex.o: $(BCONFIG_H)\n \n gengtype-parse.o build/gengtype-parse.o : gengtype-parse.c gengtype.h \\\n   $(SYSTEM_H)\n-gengtype-parse.o: $(CONFIG_H)\n-CFLAGS-gengtype-parse.o += -DGENERATOR_FILE\n+CFLAGS-gengtype-parse.o += -DHOST_GENERATOR_FILE\n build/gengtype-parse.o: $(BCONFIG_H)\n \n gengtype-state.o build/gengtype-state.o: gengtype-state.c $(SYSTEM_H) \\\n   gengtype.h errors.h double-int.h version.h $(HASHTAB_H) $(OBSTACK_H) \\\n   $(XREGEX_H)\n-gengtype-state.o: $(CONFIG_H)\n-CFLAGS-gengtype-state.o += -DGENERATOR_FILE\n+CFLAGS-gengtype-state.o += -DHOST_GENERATOR_FILE\n build/gengtype-state.o: $(BCONFIG_H)\n gengtype.o build/gengtype.o : gengtype.c $(SYSTEM_H) gengtype.h \t\\\n   rtl.def insn-notes.def errors.h double-int.h version.h     \t\t\\\n   $(HASHTAB_H) $(OBSTACK_H) $(XREGEX_H)\n-gengtype.o: $(CONFIG_H)\n-CFLAGS-gengtype.o += -DGENERATOR_FILE\n+CFLAGS-gengtype.o += -DHOST_GENERATOR_FILE\n build/gengtype.o: $(BCONFIG_H)\n \n+CFLAGS-errors.o += -DHOST_GENERATOR_FILE\n+\n build/genmddeps.o: genmddeps.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   errors.h $(READ_MD_H)\n build/genmodes.o : genmodes.c $(BCONFIG_H) $(SYSTEM_H) errors.h\t\t\\"}, {"sha": "a6a30fee8715da694c38ab846fe602d32da3b445", "filename": "gcc/errors.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2Ferrors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2Ferrors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ferrors.c?ref=d6d34aa9133afdee0ca74b354a72cb720f431c1a", "patch": "@@ -21,10 +21,11 @@ along with GCC; see the file COPYING3.  If not see\n    in the generator programs; the compiler has a more elaborate suite\n    of diagnostic printers, found in diagnostic.c.  */\n \n-#ifdef GENERATOR_FILE\n-#include \"bconfig.h\"\n-#else\n+#ifdef HOST_GENERATOR_FILE\n #include \"config.h\"\n+#define GENERATOR_FILE 1\n+#else\n+#include \"bconfig.h\"\n #endif\n #include \"system.h\"\n #include \"errors.h\""}, {"sha": "0866603d5c474d9370de52720f06bd09b7af5a70", "filename": "gcc/gengtype-lex.l", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2Fgengtype-lex.l", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2Fgengtype-lex.l", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-lex.l?ref=d6d34aa9133afdee0ca74b354a72cb720f431c1a", "patch": "@@ -21,10 +21,11 @@ along with GCC; see the file COPYING3.  If not see\n %option noinput\n \n %{\n-#ifdef GENERATOR_FILE\n-#include \"bconfig.h\"\n-#else\n+#ifdef HOST_GENERATOR_FILE\n #include \"config.h\"\n+#define GENERATOR_FILE 1\n+#else\n+#include \"bconfig.h\"\n #endif\n #include \"system.h\"\n "}, {"sha": "87b691752146f9eee8337684d40f1b802a97d3ef", "filename": "gcc/gengtype-parse.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2Fgengtype-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2Fgengtype-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-parse.c?ref=d6d34aa9133afdee0ca74b354a72cb720f431c1a", "patch": "@@ -17,10 +17,11 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-#ifdef GENERATOR_FILE\n-#include \"bconfig.h\"\n-#else\n+#ifdef HOST_GENERATOR_FILE\n #include \"config.h\"\n+#define GENERATOR_FILE 1\n+#else\n+#include \"bconfig.h\"\n #endif\n #include \"system.h\"\n #include \"gengtype.h\""}, {"sha": "7634f746e0dc21a38c86931a64bf35560c475cd7", "filename": "gcc/gengtype-state.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2Fgengtype-state.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2Fgengtype-state.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-state.c?ref=d6d34aa9133afdee0ca74b354a72cb720f431c1a", "patch": "@@ -23,10 +23,11 @@\n    and Basile Starynkevitch <basile@starynkevitch.net>\n */\n \n-#ifdef GENERATOR_FILE\n-#include \"bconfig.h\"\n-#else\n+#ifdef HOST_GENERATOR_FILE\n #include \"config.h\"\n+#define GENERATOR_FILE 1\n+#else\n+#include \"bconfig.h\"\n #endif\n #include \"system.h\"\n #include \"errors.h\"\t/* For fatal.  */"}, {"sha": "39d29183521793bf63e3ecab28feed397fb95a1e", "filename": "gcc/gengtype.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d34aa9133afdee0ca74b354a72cb720f431c1a/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=d6d34aa9133afdee0ca74b354a72cb720f431c1a", "patch": "@@ -17,10 +17,11 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-#ifdef GENERATOR_FILE\n-#include \"bconfig.h\"\n-#else\n+#ifdef HOST_GENERATOR_FILE\n #include \"config.h\"\n+#define GENERATOR_FILE 1\n+#else\n+#include \"bconfig.h\"\n #endif\n #include \"system.h\"\n #include \"errors.h\"\t\t/* for fatal */"}]}