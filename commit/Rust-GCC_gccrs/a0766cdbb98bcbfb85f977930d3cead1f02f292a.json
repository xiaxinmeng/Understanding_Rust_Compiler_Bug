{"sha": "a0766cdbb98bcbfb85f977930d3cead1f02f292a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA3NjZjZGJiOThiY2JmYjg1Zjk3NzkzMGQzY2VhZDFmMDJmMjkyYQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-09-07T21:18:55Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-09-07T21:18:55Z"}, "message": "Redefine STACK_BOUNDARY/PREFERRED_STACK_BOUNDARY for Darwin/x86.\n\ngcc/\n\n2010-09-07  H.J. Lu  <hjl.tools@gmail.com>\n\t    Jack Howarth <howarth@bromo.med.uc.edu>\n\n\tPR target/36502\n\tPR target/42313\n\tPR target/44651\n\t* gcc/config/i386/darwin.h (STACK_BOUNDARY): Redefine as 128 for\n\tprofiling or 64-bit MS_ABI and as BITS_PER_WORD otherwise.\n\t(PREFERRED_STACK_BOUNDARY): Replace STACK_BOUNDARY with 128 in\n\tMAX macro.\n\ngcc/testsuite/\n\n2010-09-07  Jack Howarth <howarth@bromo.med.uc.edu>\n\n\tPR target/36502\n\t* gcc.target/i386/pr36502.c: New test.\n\n\tPR target/42313\n\tPR target/44651\n\t* gcc.target/i386/builtin-unreachable.c: Don't skip on darwin.\n\t* gcc/testsuite/gcc.dg/stack-usage-1.c: Use default on i386/Darwin.\n\nFrom-SVN: r163971", "tree": {"sha": "939c175cf18e0a6b7d5c9ac3f3e29920113c79a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/939c175cf18e0a6b7d5c9ac3f3e29920113c79a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0766cdbb98bcbfb85f977930d3cead1f02f292a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0766cdbb98bcbfb85f977930d3cead1f02f292a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0766cdbb98bcbfb85f977930d3cead1f02f292a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0766cdbb98bcbfb85f977930d3cead1f02f292a/comments", "author": null, "committer": null, "parents": [{"sha": "4e75177267c0e5f3e6098ea388953bd6d9a4cef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e75177267c0e5f3e6098ea388953bd6d9a4cef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e75177267c0e5f3e6098ea388953bd6d9a4cef6"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "33c56d969287cdd174e92bc89b24e48b4afabd4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0766cdbb98bcbfb85f977930d3cead1f02f292a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0766cdbb98bcbfb85f977930d3cead1f02f292a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0766cdbb98bcbfb85f977930d3cead1f02f292a", "patch": "@@ -1,3 +1,14 @@\n+2010-09-07  H.J. Lu  <hjl.tools@gmail.com>\n+\t    Jack Howarth <howarth@bromo.med.uc.edu>\n+\n+\tPR target/36502\n+\tPR target/42313\n+\tPR target/44651\n+\t* gcc/config/i386/darwin.h (STACK_BOUNDARY): Redefine as 128 for\n+\tprofiling or 64-bit MS_ABI and as BITS_PER_WORD otherwise.\n+\t(PREFERRED_STACK_BOUNDARY): Replace STACK_BOUNDARY with 128 in\n+\tMAX macro.\n+\n 2010-09-07  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* unwind-dw2-fde-glibc.c: Include <elf.h> for DT_CONFIG."}, {"sha": "416b0238c38a2034deee5190c67c06d71f956c35", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0766cdbb98bcbfb85f977930d3cead1f02f292a/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0766cdbb98bcbfb85f977930d3cead1f02f292a/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=a0766cdbb98bcbfb85f977930d3cead1f02f292a", "patch": "@@ -79,7 +79,9 @@ extern int darwin_emit_branch_islands;\n    Failure to ensure this will lead to a crash in the system libraries\n    or dynamic loader.  */\n #undef STACK_BOUNDARY\n-#define STACK_BOUNDARY 128\n+#define STACK_BOUNDARY \\\n+ ((profile_flag || (TARGET_64BIT && ix86_abi == MS_ABI)) \\\n+  ? 128 : BITS_PER_WORD)\n \n #undef MAIN_STACK_BOUNDARY\n #define MAIN_STACK_BOUNDARY 128\n@@ -91,7 +93,7 @@ extern int darwin_emit_branch_islands;\n    it's below the minimum.  */\n #undef PREFERRED_STACK_BOUNDARY\n #define PREFERRED_STACK_BOUNDARY\t\t\t\\\n-  MAX (STACK_BOUNDARY, ix86_preferred_stack_boundary)\n+  MAX (128, ix86_preferred_stack_boundary)\n \n /* We want -fPIC by default, unless we're using -static to compile for\n    the kernel or some such.  */"}, {"sha": "0c29f205bcdde6454bf7135577bf1cc222a2dc0f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0766cdbb98bcbfb85f977930d3cead1f02f292a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0766cdbb98bcbfb85f977930d3cead1f02f292a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0766cdbb98bcbfb85f977930d3cead1f02f292a", "patch": "@@ -1,3 +1,13 @@\n+2010-09-07  Jack Howarth <howarth@bromo.med.uc.edu>\n+\n+\tPR target/36502\n+\t* gcc.target/i386/pr36502.c: New test.\n+\n+\tPR target/42313\n+\tPR target/44651\n+\t* gcc.target/i386/builtin-unreachable.c: Don't skip on darwin.\n+\t* gcc/testsuite/gcc.dg/stack-usage-1.c: Use default on i386/Darwin.\n+\n 2010-09-07  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* gfortran.dg/achar_4.f90: Enable bounds checking."}, {"sha": "f1748826cc12baee525760b53f41b2013a74bc27", "filename": "gcc/testsuite/gcc.dg/stack-usage-1.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0766cdbb98bcbfb85f977930d3cead1f02f292a/gcc%2Ftestsuite%2Fgcc.dg%2Fstack-usage-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0766cdbb98bcbfb85f977930d3cead1f02f292a/gcc%2Ftestsuite%2Fgcc.dg%2Fstack-usage-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstack-usage-1.c?ref=a0766cdbb98bcbfb85f977930d3cead1f02f292a", "patch": "@@ -8,11 +8,7 @@\n    Then check that this is the actual stack usage in the assembly file.  */\n \n #if defined(__i386__)\n-#  if defined (__MACH__)\n-#    define SIZE 232\n-#  else\n-#    define SIZE 248\n-#  endif\n+#  define SIZE 248\n #elif defined(__x86_64__)\n #  define SIZE 356\n #elif defined (__sparc__)"}, {"sha": "802cf16d39a0f4c2558775a0b5095c9ccdf010ee", "filename": "gcc/testsuite/gcc.target/i386/builtin-unreachable.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0766cdbb98bcbfb85f977930d3cead1f02f292a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-unreachable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0766cdbb98bcbfb85f977930d3cead1f02f292a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-unreachable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-unreachable.c?ref=a0766cdbb98bcbfb85f977930d3cead1f02f292a", "patch": "@@ -9,5 +9,5 @@ int h (char *p)\n     __builtin_unreachable ();\n   return p ? 1 : 0;\n }\n-/* { dg-final { scan-assembler-not \"%e\\[bs\\]p\" { target { ! *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler-not \"%e\\[bs\\]p\" } } */\n /* { dg-final { scan-assembler-not \"\\[\\\\t \\]+j\" } } */"}, {"sha": "5794159d8e72b5753d5141bbb21b97dbe3b1a800", "filename": "gcc/testsuite/gcc.target/i386/pr36502.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0766cdbb98bcbfb85f977930d3cead1f02f292a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36502.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0766cdbb98bcbfb85f977930d3cead1f02f292a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36502.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36502.c?ref=a0766cdbb98bcbfb85f977930d3cead1f02f292a", "patch": "@@ -0,0 +1,7 @@\n+/* PR target/36502 */\n+/* { dg-do compile { target { *-*-darwin* && ilp32 } } } */\n+/* { dg-options \"-O -fomit-frame-pointer -fno-pic -S\" } */\n+int a;\n+void f() {a++;}\n+/* { dg-final { scan-assembler-not \"esp\" } } */\n+"}]}