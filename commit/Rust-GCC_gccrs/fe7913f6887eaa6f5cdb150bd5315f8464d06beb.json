{"sha": "fe7913f6887eaa6f5cdb150bd5315f8464d06beb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU3OTEzZjY4ODdlYWE2ZjVjZGIxNTBiZDUzMTVmODQ2NGQwNmJlYg==", "commit": {"author": {"name": "Maxim Ostapenko", "email": "m.ostapenko@samsung.com", "date": "2016-11-08T22:06:02Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2016-11-08T22:06:02Z"}, "message": "re PR sanitizer/63958 (bootstrap failure in the sanitizer libs on sparc-linux-gnu)\n\n\tPR sanitizer/63958\n\tReapply:\n\t2014-10-14  David S. Miller  <davem@davemloft.net>\n\n\t* sanitizer_common/sanitizer_platform_limits_linux.cc (time_t):\n\tDefine at __kernel_time_t, as needed for sparc.\n\t(struct __old_kernel_stat): Don't check if __sparc__ is defined.\n\t* libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h\n\t(__sanitizer): Define struct___old_kernel_stat_sz,\n\tstruct_kernel_stat_sz, and struct_kernel_stat64_sz for sparc.\n\t(__sanitizer_ipc_perm): Adjust for sparc targets.\n\t(__sanitizer_shmid_ds): Likewsie.\n\t(__sanitizer_sigaction): Likewise.\n\t(IOC_SIZE): Likewsie.\n\nFrom-SVN: r241978", "tree": {"sha": "fc0bf2b64ee3ceb7a6613aada60ab188be0bc2ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc0bf2b64ee3ceb7a6613aada60ab188be0bc2ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe7913f6887eaa6f5cdb150bd5315f8464d06beb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7913f6887eaa6f5cdb150bd5315f8464d06beb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe7913f6887eaa6f5cdb150bd5315f8464d06beb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7913f6887eaa6f5cdb150bd5315f8464d06beb/comments", "author": null, "committer": null, "parents": [{"sha": "1018981977de9f2056cdfcd8173458e85a3751f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1018981977de9f2056cdfcd8173458e85a3751f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1018981977de9f2056cdfcd8173458e85a3751f2"}], "stats": {"total": 80, "additions": 77, "deletions": 3}, "files": [{"sha": "166571485a6cf27f91460fb994f0acbee626180f", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7913f6887eaa6f5cdb150bd5315f8464d06beb/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7913f6887eaa6f5cdb150bd5315f8464d06beb/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=fe7913f6887eaa6f5cdb150bd5315f8464d06beb", "patch": "@@ -1,3 +1,20 @@\n+2016-11-09  Maxim Ostapenko  <m.ostapenko@samsung.com>\n+\n+\tPR sanitizer/63958\n+\tReapply:\n+\t2014-10-14  David S. Miller  <davem@davemloft.net>\n+\n+\t* sanitizer_common/sanitizer_platform_limits_linux.cc (time_t):\n+\tDefine at __kernel_time_t, as needed for sparc.\n+\t(struct __old_kernel_stat): Don't check if __sparc__ is defined.\n+\t* libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h\n+\t(__sanitizer): Define struct___old_kernel_stat_sz,\n+\tstruct_kernel_stat_sz, and struct_kernel_stat64_sz for sparc.\n+\t(__sanitizer_ipc_perm): Adjust for sparc targets.\n+\t(__sanitizer_shmid_ds): Likewsie.\n+\t(__sanitizer_sigaction): Likewise.\n+\t(IOC_SIZE): Likewsie.\n+\n 2016-11-09  Maxim Ostapenko  <m.ostapenko@samsung.com>\n \n \t* All source files: Merge from upstream 285547."}, {"sha": "23a014823c4fcca46e86dccc5bb57a2679df43f4", "filename": "libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7913f6887eaa6f5cdb150bd5315f8464d06beb/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_linux.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7913f6887eaa6f5cdb150bd5315f8464d06beb/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_linux.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_linux.cc?ref=fe7913f6887eaa6f5cdb150bd5315f8464d06beb", "patch": "@@ -36,6 +36,7 @@\n #define uid_t __kernel_uid_t\n #define gid_t __kernel_gid_t\n #define off_t __kernel_off_t\n+#define time_t __kernel_time_t\n // This header seems to contain the definitions of _kernel_ stat* structs.\n #include <asm/stat.h>\n #undef ino_t\n@@ -62,7 +63,8 @@ namespace __sanitizer {\n }  // namespace __sanitizer\n \n #if !defined(__powerpc64__) && !defined(__x86_64__) && !defined(__aarch64__)\\\n-                            && !defined(__mips__) && !defined(__s390__)\n+                            && !defined(__mips__) && !defined(__s390__)\\\n+                            && !defined(__sparc__)\n COMPILER_CHECK(struct___old_kernel_stat_sz == sizeof(struct __old_kernel_stat));\n #endif\n "}, {"sha": "d1a305169973455f425af8ebcc35ee823a306c85", "filename": "libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h", "status": "modified", "additions": 57, "deletions": 2, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7913f6887eaa6f5cdb150bd5315f8464d06beb/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7913f6887eaa6f5cdb150bd5315f8464d06beb/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h?ref=fe7913f6887eaa6f5cdb150bd5315f8464d06beb", "patch": "@@ -85,6 +85,14 @@ namespace __sanitizer {\n #elif defined(__s390x__)\n   const unsigned struct_kernel_stat_sz = 144;\n   const unsigned struct_kernel_stat64_sz = 0;\n+#elif defined(__sparc__) && defined(__arch64__)\n+  const unsigned struct___old_kernel_stat_sz = 0;\n+  const unsigned struct_kernel_stat_sz = 104;\n+  const unsigned struct_kernel_stat64_sz = 144;\n+#elif defined(__sparc__) && !defined(__arch64__)\n+  const unsigned struct___old_kernel_stat_sz = 0;\n+  const unsigned struct_kernel_stat_sz = 64;\n+  const unsigned struct_kernel_stat64_sz = 104;\n #endif\n   struct __sanitizer_perf_event_attr {\n     unsigned type;\n@@ -107,7 +115,7 @@ namespace __sanitizer {\n \n #if defined(__powerpc64__) || defined(__s390__)\n   const unsigned struct___old_kernel_stat_sz = 0;\n-#else\n+#elif !defined(__sparc__)\n   const unsigned struct___old_kernel_stat_sz = 32;\n #endif\n \n@@ -198,6 +206,18 @@ namespace __sanitizer {\n     unsigned short __pad1;\n     unsigned long __unused1;\n     unsigned long __unused2;\n+#elif defined(__sparc__)\n+# if defined(__arch64__)\n+    unsigned mode;\n+    unsigned short __pad1;\n+# else\n+    unsigned short __pad1;\n+    unsigned short mode;\n+    unsigned short __pad2;\n+# endif\n+    unsigned short __seq;\n+    unsigned long long __unused1;\n+    unsigned long long __unused2;\n #else\n     unsigned short mode;\n     unsigned short __pad1;\n@@ -215,6 +235,26 @@ namespace __sanitizer {\n \n   struct __sanitizer_shmid_ds {\n     __sanitizer_ipc_perm shm_perm;\n+  #if defined(__sparc__)\n+  # if !defined(__arch64__)\n+    u32 __pad1;\n+  # endif\n+    long shm_atime;\n+  # if !defined(__arch64__)\n+    u32 __pad2;\n+  # endif\n+    long shm_dtime;\n+  # if !defined(__arch64__)\n+    u32 __pad3;\n+  # endif\n+    long shm_ctime;\n+    uptr shm_segsz;\n+    int shm_cpid;\n+    int shm_lpid;\n+    unsigned long shm_nattch;\n+    unsigned long __glibc_reserved1;\n+    unsigned long __glibc_reserved2;\n+  #else\n   #ifndef __powerpc__\n     uptr shm_segsz;\n   #elif !defined(__powerpc64__)\n@@ -252,6 +292,7 @@ namespace __sanitizer {\n     uptr __unused4;\n     uptr __unused5;\n   #endif\n+#endif\n   };\n #elif SANITIZER_FREEBSD\n   struct __sanitizer_ipc_perm {\n@@ -586,9 +627,13 @@ namespace __sanitizer {\n     __sanitizer_sigset_t sa_mask;\n #endif\n #ifndef __mips__\n+#if defined(__sparc__)\n+    unsigned long sa_flags;\n+#else\n     int sa_flags;\n #endif\n #endif\n+#endif\n #if SANITIZER_LINUX\n     void (*sa_restorer)();\n #endif\n@@ -849,7 +894,7 @@ struct __sanitizer_cookie_io_functions_t {\n \n #define IOC_NRBITS 8\n #define IOC_TYPEBITS 8\n-#if defined(__powerpc__) || defined(__powerpc64__) || defined(__mips__)\n+#if defined(__powerpc__) || defined(__powerpc64__) || defined(__mips__) || defined(__sparc__)\n #define IOC_SIZEBITS 13\n #define IOC_DIRBITS 3\n #define IOC_NONE 1U\n@@ -879,7 +924,17 @@ struct __sanitizer_cookie_io_functions_t {\n #define IOC_DIR(nr) (((nr) >> IOC_DIRSHIFT) & IOC_DIRMASK)\n #define IOC_TYPE(nr) (((nr) >> IOC_TYPESHIFT) & IOC_TYPEMASK)\n #define IOC_NR(nr) (((nr) >> IOC_NRSHIFT) & IOC_NRMASK)\n+\n+#if defined(__sparc__)\n+// In sparc the 14 bits SIZE field overlaps with the\n+// least significant bit of DIR, so either IOC_READ or\n+// IOC_WRITE shall be 1 in order to get a non-zero SIZE.\n+# define IOC_SIZE(nr)                       \\\n+  ((((((nr) >> 29) & 0x7) & (4U|2U)) == 0)? \\\n+   0 : (((nr) >> 16) & 0x3fff))\n+#else\n #define IOC_SIZE(nr) (((nr) >> IOC_SIZESHIFT) & IOC_SIZEMASK)\n+#endif\n \n   extern unsigned struct_ifreq_sz;\n   extern unsigned struct_termios_sz;"}]}