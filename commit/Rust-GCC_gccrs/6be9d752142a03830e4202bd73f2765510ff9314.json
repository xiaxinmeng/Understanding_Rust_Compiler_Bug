{"sha": "6be9d752142a03830e4202bd73f2765510ff9314", "node_id": "C_kwDOANBUbNoAKDZiZTlkNzUyMTQyYTAzODMwZTQyMDJiZDczZjI3NjU1MTBmZjkzMTQ", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-04-05T23:04:09Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-04-05T23:09:34Z"}, "message": "libbacktrace: don't skip initial aligned byte in uncompressed block\n\nPatch from Rui Ueyama, who says:\n\nlibbacktrace occasionally fails to decompress compressed debug info\neven though the sections contain valid zlib streams. The cause of the\nissue is an off-by-one error.\n\nIf a zlib data block is a plain data (uncompressed data), the next two\nbytes contain the size of the block. These two bytes value is byte-\naligned, so if we read-ahead more than 8 bits, we need to unread it.\n\nSo, the correct condition to determine whether or not we need to\nunread a byte is bits >= 8 and not bits > 8. Due to this error,\nif the last read bits happened to end at a byte boundary, the next\nbyte would be skipped. That caused the decompression failure.\n\nThis bug was originally reported against the mold linker.\nrui314/mold#402\n\n\t* elf.c (elf_zlib_inflate): Don't skip initial aligned byte in\n\tuncompressed block.", "tree": {"sha": "f9a48612019f56acdfdc7bd8b6397e2b102fc746", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9a48612019f56acdfdc7bd8b6397e2b102fc746"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6be9d752142a03830e4202bd73f2765510ff9314", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be9d752142a03830e4202bd73f2765510ff9314", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be9d752142a03830e4202bd73f2765510ff9314", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be9d752142a03830e4202bd73f2765510ff9314/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b5723d74f3a731380f78dc1a02a2376951388cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5723d74f3a731380f78dc1a02a2376951388cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b5723d74f3a731380f78dc1a02a2376951388cf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8b82dd45875332b4e5dba124c53814a2e89becd8", "filename": "libbacktrace/elf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be9d752142a03830e4202bd73f2765510ff9314/libbacktrace%2Felf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be9d752142a03830e4202bd73f2765510ff9314/libbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Felf.c?ref=6be9d752142a03830e4202bd73f2765510ff9314", "patch": "@@ -1796,7 +1796,7 @@ elf_zlib_inflate (const unsigned char *pin, size_t sin, uint16_t *zdebug_table,\n \t      /* An uncompressed block.  */\n \n \t      /* If we've read ahead more than a byte, back up.  */\n-\t      while (bits > 8)\n+\t      while (bits >= 8)\n \t\t{\n \t\t  --pin;\n \t\t  bits -= 8;"}]}