{"sha": "bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQwMmYwMGZjZjg2YTI5Mjk1ZjMzNjljZmJjZDBiOWFlMTBhZTg2ZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-03-02T07:24:19Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-03-02T07:24:19Z"}, "message": "re PR c/67854 (Missing diagnostic for passing bool to va_arg)\n\n\tPR c/67854\n\t* gimplify.c (gimplify_va_arg_expr): Use expanded location for the\n\t\"is promoted to\" warning.\n\n\t* gcc.dg/pr67854.c: New test.\n\nFrom-SVN: r233891", "tree": {"sha": "dc025e1e4cea0463d2ff40c5300fd93c68650529", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc025e1e4cea0463d2ff40c5300fd93c68650529"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e840f39746e6b7bb8d62c7909921fe730730a66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e840f39746e6b7bb8d62c7909921fe730730a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e840f39746e6b7bb8d62c7909921fe730730a66"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "63a76742472db3d7e278b81770a5731a3ad2cf13", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d", "patch": "@@ -1,3 +1,9 @@\n+2016-03-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/67854\n+\t* gimplify.c (gimplify_va_arg_expr): Use expanded location for the\n+\t\"is promoted to\" warning.\n+\n 2016-03-01  DJ Delorie  <dj@redhat.com>\n \n \t* config.gcc: Deprecate mep-*."}, {"sha": "e7ea974496dd4db4994c1acee630de7ffb4fe6e3", "filename": "gcc/gimplify.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d", "patch": "@@ -11573,24 +11573,28 @@ gimplify_va_arg_expr (tree *expr_p, gimple_seq *pre_p,\n     {\n       static bool gave_help;\n       bool warned;\n+      /* Use the expansion point to handle cases such as passing bool (defined\n+\t in a system header) through `...'.  */\n+      source_location xloc\n+\t= expansion_point_location_if_in_system_header (loc);\n \n       /* Unfortunately, this is merely undefined, rather than a constraint\n \t violation, so we cannot make this an error.  If this call is never\n \t executed, the program is still strictly conforming.  */\n-      warned = warning_at (loc, 0,\n-\t  \t\t   \"%qT is promoted to %qT when passed through %<...%>\",\n+      warned = warning_at (xloc, 0,\n+\t\t\t   \"%qT is promoted to %qT when passed through %<...%>\",\n \t\t\t   type, promoted_type);\n       if (!gave_help && warned)\n \t{\n \t  gave_help = true;\n-\t  inform (loc, \"(so you should pass %qT not %qT to %<va_arg%>)\",\n+\t  inform (xloc, \"(so you should pass %qT not %qT to %<va_arg%>)\",\n \t\t  promoted_type, type);\n \t}\n \n       /* We can, however, treat \"undefined\" any way we please.\n \t Call abort to encourage the user to fix the program.  */\n       if (warned)\n-\tinform (loc, \"if this code is reached, the program will abort\");\n+\tinform (xloc, \"if this code is reached, the program will abort\");\n       /* Before the abort, allow the evaluation of the va_list\n \t expression to exit or longjmp.  */\n       gimplify_and_add (valist, pre_p);"}, {"sha": "90282805b0080718439c4f2f16c104ef863e29ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d", "patch": "@@ -1,3 +1,8 @@\n+2016-03-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/67854\n+\t* gcc.dg/pr67854.c: New test.\n+\n 2016-03-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/70025"}, {"sha": "af994c64582d9173be8030e464d74bbdf1e356a6", "filename": "gcc/testsuite/gcc.dg/pr67854.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67854.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67854.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67854.c?ref=bd02f00fcf86a29295f3369cfbcd0b9ae10ae86d", "patch": "@@ -0,0 +1,11 @@\n+/* PR c/67854 */\n+/* { dg-do compile } */\n+\n+#include <stdbool.h>\n+#include <stdarg.h>\n+\n+void\n+foo (va_list ap)\n+{\n+  va_arg (ap, bool); /* { dg-warning \"is promoted to .int. when passed through\" } */\n+}"}]}