{"sha": "826c452e571884fcabbc73863eef5120e683d034", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI2YzQ1MmU1NzE4ODRmY2FiYmM3Mzg2M2VlZjUxMjBlNjgzZDAzNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-07-13T09:17:39Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-07-13T09:17:39Z"}, "message": "vect: Pass reduc_info to get_initial_defs_for_reduction\n\nThis patch passes the reduc_info to get_initial_defs_for_reduction,\nso that the function can get general information from there rather\nthan from the first SLP statement.  This isn't a win on its own,\nbut it becomes important with later patches.\n\ngcc/\n\t* tree-vect-loop.c (get_initial_defs_for_reduction): Take the\n\treduc_info as an additional parameter.\n\t(vect_transform_cycle_phi): Update accordingly.", "tree": {"sha": "f2fd7ce0d772c743c49a603ac4b3cb7dde290f78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2fd7ce0d772c743c49a603ac4b3cb7dde290f78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/826c452e571884fcabbc73863eef5120e683d034", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/826c452e571884fcabbc73863eef5120e683d034", "html_url": "https://github.com/Rust-GCC/gccrs/commit/826c452e571884fcabbc73863eef5120e683d034", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/826c452e571884fcabbc73863eef5120e683d034/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d592920c89973acd8d9f5b1f6b0526036ce63ccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d592920c89973acd8d9f5b1f6b0526036ce63ccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d592920c89973acd8d9f5b1f6b0526036ce63ccb"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "565c285947787265495d6bcba2705ba8a951010b", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826c452e571884fcabbc73863eef5120e683d034/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826c452e571884fcabbc73863eef5120e683d034/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=826c452e571884fcabbc73863eef5120e683d034", "patch": "@@ -4764,32 +4764,28 @@ get_initial_def_for_reduction (loop_vec_info loop_vinfo,\n   return init_def;\n }\n \n-/* Get at the initial defs for the reduction PHIs in SLP_NODE.\n-   NUMBER_OF_VECTORS is the number of vector defs to create.\n-   If NEUTRAL_OP is nonnull, introducing extra elements of that\n-   value will not change the result.  */\n+/* Get at the initial defs for the reduction PHIs for REDUC_INFO, whose\n+   associated SLP node is SLP_NODE.  NUMBER_OF_VECTORS is the number of vector\n+   defs to create.  If NEUTRAL_OP is nonnull, introducing extra elements of\n+   that value will not change the result.  */\n \n static void\n get_initial_defs_for_reduction (vec_info *vinfo,\n+\t\t\t\tstmt_vec_info reduc_info,\n \t\t\t\tslp_tree slp_node,\n \t\t\t\tvec<tree> *vec_oprnds,\n \t\t\t\tunsigned int number_of_vectors,\n \t\t\t\tbool reduc_chain, tree neutral_op)\n {\n   vec<stmt_vec_info> stmts = SLP_TREE_SCALAR_STMTS (slp_node);\n-  stmt_vec_info stmt_vinfo = stmts[0];\n   unsigned HOST_WIDE_INT nunits;\n   unsigned j, number_of_places_left_in_vector;\n-  tree vector_type;\n+  tree vector_type = STMT_VINFO_VECTYPE (reduc_info);\n   unsigned int group_size = stmts.length ();\n   unsigned int i;\n   class loop *loop;\n \n-  vector_type = STMT_VINFO_VECTYPE (stmt_vinfo);\n-\n-  gcc_assert (STMT_VINFO_DEF_TYPE (stmt_vinfo) == vect_reduction_def);\n-\n-  loop = (gimple_bb (stmt_vinfo->stmt))->loop_father;\n+  loop = (gimple_bb (reduc_info->stmt))->loop_father;\n   gcc_assert (loop);\n   edge pe = loop_preheader_edge (loop);\n \n@@ -4823,7 +4819,7 @@ get_initial_defs_for_reduction (vec_info *vinfo,\n     {\n       tree op;\n       i = j % group_size;\n-      stmt_vinfo = stmts[i];\n+      stmt_vec_info stmt_vinfo = stmts[i];\n \n       /* Get the def before the loop.  In reduction chain we have only\n \t one initial value.  Else we have as many as PHIs in the group.  */\n@@ -7510,7 +7506,8 @@ vect_transform_cycle_phi (loop_vec_info loop_vinfo,\n \t      = neutral_op_for_slp_reduction (slp_node, vectype_out,\n \t\t\t\t\t      STMT_VINFO_REDUC_CODE (reduc_info),\n \t\t\t\t\t      first != NULL);\n-\t  get_initial_defs_for_reduction (loop_vinfo, slp_node_instance->reduc_phis,\n+\t  get_initial_defs_for_reduction (loop_vinfo, reduc_info,\n+\t\t\t\t\t  slp_node_instance->reduc_phis,\n \t\t\t\t\t  &vec_initial_defs, vec_num,\n \t\t\t\t\t  first != NULL, neutral_op);\n \t}"}]}