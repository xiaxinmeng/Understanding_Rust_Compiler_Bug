{"sha": "8fcfc44f611d494d2ec5fcc4a3e43f6aebce99f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZjZmM0NGY2MTFkNDk0ZDJlYzVmY2M0YTNlNDNmNmFlYmNlOTlmNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-11-30T23:19:58Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-30T23:19:58Z"}, "message": "ipa-inline.c (compute_max_insns): Return int64_t.\n\n\t* ipa-inline.c (compute_max_insns): Return int64_t.\n\t(inline_small_functions): Simplify.\n\nFrom-SVN: r278880", "tree": {"sha": "7313cd3cc8fa78927b182732a6a412048e46e678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7313cd3cc8fa78927b182732a6a412048e46e678"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fcfc44f611d494d2ec5fcc4a3e43f6aebce99f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fcfc44f611d494d2ec5fcc4a3e43f6aebce99f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fcfc44f611d494d2ec5fcc4a3e43f6aebce99f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fcfc44f611d494d2ec5fcc4a3e43f6aebce99f7/comments", "author": null, "committer": null, "parents": [{"sha": "a9a4edf0e71bbac9f1b5dcecdcf9250111d16889", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9a4edf0e71bbac9f1b5dcecdcf9250111d16889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9a4edf0e71bbac9f1b5dcecdcf9250111d16889"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "cc33a041090c5b1d64c5c7dbe8cf76048028ea06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fcfc44f611d494d2ec5fcc4a3e43f6aebce99f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fcfc44f611d494d2ec5fcc4a3e43f6aebce99f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fcfc44f611d494d2ec5fcc4a3e43f6aebce99f7", "patch": "@@ -1,3 +1,8 @@\n+2019-11-30  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-inline.c (compute_max_insns): Return int64_t.\n+\t(inline_small_functions): Simplify.\n+\n 2019-11-30  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-cfg.c (execute_fixup_cfg): Update also max_bb_count when"}, {"sha": "0f87c476dde1d2c910ac1e7801a0af3252a39eb7", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fcfc44f611d494d2ec5fcc4a3e43f6aebce99f7/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fcfc44f611d494d2ec5fcc4a3e43f6aebce99f7/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=8fcfc44f611d494d2ec5fcc4a3e43f6aebce99f7", "patch": "@@ -1722,7 +1722,7 @@ recursive_inlining (struct cgraph_edge *edge,\n /* Given whole compilation unit estimate of INSNS, compute how large we can\n    allow the unit to grow.  */\n \n-static int\n+static int64_t\n compute_max_insns (cgraph_node *node, int insns)\n {\n   int max_insns = insns;\n@@ -1977,9 +1977,8 @@ inline_small_functions (void)\n       if (dump_file)\n \tfprintf (dump_file, \"Enqueueing calls in %s.\\n\", node->dump_name ());\n \n-      for (edge = node->callees; edge; edge = next)\n+      for (edge = node->callees; edge; edge = edge->next_callee)\n \t{\n-\t  next = edge->next_callee;\n \t  if (edge->inline_failed\n \t      && !edge->aux\n \t      && can_inline_edge_p (edge, true)"}]}