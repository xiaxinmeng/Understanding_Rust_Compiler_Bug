{"sha": "ac45b2ba8c75573b9630656ccf3a20e6da333913", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM0NWIyYmE4Yzc1NTczYjk2MzA2NTZjY2YzYTIwZTZkYTMzMzkxMw==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2016-08-30T15:40:19Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2016-08-30T15:40:19Z"}, "message": "[PATCH][Aarch64][gcc] Fix vld2/3/4 on big endian systems\n\nOn behalf of Tamar Christina  <tamar.christina@arm.com>\n\ngcc/\n\n\t* gcc/config/aarch64/aarch64-simd.md\n\t(aarch64_ld2<mode>_dreg_le): New.\n\t(aarch64_ld2<mode>_dreg_be): New.\n\t(aarch64_ld2<mode>_dreg): Removed.\n\t(aarch64_ld3<mode>_dreg_le): New.\n\t(aarch64_ld3<mode>_dreg_be): New.\n\t(aarch64_ld3<mode>_dreg): Removed.\n\t(aarch64_ld4<mode>_dreg_le): New.\n\t(aarch64_ld4<mode>_dreg_be): New.\n\t(aarch64_ld4<mode>_dreg): Removed.\n\t(aarch64_ld<VSTRUCT:nregs><VDC:mode>): Wrapper around _le, _be.\n\nFrom-SVN: r239865", "tree": {"sha": "b4a682a6f6e7e6886e89c547df7c31d14cb4c3ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4a682a6f6e7e6886e89c547df7c31d14cb4c3ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac45b2ba8c75573b9630656ccf3a20e6da333913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac45b2ba8c75573b9630656ccf3a20e6da333913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac45b2ba8c75573b9630656ccf3a20e6da333913", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac45b2ba8c75573b9630656ccf3a20e6da333913/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40c84ee7fa229637949eb42438dc57d181882226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40c84ee7fa229637949eb42438dc57d181882226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40c84ee7fa229637949eb42438dc57d181882226"}], "stats": {"total": 189, "additions": 173, "deletions": 16}, "files": [{"sha": "c6bda6055fd394f5f83dce25f391339d68e8088a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac45b2ba8c75573b9630656ccf3a20e6da333913/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac45b2ba8c75573b9630656ccf3a20e6da333913/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac45b2ba8c75573b9630656ccf3a20e6da333913", "patch": "@@ -1,3 +1,17 @@\n+2016-08-30  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc/config/aarch64/aarch64-simd.md\n+\t(aarch64_ld2<mode>_dreg_le): New.\n+\t(aarch64_ld2<mode>_dreg_be): New.\n+\t(aarch64_ld2<mode>_dreg): Removed.\n+\t(aarch64_ld3<mode>_dreg_le): New.\n+\t(aarch64_ld3<mode>_dreg_be): New.\n+\t(aarch64_ld3<mode>_dreg): Removed.\n+\t(aarch64_ld4<mode>_dreg_le): New.\n+\t(aarch64_ld4<mode>_dreg_be): New.\n+\t(aarch64_ld4<mode>_dreg): Removed.\n+\t(aarch64_ld<VSTRUCT:nregs><VDC:mode>): Wrapper around _le, _be.\n+\n 2016-08-30  David Malcolm  <dmalcolm@redhat.com>\n \n \t* diagnostic-show-locus.c (test_one_liner_fixit_insert): Remove"}, {"sha": "f942a54a7abbe5dca30fb37f0e1360f7b623601c", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 159, "deletions": 16, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac45b2ba8c75573b9630656ccf3a20e6da333913/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac45b2ba8c75573b9630656ccf3a20e6da333913/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=ac45b2ba8c75573b9630656ccf3a20e6da333913", "patch": "@@ -4901,7 +4901,7 @@\n   DONE;\n })\n \n-(define_insn \"aarch64_ld2<mode>_dreg\"\n+(define_insn \"aarch64_ld2<mode>_dreg_le\"\n   [(set (match_operand:OI 0 \"register_operand\" \"=w\")\n \t(subreg:OI\n \t  (vec_concat:<VRL2>\n@@ -4914,12 +4914,30 @@\n \t     (unspec:VD [(match_dup 1)]\n \t\t\tUNSPEC_LD2)\n \t     (vec_duplicate:VD (const_int 0)))) 0))]\n-  \"TARGET_SIMD\"\n+  \"TARGET_SIMD && !BYTES_BIG_ENDIAN\"\n+  \"ld2\\\\t{%S0.<Vtype> - %T0.<Vtype>}, %1\"\n+  [(set_attr \"type\" \"neon_load2_2reg<q>\")]\n+)\n+\n+(define_insn \"aarch64_ld2<mode>_dreg_be\"\n+  [(set (match_operand:OI 0 \"register_operand\" \"=w\")\n+\t(subreg:OI\n+\t  (vec_concat:<VRL2>\n+\t    (vec_concat:<VDBL>\n+\t     (vec_duplicate:VD (const_int 0))\n+\t     (unspec:VD\n+\t\t[(match_operand:BLK 1 \"aarch64_simd_struct_operand\" \"Utv\")]\n+\t\tUNSPEC_LD2))\n+\t    (vec_concat:<VDBL>\n+\t     (vec_duplicate:VD (const_int 0))\n+\t     (unspec:VD [(match_dup 1)]\n+\t\t\tUNSPEC_LD2))) 0))]\n+  \"TARGET_SIMD && BYTES_BIG_ENDIAN\"\n   \"ld2\\\\t{%S0.<Vtype> - %T0.<Vtype>}, %1\"\n   [(set_attr \"type\" \"neon_load2_2reg<q>\")]\n )\n \n-(define_insn \"aarch64_ld2<mode>_dreg\"\n+(define_insn \"aarch64_ld2<mode>_dreg_le\"\n   [(set (match_operand:OI 0 \"register_operand\" \"=w\")\n \t(subreg:OI\n \t  (vec_concat:<VRL2>\n@@ -4932,12 +4950,30 @@\n \t     (unspec:DX [(match_dup 1)]\n \t\t\tUNSPEC_LD2)\n \t     (const_int 0))) 0))]\n-  \"TARGET_SIMD\"\n+  \"TARGET_SIMD && !BYTES_BIG_ENDIAN\"\n   \"ld1\\\\t{%S0.1d - %T0.1d}, %1\"\n   [(set_attr \"type\" \"neon_load1_2reg<q>\")]\n )\n \n-(define_insn \"aarch64_ld3<mode>_dreg\"\n+(define_insn \"aarch64_ld2<mode>_dreg_be\"\n+  [(set (match_operand:OI 0 \"register_operand\" \"=w\")\n+\t(subreg:OI\n+\t  (vec_concat:<VRL2>\n+\t    (vec_concat:<VDBL>\n+\t     (const_int 0)\n+\t     (unspec:DX\n+\t\t[(match_operand:BLK 1 \"aarch64_simd_struct_operand\" \"Utv\")]\n+\t\tUNSPEC_LD2))\n+\t    (vec_concat:<VDBL>\n+\t     (const_int 0)\n+\t     (unspec:DX [(match_dup 1)]\n+\t\t\tUNSPEC_LD2))) 0))]\n+  \"TARGET_SIMD && BYTES_BIG_ENDIAN\"\n+  \"ld1\\\\t{%S0.1d - %T0.1d}, %1\"\n+  [(set_attr \"type\" \"neon_load1_2reg<q>\")]\n+)\n+\n+(define_insn \"aarch64_ld3<mode>_dreg_le\"\n   [(set (match_operand:CI 0 \"register_operand\" \"=w\")\n \t(subreg:CI\n \t (vec_concat:<VRL3>\n@@ -4955,12 +4991,35 @@\n \t     (unspec:VD [(match_dup 1)]\n \t\t\tUNSPEC_LD3)\n \t     (vec_duplicate:VD (const_int 0)))) 0))]\n-  \"TARGET_SIMD\"\n+  \"TARGET_SIMD && !BYTES_BIG_ENDIAN\"\n   \"ld3\\\\t{%S0.<Vtype> - %U0.<Vtype>}, %1\"\n   [(set_attr \"type\" \"neon_load3_3reg<q>\")]\n )\n \n-(define_insn \"aarch64_ld3<mode>_dreg\"\n+(define_insn \"aarch64_ld3<mode>_dreg_be\"\n+  [(set (match_operand:CI 0 \"register_operand\" \"=w\")\n+\t(subreg:CI\n+\t (vec_concat:<VRL3>\n+\t  (vec_concat:<VRL2>\n+\t    (vec_concat:<VDBL>\n+\t     (vec_duplicate:VD (const_int 0))\n+\t     (unspec:VD\n+\t\t[(match_operand:BLK 1 \"aarch64_simd_struct_operand\" \"Utv\")]\n+\t\tUNSPEC_LD3))\n+\t    (vec_concat:<VDBL>\n+\t     (vec_duplicate:VD (const_int 0))\n+\t     (unspec:VD [(match_dup 1)]\n+\t\t\tUNSPEC_LD3)))\n+\t  (vec_concat:<VDBL>\n+\t     (vec_duplicate:VD (const_int 0))\n+\t     (unspec:VD [(match_dup 1)]\n+\t\t\tUNSPEC_LD3))) 0))]\n+  \"TARGET_SIMD && BYTES_BIG_ENDIAN\"\n+  \"ld3\\\\t{%S0.<Vtype> - %U0.<Vtype>}, %1\"\n+  [(set_attr \"type\" \"neon_load3_3reg<q>\")]\n+)\n+\n+(define_insn \"aarch64_ld3<mode>_dreg_le\"\n   [(set (match_operand:CI 0 \"register_operand\" \"=w\")\n \t(subreg:CI\n \t (vec_concat:<VRL3>\n@@ -4978,12 +5037,35 @@\n \t     (unspec:DX [(match_dup 1)]\n \t\t\tUNSPEC_LD3)\n \t     (const_int 0))) 0))]\n-  \"TARGET_SIMD\"\n+  \"TARGET_SIMD && !BYTES_BIG_ENDIAN\"\n+  \"ld1\\\\t{%S0.1d - %U0.1d}, %1\"\n+  [(set_attr \"type\" \"neon_load1_3reg<q>\")]\n+)\n+\n+(define_insn \"aarch64_ld3<mode>_dreg_be\"\n+  [(set (match_operand:CI 0 \"register_operand\" \"=w\")\n+\t(subreg:CI\n+\t (vec_concat:<VRL3>\n+\t  (vec_concat:<VRL2>\n+\t    (vec_concat:<VDBL>\n+\t     (const_int 0)\n+\t     (unspec:DX\n+\t\t[(match_operand:BLK 1 \"aarch64_simd_struct_operand\" \"Utv\")]\n+\t\tUNSPEC_LD3))\n+\t    (vec_concat:<VDBL>\n+\t     (const_int 0)\n+\t     (unspec:DX [(match_dup 1)]\n+\t\t\tUNSPEC_LD3)))\n+\t  (vec_concat:<VDBL>\n+\t     (const_int 0)\n+\t     (unspec:DX [(match_dup 1)]\n+\t\t\tUNSPEC_LD3))) 0))]\n+  \"TARGET_SIMD && BYTES_BIG_ENDIAN\"\n   \"ld1\\\\t{%S0.1d - %U0.1d}, %1\"\n   [(set_attr \"type\" \"neon_load1_3reg<q>\")]\n )\n \n-(define_insn \"aarch64_ld4<mode>_dreg\"\n+(define_insn \"aarch64_ld4<mode>_dreg_le\"\n   [(set (match_operand:XI 0 \"register_operand\" \"=w\")\n \t(subreg:XI\n \t (vec_concat:<VRL4>\n@@ -4994,9 +5076,9 @@\n \t\tUNSPEC_LD4)\n \t       (vec_duplicate:VD (const_int 0)))\n \t      (vec_concat:<VDBL>\n-\t        (unspec:VD [(match_dup 1)]\n+\t\t(unspec:VD [(match_dup 1)]\n \t\t\tUNSPEC_LD4)\n-\t        (vec_duplicate:VD (const_int 0))))\n+\t\t(vec_duplicate:VD (const_int 0))))\n \t   (vec_concat:<VRL2>\n \t     (vec_concat:<VDBL>\n \t       (unspec:VD [(match_dup 1)]\n@@ -5006,12 +5088,40 @@\n \t       (unspec:VD [(match_dup 1)]\n \t\t\tUNSPEC_LD4)\n \t       (vec_duplicate:VD (const_int 0))))) 0))]\n-  \"TARGET_SIMD\"\n+  \"TARGET_SIMD && !BYTES_BIG_ENDIAN\"\n   \"ld4\\\\t{%S0.<Vtype> - %V0.<Vtype>}, %1\"\n   [(set_attr \"type\" \"neon_load4_4reg<q>\")]\n )\n \n-(define_insn \"aarch64_ld4<mode>_dreg\"\n+(define_insn \"aarch64_ld4<mode>_dreg_be\"\n+  [(set (match_operand:XI 0 \"register_operand\" \"=w\")\n+\t(subreg:XI\n+\t (vec_concat:<VRL4>\n+\t   (vec_concat:<VRL2>\n+\t     (vec_concat:<VDBL>\n+\t       (vec_duplicate:VD (const_int 0))\n+\t       (unspec:VD\n+\t\t[(match_operand:BLK 1 \"aarch64_simd_struct_operand\" \"Utv\")]\n+\t\tUNSPEC_LD4))\n+\t      (vec_concat:<VDBL>\n+\t\t(vec_duplicate:VD (const_int 0))\n+\t\t(unspec:VD [(match_dup 1)]\n+\t\t\tUNSPEC_LD4)))\n+\t   (vec_concat:<VRL2>\n+\t     (vec_concat:<VDBL>\n+\t       (vec_duplicate:VD (const_int 0))\n+\t       (unspec:VD [(match_dup 1)]\n+\t\t\tUNSPEC_LD4))\n+\t     (vec_concat:<VDBL>\n+\t       (vec_duplicate:VD (const_int 0))\n+\t       (unspec:VD [(match_dup 1)]\n+\t\t\tUNSPEC_LD4)))) 0))]\n+  \"TARGET_SIMD && BYTES_BIG_ENDIAN\"\n+  \"ld4\\\\t{%S0.<Vtype> - %V0.<Vtype>}, %1\"\n+  [(set_attr \"type\" \"neon_load4_4reg<q>\")]\n+)\n+\n+(define_insn \"aarch64_ld4<mode>_dreg_le\"\n   [(set (match_operand:XI 0 \"register_operand\" \"=w\")\n \t(subreg:XI\n \t (vec_concat:<VRL4>\n@@ -5024,7 +5134,7 @@\n \t      (vec_concat:<VDBL>\n \t        (unspec:DX [(match_dup 1)]\n \t\t\tUNSPEC_LD4)\n-\t        (const_int 0)))\n+\t\t(const_int 0)))\n \t   (vec_concat:<VRL2>\n \t     (vec_concat:<VDBL>\n \t       (unspec:DX [(match_dup 1)]\n@@ -5034,7 +5144,35 @@\n \t       (unspec:DX [(match_dup 1)]\n \t\t\tUNSPEC_LD4)\n \t       (const_int 0)))) 0))]\n-  \"TARGET_SIMD\"\n+  \"TARGET_SIMD && !BYTES_BIG_ENDIAN\"\n+  \"ld1\\\\t{%S0.1d - %V0.1d}, %1\"\n+  [(set_attr \"type\" \"neon_load1_4reg<q>\")]\n+)\n+\n+(define_insn \"aarch64_ld4<mode>_dreg_be\"\n+  [(set (match_operand:XI 0 \"register_operand\" \"=w\")\n+\t(subreg:XI\n+\t (vec_concat:<VRL4>\n+\t   (vec_concat:<VRL2>\n+\t     (vec_concat:<VDBL>\n+\t       (const_int 0)\n+\t       (unspec:DX\n+\t\t[(match_operand:BLK 1 \"aarch64_simd_struct_operand\" \"Utv\")]\n+\t\tUNSPEC_LD4))\n+\t      (vec_concat:<VDBL>\n+\t\t(const_int 0)\n+\t\t(unspec:DX [(match_dup 1)]\n+\t\t\tUNSPEC_LD4)))\n+\t   (vec_concat:<VRL2>\n+\t     (vec_concat:<VDBL>\n+\t       (const_int 0)\n+\t       (unspec:DX [(match_dup 1)]\n+\t\t\tUNSPEC_LD4))\n+\t     (vec_concat:<VDBL>\n+\t       (const_int 0)\n+\t       (unspec:DX [(match_dup 1)]\n+\t\t\tUNSPEC_LD4)))) 0))]\n+  \"TARGET_SIMD && BYTES_BIG_ENDIAN\"\n   \"ld1\\\\t{%S0.1d - %V0.1d}, %1\"\n   [(set_attr \"type\" \"neon_load1_4reg<q>\")]\n )\n@@ -5048,7 +5186,12 @@\n   rtx mem = gen_rtx_MEM (BLKmode, operands[1]);\n   set_mem_size (mem, <VSTRUCT:nregs> * 8);\n \n-  emit_insn (gen_aarch64_ld<VSTRUCT:nregs><VDC:mode>_dreg (operands[0], mem));\n+  if (BYTES_BIG_ENDIAN)\n+    emit_insn (gen_aarch64_ld<VSTRUCT:nregs><VDC:mode>_dreg_be (operands[0],\n+\t\t\t\t\t\t\t\tmem));\n+  else\n+    emit_insn (gen_aarch64_ld<VSTRUCT:nregs><VDC:mode>_dreg_le (operands[0],\n+\t\t\t\t\t\t\t\tmem));\n   DONE;\n })\n "}]}