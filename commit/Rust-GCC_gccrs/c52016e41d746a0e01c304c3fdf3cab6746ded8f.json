{"sha": "c52016e41d746a0e01c304c3fdf3cab6746ded8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUyMDE2ZTQxZDc0NmEwZTAxYzMwNGMzZmRmM2NhYjY3NDZkZWQ4Zg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-03-15T13:09:47Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-03-15T13:09:47Z"}, "message": "class.c (make_class): Don't set CLASS_P here (because this function is also called by...\n\n\t\n\t* class.c (make_class):  Don't set CLASS_P here (because\n\tthis function is also called by build_java_array_type).\n\t(push_class):  Set CLASS_P here instead.\n\t* parse.h (TYPE_CLASS_P):  Check for TYPE_ARRAY_P is redundant.\n\t* jcf-dump.c (print_access_flags):  Take extra parameter to indicate\n\tcontext.  If the context is class, perfer \"super\" over \"synchronized\".\n\t* jcf-write.c (generate_classfile):  Don't add ACC_SUPER if interface.\n\t* parse.y (create_class):  Don't call parser_check_super here;\n\tit is not robust.  Always wait until later.\n\t* parse.y (method_header):  For interfaces, set ACC_ABSTRACT (to\n\tmatch what JDK 1.2 does), but don't set ACC_PUBLIC.\n\nFrom-SVN: r25785", "tree": {"sha": "784a3702d08ff44e6ebd1b880a4d68934fb90fbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/784a3702d08ff44e6ebd1b880a4d68934fb90fbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c52016e41d746a0e01c304c3fdf3cab6746ded8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c52016e41d746a0e01c304c3fdf3cab6746ded8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c52016e41d746a0e01c304c3fdf3cab6746ded8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c52016e41d746a0e01c304c3fdf3cab6746ded8f/comments", "author": null, "committer": null, "parents": [{"sha": "2c3199bc4a271157f3cdfb71b3de714004c21ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c3199bc4a271157f3cdfb71b3de714004c21ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c3199bc4a271157f3cdfb71b3de714004c21ee1"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "7c00271f021dfbd795b9381e655792158b1ca078", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52016e41d746a0e01c304c3fdf3cab6746ded8f/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52016e41d746a0e01c304c3fdf3cab6746ded8f/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=c52016e41d746a0e01c304c3fdf3cab6746ded8f", "patch": "@@ -1,3 +1,20 @@\n+Mon Mar 15 12:18:29 1999  Per Bothner  <bothner@cygnus.com>\n+\n+\t* class.c (make_class):  Don't set CLASS_P here (because\n+\tthis function is also called by build_java_array_type).\n+\t(push_class):  Set CLASS_P here instead.\n+\t* parse.h (TYPE_CLASS_P):  Check for TYPE_ARRAY_P is redundant.\n+\n+\t* jcf-dump.c (print_access_flags):  Take extra parameter to indicate\n+\tcontext.  If the context is class, perfer \"super\" over \"synchronized\".\n+\t* jcf-write.c (generate_classfile):  Don't add ACC_SUPER if interface.\n+\n+\t* parse.y (create_class):  Don't call parser_check_super here;\n+\tit is not robust.  Always wait until later.\n+\n+\t* parse.y (method_header):  For interfaces, set ACC_ABSTRACT (to\n+\tmatch what JDK 1.2 does), but don't set ACC_PUBLIC.\n+\n Sat Mar 13 18:16:34 1999  Per Bothner  <bothner@cygnus.com>\n \n \t* lex.c (java_read_char):  UNGET invalid non-initial utf8 character."}]}