{"sha": "ab177ad53847e22cc5aaf10ffc319060c633cc4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIxNzdhZDUzODQ3ZTIyY2M1YWFmMTBmZmMzMTkwNjBjNjMzY2M0Zg==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2010-10-20T19:56:58Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2010-10-20T19:56:58Z"}, "message": "ia64.h (PREFERRED_RELOAD_CLASS): Remove macros.\n\n\t* config/ia64/ia64.h (PREFERRED_RELOAD_CLASS): Remove macros.\n\t* config/ia64/ia64-protos.h (ia64_preferred_reload_class): Remove.\n\t* config/ia64/ia64.c (TARGET_PREFERRED_RELOAD_CLASS): Define.\n\t(ia64_preferred_reload_class): Make static.  Change rclass argument\n\tand result types from enum reg_class to reg_class_t.\n\nFrom-SVN: r165734", "tree": {"sha": "0e9d4753f3b294a93db44e4981929dd97e700b80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e9d4753f3b294a93db44e4981929dd97e700b80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab177ad53847e22cc5aaf10ffc319060c633cc4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab177ad53847e22cc5aaf10ffc319060c633cc4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab177ad53847e22cc5aaf10ffc319060c633cc4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab177ad53847e22cc5aaf10ffc319060c633cc4f/comments", "author": null, "committer": null, "parents": [{"sha": "604f9a900c90b21ad33328e6a0b2fc1ba84dabd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/604f9a900c90b21ad33328e6a0b2fc1ba84dabd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/604f9a900c90b21ad33328e6a0b2fc1ba84dabd2"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "3ec41124ae8a4b9d5dbadadded9c8660d9522899", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab177ad53847e22cc5aaf10ffc319060c633cc4f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab177ad53847e22cc5aaf10ffc319060c633cc4f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab177ad53847e22cc5aaf10ffc319060c633cc4f", "patch": "@@ -1,3 +1,11 @@\n+2010-10-20  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/ia64/ia64.h (PREFERRED_RELOAD_CLASS): Remove macros.\n+\t* config/ia64/ia64-protos.h (ia64_preferred_reload_class): Remove.\n+\t* config/ia64/ia64.c (TARGET_PREFERRED_RELOAD_CLASS): Define.\n+\t(ia64_preferred_reload_class): Make static.  Change rclass argument\n+\tand result types from enum reg_class to reg_class_t.\n+\n 2010-10-20  Pat Haugen  <pthaugen@us.ibm.com>\n \n \t* tree-ssa-ter.c (find_replaceable_in_bb): Allow replacement over"}, {"sha": "1a9bd87f724a20c58456f81390862dbc47f74085", "filename": "gcc/config/ia64/ia64-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab177ad53847e22cc5aaf10ffc319060c633cc4f/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab177ad53847e22cc5aaf10ffc319060c633cc4f/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-protos.h?ref=ab177ad53847e22cc5aaf10ffc319060c633cc4f", "patch": "@@ -56,7 +56,6 @@ extern int ia64_hard_regno_rename_ok (int, int);\n \n extern void ia64_print_operand_address (FILE *, rtx);\n extern void ia64_print_operand (FILE *, rtx, int);\n-extern enum reg_class ia64_preferred_reload_class (rtx, enum reg_class);\n extern enum reg_class ia64_secondary_reload_class (enum reg_class,\n \t\t\t\t\t\t   enum machine_mode, rtx);\n extern const char *get_bundle_name (int);"}, {"sha": "801afa99e07ab3e093205c7a2753a158b6b68fae", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab177ad53847e22cc5aaf10ffc319060c633cc4f/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab177ad53847e22cc5aaf10ffc319060c633cc4f/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=ab177ad53847e22cc5aaf10ffc319060c633cc4f", "patch": "@@ -324,6 +324,8 @@ static void ia64_override_options_after_change (void);\n \n static void ia64_dwarf_handle_frame_unspec (const char *, rtx, int);\n static tree ia64_builtin_decl (unsigned, bool);\n+\n+static reg_class_t ia64_preferred_reload_class (rtx, reg_class_t);\n \f\n /* Table of valid machine attributes.  */\n static const struct attribute_spec ia64_attribute_table[] =\n@@ -595,6 +597,9 @@ static const struct attribute_spec ia64_attribute_table[] =\n #undef TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE\n #define TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE ia64_override_options_after_change\n \n+#undef TARGET_PREFERRED_RELOAD_CLASS\n+#define TARGET_PREFERRED_RELOAD_CLASS ia64_preferred_reload_class\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n typedef enum\n@@ -5346,11 +5351,11 @@ ia64_memory_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n     return 10;\n }\n \n-/* Implement PREFERRED_RELOAD_CLASS.  Place additional restrictions on RCLASS\n-   to use when copying X into that class.  */\n+/* Implement TARGET_PREFERRED_RELOAD_CLASS.  Place additional restrictions\n+   on RCLASS to use when copying X into that class.  */\n \n-enum reg_class\n-ia64_preferred_reload_class (rtx x, enum reg_class rclass)\n+static reg_class_t\n+ia64_preferred_reload_class (rtx x, reg_class_t rclass)\n {\n   switch (rclass)\n     {"}, {"sha": "5ff206dc9b4a27d5f18bda4ddebb1db81d3f45d9", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab177ad53847e22cc5aaf10ffc319060c633cc4f/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab177ad53847e22cc5aaf10ffc319060c633cc4f/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=ab177ad53847e22cc5aaf10ffc319060c633cc4f", "patch": "@@ -849,14 +849,6 @@ enum reg_class\n    This is needed for POST_MODIFY.  */\n #define REGNO_OK_FOR_INDEX_P(NUM) REGNO_OK_FOR_BASE_P (NUM)\n \n-/* A C expression that places additional restrictions on the register class to\n-   use when it is necessary to copy value X into a register in class CLASS.\n-   The value is a register class; perhaps CLASS, or perhaps another, smaller\n-   class.  */\n-\n-#define PREFERRED_RELOAD_CLASS(X, CLASS) \\\n-  ia64_preferred_reload_class (X, CLASS)\n-\n /* You should define this macro to indicate to the reload phase that it may\n    need to allocate at least one register for a reload in addition to the\n    register to contain the data.  Specifically, if copying X to a register"}]}