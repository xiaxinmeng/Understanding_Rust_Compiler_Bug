{"sha": "42132674e5c9e7978a7d7d9283682f89639e236e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIxMzI2NzRlNWM5ZTc5NzhhN2Q3ZDkyODM2ODJmODk2MzllMjM2ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-03-01T09:02:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-03-01T09:02:12Z"}, "message": "re PR c++/79681 (ICE with constexpr and bitfield)\n\n\tPR c++/79681\n\t* fold-const.c (make_bit_field_ref): If orig_inner is COMPONENT_REF,\n\tattempt to use its first operand as BIT_FIELD_REF base.\n\n\t* g++.dg/cpp1y/constexpr-79681-1.C: New test.\n\t* g++.dg/cpp1y/constexpr-79681-2.C: New test.\n\nFrom-SVN: r245804", "tree": {"sha": "90bace33bc8bb839de2a9bf73929c8d73b391cde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90bace33bc8bb839de2a9bf73929c8d73b391cde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42132674e5c9e7978a7d7d9283682f89639e236e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42132674e5c9e7978a7d7d9283682f89639e236e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42132674e5c9e7978a7d7d9283682f89639e236e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42132674e5c9e7978a7d7d9283682f89639e236e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0100ae430272feaa208b02c32e52d530cd9c8644", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0100ae430272feaa208b02c32e52d530cd9c8644", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0100ae430272feaa208b02c32e52d530cd9c8644"}], "stats": {"total": 91, "additions": 91, "deletions": 0}, "files": [{"sha": "4873ae8eb9d6b982cd8d5c0bb52f78b300f2f333", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42132674e5c9e7978a7d7d9283682f89639e236e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42132674e5c9e7978a7d7d9283682f89639e236e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42132674e5c9e7978a7d7d9283682f89639e236e", "patch": "@@ -1,3 +1,9 @@\n+2017-03-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/79681\n+\t* fold-const.c (make_bit_field_ref): If orig_inner is COMPONENT_REF,\n+\tattempt to use its first operand as BIT_FIELD_REF base.\n+\n 2017-03-01  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/79721"}, {"sha": "e64fa64232eb644f512dbcb698b1e6bd6ab17861", "filename": "gcc/fold-const.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42132674e5c9e7978a7d7d9283682f89639e236e/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42132674e5c9e7978a7d7d9283682f89639e236e/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=42132674e5c9e7978a7d7d9283682f89639e236e", "patch": "@@ -3862,6 +3862,31 @@ make_bit_field_ref (location_t loc, tree inner, tree orig_inner, tree type,\n {\n   tree result, bftype;\n \n+  /* Attempt not to lose the access path if possible.  */\n+  if (TREE_CODE (orig_inner) == COMPONENT_REF)\n+    {\n+      tree ninner = TREE_OPERAND (orig_inner, 0);\n+      machine_mode nmode;\n+      HOST_WIDE_INT nbitsize, nbitpos;\n+      tree noffset;\n+      int nunsignedp, nreversep, nvolatilep = 0;\n+      tree base = get_inner_reference (ninner, &nbitsize, &nbitpos,\n+\t\t\t\t       &noffset, &nmode, &nunsignedp,\n+\t\t\t\t       &nreversep, &nvolatilep);\n+      if (base == inner\n+\t  && noffset == NULL_TREE\n+\t  && nbitsize >= bitsize\n+\t  && nbitpos <= bitpos\n+\t  && bitpos + bitsize <= nbitpos + nbitsize\n+\t  && !reversep\n+\t  && !nreversep\n+\t  && !nvolatilep)\n+\t{\n+\t  inner = ninner;\n+\t  bitpos -= nbitpos;\n+\t}\n+    }\n+\n   alias_set_type iset = get_alias_set (orig_inner);\n   if (iset == 0 && get_alias_set (inner) != iset)\n     inner = fold_build2 (MEM_REF, TREE_TYPE (inner),"}, {"sha": "5d7e177f2718c2425e8bfcaca00cab84d8b7009e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42132674e5c9e7978a7d7d9283682f89639e236e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42132674e5c9e7978a7d7d9283682f89639e236e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42132674e5c9e7978a7d7d9283682f89639e236e", "patch": "@@ -5,6 +5,10 @@\n \n 2017-03-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/79681\n+\t* g++.dg/cpp1y/constexpr-79681-1.C: New test.\n+\t* g++.dg/cpp1y/constexpr-79681-2.C: New test.\n+\n \tPR c++/79746\n \t* g++.dg/warn/Wunused-parm-9.C: New test.\n "}, {"sha": "000afd80e04e7cc7d49166d1eb1b3b515f55608b", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-79681-1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42132674e5c9e7978a7d7d9283682f89639e236e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-79681-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42132674e5c9e7978a7d7d9283682f89639e236e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-79681-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-79681-1.C?ref=42132674e5c9e7978a7d7d9283682f89639e236e", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/79681\n+// { dg-do compile { target c++14 } }\n+// { dg-options \"-O2\" }\n+\n+struct A\n+{\n+  int i : 4;\n+};\n+\n+constexpr bool\n+foo ()\n+{\n+  A x[] = { 1 };\n+  return x[0].i;\n+}\n+\n+static_assert (foo(), \"\");"}, {"sha": "edca161f8d58925e821a4d99a01aaf8b52d4abab", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-79681-2.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42132674e5c9e7978a7d7d9283682f89639e236e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-79681-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42132674e5c9e7978a7d7d9283682f89639e236e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-79681-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-79681-2.C?ref=42132674e5c9e7978a7d7d9283682f89639e236e", "patch": "@@ -0,0 +1,39 @@\n+// PR c++/79681\n+// { dg-do compile { target c++14 } }\n+// { dg-options \"-O2\" }\n+\n+struct A\n+{\n+  char i : 4;\n+  char k : 1;\n+  char l : 3;\n+};\n+struct B\n+{\n+  char j : 4;\n+};\n+struct C\n+{\n+  long long u;\n+  A a[1];\n+  B b[1];\n+};\n+\n+constexpr bool\n+foo ()\n+{\n+  C c = { 0, { { 5, 0, 2 } }, { { 6 } } };\n+  C d = { 0, { { 6, 0, 1 } }, { { 5 } } };\n+  return c.a[0].i == d.a[0].i && c.b[0].j == d.b[0].j;\n+}\n+\n+constexpr bool\n+bar ()\n+{\n+  C c = { 0, { { 5, 0, 2 } }, { { 6 } } };\n+  C d = { 0, { { 6, 0, 1 } }, { { 5 } } };\n+  return c.a[0].i == d.a[0].i && c.a[0].l == d.a[0].l;\n+}\n+\n+static_assert (foo () == false, \"\");\n+static_assert (bar () == false, \"\");"}]}