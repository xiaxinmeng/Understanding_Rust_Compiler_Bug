{"sha": "4911814e8ea36c1e9732ed59a21ea297ca144d53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkxMTgxNGU4ZWEzNmMxZTk3MzJlZDU5YTIxZWEyOTdjYTE0NGQ1Mw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1997-11-05T01:49:52Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-11-05T01:49:52Z"}, "message": "Fix bitfield insert/extract aliasing problem found by GNAT.\n\n\t* mips.md (insv, extzv, extv): Add change_address call.\n\t(movsi_ulw, movsi_usw): Change QImode to BLKmode in pattern.\n\nFrom-SVN: r16331", "tree": {"sha": "fecdf61648e68171f6b02195f5065bda05670fd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fecdf61648e68171f6b02195f5065bda05670fd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4911814e8ea36c1e9732ed59a21ea297ca144d53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4911814e8ea36c1e9732ed59a21ea297ca144d53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4911814e8ea36c1e9732ed59a21ea297ca144d53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4911814e8ea36c1e9732ed59a21ea297ca144d53/comments", "author": null, "committer": null, "parents": [{"sha": "474eff885594b2e22a52fc103ef020d1c929df1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/474eff885594b2e22a52fc103ef020d1c929df1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/474eff885594b2e22a52fc103ef020d1c929df1f"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "a24d9fea077f80048a7ec0c506e10e741426a035", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4911814e8ea36c1e9732ed59a21ea297ca144d53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4911814e8ea36c1e9732ed59a21ea297ca144d53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4911814e8ea36c1e9732ed59a21ea297ca144d53", "patch": "@@ -1,5 +1,8 @@\n Tue Nov  4 16:55:11 1997  Jim Wilson  <wilson@cygnus.com>\n \n+\t* mips.md (insv, extzv, extv): Add change_address call.\n+\t(movsi_ulw, movsi_usw): Change QImode to BLKmode in pattern.\n+\n \t* integrate.c (save_for_inline_copying): Copy parm_reg_stack_loc.\n \n \t* reload.c (find_reloads, case 'm' and 'o'): Reject HIGH constants."}, {"sha": "9c6852fc007f85aebb3982992449fa094346c1e8", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4911814e8ea36c1e9732ed59a21ea297ca144d53/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4911814e8ea36c1e9732ed59a21ea297ca144d53/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=4911814e8ea36c1e9732ed59a21ea297ca144d53", "patch": "@@ -3152,6 +3152,9 @@ move\\\\t%0,%z4\\\\n\\\\\n   if (GET_CODE (operands[1]) != MEM)\n     FAIL;\n \n+  /* Change the mode to BLKmode for aliasing purposes.  */\n+  operands[1] = change_address (operands[1], BLKmode, XEXP (operands[1], 0));\n+\n   /* Otherwise, emit a lwl/lwr pair to load the value.  */\n   emit_insn (gen_movsi_ulw (operands[0], operands[1]));\n   DONE;\n@@ -3176,6 +3179,9 @@ move\\\\t%0,%z4\\\\n\\\\\n   if (GET_CODE (operands[1]) != MEM)\n     FAIL;\n \n+  /* Change the mode to BLKmode for aliasing purposes.  */\n+  operands[1] = change_address (operands[1], BLKmode, XEXP (operands[1], 0));\n+\n   /* Otherwise, emit a lwl/lwr pair to load the value.  */\n   emit_insn (gen_movsi_ulw (operands[0], operands[1]));\n   DONE;\n@@ -3200,6 +3206,9 @@ move\\\\t%0,%z4\\\\n\\\\\n   if (GET_CODE (operands[0]) != MEM)\n     FAIL;\n \n+  /* Change the mode to BLKmode for aliasing purposes.  */\n+  operands[0] = change_address (operands[0], BLKmode, XEXP (operands[0], 0));\n+\n   /* Otherwise, emit a swl/swr pair to load the value.  */\n   emit_insn (gen_movsi_usw (operands[0], operands[3]));\n   DONE;\n@@ -3209,7 +3218,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"movsi_ulw\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&d,&d\")\n-\t(unspec:SI [(match_operand:QI 1 \"general_operand\" \"R,o\")] 0))]\n+\t(unspec:SI [(match_operand:BLK 1 \"general_operand\" \"R,o\")] 0))]\n   \"\"\n   \"*\n {\n@@ -3237,8 +3246,8 @@ move\\\\t%0,%z4\\\\n\\\\\n    (set_attr \"length\"\t\"2,4\")])\n \n (define_insn \"movsi_usw\"\n-  [(set (match_operand:QI 0 \"memory_operand\" \"=R,o\")\n-\t(unspec:QI [(match_operand:SI 1 \"reg_or_0_operand\" \"dJ,dJ\")] 1))]\n+  [(set (match_operand:BLK 0 \"memory_operand\" \"=R,o\")\n+\t(unspec:BLK [(match_operand:SI 1 \"reg_or_0_operand\" \"dJ,dJ\")] 1))]\n   \"\"\n   \"*\n {"}]}