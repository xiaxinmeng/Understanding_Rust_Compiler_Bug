{"sha": "2e45247314936f2a662a4f5ed34799942277f911", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU0NTI0NzMxNDkzNmYyYTY2MmE0ZjVlZDM0Nzk5OTQyMjc3ZjkxMQ==", "commit": {"author": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2021-08-03T14:22:46Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2021-08-03T15:55:22Z"}, "message": "module: Merge both as_string() implementations", "tree": {"sha": "13f1907b98c342c1f95ef9c5a39a76489bd037be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13f1907b98c342c1f95ef9c5a39a76489bd037be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e45247314936f2a662a4f5ed34799942277f911", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e45247314936f2a662a4f5ed34799942277f911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e45247314936f2a662a4f5ed34799942277f911", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e45247314936f2a662a4f5ed34799942277f911/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76d9871594d5eac8a78a3434f6ab9761da339cd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76d9871594d5eac8a78a3434f6ab9761da339cd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76d9871594d5eac8a78a3434f6ab9761da339cd0"}], "stats": {"total": 36, "additions": 9, "deletions": 27}, "files": [{"sha": "dfd9cdbbd832753a49ae2b4d19b4915c558137a1", "filename": "gcc/rust/ast/rust-ast-full-test.cc", "status": "modified", "additions": 9, "deletions": 27, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e45247314936f2a662a4f5ed34799942277f911/gcc%2Frust%2Fast%2Frust-ast-full-test.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e45247314936f2a662a4f5ed34799942277f911/gcc%2Frust%2Fast%2Frust-ast-full-test.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-full-test.cc?ref=2e45247314936f2a662a4f5ed34799942277f911", "patch": "@@ -379,22 +379,20 @@ VisItem::as_string () const\n std::string\n Module::as_string () const\n {\n-  std::string vis_item = VisItem::as_string ();\n+  std::string str = VisItem::as_string () + \"mod \" + module_name;\n \n-  return vis_item + \"mod \" + module_name;\n-}\n-\n-std::string\n-ModuleBodied::as_string () const\n-{\n-  // get module string for \"[vis] mod [name]\"\n-  std::string str = Module::as_string ();\n+  // Return early if we're dealing with an unloaded module as their body resides\n+  // in a different file\n+  if (kind == ModuleKind::UNLOADED)\n+    return str + \"\\n no body (reference to external file)\\n\";\n \n   // inner attributes\n   str += append_attributes (inner_attrs, INNER);\n \n   // items\n   str += \"\\n items: \";\n+\n+  // This can still happen if the module is loaded but empty, i.e. `mod foo {}`\n   if (items.empty ())\n     {\n       str += \"none\";\n@@ -418,16 +416,6 @@ ModuleBodied::as_string () const\n   return str + \"\\n\";\n }\n \n-std::string\n-ModuleNoBody::as_string () const\n-{\n-  std::string str = Module::as_string ();\n-\n-  str += \"\\n no body (reference to external file)\";\n-\n-  return str + \"\\n\";\n-}\n-\n std::string\n StaticItem::as_string () const\n {\n@@ -4053,7 +4041,7 @@ AttrInputMetaItemContainer::as_string () const\n /* Override that calls the function recursively on all items contained within\n  * the module. */\n void\n-ModuleBodied::add_crate_name (std::vector<std::string> &names) const\n+Module::add_crate_name (std::vector<std::string> &names) const\n {\n   /* TODO: test whether module has been 'cfg'-ed out to determine whether to\n    * exclude it from search */\n@@ -5381,13 +5369,7 @@ Method::accept_vis (ASTVisitor &vis)\n }\n \n void\n-ModuleBodied::accept_vis (ASTVisitor &vis)\n-{\n-  vis.visit (*this);\n-}\n-\n-void\n-ModuleNoBody::accept_vis (ASTVisitor &vis)\n+Module::accept_vis (ASTVisitor &vis)\n {\n   vis.visit (*this);\n }"}]}