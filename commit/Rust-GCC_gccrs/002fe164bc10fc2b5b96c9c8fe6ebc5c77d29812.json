{"sha": "002fe164bc10fc2b5b96c9c8fe6ebc5c77d29812", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAyZmUxNjRiYzEwZmMyYjViOTZjOWM4ZmU2ZWJjNWM3N2QyOTgxMg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-04-12T16:13:43Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-04-12T16:13:43Z"}, "message": "Fix typo\n\nFrom-SVN: r33114", "tree": {"sha": "7d64a66e50921d26f0df70842c002ca69aeda4b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d64a66e50921d26f0df70842c002ca69aeda4b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/002fe164bc10fc2b5b96c9c8fe6ebc5c77d29812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002fe164bc10fc2b5b96c9c8fe6ebc5c77d29812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/002fe164bc10fc2b5b96c9c8fe6ebc5c77d29812", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002fe164bc10fc2b5b96c9c8fe6ebc5c77d29812/comments", "author": null, "committer": null, "parents": [{"sha": "dbd9f7c93235d87f9e10993eca014ca450b81852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd9f7c93235d87f9e10993eca014ca450b81852", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbd9f7c93235d87f9e10993eca014ca450b81852"}], "stats": {"total": 31, "additions": 7, "deletions": 24}, "files": [{"sha": "fc2bcfbecc6c6618209c4489f6e62e53714f7447", "filename": "gcc/cp/init.c", "status": "modified", "additions": 7, "deletions": 24, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002fe164bc10fc2b5b96c9c8fe6ebc5c77d29812/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002fe164bc10fc2b5b96c9c8fe6ebc5c77d29812/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=002fe164bc10fc2b5b96c9c8fe6ebc5c77d29812", "patch": "@@ -2987,32 +2987,15 @@ build_dtor_call (exp, in_charge, flags)\n   else if (tree_int_cst_equal (in_charge, integer_two_node))\n     name = complete_dtor_identifier;\n   if (name)\n-    {\n-      if (!binfo)\n-\treturn build_method_call (exp, name, NULL_TREE, NULL_TREE, flags);\n-      else\n-\treturn build_scoped_method_call (exp, binfo, name, NULL_TREE);\n-    }\n+    return build_method_call (exp, name, NULL_TREE, NULL_TREE, flags);\n \n   /* If that didn't work, build the various alternatives.  */\n-  if (!binfo)\n-    {\n-      call1 = build_method_call (exp, complete_dtor_identifier,\n-\t\t\t\t NULL_TREE, NULL_TREE, flags);\n-      call2 = build_method_call (exp, deleting_dtor_identifier,\n-\t\t\t\t NULL_TREE, NULL_TREE, flags);\n-      call3 = build_method_call (exp, base_dtor_identifier,\n-\t\t\t\t NULL_TREE, NULL_TREE, flags);\n-    }\n-  else\n-    {\n-      call1 = build_scoped_method_call (exp, binfo, \n-\t\t\t\t\tcomplete_dtor_identifier, NULL_TREE);\n-      call2 = build_scoped_method_call (exp, binfo, \n-\t\t\t\t\tdeleting_dtor_identifier, NULL_TREE);\n-      call3 = build_scoped_method_call (exp, binfo, \n-\t\t\t\t\tbase_dtor_identifier, NULL_TREE);\n-    }\n+  call1 = build_method_call (exp, complete_dtor_identifier,\n+\t\t\t     NULL_TREE, NULL_TREE, flags);\n+  call2 = build_method_call (exp, deleting_dtor_identifier,\n+\t\t\t     NULL_TREE, NULL_TREE, flags);\n+  call3 = build_method_call (exp, base_dtor_identifier,\n+\t\t\t     NULL_TREE, NULL_TREE, flags);\n \n   /* Build the conditionals.  */\n   result = build (COND_EXPR, void_type_node,"}]}