{"sha": "8b4f9969f1d80d723e05ba143823435024c12949", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI0Zjk5NjlmMWQ4MGQ3MjNlMDViYTE0MzgyMzQzNTAyNGMxMjk0OQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-01-24T20:11:09Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-01-24T20:11:09Z"}, "message": "(used_spill_regs): New variable.\n\n(reload): Set it.\n\nFrom-SVN: r11092", "tree": {"sha": "f9c42f2295c1710f47066b3f327fcc7df6905e79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9c42f2295c1710f47066b3f327fcc7df6905e79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b4f9969f1d80d723e05ba143823435024c12949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b4f9969f1d80d723e05ba143823435024c12949", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b4f9969f1d80d723e05ba143823435024c12949", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b4f9969f1d80d723e05ba143823435024c12949/comments", "author": null, "committer": null, "parents": [{"sha": "c170c8c2082ab34698e648b534c585e7eabcd3bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c170c8c2082ab34698e648b534c585e7eabcd3bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c170c8c2082ab34698e648b534c585e7eabcd3bc"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "205810364c5952384d0e77fccf9205da7c729bfd", "filename": "gcc/reload1.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b4f9969f1d80d723e05ba143823435024c12949/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b4f9969f1d80d723e05ba143823435024c12949/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=8b4f9969f1d80d723e05ba143823435024c12949", "patch": "@@ -170,6 +170,13 @@ static HARD_REG_SET bad_spill_regs;\n    elements that are actually valid; new ones are added at the end.  */\n static short spill_regs[FIRST_PSEUDO_REGISTER];\n \n+/* This reg set indicates those registers that have been used a spill\n+   registers.  This information is used in reorg.c, to help figure out\n+   what registers are live at any point.  It is assumed that all spill_regs\n+   are dead at every CODE_LABEL.  */\n+\n+HARD_REG_SET used_spill_regs;\n+\n /* Index of last register assigned as a spill register.  We allocate in\n    a round-robin fashion.  */\n \n@@ -2026,6 +2033,10 @@ reload (first, global, dumpfile)\n     free (scratch_block);\n   scratch_block = 0;\n \n+  CLEAR_HARD_REG_SET (used_spill_regs);\n+  for (i = 0; i < n_spills; i++)\n+    SET_HARD_REG_BIT (used_spill_regs, spill_regs[i]);\n+\n   return failure;\n }\n \f"}]}