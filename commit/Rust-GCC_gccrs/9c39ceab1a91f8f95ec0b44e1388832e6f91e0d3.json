{"sha": "9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMzOWNlYWIxYTkxZjhmOTVlYzBiNDRlMTM4ODgzMmU2ZjkxZTBkMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-11-30T22:45:06Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-11-30T22:45:06Z"}, "message": "re PR c++/40371 (ICE with template operator)\n\ncp/\n2009-11-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/40371\n\t* call.c (add_template_candidate_real): Early return NULL if\n\tthe arglist length is smaller than skip_without_in_chrg; tidy.\n\ntestsuite/\n2009-11-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/40371\n\t* g++.dg/template/crash93.C: New.\n\nFrom-SVN: r154852", "tree": {"sha": "06c044f6f408e24cdc5701b20098e4130bc7fe33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06c044f6f408e24cdc5701b20098e4130bc7fe33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3/comments", "author": null, "committer": null, "parents": [{"sha": "ed807d06d99b37641fbcc4fa0967b4f8957b9017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed807d06d99b37641fbcc4fa0967b4f8957b9017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed807d06d99b37641fbcc4fa0967b4f8957b9017"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "0be24915a548ff9d8b8ed4421841da4b3bf6a384", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3", "patch": "@@ -1,3 +1,9 @@\n+2009-11-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/40371\n+\t* call.c (add_template_candidate_real): Early return NULL if\n+\tthe arglist length is smaller than skip_without_in_chrg; tidy.\n+\n 2009-11-30  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42069"}, {"sha": "837a65d807924c8b9cc79efa854d43713eca54bc", "filename": "gcc/cp/call.c", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3", "patch": "@@ -2457,9 +2457,10 @@ add_template_candidate_real (struct z_candidate **candidates, tree tmpl,\n {\n   int ntparms = DECL_NTPARMS (tmpl);\n   tree targs = make_tree_vec (ntparms);\n-  unsigned int nargs;\n-  int skip_without_in_chrg;\n-  tree first_arg_without_in_chrg;\n+  unsigned int len = VEC_length (tree, arglist);\n+  unsigned int nargs = (first_arg == NULL_TREE ? 0 : 1) + len;\n+  unsigned int skip_without_in_chrg = 0;\n+  tree first_arg_without_in_chrg = first_arg;\n   tree *args_without_in_chrg;\n   unsigned int nargs_without_in_chrg;\n   unsigned int ia, ix;\n@@ -2468,12 +2469,6 @@ add_template_candidate_real (struct z_candidate **candidates, tree tmpl,\n   int i;\n   tree fn;\n \n-  nargs = (first_arg == NULL_TREE ? 0 : 1) + VEC_length (tree, arglist);\n-\n-  skip_without_in_chrg = 0;\n-\n-  first_arg_without_in_chrg = first_arg;\n-\n   /* We don't do deduction on the in-charge parameter, the VTT\n      parameter or 'this'.  */\n   if (DECL_NONSTATIC_MEMBER_FUNCTION_P (tmpl))\n@@ -2494,9 +2489,11 @@ add_template_candidate_real (struct z_candidate **candidates, tree tmpl,\n \t++skip_without_in_chrg;\n     }\n \n+  if (len < skip_without_in_chrg)\n+    return NULL;\n+\n   nargs_without_in_chrg = ((first_arg_without_in_chrg != NULL_TREE ? 1 : 0)\n-\t\t\t   + (VEC_length (tree, arglist)\n-\t\t\t      - skip_without_in_chrg));\n+\t\t\t   + (len - skip_without_in_chrg));\n   args_without_in_chrg = XALLOCAVEC (tree, nargs_without_in_chrg);\n   ia = 0;\n   if (first_arg_without_in_chrg != NULL_TREE)"}, {"sha": "a7d248f47502b8c2710bb9a689caedc219b12c79", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3", "patch": "@@ -1,3 +1,8 @@\n+2009-11-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/40371\n+\t* g++.dg/template/crash93.C: New.\n+\n 2009-11-30  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.dg/pr41551.c: New test."}, {"sha": "696a04a07866872fef9b04066169a39efed43b87", "filename": "gcc/testsuite/g++.dg/template/crash93.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash93.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash93.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash93.C?ref=9c39ceab1a91f8f95ec0b44e1388832e6f91e0d3", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/40371\n+\n+struct A\n+{\n+  typedef void (&F)();\n+  template<int> operator F();\n+};\n+\n+void foo()\n+{\n+  A()(); // { dg-error \"no match\" }\n+}"}]}