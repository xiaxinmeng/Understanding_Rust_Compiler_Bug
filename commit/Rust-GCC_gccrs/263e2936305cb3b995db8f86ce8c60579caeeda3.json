{"sha": "263e2936305cb3b995db8f86ce8c60579caeeda3", "node_id": "C_kwDOANBUbNoAKDI2M2UyOTM2MzA1Y2IzYjk5NWRiOGY4NmNlOGM2MDU3OWNhZWVkYTM", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-08-24T21:58:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-04T08:45:06Z"}, "message": "[Ada] Fix handling of 'Image acting as a prefix of a slice in CodePeer\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Slice): Add custom handling of attribute\n\tImage and similar in CodePeer mode. This complements the\n\texisting custom handling of these attributes in\n\tExpand_N_Attribute_Reference.", "tree": {"sha": "0d7e9642b615a825d2adfcc4c5cd0cbfa766e500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d7e9642b615a825d2adfcc4c5cd0cbfa766e500"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/263e2936305cb3b995db8f86ce8c60579caeeda3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/263e2936305cb3b995db8f86ce8c60579caeeda3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/263e2936305cb3b995db8f86ce8c60579caeeda3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/263e2936305cb3b995db8f86ce8c60579caeeda3/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c30bccd6897e84465fff147f12133c282c02eae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c30bccd6897e84465fff147f12133c282c02eae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c30bccd6897e84465fff147f12133c282c02eae"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "c493d5d34bac8b7478bf5a391e7ddf41679f2f49", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/263e2936305cb3b995db8f86ce8c60579caeeda3/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/263e2936305cb3b995db8f86ce8c60579caeeda3/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=263e2936305cb3b995db8f86ce8c60579caeeda3", "patch": "@@ -11275,10 +11275,20 @@ package body Sem_Res is\n             end;\n          end if;\n \n+      --  In CodePeer mode the attribute Image is not expanded, so when it\n+      --  acts as a prefix of a slice, we handle it like a call to function\n+      --  returning an unconstrained string. Same for the Wide variants of\n+      --  attribute Image.\n+\n       elsif Is_Entity_Name (Name)\n         or else Nkind (Name) = N_Explicit_Dereference\n         or else (Nkind (Name) = N_Function_Call\n                   and then not Is_Constrained (Etype (Name)))\n+        or else (CodePeer_Mode\n+                  and then Nkind (Name) = N_Attribute_Reference\n+                  and then Attribute_Name (Name) in Name_Image\n+                                                  | Name_Wide_Image\n+                                                  | Name_Wide_Wide_Image)\n       then\n          Array_Type := Get_Actual_Subtype (Name);\n "}]}