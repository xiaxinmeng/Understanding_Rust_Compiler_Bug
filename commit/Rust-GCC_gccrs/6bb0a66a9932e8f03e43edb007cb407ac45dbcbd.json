{"sha": "6bb0a66a9932e8f03e43edb007cb407ac45dbcbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJiMGE2NmE5OTMyZThmMDNlNDNlZGIwMDdjYjQwN2FjNDVkYmNiZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-05-25T16:19:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-05-25T16:19:11Z"}, "message": "re PR debug/43260 (Java static class members lack DWARF location info)\n\n\tPR debug/43260\n\t* java-tree.h (pending_static_fields): New extern declaration.\n\t(java_write_globals): New prototype.\n\t* lang.c (LANG_HOOKS_WRITE_GLOBALS): Define.\n\t* decl.c (java_mark_class_local): When clearing DECL_EXTERNAL\n\tof a static field push it into pending_static_fields vector.\n\t* class.c (pending_static_fields): New variable.\n\t(add_field): If static field is not DECL_EXTERNAL, push it into\n\tpending_static_fields vector.\n\t(java_write_globals): New function.\n\nFrom-SVN: r159828", "tree": {"sha": "c5d52ec0a97fd0f5d2874395be7e0a89136c2a9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5d52ec0a97fd0f5d2874395be7e0a89136c2a9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9602a7a9c8f9ab271f4672a080c17c8b21d0dc14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9602a7a9c8f9ab271f4672a080c17c8b21d0dc14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9602a7a9c8f9ab271f4672a080c17c8b21d0dc14"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "ce1a98b192e7646c00225843a0787a0a3d42dcda", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6bb0a66a9932e8f03e43edb007cb407ac45dbcbd", "patch": "@@ -1,3 +1,16 @@\n+2010-05-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/43260\n+\t* java-tree.h (pending_static_fields): New extern declaration.\n+\t(java_write_globals): New prototype.\n+\t* lang.c (LANG_HOOKS_WRITE_GLOBALS): Define.\n+\t* decl.c (java_mark_class_local): When clearing DECL_EXTERNAL\n+\tof a static field push it into pending_static_fields vector.\n+\t* class.c (pending_static_fields): New variable.\n+\t(add_field): If static field is not DECL_EXTERNAL, push it into\n+\tpending_static_fields vector.\n+\t(java_write_globals): New function.\n+\n 2010-05-24  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* expr.c (quick_stack): Change type to a VEC.  Update comment."}, {"sha": "919d698de0fa02386e82fc983d1370557ec95c93", "filename": "gcc/java/class.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=6bb0a66a9932e8f03e43edb007cb407ac45dbcbd", "patch": "@@ -1,6 +1,6 @@\n /* Functions related to building classes and their related objects.\n    Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-   2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   2005, 2006, 2007, 2008, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -109,6 +109,10 @@ static GTY(()) VEC(tree,gc) *registered_class;\n    currently being compiled.  */\n static GTY(()) tree this_classdollar;\n \n+/* A list of static class fields.  This is to emit proper debug\n+   info for them.  */\n+VEC(tree,gc) *pending_static_fields;\n+\n /* Return the node that most closely represents the class whose name\n    is IDENT.  Start the search from NODE (followed by its siblings).\n    Return NULL if an appropriate node does not exist.  */\n@@ -873,6 +877,8 @@ add_field (tree klass, tree name, tree field_type, int flags)\n       /* Considered external unless we are compiling it into this\n \t object file.  */\n       DECL_EXTERNAL (field) = (is_compiled_class (klass) != 2);\n+      if (!DECL_EXTERNAL (field))\n+\tVEC_safe_push (tree, gc, pending_static_fields, field);\n     }\n \n   return field;\n@@ -3224,4 +3230,17 @@ in_same_package (tree name1, tree name2)\n   return (pkg1 == pkg2);\n }\n \n+/* lang_hooks.decls.final_write_globals: perform final processing on\n+   global variables.  */\n+\n+void\n+java_write_globals (void)\n+{\n+  tree *vec = VEC_address (tree, pending_static_fields);\n+  int len = VEC_length (tree, pending_static_fields);\n+  write_global_declarations ();\n+  emit_debug_global_declarations (vec, len);\n+  VEC_free (tree, gc, pending_static_fields);\n+}\n+\n #include \"gt-java-class.h\""}, {"sha": "f78d68359eba1b7a242e6b680defaf89536b90fb", "filename": "gcc/java/decl.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=6bb0a66a9932e8f03e43edb007cb407ac45dbcbd", "patch": "@@ -2000,7 +2000,11 @@ java_mark_class_local (tree klass)\n \n   for (t = TYPE_FIELDS (klass); t ; t = TREE_CHAIN (t))\n     if (FIELD_STATIC (t))\n-      java_mark_decl_local (t);\n+      {\n+\tif (DECL_EXTERNAL (t))\n+\t  VEC_safe_push (tree, gc, pending_static_fields, t);\n+\tjava_mark_decl_local (t);\n+      }\n \n   for (t = TYPE_METHODS (klass); t ; t = TREE_CHAIN (t))\n     if (!METHOD_ABSTRACT (t))"}, {"sha": "dc16eb2bc10064c051858232233d932372a5e31a", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=6bb0a66a9932e8f03e43edb007cb407ac45dbcbd", "patch": "@@ -1,7 +1,7 @@\n /* Definitions for parsing and type checking for the GNU compiler for\n    the Java(TM) language.\n    Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-   2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   2005, 2006, 2007, 2008, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -1231,6 +1231,10 @@ extern void rewrite_reflection_indexes (void *);\n \n int cxx_keyword_p (const char *name, int length);\n \n+extern GTY(()) VEC(tree,gc) *pending_static_fields;\n+\n+extern void java_write_globals (void);   \n+\n #define DECL_FINAL(DECL) DECL_LANG_FLAG_3 (DECL)\n \n /* Access flags etc for a method (a FUNCTION_DECL): */"}, {"sha": "c55b5e0510f355068a256d152ab2d98931eafc2b", "filename": "gcc/java/lang.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb0a66a9932e8f03e43edb007cb407ac45dbcbd/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=6bb0a66a9932e8f03e43edb007cb407ac45dbcbd", "patch": "@@ -1,6 +1,6 @@\n /* Java(TM) language-specific utility routines.\n    Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-   2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   2005, 2006, 2007, 2008, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -136,6 +136,8 @@ struct GTY(()) language_function {\n #define LANG_HOOKS_DECL_PRINTABLE_NAME lang_printable_name\n #undef LANG_HOOKS_PRINT_ERROR_FUNCTION\n #define LANG_HOOKS_PRINT_ERROR_FUNCTION\tjava_print_error_function\n+#undef LANG_HOOKS_WRITE_GLOBALS\n+#define LANG_HOOKS_WRITE_GLOBALS java_write_globals\n \n #undef LANG_HOOKS_TYPE_FOR_MODE\n #define LANG_HOOKS_TYPE_FOR_MODE java_type_for_mode"}]}