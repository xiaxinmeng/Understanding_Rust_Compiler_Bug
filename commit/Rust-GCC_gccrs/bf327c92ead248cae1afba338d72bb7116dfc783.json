{"sha": "bf327c92ead248cae1afba338d72bb7116dfc783", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYzMjdjOTJlYWQyNDhjYWUxYWZiYTMzOGQ3MmJiNzExNmRmYzc4Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-17T09:57:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-17T09:57:27Z"}, "message": "[multiple changes]\n\n2009-04-17  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch7.adb: Minor reformatting\n\n2009-04-17  Robert Dewar  <dewar@adacore.com>\n\n\t* restrict.adb (Check_Restriction_No_Dependence): Don't check\n\trestriction if outside main extended source unit.\n\n\t* sem_ch10.adb (Analyze_With_Clause): Check No_Dependence restriction\n\tfor parents of child units as well as the child unit itself.\n\n2009-04-17  Bob Duff  <duff@adacore.com>\n\n\t* checks.ads: Minor comment fix\n\n\t* exp_aggr.ads: Minor comment fix\n\n2009-04-17  Nicolas Roche  <roche@adacore.com>\n\n\t* adaint.c: Improve cross compiler detection and handling.\n\nFrom-SVN: r146236", "tree": {"sha": "56bb55c5ed960e6123da600a44f94e66b80ba0ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56bb55c5ed960e6123da600a44f94e66b80ba0ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf327c92ead248cae1afba338d72bb7116dfc783", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf327c92ead248cae1afba338d72bb7116dfc783", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf327c92ead248cae1afba338d72bb7116dfc783", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf327c92ead248cae1afba338d72bb7116dfc783/comments", "author": null, "committer": null, "parents": [{"sha": "ffec8e81da21c8fd1726d4e5dbf4800aa0fe9e88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffec8e81da21c8fd1726d4e5dbf4800aa0fe9e88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffec8e81da21c8fd1726d4e5dbf4800aa0fe9e88"}], "stats": {"total": 107, "additions": 72, "deletions": 35}, "files": [{"sha": "2756c8cecc9194bcfa2a2fbf93ae9a370fdb423d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bf327c92ead248cae1afba338d72bb7116dfc783", "patch": "@@ -1,3 +1,25 @@\n+2009-04-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch7.adb: Minor reformatting\n+\n+2009-04-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* restrict.adb (Check_Restriction_No_Dependence): Don't check\n+\trestriction if outside main extended source unit.\n+\n+\t* sem_ch10.adb (Analyze_With_Clause): Check No_Dependence restriction\n+\tfor parents of child units as well as the child unit itself.\n+\n+2009-04-17  Bob Duff  <duff@adacore.com>\n+\n+\t* checks.ads: Minor comment fix\n+\n+\t* exp_aggr.ads: Minor comment fix\n+\n+2009-04-17  Nicolas Roche  <roche@adacore.com>\n+\n+\t* adaint.c: Improve cross compiler detection and handling.\n+\n 2009-04-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_ch4.adb (Expand_Concatenation): Do not use calls at -Os."}, {"sha": "3ac773dacc3c0759e250153abcd99d5868bbde34", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=bf327c92ead248cae1afba338d72bb7116dfc783", "patch": "@@ -237,9 +237,11 @@ struct vstring\n #endif\n \n /* Check for cross-compilation */\n-#ifdef CROSS_DIRECTORY_STRUCTURE\n+#if defined (CROSS_COMPILE) || defined (CROSS_DIRECTORY_STRUCTURE)\n+#define IS_CROSS 1\n int __gnat_is_cross_compiler = 1;\n #else\n+#undef IS_CROSS\n int __gnat_is_cross_compiler = 0;\n #endif\n \n@@ -664,7 +666,7 @@ __gnat_os_filename (char *filename, char *w_filename ATTRIBUTE_UNUSED,\n \t\t    char *os_name, int *o_length,\n \t\t    char *encoding ATTRIBUTE_UNUSED, int *e_length)\n {\n-#if defined (_WIN32) && ! defined (__vxworks) && ! defined (CROSS_DIRECTORY_STRUCTURE)\n+#if defined (_WIN32) && ! defined (__vxworks) && ! defined (IS_CROSS)\n   WS2SC (os_name, (TCHAR *)w_filename, o_length);\n   *o_length = strlen (os_name);\n   strcpy (encoding, \"encoding=utf8\");\n@@ -681,7 +683,7 @@ __gnat_os_filename (char *filename, char *w_filename ATTRIBUTE_UNUSED,\n int\n __gnat_unlink (char *path)\n {\n-#if defined (__MINGW32__) && ! defined (__vxworks) && ! defined (CROSS_COMPILE)\n+#if defined (__MINGW32__) && ! defined (__vxworks) && ! defined (IS_CROSS)\n   {\n     TCHAR wpath[GNAT_MAX_PATH_LEN];\n \n@@ -698,7 +700,7 @@ __gnat_unlink (char *path)\n int\n __gnat_rename (char *from, char *to)\n {\n-#if defined (__MINGW32__) && ! defined (__vxworks) && ! defined (CROSS_COMPILE)\n+#if defined (__MINGW32__) && ! defined (__vxworks) && ! defined (IS_CROSS)\n   {\n     TCHAR wfrom[GNAT_MAX_PATH_LEN], wto[GNAT_MAX_PATH_LEN];\n \n@@ -716,7 +718,7 @@ __gnat_rename (char *from, char *to)\n int\n __gnat_chdir (char *path)\n {\n-#if defined (__MINGW32__) && ! defined (__vxworks) && ! defined (CROSS_COMPILE)\n+#if defined (__MINGW32__) && ! defined (__vxworks) && ! defined (IS_CROSS)\n   {\n     TCHAR wpath[GNAT_MAX_PATH_LEN];\n \n@@ -733,7 +735,7 @@ __gnat_chdir (char *path)\n int\n __gnat_rmdir (char *path)\n {\n-#if defined (__MINGW32__) && ! defined (__vxworks) && ! defined (CROSS_COMPILE)\n+#if defined (__MINGW32__) && ! defined (__vxworks) && ! defined (IS_CROSS)\n   {\n     TCHAR wpath[GNAT_MAX_PATH_LEN];\n \n@@ -748,7 +750,7 @@ __gnat_rmdir (char *path)\n FILE *\n __gnat_fopen (char *path, char *mode, int encoding ATTRIBUTE_UNUSED)\n {\n-#if defined (_WIN32) && ! defined (__vxworks) && ! defined (CROSS_DIRECTORY_STRUCTURE)\n+#if defined (_WIN32) && ! defined (__vxworks) && ! defined (IS_CROSS)\n   TCHAR wpath[GNAT_MAX_PATH_LEN];\n   TCHAR wmode[10];\n \n@@ -772,7 +774,7 @@ __gnat_fopen (char *path, char *mode, int encoding ATTRIBUTE_UNUSED)\n FILE *\n __gnat_freopen (char *path, char *mode, FILE *stream, int encoding ATTRIBUTE_UNUSED)\n {\n-#if defined (_WIN32) && ! defined (__vxworks) && ! defined (CROSS_DIRECTORY_STRUCTURE)\n+#if defined (_WIN32) && ! defined (__vxworks) && ! defined (IS_CROSS)\n   TCHAR wpath[GNAT_MAX_PATH_LEN];\n   TCHAR wmode[10];\n \n@@ -1578,7 +1580,8 @@ __gnat_get_libraries_from_registry (void)\n {\n   char *result = (char *) \"\";\n \n-#if defined (_WIN32) && ! defined (__vxworks) && ! defined (CROSS_DIRECTORY_STRUCTURE) && ! defined (RTX)\n+#if defined (_WIN32) && ! defined (__vxworks) && ! defined (IS_CROSS) \\\n+  && ! defined (RTX)\n \n   HKEY reg_key;\n   DWORD name_size, value_size;\n@@ -3178,7 +3181,7 @@ _flush_cache()\n }\n #endif\n \n-#if defined (CROSS_DIRECTORY_STRUCTURE)  \\\n+#if defined (IS_CROSS)  \\\n   || (! ((defined (sparc) || defined (i386)) && defined (sun) \\\n       && defined (__SVR4)) \\\n       && ! (defined (linux) && (defined (i386) || defined (__x86_64__))) \\"}, {"sha": "e0cc54d09366a160e2a067fa49f660ddbb183e71", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=bf327c92ead248cae1afba338d72bb7116dfc783", "patch": "@@ -135,9 +135,9 @@ package Checks is\n       Typ        : Entity_Id;\n       No_Sliding : Boolean := False);\n    --  Top-level procedure, calls all the others depending on the class of Typ.\n-   --  Checks that expression N verifies the constraint of type Typ. No_Sliding\n-   --  is only relevant for constrained array types, if set to True, it\n-   --  checks that indexes are in range.\n+   --  Checks that expression N satisfies the constraint of type Typ.\n+   --  No_Sliding is only relevant for constrained array types, if set to True,\n+   --  it checks that indexes are in range.\n \n    procedure Apply_Discriminant_Check\n      (N   : Node_Id;"}, {"sha": "0b024fc2b8d7310d7321f3ca9af8cfbc25814a45", "filename": "gcc/ada/exp_aggr.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2Fexp_aggr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2Fexp_aggr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.ads?ref=bf327c92ead248cae1afba338d72bb7116dfc783", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,7 +45,7 @@ package Exp_Aggr is\n       Aggr  : Node_Id);\n    --  Alloc is the allocator whose expression is the aggregate Aggr.\n    --  Decl is an N_Object_Declaration created during allocator expansion.\n-   --  This procedure perform in-place aggregate assignment into the\n+   --  This procedure performs in-place aggregate assignment into the\n    --  temporary declared in Decl, and the allocator becomes an access to\n    --  that temporary.\n "}, {"sha": "acd7887089dcc6eb53eb633d10aa6560a3d042d5", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=bf327c92ead248cae1afba338d72bb7116dfc783", "patch": "@@ -1371,36 +1371,36 @@ package body Exp_Ch7 is\n       end if;\n \n       --  Resolution is now finished, make sure we don't start analysis again\n-      --  because of the duplication\n+      --  because of the duplication.\n \n       Set_Analyzed (N);\n       Ref := Duplicate_Subexpr_No_Checks (N);\n \n-      --  Now we can generate the Attach Call, note that this value is\n-      --  always in the (secondary) stack and thus is attached to a singly\n-      --  linked final list:\n+      --  Now we can generate the Attach Call. Note that this value is always\n+      --  on the (secondary) stack and thus is attached to a singly linked\n+      --  final list:\n \n       --    Resx := F (X)'reference;\n       --    Attach_To_Final_List (_Lx, Resx.all, 1);\n \n-      --  or when there are controlled components\n+      --  or when there are controlled components:\n \n       --    Attach_To_Final_List (_Lx, Resx._controller, 1);\n \n-      --  or when it is both is_controlled and has_controlled_components\n+      --  or when it is both Is_Controlled and Has_Controlled_Components:\n \n       --    Attach_To_Final_List (_Lx, Resx._controller, 1);\n       --    Attach_To_Final_List (_Lx, Resx, 1);\n \n-      --  or if it is an array with is_controlled (and has_controlled)\n+      --  or if it is an array with Is_Controlled (and Has_Controlled)\n \n       --    Attach_To_Final_List (_Lx, Resx (Resx'last), 3);\n-      --    An attach level of 3 means that a whole array is to be\n-      --    attached to the finalization list (including the controlled\n-      --    components)\n \n-      --  or if it is an array with has_controlled components but not\n-      --  is_controlled\n+      --    An attach level of 3 means that a whole array is to be attached to\n+      --    the finalization list (including the controlled components).\n+\n+      --  or if it is an array with Has_Controlled_Components but not\n+      --  Is_Controlled:\n \n       --    Attach_To_Final_List (_Lx, Resx (Resx'last)._controller, 3);\n \n@@ -1466,8 +1466,8 @@ package body Exp_Ch7 is\n             end if;\n          end;\n \n-         --  Here we know that 'Ref' has a controller so we may as well\n-         --  attach it directly\n+         --  Here we know that 'Ref' has a controller so we may as well attach\n+         --  it directly.\n \n          Action :=\n            Make_Attach_Call (\n@@ -1485,12 +1485,12 @@ package body Exp_Ch7 is\n                 With_Attach  => Make_Integer_Literal (Loc, Attach_Level));\n          end if;\n \n-      --  Here, we have a controlled type that does not seem to have\n-      --  controlled components but it could be a class wide type whose\n-      --  further derivations have controlled components. So we don't know\n-      --  if the object itself needs to be attached or if it has a record\n-      --  controller. We need to call a runtime function (Deep_Tag_Attach)\n-      --  which knows what to do thanks to the RC_Offset in the dispatch table.\n+      --  Here, we have a controlled type that does not seem to have controlled\n+      --  components but it could be a class wide type whose further\n+      --  derivations have controlled components. So we don't know if the\n+      --  object itself needs to be attached or if it has a record controller.\n+      --  We need to call a runtime function (Deep_Tag_Attach) which knows what\n+      --  to do thanks to the RC_Offset in the dispatch table.\n \n       else\n          Action :="}, {"sha": "a57ac4c66ee16b77e7b0cee3bdd607dd5e873a3c", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=bf327c92ead248cae1afba338d72bb7116dfc783", "patch": "@@ -316,6 +316,15 @@ package body Restrict is\n       DU : Node_Id;\n \n    begin\n+      --  Ignore call if node U is not in the main source unit. This avoids\n+      --  cascaded errors, e.g. when Ada.Containers units with other units.\n+\n+      if not In_Extended_Main_Source_Unit (U) then\n+         return;\n+      end if;\n+\n+      --  Loop through entries in No_Dependence table to check each one in turn\n+\n       for J in No_Dependence.First .. No_Dependence.Last loop\n          DU := No_Dependence.Table (J).Unit;\n "}, {"sha": "b72c1d291cb04f84630b29c457137629a5314254", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf327c92ead248cae1afba338d72bb7116dfc783/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=bf327c92ead248cae1afba338d72bb7116dfc783", "patch": "@@ -2405,6 +2405,8 @@ package body Sem_Ch10 is\n       Set_Entity_With_Style_Check (Name (N), E_Name);\n       Generate_Reference (E_Name, Name (N), 'w', Set_Ref => False);\n \n+      --  Generate references and check No_Dependence restriction for parents\n+\n       if Is_Child_Unit (E_Name) then\n          Pref     := Prefix (Name (N));\n          Par_Name := Scope (E_Name);\n@@ -2413,6 +2415,7 @@ package body Sem_Ch10 is\n             Set_Entity_With_Style_Check (Pref, Par_Name);\n \n             Generate_Reference (Par_Name, Pref);\n+            Check_Restriction_No_Dependence (Pref, N);\n             Pref := Prefix (Pref);\n \n             --  If E_Name is the dummy entity for a nonexistent unit, its scope"}]}