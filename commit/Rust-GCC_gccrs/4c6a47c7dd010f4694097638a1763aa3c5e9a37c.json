{"sha": "4c6a47c7dd010f4694097638a1763aa3c5e9a37c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2YTQ3YzdkZDAxMGY0Njk0MDk3NjM4YTE3NjNhYTNjNWU5YTM3Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-08T10:19:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-08T10:19:49Z"}, "message": "testsuite: Avoid strict aliasing violations in some avx512 tests\n\nThese tests violated strict aliasing, fixed by using a union and\ntype punning through that.\n\n2020-12-08  Jakub Jelinek  <jakub@redhat.com>\n\n\t* gcc.target/i386/avx512dq-vandnpd-2.c (CALC): Use union\n\tto avoid aliasing violations.\n\t* gcc.target/i386/avx512dq-vandnps-2.c (CALC): Likewise.\n\t* gcc.target/i386/avx512dq-vandpd-2.c (CALC): Likewise.\n\t* gcc.target/i386/avx512dq-vandps-2.c (CALC): Likewise.\n\t* gcc.target/i386/avx512dq-vorpd-2.c (CALC): Likewise.\n\t* gcc.target/i386/avx512dq-vorps-2.c (CALC): Likewise.\n\t* gcc.target/i386/avx512dq-vxorpd-2.c (CALC): Likewise.\n\t* gcc.target/i386/avx512dq-vxorps-2.c (CALC): Likewise.", "tree": {"sha": "ee524795107a90963e794441c35773d197f126dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee524795107a90963e794441c35773d197f126dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c6a47c7dd010f4694097638a1763aa3c5e9a37c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6a47c7dd010f4694097638a1763aa3c5e9a37c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c6a47c7dd010f4694097638a1763aa3c5e9a37c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19c1ef85c3f9be7c78682135ed1f59cd093b4684", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19c1ef85c3f9be7c78682135ed1f59cd093b4684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19c1ef85c3f9be7c78682135ed1f59cd093b4684"}], "stats": {"total": 56, "additions": 40, "deletions": 16}, "files": [{"sha": "0a7d19b77bed443fbebd484ec765532e55e2aa12", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vandnpd-2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vandnpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vandnpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vandnpd-2.c?ref=4c6a47c7dd010f4694097638a1763aa3c5e9a37c", "patch": "@@ -16,8 +16,11 @@ CALC (double *s1, double *s2, double *r)\n \n   for (i = 0; i < SIZE; i++)\n     {\n-      tmp = (~(*(long long *) &s1[i])) & (*(long long *) &s2[i]);\n-      r[i] = *(double *) &tmp;\n+      union U { double d; long long l; } u1, u2;\n+      u1.d = s1[i];\n+      u2.d = s2[i];\n+      u1.l = (~u1.l) & u2.l;\n+      r[i] = u1.d;\n     }\n }\n "}, {"sha": "836a7abada6ef9552dca8b4531024a95bed59f87", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vandnps-2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vandnps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vandnps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vandnps-2.c?ref=4c6a47c7dd010f4694097638a1763aa3c5e9a37c", "patch": "@@ -16,8 +16,11 @@ CALC (float *s1, float *s2, float *r)\n \n   for (i = 0; i < SIZE; i++)\n     {\n-      tmp = (~(*(int *) &s1[i])) & (*(int *) &s2[i]);\n-      r[i] = *(float *) &tmp;\n+      union U { float f; int i; } u1, u2;\n+      u1.f = s1[i];\n+      u2.f = s2[i];\n+      u1.i = (~u1.i) & u2.i;\n+      r[i] = u1.f;\n     }\n }\n "}, {"sha": "b629c9fa8f1ddc6bfc4760a80bcefe2ed1b400bc", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vandpd-2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vandpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vandpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vandpd-2.c?ref=4c6a47c7dd010f4694097638a1763aa3c5e9a37c", "patch": "@@ -16,8 +16,11 @@ CALC (double *s1, double *s2, double *r)\n \n   for (i = 0; i < SIZE; i++)\n     {\n-      tmp = (*(long long *) &s1[i]) & (*(long long *) &s2[i]);\n-      r[i] = *(double *) &tmp;\n+      union U { double d; long long l; } u1, u2;\n+      u1.d = s1[i];\n+      u2.d = s2[i];\n+      u1.l &= u2.l;\n+      r[i] = u1.d;\n     }\n }\n "}, {"sha": "6e55e66b8e311554abc40f20a6c2da1e7760c05e", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vandps-2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vandps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vandps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vandps-2.c?ref=4c6a47c7dd010f4694097638a1763aa3c5e9a37c", "patch": "@@ -16,8 +16,11 @@ CALC (float *s1, float *s2, float *r)\n \n   for (i = 0; i < SIZE; i++)\n     {\n-      tmp = (*(int *) &s1[i]) & (*(int *) &s2[i]);\n-      r[i] = *(float *) &tmp;\n+      union U { float f; int i; } u1, u2;\n+      u1.f = s1[i];\n+      u2.f = s2[i];\n+      u1.i &= u2.i;\n+      r[i] = u1.f;\n     }\n }\n "}, {"sha": "6376c1cdd9fda96f6e9ae81d53258a52451976a5", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vorpd-2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vorpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vorpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vorpd-2.c?ref=4c6a47c7dd010f4694097638a1763aa3c5e9a37c", "patch": "@@ -15,8 +15,11 @@ CALC (double *src1, double *src2, double *dst)\n \n   for (i = 0; i < SIZE; i++)\n     {\n-      long long tmp = (*(long long *) &src1[i]) | (*(long long *) &src2[i]);\n-      dst[i] = *(double *) &tmp;\n+      union U { double d; long long l; } u1, u2;\n+      u1.d = src1[i];\n+      u2.d = src2[i];\n+      u1.l |= u2.l;\n+      dst[i] = u1.d;\n     }\n }\n "}, {"sha": "3d30247e0322e96009c00589c0876c484a10e363", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vorps-2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vorps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vorps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vorps-2.c?ref=4c6a47c7dd010f4694097638a1763aa3c5e9a37c", "patch": "@@ -15,8 +15,11 @@ CALC (float *src1, float *src2, float *dst)\n \n   for (i = 0; i < SIZE; i++)\n     {\n-      int tmp = (*(int *) &src1[i]) | (*(int *) &src2[i]);\n-      dst[i] = *(float *) &tmp;\n+      union U { float f; int i; } u1, u2;\n+      u1.f = src1[i];\n+      u2.f = src2[i];\n+      u1.i |= u2.i;\n+      dst[i] = u1.f;\n     }\n }\n "}, {"sha": "068be60ae90c3334f85798c58bcb0ef29c8cd8b3", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vxorpd-2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vxorpd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vxorpd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vxorpd-2.c?ref=4c6a47c7dd010f4694097638a1763aa3c5e9a37c", "patch": "@@ -15,8 +15,11 @@ CALC (double *src1, double *src2, double *dst)\n \n   for (i = 0; i < SIZE; i++)\n     {\n-      long long tmp = (*(long long *) &src1[i]) ^ (*(long long *) &src2[i]);\n-      dst[i] = *(double *) &tmp;\n+      union U { double d; long long l; } u1, u2;\n+      u1.d = src1[i];\n+      u2.d = src2[i];\n+      u1.l ^= u2.l;\n+      dst[i] = u1.d;\n     }\n }\n "}, {"sha": "716bb81c6db2e6a0d34160ee098eac49e4e35b57", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vxorps-2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vxorps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6a47c7dd010f4694097638a1763aa3c5e9a37c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vxorps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vxorps-2.c?ref=4c6a47c7dd010f4694097638a1763aa3c5e9a37c", "patch": "@@ -15,8 +15,11 @@ CALC (float *src1, float *src2, float *dst)\n \n   for (i = 0; i < SIZE; i++)\n     {\n-      int tmp = (*(int *) &src1[i]) ^ (*(int *) &src2[i]);\n-      dst[i] = *(float *) &tmp;\n+      union U { float f; int i; } u1, u2;\n+      u1.f = src1[i];\n+      u2.f = src2[i];\n+      u1.i ^= u2.i;\n+      dst[i] = u1.f;\n     }\n }\n "}]}