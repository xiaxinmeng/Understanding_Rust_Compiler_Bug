{"sha": "120e873484f20d9a0b8400e2e464ac5b2088a747", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIwZTg3MzQ4NGYyMGQ5YTBiODQwMGUyZTQ2NGFjNWIyMDg4YTc0Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-24T13:11:31Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-24T13:39:18Z"}, "message": "libstdc++: Add default_sentinel support to stream iterators\n\nMissing pieces of P0896R4 \"The One Ranges Proposal\" for C++20.\n\n\t* include/bits/stream_iterator.h (istream_iterator(default_sentinel_t)):\n\tAdd constructor.\n\t(operator==(istream_iterator, default_sentinel_t)): Add operator.\n\t(ostream_iterator::difference_type): Define to ptrdiff_t for C++20.\n\t* include/bits/streambuf_iterator.h\n\t(istreambuf_iterator(default_sentinel_t)): Add constructor.\n\t(operator==(istreambuf_iterator, default_sentinel_t)): Add operator.\n\t* testsuite/24_iterators/istream_iterator/cons/sentinel.cc:\n\tNew test.\n\t* testsuite/24_iterators/istream_iterator/sentinel.cc: New test.\n\t* testsuite/24_iterators/istreambuf_iterator/cons/sentinel.cc:\n\tNew test.\n\t* testsuite/24_iterators/istreambuf_iterator/sentinel.cc: New test.", "tree": {"sha": "ff85bf825e28dc76d68a89a0b614502e79d097da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff85bf825e28dc76d68a89a0b614502e79d097da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/120e873484f20d9a0b8400e2e464ac5b2088a747", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120e873484f20d9a0b8400e2e464ac5b2088a747", "html_url": "https://github.com/Rust-GCC/gccrs/commit/120e873484f20d9a0b8400e2e464ac5b2088a747", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120e873484f20d9a0b8400e2e464ac5b2088a747/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e03069be127cbc9d134d3f6b3c41461fed630444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e03069be127cbc9d134d3f6b3c41461fed630444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e03069be127cbc9d134d3f6b3c41461fed630444"}], "stats": {"total": 150, "additions": 150, "deletions": 0}, "files": [{"sha": "e18f9d073605fb22e1e753068e0b4911285438a5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120e873484f20d9a0b8400e2e464ac5b2088a747/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120e873484f20d9a0b8400e2e464ac5b2088a747/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=120e873484f20d9a0b8400e2e464ac5b2088a747", "patch": "@@ -1,5 +1,19 @@\n 2020-02-24  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/stream_iterator.h (istream_iterator(default_sentinel_t)):\n+\tAdd constructor.\n+\t(operator==(istream_iterator, default_sentinel_t)): Add operator.\n+\t(ostream_iterator::difference_type): Define to ptrdiff_t for C++20.\n+\t* include/bits/streambuf_iterator.h\n+\t(istreambuf_iterator(default_sentinel_t)): Add constructor.\n+\t(operator==(istreambuf_iterator, default_sentinel_t)): Add operator.\n+\t* testsuite/24_iterators/istream_iterator/cons/sentinel.cc:\n+\tNew test.\n+\t* testsuite/24_iterators/istream_iterator/sentinel.cc: New test.\n+\t* testsuite/24_iterators/istreambuf_iterator/cons/sentinel.cc:\n+\tNew test.\n+\t* testsuite/24_iterators/istreambuf_iterator/sentinel.cc: New test.\n+\n \t* include/std/ranges (__deep_const_range, __enable_view_impl): Remove.\n \t(ranges::enable_view): Simplify (LWG 3326).\n \t* include/bits/range_access.h (ranges::enable_view): Declare."}, {"sha": "1ddf647f7290480934c44c17c4ae325515735bc4", "filename": "libstdc++-v3/include/bits/stream_iterator.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120e873484f20d9a0b8400e2e464ac5b2088a747/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstream_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120e873484f20d9a0b8400e2e464ac5b2088a747/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstream_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstream_iterator.h?ref=120e873484f20d9a0b8400e2e464ac5b2088a747", "patch": "@@ -77,6 +77,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         _M_ok(__obj._M_ok)\n       { }\n \n+#if __cplusplus > 201703L\n+      constexpr\n+      istream_iterator(default_sentinel_t) noexcept\n+      : istream_iterator() { }\n+#endif\n+\n #if __cplusplus >= 201103L\n       istream_iterator& operator=(const istream_iterator&) = default;\n       ~istream_iterator() = default;\n@@ -145,6 +151,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       friend bool\n       operator!=(const istream_iterator& __x, const istream_iterator& __y)\n       { return !__x._M_equal(__y); }\n+\n+#if __cplusplus > 201703L\n+      friend bool\n+      operator==(const istream_iterator& __i, default_sentinel_t)\n+      { return !__i._M_stream; }\n+#endif\n     };\n \n   /**\n@@ -166,6 +178,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     public:\n       //@{\n       /// Public typedef\n+#if __cplusplus > 201703L\n+      using difference_type = ptrdiff_t;\n+#endif\n       typedef _CharT                         char_type;\n       typedef _Traits                        traits_type;\n       typedef basic_ostream<_CharT, _Traits> ostream_type;"}, {"sha": "fc06c50040ce0a58023074f32450739c64e893aa", "filename": "libstdc++-v3/include/bits/streambuf_iterator.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120e873484f20d9a0b8400e2e464ac5b2088a747/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120e873484f20d9a0b8400e2e464ac5b2088a747/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h?ref=120e873484f20d9a0b8400e2e464ac5b2088a747", "patch": "@@ -115,6 +115,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _GLIBCXX_CONSTEXPR istreambuf_iterator() _GLIBCXX_USE_NOEXCEPT\n       : _M_sbuf(0), _M_c(traits_type::eof()) { }\n \n+#if __cplusplus > 201703L\n+      constexpr istreambuf_iterator(default_sentinel_t) noexcept\n+      : istreambuf_iterator() { }\n+#endif\n+\n #if __cplusplus >= 201103L\n       istreambuf_iterator(const istreambuf_iterator&) noexcept = default;\n \n@@ -209,6 +214,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tconst int_type __eof = traits_type::eof();\n \treturn traits_type::eq_int_type(__c, __eof);\n       }\n+\n+#if __cplusplus > 201703L\n+      friend bool\n+      operator==(const istreambuf_iterator& __i, default_sentinel_t __s)\n+      { return __i._M_at_eof(); }\n+#endif\n     };\n \n   template<typename _CharT, typename _Traits>"}, {"sha": "77a19498817850e7b16ae0f625504da9ee8bd805", "filename": "libstdc++-v3/testsuite/24_iterators/istream_iterator/cons/sentinel.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120e873484f20d9a0b8400e2e464ac5b2088a747/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistream_iterator%2Fcons%2Fsentinel.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120e873484f20d9a0b8400e2e464ac5b2088a747/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistream_iterator%2Fcons%2Fsentinel.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistream_iterator%2Fcons%2Fsentinel.cc?ref=120e873484f20d9a0b8400e2e464ac5b2088a747", "patch": "@@ -0,0 +1,27 @@\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <iterator>\n+\n+// C++20 doesn't require this to be non-throwing.\n+static_assert( std::is_nothrow_constructible_v<std::istream_iterator<int>,\n+\t\t\t\t\t       std::default_sentinel_t> );\n+\n+constexpr std::istream_iterator<int> i = std::default_sentinel;"}, {"sha": "ec0c7db56fdc7a35bf5e6826c0eb8d9bffd354d4", "filename": "libstdc++-v3/testsuite/24_iterators/istream_iterator/sentinel.cc", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120e873484f20d9a0b8400e2e464ac5b2088a747/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistream_iterator%2Fsentinel.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120e873484f20d9a0b8400e2e464ac5b2088a747/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistream_iterator%2Fsentinel.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistream_iterator%2Fsentinel.cc?ref=120e873484f20d9a0b8400e2e464ac5b2088a747", "patch": "@@ -0,0 +1,57 @@\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <iterator>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  static_assert( std::sentinel_for<std::default_sentinel_t,\n+\t\t\t\t   std::istream_iterator<std::string>> );\n+  static_assert( std::sentinel_for<std::default_sentinel_t,\n+\t\t\t\t   std::istream_iterator<int>> );\n+\n+  std::istream_iterator<int> i = std::default_sentinel;\n+  VERIFY( i == std::default_sentinel );\n+  VERIFY( std::default_sentinel == i );\n+}\n+\n+void\n+test02()\n+{\n+  std::istringstream in(\"1 2 3\");\n+  std::istream_iterator<int> iter(in);\n+  VERIFY( iter != std::default_sentinel );\n+  VERIFY( std::default_sentinel != iter );\n+\n+  *iter++;\n+  *iter++;\n+  *iter++;\n+  VERIFY( iter == std::default_sentinel );\n+  VERIFY( std::default_sentinel == iter );\n+}\n+\n+int main()\n+{\n+  test01();\n+  test02();\n+}"}, {"sha": "0b05fb532e512d833deeb8a2798f4e951633df32", "filename": "libstdc++-v3/testsuite/24_iterators/istreambuf_iterator/cons/sentinel.cc", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120e873484f20d9a0b8400e2e464ac5b2088a747/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator%2Fcons%2Fsentinel.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120e873484f20d9a0b8400e2e464ac5b2088a747/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator%2Fcons%2Fsentinel.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator%2Fcons%2Fsentinel.cc?ref=120e873484f20d9a0b8400e2e464ac5b2088a747", "patch": "@@ -0,0 +1,26 @@\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <iterator>\n+\n+static_assert( std::is_nothrow_constructible_v<std::istreambuf_iterator<char>,\n+\t\t\t\t\t       std::default_sentinel_t> );\n+\n+constexpr std::istreambuf_iterator<char> i = std::default_sentinel;"}]}