{"sha": "7136db7ac5b31e9b7ade5a740bb7201bbf0faebd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEzNmRiN2FjNWIzMWU5YjdhZGU1YTc0MGJiNzIwMWJiZjBmYWViZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-05-15T17:35:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-05-15T17:35:48Z"}, "message": "re PR tree-optimization/27603 (wrong code, apparently due to bad VRP (-O2))\n\n2006-05-15  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/27603\n\t* tree-ssa-loop-niter.c (infer_loop_bounds_from_undefined):\n\tDo computations in original type.\n\n\t* gcc.dg/torture/pr27603.c: New testcase.\n\nFrom-SVN: r113797", "tree": {"sha": "346efb9b7010a61806bedde644eb95404dec240d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/346efb9b7010a61806bedde644eb95404dec240d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7136db7ac5b31e9b7ade5a740bb7201bbf0faebd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7136db7ac5b31e9b7ade5a740bb7201bbf0faebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7136db7ac5b31e9b7ade5a740bb7201bbf0faebd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7136db7ac5b31e9b7ade5a740bb7201bbf0faebd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6398823e7ff715272f35ceae58da3d3219523cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6398823e7ff715272f35ceae58da3d3219523cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6398823e7ff715272f35ceae58da3d3219523cc"}], "stats": {"total": 55, "additions": 42, "deletions": 13}, "files": [{"sha": "7e559a4ce8a5e7f812320f1bc63016979e6441c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7136db7ac5b31e9b7ade5a740bb7201bbf0faebd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7136db7ac5b31e9b7ade5a740bb7201bbf0faebd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7136db7ac5b31e9b7ade5a740bb7201bbf0faebd", "patch": "@@ -1,3 +1,9 @@\n+2006-05-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/27603\n+\t* tree-ssa-loop-niter.c (infer_loop_bounds_from_undefined):\n+\tDo computations in original type.\n+\n 2006-05-15  Mircea Namolaru  <namolaru@il.ibm.com>\n \n         * see.c: Code style changes such as redundant paranthesis,"}, {"sha": "771256a464f2b620c50d5f1a7761002e0ea13a1a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7136db7ac5b31e9b7ade5a740bb7201bbf0faebd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7136db7ac5b31e9b7ade5a740bb7201bbf0faebd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7136db7ac5b31e9b7ade5a740bb7201bbf0faebd", "patch": "@@ -1,3 +1,8 @@\n+2006-05-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/27603\n+\t* gcc.dg/torture/pr27603.c: New testcase.\n+\n 2006-05-15  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/25090"}, {"sha": "8cb0235abe418b730ead631ee5b19a06deb950dd", "filename": "gcc/testsuite/gcc.dg/torture/pr27603.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7136db7ac5b31e9b7ade5a740bb7201bbf0faebd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr27603.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7136db7ac5b31e9b7ade5a740bb7201bbf0faebd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr27603.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr27603.c?ref=7136db7ac5b31e9b7ade5a740bb7201bbf0faebd", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+\n+void exit (int);\n+void abort (void);\n+int a;\n+int main()\n+{\n+  int j;\n+  for (j = 0; j < 6; j++)\n+  {\n+    if ((unsigned)j - 3 <= 1)\n+      exit (0);\n+    a = 1000 * (6 - j);\n+  }\n+  abort ();\n+}"}, {"sha": "4dd05ea6d169728105cfa43da933401248c0d6fd", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7136db7ac5b31e9b7ade5a740bb7201bbf0faebd/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7136db7ac5b31e9b7ade5a740bb7201bbf0faebd/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=7136db7ac5b31e9b7ade5a740bb7201bbf0faebd", "patch": "@@ -1587,7 +1587,6 @@ infer_loop_bounds_from_undefined (struct loop *loop)\n \t\t    tree scev = instantiate_parameters \n \t\t      (loop, analyze_scalar_evolution (loop, op0));\n \t\t    tree type = chrec_type (scev);\n-\t\t    tree utype;\n \n \t\t    if (chrec_contains_undetermined (scev)\n \t\t\t|| TYPE_UNSIGNED (type))\n@@ -1604,20 +1603,23 @@ infer_loop_bounds_from_undefined (struct loop *loop)\n \t\t\t|| TYPE_MAX_VALUE (type) == NULL_TREE)\n \t\t      break;\n \n-\t\t    utype = unsigned_type_for (type);\n-\t\t    if (tree_int_cst_lt (step, integer_zero_node))\n-\t\t      diff = fold_build2 (MINUS_EXPR, utype, init,\n-\t\t\t\t\t  TYPE_MIN_VALUE (type));\n-\t\t    else\n-\t\t      diff = fold_build2 (MINUS_EXPR, utype,\n-\t\t\t\t\t  TYPE_MAX_VALUE (type), init);\n-\n-\t\t    if (!integer_zerop (step))\n+\t\t    if (integer_nonzerop (step))\n \t\t      {\n-\t\t\testimation = fold_build2 (CEIL_DIV_EXPR, utype, diff,\n+\t\t\ttree utype;\n+\n+\t\t\tif (tree_int_cst_lt (step, integer_zero_node))\n+\t\t\t  diff = fold_build2 (MINUS_EXPR, type, init,\n+\t\t\t\t\t      TYPE_MIN_VALUE (type));\n+\t\t\telse\n+\t\t\t  diff = fold_build2 (MINUS_EXPR, type,\n+\t\t\t\t\t      TYPE_MAX_VALUE (type), init);\n+\n+\t\t\tutype = unsigned_type_for (type);\n+\t\t\testimation = fold_build2 (CEIL_DIV_EXPR, type, diff,\n \t\t\t\t\t\t  step);\n-\t\t\trecord_estimate (loop, estimation, boolean_true_node,\n-\t\t\t\t\t stmt);\n+\t\t\trecord_estimate (loop,\n+\t\t\t\t\t fold_convert (utype, estimation),\n+\t\t\t\t\t boolean_true_node, stmt);\n \t\t      }\n \t\t  }\n "}]}