{"sha": "f4853e92cffdad046f14089c9857c5b583ca654e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ4NTNlOTJjZmZkYWQwNDZmMTQwODljOTg1N2M1YjU4M2NhNjU0ZQ==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2014-05-13T23:44:42Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2014-05-13T23:44:42Z"}, "message": "sourcebuild.texi: (dfp_hw): Document.\n\ngcc/\n\t* doc/sourcebuild.texi: (dfp_hw): Document.\n\t(p8vector_hw): Likewise.\n\t(powerpc_eabi_ok): Likewise.\n\t(powerpc_elfv2): Likewise.\n\t(powerpc_htm_ok): Likewise.\n\t(ppc_recip_hw): Likewise.\n\t(vsx_hw): Likewise.\n\ngcc/testsuite/\n\t* lib/target-support.exp (check_dfp_hw_available): New function.\n\t(is-effective-target): Check $arg for dfp_hw.\n\t(is-effective-target-keyword): Likewise.\n\t* gcc.target/powerpc/pack03.c: (dg-require-effective-target):\n\tChange target to dfp_hw.\n\nFrom-SVN: r210404", "tree": {"sha": "7608739ea7cae99622996508bce6adf83bf96c50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7608739ea7cae99622996508bce6adf83bf96c50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4853e92cffdad046f14089c9857c5b583ca654e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4853e92cffdad046f14089c9857c5b583ca654e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4853e92cffdad046f14089c9857c5b583ca654e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4853e92cffdad046f14089c9857c5b583ca654e/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0035dca698e5e09dea846ec2d3f77aec0056274", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0035dca698e5e09dea846ec2d3f77aec0056274", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0035dca698e5e09dea846ec2d3f77aec0056274"}], "stats": {"total": 79, "additions": 75, "deletions": 4}, "files": [{"sha": "ce44dbd3849f3a9bd9b734ff911886c34724b7be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4853e92cffdad046f14089c9857c5b583ca654e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4853e92cffdad046f14089c9857c5b583ca654e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4853e92cffdad046f14089c9857c5b583ca654e", "patch": "@@ -1,3 +1,13 @@\n+2014-05-13  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* doc/sourcebuild.texi: (dfp_hw): Document.\n+\t(p8vector_hw): Likewise.\n+\t(powerpc_eabi_ok): Likewise.\n+\t(powerpc_elfv2): Likewise.\n+\t(powerpc_htm_ok): Likewise.\n+\t(ppc_recip_hw): Likewise.\n+\t(vsx_hw): Likewise.\n+\n 2014-05-13  Cary Coutant  <ccoutant@google.com>\n \n \t* opts.c (finish_options): Use -ggnu-pubnames with -gsplit-dwarf."}, {"sha": "7438980f08e30b459b9078132ed2e3b2c1d6e084", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4853e92cffdad046f14089c9857c5b583ca654e/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4853e92cffdad046f14089c9857c5b583ca654e/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=f4853e92cffdad046f14089c9857c5b583ca654e", "patch": "@@ -1601,6 +1601,13 @@ MIPS target supports @code{-mpaired-single}.\n @subsubsection PowerPC-specific attributes\n \n @table @code\n+\n+@item dfp_hw\n+PowerPC target supports executing hardware DFP instructions.\n+\n+@item p8vector_hw\n+PowerPC target supports executing VSX instructions (ISA 2.07).\n+\n @item powerpc64\n Test system supports executing 64-bit instructions.\n \n@@ -1610,12 +1617,24 @@ PowerPC target supports AltiVec.\n @item powerpc_altivec_ok\n PowerPC target supports @code{-maltivec}.\n \n+@item powerpc_eabi_ok\n+PowerPC target supports @code{-meabi}.\n+\n+@item powerpc_elfv2\n+PowerPC target supports @code{-mabi=elfv2}.\n+\n @item powerpc_fprs\n PowerPC target supports floating-point registers.\n \n @item powerpc_hard_double\n PowerPC target supports hardware double-precision floating-point.\n \n+@item powerpc_htm_ok\n+PowerPC target supports @code{-mhtm}\n+\n+@item powerpc_p8vector_ok\n+PowerPC target supports @code{-mpower8-vector}\n+\n @item powerpc_ppu_ok\n PowerPC target supports @code{-mcpu=cell}.\n \n@@ -1629,18 +1648,24 @@ PowerPC target supports PowerPC SPE.\n @item powerpc_spu\n PowerPC target supports PowerPC SPU.\n \n-@item spu_auto_overlay\n-SPU target has toolchain that supports automatic overlay generation.\n-\n @item powerpc_vsx_ok\n PowerPC target supports @code{-mvsx}.\n \n @item powerpc_405_nocache\n Including the options used to compile this particular test, the\n PowerPC target supports PowerPC 405.\n \n+@item ppc_recip_hw\n+PowerPC target supports executing reciprocal estimate instructions.\n+\n+@item spu_auto_overlay\n+SPU target has toolchain that supports automatic overlay generation.\n+\n @item vmx_hw\n PowerPC target supports executing AltiVec instructions.\n+\n+@item vsx_hw\n+PowerPC target supports executing VSX instructions (ISA 2.06).\n @end table\n \n @subsubsection Other hardware attributes"}, {"sha": "8508f3770f4d1564da20f76b46d27b65b76afda9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4853e92cffdad046f14089c9857c5b583ca654e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4853e92cffdad046f14089c9857c5b583ca654e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f4853e92cffdad046f14089c9857c5b583ca654e", "patch": "@@ -1,3 +1,11 @@\n+2014-05-13  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* lib/target-support.exp (check_dfp_hw_available): New function.\n+\t(is-effective-target): Check $arg for dfp_hw.\n+\t(is-effective-target-keyword): Likewise.\n+\t* gcc.target/powerpc/pack03.c: (dg-require-effective-target):\n+\tChange target to dfp_hw.\n+\n 2014-05-13  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/61162"}, {"sha": "dfaf2efa07e043cb55aaa56793180e59083a8d70", "filename": "gcc/testsuite/gcc.target/powerpc/pack03.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4853e92cffdad046f14089c9857c5b583ca654e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpack03.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4853e92cffdad046f14089c9857c5b583ca654e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpack03.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpack03.c?ref=f4853e92cffdad046f14089c9857c5b583ca654e", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run { target { powerpc*-*-linux* } } } */\n /* { dg-skip-if \"\" { powerpc*-*-darwin* } { \"*\" } { \"\" } } */\n /* { dg-skip-if \"\" { powerpc*-*-*spe* } { \"*\" } { \"\" } } */\n-/* { dg-require-effective-target dfprt } */\n+/* { dg-require-effective-target dfp_hw } */\n /* { dg-options \"-O2 -mhard-dfp\" } */\n \n #include <stddef.h>"}, {"sha": "8aafc935a98a54629775abf1439bc33a0d7aac3c", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4853e92cffdad046f14089c9857c5b583ca654e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4853e92cffdad046f14089c9857c5b583ca654e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=f4853e92cffdad046f14089c9857c5b583ca654e", "patch": "@@ -1956,6 +1956,32 @@ proc check_effective_target_dfprt { } {\n     }]\n }\n \n+# Return 1 if the target supports executing DFP hardware instructions,\n+# 0 otherwise.  Cache the result.\n+\n+proc check_dfp_hw_available { } {\n+    return [check_cached_effective_target dfp_hw_available {\n+\t# For now, disable on Darwin\n+\tif { [istarget powerpc-*-eabi] || [istarget powerpc*-*-eabispe] || [istarget *-*-darwin*]} {\n+\t    expr 0\n+\t} else {\n+\t    check_runtime_nocache dfp_hw_available {\n+\t\tvolatile _Decimal64 r;\n+\t\tvolatile _Decimal64 a = 4.0DD;\n+\t\tvolatile _Decimal64 b = 2.0DD;\n+\t\tint main()\n+\t\t{\n+\t\t  asm volatile (\"dadd %0,%1,%2\" : \"=d\" (r) : \"d\" (a), \"d\" (b));\n+\t\t  asm volatile (\"dsub %0,%1,%2\" : \"=d\" (r) : \"d\" (a), \"d\" (b));\n+\t\t  asm volatile (\"dmul %0,%1,%2\" : \"=d\" (r) : \"d\" (a), \"d\" (b));\n+\t\t  asm volatile (\"ddiv %0,%1,%2\" : \"=d\" (r) : \"d\" (a), \"d\" (b));\n+\t\t  return 0;\n+\t\t}\n+\t    } \"-mcpu=power6 -mhard-float\"\n+\t}\n+    }]\n+}\n+\n # Return 1 if the target supports compiling and assembling UCN, 0 otherwise.\n \n proc check_effective_target_ucn_nocache { } {\n@@ -4936,6 +4962,7 @@ proc is-effective-target { arg } {\n \t  \"vsx_hw\"         { set selected [check_vsx_hw_available] }\n \t  \"p8vector_hw\"    { set selected [check_p8vector_hw_available] }\n \t  \"ppc_recip_hw\"   { set selected [check_ppc_recip_hw_available] }\n+\t  \"dfp_hw\"         { set selected [check_dfp_hw_available] }\n \t  \"named_sections\" { set selected [check_named_sections_available] }\n \t  \"gc_sections\"    { set selected [check_gc_sections_available] }\n \t  \"cxa_atexit\"     { set selected [check_cxa_atexit_available] }\n@@ -4958,6 +4985,7 @@ proc is-effective-target-keyword { arg } {\n \t  \"vsx_hw\"         { return 1 }\n \t  \"p8vector_hw\"    { return 1 }\n \t  \"ppc_recip_hw\"   { return 1 }\n+\t  \"dfp_hw\"         { return 1 }\n \t  \"named_sections\" { return 1 }\n \t  \"gc_sections\"    { return 1 }\n \t  \"cxa_atexit\"     { return 1 }"}]}