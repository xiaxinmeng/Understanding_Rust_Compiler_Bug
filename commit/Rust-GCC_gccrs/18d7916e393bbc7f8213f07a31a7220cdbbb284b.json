{"sha": "18d7916e393bbc7f8213f07a31a7220cdbbb284b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThkNzkxNmUzOTNiYmM3ZjgyMTNmMDdhMzFhNzIyMGNkYmJiMjg0Yg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2004-07-27T15:43:31Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2004-07-27T15:43:31Z"}, "message": "m32r.c: Include integrate.h in order to get the prototype for get_hard_reg_initial_val().\n\n* config/m32r/m32r.c: Include integrate.h in order to get the prototype for\n  get_hard_reg_initial_val().\n* config/m32r/m32r.md (m32rpipeline): Remove unused value \"m32r\" and tidy up\n  indentation.\n  (final_presence_set): Use absence_set instead, so that if there is nothing in\n  the \"o\" pipe the \"s\" pipe can be scheduled.\n\nFrom-SVN: r85221", "tree": {"sha": "21cd6e77f235e2a0f848ce971689d2eb4a019efc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21cd6e77f235e2a0f848ce971689d2eb4a019efc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18d7916e393bbc7f8213f07a31a7220cdbbb284b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18d7916e393bbc7f8213f07a31a7220cdbbb284b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18d7916e393bbc7f8213f07a31a7220cdbbb284b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18d7916e393bbc7f8213f07a31a7220cdbbb284b/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ae2a5d113b83ce7e61a50f5484e6221d81a2c5c"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "504a2da84a34710410a1b31be8399cd656be2b89", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d7916e393bbc7f8213f07a31a7220cdbbb284b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d7916e393bbc7f8213f07a31a7220cdbbb284b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18d7916e393bbc7f8213f07a31a7220cdbbb284b", "patch": "@@ -1,3 +1,13 @@\n+2004-07-27  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/m32r/m32r.c: Include integrate.h in order to get the\n+\tprototype for get_hard_reg_initial_val().\n+\n+\t* config/m32r/m32r.md (m32rpipeline): Remove unused value \"m32r\"\n+\tand tidy up indentation.\n+\t(final_presence_set): Use absence_set instead, so that if there is\n+\tnothing in the \"o\" pipe the \"s\" pipe can be scheduled.\n+\n 2004-07-27  Diego Novillo  <dnovillo@redhat.com>\n \n \t* tree-ssa-alias.c (create_name_tags): Ignore pointers that"}, {"sha": "52dbb770555fe7fc52f30f9265a96e3e13ffbfd6", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d7916e393bbc7f8213f07a31a7220cdbbb284b/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d7916e393bbc7f8213f07a31a7220cdbbb284b/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=18d7916e393bbc7f8213f07a31a7220cdbbb284b", "patch": "@@ -38,6 +38,7 @@\n #include \"recog.h\"\n #include \"toplev.h\"\n #include \"ggc.h\"\n+#include \"integrate.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"target-def.h\""}, {"sha": "46c6a339aadab2db6ec998bd7fb2837ab6978fbb", "filename": "gcc/config/m32r/m32r.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d7916e393bbc7f8213f07a31a7220cdbbb284b/gcc%2Fconfig%2Fm32r%2Fm32r.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d7916e393bbc7f8213f07a31a7220cdbbb284b/gcc%2Fconfig%2Fm32r%2Fm32r.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.md?ref=18d7916e393bbc7f8213f07a31a7220cdbbb284b", "patch": "@@ -77,20 +77,20 @@\n ;; Defines the pipeline where an instruction can be executed on.\n ;; For the M32R, a short instruction can execute one of the two pipes.\n ;; For the M32Rx, the restrictions are modelled in the second\n-;; condition of this attribute definition.\n-(define_attr \"m32r_pipeline\" \"either,s,o,long,m32r\"\n+;;  condition of this attribute definition.\n+(define_attr \"m32r_pipeline\" \"either,s,o,long\"\n   (cond [(and (eq_attr \"cpu\" \"m32r\")\n \t      (eq_attr \"insn_size\" \"short\"))\n \t     (const_string \"either\")\n          (eq_attr \"insn_size\" \"!short\")\n \t     (const_string \"long\")]\n-\t(cond [(eq_attr \"type\" \"int2\")\n+\t (cond [(eq_attr \"type\" \"int2\")\n \t\t   (const_string \"either\")\n-\t       (eq_attr \"type\" \"load2,store2,shift2,uncond_branch,branch,call\")\n+\t        (eq_attr \"type\" \"load2,store2,shift2,uncond_branch,branch,call\")\n \t\t   (const_string \"o\")\n-\t       (eq_attr \"type\" \"mul2\")\n+\t        (eq_attr \"type\" \"mul2\")\n \t\t   (const_string \"s\")]\n-\t       (const_string \"long\"))))\n+\t (const_string \"long\"))))\n \f\n ;; ::::::::::::::::::::\n ;; ::\n@@ -125,8 +125,8 @@\n (define_cpu_unit \"o_IF,s_IF,o_E,s_E,memory\" \"m32r\")\n \n ;; Prevent the s pipe from being reserved before the o pipe.\n-(final_presence_set \"s_IF\" \"o_IF\")\n-(final_presence_set \"s_E\" \"o_E\")\n+(absence_set \"s_IF\" \"o_IF\")\n+(absence_set \"s_E\"  \"o_E\")\n \n ;; On the M32Rx, long instructions execute on both pipes, so reserve\n ;; both fetch slots and both pipes."}]}