{"sha": "36d51583bf75a28e824b2df02e128e3b9beac3ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZkNTE1ODNiZjc1YTI4ZTgyNGIyZGYwMmUxMjhlM2I5YmVhYzNlZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-27T17:04:57Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-27T17:04:57Z"}, "message": "(EXTRA_CONSTRAINT, case 'Q'): Check for MEM instead of calling memory_operand.\n\n(SHIFT_COUNT_TRUNCATED): No longer define this.\n\nFrom-SVN: r2261", "tree": {"sha": "99d507f834cbe008a787109918003348c45d820f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99d507f834cbe008a787109918003348c45d820f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36d51583bf75a28e824b2df02e128e3b9beac3ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d51583bf75a28e824b2df02e128e3b9beac3ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36d51583bf75a28e824b2df02e128e3b9beac3ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d51583bf75a28e824b2df02e128e3b9beac3ed/comments", "author": null, "committer": null, "parents": [{"sha": "e4e0d64982af015f48c24ce4127dcbee07a8d99c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4e0d64982af015f48c24ce4127dcbee07a8d99c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4e0d64982af015f48c24ce4127dcbee07a8d99c"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "7ea85896ad63738b8dfb390a9d9987bf8c88e75a", "filename": "gcc/config/romp/romp.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d51583bf75a28e824b2df02e128e3b9beac3ed/gcc%2Fconfig%2Fromp%2Fromp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d51583bf75a28e824b2df02e128e3b9beac3ed/gcc%2Fconfig%2Fromp%2Fromp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.h?ref=36d51583bf75a28e824b2df02e128e3b9beac3ed", "patch": "@@ -421,7 +421,7 @@ enum reg_class { NO_REGS, R0_REGS, R15_REGS, BASE_REGS, GENERAL_REGS,\n      && REGNO (OP) >= FIRST_PSEUDO_REGISTER\t\t\\\n      && reg_renumber != 0\t\t\t\t\\\n      && reg_renumber[REGNO (OP)] < 0)\t\t\t\\\n-    || (memory_operand (OP, VOIDmode)\t\t\t\\\n+    || (GET_CODE (OP) == MEM\t\t\t\t\\\n         && ! symbolic_memory_operand (OP, VOIDmode)))\t\\\n    : (C) == 'R' ? current_function_operand (OP, VOIDmode) \\\n    : (C) == 'S' ? constant_pool_address_operand (OP, VOIDmode) \\\n@@ -1226,8 +1226,12 @@ struct rt_cargs {int gregs, fregs; };\n #define NO_FUNCTION_CSE\n \n /* Define this if shift instructions ignore all but the low-order\n-   few bits. */\n-#define SHIFT_COUNT_TRUNCATED\n+   few bits.\n+\n+   This is not true on the RT since it uses the low-order 6, not 5, bits.\n+   At some point, this should be extended to see how to express that.  */\n+\n+/* #define SHIFT_COUNT_TRUNCATED */\n \n /* Compute the cost of computing a constant rtl expression RTX whose\n    rtx-code is CODE, contained within an expression of code OUTER_CODE."}]}