{"sha": "c98446bc37da231419f6524d788dc6a4712458c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk4NDQ2YmMzN2RhMjMxNDE5ZjY1MjRkNzg4ZGM2YTQ3MTI0NThjOA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2018-07-05T09:10:55Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2018-07-05T09:10:55Z"}, "message": "[testsuite] Remove 'note:' from scan-tree-dump directives\n\n2018-07-05  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* c-c++-common/unroll-1.c: Remove 'note:' in matching string.\n\t* c-c++-common/unroll-2.c: Likewise.\n\t* g++.dg/cdce3.C: Likewise.\n\t* g++.dg/ext/unroll-1.C: Likewise.\n\t* g++.dg/ext/unroll-2.C: Likewise.\n\t* g++.dg/ext/unroll-3.C: Likewise.\n\t* gcc.dg/cdce1.c: Likewise.\n\t* gcc.dg/cdce2.c: Likewise.\n\t* gcc.dg/gomp/pr68128-1.c: Likewise.\n\t* gcc.dg/vect/pr46032.c: Likewise.\n\t* gcc.dg/vect/vect-cond-10.c: Likewise.\n\t* gcc.dg/vect/vect-cond-8.c: Likewise.\n\t* gcc.dg/vect/vect-cond-9.c: Likewise.\n\t* gcc.dg/vect/vect-mask-load-1.c: Likewise.\n\t* gcc.dg/vect/vect-mask-loadstore-1.c: Likewise.\n\t* gcc.target/i386/avx-cvt-2.c: Likewise.\n\t* gcc.target/i386/avx-cvt-3.c: Likewise.\n\t* gcc.target/i386/avx2-cvt-2.c: Likewise.\n\t* gcc.target/i386/avx2-gather-2.c: Likewise.\n\t* gcc.target/i386/avx2-gather-6.c: Likewise.\n\t* gcc.target/i386/avx512f-gather-2.c: Likewise.\n\t* gcc.target/i386/sse2-cvt-2.c: Likewise.\n\t* gfortran.dg/directive_unroll_1.f90: Likewise.\n\t* gfortran.dg/directive_unroll_2.f90: Likewise.\n\t* gnat.dg/unroll2.adb: Likewise.\n\t* gnat.dg/unroll3.adb: Likewise.\n\nFrom-SVN: r262432", "tree": {"sha": "3d8cd724d74968d0476cbb5eb1a5ffa4ae2ab200", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d8cd724d74968d0476cbb5eb1a5ffa4ae2ab200"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c98446bc37da231419f6524d788dc6a4712458c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98446bc37da231419f6524d788dc6a4712458c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c98446bc37da231419f6524d788dc6a4712458c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98446bc37da231419f6524d788dc6a4712458c8/comments", "author": null, "committer": null, "parents": [{"sha": "ab7f778cee91ecb52fa9cd4594efaca8db8a8951", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab7f778cee91ecb52fa9cd4594efaca8db8a8951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab7f778cee91ecb52fa9cd4594efaca8db8a8951"}], "stats": {"total": 115, "additions": 72, "deletions": 43}, "files": [{"sha": "db1197e8eba6310902b17fa27494966bb60bca2f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -1,3 +1,32 @@\n+2018-07-05  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* c-c++-common/unroll-1.c: Remove 'note:' in matching string.\n+\t* c-c++-common/unroll-2.c: Likewise.\n+\t* g++.dg/cdce3.C: Likewise.\n+\t* g++.dg/ext/unroll-1.C: Likewise.\n+\t* g++.dg/ext/unroll-2.C: Likewise.\n+\t* g++.dg/ext/unroll-3.C: Likewise.\n+\t* gcc.dg/cdce1.c: Likewise.\n+\t* gcc.dg/cdce2.c: Likewise.\n+\t* gcc.dg/gomp/pr68128-1.c: Likewise.\n+\t* gcc.dg/vect/pr46032.c: Likewise.\n+\t* gcc.dg/vect/vect-cond-10.c: Likewise.\n+\t* gcc.dg/vect/vect-cond-8.c: Likewise.\n+\t* gcc.dg/vect/vect-cond-9.c: Likewise.\n+\t* gcc.dg/vect/vect-mask-load-1.c: Likewise.\n+\t* gcc.dg/vect/vect-mask-loadstore-1.c: Likewise.\n+\t* gcc.target/i386/avx-cvt-2.c: Likewise.\n+\t* gcc.target/i386/avx-cvt-3.c: Likewise.\n+\t* gcc.target/i386/avx2-cvt-2.c: Likewise.\n+\t* gcc.target/i386/avx2-gather-2.c: Likewise.\n+\t* gcc.target/i386/avx2-gather-6.c: Likewise.\n+\t* gcc.target/i386/avx512f-gather-2.c: Likewise.\n+\t* gcc.target/i386/sse2-cvt-2.c: Likewise.\n+\t* gfortran.dg/directive_unroll_1.f90: Likewise.\n+\t* gfortran.dg/directive_unroll_2.f90: Likewise.\n+\t* gnat.dg/unroll2.adb: Likewise.\n+\t* gnat.dg/unroll3.adb: Likewise.\n+\n 2018-07-05  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/gcc-dg.exp (dg-final): Simplify tcl code."}, {"sha": "105a82c62003510e1c67e010054764c6eb83477c", "filename": "gcc/testsuite/c-c++-common/unroll-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funroll-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funroll-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funroll-1.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -10,12 +10,12 @@ void test (void)\n   #pragma GCC unroll 8\n   for (unsigned long i = 1; i <= 8; ++i)\n     bar(i);\n-  /* { dg-final { scan-tree-dump \"11:.*: note: loop with 8 iterations completely unrolled\" \"cunrolli\" } } */\n+  /* { dg-final { scan-tree-dump \"11:.*: loop with 8 iterations completely unrolled\" \"cunrolli\" } } */\n \n   #pragma GCC unroll 8\n   for (unsigned long i = 1; i <= 7; ++i)\n     bar(i);\n-  /* { dg-final { scan-tree-dump \"16:.*: note: loop with 7 iterations completely unrolled\" \"cunrolli\" } } */\n+  /* { dg-final { scan-tree-dump \"16:.*: loop with 7 iterations completely unrolled\" \"cunrolli\" } } */\n \n   #pragma GCC unroll 8\n   for (unsigned long i = 1; i <= 15; ++i)"}, {"sha": "a67a1d75bc8f678ecddf40e6abc6adbb86ffaf26", "filename": "gcc/testsuite/c-c++-common/unroll-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funroll-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funroll-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funroll-2.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -10,12 +10,12 @@ void test (void)\n   #pragma GCC unroll 8\n   for (unsigned long i = 1; i <= 8; ++i)\n     bar(i);\n-  /* { dg-final { scan-tree-dump \"11:.*: note: loop with 7 iterations completely unrolled\" \"cunroll\" } } */\n+  /* { dg-final { scan-tree-dump \"11:.*: loop with 7 iterations completely unrolled\" \"cunroll\" } } */\n \n   #pragma GCC unroll 8\n   for (unsigned long i = 1; i <= 7; ++i)\n     bar(i);\n-  /* { dg-final { scan-tree-dump \"16:.*: note: loop with 6 iterations completely unrolled\" \"cunroll\" } } */\n+  /* { dg-final { scan-tree-dump \"16:.*: loop with 6 iterations completely unrolled\" \"cunroll\" } } */\n \n   #pragma GCC unroll 8\n   for (unsigned long i = 1; i <= 15; ++i)"}, {"sha": "4b547b5d994e04b5507b46b5dc5317b6edb16861", "filename": "gcc/testsuite/g++.dg/cdce3.C", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcdce3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcdce3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcdce3.C?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -4,22 +4,22 @@\n /* { dg-additional-options \"-DLARGE_LONG_DOUBLE\" { target large_long_double } } */\n /* { dg-additional-options \"-DGNU_EXTENSION\" { target pow10 } } */\n /* { dg-add-options ieee } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:91: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" { target pow10 } } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:92: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" { target pow10 } } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:94: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:95: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:96: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:97: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:98: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:99: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:100: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:101: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:102: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:103: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:104: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:105: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:106: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:107: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:91: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" { target pow10 } } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:92: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" { target pow10 } } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:94: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:95: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:96: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:97: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:98: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:99: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:100: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:101: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:102: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:103: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:104: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:105: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:106: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:107: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n \n #include <stdlib.h>\n #include <math.h>"}, {"sha": "aa11b2e6ef78fe98458acd9c633d6b4b1d00a799", "filename": "gcc/testsuite/g++.dg/ext/unroll-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funroll-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funroll-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funroll-1.C?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -16,4 +16,4 @@ bar (int *a, int *b, int *c)\n   foo <int> (a, b, c);\n }\n \n-// { dg-final { scan-tree-dump \"note: loop with 8 iterations completely unrolled\" \"cunrolli\" } }\n+// { dg-final { scan-tree-dump \"loop with 8 iterations completely unrolled\" \"cunrolli\" } }"}, {"sha": "f9ec892dbddfd3f390495fab445982f4e95b7c4b", "filename": "gcc/testsuite/g++.dg/ext/unroll-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funroll-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funroll-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funroll-2.C?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -10,4 +10,4 @@ foo (int (&a)[8], int *b, int *c)\n     a[i] = b[i] * c[i];\n }\n \n-// { dg-final { scan-tree-dump \"note: loop with 8 iterations completely unrolled\" \"cunrolli\" } }\n+// { dg-final { scan-tree-dump \"loop with 8 iterations completely unrolled\" \"cunrolli\" } }"}, {"sha": "dda94c56af22e2e96e84331df4a1cf94c59cb12c", "filename": "gcc/testsuite/g++.dg/ext/unroll-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funroll-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funroll-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funroll-3.C?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -17,4 +17,4 @@ bar (int (&a)[8], int *b, int *c)\n   foo <int> (a, b, c);\n }\n \n-// { dg-final { scan-tree-dump \"note: loop with 8 iterations completely unrolled\" \"cunrolli\" } }\n+// { dg-final { scan-tree-dump \"loop with 8 iterations completely unrolled\" \"cunrolli\" } }"}, {"sha": "b23ad6371126425e77e8128c25caf7e0840bc098", "filename": "gcc/testsuite/gcc.dg/cdce1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fcdce1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fcdce1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcdce1.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do  run  } */\n /* { dg-options \"-O2 -fmath-errno -fdump-tree-cdce-details  -lm\" } */\n /* { dg-require-effective-target int32plus } */\n-/* { dg-final { scan-tree-dump  \"cdce1.c:16: note: function call is shrink-wrapped into error conditions\\.\"  \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce1.c:16: .* function call is shrink-wrapped into error conditions\\.\"  \"cdce\" } } */\n /* { dg-require-effective-target large_double } */\n \n #include <stdlib.h>"}, {"sha": "30e7cb1fa0a8c9dc4b0e13fc0c300ef4be950c4e", "filename": "gcc/testsuite/gcc.dg/cdce2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fcdce2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fcdce2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcdce2.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do  run  } */\n /* { dg-skip-if \"doubles are floats\" { \"avr-*-*\" } } */\n /* { dg-options \"-O2 -fmath-errno -fdump-tree-cdce-details  -lm\" } */\n-/* { dg-final { scan-tree-dump  \"cdce2.c:15: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce2.c:15: .* function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n  \n #include <stdlib.h>\n #include <math.h>"}, {"sha": "01cc605ae0e7581a1c5e448f58fc9b37f7f40a92", "filename": "gcc/testsuite/gcc.dg/gomp/pr68128-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr68128-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr68128-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr68128-1.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -29,4 +29,4 @@ foo (float *u, float v, float w, float x, float y, float z, float t)\n     }\n }\n \n-/* { dg-final { scan-tree-dump \"note: vectorized 1 loops in function\" \"vect\" { target i?86-*-* x86_64-*-* } } } */\n+/* { dg-final { scan-tree-dump \"vectorized 1 loops in function\" \"vect\" { target i?86-*-* x86_64-*-* } } } */"}, {"sha": "bad87453a7de62024b89561b2dd5c0aa03a71a77", "filename": "gcc/testsuite/gcc.dg/vect/pr46032.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr46032.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr46032.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr46032.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -44,6 +44,6 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loop\" 1 \"vect\" { xfail { vect_no_align && { ! vect_hw_misalign } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loop\" 1 \"vect\" { xfail { vect_no_align && { ! vect_hw_misalign } } } } } */\n /* { dg-final { scan-tree-dump-not \"versioning for alias required\" \"vect\" } } */\n "}, {"sha": "b2f97d735ef7d94a80a67265b4535a1e228e20ca", "filename": "gcc/testsuite/gcc.dg/vect/vect-cond-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-cond-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-cond-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-cond-10.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -163,4 +163,4 @@ main ()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops\" 8 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 8 \"vect\" } } */"}, {"sha": "d888442aa456e7520cf57e4a07c0938849758068", "filename": "gcc/testsuite/gcc.dg/vect/vect-cond-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-cond-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-cond-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-cond-8.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -119,4 +119,4 @@ main ()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops\" 5 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 5 \"vect\" } } */"}, {"sha": "63eee1b47296d8c422b4ff899e5840ca4d4f59f5", "filename": "gcc/testsuite/gcc.dg/vect/vect-cond-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-cond-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-cond-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-cond-9.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -198,4 +198,4 @@ main ()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops\" 10 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 10 \"vect\" } } */"}, {"sha": "992cbda2e91628cd145d28c8fdabdb7a4d63ee68", "filename": "gcc/testsuite/gcc.dg/vect/vect-mask-load-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-mask-load-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-mask-load-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-mask-load-1.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -46,4 +46,4 @@ main ()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops\" 1 \"vect\" { target avx_runtime } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target avx_runtime } } } */"}, {"sha": "7d9dc5addf54264bf2fd0c733ccfb83bb1c8f20d", "filename": "gcc/testsuite/gcc.dg/vect/vect-mask-loadstore-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-mask-loadstore-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-mask-loadstore-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-mask-loadstore-1.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -44,4 +44,4 @@ main ()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops\" 1 \"vect\" { target avx_runtime } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target avx_runtime } } } */"}, {"sha": "1fbcf6e5025db37fa26af264255fceb44300d3b7", "filename": "gcc/testsuite/gcc.target/i386/avx-cvt-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-2.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -3,7 +3,7 @@\n \n #include \"avx-cvt-1.c\"\n \n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops in function\" 6 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 6 \"vect\" } } */\n /* { dg-final { scan-assembler \"vcvttpd2dq(y\\[^\\n\\r\\]*%xmm|\\[^\\n\\r\\]*xmm\\[^\\n\\r\\]*YMMWORD PTR)\" } } */\n /* { dg-final { scan-assembler \"vcvtdq2ps\\[^\\n\\r\\]*ymm\" } } */\n /* { dg-final { scan-assembler \"vcvtps2pd\\[^\\n\\r\\]*(%xmm\\[^\\n\\r\\]*%ymm|ymm\\[^\\n\\r\\]*xmm)\" } } */"}, {"sha": "33af620c76cc612ca79e940ba1fbd985bf593207", "filename": "gcc/testsuite/gcc.target/i386/avx-cvt-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-3.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -3,7 +3,7 @@\n \n #include \"avx-cvt-1.c\"\n \n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops in function\" 6 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 6 \"vect\" } } */\n /* { dg-final { scan-assembler \"vcvttpd2dq(x\\[^\\n\\r\\]*%xmm|\\[^\\n\\r\\]*xmm\\[^\\n\\r\\]*XMMWORD PTR)\" } } */\n /* { dg-final { scan-assembler \"vcvtdq2ps\\[^\\n\\r\\]*xmm\" } } */\n /* { dg-final { scan-assembler \"vcvtps2pd\\[^\\n\\r\\]*(%xmm\\[^\\n\\r\\]*%xmm|xmm\\[^\\n\\r\\]*xmm)\" } } */"}, {"sha": "d37809da81b70ef283705eb61344a62ab1ee44a8", "filename": "gcc/testsuite/gcc.target/i386/avx2-cvt-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-cvt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-cvt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-cvt-2.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -3,7 +3,7 @@\n \n #include \"avx2-cvt-1.c\"\n \n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops in function\" 6 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 6 \"vect\" } } */\n /* { dg-final { scan-assembler \"vcvttpd2dq(y\\[^\\n\\r\\]*%xmm|\\[^\\n\\r\\]*xmm\\[^\\n\\r\\]*YMMWORD PTR)\" } } */\n /* { dg-final { scan-assembler \"vcvtdq2ps\\[^\\n\\r\\]*ymm\" } } */\n /* { dg-final { scan-assembler \"vcvtps2pd\\[^\\n\\r\\]*(%xmm\\[^\\n\\r\\]*%ymm|ymm\\[^\\n\\r\\]*xmm)\" } } */"}, {"sha": "1a704afd834472057efb768a3e76fe980343ea5e", "filename": "gcc/testsuite/gcc.target/i386/avx2-gather-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-gather-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-gather-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-gather-2.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -3,4 +3,4 @@\n \n #include \"avx2-gather-1.c\"\n \n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops in function\" 16 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 16 \"vect\" } } */"}, {"sha": "b9119581ae2c9c37b613de201ec4de4ac5db06d7", "filename": "gcc/testsuite/gcc.target/i386/avx2-gather-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-gather-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-gather-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-gather-6.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -3,4 +3,4 @@\n \n #include \"avx2-gather-5.c\"\n \n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops in function\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 1 \"vect\" } } */"}, {"sha": "a26aa6529e87daaf18986b762d803f61ccc6ae29", "filename": "gcc/testsuite/gcc.target/i386/avx512f-gather-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-gather-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-gather-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-gather-2.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -7,4 +7,4 @@\n /* { dg-final { scan-assembler-not \"gather\\[^\\n\\]*xmm\\[^\\n\\]*ymm\" } } */\n /* { dg-final { scan-assembler-not \"gather\\[^\\n\\]*ymm\\[^\\n\\]*xmm\" } } */\n /* { dg-final { scan-assembler-not \"gather\\[^\\n\\]*xmm\\[^\\n\\]*xmm\" } } */\n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops in function\" 16 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 16 \"vect\" } } */"}, {"sha": "0ecafb2eaacfbdc8decc7ab92c4e7a6432c618aa", "filename": "gcc/testsuite/gcc.target/i386/sse2-cvt-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cvt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cvt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cvt-2.c?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -3,7 +3,7 @@\n \n #include \"sse2-cvt-1.c\"\n \n-/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops in function\" 6 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 6 \"vect\" } } */\n /* { dg-final { scan-assembler \"cvttpd2dq\" } } */\n /* { dg-final { scan-assembler \"cvtdq2ps\" } } */\n /* { dg-final { scan-assembler \"cvtps2pd\" } } */"}, {"sha": "85b3671c90937f76d117deea5bbec9bc8b6e6aec", "filename": "gcc/testsuite/gfortran.dg/directive_unroll_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirective_unroll_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirective_unroll_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirective_unroll_1.f90?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -12,7 +12,7 @@ subroutine test1(a)\n   DO i=1, 8, 1\n     call dummy(a(i))\n   ENDDO\n-! { dg-final { scan-tree-dump \"12:.*: note: loop with 8 iterations completely unrolled\" \"cunrolli\" } } */\n+! { dg-final { scan-tree-dump \"12:.*: loop with 8 iterations completely unrolled\" \"cunrolli\" } } */\n end subroutine test1\n \n subroutine test2(a, n)"}, {"sha": "6dff8faf3e0ee2e504edaa7c0324f0951be79230", "filename": "gcc/testsuite/gfortran.dg/directive_unroll_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirective_unroll_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirective_unroll_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirective_unroll_2.f90?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -12,7 +12,7 @@ subroutine test1(a)\n   DO i=1, 8, 1\n     call dummy(a(i))\n   ENDDO\n-! { dg-final { scan-tree-dump \"12:.*: note: loop with 7 iterations completely unrolled\" \"cunroll\" } } */\n+! { dg-final { scan-tree-dump \"12:.*: loop with 7 iterations completely unrolled\" \"cunroll\" } } */\n end subroutine test1\n \n subroutine test2(a, n)"}, {"sha": "1d3a75706de5acfdf9bb211cb731a9bd1cda5b71", "filename": "gcc/testsuite/gnat.dg/unroll2.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgnat.dg%2Funroll2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgnat.dg%2Funroll2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funroll2.adb?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -23,4 +23,4 @@ package body Unroll2 is\n \n end Unroll2;\n \n--- { dg-final { scan-tree-dump-times \"note: loop with 3 iterations completely unrolled\" 2 \"cunrolli\" } }\n+-- { dg-final { scan-tree-dump-times \"loop with 3 iterations completely unrolled\" 2 \"cunrolli\" } }"}, {"sha": "3bd06e7de762beb7519873fde20a89419a7c9fd5", "filename": "gcc/testsuite/gnat.dg/unroll3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgnat.dg%2Funroll3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98446bc37da231419f6524d788dc6a4712458c8/gcc%2Ftestsuite%2Fgnat.dg%2Funroll3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funroll3.adb?ref=c98446bc37da231419f6524d788dc6a4712458c8", "patch": "@@ -23,4 +23,4 @@ package body Unroll3 is\n \n end Unroll3;\n \n--- { dg-final { scan-tree-dump-times \"note: loop with 3 iterations completely unrolled\" 2 \"cunroll\" } }\n+-- { dg-final { scan-tree-dump-times \"loop with 3 iterations completely unrolled\" 2 \"cunroll\" } }"}]}