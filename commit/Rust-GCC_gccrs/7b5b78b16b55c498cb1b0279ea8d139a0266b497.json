{"sha": "7b5b78b16b55c498cb1b0279ea8d139a0266b497", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I1Yjc4YjE2YjU1YzQ5OGNiMWIwMjc5ZWE4ZDEzOWEwMjY2YjQ5Nw==", "commit": {"author": {"name": "Charles Baylis", "email": "charles.baylis@linaro.org", "date": "2014-06-18T13:42:44Z"}, "committer": {"name": "Charles Baylis", "email": "cbaylis@gcc.gnu.org", "date": "2014-06-18T13:42:44Z"}, "message": "arm.c (neon_vector_mem_operand): Allow register POST_MODIFY for neon loads and stores.\n\n2014-06-18  Charles Baylis  <charles.baylis@linaro.org>\n\n\t* config/arm/arm.c (neon_vector_mem_operand): Allow register\n\tPOST_MODIFY for neon loads and stores.\n\t(arm_print_operand): Output post-index register for neon loads and\n\tstores.\n\nFrom-SVN: r211783", "tree": {"sha": "594513d49a35cc7cae3cebbe58d204f0f5302fef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/594513d49a35cc7cae3cebbe58d204f0f5302fef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b5b78b16b55c498cb1b0279ea8d139a0266b497", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b5b78b16b55c498cb1b0279ea8d139a0266b497", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b5b78b16b55c498cb1b0279ea8d139a0266b497", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b5b78b16b55c498cb1b0279ea8d139a0266b497/comments", "author": null, "committer": null, "parents": [{"sha": "54ed41ea0ccd13171c572c7465524022117f5dcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ed41ea0ccd13171c572c7465524022117f5dcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54ed41ea0ccd13171c572c7465524022117f5dcb"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "114240b306db42f0aa638790855f77f661c1dc7f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b5b78b16b55c498cb1b0279ea8d139a0266b497/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b5b78b16b55c498cb1b0279ea8d139a0266b497/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b5b78b16b55c498cb1b0279ea8d139a0266b497", "patch": "@@ -1,3 +1,10 @@\n+2014-06-18  Charles Baylis  <charles.baylis@linaro.org>\n+\n+\t* config/arm/arm.c (neon_vector_mem_operand): Allow register\n+\tPOST_MODIFY for neon loads and stores.\n+\t(arm_print_operand): Output post-index register for neon loads and\n+\tstores.\n+\n 2014-06-18  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-dce.c (perform_tree_ssa_dce): Fixup bogus commit."}, {"sha": "ffe8e2105ab9b200b9553e38a9f6003f4cbbd12b", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b5b78b16b55c498cb1b0279ea8d139a0266b497/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b5b78b16b55c498cb1b0279ea8d139a0266b497/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=7b5b78b16b55c498cb1b0279ea8d139a0266b497", "patch": "@@ -12792,7 +12792,11 @@ neon_vector_mem_operand (rtx op, int type, bool strict)\n       || (type == 0 && GET_CODE (ind) == PRE_DEC))\n     return arm_address_register_rtx_p (XEXP (ind, 0), 0);\n \n-  /* FIXME: vld1 allows register post-modify.  */\n+  /* Allow post-increment by register for VLDn */\n+  if (type == 2 && GET_CODE (ind) == POST_MODIFY\n+      && GET_CODE (XEXP (ind, 1)) == PLUS\n+      && REG_P (XEXP (XEXP (ind, 1), 1)))\n+     return true;\n \n   /* Match:\n      (plus (reg)\n@@ -21824,6 +21828,7 @@ arm_print_operand (FILE *stream, rtx x, int code)\n       {\n \trtx addr;\n \tbool postinc = FALSE;\n+\trtx postinc_reg = NULL;\n \tunsigned align, memsize, align_bits;\n \n \tgcc_assert (MEM_P (x));\n@@ -21833,6 +21838,11 @@ arm_print_operand (FILE *stream, rtx x, int code)\n \t    postinc = 1;\n \t    addr = XEXP (addr, 0);\n \t  }\n+\tif (GET_CODE (addr) == POST_MODIFY)\n+\t  {\n+\t    postinc_reg = XEXP( XEXP (addr, 1), 1);\n+\t    addr = XEXP (addr, 0);\n+\t  }\n \tasm_fprintf (stream, \"[%r\", REGNO (addr));\n \n \t/* We know the alignment of this access, so we can emit a hint in the\n@@ -21858,6 +21868,8 @@ arm_print_operand (FILE *stream, rtx x, int code)\n \n \tif (postinc)\n \t  fputs(\"!\", stream);\n+\tif (postinc_reg)\n+\t  asm_fprintf (stream, \", %r\", REGNO (postinc_reg));\n       }\n       return;\n "}]}