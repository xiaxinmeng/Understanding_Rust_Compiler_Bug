{"sha": "0501956d00279d9194fc417293f8601861fcd29a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUwMTk1NmQwMDI3OWQ5MTk0ZmM0MTcyOTNmODYwMTg2MWZjZDI5YQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2007-10-15T13:56:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-10-15T13:56:36Z"}, "message": "sem_ch3.adb (Build_Derived_Concurrent_Type): Set the Is_Constrained flag of derived concurrent types...\n\n2007-10-15  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch3.adb (Build_Derived_Concurrent_Type): Set the Is_Constrained\n\tflag of derived concurrent types, taking into account the flag setting\n\ton the parent subtype and any new set of discriminants.\n\nFrom-SVN: r129333", "tree": {"sha": "6b1aac92a54249c4ed30b62b7668bf8b050d2bc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b1aac92a54249c4ed30b62b7668bf8b050d2bc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0501956d00279d9194fc417293f8601861fcd29a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0501956d00279d9194fc417293f8601861fcd29a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0501956d00279d9194fc417293f8601861fcd29a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0501956d00279d9194fc417293f8601861fcd29a/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5404d9df9b49fa984f6474dbb96a113974dc2df2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5404d9df9b49fa984f6474dbb96a113974dc2df2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5404d9df9b49fa984f6474dbb96a113974dc2df2"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "6bddb202db960f4cef67ac15f2fde5635891284e", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0501956d00279d9194fc417293f8601861fcd29a/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0501956d00279d9194fc417293f8601861fcd29a/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=0501956d00279d9194fc417293f8601861fcd29a", "patch": "@@ -3855,6 +3855,12 @@ package body Sem_Ch3 is\n       Dont_Care      : Boolean;\n       Others_Present : Boolean := False;\n \n+      pragma Warnings (Off, Case_Table);\n+      pragma Warnings (Off, Last_Choice);\n+      pragma Warnings (Off, Dont_Care);\n+      pragma Warnings (Off, Others_Present);\n+      --  We don't care about the assigned values of any of these\n+\n    --  Start of processing for Analyze_Variant_Part\n \n    begin\n@@ -4573,6 +4579,14 @@ package body Sem_Ch3 is\n       Set_Corresponding_Record_Type\n         (Derived_Type, Corresponding_Record_Type (Parent_Type));\n \n+      --  Is_Constrained is set according the parent subtype, but is set to\n+      --  False if the derived type is declared with new discriminants.\n+\n+      Set_Is_Constrained\n+        (Derived_Type,\n+         (Is_Constrained (Parent_Type) or else Constraint_Present)\n+           and then not Present (Discriminant_Specifications (N)));\n+\n       if Constraint_Present then\n          if not Has_Discriminants (Parent_Type) then\n             Error_Msg_N (\"untagged parent must have discriminants\", N);"}]}