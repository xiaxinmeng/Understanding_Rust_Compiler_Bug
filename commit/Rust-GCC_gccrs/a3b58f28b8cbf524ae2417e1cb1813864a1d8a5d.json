{"sha": "a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d", "node_id": "C_kwDOANBUbNoAKGEzYjU4ZjI4YjhjYmY1MjRhZTI0MTdlMWNiMTgxMzg2NGExZDhhNWQ", "commit": {"author": {"name": "Xiongchuan Tan", "email": "xc-tan@outlook.com", "date": "2022-10-31T22:16:26Z"}, "committer": {"name": "Jeff Law", "email": "jlaw@ventanamicro.com", "date": "2022-10-31T22:19:29Z"}, "message": "RISC-V: Libitm add RISC-V support.\n\nReviewed-by: Palmer Dabbelt <palmer@rivosinc.com>\nAcked-by: Palmer Dabbelt <palmer@rivosinc.com>\n\nlibitm/ChangeLog:\n\n\t* configure.tgt: Add riscv support.\n\t* config/riscv/asm.h: New file.\n\t* config/riscv/sjlj.S: New file.\n\t* config/riscv/target.h: New file.", "tree": {"sha": "cd1e34ad063e15375b43f0f92ee08afc7fda4f3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd1e34ad063e15375b43f0f92ee08afc7fda4f3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d/comments", "author": null, "committer": null, "parents": [{"sha": "db55f1dda2692c3f778ae783bc7121891c79aec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db55f1dda2692c3f778ae783bc7121891c79aec4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db55f1dda2692c3f778ae783bc7121891c79aec4"}], "stats": {"total": 273, "additions": 273, "deletions": 0}, "files": [{"sha": "f0e3bd0f5e2d0f245f33a66cf80170a0b6487d18", "filename": "libitm/config/riscv/asm.h", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d/libitm%2Fconfig%2Friscv%2Fasm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d/libitm%2Fconfig%2Friscv%2Fasm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Friscv%2Fasm.h?ref=a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d", "patch": "@@ -0,0 +1,63 @@\n+/* Copyright (C) 2022 Free Software Foundation, Inc.\n+   Contributed by Xiongchuan Tan <xc-tan@outlook.com>.\n+\n+   This file is part of the GNU Transactional Memory Library (libitm).\n+\n+   Libitm is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   Libitm is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef _RV_ASM_H\n+#define _RV_ASM_H\n+\n+#ifdef __riscv_e\n+#  error \"rv32e and rv64e unsupported\"\n+#endif\n+\n+#if __riscv_xlen == 64\n+#  define GPR_L ld\n+#  define GPR_S sd\n+#  define SZ_GPR 8\n+#  define LEN_GPR 14\n+#elif __riscv_xlen == 32\n+#  define GPR_L lw\n+#  define GPR_S sw\n+#  define SZ_GPR 4\n+#  define LEN_GPR 16 /* Extra padding to align the stack to 16 bytes */\n+#else\n+#  error Unsupported XLEN (must be 64-bit or 32-bit).\n+#endif\n+\n+#if defined(__riscv_flen) && __riscv_flen == 64\n+#  define FPR_L fld\n+#  define FPR_S fsd\n+#  define SZ_FPR 8\n+#elif defined(__riscv_flen) && __riscv_flen == 32\n+#  define FPR_L flw\n+#  define FPR_S fsw\n+#  define SZ_FPR 4\n+#elif defined(__riscv_flen)\n+#  error Q-extension unsupported\n+#else\n+#  define SZ_FPR 0\n+#endif\n+\n+/* The size of gtm_jmpbuf */\n+#define ADJ_STACK_SIZE (LEN_GPR*SZ_GPR+12*SZ_FPR)\n+\n+#endif  /* _RV_ASM_H */"}, {"sha": "18521aee702976aa3874c21f8855139487fa3bdc", "filename": "libitm/config/riscv/sjlj.S", "status": "added", "additions": 144, "deletions": 0, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d/libitm%2Fconfig%2Friscv%2Fsjlj.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d/libitm%2Fconfig%2Friscv%2Fsjlj.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Friscv%2Fsjlj.S?ref=a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d", "patch": "@@ -0,0 +1,144 @@\n+/* Copyright (C) 2022 Free Software Foundation, Inc.\n+   Contributed by Xiongchuan Tan <xc-tan@outlook.com>.\n+\n+   This file is part of the GNU Transactional Memory Library (libitm).\n+\n+   Libitm is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   Libitm is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"asmcfi.h\"\n+#include \"asm.h\"\n+\n+\t.text\n+\t.align\t2\n+\t.global\t_ITM_beginTransaction\n+\t.type\t_ITM_beginTransaction, @function\n+\n+_ITM_beginTransaction:\n+\tcfi_startproc\n+\tmv a1, sp\n+\taddi sp, sp, -ADJ_STACK_SIZE\n+\tcfi_adjust_cfa_offset(ADJ_STACK_SIZE)\n+\n+\t/* Return Address */\n+\tGPR_S ra, 0*SZ_GPR(sp)\n+\tcfi_rel_offset(ra, 0*SZ_GPR)\n+\n+\t/* Caller's sp */\n+\tGPR_S a1, 1*SZ_GPR(sp)\n+\n+\t/* Caller's s0/fp */\n+\tGPR_S fp, 2*SZ_GPR(sp)\n+\tcfi_rel_offset(fp, 2*SZ_GPR)\n+\n+\t/* Callee-saved registers */\n+\tGPR_S s1, 3*SZ_GPR(sp)\n+\tGPR_S s2, 4*SZ_GPR(sp)\n+\tGPR_S s3, 5*SZ_GPR(sp)\n+\tGPR_S s4, 6*SZ_GPR(sp)\n+\tGPR_S s5, 7*SZ_GPR(sp)\n+\tGPR_S s6, 8*SZ_GPR(sp)\n+\tGPR_S s7, 9*SZ_GPR(sp)\n+\tGPR_S s8, 10*SZ_GPR(sp)\n+\tGPR_S s9, 11*SZ_GPR(sp)\n+\tGPR_S s10, 12*SZ_GPR(sp)\n+\tGPR_S s11, 13*SZ_GPR(sp)\n+\n+#if defined(__riscv_flen)\n+\t/* Callee-saved floating-point registers */\n+\tFPR_S fs0, 0*SZ_FPR+LEN_GPR*SZ_GPR(sp)\n+\tFPR_S fs1, 1*SZ_FPR+LEN_GPR*SZ_GPR(sp)\n+\tFPR_S fs2, 2*SZ_FPR+LEN_GPR*SZ_GPR(sp)\n+\tFPR_S fs3, 3*SZ_FPR+LEN_GPR*SZ_GPR(sp)\n+\tFPR_S fs4, 4*SZ_FPR+LEN_GPR*SZ_GPR(sp)\n+\tFPR_S fs5, 5*SZ_FPR+LEN_GPR*SZ_GPR(sp)\n+\tFPR_S fs6, 6*SZ_FPR+LEN_GPR*SZ_GPR(sp)\n+\tFPR_S fs7, 7*SZ_FPR+LEN_GPR*SZ_GPR(sp)\n+\tFPR_S fs8, 8*SZ_FPR+LEN_GPR*SZ_GPR(sp)\n+\tFPR_S fs9, 9*SZ_FPR+LEN_GPR*SZ_GPR(sp)\n+\tFPR_S fs10, 10*SZ_FPR+LEN_GPR*SZ_GPR(sp)\n+\tFPR_S fs11, 11*SZ_FPR+LEN_GPR*SZ_GPR(sp)\n+#endif\n+\tmv fp, sp\n+\n+\t/* Invoke GTM_begin_transaction with the struct we've just built.  */\n+\tmv a1, sp\n+\tjal ra, GTM_begin_transaction\n+\n+\t/* Return; we don't need to restore any of the call-saved regs.  */\n+\tGPR_L ra, 0*SZ_GPR(sp)\n+\tcfi_restore(ra)\n+\tGPR_L fp, 2*SZ_GPR(sp)\n+\tcfi_restore(fp)\n+\n+\taddi sp, sp, ADJ_STACK_SIZE\n+\tcfi_adjust_cfa_offset(-ADJ_STACK_SIZE)\n+\n+\tret\n+\tcfi_endproc\n+\t.size\t_ITM_beginTransaction, . - _ITM_beginTransaction\n+\n+\t.align\t2\n+\t.global\tGTM_longjmp\n+\t.hidden\tGTM_longjmp\n+\t.type\tGTM_longjmp, @function\n+\n+GTM_longjmp:\n+\t/* The first parameter becomes the return value (a0).\n+\t   The third parameter is ignored for now.  */\n+    cfi_startproc\n+\tGPR_L s1, 3*SZ_GPR(a1)\n+\tGPR_L s2, 4*SZ_GPR(a1)\n+\tGPR_L s3, 5*SZ_GPR(a1)\n+\tGPR_L s4, 6*SZ_GPR(a1)\n+\tGPR_L s5, 7*SZ_GPR(a1)\n+\tGPR_L s6, 8*SZ_GPR(a1)\n+\tGPR_L s7, 9*SZ_GPR(a1)\n+\tGPR_L s8, 10*SZ_GPR(a1)\n+\tGPR_L s9, 11*SZ_GPR(a1)\n+\tGPR_L s10, 12*SZ_GPR(a1)\n+\tGPR_L s11, 13*SZ_GPR(a1)\n+\n+#if defined(__riscv_flen)\n+\tFPR_L fs0, 0*SZ_FPR+LEN_GPR*SZ_GPR(a1)\n+\tFPR_L fs1, 1*SZ_FPR+LEN_GPR*SZ_GPR(a1)\n+\tFPR_L fs2, 2*SZ_FPR+LEN_GPR*SZ_GPR(a1)\n+\tFPR_L fs3, 3*SZ_FPR+LEN_GPR*SZ_GPR(a1)\n+\tFPR_L fs4, 4*SZ_FPR+LEN_GPR*SZ_GPR(a1)\n+\tFPR_L fs5, 5*SZ_FPR+LEN_GPR*SZ_GPR(a1)\n+\tFPR_L fs6, 6*SZ_FPR+LEN_GPR*SZ_GPR(a1)\n+\tFPR_L fs7, 7*SZ_FPR+LEN_GPR*SZ_GPR(a1)\n+\tFPR_L fs8, 8*SZ_FPR+LEN_GPR*SZ_GPR(a1)\n+\tFPR_L fs9, 9*SZ_FPR+LEN_GPR*SZ_GPR(a1)\n+\tFPR_L fs10, 10*SZ_FPR+LEN_GPR*SZ_GPR(a1)\n+\tFPR_L fs11, 11*SZ_FPR+LEN_GPR*SZ_GPR(a1)\n+#endif\n+\n+\tGPR_L ra, 0*SZ_GPR(a1)\n+\tGPR_L fp, 2*SZ_GPR(a1)\n+\tGPR_L a3, 1*SZ_GPR(a1)\n+\tcfi_def_cfa(a1, 0)\n+\tmv sp, a3\n+\tjr ra\n+\tcfi_endproc\n+\t.size\tGTM_longjmp, . - GTM_longjmp\n+\n+#ifdef __linux__\n+.section .note.GNU-stack, \"\", @progbits\n+#endif"}, {"sha": "7dcaa6a3510f3d2a4aeb8c531246ac8d1d526cfb", "filename": "libitm/config/riscv/target.h", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d/libitm%2Fconfig%2Friscv%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d/libitm%2Fconfig%2Friscv%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Friscv%2Ftarget.h?ref=a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d", "patch": "@@ -0,0 +1,64 @@\n+/* Copyright (C) 2022 Free Software Foundation, Inc.\n+   Contributed by Xiongchuan Tan <xc-tan@outlook.com>.\n+\n+   This file is part of the GNU Transactional Memory Library (libitm).\n+\n+   Libitm is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   Libitm is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+namespace GTM HIDDEN {\n+\n+typedef struct gtm_jmpbuf\n+  {\n+    long int pc;\n+    void *cfa;\n+    long int s[12]; /* Saved registers, s0 is fp */\n+\n+#if __riscv_xlen == 32\n+    /* Ensure that the stack is 16-byte aligned */\n+    long int padding[2];\n+#endif\n+\n+    /* FP saved registers */\n+#if defined(__riscv_flen) && __riscv_flen == 64\n+    double fs[12];\n+#elif defined(__riscv_flen) && __riscv_flen == 32\n+    float fs[12];\n+#elif defined(__riscv_flen)\n+#  error Q-extension unsupported\n+#endif\n+  } gtm_jmpbuf;\n+\n+/* The size of one line in hardware caches (in bytes). */\n+/* 64 bytes is a suggested value in the RVA profiles (see\n+   https://github.com/riscv/riscv-profiles/blob/main/profiles.adoc). */\n+#define HW_CACHELINE_SIZE 64\n+\n+static inline void\n+cpu_relax (void)\n+{\n+  #ifdef __riscv_zihintpause\n+      __asm volatile (\"pause\");\n+  #else\n+      /* Encoding of the pause instruction */\n+      __asm volatile (\".4byte 0x100000F\");\n+  #endif\n+}\n+\n+} // namespace GTM"}, {"sha": "635c1d49628ae3fe00abfae83e3d6816567f9811", "filename": "libitm/configure.tgt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d/libitm%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d/libitm%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.tgt?ref=a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d", "patch": "@@ -82,6 +82,8 @@ EOF\n \n   loongarch*)   ARCH=loongarch ;;\n \n+  riscv*)\t\tARCH=riscv ;;\n+\n   sh*)\t\tARCH=sh ;;\n \n   sparc)"}]}