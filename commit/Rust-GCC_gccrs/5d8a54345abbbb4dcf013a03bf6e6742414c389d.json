{"sha": "5d8a54345abbbb4dcf013a03bf6e6742414c389d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ4YTU0MzQ1YWJiYmI0ZGNmMDEzYTAzYmY2ZTY3NDI0MTRjMzg5ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-03-19T23:24:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-03-19T23:24:43Z"}, "message": "re PR inline-asm/30505 (asm operand has impossible constraints.)\n\n\tPR inline-asm/30505\n\t* reload1.c (reload): Do invalid ASM checking after\n\tcleanup_subreg_operands.\n\n\t* gcc.target/i386/pr30505.c: New test.\n\nFrom-SVN: r123072", "tree": {"sha": "06566dbc082fed23428c52e95c555fa28d3ed791", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06566dbc082fed23428c52e95c555fa28d3ed791"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d8a54345abbbb4dcf013a03bf6e6742414c389d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d8a54345abbbb4dcf013a03bf6e6742414c389d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d8a54345abbbb4dcf013a03bf6e6742414c389d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d8a54345abbbb4dcf013a03bf6e6742414c389d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3eabae3bbb185d38a239196d286bfd9cfcb88f4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eabae3bbb185d38a239196d286bfd9cfcb88f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eabae3bbb185d38a239196d286bfd9cfcb88f4e"}], "stats": {"total": 60, "additions": 45, "deletions": 15}, "files": [{"sha": "dc56f6d6c9f8ddaca0bccbe76d36dddf0a6b2044", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d8a54345abbbb4dcf013a03bf6e6742414c389d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d8a54345abbbb4dcf013a03bf6e6742414c389d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d8a54345abbbb4dcf013a03bf6e6742414c389d", "patch": "@@ -1,3 +1,9 @@\n+2007-03-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR inline-asm/30505\n+\t* reload1.c (reload): Do invalid ASM checking after\n+\tcleanup_subreg_operands.\n+\n 2007-03-19  Jeff Law  <law@redhat.com>\n \n \t* tree-cfg.c (find_taken_edge): Tighten conditions for"}, {"sha": "9a56fc40bd0894b8b7e927b0f12b07c28fbea8ba", "filename": "gcc/reload1.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d8a54345abbbb4dcf013a03bf6e6742414c389d/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d8a54345abbbb4dcf013a03bf6e6742414c389d/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=5d8a54345abbbb4dcf013a03bf6e6742414c389d", "patch": "@@ -1173,20 +1173,6 @@ reload (rtx first, int global)\n       {\n \trtx *pnote;\n \n-\t/* Clean up invalid ASMs so that they don't confuse later passes.\n-\t   See PR 21299.  */\n-\tif (asm_noperands (PATTERN (insn)) >= 0)\n-\t  {\n-\t    extract_insn (insn);\n-\t    if (!constrain_operands (1))\n-\t      {\n-\t\terror_for_asm (insn,\n-\t\t\t       \"%<asm%> operand has impossible constraints\");\n-\t\tdelete_insn (insn);\n-\t\tcontinue;\n-\t      }\n-\t  }\n-\n \tif (CALL_P (insn))\n \t  replace_pseudos_in (& CALL_INSN_FUNCTION_USAGE (insn),\n \t\t\t      VOIDmode, CALL_INSN_FUNCTION_USAGE (insn));\n@@ -1245,8 +1231,22 @@ reload (rtx first, int global)\n \tadd_auto_inc_notes (insn, PATTERN (insn));\n #endif\n \n-\t/* And simplify (subreg (reg)) if it appears as an operand.  */\n+\t/* Simplify (subreg (reg)) if it appears as an operand.  */\n \tcleanup_subreg_operands (insn);\n+\n+\t/* Clean up invalid ASMs so that they don't confuse later passes.\n+\t   See PR 21299.  */\n+\tif (asm_noperands (PATTERN (insn)) >= 0)\n+\t  {\n+\t    extract_insn (insn);\n+\t    if (!constrain_operands (1))\n+\t      {\n+\t\terror_for_asm (insn,\n+\t\t\t       \"%<asm%> operand has impossible constraints\");\n+\t\tdelete_insn (insn);\n+\t\tcontinue;\n+\t      }\n+\t  }\n       }\n \n   /* If we are doing stack checking, give a warning if this function's"}, {"sha": "9a6607f2d1105f8ca89db0736edf0fa868eef12a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d8a54345abbbb4dcf013a03bf6e6742414c389d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d8a54345abbbb4dcf013a03bf6e6742414c389d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d8a54345abbbb4dcf013a03bf6e6742414c389d", "patch": "@@ -1,3 +1,8 @@\n+2007-03-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR inline-asm/30505\n+\t* gcc.target/i386/pr30505.c: New test.\n+\n 2007-03-19  Mark Shinwell  <shinwell@codesourcery.com>\n \n \t* gcc.target/arm/register-variables.c: New."}, {"sha": "a3b23685f3df799ff43244ff6aefb2c12089894d", "filename": "gcc/testsuite/gcc.target/i386/pr30505.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d8a54345abbbb4dcf013a03bf6e6742414c389d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr30505.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d8a54345abbbb4dcf013a03bf6e6742414c389d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr30505.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr30505.c?ref=5d8a54345abbbb4dcf013a03bf6e6742414c389d", "patch": "@@ -0,0 +1,19 @@\n+/* PR inline-asm/30505 */\n+/* { dg-do compile { target ilp32 } } */\n+/* { dg-options \"-O2\" } */\n+\n+unsigned long long a, c;\n+unsigned int b, d;\n+\n+void\n+test ()\n+{\n+  unsigned int e, f;\n+\n+  __asm__ (\"divl %5;movl %1, %0;movl %4, %1;divl %5\"\n+\t   : \"=&rm\" (e), \"=a\" (f), \"=d\" (d)\n+\t   : \"1\" ((unsigned int) (a >> 32)), \"g\" ((unsigned int) a),\n+\t     \"rm\" (b), \"2\" (0)\n+\t   : \"cc\");\n+  c = (unsigned long long) e << 32 | f;\n+}"}]}