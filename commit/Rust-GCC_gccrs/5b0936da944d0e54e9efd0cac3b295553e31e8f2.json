{"sha": "5b0936da944d0e54e9efd0cac3b295553e31e8f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIwOTM2ZGE5NDRkMGU1NGU5ZWZkMGNhYzNiMjk1NTUzZTMxZThmMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-07-02T08:45:08Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-07-02T08:45:08Z"}, "message": "configure.host (ieee_flags): Add -mieee for alpha*.\n\nlibgfortran/ChangeLog:\n\n\t* configure.host (ieee_flags): Add -mieee for alpha*.\n\n\t* config/fpu-glibc.h (support_fpu_rounding_mode): Correctly handle\n\tGFC_FPE_UPWARD, GFC_FPE_DOWNWARD and GFC_FPE_TOWARDZERO.\n\t* config/fpu-aix.h (support_fpu_rounding_mode): Ditto.\n\ntestsuite/ChangeLog:\n\n\t* gfortran.dg/ieee/ieee_1.F90 (dg-additional-options): Remove -O0.\n\t* gfortran.dg/ieee/ieee_rounding_1.f90 (dg-additional-options): Add.\n\nFrom-SVN: r212224", "tree": {"sha": "5fe3802e1130088354ec6021f7d70b1ba4a17bbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fe3802e1130088354ec6021f7d70b1ba4a17bbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b0936da944d0e54e9efd0cac3b295553e31e8f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0936da944d0e54e9efd0cac3b295553e31e8f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b0936da944d0e54e9efd0cac3b295553e31e8f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0936da944d0e54e9efd0cac3b295553e31e8f2/comments", "author": null, "committer": null, "parents": [{"sha": "bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "b364f407b46cf568dafb16365b3873c06495c42a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0936da944d0e54e9efd0cac3b295553e31e8f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0936da944d0e54e9efd0cac3b295553e31e8f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b0936da944d0e54e9efd0cac3b295553e31e8f2", "patch": "@@ -1,3 +1,8 @@\n+2014-07-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gfortran.dg/ieee/ieee_1.F90 (dg-additional-options): Remove -O0.\n+\t* gfortran.dg/ieee/ieee_rounding_1.f90 (dg-additional-options): Add.\n+\n 2014-07-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/cpp0x/variadic-ex10.C: Adjust for inform instead of error.\n@@ -15,8 +20,8 @@\n \t    Yufeng Zhang  <yufeng.zhang@arm.com>\n \n \t* gcc.target/aarch64/aapcs64/aapcs64.exp:\n-\t(additional_flags_for_func_ret): New variable based on $additional_flags\n-\twith -fno-use-caller-save.\n+\t(additional_flags_for_func_ret): New variable based on\n+\t$additional_flags with -fno-use-caller-save.\n \t(func-ret-*.c): Use the new variable.\n \n 2014-07-01  Paolo Carlini  <paolo.carlini@oracle.com>"}, {"sha": "5c1a061988776aa670f944d5509d28a019cd3377", "filename": "gcc/testsuite/gfortran.dg/ieee/ieee_1.F90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0936da944d0e54e9efd0cac3b295553e31e8f2/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_1.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0936da944d0e54e9efd0cac3b295553e31e8f2/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_1.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_1.F90?ref=5b0936da944d0e54e9efd0cac3b295553e31e8f2", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do run }\n-! { dg-additional-options \"-ffree-line-length-none -O0\" }\n+! { dg-additional-options \"-ffree-line-length-none\" }\n !\n ! Use dg-additional-options rather than dg-options to avoid overwriting the\n ! default IEEE options which are passed by ieee.exp and necessary."}, {"sha": "c44178ee1ae4e15c97c4578ce2c7087d7ff91b10", "filename": "gcc/testsuite/gfortran.dg/ieee/ieee_rounding_1.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0936da944d0e54e9efd0cac3b295553e31e8f2/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_rounding_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0936da944d0e54e9efd0cac3b295553e31e8f2/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_rounding_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_rounding_1.f90?ref=5b0936da944d0e54e9efd0cac3b295553e31e8f2", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do run }\n+! { dg-additional-options \"-mfp-rounding-mode=d\" { target alpha*-*-* } }\n \n   use, intrinsic :: ieee_features, only : ieee_rounding\n   use, intrinsic :: ieee_arithmetic"}, {"sha": "bb98a6caaa85e6f176da988ccaccd55cc433a90b", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0936da944d0e54e9efd0cac3b295553e31e8f2/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0936da944d0e54e9efd0cac3b295553e31e8f2/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5b0936da944d0e54e9efd0cac3b295553e31e8f2", "patch": "@@ -1,3 +1,11 @@\n+2014-07-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* configure.host (ieee_flags): Add -mieee for alpha*.\n+\n+\t* config/fpu-glibc.h (support_fpu_rounding_mode): Correctly handle\n+\tGFC_FPE_UPWARD, GFC_FPE_DOWNWARD and GFC_FPE_TOWARDZERO.\n+\t* config/fpu-aix.h (support_fpu_rounding_mode): Ditto.\n+\n 2014-06-29  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* config/fpu-387.h (my_fenv_t): Amend structure so it also works\n@@ -7,7 +15,7 @@\n \n \tPR libgfortran/61640\n \t* io/list_read.c (next_char_internal): Adjust the read length to\n-\ta single wide character. (eat_spaces): Add missing paren. \n+\ta single wide character. (eat_spaces): Add missing paren.\n \t* io/unix.c (mem_read4): Use the correct mem_alloc function for\n \twide character internal reads.\n "}, {"sha": "c1079fcc1a3bf735ca3456567db45f0d8c6ad433", "filename": "libgfortran/config/fpu-aix.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0936da944d0e54e9efd0cac3b295553e31e8f2/libgfortran%2Fconfig%2Ffpu-aix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0936da944d0e54e9efd0cac3b295553e31e8f2/libgfortran%2Fconfig%2Ffpu-aix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-aix.h?ref=5b0936da944d0e54e9efd0cac3b295553e31e8f2", "patch": "@@ -372,18 +372,21 @@ support_fpu_rounding_mode (int mode)\n \treturn 0;\n #endif\n \n+      case GFC_FPE_UPWARD:\n #ifdef FE_UPWARD\n \treturn 1;\n #else\n \treturn 0;\n #endif\n \n+      case GFC_FPE_DOWNWARD:\n #ifdef FE_DOWNWARD\n \treturn 1;\n #else\n \treturn 0;\n #endif\n \n+      case GFC_FPE_TOWARDZERO:\n #ifdef FE_TOWARDZERO\n \treturn 1;\n #else"}, {"sha": "7f3c81984ab3a2a95199a54f0e0c67809bcebd4a", "filename": "libgfortran/config/fpu-glibc.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0936da944d0e54e9efd0cac3b295553e31e8f2/libgfortran%2Fconfig%2Ffpu-glibc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0936da944d0e54e9efd0cac3b295553e31e8f2/libgfortran%2Fconfig%2Ffpu-glibc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-glibc.h?ref=5b0936da944d0e54e9efd0cac3b295553e31e8f2", "patch": "@@ -387,18 +387,21 @@ support_fpu_rounding_mode (int mode)\n \treturn 0;\n #endif\n \n+      case GFC_FPE_UPWARD:\n #ifdef FE_UPWARD\n \treturn 1;\n #else\n \treturn 0;\n #endif\n \n+      case GFC_FPE_DOWNWARD:\n #ifdef FE_DOWNWARD\n \treturn 1;\n #else\n \treturn 0;\n #endif\n \n+      case GFC_FPE_TOWARDZERO:\n #ifdef FE_TOWARDZERO\n \treturn 1;\n #else"}, {"sha": "0a12a32fc8a521c48546375b82c237b6693f09aa", "filename": "libgfortran/configure.host", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0936da944d0e54e9efd0cac3b295553e31e8f2/libgfortran%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0936da944d0e54e9efd0cac3b295553e31e8f2/libgfortran%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.host?ref=5b0936da944d0e54e9efd0cac3b295553e31e8f2", "patch": "@@ -48,6 +48,8 @@ esac\n # Some targets require additional compiler options for NaN/Inf.\n ieee_flags=\n case \"${host_cpu}\" in\n+  alpha*)\n+    ieee_flags=\"-mieee\" ;;\n   sh*)\n     ieee_flags=\"-mieee\" ;;\n esac"}]}