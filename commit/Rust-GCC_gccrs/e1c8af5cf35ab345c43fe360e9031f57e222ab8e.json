{"sha": "e1c8af5cf35ab345c43fe360e9031f57e222ab8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFjOGFmNWNmMzVhYjM0NWM0M2ZlMzYwZTkwMzFmNTdlMjIyYWI4ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-28T18:42:45Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-28T18:42:45Z"}, "message": "entered into RCS\n\nFrom-SVN: r1113", "tree": {"sha": "299bc4ed5034fffbb3aaf1cb17c0cbbf72652313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/299bc4ed5034fffbb3aaf1cb17c0cbbf72652313"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1c8af5cf35ab345c43fe360e9031f57e222ab8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c8af5cf35ab345c43fe360e9031f57e222ab8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1c8af5cf35ab345c43fe360e9031f57e222ab8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c8af5cf35ab345c43fe360e9031f57e222ab8e/comments", "author": null, "committer": null, "parents": [{"sha": "4f529f0a6e2833e74da8ebdfc55f9800ea30284a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f529f0a6e2833e74da8ebdfc55f9800ea30284a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f529f0a6e2833e74da8ebdfc55f9800ea30284a"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "d685c92130bd1821d115bb5e5cf227d48d8286d3", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c8af5cf35ab345c43fe360e9031f57e222ab8e/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c8af5cf35ab345c43fe360e9031f57e222ab8e/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=e1c8af5cf35ab345c43fe360e9031f57e222ab8e", "patch": "@@ -179,3 +179,35 @@ do { ASM_OUTPUT_ALIGN ((FILE), 2);\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\\\n       c = getc (FILE);\t\t\t\t\t\t\\\n   } while (1)\n+\n+/* If the host and target formats match, output the floats as hex.  */\n+#if HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT\n+#if defined (HOST_WORDS_BIG_ENDIAN) == WORDS_BIG_ENDIAN\n+\n+/* This is how to output assembly code to define a `float' constant.\n+   We always have to use a .long pseudo-op to do this because the native\n+   SVR4 ELF assembler is buggy and it generates incorrect values when we\n+   try to use the .float pseudo-op instead.  */\n+\n+#undef ASM_OUTPUT_FLOAT\n+#define ASM_OUTPUT_FLOAT(FILE,VALUE)\t\t\t\t\t\\\n+do { long value;\t\t\t\t\t\t\t\\\n+     REAL_VALUE_TO_TARGET_SINGLE ((VALUE), value);\t\t\t\\\n+     fprintf((FILE), \"\\t.long\\t0x%x\\n\", value);\t\t\t\t\\\n+   } while (0)\n+\n+/* This is how to output assembly code to define a `double' constant.\n+   We always have to use a pair of .long pseudo-ops to do this because\n+   the native SVR4 ELF assembler is buggy and it generates incorrect\n+   values when we try to use the the .double pseudo-op instead.  */\n+\n+#undef ASM_OUTPUT_DOUBLE\n+#define ASM_OUTPUT_DOUBLE(FILE,VALUE)\t\t\t\t\t\\\n+do { long value[2];\t\t\t\t\t\t\t\\\n+     REAL_VALUE_TO_TARGET_DOUBLE ((VALUE), value);\t\t\t\\\n+     fprintf((FILE), \"\\t.long\\t0x%x\\n\", value[0]);\t\t\t\\\n+     fprintf((FILE), \"\\t.long\\t0x%x\\n\", value[1]);\t\t\t\\\n+   } while (0)\n+\n+#endif /* word order matches */\n+#endif /* HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT */"}]}