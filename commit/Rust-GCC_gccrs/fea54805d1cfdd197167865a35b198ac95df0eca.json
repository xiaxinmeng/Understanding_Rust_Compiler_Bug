{"sha": "fea54805d1cfdd197167865a35b198ac95df0eca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVhNTQ4MDVkMWNmZGQxOTcxNjc4NjVhMzViMTk4YWM5NWRmMGVjYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-11-15T14:58:19Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-11-15T14:58:19Z"}, "message": "final.c (alter_subreg): If simplify_subreg can't do anything, handle REG ourselves and abort for others.\n\n\t* final.c (alter_subreg): If simplify_subreg can't do anything,\n\thandle REG ourselves and abort for others.\n\nFrom-SVN: r47058", "tree": {"sha": "bdb6c2f2be6cff5083eb5660c269ed15c1cd3306", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdb6c2f2be6cff5083eb5660c269ed15c1cd3306"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fea54805d1cfdd197167865a35b198ac95df0eca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea54805d1cfdd197167865a35b198ac95df0eca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fea54805d1cfdd197167865a35b198ac95df0eca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea54805d1cfdd197167865a35b198ac95df0eca/comments", "author": null, "committer": null, "parents": [{"sha": "768caa286d153f6366c98154db2ecb5557af8c4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/768caa286d153f6366c98154db2ecb5557af8c4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/768caa286d153f6366c98154db2ecb5557af8c4a"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "aac12db4cc3700afbe1cc161f414c14471bee55f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea54805d1cfdd197167865a35b198ac95df0eca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea54805d1cfdd197167865a35b198ac95df0eca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fea54805d1cfdd197167865a35b198ac95df0eca", "patch": "@@ -1,3 +1,8 @@\n+Thu Nov 15 08:36:39 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* final.c (alter_subreg): If simplify_subreg can't do anything,\n+\thandle REG ourselves and abort for others.\n+\n 2001-11-15  Richard Hodson  <hodsonr@dionecorp.com>\n \n \t* config/h8300/h8300.c (dosize): Avoid corrupting R3 in interrupt"}, {"sha": "9302feae7eda0d2d09411bd87e290ccc0e6e7b4f", "filename": "gcc/final.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea54805d1cfdd197167865a35b198ac95df0eca/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea54805d1cfdd197167865a35b198ac95df0eca/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=fea54805d1cfdd197167865a35b198ac95df0eca", "patch": "@@ -3038,7 +3038,26 @@ alter_subreg (xp)\n   if (GET_CODE (y) == MEM)\n     *xp = adjust_address (y, GET_MODE (x), SUBREG_BYTE (x));\n   else\n-    *xp = simplify_subreg (GET_MODE (x), y, GET_MODE (y), SUBREG_BYTE (x));\n+    {\n+      rtx new = simplify_subreg (GET_MODE (x), y, GET_MODE (y),\n+\t\t\t\t SUBREG_BYTE (x));\n+\n+      if (new != 0)\n+\t*xp = new;\n+      /* Simplify_subreg can't handle some REG cases, but we have to.  */\n+      else if (GET_CODE (y) == REG)\n+\t{\n+\t  REGNO (x) = subreg_hard_regno (x, 1);\n+\t  PUT_CODE (x, REG);\n+\t  ORIGINAL_REGNO (x) = ORIGINAL_REGNO (y);\n+\t  /* This field has a different meaning for REGs and SUBREGs.  Make\n+\t     sure to clear it!  */\n+\t  x->used = 0;\n+\t}\n+      else\n+\tabort ();\n+    }\n+\n   return *xp;\n }\n "}]}