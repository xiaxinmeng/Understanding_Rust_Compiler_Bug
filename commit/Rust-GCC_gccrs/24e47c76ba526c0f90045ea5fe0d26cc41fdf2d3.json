{"sha": "24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRlNDdjNzZiYTUyNmMwZjkwMDQ1ZWE1ZmUwZDI2Y2M0MWZkZjJkMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-05-29T20:31:45Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-05-29T20:31:45Z"}, "message": "tree-vrp.c (debug_value_range, [...]): Annotate with DEBUG_FUNCTION.\n\n\n\t* tree-vrp.c (debug_value_range, debug_all_value_ranges,\n\tdebug_asserts_for, debug_all_asserts): Annotate with DEBUG_FUNCTION.\n\t* tree-into-ssa.c (debug_decl_set, debug_defs_stack, debug_currdefs,\n\tdebug_tree_ssa, debug_tree_ssa_stats, debug_def_blocks,\n\tdebug_names_replaced_by, debug_update_ssa): Likewise.\t\n\t* sbitmap.c (debug_sbitmap): Likewise.\n\t* genrecog.c (debug_decision, debug_decision_list): Likewise.\n\t* tree-pretty-print.c (debug_generic_expr, debug_generic_stmt,\n\tdebug_tree_chain): Likewise.\n\t* tree-loop-distribution.c (debug_rdg_partitions): Likewise.\n\t* cgraph.c (debug_cgraph_node, debug_cgraph): Likewise.\n\t* optabs.c  (debug_optab_libfuncs): Likewise.\n\t(verify_loop_closed_ssa): Likewise.\n\t* value-prof.c (verify_histograms): Likewise.\n\t* reload.c (debug_reload_to_stream, debug_reload): Likewise.\n\t* bitmap.c (debug_bitmap_file, debug_bitmap, bitmap_print): Likewise.\n\t* cfghooks.c (verify_flow_info): Likewise.\n\t* fold-const.c (debug_fold_checksum): Likewise.\n\t* omp-low.c (debug_omp_region, debug_all_omp_regions): Likewise.\n\t* cfg.c (debug_regset, debug_flow_info, debug_bb, debug_bb_n):\n\tLikewise.\n\t* omega.c (debug_omega_problem): Likewise.\n\t* cgraphunit.c (verify_cgraph_node, verify_cgraph): Likewise.\n\t* tree-ssa-ccp.c (debug_lattice_value): Likewise.\n\t* dominance.c (verify_dominators, debug_dominance_info,\n\tdebug_dominance_tree): Likewise.\n\t* df-core.c (df_insn_uid_debug, df_insn_debug, df_insn_debug_regno,\n\t* df_regno_debug, df_ref_debug,\n\tdebug_df_insn, debug_df_reg, debug_df_regno, debug_df_ref,\n\tdebug_df_defno, debug_df_useno, debug_df_chain): Likewise.\n\t* tree-ssa-dom.c (debug_dominator_optimization_stats): Likewise.\n\t* sel-sched.c (debug_state): Likewise.\n\t* tree-ssa-alias.c (debug_alias_info, debug_points_to_info_for): Likewise.\n\t* cfganal.c (print_edge_list, verify_edge_list): Likewise.\n\t* dwarf2out.c (debug_dwarf_die, debug_dwarf): Likewise.\n\t* tree-eh.c (verify_eh_edges, verify_eh_dispatch_edge): Likewise.\n\t* gimple-pretty-print.c (debug_gimple_stmt, debug_gimple_seq): Likewise.\n\t* c-pretty-print.c (debug_c_tree): Likewise.\n\t* sel-sched-dump.c (debug_insn_rtx, debug_vinsn, debug_expr, debug_insn\n\tdebug_av_set, debug_lv_set, debug_ilist, debug_blist, debug_insn_vector,\n\tdebug_hard_reg_set, debug_mem_addr_value): Likewise.\n\t* ebitmap.c (debug_ebitmap): Likewise.\n\t* function.c (debug_find_var_in_block_tree): Likewise.\n\t* print-rtl.c (debug_rtx): Likewise.\n\t(debug_rtx_count): Likewise.\n\t(debug_rtx_list, debug_rtx_range, debug_rtx_find): Likewise.\n\t* stor-layout.c (debug_rli): Likewise.\n\t* ipa.c (debug_cgraph_node_set, debug_varpool_node_set): Likewise.\n\t* tree-data-ref.c (debug_data_references, debug_data_dependence_relations,\n\tdebug_data_reference, debug_data_dependence_relation, debug_rdg_vertex,\n\tdebug_rdg_component, debug_rdg): Likewise.\n\t* tree-affine.c (debug_aff): Likewise.\n\t* tree-dfa.c (debug_referenced_vars, debug_variable, debug_dfa_stats): Likewise.\n\t* except.c (debug_eh_tree, verify_eh_tree): Likewise.\n\t* emit-rtl.c (verify_rtl_sharing): Likewise.\n\t* tree-ssa-pre.c (debug_pre_expr, debug_bitmap_set,\n\tdebug_value_expressions): Likewise.\n\t* tree-ssa-live.c (debug_scope_block, debug_scope_blocks): Likewise.\n\t* sese.c (debug_rename_map, debug_ivtype_map): Likewise.\n\t* print-tree.c (debug_tree, debug_vec_tree): Likewise.\n\t* cfglayout.c (verify_insn_chain): Likewise.\n\t* graphite-clast-to-gimple.c (debug_clast_name_indexes,\n\tdebug_clast_stmt, debug_generated_program): Likewise.\n\t* ggc-page.c (debug_print_page_list): Likewise.\n\t* tree-ssa-ter.c (debug_ter): Likewise.\n\t* graphite-dependences.c (debug_pddr): Likewise.\n\t* sched-deps.c (debug_ds): Likewise.\n\t* tree-ssa.c (verify_ssa): Likewise.\n\t* graphite-poly.c (debug_scattering_function, debug_iteration_domain,\n\tdebug_scattering_functions, debug_iteration_domains, debug_pdr,\n\tdebug_pdrs, debug_pbb_domain, debug_pbb, debug_scop_context, debug_scop,\n\tdebug_cloog, debug_scop_params, debug_lst): Likewise.\n\t* tree-inline.c (debug_find_tree): Likewise.\n\t* graphite-ppl.c (debug_ppl_linear_expr, debug_ppl_polyhedron_matrix,\n\tdebug_ppl_powerset_matrix): Likewise.\n\t* var-tracking.c (debug_dv): Likewise.\n\t* system.h (DEBUG_FUNCTION, DEBUG_VARIABLE): Define.\n\t* cfgloop.c (verify_loop_structure): Likewise.\n\t* plugin.c (dump_active_plugins, debug_active_plugins): Likewise.\n\t* c-common.c (verify_sequence_points): Likewise.\n\t* sched-rgn.c (debug_regions, debug_region, debug_candidate,\n\tdebug_candidates, debug_rgn_dependencies): Likewise.\n\t* tree-ssa-structalias.c (debug_constraint, debug_constraints,\n\t* debug_constraint_graph, debug_solution_for_var,\n\tdebug_sa_points_to_info): Likewise.\n\t* sched-vis.c (debug_insn_slim, debug_bb_slim, debug_bb_n_slim):\n\tLikewie.\n\t* tree-cfg.c (debug_cfg_stats, verify_stmts, debug_function,\n\tdebug_loops, debug_loop, debug_loop_num): Likewise.\n\t* passes.c (debug_pass): Likewise.\n\t(dump_properties): Likewise; add cfglayout property.\n\t(debug_properties): Likewise.\n\t* tree-ssa-reassoc.c (debug_ops_vector): Likewise.\n\t* varpool.c (debug_varpool): Likewise.\n\t* regcprop.c (debug_value_data): Likewise.\n\t* tree-ssa-operands.c (verify_imm_links, debug_immediate_uses,\n\tdebug_immediate_uses_for): Likewise.\n\nFrom-SVN: r160036", "tree": {"sha": "234f6d5382657de76643e294db71f1497eeb3436", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/234f6d5382657de76643e294db71f1497eeb3436"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/comments", "author": null, "committer": null, "parents": [{"sha": "f9897dfa6b0d68a7b3f3e5142bbe4054bc38e6bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9897dfa6b0d68a7b3f3e5142bbe4054bc38e6bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9897dfa6b0d68a7b3f3e5142bbe4054bc38e6bb"}], "stats": {"total": 452, "additions": 282, "deletions": 170}, "files": [{"sha": "6e4e63efc795879dff9a2dd90b1298ef958ab555", "filename": "gcc/ChangeLog", "status": "modified", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -1,3 +1,103 @@\n+2010-05-29  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-vrp.c (debug_value_range, debug_all_value_ranges,\n+\tdebug_asserts_for, debug_all_asserts): Annotate with DEBUG_FUNCTION.\n+\t* tree-into-ssa.c (debug_decl_set, debug_defs_stack, debug_currdefs,\n+\tdebug_tree_ssa, debug_tree_ssa_stats, debug_def_blocks,\n+\tdebug_names_replaced_by, debug_update_ssa): Likewise.\t\n+\t* sbitmap.c (debug_sbitmap): Likewise.\n+\t* genrecog.c (debug_decision, debug_decision_list): Likewise.\n+\t* tree-pretty-print.c (debug_generic_expr, debug_generic_stmt,\n+\tdebug_tree_chain): Likewise.\n+\t* tree-loop-distribution.c (debug_rdg_partitions): Likewise.\n+\t* cgraph.c (debug_cgraph_node, debug_cgraph): Likewise.\n+\t* optabs.c  (debug_optab_libfuncs): Likewise.\n+\t(verify_loop_closed_ssa): Likewise.\n+\t* value-prof.c (verify_histograms): Likewise.\n+\t* reload.c (debug_reload_to_stream, debug_reload): Likewise.\n+\t* bitmap.c (debug_bitmap_file, debug_bitmap, bitmap_print): Likewise.\n+\t* cfghooks.c (verify_flow_info): Likewise.\n+\t* fold-const.c (debug_fold_checksum): Likewise.\n+\t* omp-low.c (debug_omp_region, debug_all_omp_regions): Likewise.\n+\t* cfg.c (debug_regset, debug_flow_info, debug_bb, debug_bb_n):\n+\tLikewise.\n+\t* omega.c (debug_omega_problem): Likewise.\n+\t* cgraphunit.c (verify_cgraph_node, verify_cgraph): Likewise.\n+\t* tree-ssa-ccp.c (debug_lattice_value): Likewise.\n+\t* dominance.c (verify_dominators, debug_dominance_info,\n+\tdebug_dominance_tree): Likewise.\n+\t* df-core.c (df_insn_uid_debug, df_insn_debug, df_insn_debug_regno,\n+\t* df_regno_debug, df_ref_debug,\n+\tdebug_df_insn, debug_df_reg, debug_df_regno, debug_df_ref,\n+\tdebug_df_defno, debug_df_useno, debug_df_chain): Likewise.\n+\t* tree-ssa-dom.c (debug_dominator_optimization_stats): Likewise.\n+\t* sel-sched.c (debug_state): Likewise.\n+\t* tree-ssa-alias.c (debug_alias_info, debug_points_to_info_for): Likewise.\n+\t* cfganal.c (print_edge_list, verify_edge_list): Likewise.\n+\t* dwarf2out.c (debug_dwarf_die, debug_dwarf): Likewise.\n+\t* tree-eh.c (verify_eh_edges, verify_eh_dispatch_edge): Likewise.\n+\t* gimple-pretty-print.c (debug_gimple_stmt, debug_gimple_seq): Likewise.\n+\t* c-pretty-print.c (debug_c_tree): Likewise.\n+\t* sel-sched-dump.c (debug_insn_rtx, debug_vinsn, debug_expr, debug_insn\n+\tdebug_av_set, debug_lv_set, debug_ilist, debug_blist, debug_insn_vector,\n+\tdebug_hard_reg_set, debug_mem_addr_value): Likewise.\n+\t* ebitmap.c (debug_ebitmap): Likewise.\n+\t* function.c (debug_find_var_in_block_tree): Likewise.\n+\t* print-rtl.c (debug_rtx): Likewise.\n+\t(debug_rtx_count): Likewise.\n+\t(debug_rtx_list, debug_rtx_range, debug_rtx_find): Likewise.\n+\t* stor-layout.c (debug_rli): Likewise.\n+\t* ipa.c (debug_cgraph_node_set, debug_varpool_node_set): Likewise.\n+\t* tree-data-ref.c (debug_data_references, debug_data_dependence_relations,\n+\tdebug_data_reference, debug_data_dependence_relation, debug_rdg_vertex,\n+\tdebug_rdg_component, debug_rdg): Likewise.\n+\t* tree-affine.c (debug_aff): Likewise.\n+\t* tree-dfa.c (debug_referenced_vars, debug_variable, debug_dfa_stats): Likewise.\n+\t* except.c (debug_eh_tree, verify_eh_tree): Likewise.\n+\t* emit-rtl.c (verify_rtl_sharing): Likewise.\n+\t* tree-ssa-pre.c (debug_pre_expr, debug_bitmap_set,\n+\tdebug_value_expressions): Likewise.\n+\t* tree-ssa-live.c (debug_scope_block, debug_scope_blocks): Likewise.\n+\t* sese.c (debug_rename_map, debug_ivtype_map): Likewise.\n+\t* print-tree.c (debug_tree, debug_vec_tree): Likewise.\n+\t* cfglayout.c (verify_insn_chain): Likewise.\n+\t* graphite-clast-to-gimple.c (debug_clast_name_indexes,\n+\tdebug_clast_stmt, debug_generated_program): Likewise.\n+\t* ggc-page.c (debug_print_page_list): Likewise.\n+\t* tree-ssa-ter.c (debug_ter): Likewise.\n+\t* graphite-dependences.c (debug_pddr): Likewise.\n+\t* sched-deps.c (debug_ds): Likewise.\n+\t* tree-ssa.c (verify_ssa): Likewise.\n+\t* graphite-poly.c (debug_scattering_function, debug_iteration_domain,\n+\tdebug_scattering_functions, debug_iteration_domains, debug_pdr,\n+\tdebug_pdrs, debug_pbb_domain, debug_pbb, debug_scop_context, debug_scop,\n+\tdebug_cloog, debug_scop_params, debug_lst): Likewise.\n+\t* tree-inline.c (debug_find_tree): Likewise.\n+\t* graphite-ppl.c (debug_ppl_linear_expr, debug_ppl_polyhedron_matrix,\n+\tdebug_ppl_powerset_matrix): Likewise.\n+\t* var-tracking.c (debug_dv): Likewise.\n+\t* system.h (DEBUG_FUNCTION, DEBUG_VARIABLE): Define.\n+\t* cfgloop.c (verify_loop_structure): Likewise.\n+\t* plugin.c (dump_active_plugins, debug_active_plugins): Likewise.\n+\t* c-common.c (verify_sequence_points): Likewise.\n+\t* sched-rgn.c (debug_regions, debug_region, debug_candidate,\n+\tdebug_candidates, debug_rgn_dependencies): Likewise.\n+\t* tree-ssa-structalias.c (debug_constraint, debug_constraints,\n+\t* debug_constraint_graph, debug_solution_for_var,\n+\tdebug_sa_points_to_info): Likewise.\n+\t* sched-vis.c (debug_insn_slim, debug_bb_slim, debug_bb_n_slim):\n+\tLikewie.\n+\t* tree-cfg.c (debug_cfg_stats, verify_stmts, debug_function,\n+\tdebug_loops, debug_loop, debug_loop_num): Likewise.\n+\t* passes.c (debug_pass): Likewise.\n+\t(dump_properties): Likewise; add cfglayout property.\n+\t(debug_properties): Likewise.\n+\t* tree-ssa-reassoc.c (debug_ops_vector): Likewise.\n+\t* varpool.c (debug_varpool): Likewise.\n+\t* regcprop.c (debug_value_data): Likewise.\n+\t* tree-ssa-operands.c (verify_imm_links, debug_immediate_uses,\n+\tdebug_immediate_uses_for): Likewise.\n+\n 2010-05-29  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/44315"}, {"sha": "f7309a02c577464ccecdf6bb063fc836f9673f4b", "filename": "gcc/bitmap.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -2023,7 +2023,7 @@ bitmap_ior_and_into (bitmap a, const_bitmap b, const_bitmap c)\n \f\n /* Debugging function to print out the contents of a bitmap.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_bitmap_file (FILE *file, const_bitmap head)\n {\n   const bitmap_element *ptr;\n@@ -2063,7 +2063,7 @@ debug_bitmap_file (FILE *file, const_bitmap head)\n /* Function to be called from the debugger to print the contents\n    of a bitmap.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_bitmap (const_bitmap head)\n {\n   debug_bitmap_file (stdout, head);\n@@ -2072,7 +2072,7 @@ debug_bitmap (const_bitmap head)\n /* Function to print out the contents of a bitmap.  Unlike debug_bitmap_file,\n    it does not print anything but the bits.  */\n \n-void\n+DEBUG_FUNCTION void\n bitmap_print (FILE *file, const_bitmap head, const char *prefix, const char *suffix)\n {\n   const char *comma = \"\";"}, {"sha": "115e30288ed991a080804e4a3a0376f6a99361d2", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -2705,7 +2705,7 @@ verify_tree (tree x, struct tlist **pbefore_sp, struct tlist **pno_sp,\n /* Try to warn for undefined behavior in EXPR due to missing sequence\n    points.  */\n \n-void\n+DEBUG_FUNCTION void\n verify_sequence_points (tree expr)\n {\n   struct tlist *before_sp = 0, *after_sp = 0;"}, {"sha": "ca0608c79e22435b50882d351a56ef468d1bb3dd", "filename": "gcc/c-pretty-print.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pretty-print.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -2231,7 +2231,7 @@ print_c_tree (FILE *file, tree t)\n \n /* Print the tree T in full, on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_c_tree (tree t)\n {\n   print_c_tree (stderr, t);"}, {"sha": "ee6af69746855c3ca68ce3bcb2db68f271d7abc7", "filename": "gcc/cfg.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -514,7 +514,7 @@ dump_regset (regset r, FILE *outf)\n    stream.  This function is designed to be used from within the\n    debugger.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_regset (regset r)\n {\n   dump_regset (r, stderr);\n@@ -668,7 +668,7 @@ dump_flow_info (FILE *file, int flags)\n   putc ('\\n', file);\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_flow_info (void)\n {\n   dump_flow_info (stderr, TDF_DETAILS);\n@@ -868,13 +868,13 @@ free_aux_for_edges (void)\n   clear_aux_for_edges ();\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_bb (basic_block bb)\n {\n   dump_bb (bb, stderr, 0);\n }\n \n-basic_block\n+DEBUG_FUNCTION basic_block\n debug_bb_n (int n)\n {\n   basic_block bb = BASIC_BLOCK (n);"}, {"sha": "5bb23b77adb0a7e9df05c94a0e903fb083479921", "filename": "gcc/cfganal.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcfganal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcfganal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -389,7 +389,7 @@ free_edge_list (struct edge_list *elist)\n \n /* This function provides debug output showing an edge list.  */\n \n-void\n+DEBUG_FUNCTION void\n print_edge_list (FILE *f, struct edge_list *elist)\n {\n   int x;\n@@ -416,7 +416,7 @@ print_edge_list (FILE *f, struct edge_list *elist)\n    verifying that all edges are present, and that there are no\n    extra edges.  */\n \n-void\n+DEBUG_FUNCTION void\n verify_edge_list (FILE *f, struct edge_list *elist)\n {\n   int pred, succ, index;"}, {"sha": "c3d51fd9e36d03cdc7ec7c288f9e2dbf73ed6b86", "filename": "gcc/cfghooks.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcfghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcfghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -88,7 +88,7 @@ current_ir_type (void)\n    Currently it does following: checks edge and basic block list correctness\n    and calls into IL dependent checking then.  */\n \n-void\n+DEBUG_FUNCTION void\n verify_flow_info (void)\n {\n   size_t *edge_checksum;"}, {"sha": "62ca643348d795763953e17fcd4c15621022dce8", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -990,7 +990,7 @@ fixup_reorder_chain (void)\n    2. Count insns in chain, going both directions, and check if equal.\n    3. Check that get_last_insn () returns the actual end of chain.  */\n \n-void\n+DEBUG_FUNCTION void\n verify_insn_chain (void)\n {\n   rtx x, prevx, nextx;"}, {"sha": "858e75b3f52c38426db82ae95067f71faeb71768", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -1316,7 +1316,7 @@ cancel_loop_tree (struct loop *loop)\n      -- loop latches have only single successor that is header of their loop\n      -- irreducible loops are correctly marked\n   */\n-void\n+DEBUG_FUNCTION void\n verify_loop_structure (void)\n {\n   unsigned *sizes, i, j;"}, {"sha": "229f8a30e99e62777696a76787f284929040834e", "filename": "gcc/cgraph.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -1915,7 +1915,7 @@ dump_cgraph_node (FILE *f, struct cgraph_node *node)\n \n /* Dump call graph node NODE to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_cgraph_node (struct cgraph_node *node)\n {\n   dump_cgraph_node (stderr, node);\n@@ -1937,7 +1937,7 @@ dump_cgraph (FILE *f)\n \n /* Dump the call graph to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_cgraph (void)\n {\n   dump_cgraph (stderr);"}, {"sha": "b9c8e79ac6191bbe91497ac1f9d48a5500813979", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -569,7 +569,7 @@ clone_of_p (struct cgraph_node *node, struct cgraph_node *node2)\n #endif\n \n /* Verify cgraph nodes of given cgraph node.  */\n-void\n+DEBUG_FUNCTION void\n verify_cgraph_node (struct cgraph_node *node)\n {\n   struct cgraph_edge *e;\n@@ -878,7 +878,7 @@ verify_cgraph_node (struct cgraph_node *node)\n }\n \n /* Verify whole cgraph structure.  */\n-void\n+DEBUG_FUNCTION void\n verify_cgraph (void)\n {\n   struct cgraph_node *node;"}, {"sha": "0930a02ce29fbf17ac56e362d00edd11b105d6ef", "filename": "gcc/df-core.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fdf-core.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fdf-core.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-core.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -2094,13 +2094,13 @@ df_insn_uid_debug (unsigned int uid,\n }\n \n \n-void\n+DEBUG_FUNCTION void\n df_insn_debug (rtx insn, bool follow_chain, FILE *file)\n {\n   df_insn_uid_debug (INSN_UID (insn), follow_chain, file);\n }\n \n-void\n+DEBUG_FUNCTION void\n df_insn_debug_regno (rtx insn, FILE *file)\n {\n   struct df_insn_info *insn_info = DF_INSN_INFO_GET (insn);\n@@ -2118,7 +2118,7 @@ df_insn_debug_regno (rtx insn, FILE *file)\n   fprintf (file, \"\\n\");\n }\n \n-void\n+DEBUG_FUNCTION void\n df_regno_debug (unsigned int regno, FILE *file)\n {\n   fprintf (file, \"reg %d defs \", regno);\n@@ -2131,7 +2131,7 @@ df_regno_debug (unsigned int regno, FILE *file)\n }\n \n \n-void\n+DEBUG_FUNCTION void\n df_ref_debug (df_ref ref, FILE *file)\n {\n   fprintf (file, \"%c%d \",\n@@ -2159,50 +2159,50 @@ df_ref_debug (df_ref ref, FILE *file)\n \f\n /* Functions for debugging from GDB.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_df_insn (rtx insn)\n {\n   df_insn_debug (insn, true, stderr);\n   debug_rtx (insn);\n }\n \n \n-void\n+DEBUG_FUNCTION void\n debug_df_reg (rtx reg)\n {\n   df_regno_debug (REGNO (reg), stderr);\n }\n \n \n-void\n+DEBUG_FUNCTION void\n debug_df_regno (unsigned int regno)\n {\n   df_regno_debug (regno, stderr);\n }\n \n \n-void\n+DEBUG_FUNCTION void\n debug_df_ref (df_ref ref)\n {\n   df_ref_debug (ref, stderr);\n }\n \n \n-void\n+DEBUG_FUNCTION void\n debug_df_defno (unsigned int defno)\n {\n   df_ref_debug (DF_DEFS_GET (defno), stderr);\n }\n \n \n-void\n+DEBUG_FUNCTION void\n debug_df_useno (unsigned int defno)\n {\n   df_ref_debug (DF_USES_GET (defno), stderr);\n }\n \n \n-void\n+DEBUG_FUNCTION void\n debug_df_chain (struct df_link *link)\n {\n   df_chain_dump (link, stderr);"}, {"sha": "9c2dcf03707b8b691a1128adb0fb5bb1d46b753a", "filename": "gcc/dominance.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fdominance.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fdominance.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdominance.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -989,7 +989,7 @@ bb_dom_dfs_out (enum cdi_direction dir, basic_block bb)\n }\n \n /* Verify invariants of dominator structure.  */\n-void\n+DEBUG_FUNCTION void\n verify_dominators (enum cdi_direction dir)\n {\n   int err = 0;\n@@ -1466,7 +1466,7 @@ dom_info_available_p (enum cdi_direction dir)\n   return dom_computed[dir_index] != DOM_NONE;\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_dominance_info (enum cdi_direction dir)\n {\n   basic_block bb, bb2;\n@@ -1507,7 +1507,7 @@ debug_dominance_tree_1 (enum cdi_direction dir, basic_block root,\n /* Prints to stderr representation of the dominance tree (for direction DIR)\n    rooted in ROOT.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_dominance_tree (enum cdi_direction dir, basic_block root)\n {\n   debug_dominance_tree_1 (dir, root, 0, false);"}, {"sha": "eec92d342e6e32ab8957eb9258e2f941ff66c8c8", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -8239,7 +8239,7 @@ print_dwarf_line_table (FILE *outfile)\n \n /* Print the information collected for a given DIE.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_dwarf_die (dw_die_ref die)\n {\n   print_die (die, stderr);\n@@ -8248,7 +8248,7 @@ debug_dwarf_die (dw_die_ref die)\n /* Print all DWARF information collected for the compilation unit.\n    This routine is a debugging aid only.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_dwarf (void)\n {\n   print_indent = 0;"}, {"sha": "cb52468fed67aa01aa708f44368e9c3cff43e2ac", "filename": "gcc/ebitmap.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Febitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Febitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Febitmap.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -410,7 +410,7 @@ dump_ebitmap (FILE *file, ebitmap bmap)\n \n /* Dump ebitmap BMAP to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_ebitmap (ebitmap bmap)\n {\n   dump_ebitmap (stderr, bmap);"}, {"sha": "c1d2468e14e17c8eebf40f3357fa2e491b49e145", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -2537,7 +2537,7 @@ verify_rtx_sharing (rtx orig, rtx insn)\n /* Go through all the RTL insn bodies and check that there is no unexpected\n    sharing in between the subexpressions.  */\n \n-void\n+DEBUG_FUNCTION void\n verify_rtl_sharing (void)\n {\n   rtx p;"}, {"sha": "d166a9a1527da56f864ccabc778c67fadc058007", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -3307,15 +3307,15 @@ dump_eh_tree (FILE * out, struct function *fun)\n \n /* Dump the EH tree for FN on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_eh_tree (struct function *fn)\n {\n   dump_eh_tree (stderr, fn);\n }\n \n /* Verify invariants on EH datastructures.  */\n \n-void\n+DEBUG_FUNCTION void\n verify_eh_tree (struct function *fun)\n {\n   eh_region r, outer;"}, {"sha": "b6e8ed6878330863a6025cd862b23881b76550ec", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -13768,7 +13768,7 @@ fold_checksum_tree (const_tree expr, struct md5_ctx *ctx, htab_t ht)\n    by \"call debug_fold_checksum (op0)\", then just trace down till the\n    outputs differ.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_fold_checksum (const_tree t)\n {\n   int i;"}, {"sha": "771552913f117f3bb7ec6c4a0887b5d2b3b6c1fa", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -4084,7 +4084,7 @@ number_blocks (tree fn)\n \n /* If VAR is present in a subblock of BLOCK, return the subblock.  */\n \n-tree\n+DEBUG_FUNCTION tree\n debug_find_var_in_block_tree (tree var, tree block)\n {\n   tree t;"}, {"sha": "b299b7c55fcafff4aab8b7f7cdacfeed4d546ae2", "filename": "gcc/genrecog.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -2897,13 +2897,13 @@ debug_decision_0 (struct decision *d, int indent, int maxdepth)\n     debug_decision_0 (n, indent + 2, maxdepth - 1);\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_decision (struct decision *d)\n {\n   debug_decision_0 (d, 0, 1000000);\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_decision_list (struct decision *d)\n {\n   while (d)"}, {"sha": "67483f1934933b4991c4b6d79582d854924542da", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -645,7 +645,7 @@ set_page_table_entry (void *p, page_entry *entry)\n \n /* Prints the page-entry for object size ORDER, for debugging.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_print_page_list (int order)\n {\n   page_entry *p;"}, {"sha": "bf3bb723943ae420a763b174229d6699a354fa16", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -81,7 +81,7 @@ newline_and_indent (pretty_printer *buffer, int spc)\n \n /* Print the GIMPLE statement GS on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_gimple_stmt (gimple gs)\n {\n   print_gimple_stmt (stderr, gs, 0, TDF_VOPS|TDF_MEMSYMS);\n@@ -147,7 +147,7 @@ print_gimple_seq (FILE *file, gimple_seq seq, int spc, int flags)\n \n /* Print the GIMPLE sequence SEQ on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_gimple_seq (gimple_seq seq)\n {\n   print_gimple_seq (stderr, seq, 0, TDF_VOPS|TDF_MEMSYMS);"}, {"sha": "b0e1a94bc25d22b90563894e5b34f6d2d7480493", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -149,7 +149,7 @@ debug_clast_name_indexes_1 (void **slot, void *s ATTRIBUTE_UNUSED)\n \n /* Print to stderr all the elements of MAP.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_clast_name_indexes (htab_t map)\n {\n   htab_traverse (map, debug_clast_name_indexes_1, NULL);\n@@ -1481,7 +1481,7 @@ print_clast_stmt (FILE *file, struct clast_stmt *stmt)\n \n /* Prints STMT to STDERR.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_clast_stmt (struct clast_stmt *stmt)\n {\n   print_clast_stmt (stderr, stmt);\n@@ -1530,7 +1530,7 @@ print_generated_program (FILE *file, scop_p scop)\n \n /* Prints to STDERR the code generated by CLooG for SCOP.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_generated_program (scop_p scop)\n {\n   print_generated_program (stderr, scop);"}, {"sha": "f060ea008d92ba852d65fd3bdde4d80f107faa7a", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -202,7 +202,7 @@ print_pddr (FILE *file, poly_ddr_p pddr)\n \n /* Prints to STDERR the poly_ddr_p PDDR.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_pddr (poly_ddr_p pddr)\n {\n   print_pddr (stderr, pddr);"}, {"sha": "7eb45ca011008b986071bef2ba40b5352b24ddf5", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -242,7 +242,7 @@ print_iteration_domains (FILE *file, scop_p scop, int verbosity)\n /* Prints to STDERR the scattering function of PBB, at some VERBOSITY\n    level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_scattering_function (poly_bb_p pbb, int verbosity)\n {\n   print_scattering_function (stderr, pbb, verbosity);\n@@ -251,7 +251,7 @@ debug_scattering_function (poly_bb_p pbb, int verbosity)\n /* Prints to STDERR the iteration domain of PBB, at some VERBOSITY\n    level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_iteration_domain (poly_bb_p pbb, int verbosity)\n {\n   print_iteration_domain (stderr, pbb, verbosity);\n@@ -260,7 +260,7 @@ debug_iteration_domain (poly_bb_p pbb, int verbosity)\n /* Prints to STDERR the scattering functions of every PBB of SCOP, at\n    some VERBOSITY level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_scattering_functions (scop_p scop, int verbosity)\n {\n   print_scattering_functions (stderr, scop, verbosity);\n@@ -269,7 +269,7 @@ debug_scattering_functions (scop_p scop, int verbosity)\n /* Prints to STDERR the iteration domains of every PBB of SCOP, at\n    some VERBOSITY level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_iteration_domains (scop_p scop, int verbosity)\n {\n   print_iteration_domains (stderr, scop, verbosity);\n@@ -500,7 +500,7 @@ print_pdr (FILE *file, poly_dr_p pdr, int verbosity)\n /* Prints to STDERR the polyhedral data reference PDR, at some\n    VERBOSITY level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_pdr (poly_dr_p pdr, int verbosity)\n {\n   print_pdr (stderr, pdr, verbosity);\n@@ -703,7 +703,7 @@ print_pdrs (FILE *file, poly_bb_p pbb, int verbosity)\n \n /* Print to STDERR all the data references of PBB.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_pdrs (poly_bb_p pbb, int verbosity)\n {\n   print_pdrs (stderr, pbb, verbosity);\n@@ -937,7 +937,7 @@ print_cloog (FILE *file, scop_p scop, int verbosity)\n \n /* Print to STDERR the domain of PBB, at some VERBOSITY level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_pbb_domain (poly_bb_p pbb, int verbosity)\n {\n   print_pbb_domain (stderr, pbb, verbosity);\n@@ -946,23 +946,23 @@ debug_pbb_domain (poly_bb_p pbb, int verbosity)\n /* Print to FILE the domain and scattering function of PBB, at some\n    VERBOSITY level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_pbb (poly_bb_p pbb, int verbosity)\n {\n   print_pbb (stderr, pbb, verbosity);\n }\n \n /* Print to STDERR the context of SCOP, at some VERBOSITY level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_scop_context (scop_p scop, int verbosity)\n {\n   print_scop_context (stderr, scop, verbosity);\n }\n \n /* Print to STDERR the SCOP, at some VERBOSITY level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_scop (scop_p scop, int verbosity)\n {\n   print_scop (stderr, scop, verbosity);\n@@ -971,7 +971,7 @@ debug_scop (scop_p scop, int verbosity)\n /* Print to STDERR the SCOP under CLooG format, at some VERBOSITY\n    level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_cloog (scop_p scop, int verbosity)\n {\n   print_cloog (stderr, scop, verbosity);\n@@ -980,7 +980,7 @@ debug_cloog (scop_p scop, int verbosity)\n /* Print to STDERR the parameters of SCOP, at some VERBOSITY\n    level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_scop_params (scop_p scop, int verbosity)\n {\n   print_scop_params (stderr, scop, verbosity);\n@@ -1226,7 +1226,7 @@ print_lst (FILE *file, lst_p lst, int indent)\n \n /* Print LST to STDERR.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_lst (lst_p lst)\n {\n   print_lst (stderr, lst, 0);"}, {"sha": "bbe202472a8422c93e8c9402c82091b268a86dc8", "filename": "gcc/graphite-ppl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fgraphite-ppl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fgraphite-ppl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-ppl.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -580,7 +580,7 @@ ppl_print_linear_expr (FILE *file, ppl_Linear_Expression_t le)\n \n /* Print to STDERR the linear expression LE.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_ppl_linear_expr (ppl_Linear_Expression_t le)\n {\n   ppl_print_linear_expr (stderr, le);\n@@ -618,15 +618,15 @@ ppl_print_powerset_matrix (FILE *file,\n \n /* Print to STDERR the polyhedron PH under its PolyLib matrix form.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_ppl_polyhedron_matrix (ppl_Polyhedron_t ph)\n {\n   ppl_print_polyhedron_matrix (stderr, ph);\n }\n \n /* Print to STDERR the powerset PS in its PolyLib matrix form.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_ppl_powerset_matrix (ppl_Pointset_Powerset_C_Polyhedron_t ps)\n {\n   ppl_print_powerset_matrix (stderr, ps);"}, {"sha": "ebfc1a20ecd21691cace1650b87e7d6410947faa", "filename": "gcc/ipa.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -1004,7 +1004,7 @@ dump_cgraph_node_set (FILE *f, cgraph_node_set set)\n \n /* Dump content of SET to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_cgraph_node_set (cgraph_node_set set)\n {\n   dump_cgraph_node_set (stderr, set);\n@@ -1161,7 +1161,7 @@ dump_varpool_node_set (FILE *f, varpool_node_set set)\n \n /* Dump content of SET to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_varpool_node_set (varpool_node_set set)\n {\n   dump_varpool_node_set (stderr, set);"}, {"sha": "d218c0e39b6c87810d63e3bfb639804e1e81ff95", "filename": "gcc/omega.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fomega.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fomega.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomega.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -363,7 +363,7 @@ omega_print_vars (FILE *file, omega_pb pb)\n \n /* Debug problem PB.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_omega_problem (omega_pb pb)\n {\n   omega_print_problem (stderr, pb);"}, {"sha": "3a93cdeb7984ee1684eaf10125d05bdbb92823e5", "filename": "gcc/omp-low.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -1112,13 +1112,13 @@ dump_omp_region (FILE *file, struct omp_region *region, int indent)\n     dump_omp_region (file, region->next, indent);\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_omp_region (struct omp_region *region)\n {\n   dump_omp_region (stderr, region, 0);\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_all_omp_regions (void)\n {\n   dump_omp_region (stderr, root_omp_region, 0);"}, {"sha": "f753def97ba0b30f51a9144f37a9d9f50d42a650", "filename": "gcc/optabs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -6676,7 +6676,7 @@ init_optabs (void)\n /* Print information about the current contents of the optabs on\n    STDERR.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_optab_libfuncs (void)\n {\n   int i;"}, {"sha": "ebbfd97cece25bba89d72da9eb2bfdae03e3e9af", "filename": "gcc/passes.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -121,7 +121,7 @@ print_current_pass (FILE *file)\n \n \n /* Call from the debugger to get the current pass name.  */\n-void\n+DEBUG_FUNCTION void\n debug_pass (void)\n {\n   print_current_pass (stderr);\n@@ -1988,7 +1988,7 @@ execute_all_ipa_stmt_fixups (struct cgraph_node *node, gimple *stmts)\n extern void debug_properties (unsigned int);\n extern void dump_properties (FILE *, unsigned int);\n \n-void\n+DEBUG_FUNCTION void\n dump_properties (FILE *dump, unsigned int props)\n {\n   fprintf (dump, \"Properties:\\n\");\n@@ -2012,9 +2012,11 @@ dump_properties (FILE *dump, unsigned int props)\n     fprintf (dump, \"PROP_gimple_lomp\\n\");\n   if (props & PROP_gimple_lcx)\n     fprintf (dump, \"PROP_gimple_lcx\\n\");\n+  if (props & PROP_cfglayout)\n+    fprintf (dump, \"PROP_cfglayout\\n\");\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_properties (unsigned int props)\n {\n   dump_properties (stderr, props);"}, {"sha": "6de4a8b073952de50b0ca2c1b2d9b94f8b95bff6", "filename": "gcc/plugin.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fplugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fplugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fplugin.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -778,7 +778,7 @@ plugins_active_p (void)\n /* Dump to FILE the names and associated events for all the active\n    plugins.  */\n \n-void\n+DEBUG_FUNCTION void\n dump_active_plugins (FILE *file)\n {\n   int event;\n@@ -804,7 +804,7 @@ dump_active_plugins (FILE *file)\n \n /* Dump active plugins to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_active_plugins (void)\n {\n   dump_active_plugins (stderr);"}, {"sha": "5cf0f9b6185757a00dc266ba79bb8f957f846296", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -626,7 +626,7 @@ print_inline_rtx (FILE *outf, const_rtx x, int ind)\n \n /* Call this function from the debugger to see what X looks like.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_rtx (const_rtx x)\n {\n   outfile = stderr;\n@@ -638,15 +638,15 @@ debug_rtx (const_rtx x)\n /* Count of rtx's to print with debug_rtx_list.\n    This global exists because gdb user defined commands have no arguments.  */\n \n-int debug_rtx_count = 0;\t/* 0 is treated as equivalent to 1 */\n+DEBUG_VARIABLE int debug_rtx_count = 0;\t/* 0 is treated as equivalent to 1 */\n \n /* Call this function to print list from X on.\n \n    N is a count of the rtx's to print. Positive values print from the specified\n    rtx on.  Negative values print a window around the rtx.\n    EG: -5 prints 2 rtx's on either side (in addition to the specified rtx).  */\n \n-void\n+DEBUG_FUNCTION void\n debug_rtx_list (const_rtx x, int n)\n {\n   int i,count;\n@@ -673,7 +673,7 @@ debug_rtx_list (const_rtx x, int n)\n \n /* Call this function to print an rtx list from START to END inclusive.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_rtx_range (const_rtx start, const_rtx end)\n {\n   while (1)\n@@ -690,7 +690,7 @@ debug_rtx_range (const_rtx start, const_rtx end)\n    and then call debug_rtx_list to print it, using DEBUG_RTX_COUNT.\n    The found insn is returned to enable further debugging analysis.  */\n \n-const_rtx\n+DEBUG_FUNCTION const_rtx\n debug_rtx_find (const_rtx x, int uid)\n {\n   while (x != 0 && INSN_UID (x) != uid)"}, {"sha": "10ac8f32062cda6190710352f9c886fa086039ca", "filename": "gcc/print-tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -50,7 +50,7 @@ static struct bucket **table;\n    Most nodes referred to by this one are printed recursively\n    down to a depth of six.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_tree (tree node)\n {\n   table = XCNEWVEC (struct bucket *, HASH_SIZE);\n@@ -64,7 +64,7 @@ debug_tree (tree node)\n    Most nodes referred to by this one are printed recursively\n    down to a depth of six.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_vec_tree (VEC(tree,gc) *vec)\n {\n   table = XCNEWVEC (struct bucket *, HASH_SIZE);"}, {"sha": "039c8b0769b5837a8864b0901235d1aa6aef612b", "filename": "gcc/regcprop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fregcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fregcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregcprop.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -1057,7 +1057,7 @@ copyprop_hardreg_forward (void)\n \n /* Dump the value chain data to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_value_data (struct value_data *vd)\n {\n   HARD_REG_SET set;"}, {"sha": "d4b7982bc0a12789dba84f7873d9e943e0de7abe", "filename": "gcc/reload.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -7337,7 +7337,7 @@ static const char *const reload_when_needed_name[] =\n \n /* These functions are used to print the variables set by 'find_reloads' */\n \n-void\n+DEBUG_FUNCTION void\n debug_reload_to_stream (FILE *f)\n {\n   int r;\n@@ -7432,7 +7432,7 @@ debug_reload_to_stream (FILE *f)\n     }\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_reload (void)\n {\n   debug_reload_to_stream (stderr);"}, {"sha": "4796c37df824e4a7c8939b50d5781655aef59e6c", "filename": "gcc/sbitmap.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsbitmap.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -1011,7 +1011,7 @@ dump_sbitmap_file (FILE *file, const_sbitmap bmap)\n   fprintf (file, \"}\\n\");\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_sbitmap (const_sbitmap bmap)\n {\n   dump_sbitmap_file (stderr, bmap);"}, {"sha": "556c38a4fb0faa42bd97dda4b033b4a621418b07", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -4077,7 +4077,7 @@ dump_ds (FILE *f, ds_t s)\n   fprintf (f, \"}\");\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_ds (ds_t s)\n {\n   dump_ds (stderr, s);"}, {"sha": "89743c31b74c56fcebe47516b4415416ef7335a8", "filename": "gcc/sched-rgn.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsched-rgn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsched-rgn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-rgn.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -354,7 +354,7 @@ extract_edgelst (sbitmap set, edgelst *el)\n \n /* Print the regions, for debugging purposes.  Callable from debugger.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_regions (void)\n {\n   int rgn, bb;\n@@ -379,7 +379,7 @@ debug_regions (void)\n \n /* Print the region's basic blocks.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_region (int rgn)\n {\n   int bb;\n@@ -1594,7 +1594,7 @@ free_trg_info (void)\n \n /* Print candidates info, for debugging purposes.  Callable from debugger.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_candidate (int i)\n {\n   if (!candidate_table[i].is_valid)\n@@ -1631,7 +1631,7 @@ debug_candidate (int i)\n \n /* Print candidates info, for debugging purposes.  Callable from debugger.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_candidates (int trg)\n {\n   int i;\n@@ -2775,7 +2775,7 @@ free_pending_lists (void)\n    Callable from debugger.  */\n /* Print dependences for debugging starting from FROM_BB.\n    Callable from debugger.  */\n-void\n+DEBUG_FUNCTION void\n debug_rgn_dependencies (int from_bb)\n {\n   int bb;"}, {"sha": "98d1d1c615f6fd60374e19873f61d1656a604c65", "filename": "gcc/sched-vis.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsched-vis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsched-vis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-vis.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -763,7 +763,7 @@ dump_insn_slim (FILE *f, rtx x)\n }\n \n /* Emit a slim dump of X (an insn) to stderr.  */\n-void\n+DEBUG_FUNCTION void\n debug_insn_slim (rtx x)\n {\n   dump_insn_slim (stderr, x);\n@@ -814,13 +814,13 @@ print_rtl_slim (FILE *f, rtx first, rtx last, int count, int flags)\n     }\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_bb_slim (struct basic_block_def *bb)\n {\n   print_rtl_slim (stderr, BB_HEAD (bb), BB_END (bb), -1, 32);\n }\n \n-void\n+DEBUG_FUNCTION void\n debug_bb_n_slim (int n)\n {\n   struct basic_block_def *bb = BASIC_BLOCK (n);"}, {"sha": "1042a6e8e4985b21deba34b1e816d590ecd0e8d8", "filename": "gcc/sel-sched-dump.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsel-sched-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsel-sched-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-dump.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -164,7 +164,7 @@ dump_insn_rtx (rtx insn)\n \n \n /* Dump INSN to stderr.  */\n-void\n+DEBUG_FUNCTION void\n debug_insn_rtx (rtx insn)\n {\n   switch_dump (stderr);\n@@ -214,7 +214,7 @@ dump_vinsn (vinsn_t vi)\n }\n \n /* Dump vinsn VI to stderr.  */\n-void\n+DEBUG_FUNCTION void\n debug_vinsn (vinsn_t vi)\n {\n   switch_dump (stderr);\n@@ -295,7 +295,7 @@ dump_expr (expr_t expr)\n }\n \n /* Dump expression EXPR to stderr.  */\n-void\n+DEBUG_FUNCTION void\n debug_expr (expr_t expr)\n {\n   switch_dump (stderr);\n@@ -353,7 +353,7 @@ dump_insn (insn_t i)\n }\n \n /* Dump INSN to stderr.  */\n-void\n+DEBUG_FUNCTION void\n debug_insn (insn_t insn)\n {\n   switch_dump (stderr);\n@@ -861,7 +861,7 @@ sel_debug_cfg_1 (int flags)\n }\n \f\n /* Dumps av_set AV to stderr.  */\n-void\n+DEBUG_FUNCTION void\n debug_av_set (av_set_t av)\n {\n   switch_dump (stderr);\n@@ -871,7 +871,7 @@ debug_av_set (av_set_t av)\n }\n \n /* Dump LV to stderr.  */\n-void\n+DEBUG_FUNCTION void\n debug_lv_set (regset lv)\n {\n   switch_dump (stderr);\n@@ -881,7 +881,7 @@ debug_lv_set (regset lv)\n }\n \n /* Dump an instruction list P to stderr.  */\n-void\n+DEBUG_FUNCTION void\n debug_ilist (ilist_t p)\n {\n   switch_dump (stderr);\n@@ -891,7 +891,7 @@ debug_ilist (ilist_t p)\n }\n \n /* Dump a boundary list BNDS to stderr.  */\n-void\n+DEBUG_FUNCTION void\n debug_blist (blist_t bnds)\n {\n   switch_dump (stderr);\n@@ -901,7 +901,7 @@ debug_blist (blist_t bnds)\n }\n \n /* Dump an insn vector SUCCS.  */\n-void\n+DEBUG_FUNCTION void\n debug_insn_vector (rtx_vec_t succs)\n {\n   switch_dump (stderr);\n@@ -911,7 +911,7 @@ debug_insn_vector (rtx_vec_t succs)\n }\n \n /* Dump a hard reg set SET to stderr.  */\n-void\n+DEBUG_FUNCTION void\n debug_hard_reg_set (HARD_REG_SET set)\n {\n   switch_dump (stderr);\n@@ -928,7 +928,7 @@ sel_debug_cfg (void)\n }\n \n /* Print a current cselib value for X's address to stderr.  */\n-rtx\n+DEBUG_FUNCTION rtx\n debug_mem_addr_value (rtx x)\n {\n   rtx t, addr;"}, {"sha": "7e9bd91f2d793c80e68597248744f64952bf6014", "filename": "gcc/sese.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -69,7 +69,7 @@ debug_rename_map_1 (void **slot, void *s ATTRIBUTE_UNUSED)\n \n /* Print to stderr all the elements of MAP.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_rename_map (htab_t map)\n {\n   htab_traverse (map, debug_rename_map_1, NULL);\n@@ -118,7 +118,7 @@ debug_ivtype_map_1 (void **slot, void *s ATTRIBUTE_UNUSED)\n \n /* Print to stderr all the elements of MAP.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_ivtype_map (htab_t map)\n {\n   htab_traverse (map, debug_ivtype_map_1, NULL);"}, {"sha": "3780a7f94dbb704d08b2408379b09fc3a32e95aa", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -813,7 +813,7 @@ normalize_offset (tree *poffset, tree *pbitpos, unsigned int off_align)\n \n /* Print debugging information about the information in RLI.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_rli (record_layout_info rli)\n {\n   print_node_brief (stderr, \"type\", rli->t, 0);"}, {"sha": "a6bc93085c4a3a54a145750c4ed5b71d460b481f", "filename": "gcc/system.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -873,4 +873,14 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n #define VALGRIND_FREELIKE_BLOCK(x,y)\n #endif\n \n+/* In LTO -fwhole-program build we still want to keep the debug functions available\n+   for debugger.  Mark them as used to prevent removal.  */\n+#if (GCC_VERSION > 4000)\n+#define DEBUG_FUNCTION __attribute__ ((__used__))\n+#define DEBUG_VARIABLE __attribute__ ((__used__))\n+#else\n+#define DEBUG_FUNCTION\n+#define DEBUG_VARIABLE\n+#endif\n+\n #endif /* ! GCC_SYSTEM_H */"}, {"sha": "898e5c125522f9c51c4cfb225683521092ed20ba", "filename": "gcc/tree-affine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-affine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-affine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-affine.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -818,7 +818,7 @@ print_aff (FILE *file, aff_tree *val)\n \n /* Prints the affine VAL to the standard error, used for debugging.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_aff (aff_tree *val)\n {\n   print_aff (stderr, val);"}, {"sha": "fc6ee350ae3020b99ae7ebb7743042abf604cb19", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -2110,7 +2110,7 @@ dump_cfg_stats (FILE *file)\n /* Dump CFG statistics on stderr.  Keep extern so that it's always\n    linked in the final executable.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_cfg_stats (void)\n {\n   dump_cfg_stats (stderr);\n@@ -4074,7 +4074,7 @@ verify_eh_throw_stmt_node (void **slot, void *data)\n \n /* Verify the GIMPLE statements in every basic block.  */\n \n-void\n+DEBUG_FUNCTION void\n verify_stmts (void)\n {\n   basic_block bb;\n@@ -6314,7 +6314,7 @@ dump_function_to_file (tree fn, FILE *file, int flags)\n \n /* Dump FUNCTION_DECL FN to stderr using FLAGS (see TDF_* in tree.h)  */\n \n-void\n+DEBUG_FUNCTION void\n debug_function (tree fn, int flags)\n {\n   dump_function_to_file (fn, stderr, flags);\n@@ -6455,15 +6455,15 @@ print_loops (FILE *file, int verbosity)\n \n /* Debugging loops structure at tree level, at some VERBOSITY level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_loops (int verbosity)\n {\n   print_loops (stderr, verbosity);\n }\n \n /* Print on stderr the code of LOOP, at some VERBOSITY level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_loop (struct loop *loop, int verbosity)\n {\n   print_loop (stderr, loop, 0, verbosity);\n@@ -6472,7 +6472,7 @@ debug_loop (struct loop *loop, int verbosity)\n /* Print on stderr the code of loop number NUM, at some VERBOSITY\n    level.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_loop_num (unsigned num, int verbosity)\n {\n   debug_loop (get_loop (num), verbosity);"}, {"sha": "41dae8deb1ec8f0619ac23f580082cddafefb028", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -161,15 +161,15 @@ dump_data_references (FILE *file, VEC (data_reference_p, heap) *datarefs)\n \n /* Dump into STDERR all the data references from DATAREFS.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_data_references (VEC (data_reference_p, heap) *datarefs)\n {\n   dump_data_references (stderr, datarefs);\n }\n \n /* Dump to STDERR all the dependence relations from DDRS.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_data_dependence_relations (VEC (ddr_p, heap) *ddrs)\n {\n   dump_data_dependence_relations (stderr, ddrs);\n@@ -190,7 +190,7 @@ dump_data_dependence_relations (FILE *file,\n \n /* Print to STDERR the data_reference DR.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_data_reference (struct data_reference *dr)\n {\n   dump_data_reference (stderr, dr);\n@@ -364,7 +364,7 @@ print_dist_vectors  (FILE *outf, VEC (lambda_vector, heap) *dist_vects,\n \n /* Debug version.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_data_dependence_relation (struct data_dependence_relation *ddr)\n {\n   dump_data_dependence_relation (stderr, ddr);\n@@ -4606,7 +4606,7 @@ dump_rdg_vertex (FILE *file, struct graph *rdg, int i)\n \n /* Call dump_rdg_vertex on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_rdg_vertex (struct graph *rdg, int i)\n {\n   dump_rdg_vertex (stderr, rdg, i);\n@@ -4635,7 +4635,7 @@ void dump_rdg_component (FILE *file, struct graph *rdg, int c, bitmap dumped)\n \n /* Call dump_rdg_vertex on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_rdg_component (struct graph *rdg, int c)\n {\n   dump_rdg_component (stderr, rdg, c, NULL);\n@@ -4661,7 +4661,7 @@ dump_rdg (FILE *file, struct graph *rdg)\n \n /* Call dump_rdg on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_rdg (struct graph *rdg)\n {\n   dump_rdg (stderr, rdg);"}, {"sha": "66b9090ed6af94c372e0b0b055d7a7cb55b51e07", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -232,7 +232,7 @@ dump_referenced_vars (FILE *file)\n \n /* Dump the list of all the referenced variables to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_referenced_vars (void)\n {\n   dump_referenced_vars (stderr);\n@@ -305,7 +305,7 @@ dump_variable (FILE *file, tree var)\n \n /* Dump variable VAR and its may-aliases to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_variable (tree var)\n {\n   dump_variable (stderr, var);\n@@ -392,7 +392,7 @@ dump_dfa_stats (FILE *file)\n \n /* Dump DFA statistics on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_dfa_stats (void)\n {\n   dump_dfa_stats (stderr);"}, {"sha": "a7dd72b3da16dbdfdda004907b6c42d66e969b5c", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -3918,7 +3918,7 @@ struct gimple_opt_pass pass_cleanup_eh = {\n /* Verify that BB containing STMT as the last statement, has precisely the\n    edge that make_eh_edges would create.  */\n \n-bool\n+DEBUG_FUNCTION bool\n verify_eh_edges (gimple stmt)\n {\n   basic_block bb = gimple_bb (stmt);\n@@ -3979,7 +3979,7 @@ verify_eh_edges (gimple stmt)\n \n /* Similarly, but handle GIMPLE_EH_DISPATCH specifically.  */\n \n-bool\n+DEBUG_FUNCTION bool\n verify_eh_dispatch_edge (gimple stmt)\n {\n   eh_region r;"}, {"sha": "e42e81c60a17de0d9983a47da6ebfeb6a7dd41d8", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -4544,7 +4544,7 @@ debug_find_tree_1 (tree *tp, int *walk_subtrees ATTRIBUTE_UNUSED, void *data)\n     return NULL;\n }\n \n-bool\n+DEBUG_FUNCTION bool\n debug_find_tree (tree top, tree search)\n {\n   return walk_tree_without_duplicates (&top, debug_find_tree_1, search) != 0;"}, {"sha": "5885addde261a193c77f25e0c7a95ea50deac163", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -1494,7 +1494,7 @@ dump_decl_set (FILE *file, bitmap set)\n \n /* Dump bitmap SET (assumed to contain VAR_DECLs) to FILE.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_decl_set (bitmap set)\n {\n   dump_decl_set (stderr, set);\n@@ -1565,7 +1565,7 @@ dump_defs_stack (FILE *file, int n)\n    dumped.  New levels are created when the dominator tree traversal\n    used for renaming enters a new sub-tree.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_defs_stack (int n)\n {\n   dump_defs_stack (stderr, n);\n@@ -1599,7 +1599,7 @@ dump_currdefs (FILE *file)\n \n /* Dump the current reaching definition of every symbol to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_currdefs (void)\n {\n   dump_currdefs (stderr);\n@@ -1625,7 +1625,7 @@ dump_tree_ssa (FILE *file)\n \n /* Dump SSA information to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_tree_ssa (void)\n {\n   dump_tree_ssa (stderr);\n@@ -1671,7 +1671,7 @@ dump_tree_ssa_stats (FILE *file)\n \n /* Dump SSA statistics on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_tree_ssa_stats (void)\n {\n   dump_tree_ssa_stats (stderr);\n@@ -1739,7 +1739,7 @@ dump_def_blocks (FILE *file)\n \n /* Dump the DEF_BLOCKS hash table on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_def_blocks (void)\n {\n   dump_def_blocks (stderr);\n@@ -2692,7 +2692,7 @@ dump_names_replaced_by (FILE *file, tree name)\n \n /* Dump all the names replaced by NAME to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_names_replaced_by (tree name)\n {\n   dump_names_replaced_by (stderr, name);\n@@ -2757,7 +2757,7 @@ dump_update_ssa (FILE *file)\n \n /* Dump SSA update information to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_update_ssa (void)\n {\n   dump_update_ssa (stderr);"}, {"sha": "51c66778773d6ee6c4a3e88ebebd5503061d4ecd", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -970,7 +970,7 @@ dump_rdg_partitions (FILE *file, VEC (bitmap, heap) *partitions)\n /* Debug PARTITIONS.  */\n extern void debug_rdg_partitions (VEC (bitmap, heap) *);\n \n-void\n+DEBUG_FUNCTION void\n debug_rdg_partitions (VEC (bitmap, heap) *partitions)\n {\n   dump_rdg_partitions (stderr, partitions);"}, {"sha": "ec10c144a5fa69ab5183065f9b01c1a5adbbae95", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -77,7 +77,7 @@ do_niy (pretty_printer *buffer, const_tree node)\n \n /* Debugging function to print out a generic expression.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_generic_expr (tree t)\n {\n   print_generic_expr (stderr, t, TDF_VOPS|TDF_MEMSYMS);\n@@ -86,7 +86,7 @@ debug_generic_expr (tree t)\n \n /* Debugging function to print out a generic statement.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_generic_stmt (tree t)\n {\n   print_generic_stmt (stderr, t, TDF_VOPS|TDF_MEMSYMS);\n@@ -95,7 +95,7 @@ debug_generic_stmt (tree t)\n \n /* Debugging function to print out a chain of trees .  */\n \n-void\n+DEBUG_FUNCTION void\n debug_tree_chain (tree t)\n {\n   struct pointer_set_t *seen = pointer_set_create ();"}, {"sha": "e510358a49bda0c0e5814d4750e35372bfa9ed03", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -358,7 +358,7 @@ dump_alias_info (FILE *file)\n \n /* Dump alias information on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_alias_info (void)\n {\n   dump_alias_info (stderr);\n@@ -437,7 +437,7 @@ dump_points_to_info_for (FILE *file, tree ptr)\n \n /* Dump points-to information for VAR into stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_points_to_info_for (tree var)\n {\n   dump_points_to_info_for (stderr, var);"}, {"sha": "3a2b51c72c599b167cde671b707e55c30de4ea0b", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -261,7 +261,7 @@ dump_lattice_value (FILE *outf, const char *prefix, prop_value_t val)\n \n void debug_lattice_value (prop_value_t val);\n \n-void\n+DEBUG_FUNCTION void\n debug_lattice_value (prop_value_t val)\n {\n   dump_lattice_value (stderr, \"\", val);"}, {"sha": "761593b4271ab24dbceff846b8d29fddccd758d9", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -1042,7 +1042,7 @@ dump_dominator_optimization_stats (FILE *file)\n \n /* Dump SSA statistics on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_dominator_optimization_stats (void)\n {\n   dump_dominator_optimization_stats (stderr);"}, {"sha": "a3112959217cae94cb6fe592f44c2608e6156484", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -632,7 +632,7 @@ dump_scope_block (FILE *file, int indent, tree scope, int flags)\n /* Dump the tree of lexical scopes starting at SCOPE to stderr.  FLAGS\n    is as in print_generic_expr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_scope_block (tree scope, int flags)\n {\n   dump_scope_block (stderr, 0, scope, flags);\n@@ -652,7 +652,7 @@ dump_scope_blocks (FILE *file, int flags)\n /* Dump the tree of lexical scopes of current_function_decl to stderr.\n    FLAGS is as in print_generic_expr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_scope_blocks (int flags)\n {\n   dump_scope_blocks (stderr, flags);"}, {"sha": "060ee26160181ccfb4df295c62add6989d8c062a", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -441,7 +441,7 @@ check_loop_closed_ssa_stmt (basic_block bb, gimple stmt)\n /* Checks that invariants of the loop closed ssa form are preserved.\n    Call verify_ssa when VERIFY_SSA_P is true.  */\n \n-void\n+DEBUG_FUNCTION void\n verify_loop_closed_ssa (bool verify_ssa_p)\n {\n   basic_block bb;"}, {"sha": "f8224968fe4c3cdbbc06c23d871dcd0a6ce01cbd", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -1180,7 +1180,7 @@ swap_tree_operands (gimple stmt, tree *exp0, tree *exp1)\n /* Scan the immediate_use list for VAR making sure its linked properly.\n    Return TRUE if there is a problem and emit an error message to F.  */\n \n-bool\n+DEBUG_FUNCTION bool\n verify_imm_links (FILE *f, tree var)\n {\n   use_operand_p ptr, prev, list;\n@@ -1304,7 +1304,7 @@ dump_immediate_uses (FILE *file)\n \n /* Dump def-use edges on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_immediate_uses (void)\n {\n   dump_immediate_uses (stderr);\n@@ -1313,7 +1313,7 @@ debug_immediate_uses (void)\n \n /* Dump def-use edges on stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_immediate_uses_for (tree var)\n {\n   dump_immediate_uses_for (stderr, var);"}, {"sha": "ea4be543c45d8c3bdebf551c8ff5f121ca929c88", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -986,7 +986,7 @@ print_pre_expr (FILE *outfile, const pre_expr expr)\n void debug_pre_expr (pre_expr);\n \n /* Like print_pre_expr but always prints to stderr.  */\n-void\n+DEBUG_FUNCTION void\n debug_pre_expr (pre_expr e)\n {\n   print_pre_expr (stderr, e);\n@@ -1023,7 +1023,7 @@ print_bitmap_set (FILE *outfile, bitmap_set_t set,\n \n void debug_bitmap_set (bitmap_set_t);\n \n-void\n+DEBUG_FUNCTION void\n debug_bitmap_set (bitmap_set_t set)\n {\n   print_bitmap_set (stderr, set, \"debug\", 0);\n@@ -1044,7 +1044,7 @@ print_value_expressions (FILE *outfile, unsigned int val)\n }\n \n \n-void\n+DEBUG_FUNCTION void\n debug_value_expressions (unsigned int val)\n {\n   print_value_expressions (stderr, val);"}, {"sha": "add41f882a2060038b28a398b2c93686dd2ecc11", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -2147,7 +2147,7 @@ dump_ops_vector (FILE *file, VEC (operand_entry_t, heap) *ops)\n \n /* Dump the operand entry vector OPS to STDERR.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_ops_vector (VEC (operand_entry_t, heap) *ops)\n {\n   dump_ops_vector (stderr, ops);"}, {"sha": "a851ef2e2e9a5bca2dc3318015076042060590f1", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -716,7 +716,7 @@ void debug_sa_points_to_info (void);\n \n /* Print out constraint C to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_constraint (constraint_t c)\n {\n   dump_constraint (stderr, c);\n@@ -735,7 +735,7 @@ dump_constraints (FILE *file, int from)\n \n /* Print out all constraints to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_constraints (void)\n {\n   dump_constraints (stderr, 0);\n@@ -825,7 +825,7 @@ dump_constraint_graph (FILE *file)\n \n /* Print out the constraint graph to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_constraint_graph (void)\n {\n   dump_constraint_graph (stderr);\n@@ -5434,7 +5434,7 @@ dump_solution_for_var (FILE *file, unsigned int var)\n \n /* Print the points-to solution for VAR to stdout.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_solution_for_var (unsigned int var)\n {\n   dump_solution_for_var (stdout, var);\n@@ -6035,7 +6035,7 @@ dump_sa_points_to_info (FILE *outfile)\n \n /* Debug points-to information to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_sa_points_to_info (void)\n {\n   dump_sa_points_to_info (stderr);"}, {"sha": "a998db85c5f69fe65b7ad9302c560d410acae9dd", "filename": "gcc/tree-ssa-ter.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-ter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa-ter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ter.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -705,7 +705,7 @@ dump_replaceable_exprs (FILE *f, bitmap expr)\n    exclusively to debug TER.  F is the place to send debug info and T is the\n    table being debugged.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_ter (FILE *f, temp_expr_table_p t)\n {\n   unsigned x, y;"}, {"sha": "d07c61d04680f60e6d2482bd4b5ccef92ff0331c", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -857,7 +857,7 @@ verify_phi_args (gimple phi, basic_block bb, basic_block *definition_block)\n /* Verify common invariants in the SSA web.\n    TODO: verify the variable annotations.  */\n \n-void\n+DEBUG_FUNCTION void\n verify_ssa (bool check_modified_stmt)\n {\n   size_t i;"}, {"sha": "2bb90b2717196218c5faaf1133ae74d335066bdd", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -3747,7 +3747,7 @@ dump_value_range (FILE *file, value_range_t *vr)\n \n /* Dump value range VR to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_value_range (value_range_t *vr)\n {\n   dump_value_range (stderr, vr);\n@@ -3779,7 +3779,7 @@ dump_all_value_ranges (FILE *file)\n \n /* Dump all value ranges to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_all_value_ranges (void)\n {\n   dump_all_value_ranges (stderr);\n@@ -3935,7 +3935,7 @@ dump_asserts_for (FILE *file, tree name)\n \n /* Dump all the registered assertions for NAME to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_asserts_for (tree name)\n {\n   dump_asserts_for (stderr, name);\n@@ -3959,7 +3959,7 @@ dump_all_asserts (FILE *file)\n \n /* Dump all the registered assertions for all the names to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_all_asserts (void)\n {\n   dump_all_asserts (stderr);"}, {"sha": "7b1e70a2de070ad9476a331281cc5acbbae25946", "filename": "gcc/value-prof.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -386,7 +386,7 @@ visit_hist (void **slot, void *data)\n \n /* Verify sanity of the histograms.  */\n \n-void\n+DEBUG_FUNCTION void\n verify_histograms (void)\n {\n   basic_block bb;"}, {"sha": "967661274cec8d05185161394fbe972417170a48", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -1098,7 +1098,7 @@ dv_from_value (rtx value)\n \n extern void debug_dv (decl_or_value dv);\n \n-void\n+DEBUG_FUNCTION void\n debug_dv (decl_or_value dv)\n {\n   if (dv_is_value_p (dv))"}, {"sha": "a3be2629ce12587eb574aa82775bd95dfa5ddc1a", "filename": "gcc/varpool.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=24e47c76ba526c0f90045ea5fe0d26cc41fdf2d3", "patch": "@@ -263,7 +263,7 @@ dump_varpool (FILE *f)\n \n /* Dump the variable pool to stderr.  */\n \n-void\n+DEBUG_FUNCTION void\n debug_varpool (void)\n {\n   dump_varpool (stderr);"}]}