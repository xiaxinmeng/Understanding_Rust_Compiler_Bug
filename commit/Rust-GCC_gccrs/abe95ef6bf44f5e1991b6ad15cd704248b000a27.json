{"sha": "abe95ef6bf44f5e1991b6ad15cd704248b000a27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJlOTVlZjZiZjQ0ZjVlMTk5MWI2YWQxNWNkNzA0MjQ4YjAwMGEyNw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-08-17T10:30:54Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-08-17T10:30:54Z"}, "message": "mark_spam.py: Mark as spam all comments done by a creator\n\n\t* mark_spam.py: Mark as spam all comments done by a creator.\n\nFrom-SVN: r239527", "tree": {"sha": "b3c8d9000ed256fd9a24d583afcc9e66dedbc19b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3c8d9000ed256fd9a24d583afcc9e66dedbc19b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abe95ef6bf44f5e1991b6ad15cd704248b000a27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abe95ef6bf44f5e1991b6ad15cd704248b000a27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abe95ef6bf44f5e1991b6ad15cd704248b000a27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abe95ef6bf44f5e1991b6ad15cd704248b000a27/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21da526107a6ff604c66c94780fb2a185feec9e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21da526107a6ff604c66c94780fb2a185feec9e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21da526107a6ff604c66c94780fb2a185feec9e0"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "d2286e52e536ac9657fbd9d76110f4c7eb60244a", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abe95ef6bf44f5e1991b6ad15cd704248b000a27/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abe95ef6bf44f5e1991b6ad15cd704248b000a27/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=abe95ef6bf44f5e1991b6ad15cd704248b000a27", "patch": "@@ -1,3 +1,7 @@\n+2016-08-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* mark_spam.py: Mark as spam all comments done by a creator.\n+\n 2016-08-15  Martin Liska  <mliska@suse.cz>\n \n \t* mark_spam.py: Add error handling and reset"}, {"sha": "86f46a129ccd1377462329814ed0d1eabaa03a53", "filename": "contrib/mark_spam.py", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abe95ef6bf44f5e1991b6ad15cd704248b000a27/contrib%2Fmark_spam.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abe95ef6bf44f5e1991b6ad15cd704248b000a27/contrib%2Fmark_spam.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmark_spam.py?ref=abe95ef6bf44f5e1991b6ad15cd704248b000a27", "patch": "@@ -39,7 +39,9 @@ def mark_as_spam(id, api_key, verbose):\n         return\n \n     # 2) mark the bug as spam\n-    cc_list = response['bugs'][0]['cc']\n+    bug = response['bugs'][0]\n+    creator = bug['creator']\n+    cc_list = bug['cc']\n     data = {\n         'status': 'RESOLVED',\n         'resolution': 'INVALID',\n@@ -64,13 +66,15 @@ def mark_as_spam(id, api_key, verbose):\n     # 3) mark the first comment as spam\n     r = requests.get(u + '/comment')\n     response = json.loads(r.text)\n-    comment_id = response['bugs'][str(id)]['comments'][0]['id']\n-\n-    u2 = '%sbug/comment/%d/tags' % (base_url, comment_id)\n-    r = requests.put(u2, json = {'comment_id': comment_id, 'add': ['spam'], 'api_key': api_key})\n-    if verbose:\n-        print(r)\n-        print(r.text)\n+    for c in response['bugs'][str(id)]['comments']:\n+        if c['creator'] == creator:\n+            comment_id = c['id']\n+            u2 = '%sbug/comment/%d/tags' % (base_url, comment_id)\n+            print(u2)\n+            r = requests.put(u2, json = {'comment_id': comment_id, 'add': ['spam'], 'api_key': api_key})\n+            if verbose:\n+                print(r)\n+                print(r.text)\n \n     # 4) mark all attachments as spam\n     r = requests.get(u + '/attachment')"}]}