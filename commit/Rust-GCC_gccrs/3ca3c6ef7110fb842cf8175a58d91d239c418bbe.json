{"sha": "3ca3c6ef7110fb842cf8175a58d91d239c418bbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NhM2M2ZWY3MTEwZmI4NDJjZjgxNzVhNThkOTFkMjM5YzQxOGJiZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-09-01T13:47:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-09-01T13:47:04Z"}, "message": "re PR sanitizer/81902 (new -fsanitize=pointer-overflow option undocumented)\n\n\tPR sanitizer/81902\n\t* doc/invoke.texi: Document -fsanitize=pointer-overflow.\n\nFrom-SVN: r251596", "tree": {"sha": "5eb6e486583392f497437d6ab30d68c7c46a6409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5eb6e486583392f497437d6ab30d68c7c46a6409"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ca3c6ef7110fb842cf8175a58d91d239c418bbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ca3c6ef7110fb842cf8175a58d91d239c418bbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ca3c6ef7110fb842cf8175a58d91d239c418bbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ca3c6ef7110fb842cf8175a58d91d239c418bbe/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "349884d1e38b08263682b5b94dec796398444e2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349884d1e38b08263682b5b94dec796398444e2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/349884d1e38b08263682b5b94dec796398444e2a"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "71244e91417b38ad04a70fddf7ff178186e1daef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca3c6ef7110fb842cf8175a58d91d239c418bbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca3c6ef7110fb842cf8175a58d91d239c418bbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ca3c6ef7110fb842cf8175a58d91d239c418bbe", "patch": "@@ -1,5 +1,8 @@\n 2017-09-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR sanitizer/81902\n+\t* doc/invoke.texi: Document -fsanitize=pointer-overflow.\n+\n \tPR sanitizer/81923\n \t* asan.c (create_odr_indicator): Strip name encoding from assembler\n \tname before appending it after __odr_asan_."}, {"sha": "f7bad9d23003259014f08460b650cfce7098dbcf", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca3c6ef7110fb842cf8175a58d91d239c418bbe/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca3c6ef7110fb842cf8175a58d91d239c418bbe/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3ca3c6ef7110fb842cf8175a58d91d239c418bbe", "patch": "@@ -11074,6 +11074,12 @@ This option enables instrumentation of C++ member function calls, member\n accesses and some conversions between pointers to base and derived classes,\n to verify the referenced object has the correct dynamic type.\n \n+@item -fsanitize=pointer-overflow\n+@opindex fsanitize=pointer-overflow\n+\n+This option enables instrumentation of pointer arithmetics.  If the pointer\n+arithmetics overflows, a run-time error is issued.\n+\n @end table\n \n While @option{-ftrapv} causes traps for signed overflows to be emitted,"}]}