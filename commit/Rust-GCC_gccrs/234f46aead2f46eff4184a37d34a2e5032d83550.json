{"sha": "234f46aead2f46eff4184a37d34a2e5032d83550", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM0ZjQ2YWVhZDJmNDZlZmY0MTg0YTM3ZDM0YTJlNTAzMmQ4MzU1MA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-11-03T00:00:01Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-11-03T00:00:01Z"}, "message": "c-decl.c (pushdecl): Move block inside if conditional to remove possibility of a segfault.\n\n\t* c-decl.c (pushdecl): Move block inside if conditional to remove\n\tpossibility of a segfault.  Lookup block-level extern\n\tvariables in enclosing scopes correctly.\n\n\t* testsuite/gcc.c-torture/compile/20001018-1.x: Remove XFAIL.\n\nFrom-SVN: r46726", "tree": {"sha": "c8da6e748a16b85ed36daaf4bb7209f4529cdd55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8da6e748a16b85ed36daaf4bb7209f4529cdd55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/234f46aead2f46eff4184a37d34a2e5032d83550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234f46aead2f46eff4184a37d34a2e5032d83550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/234f46aead2f46eff4184a37d34a2e5032d83550", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234f46aead2f46eff4184a37d34a2e5032d83550/comments", "author": null, "committer": null, "parents": [{"sha": "1b5e9d7e1bd9a954485d45171ffc19e66bcb4edb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b5e9d7e1bd9a954485d45171ffc19e66bcb4edb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b5e9d7e1bd9a954485d45171ffc19e66bcb4edb"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "195406f68211a04a4b824c1602f2ffeff75526e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234f46aead2f46eff4184a37d34a2e5032d83550/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234f46aead2f46eff4184a37d34a2e5032d83550/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=234f46aead2f46eff4184a37d34a2e5032d83550", "patch": "@@ -1,3 +1,11 @@\n+2001-11-02  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* c-decl.c (pushdecl): Move block inside if conditional to remove\n+\tpossibility of a segfault.  Lookup block-level extern\n+\tvariables in enclosing scopes correctly.\n+\n+\t* testsuite/gcc.c-torture/compile/20001018-1.x: Remove XFAIL.\n+\n 2001-11-02  Aldy Hernandez  <aldyh@redhat.com>\n \n         * expmed.c (store_bit_field): Use simplify_gen_subreg to make"}, {"sha": "a907770c7b13d21a8dde8aaa82b661dde7dee3b4", "filename": "gcc/c-decl.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234f46aead2f46eff4184a37d34a2e5032d83550/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234f46aead2f46eff4184a37d34a2e5032d83550/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=234f46aead2f46eff4184a37d34a2e5032d83550", "patch": "@@ -2115,25 +2115,28 @@ pushdecl (x)\n       && DECL_INITIAL (x) == 0 && DECL_EXTERNAL (x))\n     DECL_CONTEXT (x) = 0;\n \n-  if (warn_nested_externs && DECL_EXTERNAL (x) && b != global_binding_level\n-      && x != IDENTIFIER_IMPLICIT_DECL (name)\n-      /* Don't print error messages for __FUNCTION__ and __PRETTY_FUNCTION__ */\n-      && !DECL_IN_SYSTEM_HEADER (x))\n-    warning (\"nested extern declaration of `%s'\", IDENTIFIER_POINTER (name));\n-\n   if (name)\n     {\n       const char *file;\n       int line;\n       int different_binding_level = 0;\n \n+      if (warn_nested_externs\n+\t  && DECL_EXTERNAL (x)\n+\t  && b != global_binding_level\n+\t  && x != IDENTIFIER_IMPLICIT_DECL (name)\n+\t  /* No error messages for __FUNCTION__ and __PRETTY_FUNCTION__.  */\n+\t  && !DECL_IN_SYSTEM_HEADER (x))\n+\twarning (\"nested extern declaration of `%s'\",\n+\t\t IDENTIFIER_POINTER (name));\n+\n       t = lookup_name_current_level (name);\n       /* Don't type check externs here when -traditional.  This is so that\n \t code with conflicting declarations inside blocks will get warnings\n \t not errors.  X11 for instance depends on this.  */\n       if (! t && DECL_EXTERNAL (x) && TREE_PUBLIC (x) && ! flag_traditional)\n \t{\n-\t  t = IDENTIFIER_GLOBAL_VALUE (name);\n+\t  t = lookup_name (name);\n \t  /* Type decls at global scope don't conflict with externs declared\n \t     inside lexical blocks.  */\n \t  if (t && TREE_CODE (t) == TYPE_DECL)"}, {"sha": "f41cdc299131fe2004a420da7b21ab80c72e860e", "filename": "gcc/testsuite/gcc.c-torture/compile/20001018-1.x", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b5e9d7e1bd9a954485d45171ffc19e66bcb4edb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20001018-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b5e9d7e1bd9a954485d45171ffc19e66bcb4edb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20001018-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20001018-1.x?ref=1b5e9d7e1bd9a954485d45171ffc19e66bcb4edb", "patch": "@@ -1,2 +0,0 @@\n-set torture_compile_xfail \"*-*-*\"\n-return 0"}]}