{"sha": "54a60f6e257c8ab4853b2db893d4e610491ae424", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRhNjBmNmUyNTdjOGFiNDg1M2IyZGI4OTNkNGU2MTA0OTFhZTQyNA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@issan.informatik.uni-dortmund.de", "date": "1998-02-01T12:44:52Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-01T12:44:52Z"}, "message": "iostream.cc (istream::operator>>(long double&)): Scan value into separate variable, in case long double is bigger than double.\n\n        * iostream.cc (istream::operator>>(long double&))\n        [!_G_HAVE_LONG_DOUBLE_IO]: Scan value into separate variable, in\n        case long double is bigger than double.\n        (ostream::operator<<(double)) [_G_HAVE_PRINTF_FP]: Fix order of\n        initializers of struct printf_info to match declaration order,\n        to work around g++ bug.\n        (ostream::operator<<(long double)) [_G_HAVE_PRINTF_FP]: Likewise.\n        * gen-params: Add missing quotes.  Avoid useless use of command\n        substitution.\n\nFrom-SVN: r17582", "tree": {"sha": "5f877dfe4f2ad0ec448a75eae6a78a99aa2acf86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f877dfe4f2ad0ec448a75eae6a78a99aa2acf86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54a60f6e257c8ab4853b2db893d4e610491ae424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54a60f6e257c8ab4853b2db893d4e610491ae424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54a60f6e257c8ab4853b2db893d4e610491ae424", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54a60f6e257c8ab4853b2db893d4e610491ae424/comments", "author": null, "committer": null, "parents": [{"sha": "6ad85f177045a35b51da7eacb33b15037a8d38e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad85f177045a35b51da7eacb33b15037a8d38e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ad85f177045a35b51da7eacb33b15037a8d38e4"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "f2a95d35f2bd3b21cec2cdb2b743c69c41d12880", "filename": "libio/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a60f6e257c8ab4853b2db893d4e610491ae424/libio%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a60f6e257c8ab4853b2db893d4e610491ae424/libio%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2FChangeLog?ref=54a60f6e257c8ab4853b2db893d4e610491ae424", "patch": "@@ -1,3 +1,16 @@\n+1998-01-20  Andreas Schwab  (schwab@issan.informatik.uni-dortmund.de)\n+\n+\t* iostream.cc (istream::operator>>(long double&))\n+\t[!_G_HAVE_LONG_DOUBLE_IO]: Scan value into separate variable, in\n+\tcase long double is bigger than double.\n+\t(ostream::operator<<(double)) [_G_HAVE_PRINTF_FP]: Fix order of\n+\tinitializers of struct printf_info to match declaration order,\n+\tto work around g++ bug.\n+\t(ostream::operator<<(long double)) [_G_HAVE_PRINTF_FP]: Likewise.\n+\n+\t* gen-params: Add missing quotes.  Avoid useless use of command\n+\tsubstitution.\n+\n Sun Feb  1 13:29:47 1998  H.J. Lu  (hjl@gnu.org)\n \n \t* filebuf.cc (filebuf::open): Call _IO_file_open if"}, {"sha": "37ee742e21c38925b4534579a82a57801080b0b9", "filename": "libio/gen-params", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a60f6e257c8ab4853b2db893d4e610491ae424/libio%2Fgen-params", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a60f6e257c8ab4853b2db893d4e610491ae424/libio%2Fgen-params", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2Fgen-params?ref=54a60f6e257c8ab4853b2db893d4e610491ae424", "patch": "@@ -277,7 +277,7 @@ fi\n tr '\t' ' ' <TMP >dummy.out\n \n for TYPE in dev_t clock_t fpos_t gid_t ino_t mode_t nlink_t off_t pid_t ptrdiff_t sigset_t size_t ssize_t time_t uid_t va_list wchar_t wint_t int16_t uint16_t int32_t uint_32_t u_int16_t u_int32_t; do\n-    IMPORTED=`eval 'echo $'\"$TYPE\"`\n+    eval IMPORTED=\\$$TYPE\n     if [ -n \"${IMPORTED}\" ] ; then\n \teval \"$TYPE='$IMPORTED'\"\n     else\n@@ -318,9 +318,9 @@ done\n \n # Look for some standard macros.\n for NAME in BUFSIZ FOPEN_MAX FILENAME_MAX NULL; do\n-    IMPORTED=`eval 'echo $'\"$NAME\"`\n+    eval IMPORTED=\\$$NAME\n     if [ -n \"${IMPORTED}\" ] ; then\n-\teval \"$NAME='$IMPORTED /* specified */\"\n+\teval \"$NAME='$IMPORTED /* specified */'\"\n     else\n \trm -f TMP\n \t${SED} -n -e 's| *;|;|g' -e \"s|long X${NAME}= *\\(.*\\);|\\1|w TMP\" \\\n@@ -334,9 +334,9 @@ done\n \n # These macros must be numerical constants; strip any trailing 'L's.\n for NAME in SHRT_MAX INT_MAX LONG_MAX LONG_LONG_MAX; do\n-    IMPORTED=`eval 'echo $'\"$NAME\"`\n+    eval IMPORTED=\\$$NAME\n     if [ -n \"${IMPORTED}\" ] ; then\n-\teval \"$NAME='$IMPORTED /* specified */\"\n+\teval \"$NAME='$IMPORTED /* specified */'\"\n     else\n \trm -f TMP\n \t${SED} -n -e 's| *;|;|g' -e \"s|long X${NAME}= *\\([0-9]*\\)L* *;|\\1|w TMP\" \\"}, {"sha": "96ebd6ee57a85fd0e475dfc647c6a4779ca8cf38", "filename": "libio/iostream.cc", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a60f6e257c8ab4853b2db893d4e610491ae424/libio%2Fiostream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a60f6e257c8ab4853b2db893d4e610491ae424/libio%2Fiostream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2Fiostream.cc?ref=54a60f6e257c8ab4853b2db893d4e610491ae424", "patch": "@@ -333,11 +333,15 @@ READ_INT(bool)\n istream& istream::operator>>(long double& x)\n {\n     if (ipfx0())\n+      {\n #if _G_HAVE_LONG_DOUBLE_IO\n \tscan(\"%Lg\", &x);\n #else\n-\tscan(\"%lg\", &x);\n+\tdouble y;\n+\tscan(\"%lg\", &y);\n+\tx = y;\n #endif\n+      }\n     return *this;\n }\n \n@@ -628,10 +632,10 @@ ostream& ostream::operator<<(double n)\n \t\t\t\t      left: (flags() & ios::left) != 0,\n \t\t\t\t      showsign: (flags() & ios::showpos) != 0,\n \t\t\t\t      group: 0,\n-\t\t\t\t      pad: fill()\n #if defined __GLIBC__ && __GLIBC__ >= 2\n-\t\t\t\t      , extra: 0\n+\t\t\t\t      extra: 0,\n #endif\n+\t\t\t\t      pad: fill()\n \t  };\n \t  const void *ptr = (const void *) &n;\n \t  if (__printf_fp (rdbuf(), &info, &ptr) < 0)\n@@ -731,10 +735,10 @@ ostream& ostream::operator<<(long double n)\n \t\t\t\t  left: (flags() & ios::left) != 0,\n \t\t\t\t  showsign: (flags() & ios::showpos) != 0,\n \t\t\t\t  group: 0,\n-\t\t\t\t  pad: fill()\n #if defined __GLIBC__ && __GLIBC__ >= 2\n-\t\t\t\t  , extra: 0\n+\t\t\t\t  extra: 0,\n #endif\n+\t\t\t\t  pad: fill()\n       };\n \n       const void *ptr = (const void *) &n;"}]}