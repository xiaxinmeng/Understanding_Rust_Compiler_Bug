{"sha": "f5552c895f3bb1c997576347b8f91bb827c6d9f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU1NTJjODk1ZjNiYjFjOTk3NTc2MzQ3YjhmOTFiYjgyN2M2ZDlmNA==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2007-12-13T10:45:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:45:44Z"}, "message": "make.adb (Scan_Make_Arg): Add test for -aamp_target switch...\n\n2007-12-06  Gary Dismukes  <dismukes@adacore.com>\n\t    Arnaud Charlet  <charlet@adacore.com>\n\n\t* make.adb (Scan_Make_Arg): Add test for -aamp_target switch, passing\n\tit to the front end and setting the aamp_target environment variable\n\tto the switch's argument to ensure that gnaampbind and gnaamplink will\n\ttake the specified library into account.\n\t(Make): Only set Check_Object_Consistency to False for JVM, not for CIL\n\ttarget, since the CIL compiler supports an \"object\" file (.il files).\n\nFrom-SVN: r130879", "tree": {"sha": "a930e6c33bb59cdabf1e0f189e07cc855fe48cb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a930e6c33bb59cdabf1e0f189e07cc855fe48cb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5552c895f3bb1c997576347b8f91bb827c6d9f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5552c895f3bb1c997576347b8f91bb827c6d9f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5552c895f3bb1c997576347b8f91bb827c6d9f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5552c895f3bb1c997576347b8f91bb827c6d9f4/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b7908862fde84f12ad07d740ba26674726f999d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b7908862fde84f12ad07d740ba26674726f999d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b7908862fde84f12ad07d740ba26674726f999d"}], "stats": {"total": 219, "additions": 121, "deletions": 98}, "files": [{"sha": "cfccbef89c3b43712aa6bcdcf721f1c69a849034", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 121, "deletions": 98, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5552c895f3bb1c997576347b8f91bb827c6d9f4/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5552c895f3bb1c997576347b8f91bb827c6d9f4/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=f5552c895f3bb1c997576347b8f91bb827c6d9f4", "patch": "@@ -81,12 +81,14 @@ package body Make is\n    --  Called by Sigint_Intercepted to kill all spawned compilation processes\n \n    type Sigint_Handler is access procedure;\n+   pragma Convention (C, Sigint_Handler);\n \n    procedure Install_Int_Handler (Handler : Sigint_Handler);\n    pragma Import (C, Install_Int_Handler, \"__gnat_install_int_handler\");\n    --  Called by Gnatmake to install the SIGINT handler below\n \n    procedure Sigint_Intercepted;\n+   pragma Convention (C, Sigint_Intercepted);\n    --  Called when the program is interrupted by Ctrl-C to delete the\n    --  temporary mapping files and configuration pragmas files.\n \n@@ -744,14 +746,15 @@ package body Make is\n    --  added at the beginning of the command line.\n \n    procedure Check\n-     (Source_File  : File_Name_Type;\n-      Source_Index : Int;\n-      The_Args     : Argument_List;\n-      Lib_File     : File_Name_Type;\n-      Read_Only    : Boolean;\n-      ALI          : out ALI_Id;\n-      O_File       : out File_Name_Type;\n-      O_Stamp      : out Time_Stamp_Type);\n+     (Source_File    : File_Name_Type;\n+      Source_Index   : Int;\n+      Is_Main_Source : Boolean;\n+      The_Args       : Argument_List;\n+      Lib_File       : File_Name_Type;\n+      Read_Only      : Boolean;\n+      ALI            : out ALI_Id;\n+      O_File         : out File_Name_Type;\n+      O_Stamp        : out Time_Stamp_Type);\n    --  Determines whether the library file Lib_File is up-to-date or not. The\n    --  full name (with path information) of the object file corresponding to\n    --  Lib_File is returned in O_File. Its time stamp is saved in O_Stamp.\n@@ -772,9 +775,10 @@ package body Make is\n    --  Otherwise O_File is No_File.\n \n    procedure Collect_Arguments\n-     (Source_File  : File_Name_Type;\n-      Source_Index : Int;\n-      Args         : Argument_List);\n+     (Source_File    : File_Name_Type;\n+      Source_Index   : Int;\n+      Is_Main_Source : Boolean;\n+      Args           : Argument_List);\n    --  Collect all arguments for a source to be compiled, including those\n    --  that come from a project file.\n \n@@ -1423,14 +1427,15 @@ package body Make is\n    -----------\n \n    procedure Check\n-     (Source_File  : File_Name_Type;\n-      Source_Index : Int;\n-      The_Args     : Argument_List;\n-      Lib_File     : File_Name_Type;\n-      Read_Only    : Boolean;\n-      ALI          : out ALI_Id;\n-      O_File       : out File_Name_Type;\n-      O_Stamp      : out Time_Stamp_Type)\n+     (Source_File    : File_Name_Type;\n+      Source_Index   : Int;\n+      Is_Main_Source : Boolean;\n+      The_Args       : Argument_List;\n+      Lib_File       : File_Name_Type;\n+      Read_Only      : Boolean;\n+      ALI            : out ALI_Id;\n+      O_File         : out File_Name_Type;\n+      O_Stamp        : out Time_Stamp_Type)\n    is\n       function First_New_Spec (A : ALI_Id) return File_Name_Type;\n       --  Looks in the with table entries of A and returns the spec file name\n@@ -1674,7 +1679,8 @@ package body Make is\n \n             --  First, collect all the switches\n \n-            Collect_Arguments (Source_File, Source_Index, The_Args);\n+            Collect_Arguments\n+              (Source_File, Source_Index, Is_Main_Source, The_Args);\n \n             Prev_Switch := Dummy_Switch;\n \n@@ -2258,9 +2264,10 @@ package body Make is\n    -----------------------\n \n    procedure Collect_Arguments\n-     (Source_File  : File_Name_Type;\n-      Source_Index : Int;\n-      Args         : Argument_List)\n+     (Source_File    : File_Name_Type;\n+      Source_Index   : Int;\n+      Is_Main_Source : Boolean;\n+      Args           : Argument_List)\n    is\n    begin\n       Arguments_Collected := True;\n@@ -2440,6 +2447,29 @@ package body Make is\n          end;\n       end if;\n \n+      --  For VMS, when compiling the main source, add switch\n+      --  -mdebug-main=_ada_ so that the executable can be debugged\n+      --  by the standard VMS debugger.\n+\n+      if not No_Main_Subprogram\n+        and then Targparm.OpenVMS_On_Target\n+        and then Is_Main_Source\n+      then\n+         --  First, check if compilation will be invoked with -g\n+\n+         for J in 1 .. Last_Argument loop\n+            if Arguments (J)'Length >= 2\n+              and then Arguments (J) (1 .. 2) = \"-g\"\n+              and then (Arguments (J)'Length < 5\n+                        or else Arguments (J) (1 .. 5) /= \"-gnat\")\n+            then\n+               Add_Arguments\n+                 ((1 => new String'(\"-mdebug-main=_ada_\")));\n+               exit;\n+            end if;\n+         end loop;\n+      end if;\n+\n       --  Set Output_Is_Object, depending if there is a -S switch.\n       --  If the bind step is not performed, and there is a -S switch,\n       --  then we will not check for a valid object file.\n@@ -2771,30 +2801,8 @@ package body Make is\n          --  If arguments not yet collected (in Check), collect them now\n \n          if not Arguments_Collected then\n-            Collect_Arguments (Source_File, Source_Index, Args);\n-         end if;\n-\n-         --  For VMS, when compiling the main source, add switch\n-         --  -mdebug-main=_ada_ so that the executable can be debugged\n-         --  by the standard VMS debugger.\n-\n-         if not No_Main_Subprogram\n-           and then Targparm.OpenVMS_On_Target\n-           and then Source_File = Main_Source\n-         then\n-            --  First, check if compilation will be invoked with -g\n-\n-            for J in 1 .. Last_Argument loop\n-               if Arguments (J)'Length >= 2\n-                 and then Arguments (J) (1 .. 2) = \"-g\"\n-                 and then (Arguments (J)'Length < 5\n-                             or else Arguments (J) (1 .. 5) /= \"-gnat\")\n-               then\n-                  Add_Arguments\n-                    ((1 => new String'(\"-mdebug-main=_ada_\")));\n-                  exit;\n-               end if;\n-            end loop;\n+            Collect_Arguments\n+              (Source_File, Source_Index, Source_File = Main_Source, Args);\n          end if;\n \n          --  If we use mapping file (-P or -C switches), then get one\n@@ -3299,9 +3307,10 @@ package body Make is\n                else\n                   Arguments_Collected := False;\n \n-                  --  Do nothing if project of source is externally built\n+                  Collect_Arguments (Source_File, Source_Index,\n+                                     Source_File = Main_Source, Args);\n \n-                  Collect_Arguments (Source_File, Source_Index, Args);\n+                  --  Do nothing if project of source is externally built\n \n                   if Arguments_Project = No_Project\n                     or else not Project_Tree.Projects.Table\n@@ -3317,7 +3326,8 @@ package body Make is\n                           Full_Lib_File /= No_File\n                           and then not Check_Readonly_Files\n                           and then Is_Readonly_Library (Full_Lib_File);\n-                        Check (Source_File, Source_Index, Args, Lib_File,\n+                        Check (Source_File, Source_Index,\n+                               Source_File = Main_Source, Args, Lib_File,\n                                Read_Only, ALI, Obj_File, Obj_Stamp);\n                         Need_To_Compile := (ALI = No_ALI_Id);\n                      end if;\n@@ -5143,7 +5153,6 @@ package body Make is\n \n       begin\n          Targparm.Get_Target_Parameters;\n-\n       exception\n          when Unrecoverable_Error =>\n             Make_Failed (\"*** make failed.\");\n@@ -5153,15 +5162,16 @@ package body Make is\n \n       if Targparm.VM_Target /= No_VM then\n \n-         --  Do not check for an object file (\".o\") when compiling to VM\n-         --  machine since \".class\" files are generated instead.\n-\n-         Check_Object_Consistency := False;\n-\n          --  Set proper processing commands\n \n          case Targparm.VM_Target is\n             when Targparm.JVM_Target =>\n+\n+               --  Do not check for an object file (\".o\") when compiling to\n+               --  JVM machine since \".class\" files are generated instead.\n+\n+               Check_Object_Consistency := False;\n+\n                Gcc := new String'(\"jgnat\");\n                Gnatbind := new String'(\"jgnatbind\");\n                Gnatlink := new String'(\"jgnatlink\");\n@@ -5180,9 +5190,9 @@ package body Make is\n \n       if Main_Project /= No_Project then\n \n-         --  For all library project, if the library file does not exist\n-         --  put all the project sources in the queue, and flag the project\n-         --  so that the library is generated.\n+         --  For all library project, if the library file does not exist, put\n+         --  all the project sources in the queue, and flag the project so that\n+         --  the library is generated.\n \n          if not Unique_Compile\n            and then MLib.Tgt.Support_For_Libraries /= Prj.None\n@@ -5347,8 +5357,8 @@ package body Make is\n          end loop;\n \n       else\n-         --  And we put the command line gcc switches in the variable\n-         --  The_Saved_Gcc_Switches. They are going to be used later\n+         --  If there is a project, put the command line gcc switches in the\n+         --  variable The_Saved_Gcc_Switches. They are going to be used later\n          --  in procedure Compile_Sources.\n \n          The_Saved_Gcc_Switches :=\n@@ -5362,7 +5372,6 @@ package body Make is\n \n          The_Saved_Gcc_Switches (The_Saved_Gcc_Switches'Last) :=\n            No_gnat_adc;\n-\n       end if;\n \n       --  If there was a --GCC, --GNATBIND or --GNATLINK switch on\n@@ -5439,8 +5448,8 @@ package body Make is\n          Non_Std_Executable  :=\n            Targparm.Executable_Extension_On_Target /= No_Name;\n \n-         --  Look inside the linker switches to see if the name\n-         --  of the final executable program was specified.\n+         --  Look inside the linker switches to see if the name of the final\n+         --  executable program was specified.\n \n          for\n            J in reverse Linker_Switches.First .. Linker_Switches.Last\n@@ -5466,20 +5475,19 @@ package body Make is\n             end if;\n          end loop;\n \n-         --  If the name of the final executable program was not\n-         --  specified then construct it from the main input file.\n+         --  If the name of the final executable program was not specified\n+         --  then construct it from the main input file.\n \n          if Executable = No_File then\n             if Main_Project = No_Project then\n                Executable :=\n                  Executable_Name (Strip_Suffix (Main_Source_File));\n \n             else\n-               --  If we are using a project file, we attempt to\n-               --  remove the body (or spec) termination of the main\n-               --  subprogram. We find it the the naming scheme of the\n-               --  project file. This will avoid to generate an\n-               --  executable \"main.2\" for a main subprogram\n+               --  If we are using a project file, we attempt to remove the\n+               --  body (or spec) termination of the main subprogram. We find\n+               --  it the the naming scheme of the project file. This avoids\n+               --  generating an executable \"main.2\" for a main subprogram\n                --  \"main.2.ada\", when the body termination is \".2.ada\".\n \n                Executable :=\n@@ -5495,13 +5503,10 @@ package body Make is\n \n             begin\n                if not Is_Absolute_Path (Exec_File_Name) then\n-\n                   Get_Name_String (Project_Tree.Projects.Table\n                                      (Main_Project).Display_Exec_Dir);\n \n-                  if\n-                    Name_Buffer (Name_Len) /= Directory_Separator\n-                  then\n+                  if Name_Buffer (Name_Len) /= Directory_Separator then\n                      Name_Len := Name_Len + 1;\n                      Name_Buffer (Name_Len) := Directory_Separator;\n                   end if;\n@@ -5526,10 +5531,10 @@ package body Make is\n                Youngest_Obj_File   : File_Name_Type;\n                Youngest_Obj_Stamp  : Time_Stamp_Type;\n \n-               Executable_Stamp    : Time_Stamp_Type;\n+               Executable_Stamp : Time_Stamp_Type;\n                --  Executable is the final executable program\n \n-               Library_Rebuilt     : Boolean := False;\n+               Library_Rebuilt : Boolean := False;\n \n             begin\n                for J in 1 .. Gcc_Switches.Last loop\n@@ -5576,7 +5581,7 @@ package body Make is\n                   end if;\n                end if;\n \n-               --  Regenerate libraries, if any, and if object files\n+               --  Regenerate libraries, if there are any and if object files\n                --  have been regenerated.\n \n                if Main_Project /= No_Project\n@@ -5593,8 +5598,8 @@ package body Make is\n                      Current : Natural;\n \n                      procedure Add_To_Library_Projs (Proj : Project_Id);\n-                     --  Add project Project to table Library_Projs\n-                     --  in decreasing depth order.\n+                     --  Add project Project to table Library_Projs in\n+                     --  decreasing depth order.\n \n                      --------------------------\n                      -- Add_To_Library_Projs --\n@@ -5607,9 +5612,8 @@ package body Make is\n                         Library_Projs.Increment_Last;\n                         Depth := Project_Tree.Projects.Table (Proj).Depth;\n \n-                        --  Put the projects in decreasing depth order,\n-                        --  so that if libA depends on libB, libB is first\n-                        --  in order.\n+                        --  Put the projects in decreasing depth order, so that\n+                        --  if libA depends on libB, libB is first in order.\n \n                         Current := Library_Projs.Last;\n                         while Current > 1 loop\n@@ -5624,7 +5628,7 @@ package body Make is\n                      end Add_To_Library_Projs;\n \n                   --  Start of processing for ??? (should name declare block\n-                  --  or probably better, break this out as a nested proc.\n+                  --  or probably better, break this out as a nested proc).\n \n                   begin\n                      --  Put in Library_Projs table all library project\n@@ -5797,7 +5801,7 @@ package body Make is\n                --  since there is currently no simple way to check the\n                --  up-to-date status of objects\n \n-               if Targparm.VM_Target = No_VM\n+               if Targparm.VM_Target /= JVM_Target\n                  and then First_Compiled_File = No_File\n                then\n                   Executable_Stamp := File_Stamp (Executable);\n@@ -5897,8 +5901,8 @@ package body Make is\n \n             --  When In_Place_Mode, the library file can be located in the\n             --  Main_Source_File directory which may not be present in the\n-            --  library path. In this case, use the corresponding library file\n-            --  name.\n+            --  library path. If it is not present then use the corresponding\n+            --  library file name.\n \n             if Main_ALI_File = No_File and then In_Place_Mode then\n                Get_Name_String (Get_Directory (Full_Source_Name (Src_File)));\n@@ -5959,7 +5963,7 @@ package body Make is\n                   end loop;\n                end if;\n \n-               --  If there are shared libraries, invoke gnatlink with\n+               --  If shared libraries present, invoke gnatlink with\n                --  -shared-libgcc.\n \n                if Shared_Libs then\n@@ -5980,7 +5984,7 @@ package body Make is\n                if Main_Project /= No_Project then\n \n                   --  Put all the source directories in ADA_INCLUDE_PATH,\n-                  --  and all the object directories in ADA_OBJECTS_PATH\n+                  --  and all the object directories in ADA_OBJECTS_PATH.\n \n                   Prj.Env.Set_Ada_Paths (Main_Project, Project_Tree, False);\n \n@@ -6044,6 +6048,7 @@ package body Make is\n                   Library_Projs.Init;\n \n                   if MLib.Tgt.Support_For_Libraries /= Prj.None then\n+\n                      --  Check for library projects\n \n                      for Proj1 in Project_Table.First ..\n@@ -6091,6 +6096,7 @@ package body Make is\n                      end loop;\n \n                      for Index in 1 .. Library_Projs.Last loop\n+\n                         --  Add the -L switch\n \n                         Linker_Switches.Increment_Last;\n@@ -6587,13 +6593,19 @@ package body Make is\n    ----------------\n \n    procedure Initialize is\n+\n+      procedure Check_Version_And_Help is\n+         new Check_Version_And_Help_G (Makeusg);\n+\n+      --  Start of processing for Initialize\n+\n    begin\n       Prj.Set_Mode (Ada_Only);\n \n-      --  Override default initialization of Check_Object_Consistency\n-      --  since this is normally False for GNATBIND, but is True for\n-      --  GNATMAKE since we do not need to check source consistency\n-      --  again once GNATMAKE has looked at the sources to check.\n+      --  Override default initialization of Check_Object_Consistency since\n+      --  this is normally False for GNATBIND, but is True for GNATMAKE since\n+      --  we do not need to check source consistency again once GNATMAKE has\n+      --  looked at the sources to check.\n \n       Check_Object_Consistency := True;\n \n@@ -6665,10 +6677,10 @@ package body Make is\n \n       --  First, scan to detect --version and/or --help\n \n-      Check_Version_And_Help (\"GNATMAKE\", \"1995\", Makeusg'Access);\n+      Check_Version_And_Help (\"GNATMAKE\", \"1995\");\n \n-      --  Scan again the switch and arguments, now that we are sure that\n-      --  they do not include --version or --help.\n+      --  Scan again the switch and arguments, now that we are sure that they\n+      --  do not include --version or --help.\n \n       Scan_Args : for Next_Arg in 1 .. Argument_Count loop\n          Scan_Make_Arg (Argument (Next_Arg), And_Save => True);\n@@ -6710,6 +6722,7 @@ package body Make is\n       --  Deal with -C= switch\n \n       if Gnatmake_Mapping_File /= null then\n+\n          --  First, check compatibility with other switches\n \n          if Project_File_Name /= null then\n@@ -7686,7 +7699,6 @@ package body Make is\n       --  If we have seen a regular switch process it\n \n       elsif Argv (1) = '-' then\n-\n          if Argv'Length = 1 then\n             Make_Failed (\"switch character cannot be followed by a blank\");\n \n@@ -7743,6 +7755,18 @@ package body Make is\n                         Binder,\n                         And_Save => And_Save);\n \n+         --  -aamp_target=...\n+\n+         elsif Argv'Length >= 13 and then Argv (2 .. 13) = \"aamp_target=\" then\n+            Add_Switch (Argv, Compiler, And_Save => And_Save);\n+\n+            --  Set the aamp_target environment variable so that the binder and\n+            --  linker will use the proper target library. This is consistent\n+            --  with how things work when -aamp_target is passed on the command\n+            --  line to gnaampmake.\n+\n+            Setenv (\"aamp_target\", Argv (14 .. Argv'Last));\n+\n          --  -Adir (to gnatbind this is like a -aO switch, to gcc like a -I)\n \n          elsif Argv (2) = 'A' then\n@@ -7813,7 +7837,6 @@ package body Make is\n             if Project_File_Name /= null then\n                Make_Failed (\"-i cannot be used in conjunction with a \" &\n                             \"project file\");\n-\n             else\n                Scan_Make_Switches (Argv, Success);\n             end if;"}]}