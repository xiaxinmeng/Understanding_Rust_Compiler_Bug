{"sha": "9e29923752bf42a1053916db98d98d8bbeceaa9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUyOTkyMzc1MmJmNDJhMTA1MzkxNmRiOThkOThkOGJiZWNlYWE5Yw==", "commit": {"author": {"name": "Mark Shinwell", "email": "shinwell@codesourcery.com", "date": "2006-05-24T14:04:18Z"}, "committer": {"name": "Mark Shinwell", "email": "shinwell@gcc.gnu.org", "date": "2006-05-24T14:04:18Z"}, "message": "Enable gprof for cross builds (mirror of patch to binutils src/)\n\nFrom-SVN: r114041", "tree": {"sha": "3ed56a7c66b48277020d0a2ad2ab96cd3f8ccdc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ed56a7c66b48277020d0a2ad2ab96cd3f8ccdc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e29923752bf42a1053916db98d98d8bbeceaa9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e29923752bf42a1053916db98d98d8bbeceaa9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e29923752bf42a1053916db98d98d8bbeceaa9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e29923752bf42a1053916db98d98d8bbeceaa9c/comments", "author": null, "committer": null, "parents": [{"sha": "ae022d325fd8fefc6900b8cee83eb0cd0cd0cbbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae022d325fd8fefc6900b8cee83eb0cd0cd0cbbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae022d325fd8fefc6900b8cee83eb0cd0cd0cbbc"}], "stats": {"total": 46, "additions": 35, "deletions": 11}, "files": [{"sha": "55d679f7e31353bf07fad4706c5f37c40a266af7", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e29923752bf42a1053916db98d98d8bbeceaa9c/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e29923752bf42a1053916db98d98d8bbeceaa9c/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=9e29923752bf42a1053916db98d98d8bbeceaa9c", "patch": "@@ -1,3 +1,8 @@\n+2006-05-24  Mark Shinwell  <shinwell@codesourcery.com>\n+\n+\t* configure.in: Enable gprof for cross builds.\n+\t* configure: Regenerate.\n+\n 2006-05-22  Richard Guenther  <rguenther@suse.de>\n \n \tRevert"}, {"sha": "efc23b618f78e79d5b8e77f416c7c0768d14136f", "filename": "configure", "status": "modified", "additions": 29, "deletions": 10, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e29923752bf42a1053916db98d98d8bbeceaa9c/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e29923752bf42a1053916db98d98d8bbeceaa9c/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=9e29923752bf42a1053916db98d98d8bbeceaa9c", "patch": "@@ -1013,7 +1013,7 @@ esac\n \n # Some tools are only suitable for building in a \"native\" situation.\n # Remove these if host!=target.  \n-native_only=\"autoconf automake libtool fileutils find gawk gettext gzip hello indent m4 rcs recode sed shellutils tar textutils uudecode wdiff gprof target-groff guile perl time ash bash bzip2 prms gnuserv target-gperf\"\n+native_only=\"autoconf automake libtool fileutils find gawk gettext gzip hello indent m4 rcs recode sed shellutils tar textutils uudecode wdiff target-groff guile perl time ash bash bzip2 prms gnuserv target-gperf\"\n \n # Similarly, some are only suitable for cross toolchains.\n # Remove these if host=target.\n@@ -7290,15 +7290,34 @@ trap 'rm -f $CONFIG_STATUS conftest*; exit 1' 1 2 15\n # Transform confdefs.h into DEFS.\n # Protect against shell expansion while executing Makefile rules.\n # Protect against Makefile macro expansion.\n-cat > conftest.defs <<\\EOF\n-s%#define \\([A-Za-z_][A-Za-z0-9_]*\\) *\\(.*\\)%-D\\1=\\2%g\n-s%[ \t`~#$^&*(){}\\\\|;'\"<>?]%\\\\&%g\n-s%\\[%\\\\&%g\n-s%\\]%\\\\&%g\n-s%\\$%$$%g\n-EOF\n-DEFS=`sed -f conftest.defs confdefs.h | tr '\\012' ' '`\n-rm -f conftest.defs\n+#\n+# If the first sed substitution is executed (which looks for macros that\n+# take arguments), then we branch to the quote section.  Otherwise,\n+# look for a macro that doesn't take arguments.\n+cat >confdef2opt.sed <<\\_ACEOF\n+t clear\n+: clear\n+s,^[ \t]*#[ \t]*define[ \t][ \t]*\\([^ \t(][^ \t(]*([^)]*)\\)[ \t]*\\(.*\\),-D\\1=\\2,g\n+t quote\n+s,^[ \t]*#[ \t]*define[ \t][ \t]*\\([^ \t][^ \t]*\\)[ \t]*\\(.*\\),-D\\1=\\2,g\n+t quote\n+d\n+: quote\n+s,[ \t`~#$^&*(){}\\\\|;'\"<>?],\\\\&,g\n+s,\\[,\\\\&,g\n+s,\\],\\\\&,g\n+s,\\$,$$,g\n+p\n+_ACEOF\n+# We use echo to avoid assuming a particular line-breaking character.\n+# The extra dot is to prevent the shell from consuming trailing\n+# line-breaks from the sub-command output.  A line-break within\n+# single-quotes doesn't work because, if this script is created in a\n+# platform that uses two characters for line-breaks (e.g., DOS), tr\n+# would break.\n+ac_LF_and_DOT=`echo; echo .`\n+DEFS=`sed -n -f confdef2opt.sed confdefs.h | tr \"$ac_LF_and_DOT\" ' .'`\n+rm -f confdef2opt.sed\n \n \n # Without the \"./\", some shells look in PATH for config.status."}, {"sha": "c78cec75a19543472c5c1767a1803ac2c0ed5b71", "filename": "configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e29923752bf42a1053916db98d98d8bbeceaa9c/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e29923752bf42a1053916db98d98d8bbeceaa9c/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=9e29923752bf42a1053916db98d98d8bbeceaa9c", "patch": "@@ -226,7 +226,7 @@ esac\n \n # Some tools are only suitable for building in a \"native\" situation.\n # Remove these if host!=target.  \n-native_only=\"autoconf automake libtool fileutils find gawk gettext gzip hello indent m4 rcs recode sed shellutils tar textutils uudecode wdiff gprof target-groff guile perl time ash bash bzip2 prms gnuserv target-gperf\"\n+native_only=\"autoconf automake libtool fileutils find gawk gettext gzip hello indent m4 rcs recode sed shellutils tar textutils uudecode wdiff target-groff guile perl time ash bash bzip2 prms gnuserv target-gperf\"\n \n # Similarly, some are only suitable for cross toolchains.\n # Remove these if host=target."}]}