{"sha": "bb7fd9624b935a2edae7dc29864a95e7b6dfbdbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI3ZmQ5NjI0YjkzNWEyZWRhZTdkYzI5ODY0YTk1ZTdiNmRmYmRiZQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2001-09-19T18:28:59Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2001-09-19T18:28:59Z"}, "message": "Fix null pointer bug.\n\nFrom-SVN: r45692", "tree": {"sha": "907d2addb623e37b22e9e8c28fc88c37b33bf901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/907d2addb623e37b22e9e8c28fc88c37b33bf901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb7fd9624b935a2edae7dc29864a95e7b6dfbdbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb7fd9624b935a2edae7dc29864a95e7b6dfbdbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb7fd9624b935a2edae7dc29864a95e7b6dfbdbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb7fd9624b935a2edae7dc29864a95e7b6dfbdbe/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "216183ce28d62a3897632d1077ff039a714ad280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/216183ce28d62a3897632d1077ff039a714ad280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/216183ce28d62a3897632d1077ff039a714ad280"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "31745a9bc08d9a1d3451a3bf972e7d59e176acc7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb7fd9624b935a2edae7dc29864a95e7b6dfbdbe/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb7fd9624b935a2edae7dc29864a95e7b6dfbdbe/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=bb7fd9624b935a2edae7dc29864a95e7b6dfbdbe", "patch": "@@ -1,3 +1,8 @@\n+2001-09-19  Anthony Green  <green@redhat.com>\n+\n+\t* gnu/gcj/protocol/file/Handler.java: Avoid NullPointerException\n+\twhen host is null.\n+\n 2001-09-17  Andreas Jaeger  <aj@suse.de>\n \n \t* jni.cc (array_from_valist): Use promoted types for va_arg."}, {"sha": "b4d8fbfbe42488cc9aaa40b1b1a2ba099ce8045b", "filename": "libjava/gnu/gcj/protocol/file/Handler.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb7fd9624b935a2edae7dc29864a95e7b6dfbdbe/libjava%2Fgnu%2Fgcj%2Fprotocol%2Ffile%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb7fd9624b935a2edae7dc29864a95e7b6dfbdbe/libjava%2Fgnu%2Fgcj%2Fprotocol%2Ffile%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fprotocol%2Ffile%2FHandler.java?ref=bb7fd9624b935a2edae7dc29864a95e7b6dfbdbe", "patch": "@@ -32,7 +32,8 @@ protected URLConnection openConnection(URL url) throws IOException\n   {\n     // If a hostname is set, then we need to switch protocols to ftp\n     // in order to transfer this from the remote host.\n-    if (! url.getHost().equals(\"\"))\n+    String host = url.getHost();\n+    if ((host != null) && (! host.equals(\"\")))\n       {\n \t// Reset the protocol (and implicitly the handler) for this URL.\n \t// Then have the URL attempt the connection again, as it will"}]}