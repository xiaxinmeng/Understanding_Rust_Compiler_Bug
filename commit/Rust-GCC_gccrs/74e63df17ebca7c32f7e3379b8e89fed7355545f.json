{"sha": "74e63df17ebca7c32f7e3379b8e89fed7355545f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRlNjNkZjE3ZWJjYTdjMzJmN2UzMzc5YjhlODlmZWQ3MzU1NTQ1Zg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-04-17T13:07:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-17T13:07:12Z"}, "message": "g-moreex.adb: Add comments.\n\n2009-04-17  Robert Dewar  <dewar@adacore.com>\n\n\t* g-moreex.adb: Add comments.\n\n\t* s-auxdec.ads: Add ??? comment for uncommented pragma Warnings (Off)\n\n\t* s-auxdec-vms_64.ads: Add ??? comment for uncommented pragma\n\tWarnings (Off)\n\n\t* prepcomp.adb: Add ??? comment\n\n\t* a-tasatt.adb: Minor reformatting\n\n\t* g-trasym-vms-alpha.adb: Add ??? comment\n\n\t* g-trasym-vms-ia64.adb: Add ??? comment\n\n\t* xoscons.adb: Minor reformatting\n\n\t* s-tassta.adb: Minor reformatting\n\n\t* s-scaval.adb: Add ??? comment\n\n\t* stand.ads: Minor code clean up (remove junk with of Namet)\n\n\t* s-strcom.adb, s-strcom.ads, s-string.adb, s-string.ads, s-sopco3.adb,\n\ts-sopco3.ads, s-strops.adb, s-strops.ads, s-sopco5.adb, s-sopco5.ads,\n\ts-wchcnv.adb, s-wchcnv.ads, s-ststop.adb, s-ststop.ads, s-soflin.adb,\n\ts-soflin.ads, s-traceb.adb, s-traceb.ads, s-traent.adb, s-traent.ads,\n\ts-secsta.adb, s-secsta.ads, s-utf_32.adb, s-utf_32.ads, s-wchcon.adb,\n\ts-wchjis.adb, s-wchcon.ads, s-wchjis.ads, s-sopco4.adb, s-sopco4.ads,\n\ts-stache.adb, s-stache.ads, s-stoele.adb, s-stoele.ads, s-stalib.adb,\n\ts-stalib.ads, s-os_lib.ads, s-purexc.ads: Remove no longer needed\n\tWarnings off pragmas.\n\nFrom-SVN: r146262", "tree": {"sha": "bcc5931e279df440e7ea1990316f56484295866e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcc5931e279df440e7ea1990316f56484295866e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74e63df17ebca7c32f7e3379b8e89fed7355545f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e63df17ebca7c32f7e3379b8e89fed7355545f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e63df17ebca7c32f7e3379b8e89fed7355545f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e63df17ebca7c32f7e3379b8e89fed7355545f/comments", "author": null, "committer": null, "parents": [{"sha": "df416fb084c9670e37e20f0e985134ee146d6392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df416fb084c9670e37e20f0e985134ee146d6392", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df416fb084c9670e37e20f0e985134ee146d6392"}], "stats": {"total": 254, "additions": 92, "deletions": 162}, "files": [{"sha": "6fee481ee697554fb0aa070def189dd95d43268d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -1,3 +1,38 @@\n+2009-04-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-moreex.adb: Add comments.\n+\n+\t* s-auxdec.ads: Add ??? comment for uncommented pragma Warnings (Off)\n+\n+\t* s-auxdec-vms_64.ads: Add ??? comment for uncommented pragma\n+\tWarnings (Off)\n+\n+\t* prepcomp.adb: Add ??? comment\n+\n+\t* a-tasatt.adb: Minor reformatting\n+\n+\t* g-trasym-vms-alpha.adb: Add ??? comment\n+\n+\t* g-trasym-vms-ia64.adb: Add ??? comment\n+\n+\t* xoscons.adb: Minor reformatting\n+\n+\t* s-tassta.adb: Minor reformatting\n+\n+\t* s-scaval.adb: Add ??? comment\n+\n+\t* stand.ads: Minor code clean up (remove junk with of Namet)\n+\n+\t* s-strcom.adb, s-strcom.ads, s-string.adb, s-string.ads, s-sopco3.adb,\n+\ts-sopco3.ads, s-strops.adb, s-strops.ads, s-sopco5.adb, s-sopco5.ads,\n+\ts-wchcnv.adb, s-wchcnv.ads, s-ststop.adb, s-ststop.ads, s-soflin.adb,\n+\ts-soflin.ads, s-traceb.adb, s-traceb.ads, s-traent.adb, s-traent.ads,\n+\ts-secsta.adb, s-secsta.ads, s-utf_32.adb, s-utf_32.ads, s-wchcon.adb,\n+\ts-wchjis.adb, s-wchcon.ads, s-wchjis.ads, s-sopco4.adb, s-sopco4.ads,\n+\ts-stache.adb, s-stache.ads, s-stoele.adb, s-stoele.ads, s-stalib.adb,\n+\ts-stalib.ads, s-os_lib.ads, s-purexc.ads: Remove no longer needed\n+\tWarnings off pragmas.\n+\n 2009-04-17  Pascal Obry  <obry@adacore.com>\n \n \t* initialize.c: Fix test for reallocating the arguments array."}, {"sha": "69c4b9bdf7153220345e3c6574cd12d648a0008d", "filename": "gcc/ada/a-tasatt.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fa-tasatt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fa-tasatt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tasatt.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -276,8 +276,7 @@ package body Ada.Task_Attributes is\n    --  For reference to directly addressed task attributes\n \n    pragma Warnings (On);\n-   --  End of warnings off region for directly addressed\n-   --  attribute conversion functions.\n+   --  End warnings off region for directly addressed attribute conversions\n \n    function To_Access_Address is new Ada.Unchecked_Conversion\n      (Access_Node, Access_Address);\n@@ -307,8 +306,6 @@ package body Ada.Task_Attributes is\n      (Local_Deallocator, Deallocator);\n    --  To defeat accessibility check\n \n-   pragma Warnings (On);\n-\n    ------------------------\n    -- Storage Management --\n    ------------------------"}, {"sha": "ab3a3065524cacffe9e7f85a6b43d42dc8e35d35", "filename": "gcc/ada/g-moreex.adb", "status": "modified", "additions": 12, "deletions": 27, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fg-moreex.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fg-moreex.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-moreex.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2006, AdaCore                     --\n+--                     Copyright (C) 2000-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,32 +47,17 @@ package body GNAT.Most_Recent_Exception is\n       use type Ada.Exceptions.Exception_Occurrence_Access;\n \n    begin\n-      pragma Warnings (Off);\n-      if EOA = null then\n-         return Ada.Exceptions.Null_Occurrence;\n-      else\n-         return EOA.all;\n-      end if;\n-      pragma Warnings (On);\n-\n-      --  ???Note that both of the above return statements violate the Ada\n-      --  2005 rule forbidding copying of limited objects (see RM-7.5(2.8/2)).\n-      --  When compiled with -gnatg, the compiler gives a warning instead of\n-      --  an error, so we can turn it off.\n-      --  To fix this, remove the pragmas Warnings above, and use the following\n-      --  code. We can't do that yet, because AI-318 is not yet implemented.\n-      --\n-      --  return Result : Ada.Exceptions.Exception_Occurrence do\n-      --     if EOA = null then\n-      --        Ada.Exceptions.Save_Occurrence\n-      --          (Target => Result,\n-      --           Source => Ada.Exceptions.Null_Occurrence);\n-      --     else\n-      --        Ada.Exceptions.Save_Occurrence\n-      --          (Target => Result,\n-      --           Source => EOA.all);\n-      --     end if;\n-      --  end return;\n+      return Result : Ada.Exceptions.Exception_Occurrence do\n+         if EOA = null then\n+            Ada.Exceptions.Save_Occurrence\n+              (Target => Result,\n+               Source => Ada.Exceptions.Null_Occurrence);\n+         else\n+            Ada.Exceptions.Save_Occurrence\n+              (Target => Result,\n+               Source => EOA.all);\n+         end if;\n+      end return;\n    end Occurrence;\n \n    -----------------------"}, {"sha": "adfa8f83d4eb8ba88ec4a05c6b9edc1e7e104359", "filename": "gcc/ada/g-trasym-vms-alpha.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fg-trasym-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fg-trasym-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym-vms-alpha.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -40,7 +40,7 @@ with System.Traceback_Entries;\n \n package body GNAT.Traceback.Symbolic is\n \n-   pragma Warnings (Off);\n+   pragma Warnings (Off); --  Needs comment ???\n    pragma Linker_Options (\"--for-linker=sys$library:trace.exe\");\n \n    use Interfaces.C;"}, {"sha": "28dab4729bd5b1c1045960b42f34ae96c8401cc6", "filename": "gcc/ada/g-trasym-vms-ia64.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fg-trasym-vms-ia64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fg-trasym-vms-ia64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym-vms-ia64.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -39,7 +39,7 @@ with System.Traceback_Entries;\n \n package body GNAT.Traceback.Symbolic is\n \n-   pragma Warnings (Off);\n+   pragma Warnings (Off); --  ??? needs comment\n    pragma Linker_Options (\"--for-linker=sys$library:trace.exe\");\n \n    use System;"}, {"sha": "63d64e7c8fff4bff023cbedff63ac91ca5ad17ba", "filename": "gcc/ada/prepcomp.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fprepcomp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fprepcomp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -45,8 +45,11 @@ package body Prepcomp is\n \n    Source_Index_Of_Preproc_Data_File : Source_File_Index := No_Source_File;\n \n-   --  The following variable should be a constant, but this is not\n-   --  possible. Warnings are Off because it is never assigned a value.\n+   --  The following variable should be a constant, but this is not possible\n+   --  because its type GNAT.Dynamic_Tables.Instance has a component P of\n+   --  unitialized private type GNAT.Dynamic_Tables.Table_Private and there are\n+   --  no exported values for this private type.\n+   --  Warnings are Off because it is never assigned a value.\n \n    pragma Warnings (Off);\n    No_Mapping : Prep.Symbol_Table.Instance;"}, {"sha": "e9d87627f5f7662bfd7c1e38728cdb5c951cc78a", "filename": "gcc/ada/s-auxdec-vms_64.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-auxdec-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-auxdec-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec-vms_64.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -115,6 +115,7 @@ package System.Aux_DEC is\n    --  Floating point type declarations for VAX floating point data types\n \n    pragma Warnings (Off);\n+   --  ??? needs comment\n \n    type F_Float is digits 6;\n    pragma Float_Representation (VAX_Float, F_Float);"}, {"sha": "a709956b60b583da7e5d5f9c7d5e534ad6426577", "filename": "gcc/ada/s-auxdec.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-auxdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-auxdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -105,6 +105,7 @@ package System.Aux_DEC is\n    --  Floating point type declarations for VAX floating point data types\n \n    pragma Warnings (Off);\n+   --  ??? needs comment\n \n    type F_Float is digits 6;\n    pragma Float_Representation (VAX_Float, F_Float);"}, {"sha": "2abce23732e7ae922519c3b244c17eed7a882fb3", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -48,9 +48,7 @@\n --  be used by other predefined packages. User access to this package is via\n --  a renaming of this package in GNAT.OS_Lib (file g-os_lib.ads).\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n with System;\n with System.Strings;"}, {"sha": "a327f48bf0aa2fb8e320e014583787d310e18071", "filename": "gcc/ada/s-purexc.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-purexc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-purexc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-purexc.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -33,9 +33,7 @@\n --  an exception message. It can be used from Pure units. This unit is for\n --  internal use only, it is not generally available to applications.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package System.Pure_Exceptions is\n    pragma Pure;"}, {"sha": "415763c3e6bc5d47c5e4c91e4469f6148b185627", "filename": "gcc/ada/s-scaval.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-scaval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-scaval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-scaval.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -71,7 +71,7 @@ package body System.Scalar_Values is\n       --  On other targets the type is 8 bytes, and type Byte8 is used for\n       --  values that are then converted to ByteLF.\n \n-      pragma Warnings (Off);\n+      pragma Warnings (Off); --  why ???\n       function To_ByteLF is new Ada.Unchecked_Conversion (Byte8, ByteLF);\n       pragma Warnings (On);\n "}, {"sha": "16e9fa0c9fb6b49058c912f5c1dd72b953fee695", "filename": "gcc/ada/s-secsta.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-secsta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-secsta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n with System.Soft_Links;\n with System.Parameters;"}, {"sha": "bfbab33e37f553dfbe62761ca92faf6b07441600", "filename": "gcc/ada/s-secsta.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-secsta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-secsta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n with System.Storage_Elements;\n "}, {"sha": "4ae51f39f7f759606622ccc62cdc6b8b4abdc48f", "filename": "gcc/ada/s-soflin.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-soflin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-soflin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n pragma Polling (Off);\n --  We must turn polling off for this unit, because otherwise we get an\n@@ -309,7 +307,7 @@ package body System.Soft_Links is\n    -------------------------\n \n    procedure Task_Termination_NT (Excep : EO) is\n-      pragma Warnings (Off, Excep);\n+      pragma Unreferenced (Excep);\n    begin\n       null;\n    end Task_Termination_NT;"}, {"sha": "6c868cd6cedd6afee18b10b01ab8cc289e1b8a36", "filename": "gcc/ada/s-soflin.ads", "status": "modified", "additions": 17, "deletions": 23, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-soflin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-soflin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -37,11 +37,6 @@\n --  initialized to non-tasking versions, and then if the tasking support is\n --  initialized, they are set to the real tasking versions.\n \n-pragma Warnings (Off);\n---  When compiling this package with older compilers, there are many warnings,\n---  so we suppress them throughout most of this file. Pragmas Compiler_Unit,\n---  Preelaborate_05, and Favor_Top_Level are not supported by older compilers.\n-\n pragma Compiler_Unit;\n \n with Ada.Exceptions;\n@@ -130,7 +125,6 @@ package System.Soft_Links is\n                Len       : Natural)\n                return      String;\n    pragma Favor_Top_Level (Traceback_Decorator_Wrapper_Call);\n-   pragma Warnings (On);\n \n    --  Declarations for the no tasking versions of the required routines\n \n@@ -312,35 +306,35 @@ package System.Soft_Links is\n    ------------------------\n \n    --  Here we define a single type that encapsulates the various task\n-   --  specific data. This type is used to store the necessary data into\n-   --  the Task_Control_Block or into a global variable in the non tasking\n-   --  case.\n+   --  specific data. This type is used to store the necessary data into the\n+   --  Task_Control_Block or into a global variable in the non tasking case.\n \n    type TSD is record\n       Pri_Stack_Info : aliased Stack_Checking.Stack_Info;\n-      --  Information on stack (Base/Limit/Size) that is used\n-      --  by System.Stack_Checking. If this TSD does not belong to\n-      --  the environment task, the Size field must be initialized\n-      --  to the tasks requested stack size before the task can do\n-      --  its first stack check.\n+      --  Information on stack (Base/Limit/Size) used by System.Stack_Checking.\n+      --  If this TSD does not belong to the environment task, the Size field\n+      --  must be initialized to the tasks requested stack size before the task\n+      --  can do its first stack check.\n \n       pragma Warnings (Off);\n+      --  Needed because we are giving a non-static default to an object in\n+      --  a preelaborated unit, which is formally not permitted, but OK here.\n+\n       Jmpbuf_Address : System.Address := System.Null_Address;\n-      --  Address of jump buffer used to store the address of the\n-      --  current longjmp/setjmp buffer for exception management.\n-      --  These buffers are threaded into a stack, and the address\n-      --  here is the top of the stack. A null address means that\n-      --  no exception handler is currently active.\n+      --  Address of jump buffer used to store the address of the current\n+      --  longjmp/setjmp buffer for exception management. These buffers are\n+      --  threaded into a stack, and the address here is the top of the stack.\n+      --  A null address means that no exception handler is currently active.\n \n       Sec_Stack_Addr : System.Address := System.Null_Address;\n       pragma Warnings (On);\n       --  Address of currently allocated secondary stack\n \n       Current_Excep : aliased EO;\n-      --  Exception occurrence that contains the information for the\n-      --  current exception. Note that any exception in the same task\n-      --  destroys this information, so the data in this variable must\n-      --  be copied out before another exception can occur.\n+      --  Exception occurrence that contains the information for the current\n+      --  exception. Note that any exception in the same task destroys this\n+      --  information, so the data in this variable must be copied out before\n+      --  another exception can occur.\n       --\n       --  Also act as a list of the active exceptions in the case of the GCC\n       --  exception mechanism, organized as a stack with the most recent first."}, {"sha": "5e7b6bbcc9177e581b054ab1609cb58035b5ac32", "filename": "gcc/ada/s-sopco3.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-sopco3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-sopco3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sopco3.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -33,9 +33,7 @@\n --  which now generates concatenation inline. It is retained only because\n --  it may be used during bootstrapping using old versions of the compiler.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package body System.String_Ops_Concat_3 is\n "}, {"sha": "68b1066c60ab9bf9df2af3b62953a5a9fe87bf25", "filename": "gcc/ada/s-sopco3.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-sopco3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-sopco3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sopco3.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -35,9 +35,7 @@\n --  which now generates concatenation inline. It is retained only because\n --  it may be used during bootstrapping using old versions of the compiler.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package System.String_Ops_Concat_3 is\n    pragma Pure;"}, {"sha": "4bfbcc31ccdbea2a2f7ea807d22bf05f5cef9dc4", "filename": "gcc/ada/s-sopco4.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-sopco4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-sopco4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sopco4.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -33,9 +33,7 @@\n --  which now generates concatenation inline. It is retained only because\n --  it may be used during bootstrapping using old versions of the compiler.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package body System.String_Ops_Concat_4 is\n "}, {"sha": "e198bbae81c60dcb83d2dde3d2f2e5bb8249d4cc", "filename": "gcc/ada/s-sopco4.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-sopco4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-sopco4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sopco4.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -35,9 +35,7 @@\n --  which now generates concatenation inline. It is retained only because\n --  it may be used during bootstrapping using old versions of the compiler.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package System.String_Ops_Concat_4 is\n    pragma Pure;"}, {"sha": "8467028c6bae18e3cb94dc5e1b90968f69f08167", "filename": "gcc/ada/s-sopco5.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-sopco5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-sopco5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sopco5.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -33,9 +33,7 @@\n --  which now generates concatenation inline. It is retained only because\n --  it may be used during bootstrapping using old versions of the compiler.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package body System.String_Ops_Concat_5 is\n "}, {"sha": "3491bb9ad96543e0e4be8fb7ede164b00d8e890f", "filename": "gcc/ada/s-sopco5.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-sopco5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-sopco5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sopco5.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -35,9 +35,7 @@\n --  which now generates concatenation inline. It is retained only because\n --  it may be used during bootstrapping using old versions of the compiler.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package System.String_Ops_Concat_5 is\n    pragma Pure;"}, {"sha": "ffad20544815f3346fa44038126ad74fae66e64d", "filename": "gcc/ada/s-stache.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-stache.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-stache.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stache.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n --  As noted in the spec, this dummy body is present because otherwise we\n --  have bootstrapping path problems (there used to be a real body)."}, {"sha": "878b8a5270c512cb58aef503396042c405d53c34", "filename": "gcc/ada/s-stache.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-stache.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-stache.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stache.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -35,9 +35,7 @@\n --  This package defines basic types and objects. Operations related to\n --  stack checking can be found in package System.Stack_Checking.Operations.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n with System.Storage_Elements;\n "}, {"sha": "ffea8d008cdb5fd0b70188534eb8afa8d1709974", "filename": "gcc/ada/s-stalib.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-stalib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-stalib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stalib.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n --  The purpose of this body is simply to ensure that the two with'ed units\n --  are properly included in the link. They are not with'ed from the spec\n@@ -43,7 +41,8 @@ pragma Polling (Off);\n --  elaboration circularities with Ada.Exceptions if polling is on.\n \n pragma Warnings (Off);\n---  Kill warnings from unused withs\n+--  Kill warnings from unused withs. These unused with's are here to make\n+--  sure the relevant units are loaded and properly elaborated.\n \n with System.Soft_Links;\n --  Referenced directly from generated code using external symbols so it"}, {"sha": "fb58642d01eeb6f6143cef2f5fa91430eecbde06", "filename": "gcc/ada/s-stalib.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-stalib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-stalib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stalib.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -44,9 +44,7 @@\n --  package and the packages it references are included in all Ada programs,\n --  together with the included data.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n pragma Polling (Off);\n --  We must turn polling off for this unit, because otherwise we get"}, {"sha": "0bab843c1387d53faca52acf8ecea036521e7b42", "filename": "gcc/ada/s-stoele.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-stoele.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-stoele.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stoele.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n with Ada.Unchecked_Conversion;\n "}, {"sha": "af60beb55184fac4d06d184c58155e9afacabbc8", "filename": "gcc/ada/s-stoele.ads", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-stoele.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-stoele.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stoele.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -37,9 +37,7 @@\n --  extra declarations that can be introduced into System using Extend_System.\n --  It is a good idea to avoid use clauses for this package!\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package System.Storage_Elements is\n    pragma Pure;\n@@ -66,12 +64,8 @@ package System.Storage_Elements is\n    type Storage_Element is mod 2 ** Storage_Unit;\n    for Storage_Element'Size use Storage_Unit;\n \n-   pragma Warnings (Off);\n    pragma Universal_Aliasing (Storage_Element);\n-   pragma Warnings (On);\n-   --  This type is used by the expansion to implement aggregate copy.\n-   --  We turn off warnings for this pragma to deal with being compiled\n-   --  with an earlier GNAT version that does not recognize this pragma.\n+   --  This type is used by the expander to implement aggregate copy\n \n    type Storage_Array is\n      array (Storage_Offset range <>) of aliased Storage_Element;"}, {"sha": "37ccc61380aaaf0f4131b58882eb9f0b809b3670", "filename": "gcc/ada/s-strcom.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-strcom.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-strcom.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-strcom.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n with Ada.Unchecked_Conversion;\n "}, {"sha": "6d1a303c560c3720999978627942ace009c67fd6", "filename": "gcc/ada/s-strcom.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-strcom.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-strcom.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-strcom.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -31,9 +31,7 @@\n \n --  This package contains functions for runtime comparisons on strings\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package System.String_Compare is\n "}, {"sha": "e1799eb4545cec7b81451385bf407d627aade688", "filename": "gcc/ada/s-string.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-string.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-string.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-string.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package body System.Strings is\n "}, {"sha": "79ec11272984b207baeaf88efff8b0707d17942c", "filename": "gcc/ada/s-string.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-string.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-string.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-string.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -35,9 +35,7 @@\n --  be used by other predefined packages. User access to this package is via\n --  a renaming of this package in GNAT.String (file g-string.ads).\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n with Ada.Unchecked_Deallocation;\n "}, {"sha": "44a6a76bf1585de9157a1be9b90c43ad2e77c4c4", "filename": "gcc/ada/s-strops.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-strops.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-strops.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-strops.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -33,9 +33,7 @@\n --  which now generates concatenation inline. It is retained only because\n --  it may be used during bootstrapping using old versions of the compiler.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package body System.String_Ops is\n "}, {"sha": "54ac74578a6a7fca0de3a75a97893789312642cc", "filename": "gcc/ada/s-strops.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-strops.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-strops.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-strops.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -36,9 +36,7 @@\n --  which now generates concatenation inline. It is retained only because\n --  it may be used during bootstrapping using old versions of the compiler.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package System.String_Ops is\n    pragma Pure;"}, {"sha": "25f3bcd23c7779fcd1296c7a7d26f9666bff719d", "filename": "gcc/ada/s-ststop.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-ststop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-ststop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-ststop.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n with Ada.Streams;              use Ada.Streams;\n with Ada.Streams.Stream_IO;    use Ada.Streams.Stream_IO;"}, {"sha": "db7059069b745332f0a0b15e13aba1b4035e58b8", "filename": "gcc/ada/s-ststop.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-ststop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-ststop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-ststop.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -46,9 +46,7 @@\n --       or\n --     String_Output_Blk_IO (Some_Stream, Some_String);\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n with Ada.Streams;\n "}, {"sha": "84281cf827f01fc24cc4ccfc356e6836af88670d", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -938,7 +938,7 @@ package body System.Tasking.Stages is\n       Initialization.Undefer_Abort (Self_ID);\n    end Move_Activation_Chain;\n \n-   --  Compiler interface only. Do not call from within the RTS.\n+   --  Compiler interface only. Do not call from within the RTS\n \n    --------------------\n    -- Set_Entry_Name --"}, {"sha": "d4de95d7e055ea32fbec49090041fef66e5b3917", "filename": "gcc/ada/s-traceb.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-traceb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-traceb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traceb.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -34,9 +34,7 @@\n --  Note: this unit must be compiled using -fno-optimize-sibling-calls.\n --  See comment below in body of Call_Chain for details on the reason.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package body System.Traceback is\n "}, {"sha": "0119b700a4447752c8afc1a7da706546c54ee8eb", "filename": "gcc/ada/s-traceb.ads", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-traceb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-traceb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traceb.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,14 +29,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a method for generating a traceback of the\n---  current execution location. The traceback shows the locations of\n---  calls in the call chain, up to either the top or a designated\n---  number of levels.\n+--  This package provides a method for generating a traceback of the current\n+--  execution location. The traceback shows the locations of calls in the call\n+--  chain, up to either the top or a designated number of levels.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n pragma Polling (Off);\n --  We must turn polling off for this unit, because otherwise we get\n@@ -61,12 +58,11 @@ package System.Traceback is\n    --    Traceback is the address of an array of addresses where the\n    --    result will be stored.\n    --\n-   --    Max_Len is the length of the Traceback array. If the call chain\n-   --    is longer than this, then additional entries are discarded, and\n-   --    the traceback is missing some of the highest level entries.\n+   --    Max_Len is the length of the Traceback array. If the call chain is\n+   --    longer than this, then additional entries are discarded, and the\n+   --    traceback is missing some of the highest level entries.\n    --\n-   --    Len is the returned actual number of addresses stored\n-   --    in the Traceback array.\n+   --    Len is the returned number of addresses stored in the Traceback array\n    --\n    --    Exclude_Min/Exclude_Max, if non null, provide a range of addresses\n    --    to ignore from the computation of the traceback.\n@@ -77,9 +73,9 @@ package System.Traceback is\n    --    this procedure, 2 means 1 + exclude the frame for this procedure's\n    --    caller, ...\n    --\n-   --  On return, the Traceback array is filled in, and Len indicates\n-   --  the number of stored entries. The first entry is the most recent\n-   --  call, and the last entry is the highest level call.\n+   --  On return, the Traceback array is filled in, and Len indicates the\n+   --  number of stored entries. The first entry is the most recent call,\n+   --  and the last entry is the highest level call.\n \n    function C_Call_Chain\n      (Traceback : System.Address;"}, {"sha": "343d30c8906ea3363d551a096745b12c3b53aa89", "filename": "gcc/ada/s-traent.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-traent.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-traent.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traent.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package body System.Traceback_Entries is\n "}, {"sha": "cf24e0db52a3affe2db35fb36a46306800f3db8e", "filename": "gcc/ada/s-traent.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-traent.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-traent.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traent.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -38,9 +38,7 @@\n --  version of the package, an entry is a mere code location representing the\n --  address of a call instruction part of the call-chain.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package System.Traceback_Entries is\n    pragma Preelaborate;"}, {"sha": "263f13efd9bf994370b961eddeff91d65c050f7a", "filename": "gcc/ada/s-utf_32.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-utf_32.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-utf_32.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-utf_32.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n pragma Style_Checks (Off);\n --  Allow long lines in this unit"}, {"sha": "41ed6d7927cbf37517113c32e3f76885b1040b1a", "filename": "gcc/ada/s-utf_32.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-utf_32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-utf_32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-utf_32.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -41,9 +41,7 @@\n --  the same services. The reason this package is in System is so that it can\n --  with'ed by other packages in the Ada and System hierarchies.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package System.UTF_32 is\n "}, {"sha": "bb806f08aa5523d32da36d22aaef7c1438248a9e", "filename": "gcc/ada/s-wchcnv.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-wchcnv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-wchcnv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcnv.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n with Interfaces;     use Interfaces;\n with System.WCh_Con; use System.WCh_Con;"}, {"sha": "887e2198cb7dec6a2cd410ee49b9c5a7211b772b", "filename": "gcc/ada/s-wchcnv.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-wchcnv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-wchcnv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcnv.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -43,9 +43,7 @@\n --  This unit may be used directly from an application program by providing\n --  an appropriate WITH, and the interface can be expected to remain stable.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n with System.WCh_Con;\n "}, {"sha": "45585d9f74460013f2f168c0d0f33528675fae1d", "filename": "gcc/ada/s-wchcon.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-wchcon.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-wchcon.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcon.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package body System.WCh_Con is\n "}, {"sha": "1a370698c08cce269e9d10a8d58005611a8eb221", "filename": "gcc/ada/s-wchcon.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-wchcon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-wchcon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcon.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -36,9 +36,7 @@\n --  This unit may be used directly from an application program by providing\n --  an appropriate WITH, and the interface can be expected to remain stable.\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package System.WCh_Con is\n    pragma Pure;"}, {"sha": "a005ec68d9bc0c5f45820c391e978d9e37ba0ffa", "filename": "gcc/ada/s-wchjis.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-wchjis.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-wchjis.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchjis.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -29,9 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package body System.WCh_JIS is\n "}, {"sha": "b91839704c2db47b20166be5c77551a983c8a993", "filename": "gcc/ada/s-wchjis.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-wchjis.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fs-wchjis.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchjis.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -32,9 +32,7 @@\n --  This package contains routines used for converting between internal\n --  JIS codes and the two external forms we support (EUC and Shift-JIS)\n \n-pragma Warnings (Off);\n pragma Compiler_Unit;\n-pragma Warnings (On);\n \n package System.WCh_JIS is\n    pragma Pure;"}, {"sha": "f2fadccad8eea859b7b493b26ad681dbc588fed7", "filename": "gcc/ada/stand.ads", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstand.ads?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -35,13 +35,6 @@\n \n with Types; use Types;\n \n---  Do we really need the with of Namet?\n-\n-pragma Warnings (Off);\n-with Namet; use Namet;\n-pragma Elaborate_All (Namet);\n-pragma Warnings (On);\n-\n package Stand is\n \n    type Standard_Entity_Type is ("}, {"sha": "4f5e4a291c71a9fb75fadf8214a893ef4ce4c54a", "filename": "gcc/ada/xoscons.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fxoscons.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e63df17ebca7c32f7e3379b8e89fed7355545f/gcc%2Fada%2Fxoscons.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxoscons.adb?ref=74e63df17ebca7c32f7e3379b8e89fed7355545f", "patch": "@@ -23,14 +23,14 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This program generates the spec of System.OS_Constants (s-oscons.ads).\n+--  This program generates the spec of System.OS_Constants (s-oscons.ads)\n \n --  It works in conjunction with a C template file which must be pre-processed\n --  and compiled using the cross compiler. Two input files are used:\n --    - the preprocessed C file: s-oscons-tmplt.i\n --    - the generated assembly file: s-oscons-tmplt.s\n \n---  The contents of s-oscons.ads is written on standard output.\n+--  The contents of s-oscons.ads is written on standard output\n \n with Ada.Characters.Handling; use Ada.Characters.Handling;\n with Ada.Exceptions;          use Ada.Exceptions;"}]}