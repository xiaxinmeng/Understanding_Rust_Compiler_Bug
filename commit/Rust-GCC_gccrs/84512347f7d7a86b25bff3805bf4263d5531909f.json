{"sha": "84512347f7d7a86b25bff3805bf4263d5531909f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ1MTIzNDdmN2Q3YTg2YjI1YmZmMzgwNWJmNDI2M2Q1NTMxOTA5Zg==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2002-08-05T18:53:16Z"}, "committer": {"name": "Douglas Rupp", "email": "rupp@gcc.gnu.org", "date": "2002-08-05T18:53:16Z"}, "message": "config.gcc (i[34567]86-*-interix*): Replace interix.o with winnt.o\n\n2002-08-05  Douglas B Rupp  <rupp@gnat.com>\n\n\t* config.gcc (i[34567]86-*-interix*): Replace interix.o with winnt.o\n\t* config/i386/i386-interix.h (TARGET_NOP_FUN_DLLIMPORT,\n\tdrectve_section): Define.\n\t* config/i386/t-interix: Replace interix.o rule with winnt.o.\n\t* config/i386/interix.c: Remove.\n\nFrom-SVN: r56056", "tree": {"sha": "7eb6cab16c1c3dab24694768f13fad52f0d008df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eb6cab16c1c3dab24694768f13fad52f0d008df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84512347f7d7a86b25bff3805bf4263d5531909f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84512347f7d7a86b25bff3805bf4263d5531909f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84512347f7d7a86b25bff3805bf4263d5531909f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84512347f7d7a86b25bff3805bf4263d5531909f/comments", "author": null, "committer": null, "parents": [{"sha": "b3426eb9e2a4338775908629c6daf103baf8250e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3426eb9e2a4338775908629c6daf103baf8250e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3426eb9e2a4338775908629c6daf103baf8250e"}], "stats": {"total": 148, "additions": 18, "deletions": 130}, "files": [{"sha": "c59b32008b9eda867ab0d8373b430b3557c2e833", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84512347f7d7a86b25bff3805bf4263d5531909f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84512347f7d7a86b25bff3805bf4263d5531909f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84512347f7d7a86b25bff3805bf4263d5531909f", "patch": "@@ -1,3 +1,11 @@\n+2002-08-05  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* config.gcc (i[34567]86-*-interix*): Replace interix.o with winnt.o\n+\t* config/i386/i386-interix.h (TARGET_NOP_FUN_DLLIMPORT,\n+\tdrectve_section): Define.\n+\t* config/i386/t-interix: Replace interix.o rule with winnt.o.\n+\t* config/i386/interix.c: Remove.\n+\n 2002-08-05  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* attribs.c: Don't include obstack.h."}, {"sha": "84760231d75a419332d51beb1ebe290f2f0a423e", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84512347f7d7a86b25bff3805bf4263d5531909f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84512347f7d7a86b25bff3805bf4263d5531909f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=84512347f7d7a86b25bff3805bf4263d5531909f", "patch": "@@ -1343,7 +1343,7 @@ i[34567]86-*-interix3*)\n \txm_file=\"i386/xm-i386-interix.h\"\n \txm_defines=POSIX\n \ttmake_file=\"t-interix i386/t-interix\"\n-\textra_objs=interix.o\n+\textra_objs=winnt.o\n \txmake_file=\"x-interix\"\n \tif test x$enable_threads = xyes ; then\n \t\tthread_file='posix'\n@@ -1357,7 +1357,7 @@ i[34567]86-*-interix*)\n \txm_file=\"i386/xm-i386-interix.h\"\n \txm_defines=POSIX\n \ttmake_file=\"t-interix i386/t-interix\"\n-\textra_objs=interix.o\n+\textra_objs=winnt.o\n \tif test x$enable_threads = xyes ; then\n \t\tthread_file='posix'\n \tfi"}, {"sha": "d80538f86b948a3b227c21c01dfb68769acb8e9e", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84512347f7d7a86b25bff3805bf4263d5531909f/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84512347f7d7a86b25bff3805bf4263d5531909f/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=84512347f7d7a86b25bff3805bf4263d5531909f", "patch": "@@ -237,6 +237,12 @@ Boston, MA 02111-1307, USA.  */\n #undef LD_INIT_SWITCH\n #undef LD_FINI_SWITCH\n \n+/* The following are needed for us to be able to use winnt.c, but are not\n+   otherwise meaningful to Interix.  (The functions that use these are\n+   never called because we don't do DLLs.) */\n+#define TARGET_NOP_FUN_DLLIMPORT 1\n+#define drectve_section()  /* nothing */\n+\n #define EH_FRAME_IN_DATA_SECTION\n \n #define READONLY_DATA_SECTION_ASM_OP\t\"\\t.section\\t.rdata,\\\"r\\\"\""}, {"sha": "e2222cac1f3dff0228a212536545cb73728f6b36", "filename": "gcc/config/i386/interix.c", "status": "removed", "additions": 0, "deletions": 126, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3426eb9e2a4338775908629c6daf103baf8250e/gcc%2Fconfig%2Fi386%2Finterix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3426eb9e2a4338775908629c6daf103baf8250e/gcc%2Fconfig%2Fi386%2Finterix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Finterix.c?ref=b3426eb9e2a4338775908629c6daf103baf8250e", "patch": "@@ -1,126 +0,0 @@\n-/* Subroutines for insn-output.c for Windows NT.\n-   Copyright (C) 1998, 1999, 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"rtl.h\"\n-#include \"regs.h\"\n-#include \"hard-reg-set.h\"\n-#include \"output.h\"\n-#include \"tree.h\"\n-#include \"flags.h\"\n-\n-/* Return string which is the former assembler name modified with a \n-   suffix consisting of an atsign (@) followed by the number of bytes of \n-   arguments */\n-\n-const char *\n-gen_stdcall_suffix (decl)\n-     tree decl;\n-{\n-  int total = 0;\n-  /* ??? This probably should use XSTR (XEXP (DECL_RTL (decl), 0), 0) instead\n-     of DECL_ASSEMBLER_NAME.  */\n-  const char *const asmname = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n-  char *newsym;\n-\n-  if (TYPE_ARG_TYPES (TREE_TYPE (decl)))\n-    if (TREE_VALUE (tree_last (TYPE_ARG_TYPES (TREE_TYPE (decl)))) \n-        == void_type_node)\n-      {\n-\ttree formal_type = TYPE_ARG_TYPES (TREE_TYPE (decl));\n-\n-\twhile (TREE_VALUE (formal_type) != void_type_node)\n-\t  {\n-\t    int parm_size\n-\t      = TREE_INT_CST_LOW (TYPE_SIZE (TREE_VALUE (formal_type)));\n-\t    /* Must round up to include padding.  This is done the same\n-\t       way as in store_one_arg.  */\n-\t    parm_size = ((parm_size + PARM_BOUNDARY - 1)\n-\t\t\t / PARM_BOUNDARY * PARM_BOUNDARY);\n-\t    total += parm_size;\n-\t    formal_type = TREE_CHAIN (formal_type);\n-\t  }\n-      }\n-\n-  newsym = xmalloc (strlen (asmname) + 10);\n-  sprintf (newsym, \"%s@%d\", asmname, total/BITS_PER_UNIT);\n-  return IDENTIFIER_POINTER (get_identifier (newsym));\n-}\n-\n-void\n-i386_interix_encode_section_info (decl, first)\n-     tree decl;\n-     int first;\n-{\n-  if (flag_pic)\n-    {\n-      rtx rtl = (TREE_CODE_CLASS (TREE_CODE (decl)) != 'd'\n-\t\t ? TREE_CST_RTL (decl) : DECL_RTL (decl));\n-      SYMBOL_REF_FLAG (XEXP (rtl, 0))\n-\t= (TREE_CODE_CLASS (TREE_CODE (decl)) != 'd'\n-\t   || ! TREE_PUBLIC (decl));\n-    }\n-  if (first && TREE_CODE (decl) == FUNCTION_DECL)\n-    if (lookup_attribute (\"stdcall\",\n-\t\t\t  TYPE_ATTRIBUTES (TREE_TYPE (decl))))\n-      XEXP (DECL_RTL (decl), 0) =\n-\tgen_rtx (SYMBOL_REF, Pmode, gen_stdcall_suffix (decl));\n-}\n-\n-#if 0\t\n-/* Turn this back on when the linker is updated to handle grouped\n-   .data$ sections correctly. See corresponding note in i386/interix.h. \n-   MK.  */\n-\n-/* Cover function for UNIQUE_SECTION.  */\n-\n-void\n-i386_pe_unique_section (decl, reloc)\n-     tree decl;\n-     int reloc;\n-{\n-  int len;\n-  const char *name;\n-  char *string,*prefix;\n-\n-  name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n-  name = (* targetm.strip_name_encoding) (name);\n-\n-  /* The object is put in, for example, section .text$foo.\n-     The linker will then ultimately place them in .text\n-     (everything from the $ on is stripped). Don't put\n-     read-only data in .rdata section to avoid a PE linker \n-     bug when .rdata$* grouped sections are used in code\n-     without a .rdata section.  */\n-  if (TREE_CODE (decl) == FUNCTION_DECL)\n-    prefix = \".text$\";\n-  else if (decl_readonly_section (decl, reloc))\n-    prefix = \".rdata$\";\n-  else\n-    prefix = \".data$\";\n-  len = strlen (name) + strlen (prefix);\n-  string = alloca (len + 1);\n-  sprintf (string, \"%s%s\", prefix, name);\n-\n-  DECL_SECTION_NAME (decl) = build_string (len, string);\n-}\n-\n-#endif /* 0 */"}, {"sha": "9153348f8cec6de77c7a514e8661b8d1294ac2fd", "filename": "gcc/config/i386/t-interix", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84512347f7d7a86b25bff3805bf4263d5531909f/gcc%2Fconfig%2Fi386%2Ft-interix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84512347f7d7a86b25bff3805bf4263d5531909f/gcc%2Fconfig%2Fi386%2Ft-interix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-interix?ref=84512347f7d7a86b25bff3805bf4263d5531909f", "patch": "@@ -1,6 +1,6 @@\n LIB1ASMSRC = i386/cygwin.asm\n LIB1ASMFUNCS = _chkstk\n \n-interix.o: $(srcdir)/config/i386/interix.c\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/interix.c\n+winnt.o: $(srcdir)/config/i386/winnt.c\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/winnt.c\n "}]}