{"sha": "eda600e865cff603d9398c48df114693da913458", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRhNjAwZTg2NWNmZjYwM2Q5Mzk4YzQ4ZGYxMTQ2OTNkYTkxMzQ1OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-07-12T02:20:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-07-12T02:20:51Z"}, "message": "Makefile.in (VERSION): Bump to 2.9.0.\n\n\t* Makefile.in (VERSION): Bump to 2.9.0.\n\t* std/bastring.cc (find_last_of): Fix.\n\t(find_last_not_of): Likewise.\n\nFrom-SVN: r21072", "tree": {"sha": "74183aaf8ba44536d7fb14d2c91355177c06cb0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74183aaf8ba44536d7fb14d2c91355177c06cb0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eda600e865cff603d9398c48df114693da913458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda600e865cff603d9398c48df114693da913458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eda600e865cff603d9398c48df114693da913458", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda600e865cff603d9398c48df114693da913458/comments", "author": null, "committer": null, "parents": [{"sha": "b0e7d996da41229d59782e2fa0d7d4dfbcee610b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0e7d996da41229d59782e2fa0d7d4dfbcee610b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0e7d996da41229d59782e2fa0d7d4dfbcee610b"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "c4ccec7d9a0ce3e21b330b8f5f03184de437d55d", "filename": "libstdc++/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda600e865cff603d9398c48df114693da913458/libstdc%2B%2B%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda600e865cff603d9398c48df114693da913458/libstdc%2B%2B%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FChangeLog?ref=eda600e865cff603d9398c48df114693da913458", "patch": "@@ -1,3 +1,12 @@\n+1998-07-12  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* Makefile.in (VERSION): Bump to 2.9.0.\n+\n+1998-07-12  Lars Albertsson <lalle@sics.se>\n+\n+\t* std/bastring.cc (find_last_of): Fix.\n+\t(find_last_not_of): Likewise.\n+\n 1998-07-06  Manfred Hollstein  <manfred@s-direktnet.de>\n \n \t* configure.in (INSTALLDIR): Make sed pattern failsafe."}, {"sha": "77e2ec931b268e81eedeaa9dbbb57aafc4533ca2", "filename": "libstdc++/Makefile.in", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda600e865cff603d9398c48df114693da913458/libstdc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda600e865cff603d9398c48df114693da913458/libstdc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FMakefile.in?ref=eda600e865cff603d9398c48df114693da913458", "patch": "@@ -14,7 +14,7 @@\n # along with this library; see the file COPYING.  If not, write to the Free\n # Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n \n-VERSION = 2.8.0\n+VERSION = 2.9.0\n \n OBJS  = cstringi.o stdexcepti.o cstdlibi.o cmathi.o stlinst.o\n SUBLIBS = $(STAMP)-string $(STAMP)-complx\n@@ -55,10 +55,6 @@ INSTALLDIR = $(libdir)\n MOSTLYCLEAN_JUNK = *stmp-* tlib*.a *.s *.ii stdlist piclist\n CLEAN_JUNK = $(LIBS)\n \n-# Remove these for public releases.\n-CXXFLAGS = -g -O -Wpointer-arith -Wnested-externs -Woverloaded-virtual -Wbad-function-cast -Winline -Wwrite-strings -Weffc++\n-CFLAGS = -g -O -Wpointer-arith -Wnested-externs\n-\n .PHONY: libs\n libs: $(LIBS)\n \n@@ -305,19 +301,22 @@ install:\n .PHONY: force\n force:\n \n+# Remove these for public releases.\n+MYCXXFLAGS = -g -O2 -Wpointer-arith -Wnested-externs -Woverloaded-virtual -Wbad-function-cast -Winline -Wwrite-strings\n+MYCFLAGS = -g -O2 -Wpointer-arith -Wnested-externs\n+\n .PHONY: stuff\n stuff:\n-\t$(MAKE) clean\n-\t$(MAKE) -C ../libio c++clean\n-\t-$(MAKE) $(MAKEFLAGS) check\n-\t-$(MAKE) -C ../libio check\n-\t-$(MAKE) -C ../../gcc check-g++\n+\t$(MAKE) stuff1\n+\t$(MAKE) stuff2\n \n stuff1:\n \t$(MAKE) clean\n \t$(MAKE) -C ../libio c++clean\n+\ttouch ../../gcc/libgcc2.ready\n \n stuff2:\n-\t-$(MAKE) check\n+\t-$(MAKE) -C ../../gcc/ libgcc.a\n+\t-$(MAKE) check CXXFLAGS=\"$(MYCXXFLAGS)\" CFLAGS=\"$(MYCFLAGS)\"\n \t-$(MAKE) -C ../libio check\n \t-$(MAKE) -C ../../gcc check-g++"}, {"sha": "b5f7a0dbfef64614d40583d094b34512a713b5cb", "filename": "libstdc++/std/bastring.cc", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda600e865cff603d9398c48df114693da913458/libstdc%2B%2B%2Fstd%2Fbastring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda600e865cff603d9398c48df114693da913458/libstdc%2B%2B%2Fstd%2Fbastring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fbastring.cc?ref=eda600e865cff603d9398c48df114693da913458", "patch": "@@ -325,10 +325,12 @@ basic_string <charT, traits, Allocator>::size_type\n basic_string <charT, traits, Allocator>::\n find_last_of (const charT* s, size_type pos, size_type n) const\n {\n+  if (length() == 0)\n+    return npos;\n   size_t xpos = length () - 1;\n   if (xpos > pos)\n     xpos = pos;\n-  for (; xpos; --xpos)\n+  for (++xpos; xpos-- > 0;)\n     if (_find (s, data () [xpos], 0, n) != npos)\n       return xpos;\n   return npos;\n@@ -363,10 +365,12 @@ basic_string <charT, traits, Allocator>::size_type\n basic_string <charT, traits, Allocator>::\n find_last_not_of (const charT* s, size_type pos, size_type n) const\n {\n+  if (length() == 0)\n+    return npos;\n   size_t xpos = length () - 1;\n   if (xpos > pos)\n     xpos = pos;\n-  for (; xpos; --xpos)\n+  for (++xpos; xpos-- > 0;)\n     if (_find (s, data () [xpos], 0, n) == npos)\n       return xpos;\n   return npos;\n@@ -377,10 +381,12 @@ basic_string <charT, traits, Allocator>::size_type\n basic_string <charT, traits, Allocator>::\n find_last_not_of (charT c, size_type pos) const\n {\n+  if (length() == 0)\n+    return npos;\n   size_t xpos = length () - 1;\n   if (xpos > pos)\n     xpos = pos;\n-  for (; xpos; --xpos)\n+  for (++xpos; xpos-- > 0;)\n     if (traits::ne (data () [xpos], c))\n       return xpos;\n   return npos;"}]}