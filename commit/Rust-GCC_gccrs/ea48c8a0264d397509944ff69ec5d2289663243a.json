{"sha": "ea48c8a0264d397509944ff69ec5d2289663243a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE0OGM4YTAyNjRkMzk3NTA5OTQ0ZmY2OWVjNWQyMjg5NjYzMjQzYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-06T04:24:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-06T04:24:18Z"}, "message": "re PR c++/54122 (segfault comparing enum class in lambda inside constructor of a templated class)\n\n\tPR c++/54122\n\t* tree.c (lvalue_kind) [INDIRECT_REF]: Don't check for\n\tMETHOD_TYPE.\n\nFrom-SVN: r195781", "tree": {"sha": "f98d684ed96f2d3bd9320c4113d81afec7fff116", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f98d684ed96f2d3bd9320c4113d81afec7fff116"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea48c8a0264d397509944ff69ec5d2289663243a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea48c8a0264d397509944ff69ec5d2289663243a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea48c8a0264d397509944ff69ec5d2289663243a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea48c8a0264d397509944ff69ec5d2289663243a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a283c407619b032551995bec2a0732ea094a834c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a283c407619b032551995bec2a0732ea094a834c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a283c407619b032551995bec2a0732ea094a834c"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "a5f944bc08db860caef4db42677ef7f0dbcb69d6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea48c8a0264d397509944ff69ec5d2289663243a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea48c8a0264d397509944ff69ec5d2289663243a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ea48c8a0264d397509944ff69ec5d2289663243a", "patch": "@@ -1,5 +1,9 @@\n 2013-02-05  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/54122\n+\t* tree.c (lvalue_kind) [INDIRECT_REF]: Don't check for\n+\tMETHOD_TYPE.\n+\n \tPR c++/56177\n \t* decl.c (start_preparsed_function): Update restype if we change\n \tdecl1."}, {"sha": "18d9a98effda9acc1ce969dd29b3763dbcb8f9f8", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea48c8a0264d397509944ff69ec5d2289663243a/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea48c8a0264d397509944ff69ec5d2289663243a/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=ea48c8a0264d397509944ff69ec5d2289663243a", "patch": "@@ -143,9 +143,7 @@ lvalue_kind (const_tree ref)\n     case ARRAY_REF:\n     case PARM_DECL:\n     case RESULT_DECL:\n-      if (TREE_CODE (TREE_TYPE (ref)) != METHOD_TYPE)\n-\treturn clk_ordinary;\n-      break;\n+      return clk_ordinary;\n \n       /* A scope ref in a template, left as SCOPE_REF to support later\n \t access checking.  */"}, {"sha": "6e25c331b45e6727e615e6b5547331232874dd40", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this7.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea48c8a0264d397509944ff69ec5d2289663243a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea48c8a0264d397509944ff69ec5d2289663243a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this7.C?ref=ea48c8a0264d397509944ff69ec5d2289663243a", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/54122\n+// { dg-options -std=c++11 }\n+\n+enum E { F };\n+\n+template <typename A>\n+struct C\n+{\n+  E e;\n+  void f () { auto l = [&](void)->void { if (e == F) return; }; }\n+};"}]}