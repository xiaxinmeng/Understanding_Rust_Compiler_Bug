{"sha": "b2735d9a75162d5e0585ea5f615a8fc5bc544841", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI3MzVkOWE3NTE2MmQ1ZTA1ODVlYTVmNjE1YThmYzViYzU0NDg0MQ==", "commit": {"author": {"name": "Michael Hayes", "email": "mhayes@redhat.com", "date": "2001-01-01T00:53:38Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2001-01-01T00:53:38Z"}, "message": "loop.c (loop_ivs_free): New function.\n\n\t* loop.c (loop_ivs_free): New function.\n\t(strength_reduce): Break out from...\n\nFrom-SVN: r38583", "tree": {"sha": "e1c25afaf680978b7f613fd8fc735302e643440d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1c25afaf680978b7f613fd8fc735302e643440d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2735d9a75162d5e0585ea5f615a8fc5bc544841", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2735d9a75162d5e0585ea5f615a8fc5bc544841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2735d9a75162d5e0585ea5f615a8fc5bc544841", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2735d9a75162d5e0585ea5f615a8fc5bc544841/comments", "author": null, "committer": null, "parents": [{"sha": "14be28e5f43fa2710e15441ff8b4e54b64295303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14be28e5f43fa2710e15441ff8b4e54b64295303", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14be28e5f43fa2710e15441ff8b4e54b64295303"}], "stats": {"total": 69, "additions": 43, "deletions": 26}, "files": [{"sha": "8207a7bf908c04e52ae68b85bfb8b03dcebb24ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2735d9a75162d5e0585ea5f615a8fc5bc544841/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2735d9a75162d5e0585ea5f615a8fc5bc544841/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2735d9a75162d5e0585ea5f615a8fc5bc544841", "patch": "@@ -1,5 +1,10 @@\n 2001-01-01  Michael Hayes  <mhayes@redhat.com>\n \n+\t* loop.c (loop_ivs_free): New function.\n+\t(strength_reduce): Break out from...\n+\n+2001-01-01  Michael Hayes  <mhayes@redhat.com>\n+\t\n \t* loop.h (struct iv): New.\n \t(REG_IV_TYPE, REG_IV_CLASS, REG_INFO): Modify to use 'struct iv'.\n \t(struct loop_ivs): Replace 'reg_iv_type', 'reg_iv_info',"}, {"sha": "d6c24037f4a5c81b31c6d4e0ce4a685f8cbf50c2", "filename": "gcc/loop.c", "status": "modified", "additions": 38, "deletions": 26, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2735d9a75162d5e0585ea5f615a8fc5bc544841/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2735d9a75162d5e0585ea5f615a8fc5bc544841/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=b2735d9a75162d5e0585ea5f615a8fc5bc544841", "patch": "@@ -194,6 +194,7 @@ static void loop_givs_dead_check PARAMS((struct loop *, struct iv_class *));\n static void loop_givs_reduce PARAMS((struct loop *, struct iv_class *));\n static void loop_givs_rescan PARAMS((struct loop *, struct iv_class *,\n \t\t\t\t     rtx *, rtx));\n+static void loop_ivs_free PARAMS((struct loop *));\n static void strength_reduce PARAMS ((struct loop *, int, int));\n static void find_single_use_in_loop PARAMS ((rtx, rtx, varray_type));\n static int valid_initial_value_p PARAMS ((rtx, rtx, int, rtx));\n@@ -4250,6 +4251,40 @@ loop_giv_reduce_benefit (loop, bl, v, test_reg)\n }\n \n \n+/* Free IV structures for LOOP.  */\n+\n+static void\n+loop_ivs_free (loop)\n+     struct loop *loop;\n+{\n+  struct loop_ivs *ivs = LOOP_IVS (loop);\n+  struct iv_class *iv = ivs->list;\n+  \n+  free (ivs->regs);\n+\n+  while (iv)\n+    {\n+      struct iv_class *next = iv->next;\n+      struct induction *induction;\n+      struct induction *next_induction;\n+      \n+      for (induction = iv->biv; induction; induction = next_induction)\n+\t{\n+\t  next_induction = induction->next_iv;\n+\t  free (induction);\n+\t}\n+      for (induction = iv->giv; induction; induction = next_induction)\n+\t{\n+\t  next_induction = induction->next_iv;\n+\t  free (induction);\n+\t}\n+      \n+      free (iv);\n+      iv = next;\n+    }\n+}\n+\n+\n /* Perform strength reduction and induction variable elimination.\n \n    Pseudo registers created during this function will be beyond the\n@@ -4312,7 +4347,8 @@ strength_reduce (loop, insn_count, flags)\n       if (flags & LOOP_UNROLL)\n \tunroll_loop (loop, insn_count, end_insert_before, 0);\n \n-      goto egress;\n+      loop_ivs_free (loop);\n+      return;\n     }\n \n   /* Determine how BIVS are initialised by looking through pre-header\n@@ -4571,31 +4607,7 @@ strength_reduce (loop, insn_count, flags)\n   if (loop_dump_stream)\n     fprintf (loop_dump_stream, \"\\n\");\n \n-egress:\n-  free (ivs->regs);\n-  {\n-    struct iv_class *iv = ivs->list;\n-\n-    while (iv) {\n-      struct iv_class *next = iv->next;\n-      struct induction *induction;\n-      struct induction *next_induction;\n-\n-      for (induction = iv->biv; induction; induction = next_induction)\n-\t{\n-\t  next_induction = induction->next_iv;\n-\t  free (induction);\n-\t}\n-      for (induction = iv->giv; induction; induction = next_induction)\n-\t{\n-\t  next_induction = induction->next_iv;\n-\t  free (induction);\n-\t}\n-\n-      free (iv);\n-      iv = next;\n-    }\n-  }\n+  loop_ivs_free (loop);\n   if (reg_map)\n     free (reg_map);\n }"}]}