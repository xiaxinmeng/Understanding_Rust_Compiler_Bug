{"sha": "1aedb3920a45bfe75db4514502b4e7f83e108f63", "node_id": "C_kwDOANBUbNoAKDFhZWRiMzkyMGE0NWJmZTc1ZGI0NTE0NTAyYjRlN2Y4M2UxMDhmNjM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-22T16:06:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-22T16:07:19Z"}, "message": "openacc: Fix up C++ #pragma acc routine handling [PR101731]\n\nThe following testcase ICEs because two function declarations are nested in\neach other and the acc routine handling code isn't prepared to put the\npragma on both.\n\nThe fix is similar to what #pragma omp declare {simd,variant} does,\nin particular set the fndecl_seen flag already in cp_parser_late_parsing*\nwhen we encounter it rather than only after we finalize it.\n\nIn cp_finalize_oacc_routine I had to move the fndecl_seen diagnostics to\nnon-FUNCTION_DECL block, because for FUNCTION_DECLs the flag is already\nknown to be set from cp_parser_late_parsing_oacc_routine, but can't be\nremoved altogether, because that regresses quality of 2 goacc/routine-5.c\ndiagnostics - we drop \"a single \" from the\n'#pragma acc routine' not immediately followed by a single function declaration or definition\ndiagnostic say on\n #pragma acc routine\n int foo (), b;\nif we drop it altogether.\n\n2021-11-22  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/101731\n\t* parser.c (cp_parser_late_parsing_oacc_routine): Set\n\tparser->oacc_routine->fndecl_seen here, rather than ...\n\t(cp_finalize_oacc_routine): ... here.  Don't error if\n\tparser->oacc_routine->fndecl_seen is set for FUNCTION_DECLs.\n\n\t* c-c++-common/goacc/routine-6.c: New test.", "tree": {"sha": "3e5dbdf9f0dc634b635b539854d997c76f188563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e5dbdf9f0dc634b635b539854d997c76f188563"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1aedb3920a45bfe75db4514502b4e7f83e108f63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aedb3920a45bfe75db4514502b4e7f83e108f63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aedb3920a45bfe75db4514502b4e7f83e108f63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aedb3920a45bfe75db4514502b4e7f83e108f63/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7376862b6dba35a192e3a80e9858d38f9709438", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7376862b6dba35a192e3a80e9858d38f9709438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7376862b6dba35a192e3a80e9858d38f9709438"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "e2b5d6842fc4c18068dc5c27f8a2ab295124d852", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aedb3920a45bfe75db4514502b4e7f83e108f63/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aedb3920a45bfe75db4514502b4e7f83e108f63/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=1aedb3920a45bfe75db4514502b4e7f83e108f63", "patch": "@@ -46852,8 +46852,8 @@ cp_parser_late_parsing_oacc_routine (cp_parser *parser, tree attrs)\n      emission easier.  */\n   parser->oacc_routine->clauses = nreverse (parser->oacc_routine->clauses);\n   cp_parser_pop_lexer (parser);\n-  /* Later, cp_finalize_oacc_routine will process the clauses, and then set\n-     fndecl_seen.  */\n+  /* Later, cp_finalize_oacc_routine will process the clauses.  */\n+  parser->oacc_routine->fndecl_seen = true;\n \n   return attrs;\n }\n@@ -46871,16 +46871,17 @@ cp_finalize_oacc_routine (cp_parser *parser, tree fndecl, bool is_defn)\n \t  || fndecl == error_mark_node)\n \treturn;\n \n-      if (parser->oacc_routine->fndecl_seen)\n-\t{\n-\t  error_at (parser->oacc_routine->loc,\n-\t\t    \"%<#pragma acc routine%> not immediately followed by\"\n-\t\t    \" a single function declaration or definition\");\n-\t  parser->oacc_routine = NULL;\n-\t  return;\n-\t}\n       if (TREE_CODE (fndecl) != FUNCTION_DECL)\n \t{\n+\t  if (parser->oacc_routine->fndecl_seen)\n+\t    {\n+\t      error_at (parser->oacc_routine->loc,\n+\t\t\t\"%<#pragma acc routine%> not immediately followed by\"\n+\t\t\t\" a single function declaration or definition\");\n+\t      parser->oacc_routine = NULL;\n+\t      return;\n+\t    }\n+\n \t  cp_ensure_no_oacc_routine (parser);\n \t  return;\n \t}\n@@ -46921,11 +46922,6 @@ cp_finalize_oacc_routine (cp_parser *parser, tree fndecl, bool is_defn)\n \t\t\t parser->oacc_routine->clauses,\n \t\t\t DECL_ATTRIBUTES (fndecl));\n \t}\n-\n-      /* Don't unset parser->oacc_routine here: we may still need it to\n-\t diagnose wrong usage.  But, remember that we've used this \"#pragma acc\n-\t routine\".  */\n-      parser->oacc_routine->fndecl_seen = true;\n     }\n }\n "}, {"sha": "0a231a015a7d2070c06373038f678dfcf02d91aa", "filename": "gcc/testsuite/c-c++-common/goacc/routine-6.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aedb3920a45bfe75db4514502b4e7f83e108f63/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Froutine-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aedb3920a45bfe75db4514502b4e7f83e108f63/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Froutine-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Froutine-6.c?ref=1aedb3920a45bfe75db4514502b4e7f83e108f63", "patch": "@@ -0,0 +1,4 @@\n+/* PR c++/101731 */\n+\n+#pragma acc routine\t/* { dg-error \"not immediately followed by a single function declaration or definition\" \"\" { target c++ } } */\n+int foo (int bar ());"}]}