{"sha": "d0dcc580cfd3c8a166c3db09cb46eafa32f32ef4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBkY2M1ODBjZmQzYzhhMTY2YzNkYjA5Y2I0NmVhZmEzMmYzMmVmNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-02T10:37:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-02T10:37:38Z"}, "message": "(make_compound_operation...\n\n(make_compound_operation, case ASHIFTRT): Add new code to\nhandle (ashiftrt (neg (ashift FOO C1) C2)) just like we currently\nhandle (ashiftrt (OP (ashiftrt FOO C1) C2) C2).\n\nFrom-SVN: r2028", "tree": {"sha": "02227b329f9a198b5a36f5610b618a248c15dca4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02227b329f9a198b5a36f5610b618a248c15dca4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0dcc580cfd3c8a166c3db09cb46eafa32f32ef4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0dcc580cfd3c8a166c3db09cb46eafa32f32ef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0dcc580cfd3c8a166c3db09cb46eafa32f32ef4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0dcc580cfd3c8a166c3db09cb46eafa32f32ef4/comments", "author": null, "committer": null, "parents": [{"sha": "11f6a29c9fc8f48bb917188c421f25e3a7f71199", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11f6a29c9fc8f48bb917188c421f25e3a7f71199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11f6a29c9fc8f48bb917188c421f25e3a7f71199"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "5d21de343617ae8cc52df736d3c4399810e7a5b3", "filename": "gcc/combine.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0dcc580cfd3c8a166c3db09cb46eafa32f32ef4/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0dcc580cfd3c8a166c3db09cb46eafa32f32ef4/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=d0dcc580cfd3c8a166c3db09cb46eafa32f32ef4", "patch": "@@ -4652,6 +4652,19 @@ make_compound_operation (x, in_code)\n \t\t\t\t code == LSHIFTRT, 0, in_code == COMPARE);\n \t}\n \n+      /* Similarly for (ashiftrt (neg (ashift FOO C1)) C2).  */\n+      if (GET_CODE (XEXP (x, 1)) == CONST_INT\n+\t  && GET_CODE (XEXP (x, 0)) == NEG\n+\t  && GET_CODE (XEXP (XEXP (x, 0), 0)) == ASHIFT\n+\t  && GET_CODE (XEXP (XEXP (XEXP (x, 0), 0), 1)) == CONST_INT\n+\t  && INTVAL (XEXP (x, 1)) >= INTVAL (XEXP (XEXP (XEXP (x, 0), 0), 1)))\n+\tnew = make_extraction (mode,\n+\t\t\t       gen_unary (GET_CODE (XEXP (x, 0)), mode,\n+\t\t\t\t\t  XEXP (XEXP (XEXP (x, 0), 0), 0)),\n+\t\t\t       (INTVAL (XEXP (x, 1))\n+\t\t\t\t- INTVAL (XEXP (XEXP (XEXP (x, 0), 0), 1))),\n+\t\t\t       NULL_RTX, mode_width - INTVAL (XEXP (x, 1)),\n+\t\t\t       code == LSHIFTRT, 0, in_code == COMPARE);\n       break;\n     }\n "}]}