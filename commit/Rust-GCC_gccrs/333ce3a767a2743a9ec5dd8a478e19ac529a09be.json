{"sha": "333ce3a767a2743a9ec5dd8a478e19ac529a09be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMzY2UzYTc2N2EyNzQzYTllYzVkZDhhNDc4ZTE5YWM1MjlhMDliZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-02-14T14:17:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-02-14T14:17:42Z"}, "message": "dg.exp: Exclude debug subdir, it has its own .exp.\n\n\t* g++.dg/dg.exp: Exclude debug subdir, it has its own .exp.\n\t* g++.dg/debug/debug.exp: New.\n\t* g++.dg/debug/trivial.C: New.\n\t* g++.dg/debug/debug1.C: Moved...\n\t* g++.dg/other/debug1.C: ...from here.\n\t* g++.dg/debug/debug2.C: Moved...\n\t* g++.dg/other/debug2.C: ...from here.\n\t* g++.dg/debug/debug3.C: Moved...\n\t* g++.dg/other/debug3.C: ...from here.\n\nFrom-SVN: r49766", "tree": {"sha": "6ab480d4b0c5fcd3935aa12298fdbf2c64e9c2c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ab480d4b0c5fcd3935aa12298fdbf2c64e9c2c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/333ce3a767a2743a9ec5dd8a478e19ac529a09be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333ce3a767a2743a9ec5dd8a478e19ac529a09be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/333ce3a767a2743a9ec5dd8a478e19ac529a09be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333ce3a767a2743a9ec5dd8a478e19ac529a09be/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "037f11ef749f34a04975739ad28c480edd4ad6fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/037f11ef749f34a04975739ad28c480edd4ad6fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/037f11ef749f34a04975739ad28c480edd4ad6fe"}], "stats": {"total": 104, "additions": 98, "deletions": 6}, "files": [{"sha": "2cf855f20601ae801a1c63ed1c4d3afcc31c81f4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=333ce3a767a2743a9ec5dd8a478e19ac529a09be", "patch": "@@ -1,5 +1,15 @@\n 2002-02-14  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* g++.dg/dg.exp: Exclude debug subdir, it has its own .exp.\n+\t* g++.dg/debug/debug.exp: New.\n+\t* g++.dg/debug/trivial.C: New.\n+\t* g++.dg/debug/debug1.C: Moved...\n+\t* g++.dg/other/debug1.C: ...from here.\n+\t* g++.dg/debug/debug2.C: Moved...\n+\t* g++.dg/other/debug2.C: ...from here.\n+\t* g++.dg/debug/debug3.C: Moved...\n+\t* g++.dg/other/debug3.C: ...from here.\n+\n \t* gcc.dg/noncompile/20020213-1.c: New test.\n \n 2002-02-13  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "662217951cb2cf743e2ed0273ca46722305cc226", "filename": "gcc/testsuite/g++.dg/debug/debug.exp", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug.exp?ref=333ce3a767a2743a9ec5dd8a478e19ac529a09be", "patch": "@@ -0,0 +1,78 @@\n+#   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n+\n+# G++ testsuite that uses the `dg.exp' driver.\n+\n+# Load support procs.\n+load_lib g++-dg.exp\n+\n+# This is the list of debugging options we'll try.  Some of them won't\n+# be supported, that's OK; they will be quickly eliminated.\n+# It's probably not a good idea to add more optimisation options.\n+\n+if ![info exists DEBUG_TORTURE_OPTIONS] {\n+    set DEBUG_TORTURE_OPTIONS \"\"\n+    foreach type {-gdwarf-2 -gstabs -gstabs+ -gxcoff -gxcoff+ -gcoff} {\n+\tset comp_output [g++_target_compile \\\n+\t\t\"$srcdir/$subdir/trivial.C\" \"trivial.S\" assembly \\\n+\t\t\"additional_flags=$type\"]\n+\tif { ! [string match \"*: unknown or unsupported -g option*\" \\\n+\t\t$comp_output] } {\n+\t    foreach level {1 \"\" 3} {\n+\t\tlappend DEBUG_TORTURE_OPTIONS [list \"${type}${level}\"]\n+\t\tforeach opt { -O2 -O3 } {\n+\t\t    lappend DEBUG_TORTURE_OPTIONS \\\n+\t\t\t    [list \"${type}${level}\" \"$opt\" ]\n+\t\t}\n+\t    }\n+\t}\n+    }\n+}\n+\n+verbose -log \"Using options $DEBUG_TORTURE_OPTIONS\"\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+\n+foreach test [lsort [glob -nocomplain $srcdir/$subdir/*.C]] {\n+    global runtests\n+\n+    # If we're only testing specific files and this isn't one of \n+    # them, skip it.\n+    if ![runtest_file_p $runtests $test] {\n+\tcontinue\n+    }\n+\n+    set nshort [file tail [file dirname $test]]/[file tail $test]\n+\n+    foreach flags $DEBUG_TORTURE_OPTIONS {\n+\tset doit 1\n+\t# if { [string match {*/debug-[126].c} \"$nshort\"] \\\n+\t#\t&& [string match \"*1\" [lindex \"$flags\" 0] ] } { \n+\t#    set doit 0\n+\t# }\n+\t\n+\tif { $doit } {\n+\t    verbose -log \"Testing $nshort, $flags\" 1\n+\t    dg-test $test $flags \"\"\n+\t}\n+    }\n+}\n+\n+# All done.\n+dg-finish"}, {"sha": "3efcbc98f4270c8e949ab64c0f70344409b998fc", "filename": "gcc/testsuite/g++.dg/debug/debug1.C", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug1.C?ref=333ce3a767a2743a9ec5dd8a478e19ac529a09be", "patch": "@@ -1,6 +1,5 @@\n // Test whether dwarf2 debug info works with named return value optimization\n-// { dg-do compile { target i?86-*-linux* } }\n-// { dg-options \"-O2 -gdwarf-2\" }\n+// { dg-do compile }\n \n struct S\n {", "previous_filename": "gcc/testsuite/g++.dg/other/debug1.C"}, {"sha": "e0164202d13e47a68571c805043c0323b6900f9d", "filename": "gcc/testsuite/g++.dg/debug/debug2.C", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug2.C?ref=333ce3a767a2743a9ec5dd8a478e19ac529a09be", "patch": "@@ -1,7 +1,6 @@\n /* Verify that sched re-inserts needed scopes properly.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -g\" } */\n-/* { dg-options \"-O2 -g -mcpu=ev5\" { target alpha*-*-* } } */\n+/* { dg-options \"-mcpu=ev5\" { target alpha*-*-* } } */\n \n template <class T>\n inline void foo()", "previous_filename": "gcc/testsuite/g++.dg/other/debug2.C"}, {"sha": "91ef35dc096dd57338b1350292a6da0ddfbf28ab", "filename": "gcc/testsuite/g++.dg/debug/debug3.C", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdebug3.C?ref=333ce3a767a2743a9ec5dd8a478e19ac529a09be", "patch": "@@ -2,7 +2,7 @@\n // This testcase caused ICE on IA-32, since DWARF-2 was unable\n // to emit location expression for parameter a of operator+.\n // { dg-do compile }\n-// { dg-options \"-O2 -g -fpic\" }\n+// { dg-options \"-fpic\" }\n \n struct A { char *s; };\n ", "previous_filename": "gcc/testsuite/g++.dg/other/debug3.C"}, {"sha": "5b125eca91f6b2417e91ba783545375029b5325f", "filename": "gcc/testsuite/g++.dg/debug/trivial.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Ftrivial.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Ftrivial.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Ftrivial.C?ref=333ce3a767a2743a9ec5dd8a478e19ac529a09be", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do run } */\n+\n+int main(void)\n+{\n+  return 0;\n+}"}, {"sha": "169d7225446a02b0daa65e35dd9e5dc7f1b52142", "filename": "gcc/testsuite/g++.dg/dg.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333ce3a767a2743a9ec5dd8a478e19ac529a09be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdg.exp?ref=333ce3a767a2743a9ec5dd8a478e19ac529a09be", "patch": "@@ -31,7 +31,7 @@ dg-init\n # Gather a list of all tests, excluding those in special/; those are handled\n # well, specially.\n set all [lsort [find $srcdir/$subdir *.C]]\n-set tests [prune $all $srcdir/$subdir/special/*]\n+set tests [prune [prune $all $srcdir/$subdir/special/*] $srcdir/$subdir/debug/*]\n \n # Main loop.\n dg-runtest $tests \"\" $DEFAULT_CXXFLAGS"}]}