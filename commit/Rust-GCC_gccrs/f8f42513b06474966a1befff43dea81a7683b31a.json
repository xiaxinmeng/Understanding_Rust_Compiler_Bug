{"sha": "f8f42513b06474966a1befff43dea81a7683b31a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhmNDI1MTNiMDY0NzQ5NjZhMWJlZmZmNDNkZWE4MWE3NjgzYjMxYQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2013-02-28T12:46:29Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2013-02-28T12:46:29Z"}, "message": "tree-sra.c (load_assign_lhs_subreplacements): Do not put replacements with no initialization to the RHS of debug statements.\n\n2013-02-28  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-sra.c (load_assign_lhs_subreplacements): Do not put replacements\n\twith no initialization to the RHS of debug statements.\n\nFrom-SVN: r196341", "tree": {"sha": "2f69d2f9db2659da8f12daae60081c7bd130c29f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f69d2f9db2659da8f12daae60081c7bd130c29f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8f42513b06474966a1befff43dea81a7683b31a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8f42513b06474966a1befff43dea81a7683b31a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8f42513b06474966a1befff43dea81a7683b31a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8f42513b06474966a1befff43dea81a7683b31a/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b48b3fc483125f0f6311cdedc874079574264359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48b3fc483125f0f6311cdedc874079574264359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b48b3fc483125f0f6311cdedc874079574264359"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "c7c9dd031481b7cf54bd976f3275d25e9d40b4ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8f42513b06474966a1befff43dea81a7683b31a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8f42513b06474966a1befff43dea81a7683b31a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8f42513b06474966a1befff43dea81a7683b31a", "patch": "@@ -1,3 +1,8 @@\n+2013-02-28  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree-sra.c (load_assign_lhs_subreplacements): Do not put replacements\n+\twith no initialization to the RHS of debug statements.\n+\n 2013-02-28  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/56294"}, {"sha": "67212c204c46b3cf81520e2c97d38177ed24d5df", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8f42513b06474966a1befff43dea81a7683b31a/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8f42513b06474966a1befff43dea81a7683b31a/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=f8f42513b06474966a1befff43dea81a7683b31a", "patch": "@@ -2870,7 +2870,12 @@ load_assign_lhs_subreplacements (struct access *lacc, struct access *top_racc,\n \t\t\t\t\t\t\t    lacc->size);\n \n \t      if (racc && racc->grp_to_be_replaced)\n-\t\tdrhs = get_access_replacement (racc);\n+\t\t{\n+\t\t  if (racc->grp_write)\n+\t\t    drhs = get_access_replacement (racc);\n+\t\t  else\n+\t\t    drhs = NULL;\n+\t\t}\n \t      else if (*refreshed == SRA_UDH_LEFT)\n \t\tdrhs = build_debug_ref_for_model (loc, lacc->base, lacc->offset,\n \t\t\t\t\t\t  lacc);"}]}