{"sha": "7ffe26fcf5c0ee0b4a6b3878859941fb534c9400", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZmZTI2ZmNmNWMwZWUwYjRhNmIzODc4ODU5OTQxZmI1MzRjOTQwMA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2018-06-11T09:17:29Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-06-11T09:17:29Z"}, "message": "[Ada] Wrong code in array aggregates of Ada coextensions\n\nThe compiler generates wrong code when an array aggregate with an others choice\nwhose expression has nested object allocations (ie. others => new R (new S)) is\nused to initialize an array of access to discriminated types whose discriminant\nis an access type.\n\n2018-06-11  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* sinfo.ads (Is_Dynamic_Coextension): Adding documentation.\n\t(Is_Static_Coextension): Adding documentation.\n\t* sinfo.adb (Is_Dynamic_Coextension): Extending the assertion.\n\t(Is_Static_Coextension): Extending the assertion.\n\t* sem_util.adb (Mark_Allocator): Clear Is_Static_Coextension when\n\tsetting flag Is_Dynamic_Coextension (and vice versa).\n\ngcc/testsuite/\n\n\t* gnat.dg/aggr23.adb, gnat.dg/aggr23_q.adb, gnat.dg/aggr23_tt.ads: New\n\ttestcase.\n\nFrom-SVN: r261406", "tree": {"sha": "3eb3dd9120792940d3acce64f62f039e73f7675a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3eb3dd9120792940d3acce64f62f039e73f7675a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "345bb755ae64b123f1cd5df9ed9b1be4f44c6f39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/345bb755ae64b123f1cd5df9ed9b1be4f44c6f39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/345bb755ae64b123f1cd5df9ed9b1be4f44c6f39"}], "stats": {"total": 55, "additions": 53, "deletions": 2}, "files": [{"sha": "1946e5480174668cfe249eb470d9da45cc9f10c2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7ffe26fcf5c0ee0b4a6b3878859941fb534c9400", "patch": "@@ -1,3 +1,12 @@\n+2018-06-11  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sinfo.ads (Is_Dynamic_Coextension): Adding documentation.\n+\t(Is_Static_Coextension): Adding documentation.\n+\t* sinfo.adb (Is_Dynamic_Coextension): Extending the assertion.\n+\t(Is_Static_Coextension): Extending the assertion.\n+\t* sem_util.adb (Mark_Allocator): Clear Is_Static_Coextension when\n+\tsetting flag Is_Dynamic_Coextension (and vice versa).\n+\n 2018-06-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_unst.adb (Search_Subprograms): Handle explicitly stubs at the top"}, {"sha": "69934f018ca735c0f235a1cccb5a1b1c27d515f4", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=7ffe26fcf5c0ee0b4a6b3878859941fb534c9400", "patch": "@@ -18472,6 +18472,7 @@ package body Sem_Util is\n       begin\n          if Nkind (N) = N_Allocator then\n             if Is_Dynamic then\n+               Set_Is_Static_Coextension (N, False);\n                Set_Is_Dynamic_Coextension (N);\n \n             --  If the allocator expression is potentially dynamic, it may\n@@ -18482,8 +18483,10 @@ package body Sem_Util is\n             elsif Nkind (Expression (N)) = N_Qualified_Expression\n               and then Nkind (Expression (Expression (N))) = N_Op_Concat\n             then\n+               Set_Is_Static_Coextension (N, False);\n                Set_Is_Dynamic_Coextension (N);\n             else\n+               Set_Is_Dynamic_Coextension (N, False);\n                Set_Is_Static_Coextension (N);\n             end if;\n          end if;"}, {"sha": "45f2867cce7eb3d46b4a7de419adc6c5e94fd9ca", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=7ffe26fcf5c0ee0b4a6b3878859941fb534c9400", "patch": "@@ -5350,6 +5350,8 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Allocator);\n+      pragma Assert (not Val\n+        or else not Is_Static_Coextension (N));\n       Set_Flag18 (N, Val);\n    end Set_Is_Dynamic_Coextension;\n \n@@ -5613,6 +5615,8 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Allocator);\n+      pragma Assert (not Val\n+        or else not Is_Dynamic_Coextension (N));\n       Set_Flag14 (N, Val);\n    end Set_Is_Static_Coextension;\n "}, {"sha": "c6e04e7920a4c91ba4466085af104308cbf7e63f", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=7ffe26fcf5c0ee0b4a6b3878859941fb534c9400", "patch": "@@ -1738,7 +1738,8 @@ package Sinfo is\n    --    Present in allocator nodes, to indicate that this is an allocator\n    --    for an access discriminant of a dynamically allocated object. The\n    --    coextension must be deallocated and finalized at the same time as\n-   --    the enclosing object.\n+   --    the enclosing object. The partner flag Is_Static_Coextension must\n+   --    be cleared before setting this flag to True.\n \n    --  Is_Effective_Use_Clause (Flag1-Sem)\n    --    Present in both N_Use_Type_Clause and N_Use_Package_Clause to indicate\n@@ -1949,7 +1950,9 @@ package Sinfo is\n \n    --  Is_Static_Coextension (Flag14-Sem)\n    --    Present in N_Allocator nodes. Set if the allocator is a coextension\n-   --    of an object allocated on the stack rather than the heap.\n+   --    of an object allocated on the stack rather than the heap. The partner\n+   --    flag Is_Dynamic_Coextension must be cleared before setting this flag\n+   --    to True.\n \n    --  Is_Static_Expression (Flag6-Sem)\n    --    Indicates that an expression is a static expression according to the"}, {"sha": "0b16f0ccac4b9a302be6da942c0522acb36473b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ffe26fcf5c0ee0b4a6b3878859941fb534c9400", "patch": "@@ -1,3 +1,8 @@\n+2018-06-11  Javier Miranda  <miranda@adacore.com>\n+\n+\t* gnat.dg/aggr23.adb, gnat.dg/aggr23_q.adb, gnat.dg/aggr23_tt.ads: New\n+\ttestcase.\n+\n 2018-06-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/inline_always1.adb: New testcase."}, {"sha": "a75396f7b150e609c126569c6ba4779a67e14462", "filename": "gcc/testsuite/gnat.dg/aggr23.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Ftestsuite%2Fgnat.dg%2Faggr23.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Ftestsuite%2Fgnat.dg%2Faggr23.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr23.adb?ref=7ffe26fcf5c0ee0b4a6b3878859941fb534c9400", "patch": "@@ -0,0 +1,9 @@\n+--  { dg-options \"-gnatws\" }\n+--  { dg-do run }\n+\n+with Aggr23_Q;\n+\n+procedure Aggr23 is\n+begin\n+   Aggr23_Q (2);\n+end;"}, {"sha": "5ab8883225a89645f7b0d9f9d070ae80c1478c5d", "filename": "gcc/testsuite/gnat.dg/aggr23_q.adb", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Ftestsuite%2Fgnat.dg%2Faggr23_q.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Ftestsuite%2Fgnat.dg%2Faggr23_q.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr23_q.adb?ref=7ffe26fcf5c0ee0b4a6b3878859941fb534c9400", "patch": "@@ -0,0 +1,14 @@\n+--  { dg-options \"-gnatws\" }\n+\n+with Ada.Text_IO; use Ada.Text_IO;\n+\n+with Aggr23_TT; use Aggr23_TT;\n+\n+procedure Aggr23_Q (Count : Natural) is\n+   Ts : array (1 .. Count) of TA\n+         := (others => new T (new Integer));  --  Test\n+begin\n+   if Ts (1).D = Ts (2).D then\n+      Put (\"ERROR\");\n+   end if;\n+end;"}, {"sha": "42ee8536b69bd98188facd1509d3d39ccf165025", "filename": "gcc/testsuite/gnat.dg/aggr23_tt.ads", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Ftestsuite%2Fgnat.dg%2Faggr23_tt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ffe26fcf5c0ee0b4a6b3878859941fb534c9400/gcc%2Ftestsuite%2Fgnat.dg%2Faggr23_tt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr23_tt.ads?ref=7ffe26fcf5c0ee0b4a6b3878859941fb534c9400", "patch": "@@ -0,0 +1,4 @@\n+package Aggr23_TT is\n+   type T (D : not null access Integer) is null record;\n+   type TA is access T;\n+end;"}]}