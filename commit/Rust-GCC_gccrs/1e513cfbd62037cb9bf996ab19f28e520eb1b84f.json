{"sha": "1e513cfbd62037cb9bf996ab19f28e520eb1b84f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU1MTNjZmJkNjIwMzdjYjliZjk5NmFiMTlmMjhlNTIwZWIxYjg0Zg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-09-24T19:56:27Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-09-24T19:56:27Z"}, "message": "* stupid.c: (stupid_find_reg): never use HARD_FRAME_POINTER_REGNUM.\n\nFrom-SVN: r5469", "tree": {"sha": "c2ced3688c542211bf5f8b24eb839d2406887196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2ced3688c542211bf5f8b24eb839d2406887196"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e513cfbd62037cb9bf996ab19f28e520eb1b84f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e513cfbd62037cb9bf996ab19f28e520eb1b84f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e513cfbd62037cb9bf996ab19f28e520eb1b84f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e513cfbd62037cb9bf996ab19f28e520eb1b84f/comments", "author": null, "committer": null, "parents": [{"sha": "a35ad1689150363a44dc08da824b57a6de14e957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35ad1689150363a44dc08da824b57a6de14e957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a35ad1689150363a44dc08da824b57a6de14e957"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "f9179f5009880afa8e5a264b6638b52f41507404", "filename": "gcc/stupid.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e513cfbd62037cb9bf996ab19f28e520eb1b84f/gcc%2Fstupid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e513cfbd62037cb9bf996ab19f28e520eb1b84f/gcc%2Fstupid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstupid.c?ref=1e513cfbd62037cb9bf996ab19f28e520eb1b84f", "patch": "@@ -360,6 +360,9 @@ stupid_find_reg (call_preserved, class, mode,\n #ifdef ELIMINABLE_REGS\n   for (i = 0; i < sizeof eliminables / sizeof eliminables[0]; i++)\n     SET_HARD_REG_BIT (used, eliminables[i].from);\n+#if HARD_FRAME_POINTER_REGNUM != FRAME_POINTER_REGNUM\n+  SET_HARD_REG_BIT (used, HARD_FRAME_POINTER_REGNUM);\n+#endif\n #else\n   SET_HARD_REG_BIT (used, FRAME_POINTER_REGNUM);\n #endif"}]}