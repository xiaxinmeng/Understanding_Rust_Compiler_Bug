{"sha": "dbb29a2a37900549c9d90f4d33bf7e00641655c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJiMjlhMmEzNzkwMDU0OWM5ZDkwZjRkMzNiZjdlMDA2NDE2NTVjNg==", "commit": {"author": {"name": "Andrew Bennett", "email": "andrew.bennett@imgtec.com", "date": "2016-11-18T12:34:19Z"}, "committer": {"name": "Matthew Fortune", "email": "mpf@gcc.gnu.org", "date": "2016-11-18T12:34:19Z"}, "message": "MIPS: Check for sysroot support when upgrading/downgrading test options\n\ngcc/testsuite/\n\n\t* gcc.target/mips/inline-memcpy-1.c (dg-options): Add\n\t(REQUIRES_STDLIB).\n\t* gcc.target/mips/inline-memcpy-2.c: Ditto.\n\t* gcc.target/mips/inline-memcpy-3.c: Ditto.\n\t* gcc.target/mips/inline-memcpy-4.c: Ditto.\n\t* gcc.target/mips/inline-memcpy-5.c: Ditto.\n\t* gcc.target/mips/loongson-shift-count-truncated-1.c: Ditto.\n\t* gcc.target/mips/loongson-simd.c: Ditto.\n\t* gcc.target/mips/memcpy-1.c: Ditto.\n\t* gcc.target/mips/mips-3d-1.c: Ditto.\n\t* gcc.target/mips/mips-3d-2.c: Ditto.\n\t* gcc.target/mips/mips-3d-3.c: Ditto.\n\t* gcc.target/mips/mips-3d-4.c: Ditto.\n\t* gcc.target/mips/mips-3d-5.c: Ditto.\n\t* gcc.target/mips/mips-3d-6.c: Ditto.\n\t* gcc.target/mips/mips-3d-7.c: Ditto.\n\t* gcc.target/mips/mips-3d-8.c: Ditto.\n\t* gcc.target/mips/mips-3d-9.c: Ditto.\n\t* gcc.target/mips/mips-ps-1.c: Ditto.\n\t* gcc.target/mips/mips-ps-2.c: Ditto.\n\t* gcc.target/mips/mips-ps-3.c: Ditto.\n\t* gcc.target/mips/mips-ps-4.c: Ditto.\n\t* gcc.target/mips/mips-ps-6.c: Ditto.\n\t* gcc.target/mips/mips16-attributes.c: Ditto.\n\t* gcc.target/mips/mips32-dsp-run.c: Ditto.\n\t* gcc.target/mips/mips32-dsp.c: Ditto.\n\t* gcc.target/mips/save-restore-1.c: Ditto.\n\t* gcc.target/mips/mips.exp (mips_option_groups): Add stdlib.\n\t(mips_preprocess): Add ignore_output argument that when set\n\twill not return the pre-processed output.\n\t(mips_arch_info): Update arguments for the call to\n\tmips_preprocess.\n\t(mips-dg-init): Ditto.\n\t(mips-dg-options): Check if a test having test option\n\t(REQUIRES_STDLIB) has the required sysroot support for\n\tthe current test options.\n\nCo-Authored-By: Toma Tabacu <toma.tabacu@imgtec.com>\n\nFrom-SVN: r242587", "tree": {"sha": "a66c3bb29a1476ab1d34dee908c744f2fc2dd999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a66c3bb29a1476ab1d34dee908c744f2fc2dd999"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbb29a2a37900549c9d90f4d33bf7e00641655c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb29a2a37900549c9d90f4d33bf7e00641655c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb29a2a37900549c9d90f4d33bf7e00641655c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb29a2a37900549c9d90f4d33bf7e00641655c6/comments", "author": {"login": "andrewb-IMG", "id": 12913579, "node_id": "MDQ6VXNlcjEyOTEzNTc5", "avatar_url": "https://avatars.githubusercontent.com/u/12913579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewb-IMG", "html_url": "https://github.com/andrewb-IMG", "followers_url": "https://api.github.com/users/andrewb-IMG/followers", "following_url": "https://api.github.com/users/andrewb-IMG/following{/other_user}", "gists_url": "https://api.github.com/users/andrewb-IMG/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewb-IMG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewb-IMG/subscriptions", "organizations_url": "https://api.github.com/users/andrewb-IMG/orgs", "repos_url": "https://api.github.com/users/andrewb-IMG/repos", "events_url": "https://api.github.com/users/andrewb-IMG/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewb-IMG/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f079167a3064f11a7d8c17ef78389559435bad9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f079167a3064f11a7d8c17ef78389559435bad9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f079167a3064f11a7d8c17ef78389559435bad9d"}], "stats": {"total": 128, "additions": 98, "deletions": 30}, "files": [{"sha": "58dba0ca4deb3a0bba10aff9f8bec5b9c5a473fd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,3 +1,43 @@\n+2016-11-18  Andrew Bennett  <andrew.bennett@imgtec.com>\n+\t    Toma Tabacu  <toma.tabacu@imgtec.com>\n+\n+\t* gcc.target/mips/inline-memcpy-1.c (dg-options): Add\n+\t(REQUIRES_STDLIB).\n+\t* gcc.target/mips/inline-memcpy-2.c: Ditto.\n+\t* gcc.target/mips/inline-memcpy-3.c: Ditto.\n+\t* gcc.target/mips/inline-memcpy-4.c: Ditto.\n+\t* gcc.target/mips/inline-memcpy-5.c: Ditto.\n+\t* gcc.target/mips/loongson-shift-count-truncated-1.c: Ditto.\n+\t* gcc.target/mips/loongson-simd.c: Ditto.\n+\t* gcc.target/mips/memcpy-1.c: Ditto.\n+\t* gcc.target/mips/mips-3d-1.c: Ditto.\n+\t* gcc.target/mips/mips-3d-2.c: Ditto.\n+\t* gcc.target/mips/mips-3d-3.c: Ditto.\n+\t* gcc.target/mips/mips-3d-4.c: Ditto.\n+\t* gcc.target/mips/mips-3d-5.c: Ditto.\n+\t* gcc.target/mips/mips-3d-6.c: Ditto.\n+\t* gcc.target/mips/mips-3d-7.c: Ditto.\n+\t* gcc.target/mips/mips-3d-8.c: Ditto.\n+\t* gcc.target/mips/mips-3d-9.c: Ditto.\n+\t* gcc.target/mips/mips-ps-1.c: Ditto.\n+\t* gcc.target/mips/mips-ps-2.c: Ditto.\n+\t* gcc.target/mips/mips-ps-3.c: Ditto.\n+\t* gcc.target/mips/mips-ps-4.c: Ditto.\n+\t* gcc.target/mips/mips-ps-6.c: Ditto.\n+\t* gcc.target/mips/mips16-attributes.c: Ditto.\n+\t* gcc.target/mips/mips32-dsp-run.c: Ditto.\n+\t* gcc.target/mips/mips32-dsp.c: Ditto.\n+\t* gcc.target/mips/save-restore-1.c: Ditto.\n+\t* gcc.target/mips/mips.exp (mips_option_groups): Add stdlib.\n+\t(mips_preprocess): Add ignore_output argument that when set\n+\twill not return the pre-processed output.\n+\t(mips_arch_info): Update arguments for the call to\n+\tmips_preprocess.\n+\t(mips-dg-init): Ditto.\n+\t(mips-dg-options): Check if a test having test option\n+\t(REQUIRES_STDLIB) has the required sysroot support for\n+\tthe current test options.\n+\n 2016-11-17  Jeff Law  <law@redhat.com>\n \n \tPR middle-end/38219"}, {"sha": "8b1ad80520df75eae8ea4892c96ee85271821767", "filename": "gcc/testsuite/gcc.target/mips/inline-memcpy-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-1.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-fno-common isa_rev>=6\" } */\n+/* { dg-options \"-fno-common isa_rev>=6 (REQUIRES_STDLIB)\" } */\n /* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" \"-Os\" } { \"\" } } */\n /* { dg-final { scan-assembler-not \"\\tmemcpy\" } } */\n "}, {"sha": "e9feb93409b52f8b28786be45f3a85d02043743c", "filename": "gcc/testsuite/gcc.target/mips/inline-memcpy-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-2.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-fno-common isa_rev>=6\" } */\n+/* { dg-options \"-fno-common isa_rev>=6 (REQUIRES_STDLIB)\" } */\n /* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" \"-Os\"} { \"\" } } */\n /* { dg-final { scan-assembler-not \"\\tmemcpy\" } } */\n /* { dg-final { scan-assembler-times \"\\tsh\\t\" 16 } } */"}, {"sha": "3bdb28b514e4fc5b6ec47fef37bff8d9f15ac028", "filename": "gcc/testsuite/gcc.target/mips/inline-memcpy-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-3.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-fno-common isa_rev<=5\" } */\n+/* { dg-options \"-fno-common isa_rev<=5 (REQUIRES_STDLIB)\" } */\n /* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" \"-Os\"} { \"\" } } */\n /* { dg-final { scan-assembler-not \"\\tmemcpy\" } } */\n /* { dg-final { scan-assembler-times \"swl\" 8 } } */"}, {"sha": "d64eb5d48c050c544ac0e83e3dd0e3bdd79a5357", "filename": "gcc/testsuite/gcc.target/mips/inline-memcpy-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-4.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-fno-common isa_rev<=5 -mabi=64\" } */\n+/* { dg-options \"-fno-common isa_rev<=5 -mabi=64 (REQUIRES_STDLIB)\" } */\n /* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" \"-Os\"} { \"\" } } */\n /* { dg-final { scan-assembler-not \"\\tmemcpy\" } } */\n /* { dg-final { scan-assembler-times \"sdl\" 4 } } */"}, {"sha": "55ee38a1d738bd43dd34d3242b89fd515c891808", "filename": "gcc/testsuite/gcc.target/mips/inline-memcpy-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finline-memcpy-5.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-fno-common isa_rev<=5 -mabi=n32\" } */\n+/* { dg-options \"-fno-common isa_rev<=5 -mabi=n32 (REQUIRES_STDLIB)\" } */\n /* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" \"-Os\"} { \"\" } } */\n /* { dg-final { scan-assembler-not \"\\tmemcpy\" } } */\n /* { dg-final { scan-assembler-times \"sdl\" 4 } } */"}, {"sha": "baed48cf5d58774c4654cb5112e9936902d9704e", "filename": "gcc/testsuite/gcc.target/mips/loongson-shift-count-truncated-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-shift-count-truncated-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-shift-count-truncated-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-shift-count-truncated-1.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -4,7 +4,7 @@\n /* loongson.h does not handle or check for MIPS16ness.  There doesn't\n    seem any good reason for it to, given that the Loongson processors\n    do not support MIPS16.  */\n-/* { dg-options \"isa=loongson -mhard-float -mno-mips16\" } */\n+/* { dg-options \"isa=loongson -mhard-float -mno-mips16 (REQUIRES_STDLIB)\" } */\n /* See PR 52155.  */\n /* { dg-options \"isa=loongson -mhard-float -mno-mips16 -mlong64\" { mips*-*-elf* && ilp32 } } */\n "}, {"sha": "f263b4393e93044a0d823276120ed4985f61168c", "filename": "gcc/testsuite/gcc.target/mips/loongson-simd.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-simd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-simd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-simd.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -26,7 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n    because inclusion of some system headers e.g. stdint.h will fail due to not\n    finding stubs-o32_hard.h.  */\n /* { dg-require-effective-target mips_nanlegacy } */\n-/* { dg-options \"isa=loongson -mhard-float -mno-micromips -mno-mips16 -flax-vector-conversions\" } */\n+/* { dg-options \"isa=loongson -mhard-float -mno-micromips -mno-mips16 -flax-vector-conversions (REQUIRES_STDLIB)\" } */\n \n #include \"loongson.h\"\n #include <stdio.h>"}, {"sha": "bd8519fe088da0f6ba1b34cb16a9731cd6ffdff8", "filename": "gcc/testsuite/gcc.target/mips/memcpy-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmemcpy-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmemcpy-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmemcpy-1.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-fno-common\" } */\n+/* { dg-options \"-fno-common (REQUIRES_STDLIB)\" } */\n /* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" } { \"\" } } */\n /* { dg-final { scan-assembler-not \"\\tlbu\\t\" } } */\n "}, {"sha": "cb827ad4cf5f6608909d5c61517e94f6f9dc780a", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-1.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mips3d forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mips3d forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test MIPS-3D builtin functions */\n #include <stdlib.h>"}, {"sha": "52ec3a529bc90e62df3a69b5ec59414d726d7711", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-2.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mips3d forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mips3d forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test MIPS-3D branch-if-any-two builtin functions */\n #include <stdlib.h>"}, {"sha": "cfb9ea8f57a57ffbaab0d4dc392d1a19b0c3b7d5", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-3.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mips3d forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mips3d forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test MIPS-3D absolute compare builtin functions */\n #include <stdlib.h>"}, {"sha": "ca4923c7921932c08342316609fe934beffea43c", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-4.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mips3d forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mips3d forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test MIPS-3D branch-if-any-four builtin functions */\n #include <stdlib.h>"}, {"sha": "86523d27377b7adead619b8a35ec4e7ec82e570d", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-5.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mips3d forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mips3d forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test MIPS-3D absolute-compare & branch-if-any-four builtin functions */\n #include <stdlib.h>"}, {"sha": "8e8fbb6b338750040340d894a8f73dfe777cc35e", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-6.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mips3d forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mips3d forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test MIPS-3D absolute compare (floats) builtin functions */\n #include <stdlib.h>"}, {"sha": "20f01997216aa93ae94733c5276dec8e8c8e2d66", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-7.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mips3d forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mips3d forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test MIPS-3D absolute compare (doubles) builtin functions */\n #include <stdlib.h>"}, {"sha": "c59f54746358752424b15cf84ac1077b1ba28830", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-8.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mips3d forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mips3d forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test MIPS-3D absolute compare and conditional move builtin functions */\n #include <stdlib.h>"}, {"sha": "281584186c19d8f20d19366e80671cf388f5d895", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-9.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mips3d forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mips3d forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Matrix Multiplications */\n #include <stdlib.h>"}, {"sha": "56ba68c87b6e059099e456f96f5bfd65b98704b1", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-1.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mpaired-single forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mpaired-single forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test v2sf calculations */\n #include <stdlib.h>"}, {"sha": "e0ff4d1864d7879b0aeb14dc6c94cbb05bf4dbb6", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-2.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mpaired-single forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mpaired-single forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test MIPS paired-single builtin functions */\n #include <stdlib.h>"}, {"sha": "a16bd4b214f3f8b8cdcb9c9abb73bec81b227568", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-3.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mpaired-single forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mpaired-single forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test MIPS paired-single conditional move */\n #include <stdlib.h>"}, {"sha": "893358d4c10456f538511946914fc71f8db91ffb", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-4.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-mpaired-single forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mpaired-single forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test MIPS paired-single comparisons */\n #include <stdlib.h>"}, {"sha": "8aa704d376f27329819855762a61760e12676b6d", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-6.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,7 +1,7 @@\n /* mips-ps-2.c with an extra -ffinite-math-only option.  This option\n    changes the way that abs.ps is handled.  */\n /* { dg-do run } */\n-/* { dg-options \"-mpaired-single -ffinite-math-only forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mpaired-single -ffinite-math-only forbid_cpu=octeon.* (REQUIRES_STDLIB)\" } */\n \n /* Test MIPS paired-single builtin functions */\n #include <stdlib.h>"}, {"sha": "c0b9680cb33ce211dc3c63a120d70764c6326049", "filename": "gcc/testsuite/gcc.target/mips/mips.exp", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -261,6 +261,7 @@ set mips_option_groups {\n     section_start \"-Wl,--section-start=.*\"\n     frame-header \"-mframe-header-opt|-mno-frame-header-opt\"\n     stack-protector \"-fstack-protector\"\n+    stdlib \"REQUIRES_STDLIB\"\n }\n \n for { set option 0 } { $option < 32 } { incr option } {\n@@ -447,14 +448,19 @@ proc mips_same_option_p { option1 option2 } {\n \n # Preprocess CODE using target_compile options OPTIONS.  Return the\n # compiler output.\n-proc mips_preprocess { options code } {\n+proc mips_preprocess { options code ignore_output } {\n     global tool\n \n     set src dummy[pid].c\n     set f [open $src \"w\"]\n     puts $f $code\n     close $f\n-    set output [${tool}_target_compile $src \"\" preprocess $options]\n+    if { $ignore_output } {\n+\tset output [${tool}_target_compile $src dummy[pid].i preprocess $options]\n+\tfile delete dummy[pid].i\n+    } else {\n+\tset output [${tool}_target_compile $src \"\" preprocess $options]\n+    }\n     file delete $src\n \n     return $output\n@@ -504,7 +510,7 @@ proc mips_arch_info { arch prop } {\n \t    #else\n \t    int isa_rev = 0;\n \t    #endif\n-\t}]\n+\t} 0]\n \tforeach lhs { isa isa_rev } {\n \t    regsub \".*$lhs = (\\[^;\\]*).*\" $output {\\1} rhs\n \t    verbose -log \"Architecture $arch has $lhs $rhs\"\n@@ -863,7 +869,7 @@ proc mips-dg-init {} {\n \n \t    0\n \t};\n-    }]\n+    } 0]\n     foreach line [split $output \"\\r\\n\"] {\n \t# Poor man's string concatenation.\n \tregsub -all {\" \"} $line \"\" line\n@@ -1454,6 +1460,28 @@ proc mips-dg-options { args } {\n \t}\n     }\n \n+    # If the test is marked as requiring standard libraries check\n+    # that the sysroot has support for the current set of test options.\n+    if { [mips_have_test_option_p options \"REQUIRES_STDLIB\"] } {\n+\tmips_push_test_options saved_options $extra_tool_flags\n+\tset output [mips_preprocess \"\" {\n+\t      #include <stdlib.h>\n+\t} 1]\n+\tmips_pop_test_options saved_options\n+\n+\t# If the preprocessing of the stdlib.h file produced errors,\n+\t# mark the test as unsupported by changing the second element of\n+\t# do_what to \"N\".\n+\t# The second element of do_what holds information about test selection\n+\t# and it can have one of two values:\n+\t# \"S\" - the test is selected and will be run\n+\t# \"N\" - the test is not selected and will not be run\n+\t# This mirrors the format of dg-do-what from lib/dg.exp in DejaGNU.\n+\tif { ![string equal $output \"\"] } {\n+\t    set do_what [lreplace $do_what 1 1 \"N\"]\n+\t}\n+    }\n+\n     # If the test is MIPS16-compatible, provide a counterpart to the\n     # NOMIPS16 convenience macro.\n     if { [mips_have_test_option_p options \"-mips16\"] } {"}, {"sha": "e1497c01d735126f6357108f5d3576a8a79205e1", "filename": "gcc/testsuite/gcc.target/mips/mips16-attributes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -2,7 +2,7 @@\n    of calling a nomips16/mips16/default function from a nomips16/mips16/default\n    function.  */\n /* { dg-do run } */\n-/* { dg-options \"(-mips16)\" } */\n+/* { dg-options \"(-mips16) (REQUIRES_STDLIB)\" } */\n /* { dg-skip-if \"\" { *-*-* } { \"-mmicromips\" } { \"\" } } */\n \n #include <stdlib.h>"}, {"sha": "ca12d0406d6cf04dc30d80f3199ed2fca07c003e", "filename": "gcc/testsuite/gcc.target/mips/mips32-dsp-run.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-run.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-run.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-run.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,6 +1,6 @@\n /* Test MIPS32 DSP instructions */\n /* { dg-do run } */\n-/* { dg-options \"-mdsp\" } */\n+/* { dg-options \"-mdsp (REQUIRES_STDLIB)\" } */\n \n #include <stdlib.h>\n #include <stdio.h>"}, {"sha": "d212bcfae2316930c1d4da45e82e7306a5bc5dc3", "filename": "gcc/testsuite/gcc.target/mips/mips32-dsp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,6 +1,6 @@\n /* Test MIPS32 DSP instructions */\n /* { dg-do compile } */\n-/* { dg-options \"-mgp32 -mdsp\" } */\n+/* { dg-options \"-mgp32 -mdsp (REQUIRES_STDLIB)\" } */\n /* { dg-final { scan-assembler \"\\taddq.ph\\t\" } } */\n /* { dg-final { scan-assembler \"\\taddq_s.ph\\t\" } } */\n /* { dg-final { scan-assembler \"\\taddq_s.w\\t\" } } */"}, {"sha": "5e1e838c7d8561bcf2568ebcfaaee26e61d68617", "filename": "gcc/testsuite/gcc.target/mips/save-restore-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb29a2a37900549c9d90f4d33bf7e00641655c6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-1.c?ref=dbb29a2a37900549c9d90f4d33bf7e00641655c6", "patch": "@@ -1,5 +1,5 @@\n /* Check that we can use the save instruction to save varargs.  */\n-/* { dg-options \"(-mips16) isa_rev>=1 -mabi=32\" } */\n+/* { dg-options \"(-mips16) isa_rev>=1 -mabi=32 (REQUIRES_STDLIB)\" } */\n \n #include <stdarg.h>\n "}]}