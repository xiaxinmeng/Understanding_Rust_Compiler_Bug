{"sha": "36dd4221c5479fca196cea27bbf5b34eae4e4b3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZkZDQyMjFjNTQ3OWZjYTE5NmNlYTI3YmJmNWIzNGVhZTRlNGIzYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-09-03T18:54:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-09-03T18:54:55Z"}, "message": "read.c (read_x): Take int argument instead of fnode * and digging the N from F->u.n.\n\n\t* io/read.c (read_x): Take int argument instead of fnode * and\n\tdigging the N from F->u.n.\n\t* io/io.h (read_x): Adjust prototype.\n\t* io/transfer.c (formatted_transfer): Adjust callers.  Don't clobber\n\tf->u.n for FMT_T.\n\n\t* gfortran.dg/fmt_t_1.f90: New test.\n\nFrom-SVN: r103811", "tree": {"sha": "1c6c7c5354ccc52e6cffdee4b059b9730f9ad16c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c6c7c5354ccc52e6cffdee4b059b9730f9ad16c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36dd4221c5479fca196cea27bbf5b34eae4e4b3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36dd4221c5479fca196cea27bbf5b34eae4e4b3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36dd4221c5479fca196cea27bbf5b34eae4e4b3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a6b7528533ea6d23a5b1a5624b4f68faf079a38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a6b7528533ea6d23a5b1a5624b4f68faf079a38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a6b7528533ea6d23a5b1a5624b4f68faf079a38"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "17b5b03c7e659aaa939e4ffc656fefd9cee36a34", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=36dd4221c5479fca196cea27bbf5b34eae4e4b3c", "patch": "@@ -1,3 +1,7 @@\n+2005-09-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gfortran.dg/fmt_t_1.f90: New test.\n+\n 2005-09-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/23454"}, {"sha": "157ba131e40fe081eb73e84dd6377fec00365e43", "filename": "gcc/testsuite/gfortran.dg/fmt_t_1.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_t_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_t_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_t_1.f90?ref=36dd4221c5479fca196cea27bbf5b34eae4e4b3c", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do run }\n+      integer nrow, vec(15)\n+      open (10, status=\"scratch\")\n+      write (10, fmt='(a)') '001    1 2 3 4 5 6'\n+      write (10, fmt='(a)') '000000 7 8 9101112'\n+      write (10, fmt='(a)') '000000131415'\n+      rewind (10)\n+      read (10, fmt='(i6, (t7, 6i2))') nrow, (vec(i), i=1,15)\n+      close (10)\n+      if (nrow.ne.1) call abort\n+      if (any (vec.ne.(/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15/))) call abort\n+      end"}, {"sha": "02df5fd0858fb4a1d13a12c332ec1c23e7509efb", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=36dd4221c5479fca196cea27bbf5b34eae4e4b3c", "patch": "@@ -1,3 +1,11 @@\n+2005-09-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* io/read.c (read_x): Take int argument instead of fnode * and\n+\tdigging the N from F->u.n.\n+\t* io/io.h (read_x): Adjust prototype.\n+\t* io/transfer.c (formatted_transfer): Adjust callers.  Don't clobber\n+\tf->u.n for FMT_T.\n+\n 2005-09-02  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* io/unix.c (stream_ttyname): Protect use of ttyname by"}, {"sha": "06825df8c297e14155598d2e7cf690fdfe37d57c", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=36dd4221c5479fca196cea27bbf5b34eae4e4b3c", "patch": "@@ -589,7 +589,7 @@ internal_proto(read_f);\n extern void read_l (fnode *, char *, int);\n internal_proto(read_l);\n \n-extern void read_x (fnode *);\n+extern void read_x (int);\n internal_proto(read_x);\n \n extern void read_radix (fnode *, char *, int, int);"}, {"sha": "ec6077ca45e6dd3f7c9b5aaf9a63eb78c13c2ade", "filename": "libgfortran/io/read.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/libgfortran%2Fio%2Fread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/libgfortran%2Fio%2Fread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fread.c?ref=36dd4221c5479fca196cea27bbf5b34eae4e4b3c", "patch": "@@ -831,12 +831,8 @@ read_f (fnode * f, char *dest, int length)\n  * and never look at it. */\n \n void\n-read_x (fnode * f)\n+read_x (int n)\n {\n-  int n;\n-\n-  n = f->u.n;\n-\n   if ((current_unit->flags.pad == PAD_NO || is_internal_unit ())\n       && current_unit->bytes_left < n)\n     n = current_unit->bytes_left;"}, {"sha": "7449f02d3dda8aabe08ff58f6d89d36cb805e34f", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36dd4221c5479fca196cea27bbf5b34eae4e4b3c/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=36dd4221c5479fca196cea27bbf5b34eae4e4b3c", "patch": "@@ -705,7 +705,7 @@ formatted_transfer (bt type, void *p, int len)\n \t  /* Writes occur just before the switch on f->format, above, so that\n \t     trailing blanks are suppressed.  */\n \t  if (g.mode == READING)\n-\t    read_x (f);\n+\t    read_x (f->u.n);\n \n \t  break;\n \n@@ -736,10 +736,7 @@ formatted_transfer (bt type, void *p, int len)\n \t  if (g.mode == READING)\n \t    {\n \t      if (skips > 0)\n-\t\t{\n-\t\t  f->u.n = skips;\n-\t\t  read_x (f);\n-\t\t}\n+\t\tread_x (skips);\n \t      if (skips < 0)\n \t\t{\n \t\t  move_pos_offset (current_unit->s, skips);"}]}