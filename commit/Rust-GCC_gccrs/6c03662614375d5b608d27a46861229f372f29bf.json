{"sha": "6c03662614375d5b608d27a46861229f372f29bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMwMzY2MjYxNDM3NWQ1YjYwOGQyN2E0Njg2MTIyOWYzNzJmMjliZg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-11-24T08:16:32Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-11-24T08:16:32Z"}, "message": "re PR fortran/42045 ([F03] passing a procedure pointer component to a procedure pointer dummy)\n\n2009-11-24  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/42045\n\t* resolve.c (resolve_actual_arglist): Make sure procedure pointer\n\tactual arguments are resolved correctly.\n\t(resolve_function): An EXPR_FUNCTION which is a procedure pointer\n\tcomponent, has already been resolved.\n\t(resolve_fl_derived): Procedure pointer components should not be\n\timplicitly typed.\n\n2009-11-24  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/42045\n\t* gfortran.dg/proc_ptr_comp_2.f90: Correct invalid test case.\n\t* gfortran.dg/proc_ptr_comp_3.f90: Extended test case.\n\t* gfortran.dg/proc_ptr_comp_24.f90: New.\n\nFrom-SVN: r154492", "tree": {"sha": "1822559a7e676edd10dfddc440d395b5f5a3cb49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1822559a7e676edd10dfddc440d395b5f5a3cb49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c03662614375d5b608d27a46861229f372f29bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c03662614375d5b608d27a46861229f372f29bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c03662614375d5b608d27a46861229f372f29bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c03662614375d5b608d27a46861229f372f29bf/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa62c188762c0d0065fe265d91ec3666c6608428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa62c188762c0d0065fe265d91ec3666c6608428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa62c188762c0d0065fe265d91ec3666c6608428"}], "stats": {"total": 65, "additions": 57, "deletions": 8}, "files": [{"sha": "862fffa663ae8885f4a73a7361a98fcbe9d4efa0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c03662614375d5b608d27a46861229f372f29bf/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c03662614375d5b608d27a46861229f372f29bf/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6c03662614375d5b608d27a46861229f372f29bf", "patch": "@@ -1,3 +1,13 @@\n+2009-11-24  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42045\n+\t* resolve.c (resolve_actual_arglist): Make sure procedure pointer\n+\tactual arguments are resolved correctly.\n+\t(resolve_function): An EXPR_FUNCTION which is a procedure pointer\n+\tcomponent, has already been resolved.\n+\t(resolve_fl_derived): Procedure pointer components should not be\n+\timplicitly typed.\n+\n 2009-11-21  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/41807"}, {"sha": "740679edd2d34c9fb9eb64b005dca6da36b69814", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c03662614375d5b608d27a46861229f372f29bf/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c03662614375d5b608d27a46861229f372f29bf/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=6c03662614375d5b608d27a46861229f372f29bf", "patch": "@@ -1321,6 +1321,8 @@ resolve_actual_arglist (gfc_actual_arglist *arg, procedure_type ptype,\n \t\te->rank = comp->as->rank;\n \t      e->expr_type = EXPR_FUNCTION;\n \t    }\n+\t  if (gfc_resolve_expr (e) == FAILURE)                          \n+\t    return FAILURE; \n \t  goto argument_list;\n \t}\n \n@@ -2519,6 +2521,10 @@ resolve_function (gfc_expr *expr)\n   if (expr->symtree)\n     sym = expr->symtree->n.sym;\n \n+  /* If this is a procedure pointer component, it has already been resolved.  */\n+  if (gfc_is_proc_ptr_comp (expr, NULL))\n+    return SUCCESS;\n+  \n   if (sym && sym->attr.intrinsic\n       && resolve_intrinsic (sym, &expr->where) == FAILURE)\n     return FAILURE;\n@@ -10219,8 +10225,9 @@ resolve_fl_derived (gfc_symbol *sym)\n \t}\n       else if (c->attr.proc_pointer && c->ts.type == BT_UNKNOWN)\n \t{\n-\t  c->ts = *gfc_get_default_type (c->name, NULL);\n-\t  c->attr.implicit_type = 1;\n+\t  /* Since PPCs are not implicitly typed, a PPC without an explicit\n+\t     interface must be a subroutine.  */\n+\t  gfc_add_subroutine (&c->attr, c->name, &c->loc);\n \t}\n \n       /* Procedure pointer components: Check PASS arg.  */"}, {"sha": "50c588c1f410baf02765f436ff67c98268df0acd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c03662614375d5b608d27a46861229f372f29bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c03662614375d5b608d27a46861229f372f29bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c03662614375d5b608d27a46861229f372f29bf", "patch": "@@ -1,3 +1,10 @@\n+2009-11-24  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42045\n+\t* gfortran.dg/proc_ptr_comp_2.f90: Correct invalid test case.\n+\t* gfortran.dg/proc_ptr_comp_3.f90: Extended test case.\n+\t* gfortran.dg/proc_ptr_comp_24.f90: New.\n+\n 2009-11-23  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n \n \t* gcc.c-torture/execute/pr40404.c: Use long for bitfield on 16bit"}, {"sha": "33e32aaf63e2282e52353dfe524dbf4b126ea6da", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_2.f90", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c03662614375d5b608d27a46861229f372f29bf/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c03662614375d5b608d27a46861229f372f29bf/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_2.f90?ref=6c03662614375d5b608d27a46861229f372f29bf", "patch": "@@ -9,7 +9,6 @@\n   type t\r\n     procedure(fcn), pointer, nopass :: ppc\r\n     procedure(abstr), pointer, nopass :: ppc1\n-    procedure(), nopass, pointer:: iptr3\r\n     integer :: i\r\n   end type\r\n \r\n@@ -43,11 +42,6 @@ integer function abstr(x)\n   if (base/=12) call abort\r\n   call foo (f,7)\n \n-! Check with implicit interface\n-  obj%iptr3 => iabs\n-  base=obj%iptr3(-9)\n-  if (base/=9) call abort\r\n-\r\n contains\r\n \r\n   integer function fcn(x)\r"}, {"sha": "8c935c9ea569a7e77a1562547278e8558df7828c", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_24.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c03662614375d5b608d27a46861229f372f29bf/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_24.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c03662614375d5b608d27a46861229f372f29bf/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_24.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_24.f90?ref=6c03662614375d5b608d27a46861229f372f29bf", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+!\n+! PR42045: [F03] passing a procedure pointer component to a procedure pointer dummy\n+!\n+! Contributed by John McFarland <john.mcfarland@swri.org>\n+\n+PROGRAM prog\n+ TYPE object\n+  PROCEDURE(), POINTER, NOPASS :: f\n+ END TYPE object\n+ TYPE container\n+  TYPE (object), POINTER :: o(:)\n+ END TYPE container\n+ TYPE (container) :: c\n+ TYPE (object) :: o1, o2\n+ PROCEDURE(), POINTER :: f => NULL()\n+ o1%f => f\n+ CALL set_func(o2,f)\n+ CALL set_func(o2,o1%f)\n+ ALLOCATE( c%o(5) )\n+ c%o(5)%f => f\n+ CALL set_func(o2,c%o(5)%f)\n+CONTAINS\n+ SUBROUTINE set_func(o,f)\n+  TYPE (object) :: o\n+  PROCEDURE(), POINTER :: f\n+  o%f => f\n+ END SUBROUTINE set_func\n+END PROGRAM prog"}, {"sha": "fc8c28da32efcccbe295059b900bef7f1701f743", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_3.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c03662614375d5b608d27a46861229f372f29bf/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c03662614375d5b608d27a46861229f372f29bf/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_3.f90?ref=6c03662614375d5b608d27a46861229f372f29bf", "patch": "@@ -16,6 +16,7 @@ subroutine sub\n external :: aaargh\n \n type :: t\n+  procedure(), pointer, nopass :: ptr1\n   procedure(real), pointer, nopass :: ptr2\n   procedure(sub), pointer, nopass :: ptr3\n   procedure(), pointer, nopass ptr4              ! { dg-error \"Expected '::'\" }\n@@ -40,6 +41,7 @@ subroutine sub\n \n x => x%ptr2       ! { dg-error \"Pointer assignment to non-POINTER\" }\n \n+print *, x%ptr1() ! { dg-error \"attribute conflicts with\" }\n call x%ptr2()     ! { dg-error \"attribute conflicts with\" }\n print *,x%ptr3()  ! { dg-error \"attribute conflicts with\" }\n "}]}