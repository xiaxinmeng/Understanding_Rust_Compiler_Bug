{"sha": "51d0f328ba4dff5c9e8866a7bca24f45c578314d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFkMGYzMjhiYTRkZmY1YzllODg2NmE3YmNhMjRmNDVjNTc4MzE0ZA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-02-19T19:50:21Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-02-19T19:50:21Z"}, "message": "cppfiles.c (stack_include_file): Generate dependencies here, and manage include_count here too.\n\n        * cppfiles.c (stack_include_file): Generate dependencies\n        here, and manage include_count here too.\n        (PRINT_THIS_DEP): Delete.\n        (_cpp_execute_include): Do not generate dependencies here,\n        apart from the case of a missing header.  Do not manage\n        include_count.\n        (_cpp_read_file): Leave dependency generation to\n        stack_include_file.\n\nFrom-SVN: r39899", "tree": {"sha": "15248782ada420376ec7690964d6dbee5b1550b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15248782ada420376ec7690964d6dbee5b1550b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51d0f328ba4dff5c9e8866a7bca24f45c578314d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51d0f328ba4dff5c9e8866a7bca24f45c578314d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51d0f328ba4dff5c9e8866a7bca24f45c578314d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51d0f328ba4dff5c9e8866a7bca24f45c578314d/comments", "author": null, "committer": null, "parents": [{"sha": "b0a85b861eda836dd3193d26bc65fadbd9694849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0a85b861eda836dd3193d26bc65fadbd9694849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0a85b861eda836dd3193d26bc65fadbd9694849"}], "stats": {"total": 53, "additions": 34, "deletions": 19}, "files": [{"sha": "f12c265337eb8c3db10cc68115ff4745f2cf40e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51d0f328ba4dff5c9e8866a7bca24f45c578314d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51d0f328ba4dff5c9e8866a7bca24f45c578314d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51d0f328ba4dff5c9e8866a7bca24f45c578314d", "patch": "@@ -1,3 +1,14 @@\n+2001-02-19  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+        * cppfiles.c (stack_include_file): Generate dependencies\n+        here, and manage include_count here too.\n+        (PRINT_THIS_DEP): Delete.\n+        (_cpp_execute_include): Do not generate dependencies here,\n+        apart from the case of a missing header.  Do not manage\n+        include_count.\n+        (_cpp_read_file): Leave dependency generation to\n+        stack_include_file.\n+\n Mon Feb 19 10:17:47 2001  Jeffrey A Law  (law@cygnus.com)\n \n \t* config.gcc (hppa*64*-*-hpux11*): Add MASK_GAS to"}, {"sha": "49b7958e287645ecbaafcc10a30569f357621235", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51d0f328ba4dff5c9e8866a7bca24f45c578314d/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51d0f328ba4dff5c9e8866a7bca24f45c578314d/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=51d0f328ba4dff5c9e8866a7bca24f45c578314d", "patch": "@@ -268,6 +268,20 @@ stack_include_file (pfile, inc)\n {\n   size_t len = 0;\n   cpp_buffer *fp;\n+  int sysp, deps_sysp;\n+\n+  /* We'll try removing deps_sysp after the release of 3.0.  */\n+  deps_sysp = pfile->system_include_depth != 0;\n+  sysp = ((pfile->buffer && pfile->buffer->sysp)\n+\t  || (inc->foundhere && inc->foundhere->sysp));\n+\n+  /* For -M, add the file to the dependencies on its first inclusion.  */\n+  if (CPP_OPTION (pfile, print_deps) > deps_sysp && !inc->include_count)\n+    deps_add_dep (pfile->deps, inc->name);\n+\n+  /* We don't want multiple include guard advice for the main file.  */\n+  if (pfile->buffer)\n+    inc->include_count++;\n \n   /* Not in cache?  */\n   if (! inc->buffer)\n@@ -280,8 +294,7 @@ stack_include_file (pfile, inc)\n   fp = cpp_push_buffer (pfile, inc->buffer, len, BUF_FILE, inc->name);\n   fp->inc = inc;\n   fp->inc->refcnt++;\n-  if (inc->foundhere)\n-    fp->sysp = inc->foundhere->sysp;\n+  fp->sysp = sysp;\n \n   /* The ->actual_dir field is only used when ignore_srcdir is not in effect;\n      see do_include */\n@@ -566,7 +579,6 @@ report_missing_guard (n, b)\n   return 0;\n }\n \n-#define PRINT_THIS_DEP(p, b) (CPP_PRINT_DEPS(p) > (b||p->system_include_depth))\n void\n _cpp_execute_include (pfile, header, no_reinclude, include_next)\n      cpp_reader *pfile;\n@@ -579,6 +591,7 @@ _cpp_execute_include (pfile, header, no_reinclude, include_next)\n   unsigned int angle_brackets = header->type == CPP_HEADER_NAME;\n   struct include_file *inc;\n   char *fname;\n+  int print_dep;\n \n   /* Help protect #include or similar from recursion.  */\n   if (pfile->buffer_stack_depth >= CPP_STACK_MAX)\n@@ -636,20 +649,13 @@ _cpp_execute_include (pfile, header, no_reinclude, include_next)\n     }\n \n   inc = find_include_file (pfile, fname, search_start);\n-\n   if (inc)\n     {\n-      /* For -M, add the file to the dependencies on its first inclusion. */\n-      if (!inc->include_count && PRINT_THIS_DEP (pfile, angle_brackets))\n-\tdeps_add_dep (pfile->deps, inc->name);\n-      inc->include_count++;\n-\n-      /* Actually process the file.  */\n-      stack_include_file (pfile, inc);\n-\n       if (angle_brackets)\n \tpfile->system_include_depth++;\n \n+      stack_include_file (pfile, inc);\n+\n       if (! DO_NOT_REREAD (inc))\n \t{\n \t  if (no_reinclude)\n@@ -668,8 +674,10 @@ _cpp_execute_include (pfile, header, no_reinclude, include_next)\n       return;\n     }\n       \n-  if (CPP_OPTION (pfile, print_deps_missing_files)\n-      && PRINT_THIS_DEP (pfile, angle_brackets))\n+  /* We will try making the RHS pfile->buffer->sysp after 3.0.  */\n+  print_dep = CPP_PRINT_DEPS(pfile) > (angle_brackets\n+\t\t\t\t       || pfile->system_include_depth);\n+  if (CPP_OPTION (pfile, print_deps_missing_files) && print_dep)\n     {\n       if (!angle_brackets || IS_ABSOLUTE_PATHNAME (fname))\n \tdeps_add_dep (pfile->deps, fname);\n@@ -704,8 +712,7 @@ _cpp_execute_include (pfile, header, no_reinclude, include_next)\n      can't produce correct output, because there may be\n      dependencies we need inside the missing file, and we don't\n      know what directory this missing file exists in. */\n-  else if (CPP_PRINT_DEPS (pfile)\n-\t   && ! PRINT_THIS_DEP (pfile, angle_brackets))\n+  else if (CPP_PRINT_DEPS (pfile) && ! print_dep)\n     cpp_warning (pfile, \"No include path in which to find %s\", fname);\n   else\n     cpp_error_from_errno (pfile, fname);\n@@ -767,9 +774,6 @@ _cpp_read_file (pfile, fname)\n       return 0;\n     }\n \n-  if (CPP_OPTION (pfile, print_deps))\n-    deps_add_dep (pfile->deps, f->name);\n-\n   stack_include_file (pfile, f);\n   return 1;\n }"}]}