{"sha": "db318f46594d4080931db7f56ccb30c7f6f1f949", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIzMThmNDY1OTRkNDA4MDkzMWRiN2Y1NmNjYjMwYzdmNmYxZjk0OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-02T09:27:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-02T09:27:55Z"}, "message": "[multiple changes]\n\n2013-01-02  Thomas Quinot  <quinot@adacore.com>\n\n\t* par_sco.adb: Add SCO generation for S of protected types and\n\tsingle protected object declarations.\n\n2013-01-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_eval.adb, osint.ads: Minor reformatting.\n\nFrom-SVN: r194779", "tree": {"sha": "4dad45ebdbb4ea5c9335c18de13dc636ec88bc45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4dad45ebdbb4ea5c9335c18de13dc636ec88bc45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db318f46594d4080931db7f56ccb30c7f6f1f949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db318f46594d4080931db7f56ccb30c7f6f1f949", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db318f46594d4080931db7f56ccb30c7f6f1f949", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db318f46594d4080931db7f56ccb30c7f6f1f949/comments", "author": null, "committer": null, "parents": [{"sha": "37c1f923b8a94049df4fa57654d6c38e5c733679", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c1f923b8a94049df4fa57654d6c38e5c733679", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37c1f923b8a94049df4fa57654d6c38e5c733679"}], "stats": {"total": 81, "additions": 68, "deletions": 13}, "files": [{"sha": "29f7a83d3fed928e69cb566438b132964a1fae89", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db318f46594d4080931db7f56ccb30c7f6f1f949/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db318f46594d4080931db7f56ccb30c7f6f1f949/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=db318f46594d4080931db7f56ccb30c7f6f1f949", "patch": "@@ -1,3 +1,12 @@\n+2013-01-02  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* par_sco.adb: Add SCO generation for S of protected types and\n+\tsingle protected object declarations.\n+\n+2013-01-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_eval.adb, osint.ads: Minor reformatting.\n+\n 2013-01-02  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_prag.adb (Analyze_Pragma): Check the legality of pragma Assume."}, {"sha": "48a7d8e44c1f5b42adb6ca5f3c96b56c37ca185e", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db318f46594d4080931db7f56ccb30c7f6f1f949/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db318f46594d4080931db7f56ccb30c7f6f1f949/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=db318f46594d4080931db7f56ccb30c7f6f1f949", "patch": "@@ -73,7 +73,7 @@ package Osint is\n    --  found. Note that for the special case of gnat.adc, only the compilation\n    --  environment directory is searched, i.e. the directory where the ali and\n    --  object files are written. Another special case is Debug_Generated_Code\n-   --  set and the file name ends on \".dg\", in which case we look for the\n+   --  set and the file name ends in \".dg\", in which case we look for the\n    --  generated file only in the current directory, since that is where it is\n    --  always built.\n "}, {"sha": "ea3b0cc19fe1b62cd5d93d41e3d280fa283296de", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 54, "deletions": 7, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db318f46594d4080931db7f56ccb30c7f6f1f949/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db318f46594d4080931db7f56ccb30c7f6f1f949/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=db318f46594d4080931db7f56ccb30c7f6f1f949", "patch": "@@ -161,6 +161,7 @@ package body Par_SCO is\n    procedure Traverse_Package_Body                (N : Node_Id);\n    procedure Traverse_Package_Declaration         (N : Node_Id);\n    procedure Traverse_Protected_Body              (N : Node_Id);\n+   procedure Traverse_Protected_Definition        (N : Node_Id);\n    procedure Traverse_Subprogram_Or_Task_Body\n      (N : Node_Id;\n       D : Dominant_Info := No_Dominant);\n@@ -1201,12 +1202,13 @@ package body Par_SCO is\n \n       procedure Set_Statement_Entry;\n       --  Output CS entries for all statements saved in table SC, and end the\n-      --  current CS sequence.\n+      --  current CS sequence. Then output entries for all decisions nested in\n+      --  these statements, which have been deferred so far.\n \n       procedure Process_Decisions_Defer (N : Node_Id; T : Character);\n       pragma Inline (Process_Decisions_Defer);\n       --  This routine is logically the same as Process_Decisions, except that\n-      --  the arguments are saved in the SD table, for later processing when\n+      --  the arguments are saved in the SD table for later processing when\n       --  Set_Statement_Entry is called, which goes through the saved entries\n       --  making the corresponding calls to Process_Decision.\n \n@@ -1350,12 +1352,22 @@ package body Par_SCO is\n             when N_Loop_Statement =>\n                To_Node := Iteration_Scheme (N);\n \n-            when N_Selective_Accept       |\n-                 N_Timed_Entry_Call       |\n-                 N_Conditional_Entry_Call |\n-                 N_Asynchronous_Select    =>\n+            when N_Selective_Accept             |\n+                 N_Timed_Entry_Call             |\n+                 N_Conditional_Entry_Call       |\n+                 N_Asynchronous_Select          |\n+                 N_Single_Protected_Declaration =>\n                T := F;\n \n+            when N_Protected_Type_Declaration =>\n+               if Has_Aspects (N) then\n+                  To_Node := Last (Aspect_Specifications (N));\n+               elsif Present (Discriminant_Specifications (N)) then\n+                  To_Node := Last (Discriminant_Specifications (N));\n+               else\n+                  To_Node := Defining_Identifier (N);\n+               end if;\n+\n             when others =>\n                null;\n \n@@ -1930,7 +1942,7 @@ package body Par_SCO is\n             --  Object declaration. Ignored if Prev_Ids is set, since the\n             --  parser generates multiple instances of the whole declaration\n             --  if there is more than one identifier declared, and we only\n-            --  want one entry in the SCO's, so we take the first, for which\n+            --  want one entry in the SCOs, so we take the first, for which\n             --  Prev_Ids is False.\n \n             when N_Object_Declaration =>\n@@ -1945,6 +1957,19 @@ package body Par_SCO is\n             --  All other cases, which extend the current statement sequence\n             --  but do not terminate it, even if they have nested decisions.\n \n+            when N_Protected_Type_Declaration =>\n+               Extend_Statement_Sequence (N, 't');\n+               Process_Decisions_Defer (Discriminant_Specifications (N), 'X');\n+               Set_Statement_Entry;\n+\n+               Traverse_Protected_Definition (Protected_Definition (N));\n+\n+            when N_Single_Protected_Declaration =>\n+               Extend_Statement_Sequence (N, 'o');\n+               Set_Statement_Entry;\n+\n+               Traverse_Protected_Definition (Protected_Definition (N));\n+\n             when others =>\n \n                --  Determine required type character code, or ASCII.NUL if\n@@ -2093,6 +2118,28 @@ package body Par_SCO is\n       Traverse_Declarations_Or_Statements (Declarations (N));\n    end Traverse_Protected_Body;\n \n+   -----------------------------------\n+   -- Traverse_Protected_Definition --\n+   -----------------------------------\n+\n+   procedure Traverse_Protected_Definition (N : Node_Id) is\n+      Dom_Info : Dominant_Info    := ('S', Parent (N));\n+      Vis_Decl : constant List_Id := Visible_Declarations (N);\n+\n+   begin\n+      Traverse_Declarations_Or_Statements\n+        (L => Vis_Decl,\n+         D => Dom_Info);\n+\n+      if not Is_Empty_List (Vis_Decl) then\n+         Dom_Info.N := Last (Vis_Decl);\n+      end if;\n+\n+      Traverse_Declarations_Or_Statements\n+        (L => Private_Declarations (N),\n+         D => Dom_Info);\n+   end Traverse_Protected_Definition;\n+\n    --------------------------------------\n    -- Traverse_Subprogram_Or_Task_Body --\n    --------------------------------------"}, {"sha": "89f60ff5eacf47b3b27de53122dda3ec5c32db23", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db318f46594d4080931db7f56ccb30c7f6f1f949/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db318f46594d4080931db7f56ccb30c7f6f1f949/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=db318f46594d4080931db7f56ccb30c7f6f1f949", "patch": "@@ -752,10 +752,9 @@ package body Sem_Eval is\n       --  conditions when this is inappropriate.\n \n       if not (Full_Analysis\n-                or else\n-              (Is_Static_Expression (L)\n-                 and then\n-               Is_Static_Expression (R)))\n+               or else (Is_Static_Expression (L)\n+                          and then\n+                        Is_Static_Expression (R)))\n       then\n          return Unknown;\n       end if;\n@@ -3259,7 +3258,7 @@ package body Sem_Eval is\n       Left_Int := Expr_Value (Left);\n \n       if (Kind = N_And_Then and then Is_False (Left_Int))\n-            or else\n+           or else\n          (Kind = N_Or_Else  and then Is_True  (Left_Int))\n       then\n          Fold_Uint (N, Left_Int, Rstat);"}]}