{"sha": "9dce6f995c2b3bc021a97872b413807de7d294b1", "node_id": "C_kwDOANBUbNoAKDlkY2U2Zjk5NWMyYjNiYzAyMWE5Nzg3MmI0MTM4MDdkZTdkMjk0YjE", "commit": {"author": {"name": "Owen Avery", "email": "powerboat9.gamer@gmail.com", "date": "2023-02-27T16:18:56Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-03-01T09:26:45Z"}, "message": "Fix assignment operator overloads for AST and HIR patterns\n\ngcc/rust/ChangeLog:\n\n\t* ast/rust-pattern.h\n\t(StructPatternElements::operator=): Clear vector before inserting.\n\t(TupleStructItemsNoRange::operator=): Clear vector before inserting.\n\t(TupleStructItemsRange::operator=): Clear vectors before inserting.\n\t(TuplePatternItemsMultiple::operator=): Clear vector before inserting.\n\t(TuplePatternItemsRanged::operator=): Clear vectors before inserting.\n\t(SlicePattern::operator=): Clear vector before inserting.\n\t(AltPattern::operator=): Clear vector before inserting.\n\t* hir/tree/rust-hir-pattern.h\n\t(StructPatternElements::operator=): Clear vector before inserting.\n\t(TupleStructItemsNoRange::operator=): Clear vector before inserting.\n\t(TupleStructItemsRange::operator=): Clear vectors before inserting.\n\t(TuplePatternItemsMultiple::operator=): Clear vector before inserting.\n\t(TuplePatternItemsRanged::operator=): Clear vectors before inserting.\n\t(SlicePattern::operator=): Clear vector before inserting.\n\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "95efe359de6c4742f56b6b307d0ba804945e4b76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95efe359de6c4742f56b6b307d0ba804945e4b76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9dce6f995c2b3bc021a97872b413807de7d294b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dce6f995c2b3bc021a97872b413807de7d294b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dce6f995c2b3bc021a97872b413807de7d294b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dce6f995c2b3bc021a97872b413807de7d294b1/comments", "author": {"login": "powerboat9", "id": 7397652, "node_id": "MDQ6VXNlcjczOTc2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/7397652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/powerboat9", "html_url": "https://github.com/powerboat9", "followers_url": "https://api.github.com/users/powerboat9/followers", "following_url": "https://api.github.com/users/powerboat9/following{/other_user}", "gists_url": "https://api.github.com/users/powerboat9/gists{/gist_id}", "starred_url": "https://api.github.com/users/powerboat9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/powerboat9/subscriptions", "organizations_url": "https://api.github.com/users/powerboat9/orgs", "repos_url": "https://api.github.com/users/powerboat9/repos", "events_url": "https://api.github.com/users/powerboat9/events{/privacy}", "received_events_url": "https://api.github.com/users/powerboat9/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "193c21c85b4b3f603b1b6280779c758d35570446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/193c21c85b4b3f603b1b6280779c758d35570446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/193c21c85b4b3f603b1b6280779c758d35570446"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "3d7cbed37c3ad357f773fcce7f3dca6a0886d0b0", "filename": "gcc/rust/ast/rust-pattern.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dce6f995c2b3bc021a97872b413807de7d294b1/gcc%2Frust%2Fast%2Frust-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dce6f995c2b3bc021a97872b413807de7d294b1/gcc%2Frust%2Fast%2Frust-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-pattern.h?ref=9dce6f995c2b3bc021a97872b413807de7d294b1", "patch": "@@ -830,6 +830,7 @@ class StructPatternElements\n     struct_pattern_etc_attrs = other.struct_pattern_etc_attrs;\n     has_struct_pattern_etc = other.has_struct_pattern_etc;\n \n+    fields.clear ();\n     fields.reserve (other.fields.size ());\n     for (const auto &e : other.fields)\n       fields.push_back (e->clone_struct_pattern_field ());\n@@ -986,6 +987,7 @@ class TupleStructItemsNoRange : public TupleStructItems\n   // Overloaded assignment operator with vector clone\n   TupleStructItemsNoRange &operator= (TupleStructItemsNoRange const &other)\n   {\n+    patterns.clear ();\n     patterns.reserve (other.patterns.size ());\n     for (const auto &e : other.patterns)\n       patterns.push_back (e->clone_pattern ());\n@@ -1048,10 +1050,12 @@ class TupleStructItemsRange : public TupleStructItems\n   // Overloaded assignment operator to clone\n   TupleStructItemsRange &operator= (TupleStructItemsRange const &other)\n   {\n+    lower_patterns.clear ();\n     lower_patterns.reserve (other.lower_patterns.size ());\n     for (const auto &e : other.lower_patterns)\n       lower_patterns.push_back (e->clone_pattern ());\n \n+    upper_patterns.clear ();\n     upper_patterns.reserve (other.upper_patterns.size ());\n     for (const auto &e : other.upper_patterns)\n       upper_patterns.push_back (e->clone_pattern ());\n@@ -1263,6 +1267,7 @@ class TuplePatternItemsMultiple : public TuplePatternItems\n   // Overloaded assignment operator to vector clone\n   TuplePatternItemsMultiple &operator= (TuplePatternItemsMultiple const &other)\n   {\n+    patterns.clear ();\n     patterns.reserve (other.patterns.size ());\n     for (const auto &e : other.patterns)\n       patterns.push_back (e->clone_pattern ());\n@@ -1328,10 +1333,12 @@ class TuplePatternItemsRanged : public TuplePatternItems\n   // Overloaded assignment operator to clone\n   TuplePatternItemsRanged &operator= (TuplePatternItemsRanged const &other)\n   {\n+    lower_patterns.clear ();\n     lower_patterns.reserve (other.lower_patterns.size ());\n     for (const auto &e : other.lower_patterns)\n       lower_patterns.push_back (e->clone_pattern ());\n \n+    upper_patterns.clear ();\n     upper_patterns.reserve (other.upper_patterns.size ());\n     for (const auto &e : other.upper_patterns)\n       upper_patterns.push_back (e->clone_pattern ());\n@@ -1541,6 +1548,7 @@ class SlicePattern : public Pattern\n     locus = other.locus;\n     node_id = other.node_id;\n \n+    items.clear ();\n     items.reserve (other.items.size ());\n     for (const auto &e : other.items)\n       items.push_back (e->clone_pattern ());\n@@ -1607,6 +1615,7 @@ class AltPattern : public Pattern\n     locus = other.locus;\n     node_id = other.node_id;\n \n+    alts.clear ();\n     alts.reserve (other.alts.size ());\n     for (const auto &e : other.alts)\n       alts.push_back (e->clone_pattern ());"}, {"sha": "47a38cc075cf6692d343088588f9456264d326e7", "filename": "gcc/rust/hir/tree/rust-hir-pattern.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dce6f995c2b3bc021a97872b413807de7d294b1/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dce6f995c2b3bc021a97872b413807de7d294b1/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h?ref=9dce6f995c2b3bc021a97872b413807de7d294b1", "patch": "@@ -696,6 +696,7 @@ class StructPatternElements\n   // Overloaded assignment operator with vector clone\n   StructPatternElements &operator= (StructPatternElements const &other)\n   {\n+    fields.clear ();\n     fields.reserve (other.fields.size ());\n     for (const auto &e : other.fields)\n       fields.push_back (e->clone_struct_pattern_field ());\n@@ -819,6 +820,7 @@ class TupleStructItemsNoRange : public TupleStructItems\n   // Overloaded assignment operator with vector clone\n   TupleStructItemsNoRange &operator= (TupleStructItemsNoRange const &other)\n   {\n+    patterns.clear ();\n     patterns.reserve (other.patterns.size ());\n     for (const auto &e : other.patterns)\n       patterns.push_back (e->clone_pattern ());\n@@ -880,10 +882,12 @@ class TupleStructItemsRange : public TupleStructItems\n   // Overloaded assignment operator to clone\n   TupleStructItemsRange &operator= (TupleStructItemsRange const &other)\n   {\n+    lower_patterns.clear ();\n     lower_patterns.reserve (other.lower_patterns.size ());\n     for (const auto &e : other.lower_patterns)\n       lower_patterns.push_back (e->clone_pattern ());\n \n+    upper_patterns.clear ();\n     upper_patterns.reserve (other.upper_patterns.size ());\n     for (const auto &e : other.upper_patterns)\n       upper_patterns.push_back (e->clone_pattern ());\n@@ -1050,6 +1054,7 @@ class TuplePatternItemsMultiple : public TuplePatternItems\n   // Overloaded assignment operator to vector clone\n   TuplePatternItemsMultiple &operator= (TuplePatternItemsMultiple const &other)\n   {\n+    patterns.clear ();\n     patterns.reserve (other.patterns.size ());\n     for (const auto &e : other.patterns)\n       patterns.push_back (e->clone_pattern ());\n@@ -1114,10 +1119,12 @@ class TuplePatternItemsRanged : public TuplePatternItems\n   // Overloaded assignment operator to clone\n   TuplePatternItemsRanged &operator= (TuplePatternItemsRanged const &other)\n   {\n+    lower_patterns.clear ();\n     lower_patterns.reserve (other.lower_patterns.size ());\n     for (const auto &e : other.lower_patterns)\n       lower_patterns.push_back (e->clone_pattern ());\n \n+    lower_patterns.clear ();\n     upper_patterns.reserve (other.upper_patterns.size ());\n     for (const auto &e : other.upper_patterns)\n       upper_patterns.push_back (e->clone_pattern ());\n@@ -1257,6 +1264,7 @@ class SlicePattern : public Pattern\n     locus = other.locus;\n     mappings = other.mappings;\n \n+    items.clear ();\n     items.reserve (other.items.size ());\n     for (const auto &e : other.items)\n       items.push_back (e->clone_pattern ());"}]}