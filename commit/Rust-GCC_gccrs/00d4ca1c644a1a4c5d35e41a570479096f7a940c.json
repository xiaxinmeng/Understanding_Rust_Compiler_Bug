{"sha": "00d4ca1c644a1a4c5d35e41a570479096f7a940c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBkNGNhMWM2NDRhMWE0YzVkMzVlNDFhNTcwNDc5MDk2ZjdhOTQwYw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-19T23:17:58Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-19T23:17:58Z"}, "message": "(simplify_shift_const...\n\n(simplify_shift_const, XOR case): When applying\ndistributive law, use shift_mode and GET_MODE (varop) instead of\nresult_mode.\n\nFrom-SVN: r5189", "tree": {"sha": "bd41c60a70e270afeb4e9c5bbad9d5c31c44bfe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd41c60a70e270afeb4e9c5bbad9d5c31c44bfe3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00d4ca1c644a1a4c5d35e41a570479096f7a940c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00d4ca1c644a1a4c5d35e41a570479096f7a940c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00d4ca1c644a1a4c5d35e41a570479096f7a940c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00d4ca1c644a1a4c5d35e41a570479096f7a940c/comments", "author": null, "committer": null, "parents": [{"sha": "2aaf11def1dde903f2725f032a84c8c0ac2e210c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aaf11def1dde903f2725f032a84c8c0ac2e210c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aaf11def1dde903f2725f032a84c8c0ac2e210c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "20694090c59401b51943bdf8382a0cc3c02bf42f", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00d4ca1c644a1a4c5d35e41a570479096f7a940c/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00d4ca1c644a1a4c5d35e41a570479096f7a940c/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=00d4ca1c644a1a4c5d35e41a570479096f7a940c", "patch": "@@ -7600,12 +7600,12 @@ simplify_shift_const (x, code, result_mode, varop, count)\n \t     logical expression, make a new logical expression, and apply\n \t     the inverse distributive law.  */\n \t  {\n-\t    rtx lhs = simplify_shift_const (NULL_RTX, code, result_mode,\n+\t    rtx lhs = simplify_shift_const (NULL_RTX, code, shift_mode,\n \t\t\t\t\t    XEXP (varop, 0), count);\n-\t    rtx rhs = simplify_shift_const (NULL_RTX, code, result_mode,\n+\t    rtx rhs = simplify_shift_const (NULL_RTX, code, shift_mode,\n \t\t\t\t\t    XEXP (varop, 1), count);\n \n-\t    varop = gen_binary (GET_CODE (varop), result_mode, lhs, rhs);\n+\t    varop = gen_binary (GET_CODE (varop), GET_MODE (varop), lhs, rhs);\n \t    varop = apply_distributive_law (varop);\n \n \t    count = 0;"}]}