{"sha": "001c63d15e31bc0a1545426d889a0b9f671b4961", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAxYzYzZDE1ZTMxYmMwYTE1NDU0MjZkODg5YTBiOWY2NzFiNDk2MQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-04-20T16:16:04Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-04-21T15:12:14Z"}, "message": "c++: Don't allow defining types in enum-base [PR96380]\n\nIn r11-2064 I made cp_parser_enum_specifier commit to tentative parse\nwhen seeing a '{'.  That still looks like the correct thing to do, but\nit caused an ICE-on-invalid as well as accepts-invalid.\n\nWhen we have something sneaky like this, which is broken in multiple\nways:\n\n  template <class>\n  enum struct c : union enum struct c { e = b, f = a };\n\nwe parse the \"enum struct c\" part (that's OK) and then we see that\nwe have an enum-base, so we consume ':' and then parse the type-specifier\nthat follows the :.  \"union enum\" is clearly invalid, but we're still\nparsing tentatively and we parse everything up to the ;, and then\nthrow away the underlying type.  We parsed everything because we were\ntricked into parsing an enum-specifier in an enum-base of another\nenum-specifier!  Not good.\n\nSince the grammar for enum-base doesn't allow a defining-type-specifier,\nonly a type-specifier, we should set type_definition_forbidden_message\nwhich fixes all the problems in this PR.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/96380\n\t* parser.c (cp_parser_enum_specifier): Don't allow defining\n\ttypes in enum-base.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/96380\n\t* g++.dg/cpp0x/enum_base4.C: New test.\n\t* g++.dg/cpp0x/enum_base5.C: New test.", "tree": {"sha": "881ad5ea0e5117f0482010a7cc915d94b6ed150c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/881ad5ea0e5117f0482010a7cc915d94b6ed150c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/001c63d15e31bc0a1545426d889a0b9f671b4961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/001c63d15e31bc0a1545426d889a0b9f671b4961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/001c63d15e31bc0a1545426d889a0b9f671b4961", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/001c63d15e31bc0a1545426d889a0b9f671b4961/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9fc9d075f303b50c77c7b497b2982fe6dc7f5c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9fc9d075f303b50c77c7b497b2982fe6dc7f5c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9fc9d075f303b50c77c7b497b2982fe6dc7f5c1"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "fba516efa23d5e74d59bf9f36e825bdce3fe9b54", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/001c63d15e31bc0a1545426d889a0b9f671b4961/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/001c63d15e31bc0a1545426d889a0b9f671b4961/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=001c63d15e31bc0a1545426d889a0b9f671b4961", "patch": "@@ -19942,6 +19942,10 @@ cp_parser_enum_specifier (cp_parser* parser)\n       /* Consume the `:'.  */\n       cp_lexer_consume_token (parser->lexer);\n \n+      auto tdf\n+\t= make_temp_override (parser->type_definition_forbidden_message,\n+\t\t\t      G_(\"types may not be defined in enum-base\"));\n+\n       /* Parse the type-specifier-seq.  */\n       cp_parser_type_specifier_seq (parser, CP_PARSER_FLAGS_NONE,\n \t\t\t\t    /*is_declaration=*/false,"}, {"sha": "b3015256386abc71f4b61818177ed5ffa0bc08eb", "filename": "gcc/testsuite/g++.dg/cpp0x/enum_base4.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/001c63d15e31bc0a1545426d889a0b9f671b4961/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum_base4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/001c63d15e31bc0a1545426d889a0b9f671b4961/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum_base4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum_base4.C?ref=001c63d15e31bc0a1545426d889a0b9f671b4961", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/96380\n+// { dg-do compile { target c++11 } }\n+\n+extern const int a, b;\n+enum struct c;\n+template <class>\n+enum struct c : union enum struct c { e = b, f = a };  // { dg-error \"types may not be defined|expected|elaborated-type-specifier\" }\n+enum class c {};"}, {"sha": "c01e857e612e224ddb041a0d69ce6be6a9d313b3", "filename": "gcc/testsuite/g++.dg/cpp0x/enum_base5.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/001c63d15e31bc0a1545426d889a0b9f671b4961/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum_base5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/001c63d15e31bc0a1545426d889a0b9f671b4961/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum_base5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum_base5.C?ref=001c63d15e31bc0a1545426d889a0b9f671b4961", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/96380\n+// { dg-do compile { target c++11 } }\n+\n+extern const int a, b;\n+enum struct c;\n+template <class>\n+enum struct c : union enum struct c { e = b, f = a }; // { dg-error \"types may not be defined|expected|elaborated-type-specifier\" }"}]}