{"sha": "1d0d98f38ca9701e45ddc93b8138b06feb3fa513", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQwZDk4ZjM4Y2E5NzAxZTQ1ZGRjOTNiODEzOGIwNmZlYjNmYTUxMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-03-12T03:14:57Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-03-12T03:14:57Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r450", "tree": {"sha": "903fde98c4f2f0a92db9bc603357a0cbabc43ace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/903fde98c4f2f0a92db9bc603357a0cbabc43ace"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d0d98f38ca9701e45ddc93b8138b06feb3fa513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d0d98f38ca9701e45ddc93b8138b06feb3fa513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d0d98f38ca9701e45ddc93b8138b06feb3fa513", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d0d98f38ca9701e45ddc93b8138b06feb3fa513/comments", "author": null, "committer": null, "parents": [{"sha": "e5df1ea311c0d94c821ae500415315ee2e7ca34a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5df1ea311c0d94c821ae500415315ee2e7ca34a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5df1ea311c0d94c821ae500415315ee2e7ca34a"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "3d568d96487051dea2ebe52732aa0aa4dc08e9cb", "filename": "gcc/reload1.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d0d98f38ca9701e45ddc93b8138b06feb3fa513/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d0d98f38ca9701e45ddc93b8138b06feb3fa513/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=1d0d98f38ca9701e45ddc93b8138b06feb3fa513", "patch": "@@ -2183,7 +2183,9 @@ set_label_offsets (x, insn, initial_p)\n \t    {\n \t      reg_eliminate[i].offset = reg_eliminate[i].previous_offset\n \t\t= offsets_at[CODE_LABEL_NUMBER (x)][i];\n-\t      if (reg_eliminate[i].offset != reg_eliminate[i].initial_offset)\n+\t      if (reg_eliminate[i].can_eliminate\n+\t\t  && (reg_eliminate[i].offset\n+\t\t      != reg_eliminate[i].initial_offset))\n \t\tnum_not_at_initial_offset++;\n \t    }\n \t}\n@@ -3242,7 +3244,9 @@ reload_as_needed (first, live_known)\n \t    {\n \t      reg_eliminate[i].offset = reg_eliminate[i].previous_offset\n \t\t= offsets_at[CODE_LABEL_NUMBER (insn)][i];\n-\t      if (reg_eliminate[i].offset != reg_eliminate[i].initial_offset)\n+\t      if (reg_eliminate[i].can_eliminate\n+\t\t  && (reg_eliminate[i].offset\n+\t\t      != reg_eliminate[i].initial_offset))\n \t\tnum_not_at_initial_offset++;\n \t    }\n \t}"}]}