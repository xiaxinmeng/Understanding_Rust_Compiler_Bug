{"sha": "704ccefb576dcf30b27a4b9bdacb6e15902f5307", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA0Y2NlZmI1NzZkY2YzMGIyN2E0YjliZGFjYjZlMTU5MDJmNTMwNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-04T11:18:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-04T11:18:21Z"}, "message": "debug: Fix another vector DECL_MODE ICE [PR98100]\n\nThe PR88587 fix changes DECL_MODE of vars with vector type during inlining/cloning\nwhen the vars are copied, so that their DECL_MODE matches their TYPE_MODE in\nthe new function.  Unfortunately, the following testcase still ICEs, the var\nisn't really used in the new function and so it isn't copied, but becomes\njust a nonlocalized var.  So we can't adjust its DECL_MODE because it\nappears in multiple functions and needs different modes in between them.\nThe following patch changes the DEBUG_INSN creation to use TYPE_MODE instead\nof DECL_MODE for vars with vector types.\n\n2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/98100\n\t* cfgexpand.c (expand_gimple_basic_block): For vars with\n\tvector type, use TYPE_MODE rather than DECL_MODE.\n\n\t* gcc.target/i386/pr98100.c: New test.", "tree": {"sha": "38b2ffbf0c0075b1911f10d2bb8b7f965adbbf60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38b2ffbf0c0075b1911f10d2bb8b7f965adbbf60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/704ccefb576dcf30b27a4b9bdacb6e15902f5307", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/704ccefb576dcf30b27a4b9bdacb6e15902f5307", "html_url": "https://github.com/Rust-GCC/gccrs/commit/704ccefb576dcf30b27a4b9bdacb6e15902f5307", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/704ccefb576dcf30b27a4b9bdacb6e15902f5307/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65312dfc64744405326a9f4c243f1b4c8f21de1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65312dfc64744405326a9f4c243f1b4c8f21de1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65312dfc64744405326a9f4c243f1b4c8f21de1b"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "f7b40911c441bd2e6d258da93e7e1b27eddf49ba", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704ccefb576dcf30b27a4b9bdacb6e15902f5307/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704ccefb576dcf30b27a4b9bdacb6e15902f5307/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=704ccefb576dcf30b27a4b9bdacb6e15902f5307", "patch": "@@ -5919,7 +5919,7 @@ expand_gimple_basic_block (basic_block bb, bool disable_tail_calls)\n \t\t\t  && !target_for_debug_bind (var))\n \t\t\tgoto delink_debug_stmt;\n \n-\t\t      if (DECL_P (var))\n+\t\t      if (DECL_P (var) && !VECTOR_TYPE_P (TREE_TYPE (var)))\n \t\t\tmode = DECL_MODE (var);\n \t\t      else\n \t\t\tmode = TYPE_MODE (TREE_TYPE (var));\n@@ -5936,7 +5936,10 @@ expand_gimple_basic_block (basic_block bb, bool disable_tail_calls)\n \n \t\t      value = gimple_debug_source_bind_get_value (stmt);\n \n-\t\t      mode = DECL_MODE (var);\n+\t\t      if (!VECTOR_TYPE_P (TREE_TYPE (var)))\n+\t\t\tmode = DECL_MODE (var);\n+\t\t      else\n+\t\t\tmode = TYPE_MODE (TREE_TYPE (var));\n \n \t\t      val = gen_rtx_VAR_LOCATION (mode, var, (rtx)value,\n \t\t\t\t\t\t  VAR_INIT_STATUS_UNINITIALIZED);"}, {"sha": "4deda1a498f37c9fda7023951bb159cc85af4430", "filename": "gcc/testsuite/gcc.target/i386/pr98100.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704ccefb576dcf30b27a4b9bdacb6e15902f5307/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98100.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704ccefb576dcf30b27a4b9bdacb6e15902f5307/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98100.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98100.c?ref=704ccefb576dcf30b27a4b9bdacb6e15902f5307", "patch": "@@ -0,0 +1,9 @@\n+/* PR target/98100 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -fvar-tracking-assignments -g0\" } */\n+\n+__attribute__((target_clones(\"default\",\"avx2\"))) void\n+foo ()\n+{\n+  __attribute__((__vector_size__(8 * sizeof(int)))) int b = {};\n+}"}]}