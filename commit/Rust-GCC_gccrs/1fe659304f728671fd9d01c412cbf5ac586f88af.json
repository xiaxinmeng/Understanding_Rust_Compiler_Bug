{"sha": "1fe659304f728671fd9d01c412cbf5ac586f88af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZlNjU5MzA0ZjcyODY3MWZkOWQwMWM0MTJjYmY1YWM1ODZmODhhZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-08-04T08:19:36Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-08-04T08:19:36Z"}, "message": "* jump.c (delete_insn): Delete the addr_vec when deleting a tablejump.\n\nFrom-SVN: r28492", "tree": {"sha": "c674959efd5afb82fb5f3be34d1ab45cf5ac2321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c674959efd5afb82fb5f3be34d1ab45cf5ac2321"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fe659304f728671fd9d01c412cbf5ac586f88af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fe659304f728671fd9d01c412cbf5ac586f88af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fe659304f728671fd9d01c412cbf5ac586f88af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fe659304f728671fd9d01c412cbf5ac586f88af/comments", "author": null, "committer": null, "parents": [{"sha": "dbd83e11788d86dbfd159a804efd25709527daee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd83e11788d86dbfd159a804efd25709527daee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbd83e11788d86dbfd159a804efd25709527daee"}], "stats": {"total": 48, "additions": 34, "deletions": 14}, "files": [{"sha": "a28bc6953d8b7d69fef18e29256b27fe24939600", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fe659304f728671fd9d01c412cbf5ac586f88af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fe659304f728671fd9d01c412cbf5ac586f88af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1fe659304f728671fd9d01c412cbf5ac586f88af", "patch": "@@ -1,3 +1,7 @@\n+Wed Aug  4 02:15:32 1999  Richard Henderson <rth@cygnus.com>\n+\n+\t* jump.c (delete_insn): Delete the addr_vec when deleting a tablejump.\n+\n Wed Aug  4 01:48:08 1999  Jim Kingdon  <http://developer.redhat.com>\n \n \t* global.c: Fix comment."}, {"sha": "da81b5a6d4469adbaa103fd837b83499f96f774a", "filename": "gcc/jump.c", "status": "modified", "additions": 30, "deletions": 14, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fe659304f728671fd9d01c412cbf5ac586f88af/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fe659304f728671fd9d01c412cbf5ac586f88af/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=1fe659304f728671fd9d01c412cbf5ac586f88af", "patch": "@@ -4017,20 +4017,36 @@ delete_insn (insn)\n      and delete the label if it is now unused.  */\n \n   if (GET_CODE (insn) == JUMP_INSN && JUMP_LABEL (insn))\n-    if (--LABEL_NUSES (JUMP_LABEL (insn)) == 0)\n-      {\n-\t/* This can delete NEXT or PREV,\n-\t   either directly if NEXT is JUMP_LABEL (INSN),\n-\t   or indirectly through more levels of jumps.  */\n-\tdelete_insn (JUMP_LABEL (insn));\n-\t/* I feel a little doubtful about this loop,\n-\t   but I see no clean and sure alternative way\n-\t   to find the first insn after INSN that is not now deleted.\n-\t   I hope this works.  */\n-\twhile (next && INSN_DELETED_P (next))\n-\t  next = NEXT_INSN (next);\n-\treturn next;\n-      }\n+    {\n+      rtx lab = JUMP_LABEL (insn), lab_next;\n+\n+      if (--LABEL_NUSES (lab) == 0)\n+\t{\n+\t  /* This can delete NEXT or PREV,\n+\t     either directly if NEXT is JUMP_LABEL (INSN),\n+\t     or indirectly through more levels of jumps.  */\n+\t  delete_insn (lab);\n+\n+\t  /* I feel a little doubtful about this loop,\n+\t     but I see no clean and sure alternative way\n+\t     to find the first insn after INSN that is not now deleted.\n+\t     I hope this works.  */\n+\t  while (next && INSN_DELETED_P (next))\n+\t    next = NEXT_INSN (next);\n+\t  return next;\n+\t}\n+      else if ((lab_next = next_nonnote_insn (lab)) != NULL\n+\t       && GET_CODE (lab_next) == JUMP_INSN\n+\t       && (GET_CODE (PATTERN (lab_next)) == ADDR_VEC\n+\t\t   || GET_CODE (PATTERN (lab_next)) == ADDR_DIFF_VEC))\n+\t{\n+\t  /* If we're deleting the tablejump, delete the dispatch table.\n+\t     We may not be able to kill the label immediately preceeding\n+\t     just yet, as it might be referenced in code leading up to\n+\t     the tablejump.  */\n+\t  delete_insn (lab_next);\n+\t}\n+    }\n \n   /* Likewise if we're deleting a dispatch table.  */\n "}]}