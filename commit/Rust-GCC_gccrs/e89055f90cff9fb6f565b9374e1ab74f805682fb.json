{"sha": "e89055f90cff9fb6f565b9374e1ab74f805682fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg5MDU1ZjkwY2ZmOWZiNmY1NjViOTM3NGUxYWI3NGY4MDU2ODJmYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-09T20:43:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-10T04:06:55Z"}, "message": "c++: pack in base-specifier in lambda [PR100006]\n\nNormally cp_parser_base_clause prevents unexpanded packs, but in a lambda\ncheck_for_bare_parameter_packs allows it.  Then we weren't finding the\npack when scanning the lambda body.\n\nThis doesn't fix a valid variant like\n\n  template <class... Ts> void sink (Ts&&...);\n  template <class... Ts>\n  void f() {\n    sink ([] { struct S : Ts { }; }...);\n  }\n  int main() {\n    f<int>();\n  }\n\nbut that's a much bigger project.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/100006\n\t* pt.c (find_parameter_packs_r) [TAG_DEFN]: Look into bases.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/100006\n\t* g++.dg/cpp0x/lambda/lambda-variadic13.C: New test.", "tree": {"sha": "364d0e0c09c1c61b39d4fd657fa515cc033354a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/364d0e0c09c1c61b39d4fd657fa515cc033354a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e89055f90cff9fb6f565b9374e1ab74f805682fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e89055f90cff9fb6f565b9374e1ab74f805682fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e89055f90cff9fb6f565b9374e1ab74f805682fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e89055f90cff9fb6f565b9374e1ab74f805682fb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3115aba8d856faadaab5c79bc4823a39ebc21bb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3115aba8d856faadaab5c79bc4823a39ebc21bb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3115aba8d856faadaab5c79bc4823a39ebc21bb2"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "b328330038a421a75a45ba9049a5ecc83af4009e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e89055f90cff9fb6f565b9374e1ab74f805682fb/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e89055f90cff9fb6f565b9374e1ab74f805682fb/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e89055f90cff9fb6f565b9374e1ab74f805682fb", "patch": "@@ -4061,6 +4061,15 @@ find_parameter_packs_r (tree *tp, int *walk_subtrees, void* data)\n       *walk_subtrees = 0;\n       return NULL_TREE;\n \n+    case TAG_DEFN:\n+      /* Local class, need to look through the whole definition.  */\n+      t = TREE_TYPE (t);\n+      if (CLASS_TYPE_P (t))\n+\tfor (tree bb : BINFO_BASE_BINFOS (TYPE_BINFO (t)))\n+\t  cp_walk_tree (&BINFO_TYPE (bb), &find_parameter_packs_r,\n+\t\t\tppd, ppd->visited);\n+      return NULL_TREE;\n+\n     default:\n       return NULL_TREE;\n     }"}, {"sha": "ac4e631ebb516572d6bfe78b49db4d4dceb76a92", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-variadic13.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e89055f90cff9fb6f565b9374e1ab74f805682fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-variadic13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e89055f90cff9fb6f565b9374e1ab74f805682fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-variadic13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-variadic13.C?ref=e89055f90cff9fb6f565b9374e1ab74f805682fb", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/100006\n+// { dg-do compile { target c++14 } }\n+\n+template <class... Ts>\n+void f() {\n+  [] { struct S : Ts { }; };\t// { dg-error \"not expanded\" }\n+}\n+\n+int main() {\n+  f<>();\n+}"}]}