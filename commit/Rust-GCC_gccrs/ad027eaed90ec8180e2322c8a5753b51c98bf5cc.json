{"sha": "ad027eaed90ec8180e2322c8a5753b51c98bf5cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQwMjdlYWVkOTBlYzgxODBlMjMyMmM4YTU3NTNiNTFjOThiZjVjYw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2000-05-06T11:14:18Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2000-05-06T11:14:18Z"}, "message": "* arm.h (SPECIAL_MODE_PREDICATES): Define.\n\nFrom-SVN: r33724", "tree": {"sha": "3f20b20937e1aa16e86eadd275a6773e1a5cf27f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f20b20937e1aa16e86eadd275a6773e1a5cf27f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad027eaed90ec8180e2322c8a5753b51c98bf5cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad027eaed90ec8180e2322c8a5753b51c98bf5cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad027eaed90ec8180e2322c8a5753b51c98bf5cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad027eaed90ec8180e2322c8a5753b51c98bf5cc/comments", "author": null, "committer": null, "parents": [{"sha": "41e3f998a39dd520a16b9061be97edc966272f46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e3f998a39dd520a16b9061be97edc966272f46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41e3f998a39dd520a16b9061be97edc966272f46"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "8a11322082f89657e10ad6c404c122f55fdbb4ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad027eaed90ec8180e2322c8a5753b51c98bf5cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad027eaed90ec8180e2322c8a5753b51c98bf5cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad027eaed90ec8180e2322c8a5753b51c98bf5cc", "patch": "@@ -10,6 +10,8 @@\n \n \t* arm.md (call_value_symbol): Remove predicate from op2.\n \n+\t* arm.h (SPECIAL_MODE_PREDICATES): Define.\n+\t\n Sat May  6 06:25:56 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* expr.c (get_subtarget): New function."}, {"sha": "0bbf627d92da2f81c35c1c63c1b217ebaabb1424", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad027eaed90ec8180e2322c8a5753b51c98bf5cc/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad027eaed90ec8180e2322c8a5753b51c98bf5cc/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=ad027eaed90ec8180e2322c8a5753b51c98bf5cc", "patch": "@@ -2874,4 +2874,11 @@ extern int making_const_table;\n   {\"logical_binary_operator\", {AND, IOR, XOR}},\t\t\t\t\\\n   {\"dominant_cc_register\", {REG}},\n \n+/* Define this if you have special predicates that know special things\n+   about modes.  Genrecog will warn about certain forms of\n+   match_operand without a mode; if the operand predicate is listed in\n+   SPECIAL_MODE_PREDICATES, the warning will be suppressed. */\n+#define SPECIAL_MODE_PREDICATES\t\t\t\\\n+ \"cc_register\", \"dominant_cc_register\",\n+\n #endif /* __ARM_H__ */"}]}