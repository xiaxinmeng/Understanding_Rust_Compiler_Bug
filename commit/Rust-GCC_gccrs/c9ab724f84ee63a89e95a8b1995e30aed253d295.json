{"sha": "c9ab724f84ee63a89e95a8b1995e30aed253d295", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlhYjcyNGY4NGVlNjNhODllOTVhOGIxOTk1ZTMwYWVkMjUzZDI5NQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-11-13T12:26:23Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-11-13T12:26:23Z"}, "message": "re PR ipa/68311 (gcc/ipa-icf.c:3041: possible sequence point error ?)\n\nFix PR ipa/68311\n\n\tPR ipa/68311\n\t* ipa-icf.c (sem_item_optimizer::traverse_congruence_split):\n\tReplace ctor with auto_vec and initialization in a loop.\n\nFrom-SVN: r230311", "tree": {"sha": "86d4856f80e442f55887223218ce9abb13b107aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86d4856f80e442f55887223218ce9abb13b107aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9ab724f84ee63a89e95a8b1995e30aed253d295", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ab724f84ee63a89e95a8b1995e30aed253d295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9ab724f84ee63a89e95a8b1995e30aed253d295", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ab724f84ee63a89e95a8b1995e30aed253d295/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52eab3788dee949b86a46839508b60f54e4329b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52eab3788dee949b86a46839508b60f54e4329b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52eab3788dee949b86a46839508b60f54e4329b8"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "fde5bef652257c70c6e257a53f16668b9232440a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ab724f84ee63a89e95a8b1995e30aed253d295/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ab724f84ee63a89e95a8b1995e30aed253d295/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9ab724f84ee63a89e95a8b1995e30aed253d295", "patch": "@@ -1,3 +1,9 @@\n+2015-11-13  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/68311\n+\t* ipa-icf.c (sem_item_optimizer::traverse_congruence_split):\n+\tReplace ctor with auto_vec and initialization in a loop.\n+\n 2015-11-13  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/68306"}, {"sha": "bf1acae2310ad85279b2526e74543ba5d1954d34", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ab724f84ee63a89e95a8b1995e30aed253d295/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ab724f84ee63a89e95a8b1995e30aed253d295/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=c9ab724f84ee63a89e95a8b1995e30aed253d295", "patch": "@@ -3046,7 +3046,9 @@ sem_item_optimizer::traverse_congruence_split (congruence_class * const &cls,\n \n   if (popcount > 0 && popcount < cls->members.length ())\n     {\n-      congruence_class* newclasses[2] = { new congruence_class (class_id++), new congruence_class (class_id++) };\n+      auto_vec <congruence_class *, 2> newclasses;\n+      newclasses.quick_push (new congruence_class (class_id++));\n+      newclasses.quick_push (new congruence_class (class_id++));\n \n       for (unsigned int i = 0; i < cls->members.length (); i++)\n \t{"}]}