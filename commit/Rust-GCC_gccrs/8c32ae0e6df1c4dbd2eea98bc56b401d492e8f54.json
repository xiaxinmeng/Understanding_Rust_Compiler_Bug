{"sha": "8c32ae0e6df1c4dbd2eea98bc56b401d492e8f54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMzMmFlMGU2ZGYxYzRkYmQyZWVhOThiYzU2YjQwMWQ0OTJlOGY1NA==", "commit": {"author": {"name": "Markus Trippelsdorf", "email": "markus@trippelsdorf.de", "date": "2016-11-16T11:21:42Z"}, "committer": {"name": "Markus Trippelsdorf", "email": "trippels@gcc.gnu.org", "date": "2016-11-16T11:21:42Z"}, "message": "Fix PR78294 - thread sanitizer broken when using ld.gold\n\nWhen one uses ld.gold to build gcc, the thread sanitizer doesn't work,\nbecause gold is more conservative when applying TLS relaxations than\nld.bfd. In this case a missing initial-exec attribute on a declaration\ncauses gcc to assume the general dynamic model. With ld.bfd this gets\nrelaxed to initial exec when linking the shared library, so the missing\nattribute doesn't matter. But ld.gold doesn't perform this optimization\nand this leads to crashes on tsan instrumented binaries.\n\nSee: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78294\nand: https://sourceware.org/bugzilla/show_bug.cgi?id=20805\n\nThe fix is easy, just add the missing attribute.\n\n  PR sanitizer/78294\n  * tsan/tsan_rtl.cc: Add missing attribute.\n\nFrom-SVN: r242480", "tree": {"sha": "c9e26a39979be67a36918635a65bd47730002ee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9e26a39979be67a36918635a65bd47730002ee0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c32ae0e6df1c4dbd2eea98bc56b401d492e8f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c32ae0e6df1c4dbd2eea98bc56b401d492e8f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c32ae0e6df1c4dbd2eea98bc56b401d492e8f54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c32ae0e6df1c4dbd2eea98bc56b401d492e8f54/comments", "author": null, "committer": null, "parents": [{"sha": "949cc52d0c99dd5fde0c48d9853e25ca55a73193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949cc52d0c99dd5fde0c48d9853e25ca55a73193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/949cc52d0c99dd5fde0c48d9853e25ca55a73193"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "215c44465bc5866902095b774859592e69948f0e", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c32ae0e6df1c4dbd2eea98bc56b401d492e8f54/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c32ae0e6df1c4dbd2eea98bc56b401d492e8f54/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=8c32ae0e6df1c4dbd2eea98bc56b401d492e8f54", "patch": "@@ -1,3 +1,8 @@\n+2016-11-16  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR sanitizer/78294\n+\t* tsan/tsan_rtl.cc: Add missing attribute.\n+\n 2016-11-16  Maxim Ostapenko  <m.ostapenko@samsung.com>\n \n \t* LOCAL_PATCHES: New file."}, {"sha": "5be28ce5502e442e54b11a5fcd1b19e6ac30fcc5", "filename": "libsanitizer/tsan/tsan_rtl.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c32ae0e6df1c4dbd2eea98bc56b401d492e8f54/libsanitizer%2Ftsan%2Ftsan_rtl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c32ae0e6df1c4dbd2eea98bc56b401d492e8f54/libsanitizer%2Ftsan%2Ftsan_rtl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2Ftsan_rtl.cc?ref=8c32ae0e6df1c4dbd2eea98bc56b401d492e8f54", "patch": "@@ -43,6 +43,7 @@ extern \"C\" void __tsan_resume() {\n namespace __tsan {\n \n #if !SANITIZER_GO && !SANITIZER_MAC\n+  __attribute__((tls_model(\"initial-exec\")))\n THREADLOCAL char cur_thread_placeholder[sizeof(ThreadState)] ALIGNED(64);\n #endif\n static char ctx_placeholder[sizeof(Context)] ALIGNED(64);"}]}