{"sha": "160b7bc403f3642b1f114969ecbea5b580ad0fb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYwYjdiYzQwM2YzNjQyYjFmMTE0OTY5ZWNiZWE1YjU4MGFkMGZiNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-12T19:52:41Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-12T19:52:41Z"}, "message": "(ASM_OUTPUT_INTERNAL_LABEL): Prefix labels with \"L%\".\n\n(ASM_GENERATE_INTERNAL_LABEL, ASM_OUTPUT_CASE_LABEL): Likewise.\n(ASM_OUTPUT_ADDR_VEC_ELT, ASM_OUTPUT_ADDR_DIFF_ELT): Likewise.\n\nFrom-SVN: r13142", "tree": {"sha": "7d9c8cb288245599c654cb4728afe931aedad68c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d9c8cb288245599c654cb4728afe931aedad68c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/160b7bc403f3642b1f114969ecbea5b580ad0fb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/160b7bc403f3642b1f114969ecbea5b580ad0fb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/160b7bc403f3642b1f114969ecbea5b580ad0fb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/160b7bc403f3642b1f114969ecbea5b580ad0fb7/comments", "author": null, "committer": null, "parents": [{"sha": "9a3b49acbc192d01f3138409547ba438607812a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3b49acbc192d01f3138409547ba438607812a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a3b49acbc192d01f3138409547ba438607812a5"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "b4db771211964dea692472a6eda1f8c1d266869f", "filename": "gcc/config/m68k/mot3300.h", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/160b7bc403f3642b1f114969ecbea5b580ad0fb7/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/160b7bc403f3642b1f114969ecbea5b580ad0fb7/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300.h?ref=160b7bc403f3642b1f114969ecbea5b580ad0fb7", "patch": "@@ -520,25 +520,15 @@ do { long l;\t\t\t\t\t\\\n    This is suitable for output with `assemble_name'.  */\n \n #undef ASM_GENERATE_INTERNAL_LABEL\n-#ifndef USE_GAS\n-#define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\\\n-  sprintf ((LABEL), \"%s%%%d\", (PREFIX), (NUM))\n-#else /* USE_GAS */\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\\\n-  sprintf ((LABEL), \".%s%d\", (PREFIX), (NUM))\n-#endif /* USE_GAS */\n+  sprintf ((LABEL), \"%s%s%d\", LOCAL_LABEL_PREFIX, (PREFIX), (NUM))\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */\n \n #undef ASM_OUTPUT_INTERNAL_LABEL\n-#ifndef USE_GAS\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-    fprintf (FILE, \"%s%%%d:\\n\", PREFIX, NUM)\n-#else /* USE_GAS */\n #define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-    fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM)\n-#endif /* USE_GAS */\n+    asm_fprintf (FILE, \"%L%s%d:\\n\", PREFIX, NUM)\n \n /* The prefix to add to user-visible assembler symbols. */\n \n@@ -548,21 +538,25 @@ do { long l;\t\t\t\t\t\\\n /* This is how to output an element of a case-vector that is absolute.\n    (The 68000 does not use such vectors,\n    but we must define this macro anyway.)  */\n+/* The L after the local prefix is the \"L\" prefix for the normal labels\n+   generated by gcc; why are ASM_OUTPUT_ADDR_VEC_ELT and\n+   ASM_OUTPUT_ADDR_DIFF_ELT not called with a PREFIX parameter, like\n+   ASM_OUTPUT_INTERNAL_LABEL ? */\n \n #undef ASM_OUTPUT_ADDR_VEC_ELT\n #define ASM_OUTPUT_ADDR_VEC_ELT(FILE, VALUE)\t\\\n-    asm_fprintf (FILE, \"\\t%s %L%d\\n\", ASM_LONG, (VALUE))\n+    asm_fprintf (FILE, \"\\t%s %LL%d\\n\", ASM_LONG, (VALUE))\n \n /* This is how to output an element of a case-vector that is relative.  */\n \n #undef ASM_OUTPUT_ADDR_DIFF_ELT\n #define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, VALUE, REL)\t\\\n-    asm_fprintf (FILE, \"\\t%s %L%d-%L%d\\n\", ASM_SHORT, (VALUE), (REL))\n+    asm_fprintf (FILE, \"\\t%s %LL%d-%LL%d\\n\", ASM_SHORT, (VALUE), (REL))\n \n #ifndef USE_GAS\n \n #define ASM_OUTPUT_CASE_LABEL(FILE,PREFIX,NUM,TABLE)\t\t\t\\\n-    fprintf (FILE, \"\\tswbeg &%d\\n%s%%%d:\\n\",\t\t\t\t\\\n+    asm_fprintf (FILE, \"\\tswbeg &%d\\n%L%s%d:\\n\",\t\t\t\\\n \t     XVECLEN (PATTERN (TABLE), 1), (PREFIX), (NUM))\n \n /* sysV68 as cannot handle LD%n(%pc,%reg) */ "}]}