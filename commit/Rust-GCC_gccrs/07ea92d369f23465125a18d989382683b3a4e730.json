{"sha": "07ea92d369f23465125a18d989382683b3a4e730", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdlYTkyZDM2OWYyMzQ2NTEyNWExOGQ5ODkzODI2ODNiM2E0ZTczMA==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2004-10-08T11:44:20Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2004-10-08T11:44:20Z"}, "message": "sh.md (tls_global_dynamic): Use MEM pattern for the first argument of CALL.\n\n\t* config/sh/sh.md (tls_global_dynamic): Use MEM pattern for the\n\tfirst argument of CALL.\n\t(tls_local_dynamic): Likewise.\n\n\t* config/sh/sh.md (prefetch_media, prefetch_i4): New insns.\n\t(prefetch): Convert to expander.\n\nFrom-SVN: r88747", "tree": {"sha": "61da05b419ff46a9c562b49f7c61533e3f99221d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61da05b419ff46a9c562b49f7c61533e3f99221d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07ea92d369f23465125a18d989382683b3a4e730", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ea92d369f23465125a18d989382683b3a4e730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07ea92d369f23465125a18d989382683b3a4e730", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ea92d369f23465125a18d989382683b3a4e730/comments", "author": null, "committer": null, "parents": [{"sha": "085d4f558791ab2ddc33d676e610de88bb98b0b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/085d4f558791ab2ddc33d676e610de88bb98b0b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/085d4f558791ab2ddc33d676e610de88bb98b0b5"}], "stats": {"total": 55, "additions": 47, "deletions": 8}, "files": [{"sha": "8055ac68be1a887748295bd838ad50a4250ba2cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ea92d369f23465125a18d989382683b3a4e730/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ea92d369f23465125a18d989382683b3a4e730/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07ea92d369f23465125a18d989382683b3a4e730", "patch": "@@ -1,3 +1,14 @@\n+2004-10-08  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/sh.md (prefetch_media, prefetch_i4): New insns.\n+\t(prefetch): Convert to expander.\n+\n+2004-10-08  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/sh.md (tls_global_dynamic): Use MEM pattern for the\n+\tfirst argument of CALL.\n+\t(tls_local_dynamic): Likewise.\n+\n 2004-10-08  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* c-typeck.c (enum impl_conv): New."}, {"sha": "dd9f216b587649c9e75e02d2457eb308367ed589", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 36, "deletions": 8, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ea92d369f23465125a18d989382683b3a4e730/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ea92d369f23465125a18d989382683b3a4e730/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=07ea92d369f23465125a18d989382683b3a4e730", "patch": "@@ -6869,8 +6869,8 @@\n \n (define_insn \"tls_global_dynamic\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&z\")\n-\t(call (unspec:SI [(match_operand:SI 1 \"\" \"\")]\n-\t\t\t  UNSPEC_TLSGD)\n+\t(call (mem:SI (unspec:SI [(match_operand:SI 1 \"\" \"\")]\n+\t\t\t\t  UNSPEC_TLSGD))\n \t      (const_int 0)))\n    (use (reg:PSI FPSCR_REG))\n    (use (reg:SI PIC_REG))\n@@ -6898,8 +6898,8 @@ mov.l\\\\t1f,r4\\\\n\\\\\n \n (define_insn \"tls_local_dynamic\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&z\")\n-\t(call (unspec:SI [(match_operand:SI 1 \"\" \"\")]\n-\t\t\t  UNSPEC_TLSLDM)\n+\t(call (mem:SI (unspec:SI [(match_operand:SI 1 \"\" \"\")]\n+\t\t\t\t  UNSPEC_TLSLDM))\n \t      (const_int 0)))\n    (use (reg:PSI FPSCR_REG))\n    (use (reg:SI PIC_REG))\n@@ -10951,17 +10951,45 @@ mov.l\\\\t1f,r0\\\\n\\\\\n   \"byterev\t%1, %0\"\n   [(set_attr \"type\" \"arith_media\")])\n \n-(define_insn \"prefetch\"\n+(define_insn \"prefetch_media\"\n   [(prefetch (match_operand:QI 0 \"address_operand\" \"p\")\n              (match_operand:SI 1 \"const_int_operand\" \"n\")\n              (match_operand:SI 2 \"const_int_operand\" \"n\"))]\n-  \"TARGET_SHMEDIA || TARGET_HARD_SH4\"\n+  \"TARGET_SHMEDIA\"\n   \"*\n {\n-  if (TARGET_HARD_SH4)\n-    return \\\"pref @%0\\\";\n   operands[0] = gen_rtx_MEM (QImode, operands[0]);\n   output_asm_insn (\\\"ld%M0.b    %m0,r63\\\", operands);\n   return \\\"\\\";\n }\"\n   [(set_attr \"type\" \"other\")])\n+\n+(define_insn \"prefetch_i4\"\n+  [(prefetch (match_operand:SI 0 \"register_operand\" \"r\")\n+             (match_operand:SI 1 \"const_int_operand\" \"n\")\n+             (match_operand:SI 2 \"const_int_operand\" \"n\"))]\n+  \"TARGET_HARD_SH4\"\n+  \"*\n+{\n+  return \\\"pref @%0\\\";\n+}\"\n+  [(set_attr \"type\" \"other\")])\n+\n+(define_expand \"prefetch\"\n+  [(prefetch (match_operand:QI 0 \"address_operand\" \"p\")\n+             (match_operand:SI 1 \"const_int_operand\" \"n\")\n+             (match_operand:SI 2 \"const_int_operand\" \"n\"))]\n+  \"TARGET_SHMEDIA || TARGET_HARD_SH4\"\n+  \"\n+{\n+  if (TARGET_HARD_SH4 && ! register_operand (operands[0], SImode))\n+    {\n+      rtx reg = gen_reg_rtx (SImode);\n+      emit_move_insn (reg, operands[0]);\n+      operands[0] = reg;\n+    }\n+\n+  emit_insn ((TARGET_SHMEDIA ? gen_prefetch_media : gen_prefetch_i4)\n+\t     (operands[0], operands[1], operands[2]));\n+  DONE;\n+}\")"}]}