{"sha": "31387e76090007b12da82d7ef11b042e88df0ba5", "node_id": "C_kwDOANBUbNoAKDMxMzg3ZTc2MDkwMDA3YjEyZGE4MmQ3ZWYxMWIwNDJlODhkZjBiYTU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-02-18T14:43:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-18T14:43:08Z"}, "message": "Merge #944\n\n944: parser: Add `clear_errors()` method r=CohenArthur a=CohenArthur\n\nClears all errors from the error table so we can reuse the parser in later situations. I'm unsure whether or not the method should also emit all of the errors if present? In that case, we might want to rename it or add another wrapper that emits then clears\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "f17c983fd3f00f44830ee9ec9cc8a00894e3fdc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f17c983fd3f00f44830ee9ec9cc8a00894e3fdc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31387e76090007b12da82d7ef11b042e88df0ba5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiD7B8CRBK7hj4Ov3rIwAA92YIAEsSTy3fesO2hUECvdC46RSH\nY4zqUnGqHPGZAHNUeoEYc6QBYFUyzBidME9s+Nc3hLi578jBQbZSdDrz/7/NYrW2\n6IldLs9MNwJ0+hL1Ed+6h73UVlfW5dQB4gS3SJANV0EE2z4ultrtIUgCGJopYG9/\nxF8j3BduY+YRY8lxQJ4+gPZc9G+l2hvQT3Dy0ACh9uXydFoa2QmpSwwwBQZ4liqA\nQ5dpIHolLGPV2CNiG1V1robMRqxyUQlaCGLD95dQDxY09t1AYyKi9O0X7ZAYVPBX\nc/7iABR0oKpC9lgphUj75UoVK+defH5C/O9p28ZhE0jpz4BPF7+jLIf9227EsUw=\n=yR8p\n-----END PGP SIGNATURE-----\n", "payload": "tree f17c983fd3f00f44830ee9ec9cc8a00894e3fdc2\nparent 425905b49ae04bf0e00be95caa01fd6d2cc8e74c\nparent 5f35a8c63780f5033c168d3c32bf68d203695e8d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1645195388 +0000\ncommitter GitHub <noreply@github.com> 1645195388 +0000\n\nMerge #944\n\n944: parser: Add `clear_errors()` method r=CohenArthur a=CohenArthur\n\nClears all errors from the error table so we can reuse the parser in later situations. I'm unsure whether or not the method should also emit all of the errors if present? In that case, we might want to rename it or add another wrapper that emits then clears\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31387e76090007b12da82d7ef11b042e88df0ba5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31387e76090007b12da82d7ef11b042e88df0ba5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31387e76090007b12da82d7ef11b042e88df0ba5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "425905b49ae04bf0e00be95caa01fd6d2cc8e74c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/425905b49ae04bf0e00be95caa01fd6d2cc8e74c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/425905b49ae04bf0e00be95caa01fd6d2cc8e74c"}, {"sha": "5f35a8c63780f5033c168d3c32bf68d203695e8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f35a8c63780f5033c168d3c32bf68d203695e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f35a8c63780f5033c168d3c32bf68d203695e8d"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "438ab41bb4af2fee9e0f054d850b6e47e26c1fb4", "filename": "gcc/rust/parse/rust-parse.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31387e76090007b12da82d7ef11b042e88df0ba5/gcc%2Frust%2Fparse%2Frust-parse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31387e76090007b12da82d7ef11b042e88df0ba5/gcc%2Frust%2Fparse%2Frust-parse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse.h?ref=31387e76090007b12da82d7ef11b042e88df0ba5", "patch": "@@ -603,6 +603,7 @@ template <typename ManagedTokenSource> class Parser\n   bool done_end_of_file ();\n \n   void add_error (Error error) { error_table.push_back (std::move (error)); }\n+  void clear_errors () { error_table.clear (); }\n \n public:\n   // Construct parser with specified \"managed\" token source."}]}