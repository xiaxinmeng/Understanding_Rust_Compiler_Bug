{"sha": "14bfd7c70da2851692cb29ada892ffa3dff40634", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRiZmQ3YzcwZGEyODUxNjkyY2IyOWFkYTg5MmZmYTNkZmY0MDYzNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenth@gcc.gnu.org", "date": "2005-03-21T16:46:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-03-21T16:46:09Z"}, "message": "re PR target/20166 (Bootstrap failure due to lack of fixinclude of pthread problem)\n\n2005-03-21  Richard Guenther  <rguenth@gcc.gnu.org>\n\n\tPR target/20166\n\t* inclhack.def: Add fix for array of incomplete structures\n\tin function prototype in pthread.h.\n\t* fixincl.x: Regenerate.\n\t* tests/base/pthread.h: Adjust.\n\nFrom-SVN: r96812", "tree": {"sha": "6fc00bde05dc55d7d7da1c3800e77a5d63464de4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fc00bde05dc55d7d7da1c3800e77a5d63464de4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14bfd7c70da2851692cb29ada892ffa3dff40634", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14bfd7c70da2851692cb29ada892ffa3dff40634", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14bfd7c70da2851692cb29ada892ffa3dff40634", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14bfd7c70da2851692cb29ada892ffa3dff40634/comments", "author": null, "committer": null, "parents": [{"sha": "37f7367a4dd309eab4ec90143eb7e3f5c31cb1dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37f7367a4dd309eab4ec90143eb7e3f5c31cb1dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37f7367a4dd309eab4ec90143eb7e3f5c31cb1dc"}], "stats": {"total": 78, "additions": 73, "deletions": 5}, "files": [{"sha": "ff456bdc9e31ad1824720e4474fe29e35855f737", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14bfd7c70da2851692cb29ada892ffa3dff40634/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14bfd7c70da2851692cb29ada892ffa3dff40634/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=14bfd7c70da2851692cb29ada892ffa3dff40634", "patch": "@@ -1,3 +1,11 @@\n+2005-03-21  Richard Guenther  <rguenth@gcc.gnu.org>\n+\n+\tPR target/20166\n+\t* inclhack.def: Add fix for array of incomplete structures\n+\tin function prototype in pthread.h.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/pthread.h: Adjust.\n+\n 2005-03-15  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* inclhack.def (hpux_htonl): New fix."}, {"sha": "7d6979d564350eeba6d817811923d525e2baa01f", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 47, "deletions": 5, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14bfd7c70da2851692cb29ada892ffa3dff40634/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14bfd7c70da2851692cb29ada892ffa3dff40634/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=14bfd7c70da2851692cb29ada892ffa3dff40634", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Monday March 14, 2005 at 09:43:34 PM UTC\n+ * It has been AutoGen-ed  Monday March 21, 2005 at 05:22:01 PM CET\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Mon Mar 14 21:43:34 UTC 2005\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Mon Mar 21 17:22:01 CET 2005\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 178 fixup descriptions.\n+ * This file contains 179 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -4181,6 +4181,42 @@ static const char* apzPthread_Page_SizePatch[] = {\n     \"extern %0\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Pthread_Incomplete_Struct_Argument fix\n+ */\n+tSCC zPthread_Incomplete_Struct_ArgumentName[] =\n+     \"pthread_incomplete_struct_argument\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zPthread_Incomplete_Struct_ArgumentList[] =\n+  \"|pthread.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzPthread_Incomplete_Struct_ArgumentMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zPthread_Incomplete_Struct_ArgumentSelect0[] =\n+       \"struct __jmp_buf_tag\";\n+\n+#define    PTHREAD_INCOMPLETE_STRUCT_ARGUMENT_TEST_CT  1\n+static tTestDesc aPthread_Incomplete_Struct_ArgumentTests[] = {\n+  { TT_EGREP,    zPthread_Incomplete_Struct_ArgumentSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Pthread_Incomplete_Struct_Argument\n+ */\n+static const char* apzPthread_Incomplete_Struct_ArgumentPatch[] = {\n+    \"format\",\n+    \"%1 *%2%3\",\n+    \"^(extern int __sigsetjmp \\\\(struct __jmp_buf_tag) (__env)\\\\[1\\\\](.*)$\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Read_Ret_Type fix\n@@ -7125,9 +7161,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          208\n+#define REGEX_COUNT          209\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            178\n+#define FIX_COUNT            179\n \n /*\n  *  Enumerate the fixes\n@@ -7236,6 +7272,7 @@ typedef enum {\n     OSF_NAMESPACE_A_FIXIDX,\n     OSF_NAMESPACE_C_FIXIDX,\n     PTHREAD_PAGE_SIZE_FIXIDX,\n+    PTHREAD_INCOMPLETE_STRUCT_ARGUMENT_FIXIDX,\n     READ_RET_TYPE_FIXIDX,\n     RPC_XDR_LVALUE_CAST_A_FIXIDX,\n     RPC_XDR_LVALUE_CAST_B_FIXIDX,\n@@ -7829,6 +7866,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      PTHREAD_PAGE_SIZE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aPthread_Page_SizeTests,   apzPthread_Page_SizePatch, 0 },\n \n+  {  zPthread_Incomplete_Struct_ArgumentName,    zPthread_Incomplete_Struct_ArgumentList,\n+     apzPthread_Incomplete_Struct_ArgumentMachs,\n+     PTHREAD_INCOMPLETE_STRUCT_ARGUMENT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aPthread_Incomplete_Struct_ArgumentTests,   apzPthread_Incomplete_Struct_ArgumentPatch, 0 },\n+\n   {  zRead_Ret_TypeName,    zRead_Ret_TypeList,\n      apzRead_Ret_TypeMachs,\n      READ_RET_TYPE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "f55a9f05a056e51f258492c6d96ff963a3edc381", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14bfd7c70da2851692cb29ada892ffa3dff40634/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14bfd7c70da2851692cb29ada892ffa3dff40634/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=14bfd7c70da2851692cb29ada892ffa3dff40634", "patch": "@@ -2315,6 +2315,19 @@ fix = {\n     test_text = \"int __page_size;\";\n };\n \n+/*\n+ * On broken glibc-2.3.3 systems an array of incomplete structures is\n+ * passed to __sigsetjmp.  Fix that to take a pointer instead.\n+ */\n+fix = {\n+    hackname  = pthread_incomplete_struct_argument;\n+    files     = pthread.h;\n+    select    = \"struct __jmp_buf_tag\";\n+    c_fix     = format;\n+    c_fix_arg = \"%1 *%2%3\";\n+    c_fix_arg = \"^(extern int __sigsetjmp \\\\(struct __jmp_buf_tag) (__env)\\\\[1\\\\](.*)$\";\n+    test_text = \"extern int __sigsetjmp (struct __jmp_buf_tag __env[1], int __savemask);\";\n+};\n \n /*\n  * On DYNIX/ptx, sys/mc_param.h has an embedded asm for the cpuid instruction"}, {"sha": "9998f660c7cbda6ece1f8952852d2c7cc75180e9", "filename": "fixincludes/tests/base/pthread.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14bfd7c70da2851692cb29ada892ffa3dff40634/fixincludes%2Ftests%2Fbase%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14bfd7c70da2851692cb29ada892ffa3dff40634/fixincludes%2Ftests%2Fbase%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fpthread.h?ref=14bfd7c70da2851692cb29ada892ffa3dff40634", "patch": "@@ -61,6 +61,11 @@ extern int __page_size;\n #endif  /* PTHREAD_PAGE_SIZE_CHECK */\n \n \n+#if defined( PTHREAD_INCOMPLETE_STRUCT_ARGUMENT_CHECK )\n+extern int __sigsetjmp (struct __jmp_buf_tag *__env, int __savemask);\n+#endif  /* PTHREAD_INCOMPLETE_STRUCT_ARGUMENT_CHECK */\n+\n+\n #if defined( SOLARIS_MUTEX_INIT_1_CHECK )\n #ident \"@(#)pthread.h  1.16    97/05/05 SMI\"\n #if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)"}]}