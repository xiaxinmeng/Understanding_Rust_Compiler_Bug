{"sha": "d2a365a843021a55899050ed48e914998a7d2205", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJhMzY1YTg0MzAyMWE1NTg5OTA1MGVkNDhlOTE0OTk4YTdkMjIwNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-09-30T20:17:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-09-30T20:17:07Z"}, "message": "re PR middle-end/58564 (possible wrong code bug at -O0)\n\n\tPR middle-end/58564\n\t* fold-const.c (tree_unary_nonnegative_warnv_p): Use\n\tINTEGRAL_TYPE_P (t) instead of TREE_CODE (t) == INTEGER_TYPE.\n\nFrom-SVN: r203044", "tree": {"sha": "628a4d491509664a0bae3f7f5b778c1f71eab28c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/628a4d491509664a0bae3f7f5b778c1f71eab28c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2a365a843021a55899050ed48e914998a7d2205", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2a365a843021a55899050ed48e914998a7d2205", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2a365a843021a55899050ed48e914998a7d2205", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2a365a843021a55899050ed48e914998a7d2205/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f66d089128669ca6f4bbd8f661fb064012bdd595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f66d089128669ca6f4bbd8f661fb064012bdd595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f66d089128669ca6f4bbd8f661fb064012bdd595"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "d125ced29c86dcf17b65582346480b8f5063e1c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a365a843021a55899050ed48e914998a7d2205/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a365a843021a55899050ed48e914998a7d2205/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2a365a843021a55899050ed48e914998a7d2205", "patch": "@@ -1,5 +1,9 @@\n 2013-09-30  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/58564\n+\t* fold-const.c (tree_unary_nonnegative_warnv_p): Use\n+\tINTEGRAL_TYPE_P (t) instead of TREE_CODE (t) == INTEGER_TYPE.\n+\n \tPR middle-end/58564\n \t* fold-const.c (fold_ternary_loc): For A < 0 : <sign bit of A> : 0\n \toptimization, punt if sign_bit_p looked through any zero extension."}, {"sha": "fc29291c01d84aea7a5ee31e06f6c3520f2354d3", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a365a843021a55899050ed48e914998a7d2205/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a365a843021a55899050ed48e914998a7d2205/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d2a365a843021a55899050ed48e914998a7d2205", "patch": "@@ -15448,20 +15448,20 @@ tree_unary_nonnegative_warnv_p (enum tree_code code, tree type, tree op0,\n \t    if (TREE_CODE (inner_type) == REAL_TYPE)\n \t      return tree_expr_nonnegative_warnv_p (op0,\n \t\t\t\t\t\t    strict_overflow_p);\n-\t    if (TREE_CODE (inner_type) == INTEGER_TYPE)\n+\t    if (INTEGRAL_TYPE_P (inner_type))\n \t      {\n \t\tif (TYPE_UNSIGNED (inner_type))\n \t\t  return true;\n \t\treturn tree_expr_nonnegative_warnv_p (op0,\n \t\t\t\t\t\t      strict_overflow_p);\n \t      }\n \t  }\n-\telse if (TREE_CODE (outer_type) == INTEGER_TYPE)\n+\telse if (INTEGRAL_TYPE_P (outer_type))\n \t  {\n \t    if (TREE_CODE (inner_type) == REAL_TYPE)\n \t      return tree_expr_nonnegative_warnv_p (op0,\n \t\t\t\t\t\t    strict_overflow_p);\n-\t    if (TREE_CODE (inner_type) == INTEGER_TYPE)\n+\t    if (INTEGRAL_TYPE_P (inner_type))\n \t      return TYPE_PRECISION (inner_type) < TYPE_PRECISION (outer_type)\n \t\t      && TYPE_UNSIGNED (inner_type);\n \t  }"}]}