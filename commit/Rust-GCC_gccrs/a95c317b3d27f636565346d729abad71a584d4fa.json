{"sha": "a95c317b3d27f636565346d729abad71a584d4fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk1YzMxN2IzZDI3ZjYzNjU2NTM0NmQ3MjlhYmFkNzFhNTg0ZDRmYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-24T12:22:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-24T12:22:03Z"}, "message": "(get_condition): Use rtx_equal_p to compare rtx.\n\nFrom-SVN: r12833", "tree": {"sha": "21787bddce0b40ba58daeec7a8b6514783d67f3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21787bddce0b40ba58daeec7a8b6514783d67f3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a95c317b3d27f636565346d729abad71a584d4fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a95c317b3d27f636565346d729abad71a584d4fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a95c317b3d27f636565346d729abad71a584d4fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a95c317b3d27f636565346d729abad71a584d4fa/comments", "author": null, "committer": null, "parents": [{"sha": "2d0bd5fde06d1538ee95376c0b41a598feb9579d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d0bd5fde06d1538ee95376c0b41a598feb9579d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d0bd5fde06d1538ee95376c0b41a598feb9579d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6646e9b4eb6e0171f46c8effa5af9b3c01184f87", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95c317b3d27f636565346d729abad71a584d4fa/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95c317b3d27f636565346d729abad71a584d4fa/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=a95c317b3d27f636565346d729abad71a584d4fa", "patch": "@@ -6736,7 +6736,7 @@ get_condition (jump, earliest)\n \n       /* If this is setting OP0, get what it sets it to if it looks\n \t relevant.  */\n-      if (SET_DEST (set) == op0)\n+      if (rtx_equal_p (SET_DEST (set), op0))\n \t{\n \t  enum machine_mode inner_mode = GET_MODE (SET_SRC (set));\n "}]}