{"sha": "192ed1dd46005bdd9c3a858645ef0b3cc282946d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkyZWQxZGQ0NjAwNWJkZDljM2E4NTg2NDVlZjBiM2NjMjgyOTQ2ZA==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-12-18T19:25:45Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-12-18T19:25:45Z"}, "message": "[AArch64 2/3 big.LITTLE] Allow tuning parameters without unique tuning targets.\n\ngcc/\n\n\t* config/aarch64/aarch64-cores.def: Add new column for\n\tSCHEDULER_IDENT.\n\t* config/aarch64/aarch64-opts.h (AARCH64_CORE): Handle\n\tSCHEDULER_IDENT.\n\t* config/aarch64/aarch64.c (AARCH64_CORE): Handle\n\tSCHEDULER_IDENT.\n\t(aarch64_parse_cpu): mcpu implies a default value for mtune.\n\t* config/aarch64/aarch64.h (AARCH64_CORE): Handle\n\tSCHEDULER_IDENT.\n\nFrom-SVN: r206099", "tree": {"sha": "82f7601779fde94ef5d2407a98f0c44031c59f00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82f7601779fde94ef5d2407a98f0c44031c59f00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/192ed1dd46005bdd9c3a858645ef0b3cc282946d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/192ed1dd46005bdd9c3a858645ef0b3cc282946d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/192ed1dd46005bdd9c3a858645ef0b3cc282946d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/192ed1dd46005bdd9c3a858645ef0b3cc282946d/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "682287fb313413b08b53e35d38d61a3e64e29b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/682287fb313413b08b53e35d38d61a3e64e29b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/682287fb313413b08b53e35d38d61a3e64e29b45"}], "stats": {"total": 35, "additions": 24, "deletions": 11}, "files": [{"sha": "d8e6b99b3c9e6f62e377771340f4b132d6030ca6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192ed1dd46005bdd9c3a858645ef0b3cc282946d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192ed1dd46005bdd9c3a858645ef0b3cc282946d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=192ed1dd46005bdd9c3a858645ef0b3cc282946d", "patch": "@@ -1,3 +1,15 @@\n+2013-12-18  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64-cores.def: Add new column for\n+\tSCHEDULER_IDENT.\n+\t* config/aarch64/aarch64-opts.h (AARCH64_CORE): Handle\n+\tSCHEDULER_IDENT.\n+\t* config/aarch64/aarch64.c (AARCH64_CORE): Handle\n+\tSCHEDULER_IDENT.\n+\t(aarch64_parse_cpu): mcpu implies a default value for mtune.\n+\t* config/aarch64/aarch64.h (AARCH64_CORE): Handle\n+\tSCHEDULER_IDENT.\n+\n 2013-12-18  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* common/config/aarch64/aarch64-common.c"}, {"sha": "1b4a49f7747e88b5c257332d4c16c4c997c0366a", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192ed1dd46005bdd9c3a858645ef0b3cc282946d/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192ed1dd46005bdd9c3a858645ef0b3cc282946d/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=192ed1dd46005bdd9c3a858645ef0b3cc282946d", "patch": "@@ -21,18 +21,18 @@\n \n    Before using #include to read this file, define a macro:\n \n-      AARCH64_CORE(CORE_NAME, CORE_IDENT, ARCH, FLAGS, COSTS)\n+      AARCH64_CORE(CORE_NAME, CORE_IDENT, SCHEDULER_IDENT, ARCH, FLAGS, COSTS)\n \n    The CORE_NAME is the name of the core, represented as a string constant.\n    The CORE_IDENT is the name of the core, represented as an identifier.\n+   The SCHEDULER_IDENT is the name of the core for which scheduling decisions\n+   will be made, represented as an identifier.\n    ARCH is the architecture revision implemented by the chip.\n    FLAGS are the bitwise-or of the traits that apply to that core.\n    This need not include flags implied by the architecture.\n    COSTS is the name of the rtx_costs routine to use.  */\n \n-/* V8 Architecture Processors.\n-   This list currently contains example CPUs that implement AArch64, and\n-   therefore serves as a template for adding more CPUs in the future.  */\n+/* V8 Architecture Processors.  */\n \n-AARCH64_CORE(\"cortex-a53\",\t  cortexa53,\t     8,  AARCH64_FL_FPSIMD,    cortexa53)\n-AARCH64_CORE(\"cortex-a57\",\t  cortexa15,\t     8,  AARCH64_FL_FPSIMD,    generic)\n+AARCH64_CORE(\"cortex-a53\",  cortexa53, cortexa53, 8,  AARCH64_FL_FPSIMD, cortexa53)\n+AARCH64_CORE(\"cortex-a57\",  cortexa15, cortexa15, 8,  AARCH64_FL_FPSIMD, generic)"}, {"sha": "62751127e8e5acfbcc9d88e97670de18a8b70ec5", "filename": "gcc/config/aarch64/aarch64-opts.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192ed1dd46005bdd9c3a858645ef0b3cc282946d/gcc%2Fconfig%2Faarch64%2Faarch64-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192ed1dd46005bdd9c3a858645ef0b3cc282946d/gcc%2Fconfig%2Faarch64%2Faarch64-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-opts.h?ref=192ed1dd46005bdd9c3a858645ef0b3cc282946d", "patch": "@@ -25,8 +25,8 @@\n /* The various cores that implement AArch64.  */\n enum aarch64_processor\n {\n-#define AARCH64_CORE(NAME, IDENT, ARCH, FLAGS, COSTS) \\\n-  IDENT,\n+#define AARCH64_CORE(NAME, INTERNAL_IDENT, IDENT, ARCH, FLAGS, COSTS) \\\n+  INTERNAL_IDENT,\n #include \"aarch64-cores.def\"\n #undef AARCH64_CORE\n   /* Used to indicate that no processor has been specified.  */"}, {"sha": "e66808833f3ed633b9adf2e23dd9351ea1923a1a", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192ed1dd46005bdd9c3a858645ef0b3cc282946d/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192ed1dd46005bdd9c3a858645ef0b3cc282946d/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=192ed1dd46005bdd9c3a858645ef0b3cc282946d", "patch": "@@ -246,7 +246,7 @@ struct processor\n /* Processor cores implementing AArch64.  */\n static const struct processor all_cores[] =\n {\n-#define AARCH64_CORE(NAME, IDENT, ARCH, FLAGS, COSTS) \\\n+#define AARCH64_CORE(NAME, X, IDENT, ARCH, FLAGS, COSTS) \\\n   {NAME, IDENT, #ARCH, FLAGS | AARCH64_FL_FOR_ARCH##ARCH, &COSTS##_tunings},\n #include \"aarch64-cores.def\"\n #undef AARCH64_CORE\n@@ -5119,6 +5119,7 @@ aarch64_parse_cpu (void)\n       if (strlen (cpu->name) == len && strncmp (cpu->name, str, len) == 0)\n \t{\n \t  selected_cpu = cpu;\n+\t  selected_tune = cpu;\n \t  aarch64_isa_flags = selected_cpu->flags;\n \n \t  if (ext != NULL)"}, {"sha": "e3e4846d66359408ae5c0f3ba594edac3d5ae019", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192ed1dd46005bdd9c3a858645ef0b3cc282946d/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192ed1dd46005bdd9c3a858645ef0b3cc282946d/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=192ed1dd46005bdd9c3a858645ef0b3cc282946d", "patch": "@@ -461,8 +461,8 @@ enum reg_class\n \n enum target_cpus\n {\n-#define AARCH64_CORE(NAME, IDENT, ARCH, FLAGS, COSTS) \\\n-  TARGET_CPU_##IDENT,\n+#define AARCH64_CORE(NAME, INTERNAL_IDENT, IDENT, ARCH, FLAGS, COSTS) \\\n+  TARGET_CPU_##INTERNAL_IDENT,\n #include \"aarch64-cores.def\"\n #undef AARCH64_CORE\n   TARGET_CPU_generic"}]}