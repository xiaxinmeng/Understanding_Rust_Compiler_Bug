{"sha": "0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRlYjkxNmNlOWI5OTdkNDk0YTRmNWUxNGFjMzNhZDBjOWZlNWRmNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-05-22T21:45:24Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-05-22T21:45:24Z"}, "message": "re PR c++/15285 (instantiate_type ICE when forming pointer to template function)\n\n\tPR c++/15285\n\tPR c++/15299\n\t* pt.c (build_non_dependent_expr): Expand the set of tree nodes\n\trecognized as overloaded functions.\n\n\tPR c++/15285\n\tPR c++/15299\n\t* g++.dg/template/non-dependent5.C: New test.\n\t* g++.dg/template/non-dependent6.C: New test.\n\nFrom-SVN: r82149", "tree": {"sha": "cabf0f9cf2491b63e8e3ac86d48cc1e5fccdd9d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cabf0f9cf2491b63e8e3ac86d48cc1e5fccdd9d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7/comments", "author": null, "committer": null, "parents": [{"sha": "52ceb03971fb7f878b8a610fa97b07a4de510057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ceb03971fb7f878b8a610fa97b07a4de510057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52ceb03971fb7f878b8a610fa97b07a4de510057"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "9af31d52885222cfb4c59b7bec6afa14156dae99", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7", "patch": "@@ -1,3 +1,10 @@\n+2004-05-22  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/15285\n+\tPR c++/15299\n+\t* pt.c (build_non_dependent_expr): Expand the set of tree nodes\n+\trecognized as overloaded functions.\n+\n 2004-05-22  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/15507"}, {"sha": "c506609b7f1c00c1b9ef729f01f1c16d94cd2f69", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7", "patch": "@@ -12158,15 +12158,20 @@ resolve_typename_type (tree type, bool only_current_p)\n tree\n build_non_dependent_expr (tree expr)\n {\n+  tree inner_expr;\n+\n   /* Preserve null pointer constants so that the type of things like \n      \"p == 0\" where \"p\" is a pointer can be determined.  */\n   if (null_ptr_cst_p (expr))\n     return expr;\n   /* Preserve OVERLOADs; the functions must be available to resolve\n      types.  */\n-  if (TREE_CODE (expr) == OVERLOAD \n-      || TREE_CODE (expr) == FUNCTION_DECL\n-      || TREE_CODE (expr) == TEMPLATE_DECL)\n+  inner_expr = (TREE_CODE (expr) == ADDR_EXPR ? \n+\t\tTREE_OPERAND (expr, 0) : expr);\n+  if (TREE_CODE (inner_expr) == OVERLOAD \n+      || TREE_CODE (inner_expr) == FUNCTION_DECL\n+      || TREE_CODE (inner_expr) == TEMPLATE_DECL\n+      || TREE_CODE (inner_expr) == TEMPLATE_ID_EXPR)\n     return expr;\n   /* Preserve string constants; conversions from string constants to\n      \"char *\" are allowed, even though normally a \"const char *\""}, {"sha": "c8f51f5297d6dd31fb17cb9799512bc2217b3f26", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7", "patch": "@@ -1,3 +1,10 @@\n+2004-05-22  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/15285\n+\tPR c++/15299\n+\t* g++.dg/template/non-dependent5.C: New test.\n+\t* g++.dg/template/non-dependent6.C: New test.\n+\n 2004-05-22  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/15507"}, {"sha": "bd6ce6b47588a489387cfab37cd619ad2a5fe730", "filename": "gcc/testsuite/g++.dg/template/non-dependent5.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent5.C?ref=0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/15299\n+\n+template <class T>  void fun_ptr(T (*)()); \n+template <class T>  T    bar(); \n+ \n+template <class> void foo () { \n+  fun_ptr(bar<int>); \n+} "}, {"sha": "0959a3de9f8867e4b24ac8d3dfb18cae29e37efb", "filename": "gcc/testsuite/g++.dg/template/non-dependent6.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent6.C?ref=0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/15285\n+\n+void foo(void (*func)()) {}\n+\n+template<typename T>\n+void bar()\n+{}\n+\n+template<typename T>\n+void baz()\n+{\n+  foo(&bar<long>);\n+}"}]}