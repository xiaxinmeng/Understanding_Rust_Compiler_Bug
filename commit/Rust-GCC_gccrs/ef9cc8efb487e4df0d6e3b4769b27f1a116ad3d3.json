{"sha": "ef9cc8efb487e4df0d6e3b4769b27f1a116ad3d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY5Y2M4ZWZiNDg3ZTRkZjBkNmUzYjQ3NjliMjdmMWExMTZhZDNkMw==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2007-05-24T19:33:23Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2007-05-24T19:33:23Z"}, "message": "Commit the change of this file, mentionend in the CL from 2007-05-20.\n\nFrom-SVN: r125039", "tree": {"sha": "63983ac56f08ac2954933cd3783146e6a2e65df8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63983ac56f08ac2954933cd3783146e6a2e65df8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef9cc8efb487e4df0d6e3b4769b27f1a116ad3d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9cc8efb487e4df0d6e3b4769b27f1a116ad3d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9cc8efb487e4df0d6e3b4769b27f1a116ad3d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9cc8efb487e4df0d6e3b4769b27f1a116ad3d3/comments", "author": null, "committer": null, "parents": [{"sha": "5da20cfe736c474d1e9ab9649f9e1a6d3f45d110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da20cfe736c474d1e9ab9649f9e1a6d3f45d110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da20cfe736c474d1e9ab9649f9e1a6d3f45d110"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "fb00fccae2d0790b43cc1c4cec5bcf3ba8056451", "filename": "boehm-gc/include/private/gcconfig.h", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9cc8efb487e4df0d6e3b4769b27f1a116ad3d3/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9cc8efb487e4df0d6e3b4769b27f1a116ad3d3/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h?ref=ef9cc8efb487e4df0d6e3b4769b27f1a116ad3d3", "patch": "@@ -794,26 +794,29 @@\n #     define DATAEND (_end)\n #   endif\n #   ifdef DARWIN\n+#     define OS_TYPE \"DARWIN\"\n+#     define DYNAMIC_LOADING\n #     if defined(__ppc64__)\n #       define ALIGNMENT 8\n #       define CPP_WORDSZ 64\n+#       define STACKBOTTOM ((ptr_t) 0x7fff5fc00000)\n+#       define CACHE_LINE_SIZE 64\n+#       ifndef HBLKSIZE\n+#         define HBLKSIZE 4096\n+#       endif\n #     else\n #       define ALIGNMENT 4\n+#       define STACKBOTTOM ((ptr_t) 0xc0000000)\n #     endif\n-#     define OS_TYPE \"DARWIN\"\n-#     define DYNAMIC_LOADING\n       /* XXX: see get_end(3), get_etext() and get_end() should not be used.\n \t These aren't used when dyld support is enabled (it is by default) */\n #     define DATASTART ((ptr_t) get_etext())\n #     define DATAEND\t((ptr_t) get_end())\n-#     define STACKBOTTOM ((ptr_t) 0xc0000000)\n #     define USE_MMAP\n #     define USE_MMAP_ANON\n #     define USE_ASM_PUSH_REGS\n-      /* This is potentially buggy. It needs more testing. See the comments in\n-\t os_dep.c.  It relies on threads to track writes. */\n #     ifdef GC_DARWIN_THREADS\n-/*#       define MPROTECT_VDB -- diabled for now.  May work for some apps. */\n+#       define MPROTECT_VDB\n #     endif\n #     include <unistd.h>\n #     define GETPAGESIZE() getpagesize()\n@@ -1327,10 +1330,8 @@\n #     define USE_MMAP\n #     define USE_MMAP_ANON\n #     define USE_ASM_PUSH_REGS\n-      /* This is potentially buggy. It needs more testing. See the comments in\n-\t os_dep.c.  It relies on threads to track writes. */\n #     ifdef GC_DARWIN_THREADS\n-/* #       define MPROTECT_VDB -- disabled for now.  May work for some apps. */\n+#       define MPROTECT_VDB\n #     endif\n #     include <unistd.h>\n #     define GETPAGESIZE() getpagesize()\n@@ -2001,8 +2002,6 @@\n #     define USE_MMAP\n #     define USE_MMAP_ANON\n #     ifdef GC_DARWIN_THREADS\n-       /* This is potentially buggy. It needs more testing. See the comments in\n-\t  os_dep.c.  It relies on threads to track writes. */\n #       define MPROTECT_VDB\n #     endif\n #     include <unistd.h>"}]}