{"sha": "7b5321188b4011e2ce3b6d56cf26d6dde054419d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I1MzIxMTg4YjQwMTFlMmNlM2I2ZDU2Y2YyNmQ2ZGRlMDU0NDE5ZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-06-23T16:42:07Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-06-23T16:42:07Z"}, "message": "i386: Pass ix86_expand_sse_unpack operands by value\n\n        * config/i386/i386.c (ix86_expand_sse_unpack): Split operands[]\n        parameter into src and dest.\n        * config/i386/sse.md (vec_unpacku_hi_<V124_AVX2>): Update call.\n        (vec_unpacks_hi_<V124_AVX2>): Likewise.\n        (vec_unpacku_lo_<V124_AVX2>): Likewise.\n        (vec_unpacks_lo_<V124_AVX2>): Likewise.\n        * config/i386/i386-protos.h: Update.\n\nFrom-SVN: r188908", "tree": {"sha": "f116e4e9eaf72a1761f1bc2db2a6c7baf5d949ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f116e4e9eaf72a1761f1bc2db2a6c7baf5d949ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b5321188b4011e2ce3b6d56cf26d6dde054419d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b5321188b4011e2ce3b6d56cf26d6dde054419d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b5321188b4011e2ce3b6d56cf26d6dde054419d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b5321188b4011e2ce3b6d56cf26d6dde054419d/comments", "author": null, "committer": null, "parents": [{"sha": "77a3dbf6c43109eda52407e3cd38021323592a09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a3dbf6c43109eda52407e3cd38021323592a09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a3dbf6c43109eda52407e3cd38021323592a09"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "75f5c0abd50d342f9e5dd4d56ca0dd4b3de15c4f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b5321188b4011e2ce3b6d56cf26d6dde054419d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b5321188b4011e2ce3b6d56cf26d6dde054419d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b5321188b4011e2ce3b6d56cf26d6dde054419d", "patch": "@@ -1,5 +1,13 @@\n 2012-06-23  Richard Henderson  <rth@redhat.com>\n \n+\t* config/i386/i386.c (ix86_expand_sse_unpack): Split operands[]\n+\tparameter into src and dest.\n+\t* config/i386/sse.md (vec_unpacku_hi_<V124_AVX2>): Update call.\n+\t(vec_unpacks_hi_<V124_AVX2>): Likewise.\n+\t(vec_unpacku_lo_<V124_AVX2>): Likewise.\n+\t(vec_unpacks_lo_<V124_AVX2>): Likewise.\n+\t* config/i386/i386-protos.h: Update.\n+\n \t* config/i386/sse.md (mul<VI1_AVX2>3): Change from insn_and_split to\n \tpure expander; move expansion code ...\n \t* config/i386/i386.c (ix86_expand_vecop_qihi): ... here.  New function."}, {"sha": "88de8edaeb40fb395bce52db6f985cfac39c0de7", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b5321188b4011e2ce3b6d56cf26d6dde054419d/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b5321188b4011e2ce3b6d56cf26d6dde054419d/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=7b5321188b4011e2ce3b6d56cf26d6dde054419d", "patch": "@@ -130,7 +130,7 @@ extern bool ix86_expand_fp_vcond (rtx[]);\n extern bool ix86_expand_int_vcond (rtx[]);\n extern void ix86_expand_vec_perm (rtx[]);\n extern bool ix86_expand_vec_perm_const (rtx[]);\n-extern void ix86_expand_sse_unpack (rtx[], bool, bool);\n+extern void ix86_expand_sse_unpack (rtx, rtx, bool, bool);\n extern bool ix86_expand_int_addcc (rtx[]);\n extern rtx ix86_expand_call (rtx, rtx, rtx, rtx, rtx, bool);\n extern void ix86_split_call_vzeroupper (rtx, rtx);"}, {"sha": "7ae20601040a86afdee86df94b73b5966ae05e02", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b5321188b4011e2ce3b6d56cf26d6dde054419d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b5321188b4011e2ce3b6d56cf26d6dde054419d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7b5321188b4011e2ce3b6d56cf26d6dde054419d", "patch": "@@ -20187,10 +20187,10 @@ ix86_expand_vec_perm (rtx operands[])\n    true if we want the N/2 high elements, else the low elements.  */\n \n void\n-ix86_expand_sse_unpack (rtx operands[2], bool unsigned_p, bool high_p)\n+ix86_expand_sse_unpack (rtx dest, rtx src, bool unsigned_p, bool high_p)\n {\n-  enum machine_mode imode = GET_MODE (operands[1]);\n-  rtx tmp, dest;\n+  enum machine_mode imode = GET_MODE (src);\n+  rtx tmp;\n \n   if (TARGET_SSE4_1)\n     {\n@@ -20252,20 +20252,20 @@ ix86_expand_sse_unpack (rtx operands[2], bool unsigned_p, bool high_p)\n       if (GET_MODE_SIZE (imode) == 32)\n \t{\n \t  tmp = gen_reg_rtx (halfmode);\n-\t  emit_insn (extract (tmp, operands[1]));\n+\t  emit_insn (extract (tmp, src));\n \t}\n       else if (high_p)\n \t{\n \t  /* Shift higher 8 bytes to lower 8 bytes.  */\n \t  tmp = gen_reg_rtx (imode);\n \t  emit_insn (gen_sse2_lshrv1ti3 (gen_lowpart (V1TImode, tmp),\n-\t\t\t\t\t gen_lowpart (V1TImode, operands[1]),\n+\t\t\t\t\t gen_lowpart (V1TImode, src),\n \t\t\t\t\t GEN_INT (64)));\n \t}\n       else\n-\ttmp = operands[1];\n+\ttmp = src;\n \n-      emit_insn (unpack (operands[0], tmp));\n+      emit_insn (unpack (dest, tmp));\n     }\n   else\n     {\n@@ -20295,15 +20295,13 @@ ix86_expand_sse_unpack (rtx operands[2], bool unsigned_p, bool high_p)\n \t  gcc_unreachable ();\n \t}\n \n-      dest = gen_lowpart (imode, operands[0]);\n-\n       if (unsigned_p)\n \ttmp = force_reg (imode, CONST0_RTX (imode));\n       else\n \ttmp = ix86_expand_sse_cmp (gen_reg_rtx (imode), GT, CONST0_RTX (imode),\n-\t\t\t\t   operands[1], pc_rtx, pc_rtx);\n+\t\t\t\t   src, pc_rtx, pc_rtx);\n \n-      emit_insn (unpack (dest, operands[1], tmp));\n+      emit_insn (unpack (gen_lowpart (imode, dest), src, tmp));\n     }\n }\n "}, {"sha": "c7c6392713efde2234fe49a03020b83d3af80a55", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b5321188b4011e2ce3b6d56cf26d6dde054419d/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b5321188b4011e2ce3b6d56cf26d6dde054419d/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=7b5321188b4011e2ce3b6d56cf26d6dde054419d", "patch": "@@ -7818,25 +7818,25 @@\n   [(match_operand:<sseunpackmode> 0 \"register_operand\")\n    (match_operand:VI124_AVX2 1 \"register_operand\")]\n   \"TARGET_SSE2\"\n-  \"ix86_expand_sse_unpack (operands, false, false); DONE;\")\n+  \"ix86_expand_sse_unpack (operands[0], operands[1], false, false); DONE;\")\n \n (define_expand \"vec_unpacks_hi_<mode>\"\n   [(match_operand:<sseunpackmode> 0 \"register_operand\")\n    (match_operand:VI124_AVX2 1 \"register_operand\")]\n   \"TARGET_SSE2\"\n-  \"ix86_expand_sse_unpack (operands, false, true); DONE;\")\n+  \"ix86_expand_sse_unpack (operands[0], operands[1], false, true); DONE;\")\n \n (define_expand \"vec_unpacku_lo_<mode>\"\n   [(match_operand:<sseunpackmode> 0 \"register_operand\")\n    (match_operand:VI124_AVX2 1 \"register_operand\")]\n   \"TARGET_SSE2\"\n-  \"ix86_expand_sse_unpack (operands, true, false); DONE;\")\n+  \"ix86_expand_sse_unpack (operands[0], operands[1], true, false); DONE;\")\n \n (define_expand \"vec_unpacku_hi_<mode>\"\n   [(match_operand:<sseunpackmode> 0 \"register_operand\")\n    (match_operand:VI124_AVX2 1 \"register_operand\")]\n   \"TARGET_SSE2\"\n-  \"ix86_expand_sse_unpack (operands, true, true); DONE;\")\n+  \"ix86_expand_sse_unpack (operands[0], operands[1], true, true); DONE;\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;"}]}