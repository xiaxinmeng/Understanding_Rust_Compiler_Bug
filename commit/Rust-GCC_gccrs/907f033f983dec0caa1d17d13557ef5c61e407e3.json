{"sha": "907f033f983dec0caa1d17d13557ef5c61e407e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA3ZjAzM2Y5ODNkZWMwY2FhMWQxN2QxMzU1N2VmNWM2MWU0MDdlMw==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2005-08-11T00:28:04Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2005-08-11T00:28:04Z"}, "message": "Fix problem reported by Mike Stump on the gcc list, useless default defintion.\n\n* defaults.h, config/alpha/alpha.h, config/ia64/ia64.h\n(ASM_OUTPUT_ADDR_VEC_ELT): Delete.\n* config/alpha/alpha.c (alpha_arg_partial_bytes): Change \"(CUM).\" to\n\"cum->\".\n\nFrom-SVN: r102970", "tree": {"sha": "038204f80ab095d72be4cf2f13301c8365aa9608", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/038204f80ab095d72be4cf2f13301c8365aa9608"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/907f033f983dec0caa1d17d13557ef5c61e407e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907f033f983dec0caa1d17d13557ef5c61e407e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/907f033f983dec0caa1d17d13557ef5c61e407e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907f033f983dec0caa1d17d13557ef5c61e407e3/comments", "author": null, "committer": null, "parents": [{"sha": "40b8e7e68bf644470bc7a9ce8d636caff463afce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b8e7e68bf644470bc7a9ce8d636caff463afce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40b8e7e68bf644470bc7a9ce8d636caff463afce"}], "stats": {"total": 31, "additions": 9, "deletions": 22}, "files": [{"sha": "8faec781f8bb33a9e4298589cc0ce35a1f4f05ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907f033f983dec0caa1d17d13557ef5c61e407e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907f033f983dec0caa1d17d13557ef5c61e407e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=907f033f983dec0caa1d17d13557ef5c61e407e3", "patch": "@@ -1,3 +1,11 @@\n+2005-08-10  James E Wilson  <wilson@specifix.com>\n+\n+\t* defaults.h, config/alpha/alpha.h, config/ia64/ia64.h\n+\t(ASM_OUTPUT_ADDR_VEC_ELT): Delete.\n+\n+\t* config/alpha/alpha.c (alpha_arg_partial_bytes): Change \"(CUM).\" to\n+\t\"cum->\".\n+\n 2005-08-10  Eric Christopher  <echristo@apple.com>\n \n \t* config/rs6000/rs6000.c (mems_ok_for_quad_peep): Rewrite."}, {"sha": "7d8faa551c40d97f0c236bfaf48675f575f3b35b", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907f033f983dec0caa1d17d13557ef5c61e407e3/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907f033f983dec0caa1d17d13557ef5c61e407e3/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=907f033f983dec0caa1d17d13557ef5c61e407e3", "patch": "@@ -5684,7 +5684,7 @@ alpha_arg_partial_bytes (CUMULATIVE_ARGS *cum ATTRIBUTE_UNUSED,\n #if TARGET_ABI_OPEN_VMS\n   if (cum->num_args < 6\n       && 6 < cum->num_args + ALPHA_ARG_SIZE (mode, type, named))\n-    words = 6 - (CUM).num_args;\n+    words = 6 - cum->num_args;\n #elif TARGET_ABI_UNICOSMK\n   /* Never any split arguments.  */\n #elif TARGET_ABI_OSF"}, {"sha": "91689fbb5649d0bbf8fb1eb6acb9a5bf1d85a5fb", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907f033f983dec0caa1d17d13557ef5c61e407e3/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907f033f983dec0caa1d17d13557ef5c61e407e3/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=907f033f983dec0caa1d17d13557ef5c61e407e3", "patch": "@@ -1365,11 +1365,6 @@ do {\t\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\t      \\\n   while (0)\n \n-/* This is how to output an element of a case-vector that is absolute.\n-   (Alpha does not use such vectors, but we must define this macro anyway.)  */\n-\n-#define ASM_OUTPUT_ADDR_VEC_ELT(FILE, VALUE) gcc_unreachable ()\n-\n /* This is how to output an element of a case-vector that is relative.  */\n \n #define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, BODY, VALUE, REL) \\"}, {"sha": "4e3a280031003d19c8488a8b3c6897542b304ee2", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907f033f983dec0caa1d17d13557ef5c61e407e3/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907f033f983dec0caa1d17d13557ef5c61e407e3/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=907f033f983dec0caa1d17d13557ef5c61e407e3", "patch": "@@ -1772,11 +1772,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n     fprintf (STREAM, \"\\tdata8 @pcrel(.L%d)\\n\", VALUE);\t\t\\\n   } while (0)\n \n-/* This is how to output an element of a case-vector that is absolute.\n-   (Ia64 does not use such vectors, but we must define this macro anyway.)  */\n-\n-#define ASM_OUTPUT_ADDR_VEC_ELT(STREAM, VALUE) gcc_unreachable ()\n-\n /* Jump tables only need 8 byte alignment.  */\n \n #define ADDR_VEC_ALIGN(ADDR_VEC) 3"}, {"sha": "af3e237227deae956ce2b1e027eae81231f8fb41", "filename": "gcc/defaults.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907f033f983dec0caa1d17d13557ef5c61e407e3/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907f033f983dec0caa1d17d13557ef5c61e407e3/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=907f033f983dec0caa1d17d13557ef5c61e407e3", "patch": "@@ -61,17 +61,6 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n   } while (0)\n #endif\n \n-/* This is how to output an element of a case-vector that is absolute.\n-   Some targets don't use this, but we have to define it anyway.  */\n-\n-#ifndef ASM_OUTPUT_ADDR_VEC_ELT\n-#define ASM_OUTPUT_ADDR_VEC_ELT(FILE, VALUE)  \\\n-do { fputs (integer_asm_op (POINTER_SIZE / BITS_PER_UNIT, TRUE), FILE); \\\n-     (*targetm.asm_out.internal_label) (FILE, \"L\", (VALUE));\t\t\t\\\n-     fputc ('\\n', FILE);\t\t\t\t\t\t\\\n-   } while (0)\n-#endif\n-\n /* Choose a reasonable default for ASM_OUTPUT_ASCII.  */\n \n #ifndef ASM_OUTPUT_ASCII"}]}