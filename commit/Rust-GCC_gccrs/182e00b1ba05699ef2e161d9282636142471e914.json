{"sha": "182e00b1ba05699ef2e161d9282636142471e914", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgyZTAwYjFiYTA1Njk5ZWYyZTE2MWQ5MjgyNjM2MTQyNDcxZTkxNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-07-10T11:45:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-07-10T11:45:40Z"}, "message": "re PR tree-optimization/40496 (ICE in verify_stmts with -fprefetch-loop-arrays)\n\n2009-07-10  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/40496\n\t* tree-ssa-loop-manip.c (tree_transform_and_unroll_loop): Create\n\tthe PHI result with a compatible type.\n\n\t* g++.dg/opt/pr40496.C: New testcase.\n\nFrom-SVN: r149469", "tree": {"sha": "eec3d64e39a28b6deed071242b6536ae53c208b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eec3d64e39a28b6deed071242b6536ae53c208b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/182e00b1ba05699ef2e161d9282636142471e914", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182e00b1ba05699ef2e161d9282636142471e914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/182e00b1ba05699ef2e161d9282636142471e914", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182e00b1ba05699ef2e161d9282636142471e914/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac7120ce8aef83a746376463906782476b407e9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac7120ce8aef83a746376463906782476b407e9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac7120ce8aef83a746376463906782476b407e9b"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "684b6cd26298d73b24fe22df679a7d20c1cf0c72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182e00b1ba05699ef2e161d9282636142471e914/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182e00b1ba05699ef2e161d9282636142471e914/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=182e00b1ba05699ef2e161d9282636142471e914", "patch": "@@ -1,3 +1,9 @@\n+2009-07-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/40496\n+\t* tree-ssa-loop-manip.c (tree_transform_and_unroll_loop): Create\n+\tthe PHI result with a compatible type.\n+\n 2009-07-10  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR 25509"}, {"sha": "4cb330628649edc62e9a21d5bef79cc8b1a1e07f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182e00b1ba05699ef2e161d9282636142471e914/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182e00b1ba05699ef2e161d9282636142471e914/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=182e00b1ba05699ef2e161d9282636142471e914", "patch": "@@ -1,3 +1,8 @@\n+2009-07-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/40496\n+\t* g++.dg/opt/pr40496.C: New testcase.\n+\n 2009-07-10  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR 25509"}, {"sha": "b0eaebf702fae00f2bfee8dfbf93b7c6bd99500c", "filename": "gcc/testsuite/g++.dg/opt/pr40496.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182e00b1ba05699ef2e161d9282636142471e914/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr40496.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182e00b1ba05699ef2e161d9282636142471e914/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr40496.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr40496.C?ref=182e00b1ba05699ef2e161d9282636142471e914", "patch": "@@ -0,0 +1,18 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 -fprefetch-loop-arrays -msse2\" { target i?86-*-* x86_64-*-* } }\n+\n+struct DOMStringHandle\n+{\n+  unsigned int fLength;\n+  int fRefCount;\n+};\n+static void *freeListPtr;\n+void foo(DOMStringHandle *dsg)\n+{\n+  int i;\n+  for (i = 1; i < 1023; i++)\n+    {\n+      *(void **) &dsg[i] = freeListPtr;\n+      freeListPtr = &dsg[i];\n+    }\n+}"}, {"sha": "b891ea6495728ae6d35bff08c0b6771faef92d5f", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182e00b1ba05699ef2e161d9282636142471e914/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182e00b1ba05699ef2e161d9282636142471e914/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=182e00b1ba05699ef2e161d9282636142471e914", "patch": "@@ -990,10 +990,19 @@ tree_transform_and_unroll_loop (struct loop *loop, unsigned factor,\n       /* Prefer using original variable as a base for the new ssa name.\n \t This is necessary for virtual ops, and useful in order to avoid\n \t losing debug info for real ops.  */\n-      if (TREE_CODE (next) == SSA_NAME)\n+      if (TREE_CODE (next) == SSA_NAME\n+\t  && useless_type_conversion_p (TREE_TYPE (next),\n+\t\t\t\t\tTREE_TYPE (init)))\n \tvar = SSA_NAME_VAR (next);\n-      else if (TREE_CODE (init) == SSA_NAME)\n+      else if (TREE_CODE (init) == SSA_NAME\n+\t       && useless_type_conversion_p (TREE_TYPE (init),\n+\t\t\t\t\t     TREE_TYPE (next)))\n \tvar = SSA_NAME_VAR (init);\n+      else if (useless_type_conversion_p (TREE_TYPE (next), TREE_TYPE (init)))\n+\t{\n+\t  var = create_tmp_var (TREE_TYPE (next), \"unrinittmp\");\n+\t  add_referenced_var (var);\n+\t}\n       else\n \t{\n \t  var = create_tmp_var (TREE_TYPE (init), \"unrinittmp\");"}]}