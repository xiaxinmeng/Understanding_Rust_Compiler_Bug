{"sha": "a9da2e5b38bb4c003f627a89bc326e7a134dc4cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlkYTJlNWIzOGJiNGMwMDNmNjI3YTg5YmMzMjZlN2ExMzRkYzRjYw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-05-31T06:01:18Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-05-31T06:01:18Z"}, "message": "* c-common.c (builtin_define_std): Correct logic.\n\nFrom-SVN: r54089", "tree": {"sha": "e353620a00ef4bffcf1f03fe7e4b0110c6ca77c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e353620a00ef4bffcf1f03fe7e4b0110c6ca77c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9da2e5b38bb4c003f627a89bc326e7a134dc4cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9da2e5b38bb4c003f627a89bc326e7a134dc4cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9da2e5b38bb4c003f627a89bc326e7a134dc4cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9da2e5b38bb4c003f627a89bc326e7a134dc4cc/comments", "author": null, "committer": null, "parents": [{"sha": "6248c4ddc8095dfefd8c8a37fbc625a80d4e0456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6248c4ddc8095dfefd8c8a37fbc625a80d4e0456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6248c4ddc8095dfefd8c8a37fbc625a80d4e0456"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "151362c85e02a98c85a75162125a34db55c4a7f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9da2e5b38bb4c003f627a89bc326e7a134dc4cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9da2e5b38bb4c003f627a89bc326e7a134dc4cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9da2e5b38bb4c003f627a89bc326e7a134dc4cc", "patch": "@@ -1,3 +1,7 @@\n+2002-05-31  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* c-common.c (builtin_define_std): Correct logic.\n+\n 2002-05-31  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa.c (output_millicode_call): Correct \"be,l\" insn for TARGET_PA_20."}, {"sha": "e1633cb9ca43c9f8624d0b84f871f794a8e519fe", "filename": "gcc/c-common.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9da2e5b38bb4c003f627a89bc326e7a134dc4cc/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9da2e5b38bb4c003f627a89bc326e7a134dc4cc/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=a9da2e5b38bb4c003f627a89bc326e7a134dc4cc", "patch": "@@ -4440,10 +4440,13 @@ builtin_define_std (macro)\n \n   /* prepend __ (or maybe just _) if in user's namespace.  */\n   memcpy (p, macro, len + 1);\n-  if (*p != '_')\n-    *--p = '_';\n-  if (p[1] != '_' && !ISUPPER (p[1]))\n-    *--p = '_';\n+  if (!( *p == '_' && (p[1] == '_' || ISUPPER (p[1]))))\n+    {\n+      if (*p != '_')\n+\t*--p = '_';\n+      if (p[1] != '_')\n+\t*--p = '_';\n+    }\n   cpp_define (parse_in, p);\n \n   /* If it was in user's namespace...  */"}]}