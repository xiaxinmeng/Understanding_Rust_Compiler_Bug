{"sha": "6abba05560580219d98dc5e14f1215f8349b3fb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFiYmEwNTU2MDU4MDIxOWQ5OGRjNWUxNGYxMjE1ZjgzNDliM2ZiMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-09-24T22:58:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-09-24T22:58:27Z"}, "message": "tree.c (type_hash_marked_p): Consider as marked if debug symbol number has been set.\n\n\t* tree.c (type_hash_marked_p): Consider as marked if debug symbol\n\tnumber has been set.\n\t(type_hash_mark): Mark type itself.\n\nFrom-SVN: r45794", "tree": {"sha": "6c6496ddfab6090a9d5faadc6583b1547f05c9ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c6496ddfab6090a9d5faadc6583b1547f05c9ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6abba05560580219d98dc5e14f1215f8349b3fb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6abba05560580219d98dc5e14f1215f8349b3fb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6abba05560580219d98dc5e14f1215f8349b3fb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6abba05560580219d98dc5e14f1215f8349b3fb2/comments", "author": null, "committer": null, "parents": [{"sha": "4ed5bcfb1ed415c32bdd8735b2cd0ea0ed37e8b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ed5bcfb1ed415c32bdd8735b2cd0ea0ed37e8b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ed5bcfb1ed415c32bdd8735b2cd0ea0ed37e8b6"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "419ec4b9a02b56f32cc50b7dd8bf4484c397d812", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6abba05560580219d98dc5e14f1215f8349b3fb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6abba05560580219d98dc5e14f1215f8349b3fb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6abba05560580219d98dc5e14f1215f8349b3fb2", "patch": "@@ -1,3 +1,9 @@\n+Mon Sep 24 18:57:59 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* tree.c (type_hash_marked_p): Consider as marked if debug symbol\n+\tnumber has been set.\n+\t(type_hash_mark): Mark type itself.\n+\n 2001-09-24  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* c-lex.c (cb_def_pragma): Update."}, {"sha": "8a8d22d97601134b256d7a80c98378e6d23e25b8", "filename": "gcc/tree.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6abba05560580219d98dc5e14f1215f8349b3fb2/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6abba05560580219d98dc5e14f1215f8349b3fb2/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6abba05560580219d98dc5e14f1215f8349b3fb2", "patch": "@@ -3139,22 +3139,31 @@ type_hash_canon (hashcode, type)\n     }\n }\n \n-/* See if the data pointed to by the type hash table is marked.  */\n+/* See if the data pointed to by the type hash table is marked.  We consider\n+   it marked if the type is marked or if a debug type number or symbol\n+   table entry has been made for the type.  This reduces the amount of\n+   debugging output and eliminates that dependency of the debug output on\n+   the number of garbage collections.  */\n \n static int\n type_hash_marked_p (p)\n      const void *p;\n {\n-  return ggc_marked_p (((struct type_hash *) p)->type);\n+  tree type = ((struct type_hash *) p)->type;\n+\n+  return ggc_marked_p (type) || TYPE_SYMTAB_POINTER (type);\n }\n \n-/* Mark the entry in the type hash table the type it points to is marked. */\n+/* Mark the entry in the type hash table the type it points to is marked.\n+   Also mark the type in case we are considering this entry \"marked\" by\n+   virtue of TYPE_SYMTAB_POINTER being set.  */\n \n static void\n type_hash_mark (p)\n      const void *p;\n {\n   ggc_mark (p);\n+  ggc_mark_tree (((struct type_hash *) p)->type);\n }\n \n /* Mark the hashtable slot pointed to by ENTRY (which is really a"}]}