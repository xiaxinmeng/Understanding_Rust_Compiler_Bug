{"sha": "2f6eed01c3108567757447e1663fa385977960e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY2ZWVkMDFjMzEwODU2Nzc1NzQ0N2UxNjYzZmEzODU5Nzc5NjBlNw==", "commit": {"author": {"name": "Dehao Chen", "email": "dehao@google.com", "date": "2014-05-16T23:16:13Z"}, "committer": {"name": "Dehao Chen", "email": "dehao@gcc.gnu.org", "date": "2014-05-16T23:16:13Z"}, "message": "tree-cfg.c (gimple_merge_blocks): Updates bb count with max count.\n\n2014-05-16  Dehao Chen  <dehao@google.com>\n\n\t* tree-cfg.c (gimple_merge_blocks): Updates bb count with max count.\n\nFrom-SVN: r210538", "tree": {"sha": "bade7ce8e39d8b581d19f011575ebb6e0a4f40d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bade7ce8e39d8b581d19f011575ebb6e0a4f40d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f6eed01c3108567757447e1663fa385977960e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f6eed01c3108567757447e1663fa385977960e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f6eed01c3108567757447e1663fa385977960e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f6eed01c3108567757447e1663fa385977960e7/comments", "author": {"login": "danielcdh", "id": 694263, "node_id": "MDQ6VXNlcjY5NDI2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielcdh", "html_url": "https://github.com/danielcdh", "followers_url": "https://api.github.com/users/danielcdh/followers", "following_url": "https://api.github.com/users/danielcdh/following{/other_user}", "gists_url": "https://api.github.com/users/danielcdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielcdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielcdh/subscriptions", "organizations_url": "https://api.github.com/users/danielcdh/orgs", "repos_url": "https://api.github.com/users/danielcdh/repos", "events_url": "https://api.github.com/users/danielcdh/events{/privacy}", "received_events_url": "https://api.github.com/users/danielcdh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b200de021c2c1bb5b3794e793831e2211466620c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b200de021c2c1bb5b3794e793831e2211466620c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b200de021c2c1bb5b3794e793831e2211466620c"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "5b516955a40dcf0fb30e0fc10cf9b4e1c3977851", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6eed01c3108567757447e1663fa385977960e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6eed01c3108567757447e1663fa385977960e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f6eed01c3108567757447e1663fa385977960e7", "patch": "@@ -1,3 +1,7 @@\n+2014-05-16  Dehao Chen  <dehao@google.com>\n+\n+\t* tree-cfg.c (gimple_merge_blocks): Updates bb count with max count.\n+\n 2014-05-16  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/54089"}, {"sha": "25e65e0ea3860cba544a36bbb4d660f79daa5a16", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6eed01c3108567757447e1663fa385977960e7/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6eed01c3108567757447e1663fa385977960e7/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=2f6eed01c3108567757447e1663fa385977960e7", "patch": "@@ -1877,6 +1877,12 @@ gimple_merge_blocks (basic_block a, basic_block b)\n \t}\n     }\n \n+  /* When merging two BBs, if their counts are different, the larger count\n+     is selected as the new bb count. This is to handle inconsistent\n+     profiles.  */\n+  a->count = MAX (a->count, b->count);\n+  a->frequency = MAX (a->frequency, b->frequency);\n+\n   /* Merge the sequences.  */\n   last = gsi_last_bb (a);\n   gsi_insert_seq_after (&last, bb_seq (b), GSI_NEW_STMT);"}]}