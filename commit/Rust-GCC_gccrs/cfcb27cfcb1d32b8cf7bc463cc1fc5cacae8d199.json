{"sha": "cfcb27cfcb1d32b8cf7bc463cc1fc5cacae8d199", "node_id": "C_kwDOANBUbNoAKGNmY2IyN2NmY2IxZDMyYjhjZjdiYzQ2M2NjMWZjNWNhY2FlOGQxOTk", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-10-26T18:54:41Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-10-26T18:54:41Z"}, "message": "Fortran: do not restrict PDT KIND and LEN type parameters to default integer\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/102917\n\t* decl.c (match_attr_spec): Remove invalid integer kind checks on\n\tKIND and LEN attributes of PDTs.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/102917\n\t* gfortran.dg/pdt_4.f03: Adjust testcase.", "tree": {"sha": "db7b38be3be7f12ad248ee521ff17448d2ca1722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db7b38be3be7f12ad248ee521ff17448d2ca1722"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfcb27cfcb1d32b8cf7bc463cc1fc5cacae8d199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfcb27cfcb1d32b8cf7bc463cc1fc5cacae8d199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfcb27cfcb1d32b8cf7bc463cc1fc5cacae8d199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfcb27cfcb1d32b8cf7bc463cc1fc5cacae8d199/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99af0b2f0fe1c0dc8c6d558157e700326d52816a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99af0b2f0fe1c0dc8c6d558157e700326d52816a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99af0b2f0fe1c0dc8c6d558157e700326d52816a"}], "stats": {"total": 20, "additions": 2, "deletions": 18}, "files": [{"sha": "ce61e53eb7bfea78636782be05281c072dc12da3", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcb27cfcb1d32b8cf7bc463cc1fc5cacae8d199/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcb27cfcb1d32b8cf7bc463cc1fc5cacae8d199/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=cfcb27cfcb1d32b8cf7bc463cc1fc5cacae8d199", "patch": "@@ -5592,14 +5592,6 @@ match_attr_spec (void)\n \t\t  m = MATCH_ERROR;\n \t\t  goto cleanup;\n \t\t}\n-\t      if (current_ts.kind != gfc_default_integer_kind)\n-\t\t{\n-\t\t  gfc_error (\"Component with KIND attribute at %C must be \"\n-\t\t\t     \"default integer kind (%d)\",\n-\t\t\t      gfc_default_integer_kind);\n-\t\t  m = MATCH_ERROR;\n-\t\t  goto cleanup;\n-\t\t}\n \t    }\n \t  else if (d == DECL_LEN)\n \t    {\n@@ -5619,14 +5611,6 @@ match_attr_spec (void)\n \t\t  m = MATCH_ERROR;\n \t\t  goto cleanup;\n \t\t}\n-\t      if (current_ts.kind != gfc_default_integer_kind)\n-\t\t{\n-\t\t  gfc_error (\"Component with LEN attribute at %C must be \"\n-\t\t\t     \"default integer kind (%d)\",\n-\t\t\t      gfc_default_integer_kind);\n-\t\t  m = MATCH_ERROR;\n-\t\t  goto cleanup;\n-\t\t}\n \t    }\n \t  else\n \t    {"}, {"sha": "37412e4ca828b22c3a6b8f281fdd9d19a33c7591", "filename": "gcc/testsuite/gfortran.dg/pdt_4.f03", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcb27cfcb1d32b8cf7bc463cc1fc5cacae8d199/gcc%2Ftestsuite%2Fgfortran.dg%2Fpdt_4.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcb27cfcb1d32b8cf7bc463cc1fc5cacae8d199/gcc%2Ftestsuite%2Fgfortran.dg%2Fpdt_4.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpdt_4.f03?ref=cfcb27cfcb1d32b8cf7bc463cc1fc5cacae8d199", "patch": "@@ -28,9 +28,9 @@ module bad_vars\n \n   type :: bad_pdt (a,b, c, d)  ! { dg-error \"does not have a component\" }\n     real, kind :: a            ! { dg-error \"must be INTEGER\" }\n-    INTEGER(8), kind :: b      ! { dg-error \"be default integer kind\" }\n+    INTEGER(8), kind :: b\n     real, LEN :: c             ! { dg-error \"must be INTEGER\" }\n-    INTEGER(8), LEN :: d       ! { dg-error \"be default integer kind\" }\n+    INTEGER(8), LEN :: d\n   end type\n \n   type :: mytype (a,b)"}]}