{"sha": "6885e7e4eef65c657cd8baa0f5e7ebe7231ac984", "node_id": "C_kwDOANBUbNoAKDY4ODVlN2U0ZWVmNjVjNjU3Y2Q4YmFhMGY1ZTdlYmU3MjMxYWM5ODQ", "commit": {"author": {"name": "Arsen Arsenovi\u0107", "email": "arsen@aarsen.me", "date": "2022-09-16T08:38:41Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-03T14:43:48Z"}, "message": "libstdc++: Rework how freestanding install works [PR106953]\n\nIn light of there being far more freestanding headers now, ad-hoc\nmaintenance of a subset of the install implementation has become\nunsustainable. Instead, we gate off a part of the normal install routine\nso that it works without HOSTED enabled, as well as subdivide lists of\nheaders into freestanding and hosted components, according to the HOSTED\nflag.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/106953\n\t* include/Makefile.am [!_GLIBCXX_HOSTED]: Remove\n\tinstall-freestanding-headers, unifying it with the usual\n\tinstall-headers\n\t* include/Makefile.in: Regenerate.", "tree": {"sha": "9214db313be59c82582a9a606ae85291ee29bfd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9214db313be59c82582a9a606ae85291ee29bfd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6885e7e4eef65c657cd8baa0f5e7ebe7231ac984", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6885e7e4eef65c657cd8baa0f5e7ebe7231ac984", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6885e7e4eef65c657cd8baa0f5e7ebe7231ac984", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6885e7e4eef65c657cd8baa0f5e7ebe7231ac984/comments", "author": {"login": "ArsenArsen", "id": 7805050, "node_id": "MDQ6VXNlcjc4MDUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7805050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArsenArsen", "html_url": "https://github.com/ArsenArsen", "followers_url": "https://api.github.com/users/ArsenArsen/followers", "following_url": "https://api.github.com/users/ArsenArsen/following{/other_user}", "gists_url": "https://api.github.com/users/ArsenArsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArsenArsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArsenArsen/subscriptions", "organizations_url": "https://api.github.com/users/ArsenArsen/orgs", "repos_url": "https://api.github.com/users/ArsenArsen/repos", "events_url": "https://api.github.com/users/ArsenArsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ArsenArsen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18f176d0b25591e2880bc5ef453ce0834f9e0e2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18f176d0b25591e2880bc5ef453ce0834f9e0e2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18f176d0b25591e2880bc5ef453ce0834f9e0e2a"}], "stats": {"total": 956, "additions": 477, "deletions": 479}, "files": [{"sha": "97542524a694384a1fbccba42aea86bdf567bd8d", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 153, "deletions": 147, "changes": 300, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6885e7e4eef65c657cd8baa0f5e7ebe7231ac984/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6885e7e4eef65c657cd8baa0f5e7ebe7231ac984/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=6885e7e4eef65c657cd8baa0f5e7ebe7231ac984", "patch": "@@ -25,58 +25,70 @@ include $(top_srcdir)/fragment.am\n # Standard C++ includes.\n std_srcdir = ${glibcxx_srcdir}/include/std\n std_builddir = .\n-std_headers = \\\n+std_freestanding = \\\n \t${std_srcdir}/algorithm \\\n-\t${std_srcdir}/any \\\n \t${std_srcdir}/array \\\n \t${std_srcdir}/atomic \\\n-\t${std_srcdir}/barrier \\\n \t${std_srcdir}/bit \\\n \t${std_srcdir}/bitset \\\n+\t${std_srcdir}/concepts \\\n+\t${std_srcdir}/coroutine \\\n+\t${std_srcdir}/expected \\\n+\t${std_srcdir}/functional \\\n+\t${std_srcdir}/iterator \\\n+\t${std_srcdir}/limits \\\n+\t${std_srcdir}/memory \\\n+\t${std_srcdir}/numbers \\\n+\t${std_srcdir}/numeric \\\n+\t${std_srcdir}/optional \\\n+\t${std_srcdir}/ranges \\\n+\t${std_srcdir}/ratio \\\n+\t${std_srcdir}/scoped_allocator \\\n+\t${std_srcdir}/source_location \\\n+\t${std_srcdir}/span \\\n+\t${std_srcdir}/tuple \\\n+\t${std_srcdir}/type_traits \\\n+\t${std_srcdir}/typeindex \\\n+\t${std_srcdir}/utility \\\n+\t${std_srcdir}/variant \\\n+\t${std_srcdir}/version\n+\n+if !GLIBCXX_HOSTED\n+std_headers = ${std_freestanding}\n+else GLIBCXX_HOSTED\n+std_headers = \\\n+\t${std_freestanding} \\\n+\t${std_srcdir}/any \\\n+\t${std_srcdir}/barrier \\\n \t${std_srcdir}/charconv \\\n \t${std_srcdir}/chrono \\\n \t${std_srcdir}/codecvt \\\n \t${std_srcdir}/complex \\\n-\t${std_srcdir}/concepts \\\n \t${std_srcdir}/condition_variable \\\n-\t${std_srcdir}/coroutine \\\n \t${std_srcdir}/deque \\\n \t${std_srcdir}/execution \\\n-\t${std_srcdir}/expected \\\n \t${std_srcdir}/filesystem \\\n \t${std_srcdir}/forward_list \\\n \t${std_srcdir}/fstream \\\n-\t${std_srcdir}/functional \\\n \t${std_srcdir}/future \\\n \t${std_srcdir}/iomanip \\\n \t${std_srcdir}/ios \\\n \t${std_srcdir}/iosfwd \\\n \t${std_srcdir}/iostream \\\n \t${std_srcdir}/istream \\\n-\t${std_srcdir}/iterator \\\n \t${std_srcdir}/latch \\\n-\t${std_srcdir}/limits \\\n \t${std_srcdir}/list \\\n \t${std_srcdir}/locale \\\n \t${std_srcdir}/map \\\n-\t${std_srcdir}/memory \\\n \t${std_srcdir}/memory_resource \\\n \t${std_srcdir}/mutex \\\n-\t${std_srcdir}/numbers \\\n-\t${std_srcdir}/numeric \\\n-\t${std_srcdir}/optional \\\n \t${std_srcdir}/ostream \\\n \t${std_srcdir}/queue \\\n \t${std_srcdir}/random \\\n-\t${std_srcdir}/ranges \\\n-\t${std_srcdir}/ratio \\\n \t${std_srcdir}/regex \\\n-\t${std_srcdir}/scoped_allocator \\\n \t${std_srcdir}/semaphore \\\n \t${std_srcdir}/set \\\n \t${std_srcdir}/shared_mutex \\\n-\t${std_srcdir}/source_location \\\n-\t${std_srcdir}/span \\\n \t${std_srcdir}/spanstream \\\n \t${std_srcdir}/sstream \\\n \t${std_srcdir}/syncstream \\\n@@ -89,44 +101,81 @@ std_headers = \\\n \t${std_srcdir}/string_view \\\n \t${std_srcdir}/system_error \\\n \t${std_srcdir}/thread \\\n-\t${std_srcdir}/tuple \\\n-\t${std_srcdir}/typeindex \\\n-\t${std_srcdir}/type_traits \\\n \t${std_srcdir}/unordered_map \\\n \t${std_srcdir}/unordered_set \\\n-\t${std_srcdir}/utility \\\n \t${std_srcdir}/valarray \\\n-\t${std_srcdir}/variant \\\n-\t${std_srcdir}/vector \\\n-\t${std_srcdir}/version\n+\t${std_srcdir}/vector\n+endif GLIBCXX_HOSTED\n \n bits_srcdir = ${glibcxx_srcdir}/include/bits\n bits_builddir = ./bits\n-bits_headers = \\\n+bits_freestanding = \\\n \t${bits_srcdir}/algorithmfwd.h \\\n \t${bits_srcdir}/align.h \\\n-\t${bits_srcdir}/alloc_traits.h \\\n-\t${bits_srcdir}/allocated_ptr.h \\\n \t${bits_srcdir}/allocator.h \\\n+\t${bits_srcdir}/alloc_traits.h \\\n \t${bits_srcdir}/atomic_base.h \\\n+\t${bits_srcdir}/c++0x_warning.h \\\n+\t${bits_srcdir}/boost_concept_check.h \\\n+\t${bits_srcdir}/concept_check.h \\\n+\t${bits_srcdir}/cpp_type_traits.h \\\n+\t${bits_srcdir}/enable_special_members.h \\\n+\t${bits_srcdir}/functexcept.h \\\n+\t${bits_srcdir}/functional_hash.h \\\n+\t${bits_srcdir}/invoke.h \\\n+\t${bits_srcdir}/iterator_concepts.h \\\n+\t${bits_srcdir}/max_size_type.h \\\n+\t${bits_srcdir}/memoryfwd.h \\\n+\t${bits_srcdir}/move.h \\\n+\t${bits_srcdir}/predefined_ops.h \\\n+\t${bits_srcdir}/parse_numbers.h \\\n+\t${bits_srcdir}/ptr_traits.h \\\n+\t${bits_srcdir}/range_access.h \\\n+\t${bits_srcdir}/ranges_algo.h \\\n+\t${bits_srcdir}/ranges_algobase.h \\\n+\t${bits_srcdir}/ranges_base.h \\\n+\t${bits_srcdir}/ranges_cmp.h \\\n+\t${bits_srcdir}/ranges_uninitialized.h \\\n+\t${bits_srcdir}/ranges_util.h \\\n+\t${bits_srcdir}/refwrap.h \\\n+\t${bits_srcdir}/stl_algo.h \\\n+\t${bits_srcdir}/stl_algobase.h \\\n+\t${bits_srcdir}/stl_construct.h \\\n+\t${bits_srcdir}/stl_function.h \\\n+\t${bits_srcdir}/stl_iterator.h \\\n+\t${bits_srcdir}/stl_iterator_base_funcs.h \\\n+\t${bits_srcdir}/stl_iterator_base_types.h \\\n+\t${bits_srcdir}/stl_numeric.h \\\n+\t${bits_srcdir}/stl_heap.h \\\n+\t${bits_srcdir}/stl_pair.h \\\n+\t${bits_srcdir}/stl_raw_storage_iter.h \\\n+\t${bits_srcdir}/stl_relops.h \\\n+\t${bits_srcdir}/stl_uninitialized.h \\\n+\t${bits_srcdir}/uniform_int_dist.h \\\n+\t${bits_srcdir}/unique_ptr.h \\\n+\t${bits_srcdir}/uses_allocator.h \\\n+\t${bits_srcdir}/uses_allocator_args.h \\\n+\t${bits_srcdir}/utility.h\n+\n+if !GLIBCXX_HOSTED\n+bits_headers = ${bits_freestanding}\n+else GLIBCXX_HOSTED\n+bits_headers = \\\n+\t${bits_freestanding} \\\n+\t${bits_srcdir}/allocated_ptr.h \\\n \t${bits_srcdir}/atomic_futex.h \\\n \t${bits_srcdir}/atomic_timed_wait.h \\\n \t${bits_srcdir}/atomic_wait.h \\\n \t${bits_srcdir}/basic_ios.h \\\n \t${bits_srcdir}/basic_ios.tcc \\\n \t${bits_srcdir}/basic_string.h \\\n \t${bits_srcdir}/basic_string.tcc \\\n-\t${bits_srcdir}/boost_concept_check.h \\\n-\t${bits_srcdir}/c++0x_warning.h \\\n \t${bits_srcdir}/char_traits.h \\\n \t${bits_srcdir}/charconv.h \\\n \t${bits_srcdir}/chrono.h \\\n \t${bits_srcdir}/codecvt.h \\\n-\t${bits_srcdir}/concept_check.h \\\n \t${bits_srcdir}/cow_string.h \\\n-\t${bits_srcdir}/cpp_type_traits.h \\\n \t${bits_srcdir}/deque.tcc \\\n-\t${bits_srcdir}/enable_special_members.h \\\n \t${bits_srcdir}/erase_if.h \\\n \t${bits_srcdir}/forward_list.h \\\n \t${bits_srcdir}/forward_list.tcc \\\n@@ -135,17 +184,13 @@ bits_headers = \\\n \t${bits_srcdir}/fs_ops.h \\\n \t${bits_srcdir}/fs_path.h \\\n \t${bits_srcdir}/fstream.tcc \\\n-\t${bits_srcdir}/functexcept.h \\\n-\t${bits_srcdir}/functional_hash.h \\\n \t${bits_srcdir}/gslice.h \\\n \t${bits_srcdir}/gslice_array.h \\\n \t${bits_srcdir}/hashtable.h \\\n \t${bits_srcdir}/hashtable_policy.h \\\n \t${bits_srcdir}/indirect_array.h \\\n-\t${bits_srcdir}/invoke.h \\\n \t${bits_srcdir}/ios_base.h \\\n \t${bits_srcdir}/istream.tcc \\\n-\t${bits_srcdir}/iterator_concepts.h \\\n \t${bits_srcdir}/list.tcc \\\n \t${bits_srcdir}/locale_classes.h \\\n \t${bits_srcdir}/locale_classes.tcc \\\n@@ -156,31 +201,17 @@ bits_headers = \\\n \t${bits_srcdir}/locale_facets_nonio.tcc \\\n \t${bits_srcdir}/localefwd.h \\\n \t${bits_srcdir}/mask_array.h \\\n-\t${bits_srcdir}/max_size_type.h \\\n \t${bits_srcdir}/memory_resource.h \\\n-\t${bits_srcdir}/memoryfwd.h \\\n \t${bits_srcdir}/mofunc_impl.h \\\n-\t${bits_srcdir}/move.h \\\n \t${bits_srcdir}/move_only_function.h \\\n \t${bits_srcdir}/new_allocator.h \\\n \t${bits_srcdir}/node_handle.h \\\n \t${bits_srcdir}/ostream.tcc \\\n \t${bits_srcdir}/ostream_insert.h \\\n-\t${bits_srcdir}/parse_numbers.h \\\n \t${bits_srcdir}/postypes.h \\\n-\t${bits_srcdir}/predefined_ops.h \\\n-\t${bits_srcdir}/ptr_traits.h \\\n \t${bits_srcdir}/quoted_string.h \\\n \t${bits_srcdir}/random.h \\\n \t${bits_srcdir}/random.tcc \\\n-\t${bits_srcdir}/range_access.h \\\n-\t${bits_srcdir}/ranges_algobase.h \\\n-\t${bits_srcdir}/ranges_algo.h \\\n-\t${bits_srcdir}/ranges_base.h \\\n-\t${bits_srcdir}/ranges_cmp.h \\\n-\t${bits_srcdir}/ranges_uninitialized.h \\\n-\t${bits_srcdir}/ranges_util.h \\\n-\t${bits_srcdir}/refwrap.h \\\n \t${bits_srcdir}/regex.h \\\n \t${bits_srcdir}/regex.tcc \\\n \t${bits_srcdir}/regex_constants.h \\\n@@ -205,50 +236,34 @@ bits_headers = \\\n \t${bits_srcdir}/std_function.h \\\n \t${bits_srcdir}/std_mutex.h \\\n \t${bits_srcdir}/std_thread.h \\\n-\t${bits_srcdir}/stl_algo.h \\\n-\t${bits_srcdir}/stl_algobase.h \\\n \t${bits_srcdir}/stl_bvector.h \\\n-\t${bits_srcdir}/stl_construct.h \\\n \t${bits_srcdir}/stl_deque.h \\\n-\t${bits_srcdir}/stl_function.h \\\n-\t${bits_srcdir}/stl_heap.h \\\n-\t${bits_srcdir}/stl_iterator.h \\\n-\t${bits_srcdir}/stl_iterator_base_funcs.h \\\n-\t${bits_srcdir}/stl_iterator_base_types.h \\\n \t${bits_srcdir}/stl_list.h \\\n \t${bits_srcdir}/stl_map.h \\\n \t${bits_srcdir}/stl_multimap.h \\\n \t${bits_srcdir}/stl_multiset.h \\\n-\t${bits_srcdir}/stl_numeric.h \\\n-\t${bits_srcdir}/stl_pair.h \\\n \t${bits_srcdir}/stl_queue.h \\\n-\t${bits_srcdir}/stl_raw_storage_iter.h \\\n \t${bits_srcdir}/stl_relops.h \\\n \t${bits_srcdir}/stl_set.h \\\n \t${bits_srcdir}/stl_stack.h \\\n \t${bits_srcdir}/stl_tempbuf.h \\\n \t${bits_srcdir}/stl_tree.h \\\n-\t${bits_srcdir}/stl_uninitialized.h \\\n \t${bits_srcdir}/stl_vector.h \\\n \t${bits_srcdir}/stream_iterator.h \\\n \t${bits_srcdir}/streambuf_iterator.h \\\n \t${bits_srcdir}/streambuf.tcc \\\n \t${bits_srcdir}/stringfwd.h \\\n \t${bits_srcdir}/string_view.tcc \\\n \t${bits_srcdir}/this_thread_sleep.h \\\n-\t${bits_srcdir}/uniform_int_dist.h \\\n \t${bits_srcdir}/unique_lock.h \\\n-\t${bits_srcdir}/unique_ptr.h \\\n \t${bits_srcdir}/unordered_map.h \\\n \t${bits_srcdir}/unordered_set.h \\\n-\t${bits_srcdir}/uses_allocator.h \\\n-\t${bits_srcdir}/uses_allocator_args.h \\\n-\t${bits_srcdir}/utility.h \\\n \t${bits_srcdir}/valarray_array.h \\\n \t${bits_srcdir}/valarray_array.tcc \\\n \t${bits_srcdir}/valarray_before.h \\\n \t${bits_srcdir}/valarray_after.h \\\n \t${bits_srcdir}/vector.tcc\n+endif GLIBCXX_HOSTED\n \n bits_host_headers = \\\n \t${glibcxx_srcdir}/${CPU_OPT_BITS_RANDOM}\n@@ -293,15 +308,22 @@ pstl_headers = \\\n \n backward_srcdir = ${glibcxx_srcdir}/include/backward\n backward_builddir = ./backward\n-backward_headers = \\\n+backward_freestanding = \\\n \t${backward_srcdir}/auto_ptr.h \\\n+\t${backward_srcdir}/binders.h\n+\n+if !GLIBCXX_HOSTED\n+backward_headers = ${backward_freestanding}\n+else GLIBCXX_HOSTED\n+backward_headers = \\\n+\t${backward_freestanding} \\\n \t${backward_srcdir}/backward_warning.h \\\n-\t${backward_srcdir}/binders.h \\\n \t${backward_srcdir}/hash_map \\\n \t${backward_srcdir}/hash_set \\\n \t${backward_srcdir}/hash_fun.h \\\n \t${backward_srcdir}/hashtable.h \\\n \t${backward_srcdir}/strstream\n+endif GLIBCXX_HOSTED\n \n pb_srcdir = ${glibcxx_srcdir}/include/ext/pb_ds\n pb_builddir = ./ext/pb_ds\n@@ -597,49 +619,56 @@ pb_headers7 = \\\n \n ext_srcdir = ${glibcxx_srcdir}/include/ext\n ext_builddir = ./ext\n-ext_headers = \\\n-\t${ext_srcdir}/algorithm \\\n+ext_freestanding = \\\n \t${ext_srcdir}/aligned_buffer.h \\\n \t${ext_srcdir}/alloc_traits.h \\\n \t${ext_srcdir}/atomicity.h \\\n-\t${ext_srcdir}/bitmap_allocator.h \\\n \t${ext_srcdir}/cast.h \\\n+\t${ext_srcdir}/concurrence.h \\\n+\t${ext_srcdir}/numeric_traits.h \\\n+\t${ext_srcdir}/iterator \\\n+\t${ext_srcdir}/pointer.h \\\n+\t${ext_srcdir}/type_traits.h \\\n+\t${ext_srcdir}/typelist.h\n+\n+if !GLIBCXX_HOSTED\n+ext_headers = ${ext_freestanding}\n+else GLIBCXX_HOSTED\n+ext_headers = \\\n+\t${ext_freestanding} \\\n+\t${ext_srcdir}/algorithm \\\n+\t${ext_srcdir}/bitmap_allocator.h \\\n \t${ext_srcdir}/cmath \\\n \t${ext_srcdir}/codecvt_specializations.h \\\n-\t${ext_srcdir}/concurrence.h \\\n \t${ext_srcdir}/debug_allocator.h \\\n \t${ext_srcdir}/enc_filebuf.h \\\n \t${ext_srcdir}/extptr_allocator.h \\\n-\t${ext_srcdir}/stdio_filebuf.h \\\n-\t${ext_srcdir}/stdio_sync_filebuf.h \\\n \t${ext_srcdir}/functional \\\n-\t${ext_srcdir}/iterator \\\n \t${ext_srcdir}/malloc_allocator.h \\\n \t${ext_srcdir}/memory \\\n \t${ext_srcdir}/mt_allocator.h \\\n \t${ext_srcdir}/new_allocator.h \\\n \t${ext_srcdir}/numeric \\\n-\t${ext_srcdir}/numeric_traits.h \\\n \t${ext_srcdir}/pod_char_traits.h \\\n-\t${ext_srcdir}/pointer.h \\\n \t${ext_srcdir}/pool_allocator.h \\\n-\t${ext_srcdir}/rb_tree \\\n \t${ext_srcdir}/random \\\n \t${ext_srcdir}/random.tcc \\\n+\t${ext_srcdir}/rb_tree \\\n+\t${ext_srcdir}/rc_string_base.h \\\n \t${ext_srcdir}/rope \\\n \t${ext_srcdir}/ropeimpl.h \\\n \t${ext_srcdir}/slist \\\n+\t${ext_srcdir}/sso_string_base.h \\\n+\t${ext_srcdir}/stdio_filebuf.h \\\n+\t${ext_srcdir}/stdio_sync_filebuf.h \\\n \t${ext_srcdir}/string_conversions.h \\\n \t${ext_srcdir}/throw_allocator.h \\\n-\t${ext_srcdir}/typelist.h \\\n-\t${ext_srcdir}/type_traits.h \\\n-\t${ext_srcdir}/rc_string_base.h \\\n-\t${ext_srcdir}/sso_string_base.h \\\n+\t${ext_srcdir}/vstring_fwd.h \\\n \t${ext_srcdir}/vstring.h \\\n \t${ext_srcdir}/vstring.tcc \\\n-\t${ext_srcdir}/vstring_fwd.h \\\n \t${ext_srcdir}/vstring_util.h \\\n \t${ext_compat_headers}\n+endif GLIBCXX_HOSTED\n \n ext_compat_headers = \\\n \t${backward_srcdir}/hash_set \\\n@@ -812,33 +841,40 @@ endif\n # This is the common subset of C++ files that all three \"C\" header models use.\n c_base_srcdir = $(C_INCLUDE_DIR)\n c_base_builddir = .\n+c_base_freestanding = \\\n+\t${c_base_srcdir}/cfloat \\\n+\t${c_base_srcdir}/climits \\\n+\t${c_base_srcdir}/cstddef \\\n+\t${c_base_srcdir}/cstdint \\\n+\t${c_base_srcdir}/cstdlib\n+\n+if !GLIBCXX_HOSTED\n+c_base_headers = ${c_base_freestanding}\n+else GLIBCXX_HOSTED\n c_base_headers = \\\n+\t${c_base_freestanding} \\\n \t${c_base_srcdir}/cassert \\\n \t${c_base_srcdir}/ccomplex \\\n \t${c_base_srcdir}/cctype \\\n \t${c_base_srcdir}/cerrno \\\n \t${c_base_srcdir}/cfenv \\\n-\t${c_base_srcdir}/cfloat \\\n \t${c_base_srcdir}/cinttypes \\\n \t${c_base_srcdir}/ciso646 \\\n-\t${c_base_srcdir}/climits \\\n \t${c_base_srcdir}/clocale \\\n \t${c_base_srcdir}/cmath \\\n \t${c_base_srcdir}/csetjmp \\\n \t${c_base_srcdir}/csignal \\\n \t${c_base_srcdir}/cstdalign \\\n \t${c_base_srcdir}/cstdarg \\\n \t${c_base_srcdir}/cstdbool \\\n-\t${c_base_srcdir}/cstddef \\\n-\t${c_base_srcdir}/cstdint \\\n \t${c_base_srcdir}/cstdio \\\n-\t${c_base_srcdir}/cstdlib \\\n \t${c_base_srcdir}/cstring \\\n \t${c_base_srcdir}/ctgmath \\\n \t${c_base_srcdir}/ctime \\\n \t${c_base_srcdir}/cuchar \\\n \t${c_base_srcdir}/cwchar \\\n \t${c_base_srcdir}/cwctype\n+endif GLIBCXX_HOSTED\n \n # \"C\" compatibility headers.\n c_compatibility_srcdir = ${glibcxx_srcdir}/include/c_compatibility\n@@ -890,10 +926,16 @@ endif\n # Debug mode headers\n debug_srcdir = ${glibcxx_srcdir}/include/debug\n debug_builddir = ./debug\n-debug_headers = \\\n+debug_freestanding = \\\n \t${debug_srcdir}/assertions.h \\\n+\t${debug_srcdir}/debug.h\n+\n+if !GLIBCXX_HOSTED\n+debug_headers = ${debug_freestanding}\n+else GLIBCXX_HOSTED\n+debug_headers = \\\n+\t${debug_freestanding} \\\n \t${debug_srcdir}/bitset \\\n-\t${debug_srcdir}/debug.h \\\n \t${debug_srcdir}/deque \\\n \t${debug_srcdir}/formatter.h \\\n \t${debug_srcdir}/forward_list \\\n@@ -923,6 +965,7 @@ debug_headers = \\\n \t${debug_srcdir}/unordered_map \\\n \t${debug_srcdir}/unordered_set \\\n \t${debug_srcdir}/vector\n+endif GLIBCXX_HOSTED\n \n # Parallel mode headers\n parallel_srcdir = ${glibcxx_srcdir}/include/parallel\n@@ -1415,48 +1458,8 @@ ${pch3_output}: ${pch3_source} ${pch2_output}\n \t-mkdir -p ${pch3_output_builddir}\n \t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O2 -g ${pch3_source} -o $@\n \n-# For robustness sake (in light of junk files or in-source\n-# configuration), copy from the build or source tree to the install\n-# tree using only the human-maintained file lists and directory\n-# components.  Yes, with minor differences, this is sheer duplication\n-# of the staging rules above using $(INSTALL_DATA) instead of LN_S and\n-# `$(mkinstalldirs)' instead of `mkdir -p'.  In particular,\n-# host_headers_extra are taken out of the build tree staging area;\n-# the rest are taken from the original source tree.\n-\n-if GLIBCXX_HOSTED\n-install-data-local: install-headers\n-else\n-install-data-local: install-freestanding-headers\n-endif\n-\n-# This is a subset of the full install-headers rule.  We only need <ciso646>,\n-# <cstddef>, <cfloat>, <limits>, <climits>, <version>, <cstdint>, <cstdlib>,\n-# <new>, <typeinfo>, <exception>, <initializer_list>, <cstdalign>, <cstdarg>,\n-# <concepts>, <coroutine>, <cstdbool>, <type_traits>, <bit>, <atomic>,\n-# <source_location> and any files which they include (and which we provide).\n-# <new>, <typeinfo>, <exception>, <initializer_list> and <compare>\n-# are installed by libsupc++, so only the others and the sub-includes\n-# are copied here.\n-install-freestanding-headers:\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/bits\n-\tfor file in c++0x_warning.h atomic_base.h concept_check.h move.h; do \\\n-\t  $(INSTALL_DATA) ${glibcxx_srcdir}/include/bits/$${file} $(DESTDIR)${gxx_include_dir}/bits; done\n-\t$(mkinstalldirs) $(DESTDIR)${host_installdir}\n-\tfor file in ${host_srcdir}/os_defines.h ${host_builddir}/c++config.h \\\n-\t  ${glibcxx_srcdir}/$(ABI_TWEAKS_SRCDIR)/cxxabi_tweaks.h \\\n-\t  ${glibcxx_srcdir}/$(CPU_DEFINES_SRCDIR)/cpu_defines.h; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${host_installdir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${std_builddir}\n-\tfor file in limits type_traits atomic bit concepts coroutine \\\n-\t  source_location version; do \\\n-\t  $(INSTALL_DATA) ${std_builddir}/$${file} $(DESTDIR)${gxx_include_dir}/${std_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${c_base_builddir}\n-\tfor file in ciso646 cstddef cfloat climits cstdint cstdlib \\\n-\t  cstdalign cstdarg cstdbool; do \\\n-\t  $(INSTALL_DATA) ${c_base_builddir}/$${file} $(DESTDIR)${gxx_include_dir}/${c_base_builddir}; done\n-\n # The real deal.\n+install-data-local: install-headers\n install-headers:\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${bits_builddir}\n@@ -1465,10 +1468,24 @@ install-headers:\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${backward_builddir}\n \tfor file in ${backward_headers}; do \\\n \t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${backward_builddir}; done\n+\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${std_builddir}\n+\tfor file in ${std_headers}; do \\\n+\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${std_builddir}; done\n+\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${debug_builddir}\n+\tfor file in ${debug_headers}; do \\\n+\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${debug_builddir}; done\n+\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${pb_builddir}\n+\t$(mkinstalldirs) $(DESTDIR)${host_installdir}\n+\tfor file in ${host_headers} ${bits_host_headers} ${host_headers_extra} \\\n+\t ${thread_host_headers}; do \\\n+\t  $(INSTALL_DATA) $${file} $(DESTDIR)${host_installdir}; done\n+\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${c_base_builddir}\n+\tfor file in ${c_base_headers}; do \\\n+\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${c_base_builddir}; done\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${ext_builddir}\n \tfor file in ${ext_headers}; do \\\n \t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${ext_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${pb_builddir}\n+if GLIBCXX_HOSTED\n \tfor dir in ${pb_subdirs}; do \\\n \t  $(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/$${dir} ; done\n \tfor file in ${pb_headers1}; do \\\n@@ -1514,34 +1531,23 @@ install-headers:\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${experimental_bits_builddir}\n \tfor file in ${experimental_bits_headers}; do \\\n \t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${experimental_bits_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${c_base_builddir}\n-\tfor file in ${c_base_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${c_base_builddir}; done\n \tc_base_headers_extra_install='$(c_base_headers_extra)';\\\n \tfor file in $$c_base_headers_extra_install; do \\\n \t  $(INSTALL_DATA) $$file $(DESTDIR)${gxx_include_dir}/${bits_builddir}; done\n \tc_compatibility_headers_install='$(c_compatibility_headers_extra)';\\\n \tfor file in $$c_compatibility_headers_install; do \\\n \t  $(INSTALL_DATA) $$file $(DESTDIR)${gxx_include_dir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${std_builddir}\n-\tfor file in ${std_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${std_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${debug_builddir}\n-\tfor file in ${debug_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${debug_builddir}; done\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${parallel_builddir}\n \tfor file in ${parallel_headers}; do \\\n \t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${parallel_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${host_installdir}\n-\tfor file in ${host_headers} ${bits_host_headers} ${host_headers_extra} \\\n-\t ${thread_host_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${host_installdir}; done\n \t$(mkinstalldirs) $(DESTDIR)${host_installdir}/../ext\n \tfor file in ${ext_host_headers}; do \\\n \t  $(INSTALL_DATA) $${file} $(DESTDIR)${host_installdir}/../ext; done\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${pstl_builddir}\n \tfor file in ${pstl_headers}; do \\\n \t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${pstl_builddir}; done\n+endif GLIBCXX_HOSTED\n+\n # By adding these files here, automake will remove them for 'make clean'\n CLEANFILES = ${pch_output} ${pch_output_anchors} stamp-host\n "}, {"sha": "26d2f6a6d85cae6d523341602560c6a795d38701", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 324, "deletions": 332, "changes": 656, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6885e7e4eef65c657cd8baa0f5e7ebe7231ac984/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6885e7e4eef65c657cd8baa0f5e7ebe7231ac984/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=6885e7e4eef65c657cd8baa0f5e7ebe7231ac984", "patch": "@@ -380,233 +380,249 @@ WARN_CXXFLAGS = \\\n # -I/-D flags to pass when compiling.\n AM_CPPFLAGS = $(GLIBCXX_INCLUDES) $(CPPFLAGS)\n \n+# Regarding *_freestanding:\n+# For including files in freestanding, create a new _freestanding variable, and\n+# split *_headers across an ``if GLIBCXX_HOSTED'', then update install-headers\n+# to account for the new directory/set being added.\n+# If such a variable exists, simply add to either *_headers or *_freestanding,\n+# as appropriate.\n+\n # Standard C++ includes.\n std_srcdir = ${glibcxx_srcdir}/include/std\n std_builddir = .\n-std_headers = \\\n+std_freestanding = \\\n \t${std_srcdir}/algorithm \\\n-\t${std_srcdir}/any \\\n \t${std_srcdir}/array \\\n \t${std_srcdir}/atomic \\\n-\t${std_srcdir}/barrier \\\n \t${std_srcdir}/bit \\\n-\t${std_srcdir}/bitset \\\n-\t${std_srcdir}/charconv \\\n-\t${std_srcdir}/chrono \\\n-\t${std_srcdir}/codecvt \\\n-\t${std_srcdir}/complex \\\n \t${std_srcdir}/concepts \\\n-\t${std_srcdir}/condition_variable \\\n \t${std_srcdir}/coroutine \\\n-\t${std_srcdir}/deque \\\n-\t${std_srcdir}/execution \\\n-\t${std_srcdir}/expected \\\n-\t${std_srcdir}/filesystem \\\n-\t${std_srcdir}/forward_list \\\n-\t${std_srcdir}/fstream \\\n \t${std_srcdir}/functional \\\n-\t${std_srcdir}/future \\\n-\t${std_srcdir}/iomanip \\\n-\t${std_srcdir}/ios \\\n-\t${std_srcdir}/iosfwd \\\n-\t${std_srcdir}/iostream \\\n-\t${std_srcdir}/istream \\\n \t${std_srcdir}/iterator \\\n-\t${std_srcdir}/latch \\\n \t${std_srcdir}/limits \\\n-\t${std_srcdir}/list \\\n-\t${std_srcdir}/locale \\\n-\t${std_srcdir}/map \\\n \t${std_srcdir}/memory \\\n-\t${std_srcdir}/memory_resource \\\n-\t${std_srcdir}/mutex \\\n \t${std_srcdir}/numbers \\\n-\t${std_srcdir}/numeric \\\n \t${std_srcdir}/optional \\\n-\t${std_srcdir}/ostream \\\n-\t${std_srcdir}/queue \\\n-\t${std_srcdir}/random \\\n \t${std_srcdir}/ranges \\\n \t${std_srcdir}/ratio \\\n-\t${std_srcdir}/regex \\\n-\t${std_srcdir}/scoped_allocator \\\n-\t${std_srcdir}/semaphore \\\n-\t${std_srcdir}/set \\\n-\t${std_srcdir}/shared_mutex \\\n \t${std_srcdir}/source_location \\\n \t${std_srcdir}/span \\\n-\t${std_srcdir}/spanstream \\\n-\t${std_srcdir}/sstream \\\n-\t${std_srcdir}/syncstream \\\n-\t${std_srcdir}/stack \\\n-\t${std_srcdir}/stacktrace \\\n-\t${std_srcdir}/stdexcept \\\n-\t${std_srcdir}/stop_token \\\n-\t${std_srcdir}/streambuf \\\n-\t${std_srcdir}/string \\\n-\t${std_srcdir}/string_view \\\n-\t${std_srcdir}/system_error \\\n-\t${std_srcdir}/thread \\\n \t${std_srcdir}/tuple \\\n-\t${std_srcdir}/typeindex \\\n \t${std_srcdir}/type_traits \\\n-\t${std_srcdir}/unordered_map \\\n-\t${std_srcdir}/unordered_set \\\n \t${std_srcdir}/utility \\\n-\t${std_srcdir}/valarray \\\n \t${std_srcdir}/variant \\\n-\t${std_srcdir}/vector \\\n \t${std_srcdir}/version\n \n+@GLIBCXX_HOSTED_FALSE@std_headers = ${std_freestanding}\n+@GLIBCXX_HOSTED_TRUE@std_headers = \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_freestanding} \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/any \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/barrier \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/bitset \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/charconv \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/chrono \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/codecvt \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/complex \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/condition_variable \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/deque \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/execution \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/expected \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/filesystem \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/forward_list \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/fstream \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/future \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/iomanip \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/ios \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/iosfwd \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/iostream \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/istream \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/latch \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/list \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/locale \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/map \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/memory_resource \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/mutex \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/numeric \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/ostream \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/queue \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/random \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/regex \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/scoped_allocator \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/semaphore \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/set \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/shared_mutex \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/spanstream \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/sstream \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/syncstream \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/stack \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/stacktrace \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/stdexcept \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/stop_token \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/streambuf \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/string \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/string_view \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/system_error \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/thread \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/typeindex \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/unordered_map \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/unordered_set \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/valarray \\\n+@GLIBCXX_HOSTED_TRUE@\t${std_srcdir}/vector\n+\n bits_srcdir = ${glibcxx_srcdir}/include/bits\n bits_builddir = ./bits\n-bits_headers = \\\n+bits_freestanding = \\\n \t${bits_srcdir}/algorithmfwd.h \\\n \t${bits_srcdir}/align.h \\\n-\t${bits_srcdir}/alloc_traits.h \\\n-\t${bits_srcdir}/allocated_ptr.h \\\n \t${bits_srcdir}/allocator.h \\\n+\t${bits_srcdir}/alloc_traits.h \\\n \t${bits_srcdir}/atomic_base.h \\\n-\t${bits_srcdir}/atomic_futex.h \\\n-\t${bits_srcdir}/atomic_timed_wait.h \\\n-\t${bits_srcdir}/atomic_wait.h \\\n-\t${bits_srcdir}/basic_ios.h \\\n-\t${bits_srcdir}/basic_ios.tcc \\\n-\t${bits_srcdir}/basic_string.h \\\n-\t${bits_srcdir}/basic_string.tcc \\\n-\t${bits_srcdir}/boost_concept_check.h \\\n \t${bits_srcdir}/c++0x_warning.h \\\n-\t${bits_srcdir}/char_traits.h \\\n-\t${bits_srcdir}/charconv.h \\\n-\t${bits_srcdir}/chrono.h \\\n-\t${bits_srcdir}/codecvt.h \\\n \t${bits_srcdir}/concept_check.h \\\n-\t${bits_srcdir}/cow_string.h \\\n \t${bits_srcdir}/cpp_type_traits.h \\\n-\t${bits_srcdir}/deque.tcc \\\n \t${bits_srcdir}/enable_special_members.h \\\n-\t${bits_srcdir}/erase_if.h \\\n-\t${bits_srcdir}/forward_list.h \\\n-\t${bits_srcdir}/forward_list.tcc \\\n-\t${bits_srcdir}/fs_dir.h \\\n-\t${bits_srcdir}/fs_fwd.h \\\n-\t${bits_srcdir}/fs_ops.h \\\n-\t${bits_srcdir}/fs_path.h \\\n-\t${bits_srcdir}/fstream.tcc \\\n \t${bits_srcdir}/functexcept.h \\\n \t${bits_srcdir}/functional_hash.h \\\n-\t${bits_srcdir}/gslice.h \\\n-\t${bits_srcdir}/gslice_array.h \\\n-\t${bits_srcdir}/hashtable.h \\\n-\t${bits_srcdir}/hashtable_policy.h \\\n-\t${bits_srcdir}/indirect_array.h \\\n \t${bits_srcdir}/invoke.h \\\n-\t${bits_srcdir}/ios_base.h \\\n-\t${bits_srcdir}/istream.tcc \\\n \t${bits_srcdir}/iterator_concepts.h \\\n-\t${bits_srcdir}/list.tcc \\\n-\t${bits_srcdir}/locale_classes.h \\\n-\t${bits_srcdir}/locale_classes.tcc \\\n-\t${bits_srcdir}/locale_conv.h \\\n-\t${bits_srcdir}/locale_facets.h \\\n-\t${bits_srcdir}/locale_facets.tcc \\\n-\t${bits_srcdir}/locale_facets_nonio.h \\\n-\t${bits_srcdir}/locale_facets_nonio.tcc \\\n-\t${bits_srcdir}/localefwd.h \\\n-\t${bits_srcdir}/mask_array.h \\\n \t${bits_srcdir}/max_size_type.h \\\n-\t${bits_srcdir}/memory_resource.h \\\n \t${bits_srcdir}/memoryfwd.h \\\n-\t${bits_srcdir}/mofunc_impl.h \\\n \t${bits_srcdir}/move.h \\\n-\t${bits_srcdir}/move_only_function.h \\\n-\t${bits_srcdir}/new_allocator.h \\\n-\t${bits_srcdir}/node_handle.h \\\n-\t${bits_srcdir}/ostream.tcc \\\n-\t${bits_srcdir}/ostream_insert.h \\\n-\t${bits_srcdir}/parse_numbers.h \\\n-\t${bits_srcdir}/postypes.h \\\n \t${bits_srcdir}/predefined_ops.h \\\n+\t${bits_srcdir}/parse_numbers.h \\\n \t${bits_srcdir}/ptr_traits.h \\\n-\t${bits_srcdir}/quoted_string.h \\\n-\t${bits_srcdir}/random.h \\\n-\t${bits_srcdir}/random.tcc \\\n \t${bits_srcdir}/range_access.h \\\n-\t${bits_srcdir}/ranges_algobase.h \\\n \t${bits_srcdir}/ranges_algo.h \\\n+\t${bits_srcdir}/ranges_algobase.h \\\n \t${bits_srcdir}/ranges_base.h \\\n \t${bits_srcdir}/ranges_cmp.h \\\n \t${bits_srcdir}/ranges_uninitialized.h \\\n \t${bits_srcdir}/ranges_util.h \\\n \t${bits_srcdir}/refwrap.h \\\n-\t${bits_srcdir}/regex.h \\\n-\t${bits_srcdir}/regex.tcc \\\n-\t${bits_srcdir}/regex_constants.h \\\n-\t${bits_srcdir}/regex_error.h \\\n-\t${bits_srcdir}/regex_scanner.h \\\n-\t${bits_srcdir}/regex_scanner.tcc \\\n-\t${bits_srcdir}/regex_automaton.h \\\n-\t${bits_srcdir}/regex_automaton.tcc \\\n-\t${bits_srcdir}/regex_compiler.h \\\n-\t${bits_srcdir}/regex_compiler.tcc \\\n-\t${bits_srcdir}/regex_executor.h \\\n-\t${bits_srcdir}/regex_executor.tcc \\\n-\t${bits_srcdir}/requires_hosted.h \\\n-\t${bits_srcdir}/semaphore_base.h \\\n-\t${bits_srcdir}/shared_ptr.h \\\n-\t${bits_srcdir}/shared_ptr_atomic.h \\\n-\t${bits_srcdir}/shared_ptr_base.h \\\n-\t${bits_srcdir}/slice_array.h \\\n-\t${bits_srcdir}/specfun.h \\\n-\t${bits_srcdir}/sstream.tcc \\\n-\t${bits_srcdir}/std_abs.h \\\n-\t${bits_srcdir}/std_function.h \\\n-\t${bits_srcdir}/std_mutex.h \\\n-\t${bits_srcdir}/std_thread.h \\\n \t${bits_srcdir}/stl_algo.h \\\n \t${bits_srcdir}/stl_algobase.h \\\n-\t${bits_srcdir}/stl_bvector.h \\\n \t${bits_srcdir}/stl_construct.h \\\n-\t${bits_srcdir}/stl_deque.h \\\n \t${bits_srcdir}/stl_function.h \\\n-\t${bits_srcdir}/stl_heap.h \\\n \t${bits_srcdir}/stl_iterator.h \\\n \t${bits_srcdir}/stl_iterator_base_funcs.h \\\n \t${bits_srcdir}/stl_iterator_base_types.h \\\n-\t${bits_srcdir}/stl_list.h \\\n-\t${bits_srcdir}/stl_map.h \\\n-\t${bits_srcdir}/stl_multimap.h \\\n-\t${bits_srcdir}/stl_multiset.h \\\n-\t${bits_srcdir}/stl_numeric.h \\\n+\t${bits_srcdir}/stl_heap.h \\\n \t${bits_srcdir}/stl_pair.h \\\n-\t${bits_srcdir}/stl_queue.h \\\n \t${bits_srcdir}/stl_raw_storage_iter.h \\\n \t${bits_srcdir}/stl_relops.h \\\n-\t${bits_srcdir}/stl_set.h \\\n-\t${bits_srcdir}/stl_stack.h \\\n-\t${bits_srcdir}/stl_tempbuf.h \\\n-\t${bits_srcdir}/stl_tree.h \\\n \t${bits_srcdir}/stl_uninitialized.h \\\n-\t${bits_srcdir}/stl_vector.h \\\n-\t${bits_srcdir}/stream_iterator.h \\\n-\t${bits_srcdir}/streambuf_iterator.h \\\n-\t${bits_srcdir}/streambuf.tcc \\\n-\t${bits_srcdir}/stringfwd.h \\\n-\t${bits_srcdir}/string_view.tcc \\\n-\t${bits_srcdir}/this_thread_sleep.h \\\n \t${bits_srcdir}/uniform_int_dist.h \\\n-\t${bits_srcdir}/unique_lock.h \\\n \t${bits_srcdir}/unique_ptr.h \\\n-\t${bits_srcdir}/unordered_map.h \\\n-\t${bits_srcdir}/unordered_set.h \\\n \t${bits_srcdir}/uses_allocator.h \\\n \t${bits_srcdir}/uses_allocator_args.h \\\n-\t${bits_srcdir}/utility.h \\\n-\t${bits_srcdir}/valarray_array.h \\\n-\t${bits_srcdir}/valarray_array.tcc \\\n-\t${bits_srcdir}/valarray_before.h \\\n-\t${bits_srcdir}/valarray_after.h \\\n-\t${bits_srcdir}/vector.tcc\n+\t${bits_srcdir}/utility.h\n+\n+@GLIBCXX_HOSTED_FALSE@bits_headers = ${bits_freestanding}\n+@GLIBCXX_HOSTED_TRUE@bits_headers = \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_freestanding} \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/allocated_ptr.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/atomic_futex.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/atomic_timed_wait.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/atomic_wait.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/basic_ios.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/basic_ios.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/basic_string.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/basic_string.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/boost_concept_check.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/char_traits.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/charconv.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/chrono.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/codecvt.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/cow_string.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/deque.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/erase_if.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/forward_list.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/forward_list.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/fs_dir.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/fs_fwd.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/fs_ops.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/fs_path.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/fstream.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/gslice.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/gslice_array.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/hashtable.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/hashtable_policy.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/indirect_array.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/ios_base.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/istream.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/list.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/locale_classes.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/locale_classes.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/locale_conv.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/locale_facets.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/locale_facets.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/locale_facets_nonio.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/locale_facets_nonio.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/localefwd.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/mask_array.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/memory_resource.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/mofunc_impl.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/move_only_function.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/new_allocator.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/node_handle.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/ostream.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/ostream_insert.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/postypes.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/quoted_string.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/random.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/random.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/regex.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/regex.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/regex_constants.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/regex_error.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/regex_scanner.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/regex_scanner.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/regex_automaton.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/regex_automaton.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/regex_compiler.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/regex_compiler.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/regex_executor.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/regex_executor.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/requires_hosted.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/semaphore_base.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/shared_ptr.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/shared_ptr_atomic.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/shared_ptr_base.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/slice_array.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/specfun.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/sstream.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/std_abs.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/std_function.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/std_mutex.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/std_thread.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_bvector.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_deque.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_list.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_map.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_multimap.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_multiset.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_numeric.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_queue.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_relops.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_set.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_stack.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_tempbuf.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_tree.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stl_vector.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stream_iterator.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/streambuf_iterator.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/streambuf.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/stringfwd.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/string_view.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/this_thread_sleep.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/unique_lock.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/unordered_map.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/unordered_set.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/valarray_array.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/valarray_array.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/valarray_before.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/valarray_after.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${bits_srcdir}/vector.tcc\n \n bits_host_headers = \\\n \t${glibcxx_srcdir}/${CPU_OPT_BITS_RANDOM}\n@@ -652,15 +668,19 @@ pstl_headers = \\\n \n backward_srcdir = ${glibcxx_srcdir}/include/backward\n backward_builddir = ./backward\n-backward_headers = \\\n+backward_freestanding = \\\n \t${backward_srcdir}/auto_ptr.h \\\n-\t${backward_srcdir}/backward_warning.h \\\n-\t${backward_srcdir}/binders.h \\\n-\t${backward_srcdir}/hash_map \\\n-\t${backward_srcdir}/hash_set \\\n-\t${backward_srcdir}/hash_fun.h \\\n-\t${backward_srcdir}/hashtable.h \\\n-\t${backward_srcdir}/strstream\n+\t${backward_srcdir}/binders.h\n+\n+@GLIBCXX_HOSTED_FALSE@backward_headers = ${backward_freestanding}\n+@GLIBCXX_HOSTED_TRUE@backward_headers = \\\n+@GLIBCXX_HOSTED_TRUE@\t${backward_freestanding} \\\n+@GLIBCXX_HOSTED_TRUE@\t${backward_srcdir}/backward_warning.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${backward_srcdir}/hash_map \\\n+@GLIBCXX_HOSTED_TRUE@\t${backward_srcdir}/hash_set \\\n+@GLIBCXX_HOSTED_TRUE@\t${backward_srcdir}/hash_fun.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${backward_srcdir}/hashtable.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${backward_srcdir}/strstream\n \n pb_srcdir = ${glibcxx_srcdir}/include/ext/pb_ds\n pb_builddir = ./ext/pb_ds\n@@ -967,8 +987,6 @@ ext_headers = \\\n \t${ext_srcdir}/debug_allocator.h \\\n \t${ext_srcdir}/enc_filebuf.h \\\n \t${ext_srcdir}/extptr_allocator.h \\\n-\t${ext_srcdir}/stdio_filebuf.h \\\n-\t${ext_srcdir}/stdio_sync_filebuf.h \\\n \t${ext_srcdir}/functional \\\n \t${ext_srcdir}/iterator \\\n \t${ext_srcdir}/malloc_allocator.h \\\n@@ -980,21 +998,23 @@ ext_headers = \\\n \t${ext_srcdir}/pod_char_traits.h \\\n \t${ext_srcdir}/pointer.h \\\n \t${ext_srcdir}/pool_allocator.h \\\n-\t${ext_srcdir}/rb_tree \\\n \t${ext_srcdir}/random \\\n \t${ext_srcdir}/random.tcc \\\n+\t${ext_srcdir}/rb_tree \\\n+\t${ext_srcdir}/rc_string_base.h \\\n \t${ext_srcdir}/rope \\\n \t${ext_srcdir}/ropeimpl.h \\\n \t${ext_srcdir}/slist \\\n+\t${ext_srcdir}/sso_string_base.h \\\n+\t${ext_srcdir}/stdio_filebuf.h \\\n+\t${ext_srcdir}/stdio_sync_filebuf.h \\\n \t${ext_srcdir}/string_conversions.h \\\n \t${ext_srcdir}/throw_allocator.h \\\n \t${ext_srcdir}/typelist.h \\\n \t${ext_srcdir}/type_traits.h \\\n-\t${ext_srcdir}/rc_string_base.h \\\n-\t${ext_srcdir}/sso_string_base.h \\\n+\t${ext_srcdir}/vstring_fwd.h \\\n \t${ext_srcdir}/vstring.h \\\n \t${ext_srcdir}/vstring.tcc \\\n-\t${ext_srcdir}/vstring_fwd.h \\\n \t${ext_srcdir}/vstring_util.h \\\n \t${ext_compat_headers}\n \n@@ -1169,33 +1189,37 @@ experimental_bits_headers = \\\n # This is the common subset of C++ files that all three \"C\" header models use.\n c_base_srcdir = $(C_INCLUDE_DIR)\n c_base_builddir = .\n-c_base_headers = \\\n-\t${c_base_srcdir}/cassert \\\n-\t${c_base_srcdir}/ccomplex \\\n-\t${c_base_srcdir}/cctype \\\n-\t${c_base_srcdir}/cerrno \\\n-\t${c_base_srcdir}/cfenv \\\n+c_base_freestanding = \\\n \t${c_base_srcdir}/cfloat \\\n-\t${c_base_srcdir}/cinttypes \\\n-\t${c_base_srcdir}/ciso646 \\\n \t${c_base_srcdir}/climits \\\n-\t${c_base_srcdir}/clocale \\\n-\t${c_base_srcdir}/cmath \\\n-\t${c_base_srcdir}/csetjmp \\\n-\t${c_base_srcdir}/csignal \\\n-\t${c_base_srcdir}/cstdalign \\\n-\t${c_base_srcdir}/cstdarg \\\n-\t${c_base_srcdir}/cstdbool \\\n \t${c_base_srcdir}/cstddef \\\n \t${c_base_srcdir}/cstdint \\\n-\t${c_base_srcdir}/cstdio \\\n-\t${c_base_srcdir}/cstdlib \\\n-\t${c_base_srcdir}/cstring \\\n-\t${c_base_srcdir}/ctgmath \\\n-\t${c_base_srcdir}/ctime \\\n-\t${c_base_srcdir}/cuchar \\\n-\t${c_base_srcdir}/cwchar \\\n-\t${c_base_srcdir}/cwctype\n+\t${c_base_srcdir}/cstdlib\n+\n+@GLIBCXX_HOSTED_FALSE@c_base_headers = ${c_base_freestanding}\n+@GLIBCXX_HOSTED_TRUE@c_base_headers = \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_freestanding} \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cassert \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/ccomplex \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cctype \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cerrno \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cfenv \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cinttypes \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/ciso646 \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/clocale \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cmath \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/csetjmp \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/csignal \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cstdalign \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cstdarg \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cstdbool \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cstdio \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cstring \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/ctgmath \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/ctime \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cuchar \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cwchar \\\n+@GLIBCXX_HOSTED_TRUE@\t${c_base_srcdir}/cwctype\n \n \n # \"C\" compatibility headers.\n@@ -1241,39 +1265,43 @@ c_compatibility_builddir = .\n # Debug mode headers\n debug_srcdir = ${glibcxx_srcdir}/include/debug\n debug_builddir = ./debug\n-debug_headers = \\\n+debug_freestanding = \\\n \t${debug_srcdir}/assertions.h \\\n-\t${debug_srcdir}/bitset \\\n-\t${debug_srcdir}/debug.h \\\n-\t${debug_srcdir}/deque \\\n-\t${debug_srcdir}/formatter.h \\\n-\t${debug_srcdir}/forward_list \\\n-\t${debug_srcdir}/functions.h \\\n-\t${debug_srcdir}/helper_functions.h \\\n-\t${debug_srcdir}/list \\\n-\t${debug_srcdir}/map \\\n-\t${debug_srcdir}/macros.h \\\n-\t${debug_srcdir}/map.h \\\n-\t${debug_srcdir}/multimap.h \\\n-\t${debug_srcdir}/multiset.h \\\n-\t${debug_srcdir}/safe_base.h \\\n-\t${debug_srcdir}/safe_container.h \\\n-\t${debug_srcdir}/safe_iterator.h \\\n-\t${debug_srcdir}/safe_iterator.tcc \\\n-\t${debug_srcdir}/safe_local_iterator.h \\\n-\t${debug_srcdir}/safe_local_iterator.tcc \\\n-\t${debug_srcdir}/safe_sequence.h \\\n-\t${debug_srcdir}/safe_sequence.tcc \\\n-\t${debug_srcdir}/safe_unordered_base.h \\\n-\t${debug_srcdir}/safe_unordered_container.h \\\n-\t${debug_srcdir}/safe_unordered_container.tcc \\\n-\t${debug_srcdir}/set \\\n-\t${debug_srcdir}/set.h \\\n-\t${debug_srcdir}/stl_iterator.h \\\n-\t${debug_srcdir}/string \\\n-\t${debug_srcdir}/unordered_map \\\n-\t${debug_srcdir}/unordered_set \\\n-\t${debug_srcdir}/vector\n+\t${debug_srcdir}/debug.h\n+\n+@GLIBCXX_HOSTED_FALSE@debug_headers = ${debug_freestanding}\n+@GLIBCXX_HOSTED_TRUE@debug_headers = \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_freestanding} \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/bitset \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/deque \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/formatter.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/forward_list \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/functions.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/helper_functions.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/list \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/map \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/macros.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/map.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/multimap.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/multiset.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/safe_base.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/safe_container.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/safe_iterator.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/safe_iterator.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/safe_local_iterator.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/safe_local_iterator.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/safe_sequence.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/safe_sequence.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/safe_unordered_base.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/safe_unordered_container.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/safe_unordered_container.tcc \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/set \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/set.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/stl_iterator.h \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/string \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/unordered_map \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/unordered_set \\\n+@GLIBCXX_HOSTED_TRUE@\t${debug_srcdir}/vector\n \n \n # Parallel mode headers\n@@ -1416,6 +1444,7 @@ allcreated = \\\n \n # Host includes for threads\n uppercase = [ABCDEFGHIJKLMNOPQRSTUVWXYZ_]\n+\n # By adding these files here, automake will remove them for 'make clean'\n CLEANFILES = ${pch_output} ${pch_output_anchors} stamp-host\n all: all-am\n@@ -1906,45 +1935,8 @@ ${pch3_output}: ${pch3_source} ${pch2_output}\n \t-mkdir -p ${pch3_output_builddir}\n \t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O2 -g ${pch3_source} -o $@\n \n-# For robustness sake (in light of junk files or in-source\n-# configuration), copy from the build or source tree to the install\n-# tree using only the human-maintained file lists and directory\n-# components.  Yes, with minor differences, this is sheer duplication\n-# of the staging rules above using $(INSTALL_DATA) instead of LN_S and\n-# `$(mkinstalldirs)' instead of `mkdir -p'.  In particular,\n-# host_headers_extra are taken out of the build tree staging area;\n-# the rest are taken from the original source tree.\n-\n-@GLIBCXX_HOSTED_TRUE@install-data-local: install-headers\n-@GLIBCXX_HOSTED_FALSE@install-data-local: install-freestanding-headers\n-\n-# This is a subset of the full install-headers rule.  We only need <ciso646>,\n-# <cstddef>, <cfloat>, <limits>, <climits>, <version>, <cstdint>, <cstdlib>,\n-# <new>, <typeinfo>, <exception>, <initializer_list>, <cstdalign>, <cstdarg>,\n-# <concepts>, <coroutine>, <cstdbool>, <type_traits>, <bit>, <atomic>,\n-# <source_location> and any files which they include (and which we provide).\n-# <new>, <typeinfo>, <exception>, <initializer_list> and <compare>\n-# are installed by libsupc++, so only the others and the sub-includes\n-# are copied here.\n-install-freestanding-headers:\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/bits\n-\tfor file in c++0x_warning.h atomic_base.h concept_check.h move.h; do \\\n-\t  $(INSTALL_DATA) ${glibcxx_srcdir}/include/bits/$${file} $(DESTDIR)${gxx_include_dir}/bits; done\n-\t$(mkinstalldirs) $(DESTDIR)${host_installdir}\n-\tfor file in ${host_srcdir}/os_defines.h ${host_builddir}/c++config.h \\\n-\t  ${glibcxx_srcdir}/$(ABI_TWEAKS_SRCDIR)/cxxabi_tweaks.h \\\n-\t  ${glibcxx_srcdir}/$(CPU_DEFINES_SRCDIR)/cpu_defines.h; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${host_installdir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${std_builddir}\n-\tfor file in limits type_traits atomic bit concepts coroutine \\\n-\t  source_location version; do \\\n-\t  $(INSTALL_DATA) ${std_builddir}/$${file} $(DESTDIR)${gxx_include_dir}/${std_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${c_base_builddir}\n-\tfor file in ciso646 cstddef cfloat climits cstdint cstdlib \\\n-\t  cstdalign cstdarg cstdbool; do \\\n-\t  $(INSTALL_DATA) ${c_base_builddir}/$${file} $(DESTDIR)${gxx_include_dir}/${c_base_builddir}; done\n-\n # The real deal.\n+install-data-local: install-headers\n install-headers:\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${bits_builddir}\n@@ -1956,80 +1948,80 @@ install-headers:\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${ext_builddir}\n \tfor file in ${ext_headers}; do \\\n \t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${ext_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${pb_builddir}\n-\tfor dir in ${pb_subdirs}; do \\\n-\t  $(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/$${dir} ; done\n-\tfor file in ${pb_headers1}; do \\\n-\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n-\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n-\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n-\tfor file in ${pb_headers2}; do \\\n-\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n-\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n-\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n-\tfor file in ${pb_headers3}; do \\\n-\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n-\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n-\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n-\tfor file in ${pb_headers4}; do \\\n-\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n-\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n-\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n-\tfor file in ${pb_headers5}; do \\\n-\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n-\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n-\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n-\tfor file in ${pb_headers6}; do \\\n-\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n-\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n-\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n-\tfor file in ${pb_headers7}; do \\\n-\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n-\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n-\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${tr1_builddir}\n-\tfor file in ${tr1_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${tr1_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${tr2_builddir}\n-\tfor file in ${tr2_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${tr2_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${decimal_builddir}\n-\tfor file in ${decimal_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${decimal_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${experimental_builddir}\n-\tfor file in ${experimental_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${experimental_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${experimental_bits_builddir}\n-\tfor file in ${experimental_bits_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${experimental_bits_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${c_base_builddir}\n-\tfor file in ${c_base_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${c_base_builddir}; done\n-\tc_base_headers_extra_install='$(c_base_headers_extra)';\\\n-\tfor file in $$c_base_headers_extra_install; do \\\n-\t  $(INSTALL_DATA) $$file $(DESTDIR)${gxx_include_dir}/${bits_builddir}; done\n-\tc_compatibility_headers_install='$(c_compatibility_headers_extra)';\\\n-\tfor file in $$c_compatibility_headers_install; do \\\n-\t  $(INSTALL_DATA) $$file $(DESTDIR)${gxx_include_dir}; done\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${std_builddir}\n \tfor file in ${std_headers}; do \\\n \t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${std_builddir}; done\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${debug_builddir}\n \tfor file in ${debug_headers}; do \\\n \t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${debug_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${parallel_builddir}\n-\tfor file in ${parallel_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${parallel_builddir}; done\n+\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${pb_builddir}\n \t$(mkinstalldirs) $(DESTDIR)${host_installdir}\n \tfor file in ${host_headers} ${bits_host_headers} ${host_headers_extra} \\\n \t ${thread_host_headers}; do \\\n \t  $(INSTALL_DATA) $${file} $(DESTDIR)${host_installdir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${host_installdir}/../ext\n-\tfor file in ${ext_host_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${host_installdir}/../ext; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${pstl_builddir}\n-\tfor file in ${pstl_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${pstl_builddir}; done\n+\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${c_base_builddir}\n+\tfor file in ${c_base_headers}; do \\\n+\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${c_base_builddir}; done\n+@GLIBCXX_HOSTED_TRUE@\tfor dir in ${pb_subdirs}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  $(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/$${dir} ; done\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${pb_headers1}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n+@GLIBCXX_HOSTED_TRUE@\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${pb_headers2}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n+@GLIBCXX_HOSTED_TRUE@\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${pb_headers3}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n+@GLIBCXX_HOSTED_TRUE@\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${pb_headers4}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n+@GLIBCXX_HOSTED_TRUE@\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${pb_headers5}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n+@GLIBCXX_HOSTED_TRUE@\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${pb_headers6}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n+@GLIBCXX_HOSTED_TRUE@\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${pb_headers7}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  install_base=$(DESTDIR)${gxx_include_dir}/${pb_builddir} ; \\\n+@GLIBCXX_HOSTED_TRUE@\t  relative_name=`echo $$file | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $${install_base}/$${relative_name} ; done\n+@GLIBCXX_HOSTED_TRUE@\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${tr1_builddir}\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${tr1_headers}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${tr1_builddir}; done\n+@GLIBCXX_HOSTED_TRUE@\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${tr2_builddir}\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${tr2_headers}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${tr2_builddir}; done\n+@GLIBCXX_HOSTED_TRUE@\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${decimal_builddir}\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${decimal_headers}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${decimal_builddir}; done\n+@GLIBCXX_HOSTED_TRUE@\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${experimental_builddir}\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${experimental_headers}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${experimental_builddir}; done\n+@GLIBCXX_HOSTED_TRUE@\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${experimental_bits_builddir}\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${experimental_bits_headers}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${experimental_bits_builddir}; done\n+@GLIBCXX_HOSTED_TRUE@\tc_base_headers_extra_install='$(c_base_headers_extra)';\\\n+@GLIBCXX_HOSTED_TRUE@\tfor file in $$c_base_headers_extra_install; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $$file $(DESTDIR)${gxx_include_dir}/${bits_builddir}; done\n+@GLIBCXX_HOSTED_TRUE@\tc_compatibility_headers_install='$(c_compatibility_headers_extra)';\\\n+@GLIBCXX_HOSTED_TRUE@\tfor file in $$c_compatibility_headers_install; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $$file $(DESTDIR)${gxx_include_dir}; done\n+@GLIBCXX_HOSTED_TRUE@\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${parallel_builddir}\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${parallel_headers}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${parallel_builddir}; done\n+@GLIBCXX_HOSTED_TRUE@\t$(mkinstalldirs) $(DESTDIR)${host_installdir}/../ext\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${ext_host_headers}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $(DESTDIR)${host_installdir}/../ext; done\n+@GLIBCXX_HOSTED_TRUE@\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${pstl_builddir}\n+@GLIBCXX_HOSTED_TRUE@\tfor file in ${pstl_headers}; do \\\n+@GLIBCXX_HOSTED_TRUE@\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${pstl_builddir}; done\n \n # To remove directories.\n clean-local:"}]}