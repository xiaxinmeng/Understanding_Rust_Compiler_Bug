{"sha": "d23ebaf0c497c175e4e15e9a2b71f8979d5a5c9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIzZWJhZjBjNDk3YzE3NWU0ZTE1ZTlhMmI3MWY4OTc5ZDVhNWM5Zg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2007-07-25T11:18:16Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2007-07-25T11:18:16Z"}, "message": "20070725-1.c: Testcase for revision 126876 added.\n\n2007-07-25  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* gcc.dg/20070725-1.c: Testcase for revision 126876 added.\n\nFrom-SVN: r126909", "tree": {"sha": "94a21e5fb80374d53b51dc446dca0386539cccbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94a21e5fb80374d53b51dc446dca0386539cccbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d23ebaf0c497c175e4e15e9a2b71f8979d5a5c9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23ebaf0c497c175e4e15e9a2b71f8979d5a5c9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d23ebaf0c497c175e4e15e9a2b71f8979d5a5c9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23ebaf0c497c175e4e15e9a2b71f8979d5a5c9f/comments", "author": null, "committer": null, "parents": [{"sha": "3c72bf3495671dc8d9d4c2b075a265f2f72908ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c72bf3495671dc8d9d4c2b075a265f2f72908ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c72bf3495671dc8d9d4c2b075a265f2f72908ae"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "44bc8d4f277e7292bd3e49ccb58ef16b1a36f274", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d23ebaf0c497c175e4e15e9a2b71f8979d5a5c9f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d23ebaf0c497c175e4e15e9a2b71f8979d5a5c9f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d23ebaf0c497c175e4e15e9a2b71f8979d5a5c9f", "patch": "@@ -1,3 +1,7 @@\n+2007-07-25  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* gcc.dg/20070725-1.c: Testcase for revision 126876 added.\n+\n 2007-07-25  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \t* gcc.dg/tree-ssa/predcom-1.c (count_averages): Avoid overflow"}, {"sha": "c7a0337c76fe7440810f2d20a46e0f2775c81db2", "filename": "gcc/testsuite/gcc.dg/20070725-1.c", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d23ebaf0c497c175e4e15e9a2b71f8979d5a5c9f/gcc%2Ftestsuite%2Fgcc.dg%2F20070725-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d23ebaf0c497c175e4e15e9a2b71f8979d5a5c9f/gcc%2Ftestsuite%2Fgcc.dg%2F20070725-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20070725-1.c?ref=d23ebaf0c497c175e4e15e9a2b71f8979d5a5c9f", "patch": "@@ -0,0 +1,63 @@\n+/* This used to fail due to a ifcombine problem wrecking 64bit\n+   checks.  Fixed with rev. 126876.  */\n+/* { dg-do run } */\n+/* { dg-options \"-O1\" } */\n+\n+struct tree_base\n+{\n+  unsigned code:16;\n+\n+  unsigned side_effects_flag:1;\n+  unsigned constant_flag:1;\n+  unsigned addressable_flag:1;\n+  unsigned volatile_flag:1;\n+  unsigned readonly_flag:1;\n+  unsigned unsigned_flag:1;\n+  unsigned asm_written_flag:1;\n+  unsigned nowarning_flag:1;\n+\n+  unsigned used_flag:1;\n+  unsigned nothrow_flag:1;\n+  unsigned static_flag:1;\n+  unsigned public_flag:1;\n+  unsigned private_flag:1;\n+  unsigned protected_flag:1;\n+  unsigned deprecated_flag:1;\n+  unsigned invariant_flag:1;\n+\n+  unsigned lang_flag_0:1;\n+  unsigned lang_flag_1:1;\n+  unsigned lang_flag_2:1;\n+  unsigned lang_flag_3:1;\n+  unsigned lang_flag_4:1;\n+  unsigned lang_flag_5:1;\n+  unsigned lang_flag_6:1;\n+  unsigned visited:1;\n+\n+  unsigned spare:24;\n+  unsigned long  a;\n+};\n+\n+int\n+foo (struct tree_base *rhs)\n+{\n+  if (({const struct tree_base* __t = (rhs);  __t;})->readonly_flag\n+      && (rhs)->static_flag)\n+    return 1;\n+\n+  return 0;\n+}\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+  struct tree_base t;\n+\n+  t.readonly_flag = t.static_flag = 0;\n+  if (foo (&t))\n+    abort ();\n+\n+  return 0;\n+}"}]}