{"sha": "e7590e9543f8405806efc39c20718da1f5d43640", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc1OTBlOTU0M2Y4NDA1ODA2ZWZjMzljMjA3MThkYTFmNWQ0MzY0MA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2005-04-13T01:02:40Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2005-04-13T01:02:40Z"}, "message": "Fix missed replacements.\n\nFrom-SVN: r98063", "tree": {"sha": "5a3c29ebfd76134531c5a09e687698994b0b9c3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a3c29ebfd76134531c5a09e687698994b0b9c3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7590e9543f8405806efc39c20718da1f5d43640", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7590e9543f8405806efc39c20718da1f5d43640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7590e9543f8405806efc39c20718da1f5d43640", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7590e9543f8405806efc39c20718da1f5d43640/comments", "author": null, "committer": null, "parents": [{"sha": "4cf88ac3438e29202b8eaf2d7c85e70dd2222733", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf88ac3438e29202b8eaf2d7c85e70dd2222733", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cf88ac3438e29202b8eaf2d7c85e70dd2222733"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "66f1ef8c6db359d1d423648811cca687ec1a4407", "filename": "libiberty/regex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7590e9543f8405806efc39c20718da1f5d43640/libiberty%2Fregex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7590e9543f8405806efc39c20718da1f5d43640/libiberty%2Fregex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fregex.c?ref=e7590e9543f8405806efc39c20718da1f5d43640", "patch": "@@ -6174,7 +6174,7 @@ byte_re_match_2_internal (struct re_pattern_buffer *bufp,\n #endif /* WCHAR */\n \t    boolean negate = (re_opcode_t) *(p - 1) == charset_not;\n \n-            DEBUG_PRINT2 (\"EXECUTING charset%s.\\n\", not ? \"_not\" : \"\");\n+            DEBUG_PRINT2 (\"EXECUTING charset%s.\\n\", negate ? \"_not\" : \"\");\n \t    PREFETCH ();\n \t    c = TRANSLATE (*d); /* The character to match.  */\n #ifdef WCHAR\n@@ -6544,7 +6544,7 @@ byte_re_match_2_internal (struct re_pattern_buffer *bufp,\n \t    negate = !negate;\n \n \t  char_set_matched:\n-\t    if (not) goto fail;\n+\t    if (negate) goto fail;\n #else\n             /* Cast to `unsigned' instead of `unsigned char' in case the\n                bit list is a full 32 bytes long.  */"}]}