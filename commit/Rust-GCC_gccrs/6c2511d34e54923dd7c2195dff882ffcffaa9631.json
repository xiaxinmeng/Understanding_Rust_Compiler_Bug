{"sha": "6c2511d34e54923dd7c2195dff882ffcffaa9631", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMyNTExZDM0ZTU0OTIzZGQ3YzIxOTVkZmY4ODJmZmNmZmFhOTYzMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-05-28T06:27:31Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-05-28T06:27:31Z"}, "message": "rtl.h (skip_consecutive_labels): Declare.\n\n\t* rtl.h (skip_consecutive_labels): Declare.\n\t* emit-rtl.c (skip_consecutive_labels): New function.\n\t* reorg.c (relax_delay_slots, dbr_schedule): Use it.\n\t* jump.c (follow_jumps): Say what null return values mean.\n\nFrom-SVN: r82357", "tree": {"sha": "01cb54144d0b7a3428f399cddba1a9e459851788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01cb54144d0b7a3428f399cddba1a9e459851788"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c2511d34e54923dd7c2195dff882ffcffaa9631", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c2511d34e54923dd7c2195dff882ffcffaa9631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c2511d34e54923dd7c2195dff882ffcffaa9631", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c2511d34e54923dd7c2195dff882ffcffaa9631/comments", "author": null, "committer": null, "parents": [{"sha": "4fbf3498e4c9f43d7143d22f7a0b0f0ce9a067bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fbf3498e4c9f43d7143d22f7a0b0f0ce9a067bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fbf3498e4c9f43d7143d22f7a0b0f0ce9a067bf"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "618d6d4dc2dd831a993f34dbe1c600a5a287666b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c2511d34e54923dd7c2195dff882ffcffaa9631/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c2511d34e54923dd7c2195dff882ffcffaa9631/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c2511d34e54923dd7c2195dff882ffcffaa9631", "patch": "@@ -1,3 +1,10 @@\n+2004-05-28  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* rtl.h (skip_consecutive_labels): Declare.\n+\t* emit-rtl.c (skip_consecutive_labels): New function.\n+\t* reorg.c (relax_delay_slots, dbr_schedule): Use it.\n+\t* jump.c (follow_jumps): Say what null return values mean.\n+\n 2004-05-28  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \tPR target/13250"}, {"sha": "c3503ee8f039efdb4b06bf8fc5681dd5fc6b4ee2", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c2511d34e54923dd7c2195dff882ffcffaa9631/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c2511d34e54923dd7c2195dff882ffcffaa9631/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=6c2511d34e54923dd7c2195dff882ffcffaa9631", "patch": "@@ -3109,6 +3109,21 @@ prev_label (rtx insn)\n \n   return insn;\n }\n+\n+/* Return the last label to mark the same position as LABEL.  Return null\n+   if LABEL itself is null.  */\n+\n+rtx\n+skip_consecutive_labels (rtx label)\n+{\n+  rtx insn;\n+\n+  for (insn = label; insn != 0 && !INSN_P (insn); insn = NEXT_INSN (insn))\n+    if (LABEL_P (insn))\n+      label = insn;\n+\n+  return label;\n+}\n \f\n #ifdef HAVE_cc0\n /* INSN uses CC0 and is being moved into a delay slot.  Set up REG_CC_SETTER"}, {"sha": "6ead32207739d6e8c6ccfc11e0e6cc4889deb90f", "filename": "gcc/jump.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c2511d34e54923dd7c2195dff882ffcffaa9631/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c2511d34e54923dd7c2195dff882ffcffaa9631/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=6c2511d34e54923dd7c2195dff882ffcffaa9631", "patch": "@@ -999,6 +999,7 @@ sets_cc0_p (rtx x)\n \f\n /* Follow any unconditional jump at LABEL;\n    return the ultimate label reached by any such chain of jumps.\n+   Return null if the chain ultimately leads to a return instruction.\n    If LABEL is not followed by a jump, return LABEL.\n    If the chain loops or we can't find end, return LABEL,\n    since that tells caller to avoid changing the insn."}, {"sha": "ff321628137f6a8d981f42f9348798bb4be85d69", "filename": "gcc/reorg.c", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c2511d34e54923dd7c2195dff882ffcffaa9631/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c2511d34e54923dd7c2195dff882ffcffaa9631/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=6c2511d34e54923dd7c2195dff882ffcffaa9631", "patch": "@@ -3079,11 +3079,7 @@ relax_delay_slots (rtx first)\n \t  && (condjump_p (insn) || condjump_in_parallel_p (insn))\n \t  && (target_label = JUMP_LABEL (insn)) != 0)\n \t{\n-\t  target_label = follow_jumps (target_label);\n-\t  /* See comment further down why we must use next_real_insn here,\n-\t     instead of next_active_insn.  */\n-\t  target_label = prev_label (next_real_insn (target_label));\n-\n+\t  target_label = skip_consecutive_labels (follow_jumps (target_label));\n \t  if (target_label == 0)\n \t    target_label = find_end_label ();\n \n@@ -3231,14 +3227,8 @@ relax_delay_slots (rtx first)\n \t{\n \t  /* If this jump goes to another unconditional jump, thread it, but\n \t     don't convert a jump into a RETURN here.  */\n-\t  trial = follow_jumps (target_label);\n-\t  /* We use next_real_insn instead of next_active_insn, so that\n-\t     the special USE insns emitted by reorg won't be ignored.\n-\t     If they are ignored, then they will get deleted if target_label\n-\t     is now unreachable, and that would cause mark_target_live_regs\n-\t     to fail.  */\n-\t  trial = prev_label (next_real_insn (trial));\n-\t  if (trial == 0 && target_label != 0)\n+\t  trial = skip_consecutive_labels (follow_jumps (target_label));\n+\t  if (trial == 0)\n \t    trial = find_end_label ();\n \n \t  if (trial != target_label\n@@ -3621,7 +3611,7 @@ dbr_schedule (rtx first, FILE *file)\n       if (GET_CODE (insn) == JUMP_INSN\n \t  && (condjump_p (insn) || condjump_in_parallel_p (insn))\n \t  && JUMP_LABEL (insn) != 0\n-\t  && ((target = prev_label (next_active_insn (JUMP_LABEL (insn))))\n+\t  && ((target = skip_consecutive_labels (JUMP_LABEL (insn)))\n \t      != JUMP_LABEL (insn)))\n \tredirect_jump (insn, target, 1);\n     }"}, {"sha": "5c0be4dc939c145e486bdb7347830e92835b3c36", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c2511d34e54923dd7c2195dff882ffcffaa9631/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c2511d34e54923dd7c2195dff882ffcffaa9631/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=6c2511d34e54923dd7c2195dff882ffcffaa9631", "patch": "@@ -1695,6 +1695,7 @@ extern rtx next_active_insn (rtx);\n extern int active_insn_p (rtx);\n extern rtx prev_label (rtx);\n extern rtx next_label (rtx);\n+extern rtx skip_consecutive_labels (rtx);\n extern rtx next_cc0_user (rtx);\n extern rtx prev_cc0_setter (rtx);\n "}]}