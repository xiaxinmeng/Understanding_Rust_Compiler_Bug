{"sha": "ae1ef7801810850d3192881152f7d8a3af772177", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUxZWY3ODAxODEwODUwZDMxOTI4ODExNTJmN2Q4YTNhZjc3MjE3Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-09-11T16:42:35Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-09-11T16:42:35Z"}, "message": "i386.md (fyl2x_extend<mode>xf3_i387): Remove.\n\n\t* config/i386/i386.md (fyl2x_extend<mode>xf3_i387): Remove.\n\t(log<mode>2): Change operand 1 predicate to general_operand.\n\tExtend operand 1 to XFmode and generate logxf3 insn.\n\t(log10<mode>2): Change operand 1 predicate to general_operand.\n\tExtend operand 1 to XFmode and generate log10xf3 insn.\n\t(log2<mode>2): Change operand 1 predicate to general_operand.\n\tExtend operand 1 to XFmode and generate log2xf3 insn.\n\t(fyl2xp1_extend<mode>xf3_i387): Remove.\n\t(log1p<mode>2): Change operand 1 predicate to general_operand.\n\tExtend operand 1 to XFmode and generate log1pxf3 insn.\n\t(fxtract_extend<mode>xf3_i387): Remove.\n\t(logb<mode>2): Change operand 1 predicate to general_operand.\n\tExtend operand 1 to XFmode and generate logbxf3 insn.\n\t(ilogb<mode>2): Change operand 1 predicate to general_operand.\n\tExtend operand 1 to XFmode and generate fxtractxf3_i387 insn.\n\t(significand<mode>2): Change operand 1 predicate to general_operand.\n\tExtend operand 1 to XFmode and generate significandxf3 insn.\n\nFrom-SVN: r264211", "tree": {"sha": "fad474026e7275c3ae960ffcca36f320d5abc6ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fad474026e7275c3ae960ffcca36f320d5abc6ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae1ef7801810850d3192881152f7d8a3af772177", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1ef7801810850d3192881152f7d8a3af772177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae1ef7801810850d3192881152f7d8a3af772177", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1ef7801810850d3192881152f7d8a3af772177/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b949026d4ceb442a3cd43a429b36c800970a2d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b949026d4ceb442a3cd43a429b36c800970a2d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b949026d4ceb442a3cd43a429b36c800970a2d6"}], "stats": {"total": 215, "additions": 77, "deletions": 138}, "files": [{"sha": "7a5de30e7721a67ec82f114996a54ee365754b3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1ef7801810850d3192881152f7d8a3af772177/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1ef7801810850d3192881152f7d8a3af772177/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae1ef7801810850d3192881152f7d8a3af772177", "patch": "@@ -1,3 +1,23 @@\n+2018-09-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (fyl2x_extend<mode>xf3_i387): Remove.\n+\t(log<mode>2): Change operand 1 predicate to general_operand.\n+\tExtend operand 1 to XFmode and generate logxf3 insn.\n+\t(log10<mode>2): Change operand 1 predicate to general_operand.\n+\tExtend operand 1 to XFmode and generate log10xf3 insn.\n+\t(log2<mode>2): Change operand 1 predicate to general_operand.\n+\tExtend operand 1 to XFmode and generate log2xf3 insn.\n+\t(fyl2xp1_extend<mode>xf3_i387): Remove.\n+\t(log1p<mode>2): Change operand 1 predicate to general_operand.\n+\tExtend operand 1 to XFmode and generate log1pxf3 insn.\n+\t(fxtract_extend<mode>xf3_i387): Remove.\n+\t(logb<mode>2): Change operand 1 predicate to general_operand.\n+\tExtend operand 1 to XFmode and generate logbxf3 insn.\n+\t(ilogb<mode>2): Change operand 1 predicate to general_operand.\n+\tExtend operand 1 to XFmode and generate fxtractxf3_i387 insn.\n+\t(significand<mode>2): Change operand 1 predicate to general_operand.\n+\tExtend operand 1 to XFmode and generate significandxf3 insn.\n+\n 2018-09-11  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcc.c (perror_with_name, pfatal_with_name): Delete."}, {"sha": "44f5522759228ce84f1b6667f55fc4a2e9aa98ea", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 57, "deletions": 138, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1ef7801810850d3192881152f7d8a3af772177/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1ef7801810850d3192881152f7d8a3af772177/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=ae1ef7801810850d3192881152f7d8a3af772177", "patch": "@@ -15558,7 +15558,7 @@\n   for (i = 2; i < 6; i++)\n     operands[i] = gen_reg_rtx (XFmode);\n \n-  operands[3] = force_reg (XFmode, CONST1_RTX (XFmode));\n+  emit_move_insn (operands[3], CONST1_RTX (XFmode));\n })\n \n (define_expand \"asin<mode>2\"\n@@ -15596,7 +15596,7 @@\n   for (i = 2; i < 6; i++)\n     operands[i] = gen_reg_rtx (XFmode);\n \n-  operands[3] = force_reg (XFmode, CONST1_RTX (XFmode));\n+  emit_move_insn (operands[3], CONST1_RTX (XFmode));\n })\n \n (define_expand \"acos<mode>2\"\n@@ -15629,22 +15629,6 @@\n    (set_attr \"znver1_decode\" \"vector\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"fyl2x_extend<mode>xf3_i387\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-        (unspec:XF [(float_extend:XF\n-\t\t      (match_operand:MODEF 1 \"register_operand\" \"0\"))\n-\t\t    (match_operand:XF 2 \"register_operand\" \"u\")]\n-\t           UNSPEC_FYL2X))\n-   (clobber (match_scratch:XF 3 \"=2\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n-       || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n-  \"fyl2x\"\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"znver1_decode\" \"vector\")\n-   (set_attr \"mode\" \"XF\")])\n-\n (define_expand \"logxf2\"\n   [(parallel [(set (match_operand:XF 0 \"register_operand\")\n \t\t   (unspec:XF [(match_operand:XF 1 \"register_operand\")\n@@ -15653,24 +15637,23 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n {\n-  operands[2] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[2], standard_80387_constant_rtx (4)); /* fldln2 */\n+  operands[2]\n+    = force_reg (XFmode, standard_80387_constant_rtx (4)); /* fldln2 */\n })\n \n (define_expand \"log<mode>2\"\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n-   (use (match_operand:MODEF 1 \"register_operand\"))]\n+   (use (match_operand:MODEF 1 \"general_operand\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n-  rtx op2 = gen_reg_rtx (XFmode);\n-  emit_move_insn (op2, standard_80387_constant_rtx (4)); /* fldln2 */\n-\n-  emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], op2));\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_logxf2 (op0, op1));\n   emit_insn (gen_truncxf<mode>2 (operands[0], op0));\n   DONE;\n })\n@@ -15683,24 +15666,23 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n {\n-  operands[2] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[2], standard_80387_constant_rtx (3)); /* fldlg2 */\n+  operands[2]\n+    = force_reg (XFmode, standard_80387_constant_rtx (3)); /* fldlg2 */\n })\n \n (define_expand \"log10<mode>2\"\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n-   (use (match_operand:MODEF 1 \"register_operand\"))]\n+   (use (match_operand:MODEF 1 \"general_operand\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n-  rtx op2 = gen_reg_rtx (XFmode);\n-  emit_move_insn (op2, standard_80387_constant_rtx (3)); /* fldlg2 */\n-\n-  emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], op2));\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_log10xf2 (op0, op1));\n   emit_insn (gen_truncxf<mode>2 (operands[0], op0));\n   DONE;\n })\n@@ -15712,25 +15694,21 @@\n \t      (clobber (match_scratch:XF 3))])]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n-{\n-  operands[2] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[2], CONST1_RTX (XFmode)); /* fld1 */\n-})\n+  \"operands[2] = force_reg (XFmode, CONST1_RTX (XFmode));\")\n \n (define_expand \"log2<mode>2\"\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n-   (use (match_operand:MODEF 1 \"register_operand\"))]\n+   (use (match_operand:MODEF 1 \"general_operand\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n-  rtx op2 = gen_reg_rtx (XFmode);\n-  emit_move_insn (op2, CONST1_RTX (XFmode)); /* fld1 */\n-\n-  emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], op2));\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_log2xf2 (op0, op1));\n   emit_insn (gen_truncxf<mode>2 (operands[0], op0));\n   DONE;\n })\n@@ -15748,22 +15726,6 @@\n    (set_attr \"znver1_decode\" \"vector\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"fyl2xp1_extend<mode>xf3_i387\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-        (unspec:XF [(float_extend:XF\n-\t\t      (match_operand:MODEF 1 \"register_operand\" \"0\"))\n-\t\t    (match_operand:XF 2 \"register_operand\" \"u\")]\n-\t           UNSPEC_FYL2XP1))\n-   (clobber (match_scratch:XF 3 \"=2\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n-       || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n-  \"fyl2xp1\"\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"znver1_decode\" \"vector\")\n-   (set_attr \"mode\" \"XF\")])\n-\n (define_expand \"log1pxf2\"\n   [(use (match_operand:XF 0 \"register_operand\"))\n    (use (match_operand:XF 1 \"register_operand\"))]\n@@ -15776,19 +15738,17 @@\n \n (define_expand \"log1p<mode>2\"\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n-   (use (match_operand:MODEF 1 \"register_operand\"))]\n+   (use (match_operand:MODEF 1 \"general_operand\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx op0;\n-\n-  op0 = gen_reg_rtx (XFmode);\n-\n-  operands[1] = gen_rtx_FLOAT_EXTEND (XFmode, operands[1]);\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n-  ix86_emit_i387_log1p (op0, operands[1]);\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_log1pxf2 (op0, op1));\n   emit_insn (gen_truncxf<mode>2 (operands[0], op0));\n   DONE;\n })\n@@ -15806,22 +15766,6 @@\n    (set_attr \"znver1_decode\" \"vector\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"fxtract_extend<mode>xf3_i387\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-\t(unspec:XF [(float_extend:XF\n-\t\t      (match_operand:MODEF 2 \"register_operand\" \"0\"))]\n-\t\t   UNSPEC_XTRACT_FRACT))\n-   (set (match_operand:XF 1 \"register_operand\" \"=u\")\n-        (unspec:XF [(float_extend:XF (match_dup 2))] UNSPEC_XTRACT_EXP))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n-       || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n-  \"fxtract\"\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"znver1_decode\" \"vector\")\n-   (set_attr \"mode\" \"XF\")])\n-\n (define_expand \"logbxf2\"\n   [(parallel [(set (match_dup 2)\n \t\t   (unspec:XF [(match_operand:XF 1 \"register_operand\")]\n@@ -15834,7 +15778,7 @@\n \n (define_expand \"logb<mode>2\"\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n-   (use (match_operand:MODEF 1 \"register_operand\"))]\n+   (use (match_operand:MODEF 1 \"general_operand\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -15843,7 +15787,8 @@\n   rtx op0 = gen_reg_rtx (XFmode);\n   rtx op1 = gen_reg_rtx (XFmode);\n \n-  emit_insn (gen_fxtract_extend<mode>xf3_i387 (op0, op1, operands[1]));\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_logbxf2 (op0, op1));\n   emit_insn (gen_truncxf<mode>2 (operands[0], op1));\n   DONE;\n })\n@@ -15869,21 +15814,23 @@\n \n (define_expand \"ilogb<mode>2\"\n   [(use (match_operand:SI 0 \"register_operand\"))\n-   (use (match_operand:MODEF 1 \"register_operand\"))]\n+   (use (match_operand:MODEF 1 \"general_operand\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx op0, op1;\n+  rtx op0, op1, op2;\n \n   if (optimize_insn_for_size_p ())\n     FAIL;\n \n   op0 = gen_reg_rtx (XFmode);\n   op1 = gen_reg_rtx (XFmode);\n+  op2 = gen_reg_rtx (XFmode);\n \n-  emit_insn (gen_fxtract_extend<mode>xf3_i387 (op0, op1, operands[1]));\n+  emit_insn (gen_extend<mode>xf2 (op2, operands[1]));\n+  emit_insn (gen_fxtractxf3_i387 (op0, op1, op2));\n   emit_insn (gen_fix_truncxfsi2 (operands[0], op1));\n   DONE;\n })\n@@ -15935,7 +15882,7 @@\n   for (i = 3; i < 10; i++)\n     operands[i] = gen_reg_rtx (XFmode);\n \n-  emit_move_insn (operands[7], CONST1_RTX (XFmode));  /* fld1 */\n+  emit_move_insn (operands[7], CONST1_RTX (XFmode));\n })\n \n (define_expand \"expxf2\"\n@@ -15944,10 +15891,7 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx op2;\n-\n-  op2 = gen_reg_rtx (XFmode);\n-  emit_move_insn (op2, standard_80387_constant_rtx (5)); /* fldl2e */\n+  rtx op2 = force_reg (XFmode, standard_80387_constant_rtx (5)); /* fldl2e */\n \n   emit_insn (gen_expNcorexf3 (operands[0], operands[1], op2));\n   DONE;\n@@ -15961,10 +15905,8 @@\n        || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx op0, op1;\n-\n-  op0 = gen_reg_rtx (XFmode);\n-  op1 = gen_reg_rtx (XFmode);\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n   emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n   emit_insn (gen_expxf2 (op0, op1));\n@@ -15978,10 +15920,7 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx op2;\n-\n-  op2 = gen_reg_rtx (XFmode);\n-  emit_move_insn (op2, standard_80387_constant_rtx (6)); /* fldl2t */\n+  rtx op2 = force_reg (XFmode, standard_80387_constant_rtx (6)); /* fldl2t */\n \n   emit_insn (gen_expNcorexf3 (operands[0], operands[1], op2));\n   DONE;\n@@ -15995,10 +15934,8 @@\n        || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx op0, op1;\n-\n-  op0 = gen_reg_rtx (XFmode);\n-  op1 = gen_reg_rtx (XFmode);\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n   emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n   emit_insn (gen_exp10xf2 (op0, op1));\n@@ -16012,10 +15949,7 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx op2;\n-\n-  op2 = gen_reg_rtx (XFmode);\n-  emit_move_insn (op2, CONST1_RTX (XFmode));  /* fld1 */\n+  rtx op2 = force_reg (XFmode, CONST1_RTX (XFmode));\n \n   emit_insn (gen_expNcorexf3 (operands[0], operands[1], op2));\n   DONE;\n@@ -16029,10 +15963,8 @@\n        || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx op0, op1;\n-\n-  op0 = gen_reg_rtx (XFmode);\n-  op1 = gen_reg_rtx (XFmode);\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n   emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n   emit_insn (gen_exp2xf2 (op0, op1));\n@@ -16045,7 +15977,6 @@\n \t\t\t       (match_dup 2)))\n    (set (match_dup 4) (unspec:XF [(match_dup 3)] UNSPEC_FRNDINT))\n    (set (match_dup 5) (minus:XF (match_dup 3) (match_dup 4)))\n-   (set (match_dup 9) (float_extend:XF (match_dup 13)))\n    (set (match_dup 6) (unspec:XF [(match_dup 5)] UNSPEC_F2XM1))\n    (parallel [(set (match_dup 7)\n \t\t   (unspec:XF [(match_dup 6) (match_dup 4)]\n@@ -16059,8 +15990,7 @@\n \t      (set (match_dup 11)\n \t\t   (unspec:XF [(match_dup 9) (match_dup 8)]\n \t\t\t      UNSPEC_FSCALE_EXP))])\n-   (set (match_dup 12) (minus:XF (match_dup 10)\n-\t\t\t\t (float_extend:XF (match_dup 13))))\n+   (set (match_dup 12) (minus:XF (match_dup 10) (match_dup 9)))\n    (set (match_operand:XF 0 \"register_operand\")\n \t(plus:XF (match_dup 12) (match_dup 7)))]\n   \"TARGET_USE_FANCY_MATH_387\n@@ -16071,10 +16001,8 @@\n   for (i = 2; i < 13; i++)\n     operands[i] = gen_reg_rtx (XFmode);\n \n-  operands[13]\n-    = validize_mem (force_const_mem (SFmode, CONST1_RTX (SFmode))); /* fld1 */\n-\n   emit_move_insn (operands[2], standard_80387_constant_rtx (5)); /* fldl2e */\n+  emit_move_insn (operands[9], CONST1_RTX (XFmode));\n })\n \n (define_expand \"expm1<mode>2\"\n@@ -16085,10 +16013,8 @@\n        || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx op0, op1;\n-\n-  op0 = gen_reg_rtx (XFmode);\n-  op1 = gen_reg_rtx (XFmode);\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n   emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n   emit_insn (gen_expm1xf2 (op0, op1));\n@@ -16103,10 +16029,8 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx tmp1, tmp2;\n-\n-  tmp1 = gen_reg_rtx (XFmode);\n-  tmp2 = gen_reg_rtx (XFmode);\n+  rtx tmp1 = gen_reg_rtx (XFmode);\n+  rtx tmp2 = gen_reg_rtx (XFmode);\n \n   emit_insn (gen_floatsixf2 (tmp1, operands[2]));\n   emit_insn (gen_fscalexf4_i387 (operands[0], tmp2,\n@@ -16123,10 +16047,8 @@\n        || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx op0, op1;\n-\n-  op0 = gen_reg_rtx (XFmode);\n-  op1 = gen_reg_rtx (XFmode);\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n   emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n   emit_insn (gen_ldexpxf3 (op0, op1, operands[2]));\n@@ -16144,9 +16066,7 @@\n \t\t\t      UNSPEC_FSCALE_EXP))])]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n-{\n-  operands[3] = gen_reg_rtx (XFmode);\n-})\n+  \"operands[3] = gen_reg_rtx (XFmode);\")\n \n (define_expand \"scalb<mode>3\"\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n@@ -16157,11 +16077,9 @@\n        || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx op0, op1, op2;\n-\n-  op0 = gen_reg_rtx (XFmode);\n-  op1 = gen_reg_rtx (XFmode);\n-  op2 = gen_reg_rtx (XFmode);\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n+  rtx op2 = gen_reg_rtx (XFmode);\n \n   emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n   emit_insn (gen_extend<mode>xf2 (op2, operands[2]));\n@@ -16182,7 +16100,7 @@\n \n (define_expand \"significand<mode>2\"\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n-   (use (match_operand:MODEF 1 \"register_operand\"))]\n+   (use (match_operand:MODEF 1 \"general_operand\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -16191,7 +16109,8 @@\n   rtx op0 = gen_reg_rtx (XFmode);\n   rtx op1 = gen_reg_rtx (XFmode);\n \n-  emit_insn (gen_fxtract_extend<mode>xf3_i387 (op0, op1, operands[1]));\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_significandxf2 (op0, op1));\n   emit_insn (gen_truncxf<mode>2 (operands[0], op0));\n   DONE;\n })"}]}