{"sha": "771d793df1622a476e1cf8d05f0a6aee350fa56b", "node_id": "C_kwDOANBUbNoAKDc3MWQ3OTNkZjE2MjJhNDc2ZTFjZjhkMDVmMGE2YWVlMzUwZmE1NmI", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2023-01-23T20:19:03Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2023-01-23T20:19:03Z"}, "message": "Fortran: avoid ICE on invalid array subscript triplets [PR108501]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/108501\n\t* interface.cc (get_expr_storage_size): Check array subscript triplets\n\tthat we actually have integer values before trying to extract with\n\tmpz_get_si.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/108501\n\t* gfortran.dg/pr108501.f90: New test.", "tree": {"sha": "68133948b37972c934f82451c2da769a96575bc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68133948b37972c934f82451c2da769a96575bc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/771d793df1622a476e1cf8d05f0a6aee350fa56b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/771d793df1622a476e1cf8d05f0a6aee350fa56b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/771d793df1622a476e1cf8d05f0a6aee350fa56b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/771d793df1622a476e1cf8d05f0a6aee350fa56b/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6669c0a50ed8aee9e5997d61e6271668d149218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6669c0a50ed8aee9e5997d61e6271668d149218", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6669c0a50ed8aee9e5997d61e6271668d149218"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "dafe41753b7e3d0718e74fe1335c245e027de685", "filename": "gcc/fortran/interface.cc", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/771d793df1622a476e1cf8d05f0a6aee350fa56b/gcc%2Ffortran%2Finterface.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/771d793df1622a476e1cf8d05f0a6aee350fa56b/gcc%2Ffortran%2Finterface.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.cc?ref=771d793df1622a476e1cf8d05f0a6aee350fa56b", "patch": "@@ -2910,34 +2910,39 @@ get_expr_storage_size (gfc_expr *e)\n \n \t    if (ref->u.ar.stride[i])\n \t      {\n-\t\tif (ref->u.ar.stride[i]->expr_type == EXPR_CONSTANT)\n+\t\tif (ref->u.ar.stride[i]->expr_type == EXPR_CONSTANT\n+\t\t    && ref->u.ar.stride[i]->ts.type == BT_INTEGER)\n \t\t  stride = mpz_get_si (ref->u.ar.stride[i]->value.integer);\n \t\telse\n \t\t  return 0;\n \t      }\n \n \t    if (ref->u.ar.start[i])\n \t      {\n-\t\tif (ref->u.ar.start[i]->expr_type == EXPR_CONSTANT)\n+\t\tif (ref->u.ar.start[i]->expr_type == EXPR_CONSTANT\n+\t\t    && ref->u.ar.start[i]->ts.type == BT_INTEGER)\n \t\t  start = mpz_get_si (ref->u.ar.start[i]->value.integer);\n \t\telse\n \t\t  return 0;\n \t      }\n \t    else if (ref->u.ar.as->lower[i]\n-\t\t     && ref->u.ar.as->lower[i]->expr_type == EXPR_CONSTANT)\n+\t\t     && ref->u.ar.as->lower[i]->expr_type == EXPR_CONSTANT\n+\t\t     && ref->u.ar.as->lower[i]->ts.type == BT_INTEGER)\n \t      start = mpz_get_si (ref->u.ar.as->lower[i]->value.integer);\n \t    else\n \t      return 0;\n \n \t    if (ref->u.ar.end[i])\n \t      {\n-\t\tif (ref->u.ar.end[i]->expr_type == EXPR_CONSTANT)\n+\t\tif (ref->u.ar.end[i]->expr_type == EXPR_CONSTANT\n+\t\t    && ref->u.ar.end[i]->ts.type == BT_INTEGER)\n \t\t  end = mpz_get_si (ref->u.ar.end[i]->value.integer);\n \t\telse\n \t\t  return 0;\n \t      }\n \t    else if (ref->u.ar.as->upper[i]\n-\t\t     && ref->u.ar.as->upper[i]->expr_type == EXPR_CONSTANT)\n+\t\t     && ref->u.ar.as->upper[i]->expr_type == EXPR_CONSTANT\n+\t\t     && ref->u.ar.as->upper[i]->ts.type == BT_INTEGER)\n \t      end = mpz_get_si (ref->u.ar.as->upper[i]->value.integer);\n \t    else\n \t      return 0;\n@@ -2978,7 +2983,9 @@ get_expr_storage_size (gfc_expr *e)\n \t\t  || ref->u.ar.as->upper[i] == NULL\n \t\t  || ref->u.ar.as->lower[i] == NULL\n \t\t  || ref->u.ar.as->upper[i]->expr_type != EXPR_CONSTANT\n-\t\t  || ref->u.ar.as->lower[i]->expr_type != EXPR_CONSTANT)\n+\t\t  || ref->u.ar.as->lower[i]->expr_type != EXPR_CONSTANT\n+\t\t  || ref->u.ar.as->upper[i]->ts.type != BT_INTEGER\n+\t\t  || ref->u.ar.as->lower[i]->ts.type != BT_INTEGER)\n \t\treturn 0;\n \n \t      elements\n@@ -3000,7 +3007,9 @@ get_expr_storage_size (gfc_expr *e)\n \t    {\n \t      if (!as->upper[i] || !as->lower[i]\n \t\t  || as->upper[i]->expr_type != EXPR_CONSTANT\n-\t\t  || as->lower[i]->expr_type != EXPR_CONSTANT)\n+\t\t  || as->lower[i]->expr_type != EXPR_CONSTANT\n+\t\t  || as->upper[i]->ts.type != BT_INTEGER\n+\t\t  || as->lower[i]->ts.type != BT_INTEGER)\n \t\treturn 0;\n \n \t      elements = elements"}, {"sha": "09ab8c9f34f270aab07212a63e53aafc00587476", "filename": "gcc/testsuite/gfortran.dg/pr108501.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/771d793df1622a476e1cf8d05f0a6aee350fa56b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr108501.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/771d793df1622a476e1cf8d05f0a6aee350fa56b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr108501.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr108501.f90?ref=771d793df1622a476e1cf8d05f0a6aee350fa56b", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! PR fortran/108501 - ICE in get_expr_storage_size\n+! Contributed by G.Steinmetz\n+\n+program p\n+  real, parameter :: n = 2\n+  real :: a(1,(n),2) ! { dg-error \"must be of INTEGER type\" }\n+  call s(a(:,:,1))\n+end\n+subroutine s(x)\n+  real :: x(2)\n+end\n+\n+! { dg-prune-output \"must have constant shape\" }"}]}