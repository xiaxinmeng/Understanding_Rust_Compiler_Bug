{"sha": "cb584bcf987de15027a8364ed5eac0d6036878f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I1ODRiY2Y5ODdkZTE1MDI3YTgzNjRlZDVlYWMwZDYwMzY4NzhmNw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-07-28T17:12:16Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-07-28T17:12:16Z"}, "message": "testsuite_hooks.h: Remove list include.\n\n\n\n2003-07-28  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/testsuite_hooks.h: Remove list include.\n\t(func_callback): Define as unique type, not std::list.\n\tChange DEBUG_ASSERT to _GLIBCXX_ASSERT.\n\t* testsuite/libstdc++-v3.dg/dg.exp: Same.\n\t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init): Same.\n\t* testsuite/23_containers/bitset_ctor.cc:\n\t* testsuite/17_intro/header_ciso646.cc: Remove DEBUG_ASSERT.\n\t* testsuite/18_support/numeric_limits.cc: Same.\n\t* testsuite/21_strings/basic_string/append/char/1.cc: Same.\n\t* testsuite/21_strings/basic_string/append/wchar_t/1.cc: Same.\n\t* testsuite/21_strings/basic_string/compare/char/1.cc: Same.\n\t* testsuite/21_strings/basic_string/compare/wchar_t/1.cc: Same.\n\t* testsuite/21_strings/basic_string/element_access/char/1.cc: Same.\n\t* testsuite/21_strings/basic_string/element_access/char/2.cc: Same.\n\t* testsuite/21_strings/basic_string/element_access/char/3.cc: Same.\n\t* testsuite/21_strings/basic_string/element_access/wchar_t/1.cc: Same.\n\t* testsuite/21_strings/basic_string/element_access/wchar_t/2.cc: Same.\n\t* testsuite/21_strings/basic_string/element_access/wchar_t/3.cc: Same.\n\t* testsuite/21_strings/basic_string/find/char/1.cc: Same.\n\t* testsuite/21_strings/basic_string/find/char/2.cc: Same.\n\t* testsuite/21_strings/basic_string/find/char/3.cc: Same.\n\t* testsuite/21_strings/basic_string/find/wchar_t/1.cc: Same.\n\t* testsuite/21_strings/basic_string/find/wchar_t/2.cc: Same.\n\t* testsuite/21_strings/basic_string/find/wchar_t/3.cc: Same.\n\t* testsuite/21_strings/basic_string/insert/char/1.cc: Same.\n\t* testsuite/21_strings/basic_string/insert/char/2.cc: Same.\n\t* testsuite/21_strings/basic_string/insert/wchar_t/1.cc: Same.\n\t* testsuite/21_strings/basic_string/insert/wchar_t/2.cc: Same.\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/1.cc:\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/4.cc:\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/5.cc:\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/6.cc:\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/7.cc:\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/1.cc:\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/4.cc:\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/5.cc:\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/6.cc:\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/7.cc:\n\t* testsuite/21_strings/basic_string/operators/char/1.cc: Same.\n\t* testsuite/21_strings/basic_string/operators/char/2.cc: Same.\n\t* testsuite/21_strings/basic_string/operators/wchar_t/1.cc: Same.\n\t* testsuite/21_strings/basic_string/operators/wchar_t/2.cc: Same.\n\t* testsuite/21_strings/basic_string/replace/char/1.cc: Same.\n\t* testsuite/21_strings/basic_string/replace/wchar_t/1.cc: Same.\n\t* testsuite/21_strings/basic_string/rfind/char/1.cc: Same.\n\t* testsuite/21_strings/basic_string/rfind/char/2.cc: Same.\n\t* testsuite/21_strings/basic_string/rfind/char/3.cc: Same.\n\t* testsuite/21_strings/basic_string/rfind/wchar_t/1.cc: Same.\n\t* testsuite/21_strings/basic_string/rfind/wchar_t/2.cc: Same.\n\t* testsuite/21_strings/basic_string/rfind/wchar_t/3.cc: Same.\n\t* testsuite/21_strings/basic_string/substr/char/1.cc: Same.\n\t* testsuite/21_strings/basic_string/substr/wchar_t/1.cc: Same.\n\t* testsuite/23_containers/bitset_ctor.cc: Same.\n\t* testsuite/23_containers/bitset_shift.cc: Same.\n\t* testsuite/23_containers/vector_ctor.cc: Same.\n\t* testsuite/23_containers/vector_element_access.cc: Same.\n\t* testsuite/24_iterators/istreambuf_iterator.cc: Same.\n\t* testsuite/24_iterators/iterator.cc: Same.\n\t* testsuite/24_iterators/ostreambuf_iterator.cc: Same.\n\t* testsuite/25_algorithms/lower_bound.cc: Same.\n\t* testsuite/26_numerics/complex_inserters_extractors.cc: Same.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/01.cc: Same.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/02.cc: Same.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/03.cc: Same.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/06.cc: Same.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/07.cc: Same.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/08.cc: Same.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/09.cc: Same.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/10.cc: Same.\n\t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/1.cc: Same.\n\t* testsuite/27_io/basic_ostream/inserters_arithmetic/wchar_t/1.cc:\n        Same.\n\nFrom-SVN: r69892", "tree": {"sha": "7f27e79c2af1663c76d3aafd7385abc135edae60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f27e79c2af1663c76d3aafd7385abc135edae60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb584bcf987de15027a8364ed5eac0d6036878f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb584bcf987de15027a8364ed5eac0d6036878f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb584bcf987de15027a8364ed5eac0d6036878f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb584bcf987de15027a8364ed5eac0d6036878f7/comments", "author": null, "committer": null, "parents": [{"sha": "651bed366a537cac8a9561d749e0a83e277259ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651bed366a537cac8a9561d749e0a83e277259ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/651bed366a537cac8a9561d749e0a83e277259ce"}], "stats": {"total": 473, "additions": 134, "deletions": 339}, "files": [{"sha": "03af623e4ae65a600e34aa5b86d2369d67fd69aa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -1,3 +1,78 @@\n+2003-07-28  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/testsuite_hooks.h: Remove list include.\n+\t(func_callback): Define as unique type, not std::list.\n+\tChange DEBUG_ASSERT to _GLIBCXX_ASSERT.\n+\t* testsuite/libstdc++-v3.dg/dg.exp: Same.\n+\t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init): Same.\n+\t* testsuite/23_containers/bitset_ctor.cc: \n+\t* testsuite/17_intro/header_ciso646.cc: Remove DEBUG_ASSERT.\n+\t* testsuite/18_support/numeric_limits.cc: Same.\n+\t* testsuite/21_strings/basic_string/append/char/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/append/wchar_t/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/compare/char/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/compare/wchar_t/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/element_access/char/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/element_access/char/2.cc: Same.\n+\t* testsuite/21_strings/basic_string/element_access/char/3.cc: Same.\n+\t* testsuite/21_strings/basic_string/element_access/wchar_t/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/element_access/wchar_t/2.cc: Same.\n+\t* testsuite/21_strings/basic_string/element_access/wchar_t/3.cc: Same.\n+\t* testsuite/21_strings/basic_string/find/char/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/find/char/2.cc: Same.\n+\t* testsuite/21_strings/basic_string/find/char/3.cc: Same.\n+\t* testsuite/21_strings/basic_string/find/wchar_t/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/find/wchar_t/2.cc: Same.\n+\t* testsuite/21_strings/basic_string/find/wchar_t/3.cc: Same.\n+\t* testsuite/21_strings/basic_string/insert/char/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/insert/char/2.cc: Same.\n+\t* testsuite/21_strings/basic_string/insert/wchar_t/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/insert/wchar_t/2.cc: Same.\n+\t* testsuite/21_strings/basic_string/inserters_extractors/char/1.cc: \n+\t* testsuite/21_strings/basic_string/inserters_extractors/char/4.cc: \n+\t* testsuite/21_strings/basic_string/inserters_extractors/char/5.cc: \n+\t* testsuite/21_strings/basic_string/inserters_extractors/char/6.cc: \n+\t* testsuite/21_strings/basic_string/inserters_extractors/char/7.cc: \n+\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/1.cc: \n+\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/4.cc: \n+\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/5.cc: \n+\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/6.cc: \n+\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/7.cc: \n+\t* testsuite/21_strings/basic_string/operators/char/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/operators/char/2.cc: Same.\n+\t* testsuite/21_strings/basic_string/operators/wchar_t/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/operators/wchar_t/2.cc: Same.\n+\t* testsuite/21_strings/basic_string/replace/char/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/replace/wchar_t/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/rfind/char/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/rfind/char/2.cc: Same.\n+\t* testsuite/21_strings/basic_string/rfind/char/3.cc: Same.\n+\t* testsuite/21_strings/basic_string/rfind/wchar_t/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/rfind/wchar_t/2.cc: Same.\n+\t* testsuite/21_strings/basic_string/rfind/wchar_t/3.cc: Same.\n+\t* testsuite/21_strings/basic_string/substr/char/1.cc: Same.\n+\t* testsuite/21_strings/basic_string/substr/wchar_t/1.cc: Same.\n+\t* testsuite/23_containers/bitset_ctor.cc: Same.\n+\t* testsuite/23_containers/bitset_shift.cc: Same.\n+\t* testsuite/23_containers/vector_ctor.cc: Same.\n+\t* testsuite/23_containers/vector_element_access.cc: Same.\n+\t* testsuite/24_iterators/istreambuf_iterator.cc: Same.\n+\t* testsuite/24_iterators/iterator.cc: Same.\n+\t* testsuite/24_iterators/ostreambuf_iterator.cc: Same.\n+\t* testsuite/25_algorithms/lower_bound.cc: Same.\n+\t* testsuite/26_numerics/complex_inserters_extractors.cc: Same.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/01.cc: Same.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/02.cc: Same.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/03.cc: Same.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/06.cc: Same.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/07.cc: Same.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/08.cc: Same.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/09.cc: Same.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/10.cc: Same.\n+\t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/1.cc: Same.\n+\t* testsuite/27_io/basic_ostream/inserters_arithmetic/wchar_t/1.cc: \n+        Same.\n+\t\n 2003-07-28  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/doxygen/user.cfg.in, docs/html/abi.txt, docs/html/debug.html,"}, {"sha": "35b1ceef32d8a9b6fe8f5082318bef4cf26cbd1e", "filename": "libstdc++-v3/testsuite/17_intro/header_ciso646.cc", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_ciso646.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_ciso646.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_ciso646.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -1,6 +1,6 @@\n // 1999-05-20 bkoz\n \n-// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -84,10 +84,6 @@ bool test01()\n   test = false;\n #endif\n \n-#endif\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n #endif\n \n   return test;\n@@ -110,10 +106,6 @@ bool test02()\n   VERIFY( (arg1 && arg2) == (arg1 and arg2) );\n   VERIFY( (arg1 && int1) == (arg1 and int1) );\n \n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-\n   return test;\n }\n "}, {"sha": "63d9412c3684e30ecf67b01256a4f57c9e753bb5", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits.cc", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -2,7 +2,7 @@\n \n // 1999-08-23 bkoz\n \n-// Copyright (C) 1999, 2001, 2002 Free Software Foundation\n+// Copyright (C) 1999, 2001, 2002, 2003 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -233,11 +233,6 @@ bool test01()\n   VERIFY( !obj.traps );\n   VERIFY( !obj.tinyness_before );\n   VERIFY( obj.round_style == std::round_toward_zero );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-\n   return test;\n }\n \n@@ -281,11 +276,6 @@ bool test03()\n       VERIFY( std::numeric_limits<signed long long>::digits10 == 18 );\n       VERIFY( std::numeric_limits<unsigned long long>::digits10 == 19 );\n     }\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-\n   return test;\n }\n \n@@ -302,11 +292,6 @@ bool test04()\n   VERIFY( !std::numeric_limits<unsigned long>::is_iec559 );\n   VERIFY( !std::numeric_limits<long long>::is_iec559 );\n   VERIFY( !std::numeric_limits<unsigned long long>::is_iec559 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-\n   return test;\n }\n "}, {"sha": "496a6e543092f9b9d78a94d2bcd359a4942c4d7e", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/append/char/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fappend%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fappend%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fappend%2Fchar%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -150,10 +150,6 @@ bool test01(void)\n   str05.append(str05.begin(), str05.begin() + str05.find('r')); \n   VERIFY( str05 ==  \"point bolivar, texaspoint boliva\" );\n   VERIFY( str05 != str01 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "f6002f9af5d3e32028350a2baf3831c5f3f7e120", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/append/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fappend%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fappend%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fappend%2Fwchar_t%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -150,10 +150,6 @@ bool test01(void)\n   str05.append(str05.begin(), str05.begin() + str05.find(L'r')); \n   VERIFY( str05 ==  L\"point bolivar, texaspoint boliva\" );\n   VERIFY( str05 != str01 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "096f4f3957d8474f5c55a529b2e6edd3d7100d43", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/compare/char/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcompare%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcompare%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcompare%2Fchar%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -59,11 +59,7 @@ test_value(int result, want_value expected)\n   default:\n     pass = false; //should not get here\n   }\n-\n-#ifdef DEBUG_ASSERT\n-  assert(pass);\n-#endif\n-  \n+  VERIFY(pass);\n   return 0;\n }\n  "}, {"sha": "5d6151900b2ed6a700e3de0e34af65461ebc72d4", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/compare/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcompare%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcompare%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcompare%2Fwchar_t%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -60,10 +60,7 @@ test_value(int result, want_value expected)\n     pass = false; //should not get here\n   }\n \n-#ifdef DEBUG_ASSERT\n-  assert(pass);\n-#endif\n-  \n+  VERIFY(pass);\n   return 0;\n }\n  "}, {"sha": "f594df728474d6d36985ceeb11ca2324be51b2fc", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/char/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -80,10 +80,6 @@ bool test01(void)\n   catch(...) {\n     VERIFY( false );\n   }\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "d2b5831ad6b7a7cd6dffd90d83b7266c100a1a3a", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/char/2.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F2.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -102,9 +102,6 @@ bool test01(void)\n   VERIFY( str03[0] == 'x' );\n \n   // need to also test for const begin/const end\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "1c7ee5bbdf7ad79713aeaa41906a5e881d633970", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/char/3.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F3.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -76,10 +76,6 @@ bool test02(void)\n   std::string str13 = str12;\n   *p2 = 'e';\n   VERIFY( str12 != str13 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "3c39bc555cc1cc4f47a45b84448f02abc229b5d3", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -80,10 +80,6 @@ bool test01(void)\n   catch(...) {\n     VERIFY( false );\n   }\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "e2455e635e7bb921bed987ad0131d20b47c81ce9", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/wchar_t/2.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F2.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -102,9 +102,7 @@ bool test01(void)\n   VERIFY( str03[0] == L'x' );\n \n   // need to also test for const begin/const end\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n+  VERIFY(test);\n   return test;\n }\n "}, {"sha": "0ef50cc8fb73527114c4ede2b81146961aed8f61", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/wchar_t/3.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F3.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -76,10 +76,6 @@ bool test02(void)\n   std::wstring str13 = str12;\n   *p2 = L'e';\n   VERIFY( str12 != str13 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "0f2236cbe1ac932e9d06af88d7b7d686b0f5dc5c", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/find/char/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fchar%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -84,10 +84,6 @@ bool test01(void)\n   VERIFY( csz01 == csz02 );\n   csz01 = str01.find('/');\n   VERIFY( csz01 == npos );\n-   \n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "9c3e2f079a8e4227d9d157a601ce43bb2db45625", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/find/char/2.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fchar%2F2.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -83,10 +83,6 @@ bool test02(void)\n   csz01 = str01.find_first_of('z');\n   csz02 = str01.size() - 1;\n   VERIFY( csz01 == csz02 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "15d0ee2ef52bcb4cb2feceb99755433f3d39460f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/find/char/3.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fchar%2F3.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -83,10 +83,6 @@ bool test03(void)\n   VERIFY( csz01 == 0 );\n   csz01 = str04.find_first_not_of('S');\n   VERIFY( csz01 == npos );\n-\n-#ifdef DEBUG_ASSERT\n-  VERIFY(test);\n-#endif\n   return test;\n }\n "}, {"sha": "6ed224b3b31e69dda785ddfcf6e9fbb25c0b880c", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/find/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fwchar_t%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -84,10 +84,6 @@ bool test01(void)\n   VERIFY( csz01 == csz02 );\n   csz01 = str01.find(L'/');\n   VERIFY( csz01 == npos );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "4635dac126728c3f9af9946f59a991cfa6820d6a", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/find/wchar_t/2.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fwchar_t%2F2.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -83,10 +83,6 @@ bool test02(void)\n   csz01 = str01.find_first_of(L'z');\n   csz02 = str01.size() - 1;\n   VERIFY( csz01 == csz02 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "c874229d85304703e358e071c0fe17e85226ea4f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/find/wchar_t/3.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fwchar_t%2F3.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -83,10 +83,6 @@ bool test03(void)\n   VERIFY( csz01 == 0 );\n   csz01 = str04.find_first_not_of(L'S');\n   VERIFY( csz01 == npos );\n-\n-#ifdef DEBUG_ASSERT\n-  VERIFY(test);\n-#endif\n   return test;\n }\n "}, {"sha": "919c8717b0acbaac11420f37b1113fd61d98b38a", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/insert/char/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finsert%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finsert%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finsert%2Fchar%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -180,10 +180,6 @@ int test01(void)\n   csz01 = str03.size();\n   str03.insert(str03.end(), str01.begin(), str01.end()); \n   VERIFY( str03 == \"baker beach, san franciscorodeo beach, marin\" );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "d39bbe2d091e718a29ec792da3ee6cf01af138a9", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/insert/char/2.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finsert%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finsert%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finsert%2Fchar%2F2.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -73,10 +73,6 @@ int test02(void)\n   str01.insert(0, str01.c_str());\n   VERIFY( str01 == \"Everything was beautiful, and nothing hurt\"\n \t  \"Everything was beautiful, and nothing hurt\");\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "f439df907d9431670ce54362c9ec1b031e5eeb98", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/insert/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finsert%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finsert%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finsert%2Fwchar_t%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -180,10 +180,6 @@ int test01(void)\n   csz01 = str03.size();\n   str03.insert(str03.end(), str01.begin(), str01.end()); \n   VERIFY( str03 == L\"baker beach, san franciscorodeo beach, marin\" );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "8b1468b3338ea4ed3773b3920a9b04e45d06b6eb", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/insert/wchar_t/2.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finsert%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finsert%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finsert%2Fwchar_t%2F2.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -73,10 +73,6 @@ int test02(void)\n   str01.insert(0, str01.c_str());\n   VERIFY( str01 == L\"Everything was beautiful, and nothing hurt\"\n \t  L\"Everything was beautiful, and nothing hurt\");\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "ba92251c6ad3d210615ab2c1c15611cc72e2ccdb", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -157,10 +157,6 @@ bool test01(void)\n   \n   std::string hello_world;\n   std::cout << hello_world;\n-  \n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "b53ca2764d25b5b612e027ba396e0a196395ccc9", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/4.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F4.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -54,10 +54,6 @@ void test04(int size)\n   VERIFY( oss.good() );\n   std::string str_tmp = oss.str();\n   VERIFY( str_tmp.size() == expected_size );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n int main()"}, {"sha": "416a1df4421e1297e603860006d429058721a517", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/5.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F5.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -75,10 +75,6 @@ void test05(int size)\n     }\n \n   VERIFY( count == 2 * size );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n int main()"}, {"sha": "195ef9dc2ff9fd8cf9f031696c9fba10a9a38896", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/6.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F6.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -52,10 +52,6 @@ void test06(void)\n   size_type i06 = str02.capacity();\n   VERIFY( i05 == i03 );\n   VERIFY( i06 <= i04 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n int main()"}, {"sha": "07e3ce63cacd55defe954a6835e1e962b7ef554b", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/7.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F7.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -44,10 +44,6 @@ void test07(void)\n \n   VERIFY( i < 3 );\n   VERIFY( static_cast<bool>(iss.rdstate() & std::ios_base::failbit) );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n int main()"}, {"sha": "46718003d7774d6705c64d6c715d22daf6aa24a7", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -157,10 +157,6 @@ bool test01(void)\n   \n   std::wstring hello_world;\n   std::wcout << hello_world;\n-  \n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "fd844438184ca361614583d27fb9ee1164e933df", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/wchar_t/4.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F4.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -54,10 +54,6 @@ void test04(int size)\n   VERIFY( oss.good() );\n   std::wstring str_tmp = oss.str();\n   VERIFY( str_tmp.size() == expected_size );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n int main()"}, {"sha": "6d5c69cc1a34de5a88b9cd11d4a360b71d15a243", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/wchar_t/5.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F5.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -75,10 +75,6 @@ void test05(int size)\n     }\n \n   VERIFY( count == 2 * size );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n int main()"}, {"sha": "1fa1fb07ca33455a86b287674009d3c82c07aacd", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/wchar_t/6.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F6.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -52,10 +52,6 @@ void test06(void)\n   size_type i06 = str02.capacity();\n   VERIFY( i05 == i03 );\n   VERIFY( i06 <= i04 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n int main()"}, {"sha": "0a3775c0bc63537ff4b79e98025184e75614bdc4", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/wchar_t/7.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F7.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -44,10 +44,6 @@ void test07(void)\n \n   VERIFY( i < 3 );\n   VERIFY( static_cast<bool>(iss.rdstate() & std::ios_base::failbit) );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n int main()"}, {"sha": "dec24cff731e18de486a0091c147686dc3be25bc", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/operators/char/1.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperators%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperators%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperators%2Fchar%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -41,12 +41,6 @@ int test01(void)\n   // printf(\"2:%s\\n\", str1.c_str()); //str1 is gone\n   const char* p2 = str1.c_str();\n   return 0;\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-\n-  return test;\n }\n \n int main()"}, {"sha": "bc3351d02fb468b2bab3e0b77d5e1b95d8847341", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/operators/char/2.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperators%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperators%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperators%2Fchar%2F2.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -285,11 +285,6 @@ template<class charT, class traits, class Allocator>\n   str_4 = 'o' + str_4;\n   str_4 = 'c' + str_4;\n   VERIFY( str_4 == str_3 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-\n   return 0;\n }\n "}, {"sha": "1dec0cb68954dbe65d37fdb49a55062d24ef8445", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/operators/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperators%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperators%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperators%2Fwchar_t%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -41,12 +41,6 @@ int test01(void)\n   // wprintf(\"2:%s\\n\", str1.c_str()); //str1 is gone\n   const wchar_t* p2 = str1.c_str();\n   return 0;\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-\n-  return test;\n }\n \n int main()"}, {"sha": "d92450d23baa24f20810511104c78464218f230c", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/operators/wchar_t/2.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperators%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperators%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperators%2Fwchar_t%2F2.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -285,11 +285,6 @@ template<class charT, class traits, class Allocator>\n   str_4 = L'o' + str_4;\n   str_4 = L'c' + str_4;\n   VERIFY( str_4 == str_3 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-\n   return 0;\n }\n "}, {"sha": "d4c632b7a42c8fad56de124a0c044be659437fa7", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/replace/char/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Freplace%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Freplace%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Freplace%2Fchar%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -73,10 +73,6 @@ bool test01(void)\n \t    std::find(x.rbegin(), x.rend(), 'l').base(), ar, \n \t    ar + sizeof(ar) / sizeof(ar[0]));\n   VERIFY( x == \"jeHelloo\" );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "19ee154025f9e32545e5d15d47f313c0d1ccca65", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/replace/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Freplace%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Freplace%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Freplace%2Fwchar_t%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -73,10 +73,6 @@ bool test01(void)\n \t    std::find(x.rbegin(), x.rend(), L'l').base(), ar, \n \t    ar + sizeof(ar) / sizeof(ar[0]));\n   VERIFY( x == L\"jeHelloo\" );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "ddc791b6c4aa45e6829db4ed85e4ed321c2e24f3", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/rfind/char/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fchar%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -83,10 +83,6 @@ bool test01(void)\n   VERIFY( csz01 == csz02 );\n   csz01 = str01.rfind('/');\n   VERIFY( csz01 == npos );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "d186199a1383fea309152550ee64872150a01303", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/rfind/char/2.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fchar%2F2.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -41,10 +41,6 @@ bool test02()\n   VERIFY( pos == 1 );\n   pos = z.find_last_of('X');\n   VERIFY( pos == std::string::npos );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "3517d4da169f432954c8285ec837683f86fb9ebc", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/rfind/char/3.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fchar%2F3.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -56,10 +56,6 @@ bool test03()\n   VERIFY( pos == 0 );\n   pos = z.find_last_not_of(\"Xa\");\n   VERIFY( pos == 1 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n int main()"}, {"sha": "bfb1f914c21ec7de8f995ef2df93f542f3de076d", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/rfind/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fwchar_t%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -83,10 +83,6 @@ bool test01(void)\n   VERIFY( csz01 == csz02 );\n   csz01 = str01.rfind(L'/');\n   VERIFY( csz01 == npos );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "2f813b9b28b49be9597ed5814a89f65086440bbe", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/rfind/wchar_t/2.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fwchar_t%2F2.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -41,10 +41,6 @@ bool test02()\n   VERIFY( pos == 1 );\n   pos = z.find_last_of(L'X');\n   VERIFY( pos == std::wstring::npos );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "a94da0d3e859c98c241b90ab71aab4e61ea1e64d", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/rfind/wchar_t/3.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frfind%2Fwchar_t%2F3.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -56,10 +56,6 @@ bool test03()\n   VERIFY( pos == 0 );\n   pos = z.find_last_not_of(L\"Xa\");\n   VERIFY( pos == 1 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n int main()"}, {"sha": "486892a62e0c2e363da77296cc8fb4f593ff28c1", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/substr/char/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fsubstr%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fsubstr%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fsubstr%2Fchar%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -66,10 +66,6 @@ bool test01(void)\n   catch(...) {\n     VERIFY( false );\n   }\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "1a4e4f63936e8a1b1c55494e426de7e5e62df171", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/substr/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fsubstr%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fsubstr%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fsubstr%2Fwchar_t%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -66,10 +66,6 @@ bool test01(void)\n   catch(...) {\n     VERIFY( false );\n   }\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "10ec016dfcdbe5e7ffebcda45e42d00f843ae9cc", "filename": "libstdc++-v3/testsuite/23_containers/bitset_ctor.cc", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_ctor.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -1,6 +1,6 @@\n // 1999-06-08 bkoz\n \n-// Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000, 2002, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -73,11 +73,6 @@ bool test01(void)\n   catch(...) {\n     VERIFY( false );\n   }\n-  \n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n \n@@ -109,11 +104,7 @@ bool test02(void)\n   }\n \n   VERIFY( z1.to_ulong() == 0 );\n-  VERIFY( ( z1.to_string<char,char_traits<char>,allocator<char> >().empty() ) );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n+  VERIFY( (z1.to_string<char,char_traits<char>,allocator<char> >().empty() ));\n   return test;\n }\n "}, {"sha": "c022ca6ff4a35954746c11bc88b7638f5348e2de", "filename": "libstdc++-v3/testsuite/23_containers/bitset_shift.cc", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_shift.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_shift.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_shift.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -1,6 +1,6 @@\n // 2000-01-15  Anders Widell  <awl@hem.passagen.se>\n \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -99,10 +99,6 @@ test01() {\n   VERIFY( do_test<511>() );\n   VERIFY( do_test<513>() );\n   VERIFY( do_test<997>() );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n \n@@ -114,10 +110,6 @@ test02()\n   std::bitset<66>  b;\n   b <<= 400;\n   VERIFY( b.count() == 0 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return test;\n }\n "}, {"sha": "24b013b29899f92ce59dd1bf94159511dce4dd6c", "filename": "libstdc++-v3/testsuite/23_containers/vector_ctor.cc", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_ctor.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -39,16 +39,11 @@ struct B { };\n void test01()\n {\n   // 1\n-  bool test = true;\n   std::vector< A<B> > vec01;\n   std::vector< A<B> > vec02(5);\n   typedef std::vector< A<B> >::size_type size_type;\n \n   vec01 = vec02;\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n // 2\n@@ -82,22 +77,13 @@ test03()\n   std::vector<int> v5(M, 7);\n   VERIFY(std::equal(v5.begin(), v5.end(), B));\n   VERIFY(std::equal(B, B + M, v5.begin()));\n-  \n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n // libstdc++/6513\n void test04()\n {\n-  bool test = true;\n   const char* c_strings[5] = { \"1\", \"2\", \"3\", \"4\", \"5\" };\n   std::vector<std::string> strings(c_strings, c_strings + 5);\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n "}, {"sha": "8171715dddb461509192a1355d30405160233e62", "filename": "libstdc++-v3/testsuite/23_containers/vector_element_access.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_element_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_element_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_element_access.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -1,7 +1,7 @@\n // 2000-09-06\n // bkoz \n \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -52,11 +52,6 @@ bool test01()\n     {\n       VERIFY( false );\n     }\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-  \n   return test;\n }\n "}, {"sha": "2f97f8973cfafec3c145ed329bf3ea81ed647b38", "filename": "libstdc++-v3/testsuite/24_iterators/istreambuf_iterator.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -1,6 +1,6 @@\n // 1999-06-28 bkoz\n \n-// Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2001, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -133,11 +133,6 @@ bool test02(void)\n       c = *++istrb_it28;\n       VERIFY( c == slit01[++i] );\n     }\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-\n   return test;\n }\n "}, {"sha": "db8b63369a502e1a7254fca31b770c19632b4844", "filename": "libstdc++-v3/testsuite/24_iterators/iterator.cc", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fiterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fiterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fiterator.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -2,7 +2,7 @@\n // 24.3.1 Iterator traits\n // (basic_string and vector implementations)\n //\n-// Copyright (C) 1999  Philip Martin\n+// Copyright (C) 1999, 2003 Free Software Foundation, Inc.\n // This program is free software; you can redistribute it and/or modify\n // it under the terms of the GNU General Public License as published by\n // the Free Software Foundation; either version 2 of the License, or \n@@ -603,9 +603,6 @@ main(int argc, char **argv)\n \n    failures += test6642();\n \n-#ifdef DEBUG_ASSERT\n-   assert (failures == 0);\n-#endif\n-\n+   VERIFY(failures == 0);\n    return 0;\n }"}, {"sha": "6fbfe6d514409203d29d084c7bc1244fb203cf7f", "filename": "libstdc++-v3/testsuite/24_iterators/ostreambuf_iterator.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fostreambuf_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fostreambuf_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fostreambuf_iterator.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -1,6 +1,6 @@\n // 2001-04-30  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -106,11 +106,6 @@ bool test02(void)\n   tmp = ostrs00.str();\n   VERIFY ( tmp != str01 );\n   VERIFY ( tmp != str02 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-\n   return test;\n }\n "}, {"sha": "a3a2305016563209fb1c6ef0d4be8be32590be2e", "filename": "libstdc++-v3/testsuite/25_algorithms/lower_bound.cc", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -1,4 +1,5 @@\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// { dg-do compile }\n+// Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,17 +30,3 @@ void bar(foo* a, foo* b, foo& x)\n {\n   foo* c = std::lower_bound(a, b, x);\n }\n-\n-void test01()\n-{\n-  bool test = true;\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-}\n-\n-int main()\n-{\n-  return 0;\n-}"}, {"sha": "9f4e96b345cacdec6293e507ceb6daaacf369375", "filename": "libstdc++-v3/testsuite/26_numerics/complex_inserters_extractors.cc", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_inserters_extractors.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_inserters_extractors.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_inserters_extractors.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -1,7 +1,7 @@\n // 2000-02-10\n // Petter Urkedal <petter@matfys.lth.se>\n \n-// Copyright (C) 2000 Free Software Foundation\n+// Copyright (C) 2000, 2003 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -47,23 +47,18 @@ test_good(std::string str, R x, R y)\n   VERIFY( flteq(z.real(), x) );\n   VERIFY( flteq(z.imag(), y) );\n   VERIFY( ch == '#' );\n-  \n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n   return 0;\n }\n \n template<typename R>\n int\n test_fail(std::string str)\n {\n+  bool test = true;\n   std::complex<R> z;\n   std::istringstream iss(str);\n   iss >> z;\n-#ifdef DEBUG_ASSERT\n-  assert(iss.fail() && !iss.bad());\n-#endif\n+  VERIFY( iss.fail() && !iss.bad() );\n   return 0;\n }\n "}, {"sha": "9c3b3605cb893c9c5352dd88973ff396480300bb", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/01.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F01.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F01.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F01.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -119,11 +119,6 @@ bool test01() {\n   ss_01 >> pi;\n   std::printf (\"%x %x\\n\", pi, po);\n   VERIFY( po == pi );\n-  \n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n- \n   return test;\n }\n "}, {"sha": "94136d2e1687cee648e3467c2d53e440636e1b63", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/02.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F02.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F02.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F02.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -56,11 +56,6 @@ bool test02() {\n   VERIFY( n == 20000 );\n   char c = is.peek();\n   VERIFY( c == 65 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n- \n   return test;\n }\n "}, {"sha": "65306c4d6e349a7fdf7f2b101652848bb5a7921b", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/03.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F03.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F03.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F03.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -55,11 +55,6 @@ bool test03()\n   istr >>  l01; // _M_in_end set completely incorrectly here.\n   VERIFY( l01 == 12220101 );\n   VERIFY( istr.rdstate() == std::ios_base::eofbit );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-\n   return test;\n }\n "}, {"sha": "206c81e506b7b9860083f4d93b4343603e443ca0", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/06.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F06.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F06.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F06.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -70,10 +70,6 @@ void test06()\n   is >> c; // EOF\n   VERIFY( c == ',' );\n   VERIFY( static_cast<bool>(is.rdstate() & std::ios_base::failbit) );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n int main()"}, {"sha": "6167471ba49ce6174676caf2c83e60307d56e8a5", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/07.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F07.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F07.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F07.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -156,10 +156,6 @@ void test07()\n   VERIFY( static_cast<bool>(is.rdstate() & std::ios_base::failbit) );\n   VERIFY( static_cast<bool>(is.rdstate() & std::ios_base::eofbit) );\n   is.clear();\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n int main()"}, {"sha": "2a2c3cc1ff7a0c866373b3ca33671d267f3aee08", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/08.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F08.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F08.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F08.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -79,11 +79,6 @@ void test08()\n   is >> h2; \n   VERIFY( h2 == 2212322 );\n   VERIFY( static_cast<bool>(is.rdstate() & std::ios_base::eofbit) );\n-\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n }\n \n int main()"}, {"sha": "67d98d53de8e625822b30fa2ebecfceae0d41518", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/09.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F09.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F09.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F09.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -58,10 +58,6 @@ bool test09()\n    test = f1 == 2456;\n    VERIFY( f2 == 0.00567 );\n    VERIFY( c == '-' );\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n- \n   return test;\n }\n "}, {"sha": "de7bbf9ada883af634033c9f2ab03dc721fd57e4", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/10.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F10.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F10.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F10.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -139,11 +139,6 @@ bool test10() {\n   is_05.ignore();\n   is_05 >> n;\n   VERIFY( n == 16 );\n-\n-#ifdef DEBUG_ASSERT\n-  assert(test);\n-#endif\n-\n   return test;\n }\n "}, {"sha": "f49f60405f8dc903307b5ec3242d2be32f71e40d", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_arithmetic/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_arithmetic%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_arithmetic%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_arithmetic%2Fchar%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -30,7 +30,7 @@\n \n using namespace std;\n \n-#ifndef DEBUG_ASSERT\n+#ifndef _GLIBCXX_ASSERT\n #  define TEST_NUMPUT_VERBOSE 1\n #endif\n "}, {"sha": "484e66b8c1539cfd46cd4ff94dc5b4b46794351c", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_arithmetic/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_arithmetic%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_arithmetic%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_arithmetic%2Fwchar_t%2F1.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -30,7 +30,7 @@\n \n using namespace std;\n \n-#ifndef DEBUG_ASSERT\n+#ifndef _GLIBCXX_ASSERT\n #  define TEST_NUMPUT_VERBOSE 1\n #endif\n "}, {"sha": "8c296d6ff5e0b36fad918f427ad0edaad1d2f3e2", "filename": "libstdc++-v3/testsuite/lib/libstdc++-v3-dg.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -107,7 +107,7 @@ proc libstdc++-v3-init { args } {\n             return \"untested\"\n         }\n       set cxx [transform \"g++\"]\n-      set cxxflags \"-ggdb3 -DDEBUG_ASSERT\"\n+      set cxxflags \"-ggdb3 -D_GLIBCXX_ASSERT\"\n       set includes \"-I./\"\n     } else {\n         # If we find a testsuite_flags file, we're testing in the build dir.\n@@ -118,7 +118,7 @@ proc libstdc++-v3-init { args } {\n             set includes [exec sh $flags_file --build-includes]\n         } else {\n             set cxx [transform \"g++\"]\n-            set cxxflags \"-ggdb3 -DDEBUG_ASSERT\"\n+            set cxxflags \"-ggdb3 -D_GLIBCXX_ASSERT\"\n             set includes \"-I${srcdir}\"\n         }\n     }"}, {"sha": "aa04dd60398a7813cc64709f5117c926f3b10a60", "filename": "libstdc++-v3/testsuite/libstdc++-v3.dg/dg.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-v3.dg%2Fdg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-v3.dg%2Fdg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-v3.dg%2Fdg.exp?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -22,7 +22,7 @@ load_lib libstdc++-v3-dg.exp\n # If a testcase doesn't have special options, use these.\n global DEFAULT_CXXFLAGS\n if ![info exists DEFAULT_CXXFLAGS] then {\n-    set DEFAULT_CXXFLAGS \"-DDEBUG_ASSERT\"\n+    set DEFAULT_CXXFLAGS \"-D_GLIBCXX_ASSERT\"\n }\n \n # Initialize 'dg' last or dejagnu exits with an error..."}, {"sha": "a2ace1156e46413d1a5557291d1862b5c7d94423", "filename": "libstdc++-v3/testsuite/testsuite_hooks.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -155,8 +155,9 @@ namespace __gnu_test\n     if (res != NULL)\n       {\n \tstring preLC_ALL = res;\n-\tfor (func_callback::const_iterator i = l.begin(); i != l.end(); ++i)\n-\t  (*i)();\n+\tconst func_callback::test_type* tests = l.tests();\n+\tfor (int i = 0; i < l.size(); ++i)\n+\t  (*tests[i])();\n \tstring postLC_ALL= setlocale(LC_ALL, NULL);\n \tVERIFY( preLC_ALL == postLC_ALL );\n       }\n@@ -180,8 +181,9 @@ namespace __gnu_test\n     const char* oldENV = getenv(env);\n     if (!setenv(env, name, 1))\n       {\n-\tfor (func_callback::const_iterator i = l.begin(); i != l.end(); ++i)\n-\t  (*i)();\n+\tconst func_callback::test_type* tests = l.tests();\n+\tfor (int i = 0; i < l.size(); ++i)\n+\t  (*tests[i])();\n \tsetenv(env, oldENV ? oldENV : \"\", 1);\n       }\n     else"}, {"sha": "698433582cf7770fa7e63153a5ec9e0f9b700ef1", "filename": "libstdc++-v3/testsuite/testsuite_hooks.h", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -30,7 +30,7 @@\n \n // This file provides the following:\n //\n-// 1)  VERIFY(), via DEBUG_ASSERT, from Brent Verner <brent@rcfile.org>.\n+// 1)  VERIFY(), via _GLIBCXX_ASSERT, from Brent Verner <brent@rcfile.org>.\n //   This file is included in the various testsuite programs to provide\n //   #define(able) assert() behavior for debugging/testing. It may be\n //   a suitable location for other furry woodland creatures as well.\n@@ -61,13 +61,12 @@\n #include <bits/c++config.h>\n #include <bits/functexcept.h>\n #include <cstddef>\n-#ifdef DEBUG_ASSERT\n+#ifdef _GLIBCXX_ASSERT\n # include <cassert>\n # define VERIFY(fn) assert(fn)\n #else\n # define VERIFY(fn) test &= (fn)\n #endif\n-#include <list>\n #include <locale>\n #ifdef _GLIBCXX_HAVE_UNISTD_H\n # include <unistd.h>\n@@ -100,8 +99,32 @@ namespace __gnu_test\n   // Simple callback structure for variable numbers of tests (all with\n   // same signature).  Assume all unit tests are of the signature\n   // void test01(); \n-  typedef void (*test_func) (void);\n-  typedef std::list<test_func> func_callback;\n+  class func_callback\n+  {\n+  public:\n+    typedef void (*test_type) (void);\n+\n+  private:\n+    int\t\t_M_size;\n+    test_type\t_M_tests[15];\n+    \n+  public:\n+    func_callback(): _M_size(0) { };\n+\n+    int\n+    size() const { return _M_size; }\n+\n+    const test_type*\n+    tests() const { return _M_tests; }\n+\n+    void\n+    push_back(test_type test)\n+    {\n+      _M_tests[_M_size] = test;\n+      ++_M_size;\n+    }\n+  };\n+\n \n   // Run select unit tests after setting global locale.\n   void "}, {"sha": "158092d97bbbcd978b2c63b1e290809c5937093f", "filename": "libstdc++-v3/testsuite/thread/pthread7-rope.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread7-rope.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb584bcf987de15027a8364ed5eac0d6036878f7/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread7-rope.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread7-rope.cc?ref=cb584bcf987de15027a8364ed5eac0d6036878f7", "patch": "@@ -19,8 +19,8 @@\n // USA.\n \n // { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* } }\n-// { dg-options \"-DDEBUG_ASSERT -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* } }\n-// { dg-options \"-DDEBUG_ASSERT -pthreads\" { target *-*-solaris* } }\n+// { dg-options \"-D_GLIBCXX_ASSERT -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* } }\n+// { dg-options \"-D_GLIBCXX_ASSERT -pthreads\" { target *-*-solaris* } }\n \n #include <ext/rope>\n #include <cstring>"}]}