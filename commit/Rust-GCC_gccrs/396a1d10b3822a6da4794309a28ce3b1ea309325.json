{"sha": "396a1d10b3822a6da4794309a28ce3b1ea309325", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk2YTFkMTBiMzgyMmE2ZGE0Nzk0MzA5YTI4Y2UzYjFlYTMwOTMyNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-05-23T19:20:41Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-05-23T19:20:41Z"}, "message": "pt.c (check_for_bare_parameter_packs): Improve error message location for expressions.\n\n/cp\n2016-05-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* pt.c (check_for_bare_parameter_packs): Improve error message\n\tlocation for expressions.\n\n/testsuite\n2016-05-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/cpp0x/pr31445.C: Test column number too.\n\t* g++.dg/cpp0x/pr32253.C: Likewise.\n\t* g++.dg/cpp0x/variadic-ex13.C: Likewise.\n\t* g++.dg/cpp0x/variadic36.C: Likewise.\n\nFrom-SVN: r236609", "tree": {"sha": "33cff4ba8797c3124dfc5815eabf4a672f5712f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33cff4ba8797c3124dfc5815eabf4a672f5712f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/396a1d10b3822a6da4794309a28ce3b1ea309325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/396a1d10b3822a6da4794309a28ce3b1ea309325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/396a1d10b3822a6da4794309a28ce3b1ea309325", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/396a1d10b3822a6da4794309a28ce3b1ea309325/comments", "author": null, "committer": null, "parents": [{"sha": "f48b4284312063565ecfed52591fa201b0469730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f48b4284312063565ecfed52591fa201b0469730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f48b4284312063565ecfed52591fa201b0469730"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "e6f4ac98f9f6d6a9174f27f7f28e094e7de5deec", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=396a1d10b3822a6da4794309a28ce3b1ea309325", "patch": "@@ -1,3 +1,8 @@\n+2016-05-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* pt.c (check_for_bare_parameter_packs): Improve error message\n+\tlocation for expressions.\n+\n 2016-05-20  Nathan Sidwell  <nathan@acm.org>\n \n \t* constexpr.c (cxx_bind_parameters_in_call): Avoid gratuitous if"}, {"sha": "2ce8f40f791400aac50cf80351fe6b1b239c2a30", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=396a1d10b3822a6da4794309a28ce3b1ea309325", "patch": "@@ -3761,7 +3761,8 @@ check_for_bare_parameter_packs (tree t)\n \n   if (parameter_packs) \n     {\n-      error (\"parameter packs not expanded with %<...%>:\");\n+      location_t loc = EXPR_LOC_OR_LOC (t, input_location);\n+      error_at (loc, \"parameter packs not expanded with %<...%>:\");\n       while (parameter_packs)\n         {\n           tree pack = TREE_VALUE (parameter_packs);\n@@ -3776,9 +3777,9 @@ check_for_bare_parameter_packs (tree t)\n             name = DECL_NAME (pack);\n \n \t  if (name)\n-\t    inform (input_location, \"        %qD\", name);\n+\t    inform (loc, \"        %qD\", name);\n \t  else\n-\t    inform (input_location, \"        <anonymous>\");\n+\t    inform (loc, \"        <anonymous>\");\n \n           parameter_packs = TREE_CHAIN (parameter_packs);\n         }"}, {"sha": "b4ca509c2e145a414374786fa4803468d828cc5a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=396a1d10b3822a6da4794309a28ce3b1ea309325", "patch": "@@ -1,3 +1,10 @@\n+2016-05-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/cpp0x/pr31445.C: Test column number too.\n+\t* g++.dg/cpp0x/pr32253.C: Likewise.\n+\t* g++.dg/cpp0x/variadic-ex13.C: Likewise.\n+\t* g++.dg/cpp0x/variadic36.C: Likewise.\n+\n 2016-05-23  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* gcc.dg/fold-notshift-2.c: Adjust.\n@@ -16,7 +23,7 @@\n \t* g++.dg/gomp/target-1.C: Likewise.\n \t* g++.dg/gomp/target-2.C: Likewise.\n \t* gcc.dg/gomp/target-1.c: Likewise.\n-\t* gcc.dg/gomp/target-2.c: Likewise. \n+\t* gcc.dg/gomp/target-2.c: Likewise.\n \t* g++.dg/gomp/taskgroup-1.C: Likewise.\n \t* gcc.dg/gomp/taskgroup-1.c: Likewise.\n \t* gcc.dg/gomp/teams-1.c: Likewise.\n@@ -38,7 +45,7 @@\n \n 2016-05-23  Venkataramanan Kumar  <venkataramanan.kumar@amd.com>\n \n-\t* gcc.dg/vect/bb-slp-19.c:  Remove XFAIL. \n+\t* gcc.dg/vect/bb-slp-19.c:  Remove XFAIL.\n \t* gcc.dg/vect/pr58135.c:  Add new.\n \t* gfortran.dg/pr46519-1.f: Adjust test case.\n "}, {"sha": "b4542818237991ab54c33f615b72d1b309aa2a66", "filename": "gcc/testsuite/g++.dg/cpp0x/pr31445.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31445.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31445.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31445.C?ref=396a1d10b3822a6da4794309a28ce3b1ea309325", "patch": "@@ -2,7 +2,7 @@\n template <typename... T> struct A\n {\n   void foo(T...);\n-  A(T... t) { foo(t); } // { dg-error \"parameter packs|t\" }\n+  A(T... t) { foo(t); } // { dg-error \"18:parameter packs|t\" }\n };\n \n A<int> a(0);"}, {"sha": "bfb11e42d8f694a529949935f0b87e677de0e662", "filename": "gcc/testsuite/g++.dg/cpp0x/pr32253.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr32253.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr32253.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr32253.C?ref=396a1d10b3822a6da4794309a28ce3b1ea309325", "patch": "@@ -1,7 +1,7 @@\n // { dg-do compile { target c++11 } }\n template<void (*... fp)()> struct A\n {\n-  A() { fp(); } // { dg-error \"not expanded|fp\" }\n+  A() { fp(); } // { dg-error \"11:parameter packs not expanded|fp\" }\n };\n \n void foo();"}, {"sha": "ddf71a42fc3e714584a81497cdd614a1e5e7ef54", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-ex13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex13.C?ref=396a1d10b3822a6da4794309a28ce3b1ea309325", "patch": "@@ -33,7 +33,7 @@ template<typename... Args> void g(Args... args)\n {\n    f(const_cast<const Args*>(&args)...); // okay: ``Args'' and ``args'' are expanded\n    f(5 ...); // { dg-error \"contains no argument packs\" }\n-   f(args); // { dg-error \"parameter packs not expanded\" }\n+   f(args); // { dg-error \"5:parameter packs not expanded\" }\n    // { dg-message \"args\" \"note\" { target *-*-* } 36 }\n    f(h(args...) + args...); // okay: first ``args'' expanded within h, second ``args'' expanded within f.\n }"}, {"sha": "0bd068cee05929f37202a62b9b0c85ae961e122a", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic36.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/396a1d10b3822a6da4794309a28ce3b1ea309325/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic36.C?ref=396a1d10b3822a6da4794309a28ce3b1ea309325", "patch": "@@ -2,7 +2,7 @@\n template<typename T, typename... Args>\n void f(const T&, const Args&... args)\n {\n-  f(args); // { dg-error \"packs not expanded\" }\n+  f(args); // { dg-error \"4:parameter packs not expanded\" }\n }\n \n template<typename... Values>"}]}