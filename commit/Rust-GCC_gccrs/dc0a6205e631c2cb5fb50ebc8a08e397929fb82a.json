{"sha": "dc0a6205e631c2cb5fb50ebc8a08e397929fb82a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMwYTYyMDVlNjMxYzJjYjVmYjUwZWJjOGEwOGUzOTc5MjlmYjgyYQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-03-29T21:47:03Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-03-29T21:47:03Z"}, "message": "natRuntime.cc (insertSystemProperties): Set gnu.gcj.runtime.endorsed.dirs.\n\nlibjava:\n\t* java/lang/natRuntime.cc (insertSystemProperties): Set\n\tgnu.gcj.runtime.endorsed.dirs.\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (ordinary_java_source_files): Added\n\tHelperClassLoader.java.\n\t(AM_CXXFLAGS): Define GCJ_ENDORSED_DIRS.\n\t* gnu/gcj/runtime/VMClassLoader.java (VMClassLoader): Extends\n\tHelperClassLoader.\n\t(init): Use addDirectoriesFromProperty.\n\t* gnu/gcj/runtime/BootClassLoader.java (BootClassLoader): Extends\n\tHelperClassLoader.  Use addDirectoriesFromProperty.  Handle\n\tgnu.gcj.runtime.endorsed.dirs.\n\t* gnu/gcj/runtime/HelperClassLoader.java: New file.\ngcc/java:\n\t* gcj.texi (libgcj Runtime Properties): Document\n\tgnu.gcj.runtime.endorsed.dirs.\n\nFrom-SVN: r97207", "tree": {"sha": "2abee51b1df7b032736542aa6b0c8f6705c0fe41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2abee51b1df7b032736542aa6b0c8f6705c0fe41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/comments", "author": null, "committer": null, "parents": [{"sha": "aa80f4d1b991994cb712926940a05b3589c56c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa80f4d1b991994cb712926940a05b3589c56c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa80f4d1b991994cb712926940a05b3589c56c41"}], "stats": {"total": 129, "additions": 55, "deletions": 74}, "files": [{"sha": "0c0430ec6b17fbccac941abfe335e304ab0958af", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=dc0a6205e631c2cb5fb50ebc8a08e397929fb82a", "patch": "@@ -1,3 +1,8 @@\n+2005-03-29  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gcj.texi (libgcj Runtime Properties): Document\n+\tgnu.gcj.runtime.endorsed.dirs.\n+\n 2005-03-24  Anthony Green  <green@redhat.com>\n \n \t* gcj.texi (Invoking gcj-dbtool): Document new LIBDIR option to"}, {"sha": "df693c057a0a594d52b941739fb67ef9fcf2367d", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=dc0a6205e631c2cb5fb50ebc8a08e397929fb82a", "patch": "@@ -2515,6 +2515,15 @@ search is done for each requested class.  If this property is set to\n tried again.  If this property is set to @samp{never}, then lookups\n are never done.  For more information, @xref{Extensions}.\n \n+@item gnu.gcj.runtime.endorsed.dirs\n+This is like the standard @code{java.endorsed.dirs}, property, but\n+specifies some extra directories which are searched after the standard\n+endorsed directories.  This is primarily useful for telling\n+@code{libgcj} about additional libraries which are ordinarily\n+incorporated into the JDK, and which should be loaded by the bootstrap\n+class loader, but which are not yet part of @code{libgcj} itself for\n+some reason.\n+\n @item gnu.gcj.jit.compiler\n @c FIXME we should probably have a whole node on this...\n This is the full path to @command{gcj} executable which should be"}, {"sha": "98a04f697c8cf22e2f385f50864ae120c4cbd37c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=dc0a6205e631c2cb5fb50ebc8a08e397929fb82a", "patch": "@@ -1,3 +1,19 @@\n+2005-03-29  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/natRuntime.cc (insertSystemProperties): Set\n+\tgnu.gcj.runtime.endorsed.dirs.\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (ordinary_java_source_files): Added\n+\tHelperClassLoader.java.\n+\t(AM_CXXFLAGS): Define GCJ_ENDORSED_DIRS.\n+\t* gnu/gcj/runtime/VMClassLoader.java (VMClassLoader): Extends\n+\tHelperClassLoader.\n+\t(init): Use addDirectoriesFromProperty.\n+\t* gnu/gcj/runtime/BootClassLoader.java (BootClassLoader): Extends\n+\tHelperClassLoader.  Use addDirectoriesFromProperty.  Handle\n+\tgnu.gcj.runtime.endorsed.dirs.\n+\t* gnu/gcj/runtime/HelperClassLoader.java: New file.\n+\n 2005-03-26  Chris Burdess  <dog@gnu.org>\n \n \t* gnu/xml/dom/DomNode.java (notifyNode): grow listener array as"}, {"sha": "1694560a678f1d6acc19e9f25e82730e4dcf9e49", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=dc0a6205e631c2cb5fb50ebc8a08e397929fb82a", "patch": "@@ -186,6 +186,7 @@ AM_CXXFLAGS = \\\n \t-DLIBDIR=\"\\\"$(libdir)\\\"\" \\\n \t-DBOOT_CLASS_PATH=\"\\\"$(jardir)/$(jar_DATA)\\\"\" \\\n \t-DJAVA_EXT_DIRS=\"\\\"$(jardir)/ext\\\"\" \\\n+\t-DGCJ_ENDORSED_DIRS=\"\\\"$(jardir)/gcj-endorsed\\\"\" \\\n \t-DLIBGCJ_DEFAULT_DATABASE=\"\\\"$(dbexecdir)/$(db_name)\\\"\" \\\n \t-DLIBGCJ_DEFAULT_DATABASE_PATH_TAIL=\"\\\"$(db_pathtail)\\\"\" \\\n \t-DTOOLEXECLIBDIR=\"\\\"$(toolexeclibdir)\\\"\"\n@@ -2992,6 +2993,7 @@ gnu/gcj/io/SimpleSHSStream.java\t\\\n gnu/gcj/runtime/BootClassLoader.java \\\n gnu/gcj/runtime/FileDeleter.java \\\n gnu/gcj/runtime/FinalizerThread.java \\\n+gnu/gcj/runtime/HelperClassLoader.java \\\n gnu/gcj/runtime/JNIWeakRef.java \\\n gnu/gcj/runtime/NameFinder.java \\\n gnu/gcj/runtime/PersistentByteMap.java \\"}, {"sha": "d91dcf23fe2772ec8f5383cc257bdfe4e04b6f52", "filename": "libjava/Makefile.in", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=dc0a6205e631c2cb5fb50ebc8a08e397929fb82a", "patch": "@@ -550,6 +550,7 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tgnu/gcj/runtime/BootClassLoader.java \\\n \tgnu/gcj/runtime/FileDeleter.java \\\n \tgnu/gcj/runtime/FinalizerThread.java \\\n+\tgnu/gcj/runtime/HelperClassLoader.java \\\n \tgnu/gcj/runtime/JNIWeakRef.java \\\n \tgnu/gcj/runtime/NameFinder.java \\\n \tgnu/gcj/runtime/PersistentByteMap.java \\\n@@ -3554,6 +3555,7 @@ am__objects_15 = $(am__objects_9) gnu/classpath/ServiceFactory.lo \\\n \tgnu/gcj/runtime/BootClassLoader.lo \\\n \tgnu/gcj/runtime/FileDeleter.lo \\\n \tgnu/gcj/runtime/FinalizerThread.lo \\\n+\tgnu/gcj/runtime/HelperClassLoader.lo \\\n \tgnu/gcj/runtime/JNIWeakRef.lo gnu/gcj/runtime/NameFinder.lo \\\n \tgnu/gcj/runtime/PersistentByteMap.lo \\\n \tgnu/gcj/runtime/SharedLibHelper.lo \\\n@@ -4568,6 +4570,7 @@ AM_CXXFLAGS = \\\n \t-DLIBDIR=\"\\\"$(libdir)\\\"\" \\\n \t-DBOOT_CLASS_PATH=\"\\\"$(jardir)/$(jar_DATA)\\\"\" \\\n \t-DJAVA_EXT_DIRS=\"\\\"$(jardir)/ext\\\"\" \\\n+\t-DGCJ_ENDORSED_DIRS=\"\\\"$(jardir)/gcj-endorsed\\\"\" \\\n \t-DLIBGCJ_DEFAULT_DATABASE=\"\\\"$(dbexecdir)/$(db_name)\\\"\" \\\n \t-DLIBGCJ_DEFAULT_DATABASE_PATH_TAIL=\"\\\"$(db_pathtail)\\\"\" \\\n \t-DTOOLEXECLIBDIR=\"\\\"$(toolexeclibdir)\\\"\"\n@@ -6752,6 +6755,7 @@ gnu/gcj/io/SimpleSHSStream.java\t\\\n gnu/gcj/runtime/BootClassLoader.java \\\n gnu/gcj/runtime/FileDeleter.java \\\n gnu/gcj/runtime/FinalizerThread.java \\\n+gnu/gcj/runtime/HelperClassLoader.java \\\n gnu/gcj/runtime/JNIWeakRef.java \\\n gnu/gcj/runtime/NameFinder.java \\\n gnu/gcj/runtime/PersistentByteMap.java \\\n@@ -9045,6 +9049,8 @@ gnu/gcj/runtime/FileDeleter.lo: gnu/gcj/runtime/$(am__dirstamp) \\\n \tgnu/gcj/runtime/$(DEPDIR)/$(am__dirstamp)\n gnu/gcj/runtime/FinalizerThread.lo: gnu/gcj/runtime/$(am__dirstamp) \\\n \tgnu/gcj/runtime/$(DEPDIR)/$(am__dirstamp)\n+gnu/gcj/runtime/HelperClassLoader.lo: gnu/gcj/runtime/$(am__dirstamp) \\\n+\tgnu/gcj/runtime/$(DEPDIR)/$(am__dirstamp)\n gnu/gcj/runtime/JNIWeakRef.lo: gnu/gcj/runtime/$(am__dirstamp) \\\n \tgnu/gcj/runtime/$(DEPDIR)/$(am__dirstamp)\n gnu/gcj/runtime/NameFinder.lo: gnu/gcj/runtime/$(am__dirstamp) \\\n@@ -14849,6 +14855,8 @@ mostlyclean-compile:\n \t-rm -f gnu/gcj/runtime/FileDeleter.lo\n \t-rm -f gnu/gcj/runtime/FinalizerThread.$(OBJEXT)\n \t-rm -f gnu/gcj/runtime/FinalizerThread.lo\n+\t-rm -f gnu/gcj/runtime/HelperClassLoader.$(OBJEXT)\n+\t-rm -f gnu/gcj/runtime/HelperClassLoader.lo\n \t-rm -f gnu/gcj/runtime/JNIWeakRef.$(OBJEXT)\n \t-rm -f gnu/gcj/runtime/JNIWeakRef.lo\n \t-rm -f gnu/gcj/runtime/NameFinder.$(OBJEXT)\n@@ -19822,6 +19830,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/BootClassLoader.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/FileDeleter.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/FinalizerThread.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/HelperClassLoader.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/JNIWeakRef.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/NameFinder.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/PersistentByteMap.Plo@am__quote@"}, {"sha": "d2091720a4fb52d451768c4cf52c14a86b98e9ca", "filename": "libjava/gnu/gcj/runtime/BootClassLoader.java", "status": "modified", "additions": 6, "deletions": 30, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/libjava%2Fgnu%2Fgcj%2Fruntime%2FBootClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/libjava%2Fgnu%2Fgcj%2Fruntime%2FBootClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FBootClassLoader.java?ref=dc0a6205e631c2cb5fb50ebc8a08e397929fb82a", "patch": "@@ -8,14 +8,9 @@\n \n package gnu.gcj.runtime;\n \n-import java.io.File;\n-import java.io.FilenameFilter;\n import java.io.IOException;\n import java.net.URL;\n-import java.net.URLClassLoader;\n import java.util.Enumeration;\n-import java.util.HashSet;\n-import java.util.StringTokenizer;\n \n /**\n  * This is a helper for the bootstrap class loader.  It is a\n@@ -24,37 +19,18 @@\n  * However, it is never called the way that an ordinary ClassLoader is\n  * called.  For instance, loadClass() is never used.\n  */\n-public final class BootClassLoader extends URLClassLoader\n+public final class BootClassLoader extends HelperClassLoader\n {\n   BootClassLoader(String libdir)\n   {\n-    super(new URL[0]);\n+    addDirectoriesFromProperty(\"java.endorsed.dirs\");\n+    addDirectoriesFromProperty(\"gnu.gcj.runtime.endorsed.dirs\");\n \n-    // Add the contents of the endorsed directories.\n-    StringTokenizer st\n-      = new StringTokenizer (System.getProperty (\"java.endorsed.dirs\", \"\"),\n-\t\t\t     File.pathSeparator);\n     try\n       {\n-\twhile (st.hasMoreElements ())\n-\t  {\n-\t    String dirname = st.nextToken ();\n-\t    File dir = new File (dirname);\n-            if (dir.exists ())\n-\t      {\n-\t\tif (! dirname.endsWith (File.separator))\n-\t\t  dirname = dirname + File.separator;\n-\t\tString files[] = dir.list (new FilenameFilter ()\n-\t\t  {\n-\t\t    public boolean accept (File dir, String name)\n-\t\t    {\n-\t\t      return name.endsWith (\".jar\") || name.endsWith (\".zip\");\n-\t\t    }\n-\t\t  });\n-\t\tfor (int i = files.length - 1; i >= 0; i--)\n-\t\t  addURL(new URL(\"file\", \"\", -1, dirname + files[i]));\n-\t      }\n-\t  }\n+\t// Add core:/ to the end so any resources compiled into this\n+\t// executable may be found.\n+\taddURL(new URL(\"core\", \"\", -1, \"/\"));\n       }\n     catch (java.net.MalformedURLException x)\n       {"}, {"sha": "1ed0c026cf8094ea476e056910e18e2dc5b43c80", "filename": "libjava/gnu/gcj/runtime/VMClassLoader.java", "status": "modified", "additions": 3, "deletions": 44, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java?ref=dc0a6205e631c2cb5fb50ebc8a08e397929fb82a", "patch": "@@ -10,20 +10,16 @@\n \n package gnu.gcj.runtime;\n \n-import java.io.*;\n-import java.util.StringTokenizer;\n-import java.util.HashSet;\n import java.net.URL;\n-import java.net.URLClassLoader;\n+import java.util.HashSet;\n \n // Despite its name, this class is really the extension loader for\n // libgcj.  Class loader bootstrap is a bit tricky, see prims.cc and\n // SystemClassLoader for some details.\n-public final class VMClassLoader extends URLClassLoader\n+public final class VMClassLoader extends HelperClassLoader\n {\n   private VMClassLoader ()\n   {\t\n-    super (new URL[0]);\n     String p\n       = System.getProperty (\"gnu.gcj.runtime.VMClassLoader.library_control\",\n \t\t\t    \"\");\n@@ -39,44 +35,7 @@ else if (\"full\".equals(p))\n \n   private void init() \n   {\n-    // Add the contents of the extensions directories.  \n-    StringTokenizer st\n-      = new StringTokenizer (System.getProperty (\"java.ext.dirs\"),\n-\t\t\t     File.pathSeparator);\n-\n-    try\n-      {\n-\twhile (st.hasMoreElements ())\n-\t  {\n-\t    String dirname = st.nextToken ();\n-\t    File dir = new File (dirname);\n-            if (dir.exists ())\n-            {\n-              if (! dirname.endsWith (File.separator))\n-        \t  dirname = dirname + File.separator;\n-              String files[] \n-        \t= dir.list (new FilenameFilter ()\n-                            { \n-                              public boolean accept (File dir, String name)\n-                              {\n-                        \treturn (name.endsWith (\".jar\") \n-                                \t|| name.endsWith (\".zip\"));\n-                              }\n-                            });\n-              for (int i = files.length - 1; i >= 0; i--)\n-        \taddURL(new URL(\"file\", \"\", -1, dirname + files[i]));\n-            }\n-\t  }\n-\n-\t// Add core:/ to the end so any resources compiled into this\n-\t// executable may be found.\n-\taddURL(new URL(\"core\", \"\", -1, \"/\"));\n-      }\n-    catch (java.net.MalformedURLException x)\n-      {\n-\t// This should never happen.\n-\tthrow new RuntimeException(x);\n-      }\n+    addDirectoriesFromProperty(\"java.ext.dirs\");\n   }\n \n   /** This is overridden to search the internal hash table, which "}, {"sha": "248bf44b89c65ef20b9e58337d6a368727b2dcc5", "filename": "libjava/java/lang/natRuntime.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/libjava%2Fjava%2Flang%2FnatRuntime.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc0a6205e631c2cb5fb50ebc8a08e397929fb82a/libjava%2Fjava%2Flang%2FnatRuntime.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatRuntime.cc?ref=dc0a6205e631c2cb5fb50ebc8a08e397929fb82a", "patch": "@@ -528,6 +528,11 @@ java::lang::Runtime::insertSystemProperties (java::util::Properties *newprops)\n   // The java extensions directory.\n   SET (\"java.ext.dirs\", JAVA_EXT_DIRS);\n \n+  // The endorsed directories that libgcj knows about by default.\n+  // This is a way to get other jars into the boot class loader\n+  // without overriding java.endorsed.dirs.\n+  SET (\"gnu.gcj.runtime.endorsed.dirs\", GCJ_ENDORSED_DIRS);\n+\n   // The path to libgcj's boot classes\n   SET (\"sun.boot.class.path\", BOOT_CLASS_PATH);\n "}]}