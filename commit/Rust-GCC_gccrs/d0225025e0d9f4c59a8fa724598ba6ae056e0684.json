{"sha": "d0225025e0d9f4c59a8fa724598ba6ae056e0684", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAyMjUwMjVlMGQ5ZjRjNTlhOGZhNzI0NTk4YmE2YWUwNTZlMDY4NA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-11-16T20:15:29Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-11-16T20:15:29Z"}, "message": "cfglayout.c (fixup_fallthru_exit_predecesor): Make void, rename to ....\n\n\t* cfglayout.c (fixup_fallthru_exit_predecesor): Make void, rename\n\tto ....\n\t(fixup_fallthru_exit_predecessor): ... this.\n\tChange callers and prototype.\n\nFrom-SVN: r47098", "tree": {"sha": "2501d5dda3f5590e18e0969fd051c602eba3e9cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2501d5dda3f5590e18e0969fd051c602eba3e9cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0225025e0d9f4c59a8fa724598ba6ae056e0684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0225025e0d9f4c59a8fa724598ba6ae056e0684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0225025e0d9f4c59a8fa724598ba6ae056e0684", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0225025e0d9f4c59a8fa724598ba6ae056e0684/comments", "author": null, "committer": null, "parents": [{"sha": "f6b733ed1f3be3a7a4648bacd62fab0dfcb1f191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6b733ed1f3be3a7a4648bacd62fab0dfcb1f191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6b733ed1f3be3a7a4648bacd62fab0dfcb1f191"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "7d74ad1b1449598b14522799090b5b373b9a502d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0225025e0d9f4c59a8fa724598ba6ae056e0684/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0225025e0d9f4c59a8fa724598ba6ae056e0684/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0225025e0d9f4c59a8fa724598ba6ae056e0684", "patch": "@@ -1,3 +1,10 @@\n+2001-11-16  Andreas Jaeger  <aj@suse.de>\n+\n+\t* cfglayout.c (fixup_fallthru_exit_predecesor): Make void, rename\n+\tto ....\n+\t(fixup_fallthru_exit_predecessor): ... this.\n+\tChange callers and prototype.\n+\n 2001-11-16  Bernd Schmidt  <bernds@redhat.com>\n \n         * config/i386/i386.c (ix86_expand_sse_comi): Generate setcc by\n@@ -83,10 +90,10 @@ Fri Nov 16 06:37:05 2001  Andreas Tobler  <a.tobler@schweiz.ch>\n 2001-11-15  Stan Shebs  <shebs@apple.com>\n \n \t* expr.c (expand_expr, case COMPONENT_REF): Fix variable ref.\n-\t\n+\n 2001-11-16  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n-\t* config/s390/s390.md: Remove ALIGN arg from emit_cmp_and_jump_insns \n+\t* config/s390/s390.md: Remove ALIGN arg from emit_cmp_and_jump_insns\n \tcall.\n \t* config/i386/i386.md: Likewise.\n "}, {"sha": "1907bafc191e8c85c60babbe7e393e2d8d83521a", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0225025e0d9f4c59a8fa724598ba6ae056e0684/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0225025e0d9f4c59a8fa724598ba6ae056e0684/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=d0225025e0d9f4c59a8fa724598ba6ae056e0684", "patch": "@@ -1,5 +1,5 @@\n /* Basic block reordering routines for the GNU compiler.\n-   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -110,7 +110,7 @@ static rtx get_next_bb_note\t\tPARAMS ((rtx));\n static rtx get_prev_bb_note\t\tPARAMS ((rtx));\n \n void verify_insn_chain\t\t\tPARAMS ((void));\n-static basic_block fixup_fallthru_exit_predecesor PARAMS ((void));\n+static void fixup_fallthru_exit_predecessor PARAMS ((void));\n \f\n /* Skip over inter-block insns occurring after BB which are typically\n    associated with BB (e.g., barriers). If there are any such insns,\n@@ -1043,10 +1043,10 @@ verify_insn_chain ()\n     }\n }\n \n-/* The block falling trought to exit must be last in the reordered\n-   chain.  Make it happen so.  */\n-static basic_block\n-fixup_fallthru_exit_predecesor ()\n+/* The block falling through to exit must be the last one in the\n+   reordered chain.  Ensure that this condition is met.  */\n+static void\n+fixup_fallthru_exit_predecessor ()\n {\n   edge e;\n   basic_block bb = NULL;\n@@ -1087,7 +1087,7 @@ cfg_layout_initialize ()\n void\n cfg_layout_finalize ()\n {\n-  fixup_fallthru_exit_predecesor ();\n+  fixup_fallthru_exit_predecessor ();\n   fixup_reorder_chain ();\n #ifdef ENABLE_CHECKING\n   verify_insn_chain ();"}]}