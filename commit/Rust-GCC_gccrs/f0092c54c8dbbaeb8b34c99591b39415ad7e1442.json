{"sha": "f0092c54c8dbbaeb8b34c99591b39415ad7e1442", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAwOTJjNTRjOGRiYmFlYjhiMzRjOTk1OTFiMzk0MTVhZDdlMTQ0Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-16T08:18:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-16T08:18:31Z"}, "message": "Add test cases\n\nFrom-SVN: r127534", "tree": {"sha": "328ec01b0d3cd611a34a84e13298f3e5ed708536", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/328ec01b0d3cd611a34a84e13298f3e5ed708536"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0092c54c8dbbaeb8b34c99591b39415ad7e1442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0092c54c8dbbaeb8b34c99591b39415ad7e1442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0092c54c8dbbaeb8b34c99591b39415ad7e1442", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0092c54c8dbbaeb8b34c99591b39415ad7e1442/comments", "author": null, "committer": null, "parents": [{"sha": "439cafcf602f14564f086fec1bf832a0c0866d7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/439cafcf602f14564f086fec1bf832a0c0866d7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/439cafcf602f14564f086fec1bf832a0c0866d7f"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "4fa61aff805b0f2c39d4363842c8605dc2d92c1c", "filename": "gcc/testsuite/gnat.dg/controlled2.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0092c54c8dbbaeb8b34c99591b39415ad7e1442/gcc%2Ftestsuite%2Fgnat.dg%2Fcontrolled2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0092c54c8dbbaeb8b34c99591b39415ad7e1442/gcc%2Ftestsuite%2Fgnat.dg%2Fcontrolled2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fcontrolled2.adb?ref=f0092c54c8dbbaeb8b34c99591b39415ad7e1442", "patch": "@@ -0,0 +1,10 @@\n+--  { dg-do compile }\n+\n+with controlled1; use controlled1;\n+package body controlled2 is\n+   procedure Test_Suite is\n+   begin\n+      Add_Test\n+        (new Test_Case'(Test_Case1 with Link_Under_Test => 300));\n+   end Test_Suite;\n+end controlled2;"}, {"sha": "fc9f10dcb7419e3723064dc1f6f8d8523cd1e692", "filename": "gcc/testsuite/gnat.dg/itypes.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0092c54c8dbbaeb8b34c99591b39415ad7e1442/gcc%2Ftestsuite%2Fgnat.dg%2Fitypes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0092c54c8dbbaeb8b34c99591b39415ad7e1442/gcc%2Ftestsuite%2Fgnat.dg%2Fitypes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fitypes.adb?ref=f0092c54c8dbbaeb8b34c99591b39415ad7e1442", "patch": "@@ -0,0 +1,22 @@\n+--  { dg-do compile }\n+\n+package body itypes is\n+   Size : constant := 10;\n+   type Arr is array (1 .. size) of Integer;\n+   \n+   type Rec is record\n+      Field1 : Arr := (others => 0);\n+      Field2 : Arr := (others => 0);\n+      Field3 : Arr := (others => 0);\n+      Field4 : Arr := (others => 0);\n+      Field5 : Arr := (others => 0);\n+      Field6 : Arr := (others => 0);\n+      Field7 : Arr := (others => 0);\n+   end record;\n+   \n+   procedure Proc is\n+      Temp1 : Rec;\n+   begin   \n+      null;\n+   end;    \n+end;                 "}, {"sha": "f6137e26ebdc93ba01f537804b46fdda9e1d47d5", "filename": "gcc/testsuite/gnat.dg/itypes.ads", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0092c54c8dbbaeb8b34c99591b39415ad7e1442/gcc%2Ftestsuite%2Fgnat.dg%2Fitypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0092c54c8dbbaeb8b34c99591b39415ad7e1442/gcc%2Ftestsuite%2Fgnat.dg%2Fitypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fitypes.ads?ref=f0092c54c8dbbaeb8b34c99591b39415ad7e1442", "patch": "@@ -0,0 +1,4 @@\n+\n+package itypes is\n+   procedure Proc;\n+end;  "}, {"sha": "576378b0bd25c420ea14a26448707ca51382b726", "filename": "gcc/testsuite/gnat.dg/modify_a_constant.adb", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0092c54c8dbbaeb8b34c99591b39415ad7e1442/gcc%2Ftestsuite%2Fgnat.dg%2Fmodify_a_constant.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0092c54c8dbbaeb8b34c99591b39415ad7e1442/gcc%2Ftestsuite%2Fgnat.dg%2Fmodify_a_constant.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fmodify_a_constant.adb?ref=f0092c54c8dbbaeb8b34c99591b39415ad7e1442", "patch": "@@ -0,0 +1,19 @@\n+--  { dg-do compile }\n+\n+with text_io; use text_io;\n+procedure modify_a_constant is\n+    type Outer;\n+    type Inner (Outer_Ref : access Outer) is limited null record;\n+        \n+    type Outer is limited record\n+        Inner_Field   : Inner (Outer_Ref => Outer'Access);\n+        Integer_Field : Integer;\n+      end record;\n+     \n+    X : constant Outer := (Inner_Field => <>, Integer_Field => 123);\n+     \n+begin\n+   Put_Line (Integer'image (X.Integer_Field));\n+   X.Inner_Field.Outer_Ref.Integer_Field := 0;\n+   Put_Line (Integer'image (X.Integer_Field));\n+end Modify_A_Constant;"}, {"sha": "8675a524f29edaf57ba88b3e4ed5b7b3d7933774", "filename": "gcc/testsuite/gnat.dg/warn2.adb", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0092c54c8dbbaeb8b34c99591b39415ad7e1442/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0092c54c8dbbaeb8b34c99591b39415ad7e1442/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn2.adb?ref=f0092c54c8dbbaeb8b34c99591b39415ad7e1442", "patch": "@@ -0,0 +1,14 @@\n+--  { dg-do compile }\n+\n+with Unchecked_Conversion;\n+procedure warn2 is\n+   type R1 is record X : Integer; end record;\n+   type R2 is record X, Y : Integer; end record;\n+   pragma Warnings\n+     (Off, \"types for unchecked conversion have different sizes\");\n+   function F is new Unchecked_Conversion (R1, R2);\n+   pragma Warnings\n+     (On, \"types for unchecked conversion have different sizes\");\n+begin\n+   null;\n+end warn2;"}]}