{"sha": "6101a276c34b94f692206739d98aa7faf2e7b2ad", "node_id": "C_kwDOANBUbNoAKDYxMDFhMjc2YzM0Yjk0ZjY5MjIwNjczOWQ5OGFhN2ZhZjJlN2IyYWQ", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-05-17T01:39:30Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-05-17T15:43:32Z"}, "message": "Check for equivalence after merging relations.\n\nWhen registering a relation, we need to merge with any existing relation\nbefore checking if it was an equivalence... otherwise it was not being\nhandled properly.\n\n\tgcc/\n\tPR tree-optimization/105458\n\t* value-relation.cc (path_oracle::register_relation): Merge, then check\n\tfor equivalence.\n\n\tgcc/testsuite/\n\t* gcc.dg/pr105458.c: New.", "tree": {"sha": "f975c63b58602ab3f43a3c365cd044b561e5e906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f975c63b58602ab3f43a3c365cd044b561e5e906"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6101a276c34b94f692206739d98aa7faf2e7b2ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6101a276c34b94f692206739d98aa7faf2e7b2ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6101a276c34b94f692206739d98aa7faf2e7b2ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6101a276c34b94f692206739d98aa7faf2e7b2ad/comments", "author": null, "committer": null, "parents": [{"sha": "61a6923e8917b6efcf349515a00a485dfd5b42e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61a6923e8917b6efcf349515a00a485dfd5b42e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61a6923e8917b6efcf349515a00a485dfd5b42e4"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "eb58bf21f32866e37db79bbe82247f9b7050e784", "filename": "gcc/testsuite/gcc.dg/pr105458.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6101a276c34b94f692206739d98aa7faf2e7b2ad/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105458.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6101a276c34b94f692206739d98aa7faf2e7b2ad/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105458.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105458.c?ref=6101a276c34b94f692206739d98aa7faf2e7b2ad", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/105458 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fexpensive-optimizations -fno-tree-dominator-opts \" } */\n+\n+void\n+yj (int j4)\n+{\n+  int t3;\n+\n+  for (t3 = 0; t3 < 6; ++t3)\n+    {\n+      short int v4 = t3;\n+\n+      if (v4 == j4 || v4 > t3)\n+        for (;;)\n+          {\n+          }\n+    }\n+}\n+"}, {"sha": "85d159f5d96f3453f6ce1a8d988b028644d7d5c6", "filename": "gcc/value-relation.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6101a276c34b94f692206739d98aa7faf2e7b2ad/gcc%2Fvalue-relation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6101a276c34b94f692206739d98aa7faf2e7b2ad/gcc%2Fvalue-relation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-relation.cc?ref=6101a276c34b94f692206739d98aa7faf2e7b2ad", "patch": "@@ -1384,16 +1384,16 @@ path_oracle::register_relation (basic_block bb, relation_kind k, tree ssa1,\n       fprintf (dump_file, \" (root: bb%d)\\n\", bb->index);\n     }\n \n+  relation_kind curr = query_relation (bb, ssa1, ssa2);\n+  if (curr != VREL_VARYING)\n+    k = relation_intersect (curr, k);\n+\n   if (k == VREL_EQ)\n     {\n       register_equiv (bb, ssa1, ssa2);\n       return;\n     }\n \n-  relation_kind curr = query_relation (bb, ssa1, ssa2);\n-  if (curr != VREL_VARYING)\n-    k = relation_intersect (curr, k);\n-\n   bitmap_set_bit (m_relations.m_names, SSA_NAME_VERSION (ssa1));\n   bitmap_set_bit (m_relations.m_names, SSA_NAME_VERSION (ssa2));\n   relation_chain *ptr = (relation_chain *) obstack_alloc (&m_chain_obstack,"}]}