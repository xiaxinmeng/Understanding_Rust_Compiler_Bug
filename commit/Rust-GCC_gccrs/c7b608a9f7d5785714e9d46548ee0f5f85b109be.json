{"sha": "c7b608a9f7d5785714e9d46548ee0f5f85b109be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdiNjA4YTlmN2Q1Nzg1NzE0ZTlkNDY1NDhlZTBmNWY4NWIxMDliZQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-02-26T13:22:43Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-02-26T13:22:43Z"}, "message": "re PR libfortran/51119 (MATMUL slow for large matrices)\n\n2017-02-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/51119\n\t* options.c (gfc_post_options): Set default limit for matmul\n\tinlining to 30.\n\t* invoke.texi: Document change.\n\n2017-02-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/51119\n\t* gfortran.dg/inline_matmul_1.f90: Scan optimized dump instead\n\tof original.\n\t* gfortran.dg/inline_matmul_11.f90: Likewise.\n\t* gfortran.dg/inline_matmul_9.f90: Likewise.\n\t* gfortran.dg/matmul_13.f90: New test.\n\t* gfortran.dg/matmul_14.f90: New test.\n\nFrom-SVN: r245745", "tree": {"sha": "9563b838df164709ffbd08a5b4dff1b70a81dc31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9563b838df164709ffbd08a5b4dff1b70a81dc31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7b608a9f7d5785714e9d46548ee0f5f85b109be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b608a9f7d5785714e9d46548ee0f5f85b109be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7b608a9f7d5785714e9d46548ee0f5f85b109be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b608a9f7d5785714e9d46548ee0f5f85b109be/comments", "author": null, "committer": null, "parents": [{"sha": "462a7b568542e2dabd2aa6632976d47a3780deb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/462a7b568542e2dabd2aa6632976d47a3780deb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/462a7b568542e2dabd2aa6632976d47a3780deb1"}], "stats": {"total": 70, "additions": 58, "deletions": 12}, "files": [{"sha": "e3af1c5e9430dd05429203df72e6b466fb0866ba", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c7b608a9f7d5785714e9d46548ee0f5f85b109be", "patch": "@@ -1,3 +1,10 @@\n+2017-02-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/51119\n+\t* options.c (gfc_post_options): Set default limit for matmul\n+\tinlining to 30.\n+\t* invoke.texi: Document change.\n+\n 2017-02-25  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR fortran/79601"}, {"sha": "636432fead8b8645490112cd58ff679f6c1f32b2", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=c7b608a9f7d5785714e9d46548ee0f5f85b109be", "patch": "@@ -1629,9 +1629,8 @@ for matrices with size up to @var{n}. If the matrices involved are not\n square, the size comparison is performed using the geometric mean of\n the dimensions of the argument and result matrices.\n \n-The default value for @var{n} is the value specified for\n-@code{-fblas-matmul-limit} if this option is specified, or unlimitited\n-otherwise.\n+The default value for @var{n} is 30.  The @code{-fblas-matmul-limit}\n+can be used to change this value.\n \n @item -frecursive\n @opindex @code{frecursive}"}, {"sha": "1af76aa81ec440fbc4d045fbc7ec1e2f63f7f0f1", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=c7b608a9f7d5785714e9d46548ee0f5f85b109be", "patch": "@@ -388,10 +388,16 @@ gfc_post_options (const char **pfilename)\n   if (!flag_automatic)\n     flag_max_stack_var_size = 0;\n   \n-  /* If we call BLAS directly, only inline up to the BLAS limit.  */\n+  /* If the user did not specify an inline matmul limit, inline up to the BLAS\n+     limit or up to 30 if no external BLAS is specified.  */\n \n-  if (flag_external_blas && flag_inline_matmul_limit < 0)\n-    flag_inline_matmul_limit = flag_blas_matmul_limit;\n+  if (flag_inline_matmul_limit < 0)\n+    {\n+      if (flag_external_blas)\n+\tflag_inline_matmul_limit = flag_blas_matmul_limit;\n+      else\n+\tflag_inline_matmul_limit = 30;\n+    }\n \n   /* Optimization implies front end optimization, unless the user\n      specified it directly.  */"}, {"sha": "30198a6bfe3f7ba934022929a080164ad0fadd2b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7b608a9f7d5785714e9d46548ee0f5f85b109be", "patch": "@@ -1,3 +1,13 @@\n+2017-02-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/51119\n+\t* gfortran.dg/inline_matmul_1.f90: Scan optimized dump instead\n+\tof original.\n+\t* gfortran.dg/inline_matmul_11.f90: Likewise.\n+\t* gfortran.dg/inline_matmul_9.f90: Likewise.\n+\t* gfortran.dg/matmul_13.f90: New test.\n+\t* gfortran.dg/matmul_14.f90: New test.\n+\n 2017-02-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/79396"}, {"sha": "c3177d72361556fba3ebc104e9fa7164cd4dd8c2", "filename": "gcc/testsuite/gfortran.dg/inline_matmul_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_matmul_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_matmul_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_matmul_1.f90?ref=c7b608a9f7d5785714e9d46548ee0f5f85b109be", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do  run }\n-! { dg-options \"-ffrontend-optimize -fdump-tree-original -Wrealloc-lhs\" }\n+! { dg-options \"-ffrontend-optimize -fdump-tree-optimized -Wrealloc-lhs\" }\n ! PR 37131 - check basic functionality of inlined matmul, making\n ! sure that the library is not called, with and without reallocation.\n \n@@ -149,4 +149,4 @@ program main\n \n end program main\n \n-! { dg-final { scan-tree-dump-times \"_gfortran_matmul\" 0 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"_gfortran_matmul\" 0 \"optimized\" } }"}, {"sha": "016d8d701cba13715fed11092135f7d3ddbef697", "filename": "gcc/testsuite/gfortran.dg/inline_matmul_11.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_matmul_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_matmul_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_matmul_11.f90?ref=c7b608a9f7d5785714e9d46548ee0f5f85b109be", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do  run }\n-! { dg-additional-options \"-ffrontend-optimize -fdump-tree-original\" }\n+! { dg-additional-options \"-ffrontend-optimize -fdump-tree-optimized\" }\n ! PR fortran/66176 - inline conjg for matml.\n program main\n   complex, dimension(3,2) :: a\n@@ -29,4 +29,4 @@ program main\n   c = matmul(conjg(a), b)\n   if (any(conjg(c) /= res2)) call abort\n end program main\n-! { dg-final { scan-tree-dump-times \"_gfortran_matmul\" 0 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"_gfortran_matmul\" 0 \"optimized\" } }"}, {"sha": "901cd96e24fee788477b6df409a8f9efddc6583b", "filename": "gcc/testsuite/gfortran.dg/inline_matmul_9.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_matmul_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_matmul_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_matmul_9.f90?ref=c7b608a9f7d5785714e9d46548ee0f5f85b109be", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do  run }\n-! { dg-options \"-ffrontend-optimize -fdump-tree-original\" }\n+! { dg-options \"-ffrontend-optimize -fdump-tree-optimized\" }\n ! PR 66041 - this used to ICE with an incomplete fix for the PR.\n program main\n   implicit none\n@@ -21,4 +21,4 @@ program main\n   if (any (c2-reshape([248., -749.],shape(c2)) /= 0.)) call abort\n end program main\n \n-! { dg-final { scan-tree-dump-times \"_gfortran_matmul\" 0 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"_gfortran_matmul\" 0 \"optimized\" } }"}, {"sha": "3262d1a8dd3df7cc6df67a692278bef2e2c97be7", "filename": "gcc/testsuite/gfortran.dg/matmul_13.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_13.f90?ref=c7b608a9f7d5785714e9d46548ee0f5f85b109be", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+! { dg-options \"-O3 -fdump-tree-optimized\" }\n+! Check that the default limit of 30 for inlining matmul applies.\n+program main\n+  integer, parameter :: n = 31\n+  real, dimension(n,n) :: a, b, c\n+  call random_number(a)\n+  call random_number(b)\n+  c = matmul(a,b)\n+  print *,sum(c)\n+end program main\n+! { dg-final { scan-tree-dump-times \"_gfortran_matmul_r4\" 1 \"optimized\" } }"}, {"sha": "5c2b3f274ee7d75fb8a932dc1bbadac03fb4a94d", "filename": "gcc/testsuite/gfortran.dg/matmul_14.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b608a9f7d5785714e9d46548ee0f5f85b109be/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_14.f90?ref=c7b608a9f7d5785714e9d46548ee0f5f85b109be", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+! { dg-options \"-O3 -fdump-tree-optimized\" }\n+! Check that the default limit of 30 for inlining matmul applies.\n+program main\n+  integer, parameter :: n = 30\n+  real, dimension(n,n) :: a, b, c\n+  call random_number(a)\n+  call random_number(b)\n+  c = matmul(a,b)\n+  print *,sum(c)\n+end program main\n+! { dg-final { scan-tree-dump-times \"_gfortran_matmul_r4\" 0 \"optimized\" } }"}]}