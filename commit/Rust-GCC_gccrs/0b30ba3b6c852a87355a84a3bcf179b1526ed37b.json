{"sha": "0b30ba3b6c852a87355a84a3bcf179b1526ed37b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIzMGJhM2I2Yzg1MmE4NzM1NWE4NGEzYmNmMTc5YjE1MjZlZDM3Yg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-01-10T04:34:34Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-01-10T04:34:34Z"}, "message": "[multiple changes]\n\n2007-01-09  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/30408\n\t* resolve.c (resolve_code): Use the code->expr character length\n\tdirectly to set length of llen.\n\n2007-01-09  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/30408\n\t* lang.opt: Add Wcharacter_truncation option.\n\t* options.c (gfc_init_options): Initialize\n\tgfc_option.warn_character_truncation to zero.\n\t(gfc_handle_option): Add case for OPT_Wcharacter_truncation.\n\nFrom-SVN: r120632", "tree": {"sha": "993bd0d50b49fdfe47d7e89f40872eaa91bce40c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/993bd0d50b49fdfe47d7e89f40872eaa91bce40c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b30ba3b6c852a87355a84a3bcf179b1526ed37b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b30ba3b6c852a87355a84a3bcf179b1526ed37b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b30ba3b6c852a87355a84a3bcf179b1526ed37b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b30ba3b6c852a87355a84a3bcf179b1526ed37b/comments", "author": null, "committer": null, "parents": [{"sha": "c49a1f9ee87573b2ad7ff903528f53131bb3eaf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c49a1f9ee87573b2ad7ff903528f53131bb3eaf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c49a1f9ee87573b2ad7ff903528f53131bb3eaf4"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "5ea277ed0ea8c0b823e85696a979e6a0a99dd045", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b30ba3b6c852a87355a84a3bcf179b1526ed37b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b30ba3b6c852a87355a84a3bcf179b1526ed37b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0b30ba3b6c852a87355a84a3bcf179b1526ed37b", "patch": "@@ -1,9 +1,22 @@\n+2007-01-09  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/30408\n+\t* resolve.c (resolve_code): Use the code->expr character length\n+\tdirectly to set length of llen.\n+\n+2007-01-09  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/30408\n+\t* lang.opt: Add Wcharacter_truncation option.\n+\t* options.c (gfc_init_options): Initialize\n+\tgfc_option.warn_character_truncation to zero.\n+\t(gfc_handle_option): Add case for OPT_Wcharacter_truncation.\n+\n 2007-01-08  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* interface.c, intrinsic.c, gfortranspec.c, io.c, f95-lang.c,\n \tiresolve.c, match.c:  Update Copyright years.  Whitespace.\n \n-\n 2007-01-08  Richard Guenther  <rguenther@suse.de>\n \n \t* trans-io.c (transfer_array_desc): Use build_int_cst instead"}, {"sha": "b7444245fdf1a4ae64fd3bfda10dba63a01cc929", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b30ba3b6c852a87355a84a3bcf179b1526ed37b/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b30ba3b6c852a87355a84a3bcf179b1526ed37b/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=0b30ba3b6c852a87355a84a3bcf179b1526ed37b", "patch": "@@ -45,6 +45,10 @@ Wampersand\n Fortran\n Warn about missing ampersand in continued character constants\n \n+Wcharacter-truncation\n+Fortran\n+Warn about truncated character expressions\n+\n Wconversion\n Fortran\n Warn about implicit conversion"}, {"sha": "e26ff369b7b0e2771b8e517ea21115a14bf13134", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b30ba3b6c852a87355a84a3bcf179b1526ed37b/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b30ba3b6c852a87355a84a3bcf179b1526ed37b/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=0b30ba3b6c852a87355a84a3bcf179b1526ed37b", "patch": "@@ -59,6 +59,7 @@ gfc_init_options (unsigned int argc ATTRIBUTE_UNUSED,\n \n   gfc_option.warn_aliasing = 0;\n   gfc_option.warn_ampersand = 0;\n+  gfc_option.warn_character_truncation = 0;\n   gfc_option.warn_conversion = 0;\n   gfc_option.warn_implicit_interface = 0;\n   gfc_option.warn_line_truncation = 0;\n@@ -410,6 +411,10 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_option.warn_ampersand = value;\n       break;\n \n+    case OPT_Wcharacter_truncation:\n+      gfc_option.warn_character_truncation = value;\n+      break;\n+\n     case OPT_Wconversion:\n       gfc_option.warn_conversion = value;\n       break;"}, {"sha": "05b4dc145c3090b5f460ade0305fabfc3d8dd4b3", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b30ba3b6c852a87355a84a3bcf179b1526ed37b/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b30ba3b6c852a87355a84a3bcf179b1526ed37b/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=0b30ba3b6c852a87355a84a3bcf179b1526ed37b", "patch": "@@ -5088,10 +5088,11 @@ resolve_code (gfc_code * code, gfc_namespace * ns)\n \t\t&& gfc_option.warn_character_truncation)\n \t    {\n \t      int llen = 0, rlen = 0;\n-\t      gfc_symbol *sym;\n-\t      sym = code->expr->symtree->n.sym;\n-\t      if (sym->ts.cl->length->expr_type == EXPR_CONSTANT)\n-\t\tllen = mpz_get_si (sym->ts.cl->length->value.integer);\n+\n+\t      if (code->expr->ts.cl != NULL\n+\t\t    && code->expr->ts.cl->length != NULL\n+\t\t    && code->expr->ts.cl->length->expr_type == EXPR_CONSTANT)\n+\t\tllen = mpz_get_si (code->expr->ts.cl->length->value.integer);\n \n \t      if (code->expr2->expr_type == EXPR_CONSTANT)\n \t\trlen = code->expr2->value.character.length;"}]}