{"sha": "1fc3d466bf4799a802bec8664dd1cb3a37216257", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZjM2Q0NjZiZjQ3OTlhODAyYmVjODY2NGRkMWNiM2EzNzIxNjI1Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-27T13:50:11Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-27T13:50:11Z"}, "message": "(get_condition): Can reverse comparison if -ffast-math.\n\nFrom-SVN: r6337", "tree": {"sha": "5f1777b05e2182d51b1d4db3fee4ff6a5045161a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f1777b05e2182d51b1d4db3fee4ff6a5045161a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fc3d466bf4799a802bec8664dd1cb3a37216257", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fc3d466bf4799a802bec8664dd1cb3a37216257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fc3d466bf4799a802bec8664dd1cb3a37216257", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fc3d466bf4799a802bec8664dd1cb3a37216257/comments", "author": null, "committer": null, "parents": [{"sha": "9b2e59adde6d2e94cc01ca47d73d5eb2d4c829ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b2e59adde6d2e94cc01ca47d73d5eb2d4c829ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b2e59adde6d2e94cc01ca47d73d5eb2d4c829ab"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "c4b0872ddc2963a7580b63fe7793d001b210c1f3", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fc3d466bf4799a802bec8664dd1cb3a37216257/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fc3d466bf4799a802bec8664dd1cb3a37216257/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=1fc3d466bf4799a802bec8664dd1cb3a37216257", "patch": "@@ -6521,6 +6521,7 @@ get_condition (jump, earliest)\n      EQ or NE, return zero.  */\n   if (TARGET_FLOAT_FORMAT == IEEE_FLOAT_FORMAT\n       && did_reverse_condition && code != NE && code != EQ\n+      && ! flag_fast_math\n       && GET_MODE_CLASS (GET_MODE (op0)) == MODE_FLOAT)\n     return 0;\n "}]}