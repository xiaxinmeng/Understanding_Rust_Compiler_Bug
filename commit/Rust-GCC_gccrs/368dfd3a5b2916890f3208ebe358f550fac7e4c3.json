{"sha": "368dfd3a5b2916890f3208ebe358f550fac7e4c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY4ZGZkM2E1YjI5MTY4OTBmMzIwOGViZTM1OGY1NTBmYWM3ZTRjMw==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-10-27T18:04:25Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-10-27T18:04:25Z"}, "message": "(process_command): Handle -Wl, and -Xlinker similar to -l,\n\ni.e., preserve their order with respect to linker input files.\n\nFrom-SVN: r8349", "tree": {"sha": "243e328ece284f70715968ddb87dc154f79299b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/243e328ece284f70715968ddb87dc154f79299b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/368dfd3a5b2916890f3208ebe358f550fac7e4c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/368dfd3a5b2916890f3208ebe358f550fac7e4c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/368dfd3a5b2916890f3208ebe358f550fac7e4c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/368dfd3a5b2916890f3208ebe358f550fac7e4c3/comments", "author": null, "committer": null, "parents": [{"sha": "10bcde0da9e8682baf0bb75430b101a2a38ffa07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10bcde0da9e8682baf0bb75430b101a2a38ffa07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10bcde0da9e8682baf0bb75430b101a2a38ffa07"}], "stats": {"total": 94, "additions": 33, "deletions": 61}, "files": [{"sha": "6cda9fc2c7ce18ef4e051beafa7ad4c7147cb3aa", "filename": "gcc/gcc.c", "status": "modified", "additions": 33, "deletions": 61, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/368dfd3a5b2916890f3208ebe358f550fac7e4c3/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/368dfd3a5b2916890f3208ebe358f550fac7e4c3/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=368dfd3a5b2916890f3208ebe358f550fac7e4c3", "patch": "@@ -757,7 +757,7 @@ static char *link_command_spec = \"\\\n #endif\n \n /* A vector of options to give to the linker.\n-   These options are accumulated by -Xlinker and -Wl,\n+   These options are accumulated by %x,\n    and substituted into the linker command with %X.  */\n static int n_linker_options;\n static char **linker_options;\n@@ -2519,54 +2519,6 @@ process_command (argc, argv)\n \tprint_multi_lib = 1;\n       else if (! strcmp (argv[i], \"-print-multi-directory\"))\n \tprint_multi_directory = 1;\n-      else if (! strcmp (argv[i], \"-Xlinker\"))\n-\t{\n-\t  /* Pass the argument of this option to the linker when we link.  */\n-\n-\t  if (i + 1 == argc)\n-\t    fatal (\"argument to `-Xlinker' is missing\");\n-\n-\t  n_linker_options++;\n-\t  if (!linker_options)\n-\t    linker_options\n-\t      = (char **) xmalloc (n_linker_options * sizeof (char **));\n-\t  else\n-\t    linker_options\n-\t      = (char **) xrealloc (linker_options,\n-\t\t\t\t    n_linker_options * sizeof (char **));\n-\n-\t  linker_options[n_linker_options - 1] = argv[++i];\n-\t}\n-      else if (! strncmp (argv[i], \"-Wl,\", 4))\n-\t{\n-\t  int prev, j;\n-\t  /* Pass the rest of this option to the linker when we link.  */\n-\n-\t  n_linker_options++;\n-\t  if (!linker_options)\n-\t    linker_options\n-\t      = (char **) xmalloc (n_linker_options * sizeof (char **));\n-\t  else\n-\t    linker_options\n-\t      = (char **) xrealloc (linker_options,\n-\t\t\t\t    n_linker_options * sizeof (char **));\n-\n-\t  /* Split the argument at commas.  */\n-\t  prev = 4;\n-\t  for (j = 4; argv[i][j]; j++)\n-\t    if (argv[i][j] == ',')\n-\t      {\n-\t\tlinker_options[n_linker_options - 1]\n-\t\t  = save_string (argv[i] + prev, j - prev);\n-\t\tn_linker_options++;\n-\t\tlinker_options\n-\t\t  = (char **) xrealloc (linker_options,\n-\t\t\t\t\tn_linker_options * sizeof (char **));\n-\t\tprev = j + 1;\n-\t      }\n-\t  /* Record the part after the last comma.  */\n-\t  linker_options[n_linker_options - 1] = argv[i] + prev;\n-\t}\n       else if (! strncmp (argv[i], \"-Wa,\", 4))\n \t{\n \t  int prev, j;\n@@ -2630,7 +2582,19 @@ process_command (argc, argv)\n       else if (argv[i][0] == '+' && argv[i][1] == 'e')\n \t/* The +e options to the C++ front-end.  */\n \tn_switches++;\n-      else if (argv[i][0] == '-' && argv[i][1] != 0 && argv[i][1] != 'l')\n+      else if (strncmp (argv[i], \"-Wl,\", 4) == 0)\n+\tn_infiles++;\n+      else if (strcmp (argv[i], \"-Xlinker\") == 0)\n+\t{\n+\t  if (i + 1 == argc)\n+\t    fatal (\"argument to `-Xlinker' is missing\");\n+\n+\t  n_infiles++;\n+\t  i++;\n+\t}\n+      else if (strncmp (argv[i], \"-l\", 2) == 0)\n+\tn_infiles++;\n+      else if (argv[i][0] == '-' && argv[i][1] != 0)\n \t{\n \t  register char *p = &argv[i][1];\n \t  register int c = *p;\n@@ -2801,11 +2765,7 @@ process_command (argc, argv)\n   for (i = 1; i < argc; i++)\n     {\n       /* Just skip the switches that were handled by the preceding loop.  */\n-      if (!strcmp (argv[i], \"-Xlinker\"))\n-\ti++;\n-      else if (! strncmp (argv[i], \"-Wl,\", 4))\n-\t;\n-      else if (! strncmp (argv[i], \"-Wa,\", 4))\n+      if (! strncmp (argv[i], \"-Wa,\", 4))\n \t;\n       else if (! strncmp (argv[i], \"-Wp,\", 4))\n \t;\n@@ -2832,7 +2792,22 @@ process_command (argc, argv)\n \t  switches[n_switches].valid = 0;\n \t  n_switches++;\n \t}\n-      else if (argv[i][0] == '-' && argv[i][1] != 0 && argv[i][1] != 'l')\n+      else if (strncmp (argv[i], \"-Wl,\", 4) == 0)\n+\t{\n+\t  infiles[n_infiles].language = spec_lang;\n+\t  infiles[n_infiles++].name = argv[i] + 4;\n+\t}\n+      else if (strcmp (argv[i], \"-Xlinker\") == 0)\n+\t{\n+\t  infiles[n_infiles].language = spec_lang;\n+\t  infiles[n_infiles++].name = argv[++i];\n+\t}\n+      else if (strncmp (argv[i], \"-l\", 2) == 0)\n+\t{\n+\t  infiles[n_infiles].language = spec_lang;\n+\t  infiles[n_infiles++].name = argv[i];\n+\t}\n+      else if (argv[i][0] == '-' && argv[i][1] != 0)\n \t{\n \t  register char *p = &argv[i][1];\n \t  register int c = *p;\n@@ -2905,9 +2880,7 @@ process_command (argc, argv)\n \t}\n       else\n \t{\n-\t  if ((argv[i][0] != '-' || argv[i][1] != 'l')\n-\t      && strcmp (argv[i], \"-\")\n-\t      && access (argv[i], R_OK) < 0)\n+\t  if (strcmp (argv[i], \"-\") != 0 && access (argv[i], R_OK) < 0)\n \t    {\n \t      perror_with_name (argv[i]);\n \t      error_count++;\n@@ -3427,8 +3400,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t    }\n \t    break;\n \n-\t  /* Dump out the options accumulated previously using %x,\n-\t     -Xlinker and -Wl,.  */\n+\t  /* Dump out the options accumulated previously using %x.  */\n \t  case 'X':\n \t    for (i = 0; i < n_linker_options; i++)\n \t      {"}]}