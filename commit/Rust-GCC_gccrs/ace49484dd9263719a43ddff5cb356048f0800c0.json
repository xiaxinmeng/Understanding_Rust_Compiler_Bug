{"sha": "ace49484dd9263719a43ddff5cb356048f0800c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNlNDk0ODRkZDkyNjM3MTlhNDNkZGZmNWNiMzU2MDQ4ZjA4MDBjMA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-05-30T14:02:48Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-05-30T14:02:48Z"}, "message": "vax.h (ASM_GENERATE_INTERNAL_LABEL): Fix format specifier warnings.\n\n\t* vax.h (ASM_GENERATE_INTERNAL_LABEL): Fix format specifier\n\twarnings.\n\t(PRINT_OPERAND): Likewise.\n\nFrom-SVN: r67243", "tree": {"sha": "21e1cfd4bf0ca2471c0327ff430bf5e27cb44653", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21e1cfd4bf0ca2471c0327ff430bf5e27cb44653"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ace49484dd9263719a43ddff5cb356048f0800c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace49484dd9263719a43ddff5cb356048f0800c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace49484dd9263719a43ddff5cb356048f0800c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace49484dd9263719a43ddff5cb356048f0800c0/comments", "author": null, "committer": null, "parents": [{"sha": "3bd4f460899946ebee93cc35e1ddd6ca7d2cc143", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bd4f460899946ebee93cc35e1ddd6ca7d2cc143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bd4f460899946ebee93cc35e1ddd6ca7d2cc143"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "336d19d037def61f197b345e411cc2baa24f0e6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace49484dd9263719a43ddff5cb356048f0800c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace49484dd9263719a43ddff5cb356048f0800c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ace49484dd9263719a43ddff5cb356048f0800c0", "patch": "@@ -1,3 +1,9 @@\n+2003-05-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* vax.h (ASM_GENERATE_INTERNAL_LABEL): Fix format specifier\n+\twarnings.\n+\t(PRINT_OPERAND): Likewise.\n+\n 2003-05-30  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* config/mips/mips.h (SUBTARGET_ASM_DEBUGGING_SPEC): Move"}, {"sha": "731a8bdc05b6fc3b61b4ef664ff56d0b9635a3d5", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace49484dd9263719a43ddff5cb356048f0800c0/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace49484dd9263719a43ddff5cb356048f0800c0/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=ace49484dd9263719a43ddff5cb356048f0800c0", "patch": "@@ -1019,7 +1019,7 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n    This is suitable for output with `assemble_name'.  */\n \n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n-  sprintf (LABEL, \"*%s%d\", PREFIX, NUM)\n+  sprintf (LABEL, \"*%s%ld\", PREFIX, (long)(NUM))\n \n /* This is how to output an insn to push a register on the stack.\n    It need not be very fast code.  */\n@@ -1138,20 +1138,20 @@ VAX operand formatting codes:\n   else if (CODE == 'D' && GET_CODE (X) == CONST_INT && INTVAL (X) < 0)\t\\\n     fprintf (FILE, \"$0xffffffff%08x\", INTVAL (X));\t\t\t\\\n   else if (CODE == 'P' && GET_CODE (X) == CONST_INT)\t\t\t\\\n-    fprintf (FILE, \"$%d\", INTVAL (X) + 1);\t\t\t\t\\\n+    fprintf (FILE, \"$\" HOST_WIDE_INT_PRINT_DEC, INTVAL (X) + 1);\t\\\n   else if (CODE == 'N' && GET_CODE (X) == CONST_INT)\t\t\t\\\n-    fprintf (FILE, \"$%d\", ~ INTVAL (X));\t\t\t\t\\\n+    fprintf (FILE, \"$\" HOST_WIDE_INT_PRINT_DEC, ~ INTVAL (X));\t\t\\\n   /* rotl instruction cannot deal with negative arguments.  */\t\t\\\n   else if (CODE == 'R' && GET_CODE (X) == CONST_INT)\t\t\t\\\n-    fprintf (FILE, \"$%d\", 32 - INTVAL (X));\t\t\t\t\\\n+    fprintf (FILE, \"$\" HOST_WIDE_INT_PRINT_DEC, 32 - INTVAL (X));\t\\\n   else if (CODE == 'H' && GET_CODE (X) == CONST_INT)\t\t\t\\\n-    fprintf (FILE, \"$%d\", 0xffff & ~ INTVAL (X));\t\t\t\\\n+    fprintf (FILE, \"$%d\", (int) (0xffff & ~ INTVAL (X)));\t\t\\\n   else if (CODE == 'h' && GET_CODE (X) == CONST_INT)\t\t\t\\\n     fprintf (FILE, \"$%d\", (short) - INTVAL (x));\t\t\t\\\n   else if (CODE == 'B' && GET_CODE (X) == CONST_INT)\t\t\t\\\n-    fprintf (FILE, \"$%d\", 0xff & ~ INTVAL (X));\t\t\t\t\\\n+    fprintf (FILE, \"$%d\", (int) (0xff & ~ INTVAL (X)));\t\t\t\\\n   else if (CODE == 'b' && GET_CODE (X) == CONST_INT)\t\t\t\\\n-    fprintf (FILE, \"$%d\", 0xff & - INTVAL (X));\t\t\t\t\\\n+    fprintf (FILE, \"$%d\", (int) (0xff & - INTVAL (X)));\t\t\t\\\n   else if (CODE == 'M' && GET_CODE (X) == CONST_INT)\t\t\t\\\n     fprintf (FILE, \"$%d\", ~((1 << INTVAL (x)) - 1));\t\t\t\\\n   else if (GET_CODE (X) == REG)\t\t\t\t\t\t\\"}]}