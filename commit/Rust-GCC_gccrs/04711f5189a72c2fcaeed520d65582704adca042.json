{"sha": "04711f5189a72c2fcaeed520d65582704adca042", "node_id": "C_kwDOANBUbNoAKDA0NzExZjUxODlhNzJjMmZjYWVlZDUyMGQ2NTU4MjcwNGFkY2EwNDI", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-11-23T02:10:31Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-11-23T02:10:31Z"}, "message": "Revert \"configure: Implement --enable-host-pie\"\n\nThis reverts commit 251c72a68af3a8b0638705b73ef120ffdf0053eb.", "tree": {"sha": "f0eb61aee9cb51bf6ff14bfef4429b1f77e99d26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0eb61aee9cb51bf6ff14bfef4429b1f77e99d26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04711f5189a72c2fcaeed520d65582704adca042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04711f5189a72c2fcaeed520d65582704adca042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04711f5189a72c2fcaeed520d65582704adca042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04711f5189a72c2fcaeed520d65582704adca042/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30f399ee9318bcb44e3e2debde086303157a347d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f399ee9318bcb44e3e2debde086303157a347d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30f399ee9318bcb44e3e2debde086303157a347d"}], "stats": {"total": 765, "additions": 216, "deletions": 549}, "files": [{"sha": "02e63c57177ed6e9b0f3546a43a57dbf7474c0c0", "filename": "Makefile.def", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -51,7 +51,7 @@ host_modules= { module= gcc; bootstrap=true;\n host_modules= { module= gmp; lib_path=.libs; bootstrap=true;\n \t\t// Work around in-tree gmp configure bug with missing flex.\n \t\textra_configure_flags='--disable-shared LEX=\"touch lex.yy.c\"';\n-\t\textra_make_flags='AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"';\n+\t\textra_make_flags='AM_CFLAGS=\"-DNO_ASM\"';\n \t\tno_install= true;\n \t\t// none-*-* disables asm optimizations, bootstrap-testing\n \t\t// the compiler more thoroughly.\n@@ -61,15 +61,14 @@ host_modules= { module= gmp; lib_path=.libs; bootstrap=true;\n \t        target=\"none-${host_vendor}-${host_os}\"; };\n host_modules= { module= mpfr; lib_path=src/.libs; bootstrap=true;\n \t\textra_configure_flags='--disable-shared @extra_mpfr_configure_flags@';\n-\t\textra_make_flags='AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"';\n+\t\textra_make_flags='AM_CFLAGS=\"-DNO_ASM\"';\n \t\tno_install= true; };\n host_modules= { module= mpc; lib_path=src/.libs; bootstrap=true;\n \t\textra_configure_flags='--disable-shared @extra_mpc_gmp_configure_flags@ @extra_mpc_mpfr_configure_flags@ --disable-maintainer-mode';\n-\t\textra_make_flags='AM_CFLAGS=\"$(PICFLAG)\"';\n \t\tno_install= true; };\n host_modules= { module= isl; lib_path=.libs; bootstrap=true;\n \t\textra_configure_flags='--disable-shared @extra_isl_gmp_configure_flags@';\n-\t\textra_make_flags='V=1 AM_CFLAGS=\"$(PICFLAG)\"';\n+\t\textra_make_flags='V=1';\n \t\tno_install= true; };\n host_modules= { module= gold; bootstrap=true; };\n host_modules= { module= gprof; };"}, {"sha": "6ffa9660c2572d5d86374b8aeef58e0d66010897", "filename": "Makefile.in", "status": "modified", "additions": 136, "deletions": 137, "changes": 273, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -428,7 +428,6 @@ READELF = @READELF@\n STRIP = @STRIP@\n WINDRES = @WINDRES@\n WINDMC = @WINDMC@\n-PICFLAG = @PICFLAG@\n \n GDC = @GDC@\n GNATBIND = @GNATBIND@\n@@ -13425,7 +13424,7 @@ all-gmp: configure-gmp\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/gmp && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\t$(TARGET-gmp))\n @endif gmp\n \n@@ -13456,7 +13455,7 @@ all-stage1-gmp: configure-stage1-gmp\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n \t\t$(EXTRA_HOST_FLAGS)  \\\n-\t\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\"  \\\n \t\t$(TARGET-stage1-gmp)\n \n@@ -13471,7 +13470,7 @@ clean-stage1-gmp:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif gmp-bootstrap\n \n \n@@ -13500,7 +13499,7 @@ all-stage2-gmp: configure-stage2-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGE2_TFLAGS)\"  \\\n \t\t$(TARGET-stage2-gmp)\n \n@@ -13514,7 +13513,7 @@ clean-stage2-gmp:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif gmp-bootstrap\n \n \n@@ -13543,7 +13542,7 @@ all-stage3-gmp: configure-stage3-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGE3_TFLAGS)\"  \\\n \t\t$(TARGET-stage3-gmp)\n \n@@ -13557,7 +13556,7 @@ clean-stage3-gmp:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif gmp-bootstrap\n \n \n@@ -13586,7 +13585,7 @@ all-stage4-gmp: configure-stage4-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGE4_TFLAGS)\"  \\\n \t\t$(TARGET-stage4-gmp)\n \n@@ -13600,7 +13599,7 @@ clean-stage4-gmp:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif gmp-bootstrap\n \n \n@@ -13629,7 +13628,7 @@ all-stageprofile-gmp: configure-stageprofile-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageprofile-gmp)\n \n@@ -13643,7 +13642,7 @@ clean-stageprofile-gmp:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif gmp-bootstrap\n \n \n@@ -13672,7 +13671,7 @@ all-stagetrain-gmp: configure-stagetrain-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"  \\\n \t\t$(TARGET-stagetrain-gmp)\n \n@@ -13686,7 +13685,7 @@ clean-stagetrain-gmp:\n \t  $(MAKE) stagetrain-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif gmp-bootstrap\n \n \n@@ -13715,7 +13714,7 @@ all-stagefeedback-gmp: configure-stagefeedback-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"  \\\n \t\t$(TARGET-stagefeedback-gmp)\n \n@@ -13729,7 +13728,7 @@ clean-stagefeedback-gmp:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif gmp-bootstrap\n \n \n@@ -13758,7 +13757,7 @@ all-stageautoprofile-gmp: configure-stageautoprofile-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageautoprofile-gmp)\n \n@@ -13772,7 +13771,7 @@ clean-stageautoprofile-gmp:\n \t  $(MAKE) stageautoprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif gmp-bootstrap\n \n \n@@ -13801,7 +13800,7 @@ all-stageautofeedback-gmp: configure-stageautofeedback-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\" PERF_DATA=perf.data \\\n \t\t$(TARGET-stageautofeedback-gmp)\n \n@@ -13815,7 +13814,7 @@ clean-stageautofeedback-gmp:\n \t  $(MAKE) stageautofeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif gmp-bootstrap\n \n \n@@ -13833,7 +13832,7 @@ check-gmp:\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n \t(cd $(HOST_SUBDIR)/gmp && \\\n-\t  $(MAKE) $(FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" $(EXTRA_BOOTSTRAP_FLAGS) check)\n+\t  $(MAKE) $(FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" $(EXTRA_BOOTSTRAP_FLAGS) check)\n \n @endif gmp\n \n@@ -13868,7 +13867,7 @@ info-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing info in gmp\"; \\\n@@ -13893,7 +13892,7 @@ dvi-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing dvi in gmp\"; \\\n@@ -13918,7 +13917,7 @@ pdf-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing pdf in gmp\"; \\\n@@ -13943,7 +13942,7 @@ html-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing html in gmp\"; \\\n@@ -13968,7 +13967,7 @@ TAGS-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing TAGS in gmp\"; \\\n@@ -13994,7 +13993,7 @@ install-info-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-info in gmp\"; \\\n@@ -14020,7 +14019,7 @@ install-dvi-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-dvi in gmp\"; \\\n@@ -14046,7 +14045,7 @@ install-pdf-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-pdf in gmp\"; \\\n@@ -14072,7 +14071,7 @@ install-html-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-html in gmp\"; \\\n@@ -14097,7 +14096,7 @@ installcheck-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing installcheck in gmp\"; \\\n@@ -14121,7 +14120,7 @@ mostlyclean-gmp:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing mostlyclean in gmp\"; \\\n@@ -14145,7 +14144,7 @@ clean-gmp:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing clean in gmp\"; \\\n@@ -14169,7 +14168,7 @@ distclean-gmp:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing distclean in gmp\"; \\\n@@ -14193,7 +14192,7 @@ maintainer-clean-gmp:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing maintainer-clean in gmp\"; \\\n@@ -14562,7 +14561,7 @@ all-mpfr: configure-mpfr\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/mpfr && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\t$(TARGET-mpfr))\n @endif mpfr\n \n@@ -14593,7 +14592,7 @@ all-stage1-mpfr: configure-stage1-mpfr\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n \t\t$(EXTRA_HOST_FLAGS)  \\\n-\t\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\"  \\\n \t\t$(TARGET-stage1-mpfr)\n \n@@ -14608,7 +14607,7 @@ clean-stage1-mpfr:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14637,7 +14636,7 @@ all-stage2-mpfr: configure-stage2-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGE2_TFLAGS)\"  \\\n \t\t$(TARGET-stage2-mpfr)\n \n@@ -14651,7 +14650,7 @@ clean-stage2-mpfr:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14680,7 +14679,7 @@ all-stage3-mpfr: configure-stage3-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGE3_TFLAGS)\"  \\\n \t\t$(TARGET-stage3-mpfr)\n \n@@ -14694,7 +14693,7 @@ clean-stage3-mpfr:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14723,7 +14722,7 @@ all-stage4-mpfr: configure-stage4-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGE4_TFLAGS)\"  \\\n \t\t$(TARGET-stage4-mpfr)\n \n@@ -14737,7 +14736,7 @@ clean-stage4-mpfr:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14766,7 +14765,7 @@ all-stageprofile-mpfr: configure-stageprofile-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageprofile-mpfr)\n \n@@ -14780,7 +14779,7 @@ clean-stageprofile-mpfr:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14809,7 +14808,7 @@ all-stagetrain-mpfr: configure-stagetrain-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"  \\\n \t\t$(TARGET-stagetrain-mpfr)\n \n@@ -14823,7 +14822,7 @@ clean-stagetrain-mpfr:\n \t  $(MAKE) stagetrain-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14852,7 +14851,7 @@ all-stagefeedback-mpfr: configure-stagefeedback-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"  \\\n \t\t$(TARGET-stagefeedback-mpfr)\n \n@@ -14866,7 +14865,7 @@ clean-stagefeedback-mpfr:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14895,7 +14894,7 @@ all-stageautoprofile-mpfr: configure-stageautoprofile-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageautoprofile-mpfr)\n \n@@ -14909,7 +14908,7 @@ clean-stageautoprofile-mpfr:\n \t  $(MAKE) stageautoprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14938,7 +14937,7 @@ all-stageautofeedback-mpfr: configure-stageautofeedback-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n \t\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\" PERF_DATA=perf.data \\\n \t\t$(TARGET-stageautofeedback-mpfr)\n \n@@ -14952,7 +14951,7 @@ clean-stageautofeedback-mpfr:\n \t  $(MAKE) stageautofeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14970,7 +14969,7 @@ check-mpfr:\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n \t(cd $(HOST_SUBDIR)/mpfr && \\\n-\t  $(MAKE) $(FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" $(EXTRA_BOOTSTRAP_FLAGS) check)\n+\t  $(MAKE) $(FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" $(EXTRA_BOOTSTRAP_FLAGS) check)\n \n @endif mpfr\n \n@@ -15005,7 +15004,7 @@ info-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing info in mpfr\"; \\\n@@ -15030,7 +15029,7 @@ dvi-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing dvi in mpfr\"; \\\n@@ -15055,7 +15054,7 @@ pdf-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing pdf in mpfr\"; \\\n@@ -15080,7 +15079,7 @@ html-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing html in mpfr\"; \\\n@@ -15105,7 +15104,7 @@ TAGS-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing TAGS in mpfr\"; \\\n@@ -15131,7 +15130,7 @@ install-info-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-info in mpfr\"; \\\n@@ -15157,7 +15156,7 @@ install-dvi-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-dvi in mpfr\"; \\\n@@ -15183,7 +15182,7 @@ install-pdf-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-pdf in mpfr\"; \\\n@@ -15209,7 +15208,7 @@ install-html-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-html in mpfr\"; \\\n@@ -15234,7 +15233,7 @@ installcheck-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing installcheck in mpfr\"; \\\n@@ -15258,7 +15257,7 @@ mostlyclean-mpfr:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing mostlyclean in mpfr\"; \\\n@@ -15282,7 +15281,7 @@ clean-mpfr:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing clean in mpfr\"; \\\n@@ -15306,7 +15305,7 @@ distclean-mpfr:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing distclean in mpfr\"; \\\n@@ -15330,7 +15329,7 @@ maintainer-clean-mpfr:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing maintainer-clean in mpfr\"; \\\n@@ -15699,7 +15698,7 @@ all-mpc: configure-mpc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/mpc && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-mpc))\n @endif mpc\n \n@@ -15730,7 +15729,7 @@ all-stage1-mpc: configure-stage1-mpc\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n \t\t$(EXTRA_HOST_FLAGS)  \\\n-\t\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\"  \\\n \t\t$(TARGET-stage1-mpc)\n \n@@ -15745,7 +15744,7 @@ clean-stage1-mpc:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -15774,7 +15773,7 @@ all-stage2-mpc: configure-stage2-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE2_TFLAGS)\"  \\\n \t\t$(TARGET-stage2-mpc)\n \n@@ -15788,7 +15787,7 @@ clean-stage2-mpc:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -15817,7 +15816,7 @@ all-stage3-mpc: configure-stage3-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE3_TFLAGS)\"  \\\n \t\t$(TARGET-stage3-mpc)\n \n@@ -15831,7 +15830,7 @@ clean-stage3-mpc:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -15860,7 +15859,7 @@ all-stage4-mpc: configure-stage4-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE4_TFLAGS)\"  \\\n \t\t$(TARGET-stage4-mpc)\n \n@@ -15874,7 +15873,7 @@ clean-stage4-mpc:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -15903,7 +15902,7 @@ all-stageprofile-mpc: configure-stageprofile-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageprofile-mpc)\n \n@@ -15917,7 +15916,7 @@ clean-stageprofile-mpc:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -15946,7 +15945,7 @@ all-stagetrain-mpc: configure-stagetrain-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"  \\\n \t\t$(TARGET-stagetrain-mpc)\n \n@@ -15960,7 +15959,7 @@ clean-stagetrain-mpc:\n \t  $(MAKE) stagetrain-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -15989,7 +15988,7 @@ all-stagefeedback-mpc: configure-stagefeedback-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"  \\\n \t\t$(TARGET-stagefeedback-mpc)\n \n@@ -16003,7 +16002,7 @@ clean-stagefeedback-mpc:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -16032,7 +16031,7 @@ all-stageautoprofile-mpc: configure-stageautoprofile-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageautoprofile-mpc)\n \n@@ -16046,7 +16045,7 @@ clean-stageautoprofile-mpc:\n \t  $(MAKE) stageautoprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -16075,7 +16074,7 @@ all-stageautofeedback-mpc: configure-stageautofeedback-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\" PERF_DATA=perf.data \\\n \t\t$(TARGET-stageautofeedback-mpc)\n \n@@ -16089,7 +16088,7 @@ clean-stageautofeedback-mpc:\n \t  $(MAKE) stageautofeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -16107,7 +16106,7 @@ check-mpc:\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n \t(cd $(HOST_SUBDIR)/mpc && \\\n-\t  $(MAKE) $(FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" $(EXTRA_BOOTSTRAP_FLAGS) check)\n+\t  $(MAKE) $(FLAGS_TO_PASS)  $(EXTRA_BOOTSTRAP_FLAGS) check)\n \n @endif mpc\n \n@@ -16142,7 +16141,7 @@ info-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing info in mpc\"; \\\n@@ -16167,7 +16166,7 @@ dvi-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing dvi in mpc\"; \\\n@@ -16192,7 +16191,7 @@ pdf-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing pdf in mpc\"; \\\n@@ -16217,7 +16216,7 @@ html-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing html in mpc\"; \\\n@@ -16242,7 +16241,7 @@ TAGS-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing TAGS in mpc\"; \\\n@@ -16268,7 +16267,7 @@ install-info-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-info in mpc\"; \\\n@@ -16294,7 +16293,7 @@ install-dvi-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-dvi in mpc\"; \\\n@@ -16320,7 +16319,7 @@ install-pdf-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-pdf in mpc\"; \\\n@@ -16346,7 +16345,7 @@ install-html-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-html in mpc\"; \\\n@@ -16371,7 +16370,7 @@ installcheck-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing installcheck in mpc\"; \\\n@@ -16395,7 +16394,7 @@ mostlyclean-mpc:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing mostlyclean in mpc\"; \\\n@@ -16419,7 +16418,7 @@ clean-mpc:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing clean in mpc\"; \\\n@@ -16443,7 +16442,7 @@ distclean-mpc:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing distclean in mpc\"; \\\n@@ -16467,7 +16466,7 @@ maintainer-clean-mpc:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing maintainer-clean in mpc\"; \\\n@@ -16836,7 +16835,7 @@ all-isl: configure-isl\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/isl && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) V=1 \\\n \t\t$(TARGET-isl))\n @endif isl\n \n@@ -16867,7 +16866,7 @@ all-stage1-isl: configure-stage1-isl\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n \t\t$(EXTRA_HOST_FLAGS)  \\\n-\t\t$(STAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(STAGE1_FLAGS_TO_PASS) V=1 \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\"  \\\n \t\t$(TARGET-stage1-isl)\n \n@@ -16882,7 +16881,7 @@ clean-stage1-isl:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t$(STAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(STAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -16911,7 +16910,7 @@ all-stage2-isl: configure-stage2-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n \t\tTFLAGS=\"$(STAGE2_TFLAGS)\"  \\\n \t\t$(TARGET-stage2-isl)\n \n@@ -16925,7 +16924,7 @@ clean-stage2-isl:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -16954,7 +16953,7 @@ all-stage3-isl: configure-stage3-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n \t\tTFLAGS=\"$(STAGE3_TFLAGS)\"  \\\n \t\t$(TARGET-stage3-isl)\n \n@@ -16968,7 +16967,7 @@ clean-stage3-isl:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -16997,7 +16996,7 @@ all-stage4-isl: configure-stage4-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n \t\tTFLAGS=\"$(STAGE4_TFLAGS)\"  \\\n \t\t$(TARGET-stage4-isl)\n \n@@ -17011,7 +17010,7 @@ clean-stage4-isl:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -17040,7 +17039,7 @@ all-stageprofile-isl: configure-stageprofile-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n \t\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageprofile-isl)\n \n@@ -17054,7 +17053,7 @@ clean-stageprofile-isl:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -17083,7 +17082,7 @@ all-stagetrain-isl: configure-stagetrain-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n \t\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"  \\\n \t\t$(TARGET-stagetrain-isl)\n \n@@ -17097,7 +17096,7 @@ clean-stagetrain-isl:\n \t  $(MAKE) stagetrain-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -17126,7 +17125,7 @@ all-stagefeedback-isl: configure-stagefeedback-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n \t\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"  \\\n \t\t$(TARGET-stagefeedback-isl)\n \n@@ -17140,7 +17139,7 @@ clean-stagefeedback-isl:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -17169,7 +17168,7 @@ all-stageautoprofile-isl: configure-stageautoprofile-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n \t\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageautoprofile-isl)\n \n@@ -17183,7 +17182,7 @@ clean-stageautoprofile-isl:\n \t  $(MAKE) stageautoprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -17212,7 +17211,7 @@ all-stageautofeedback-isl: configure-stageautofeedback-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n \t\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\" PERF_DATA=perf.data \\\n \t\t$(TARGET-stageautofeedback-isl)\n \n@@ -17226,7 +17225,7 @@ clean-stageautofeedback-isl:\n \t  $(MAKE) stageautofeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -17244,7 +17243,7 @@ check-isl:\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n \t(cd $(HOST_SUBDIR)/isl && \\\n-\t  $(MAKE) $(FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" $(EXTRA_BOOTSTRAP_FLAGS) check)\n+\t  $(MAKE) $(FLAGS_TO_PASS) V=1 $(EXTRA_BOOTSTRAP_FLAGS) check)\n \n @endif isl\n \n@@ -17279,7 +17278,7 @@ info-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing info in isl\"; \\\n@@ -17304,7 +17303,7 @@ dvi-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing dvi in isl\"; \\\n@@ -17329,7 +17328,7 @@ pdf-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing pdf in isl\"; \\\n@@ -17354,7 +17353,7 @@ html-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing html in isl\"; \\\n@@ -17379,7 +17378,7 @@ TAGS-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing TAGS in isl\"; \\\n@@ -17405,7 +17404,7 @@ install-info-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-info in isl\"; \\\n@@ -17431,7 +17430,7 @@ install-dvi-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-dvi in isl\"; \\\n@@ -17457,7 +17456,7 @@ install-pdf-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-pdf in isl\"; \\\n@@ -17483,7 +17482,7 @@ install-html-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-html in isl\"; \\\n@@ -17508,7 +17507,7 @@ installcheck-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing installcheck in isl\"; \\\n@@ -17532,7 +17531,7 @@ mostlyclean-isl:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing mostlyclean in isl\"; \\\n@@ -17556,7 +17555,7 @@ clean-isl:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing clean in isl\"; \\\n@@ -17580,7 +17579,7 @@ distclean-isl:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing distclean in isl\"; \\\n@@ -17604,7 +17603,7 @@ maintainer-clean-isl:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing maintainer-clean in isl\"; \\"}, {"sha": "c7344558429bad3f0ff8f8fb658c01f28a9405c7", "filename": "Makefile.tpl", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -431,7 +431,6 @@ READELF = @READELF@\n STRIP = @STRIP@\n WINDRES = @WINDRES@\n WINDMC = @WINDMC@\n-PICFLAG = @PICFLAG@\n \n GDC = @GDC@\n GNATBIND = @GNATBIND@"}, {"sha": "d6a3361373292e994a25c1645185c89180639e8d", "filename": "c++tools/Makefile.in", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/c%2B%2Btools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/c%2B%2Btools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FMakefile.in?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -28,9 +28,8 @@ AUTOCONF := @AUTOCONF@\n AUTOHEADER := @AUTOHEADER@\n CXX := @CXX@\n CXXFLAGS := @CXXFLAGS@\n-PICFLAG := @PICFLAG@\n-LD_PICFLAG := @LD_PICFLAG@\n-CXXOPTS := $(CXXFLAGS) $(PICFLAG) -fno-exceptions -fno-rtti\n+PIEFLAG := @PIEFLAG@\n+CXXOPTS := $(CXXFLAGS) $(PIEFLAG) -fno-exceptions -fno-rtti\n LDFLAGS := @LDFLAGS@\n exeext := @EXEEXT@\n LIBIBERTY := ../libiberty/libiberty.a\n@@ -89,15 +88,11 @@ ifeq (@CXX_AUX_TOOLS@,yes)\n \n all::g++-mapper-server$(exeext)\n \n-ifneq ($(PICFLAG),)\n-override LIBIBERTY := ../libiberty/pic/libiberty.a\n-endif\n-\n MAPPER.O := server.o resolver.o\n CODYLIB = ../libcody/libcody.a\n CXXINC += -I$(srcdir)/../libcody -I$(srcdir)/../include -I$(srcdir)/../gcc -I. -I../gcc\n g++-mapper-server$(exeext): $(MAPPER.O) $(CODYLIB)\n-\t+$(CXX) $(LDFLAGS) $(PICFLAG) $(LD_PICFLAG) -o $@ $^ $(LIBIBERTY) $(NETLIBS)\n+\t+$(CXX) $(LDFLAGS) $(PIEFLAG) -o $@ $^ $(LIBIBERTY) $(NETLIBS)\n \n # copy to gcc dir so tests there can run\n all::../gcc/g++-mapper-server$(exeext)"}, {"sha": "742816e42539149ace5883114168bd4422197176", "filename": "c++tools/configure", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/c%2B%2Btools%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/c%2B%2Btools%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -627,8 +627,7 @@ get_gcc_base_ver\n EGREP\n GREP\n CXXCPP\n-LD_PICFLAG\n-PICFLAG\n+PIEFLAG\n MAINTAINER\n CXX_AUX_TOOLS\n AUTOHEADER\n@@ -701,7 +700,6 @@ enable_c___tools\n enable_maintainer_mode\n enable_checking\n enable_default_pie\n-enable_host_pie\n with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n@@ -1335,7 +1333,6 @@ Optional Features:\n                           only specific categories of checks. Categories are:\n                           yes,no,all,none,release.\n   --enable-default-pie    enable Position Independent Executable as default\n-  --enable-host-pie       build host code as PIE\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -2993,20 +2990,12 @@ fi\n # Check whether --enable-default-pie was given.\n # Check whether --enable-default-pie was given.\n if test \"${enable_default_pie+set}\" = set; then :\n-  enableval=$enable_default_pie; PICFLAG=-fPIE\n+  enableval=$enable_default_pie; PIEFLAG=-fPIE\n else\n-  PICFLAG=\n+  PIEFLAG=\n fi\n \n \n-# Enable --enable-host-pie\n-# Check whether --enable-host-pie was given.\n-if test \"${enable_host_pie+set}\" = set; then :\n-  enableval=$enable_host_pie; PICFLAG=-fPIE; LD_PICFLAG=-pie\n-fi\n-\n-\n-\n \n # Check if O_CLOEXEC is defined by fcntl\n "}, {"sha": "6662b5ad7c99dc00d33ffa8aad9421b1160b2a61", "filename": "c++tools/configure.ac", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/c%2B%2Btools%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/c%2B%2Btools%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure.ac?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -102,15 +102,8 @@ fi\n AC_ARG_ENABLE(default-pie,\n [AS_HELP_STRING([--enable-default-pie],\n \t\t  [enable Position Independent Executable as default])],\n-[PICFLAG=-fPIE], [PICFLAG=])\n-\n-# Enable --enable-host-pie\n-AC_ARG_ENABLE(host-pie,\n-[AS_HELP_STRING([--enable-host-pie],\n-\t\t[build host code as PIE])],\n-[PICFLAG=-fPIE; LD_PICFLAG=-pie], [])\n-AC_SUBST(PICFLAG)\n-AC_SUBST(LD_PICFLAG)\n+[PIEFLAG=-fPIE], [PIEFLAG=])\n+AC_SUBST([PIEFLAG])\n \n # Check if O_CLOEXEC is defined by fcntl\n AC_CACHE_CHECK(for O_CLOEXEC, ac_cv_o_cloexec, ["}, {"sha": "8899a67040b35fce0abf81153d6fd0dd14001b1b", "filename": "configure", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -685,8 +685,6 @@ get_gcc_base_ver\n extra_host_zlib_configure_flags\n extra_host_libiberty_configure_flags\n stage1_languages\n-PICFLAG\n-enable_host_pie\n host_shared\n extra_linker_plugin_flags\n extra_linker_plugin_configure_flags\n@@ -830,7 +828,6 @@ enable_lto\n enable_linker_plugin_configure_flags\n enable_linker_plugin_flags\n enable_host_shared\n-enable_host_pie\n enable_stage1_languages\n enable_objc_gc\n with_target_bdw_gc\n@@ -1557,7 +1554,6 @@ Optional Features:\n                           additional flags for configuring and building linker\n                           plugins [none]\n   --enable-host-shared    build host code as shared libraries\n-  --enable-host-pie       build host code as PIE\n   --enable-stage1-languages[=all]\n                           choose additional languages to build during stage1.\n                           Mostly useful for compiler development\n@@ -8600,24 +8596,6 @@ fi\n \n \n \n-# Enable --enable-host-pie.\n-# Check whether --enable-host-pie was given.\n-if test \"${enable_host_pie+set}\" = set; then :\n-  enableval=$enable_host_pie;\n-fi\n-\n-\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n-else\n-  PICFLAG=\n-fi\n-\n-\n-\n # By default, C and C++ are the only stage 1 languages.\n stage1_languages=,c,\n "}, {"sha": "1eb689d68b1ce59f3ce8fb8c240cd9a1ff3f1be0", "filename": "configure.ac", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -1870,22 +1870,6 @@ AC_ARG_ENABLE(host-shared,\n  esac])\n AC_SUBST(host_shared)\n \n-# Enable --enable-host-pie.\n-AC_ARG_ENABLE(host-pie,\n-[AS_HELP_STRING([--enable-host-pie],\n-       [build host code as PIE])])\n-AC_SUBST(enable_host_pie)\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n-else\n-  PICFLAG=\n-fi\n-\n-AC_SUBST(PICFLAG)\n-\n # By default, C and C++ are the only stage 1 languages.\n stage1_languages=,c,\n "}, {"sha": "1937dcaa32d5f53b8f811d84f8836b7d5b2bce1c", "filename": "fixincludes/Makefile.in", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/fixincludes%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/fixincludes%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FMakefile.in?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -30,8 +30,6 @@ CC = @CC@\n CFLAGS = @CFLAGS@\n WARN_CFLAGS = @WARN_CFLAGS@ @WARN_PEDANTIC@ @WERROR@\n LDFLAGS = @LDFLAGS@\n-PICFLAG = @PICFLAG@\n-LD_PICFLAG = @LD_PICFLAG@\n INCLUDES = -I. -I$(srcdir) -I../include -I$(srcdir)/../include\n FIXINC_CFLAGS = -DHAVE_CONFIG_H $(INCLUDES)\n \n@@ -75,7 +73,7 @@ default : all\n # Now figure out from those variables how to compile and link.\n \n .c.o:\n-\t$(CC) -c $(CFLAGS) $(PICFLAG) $(WARN_CFLAGS) $(CPPFLAGS) $(FIXINC_CFLAGS) $<\n+\t$(CC) -c $(CFLAGS) $(WARN_CFLAGS) $(CPPFLAGS) $(FIXINC_CFLAGS) $<\n \n # The only suffixes we want for implicit rules are .c and .o.\n .SUFFIXES:\n@@ -89,11 +87,7 @@ default : all\n ##\n ## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n \n-ifeq ($(PICFLAG),)\n LIBIBERTY=../libiberty/libiberty.a\n-else\n-LIBIBERTY=../libiberty/pic/libiberty.a\n-endif\n \n ALLOBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n       fixlib.o fixopts.o\n@@ -113,15 +107,15 @@ oneprocess : full-stamp\n twoprocess : test-stamp $(AF)\n \n full-stamp : $(ALLOBJ) $(LIBIBERTY)\n-\t$(CC) $(CFLAGS) $(PICFLAG) $(LDFLAGS) $(LD_PICFLAG) -o $(FI) $(ALLOBJ) $(LIBIBERTY)\n+\t$(CC) $(CFLAGS) $(LDFLAGS) -o $(FI) $(ALLOBJ) $(LIBIBERTY)\n \t$(STAMP) $@\n \n test-stamp : $(TESTOBJ) $(LIBIBERTY)\n-\t$(CC) $(CFLAGS) $(PICFLAG) $(LDFLAGS) $(LD_PICFLAG) -o $(FI) $(TESTOBJ) $(LIBIBERTY)\n+\t$(CC) $(CFLAGS) $(LDFLAGS) -o $(FI) $(TESTOBJ) $(LIBIBERTY)\n \t$(STAMP) $@\n \n $(AF): $(FIXOBJ) $(LIBIBERTY)\n-\t$(CC) $(CFLAGS) $(PICFLAG) $(LDFLAGS) $(LD_PICFLAG) -o $@ $(FIXOBJ) $(LIBIBERTY)\n+\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(FIXOBJ) $(LIBIBERTY)\n \n $(ALLOBJ)   : $(HDR)\n fixincl.o   : fixincl.c  $(srcdir)/fixincl.x"}, {"sha": "b3bca666a4d03ad8681d1fc9fdb4cddcc209de72", "filename": "fixincludes/configure", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/fixincludes%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/fixincludes%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -623,8 +623,6 @@ ac_subst_vars='LTLIBOBJS\n LIBOBJS\n get_gcc_base_ver\n MAINT\n-LD_PICFLAG\n-PICFLAG\n TARGET\n target_noncanonical\n WERROR\n@@ -697,7 +695,6 @@ enable_option_checking\n enable_werror_always\n with_local_prefix\n enable_twoprocess\n-enable_host_pie\n enable_maintainer_mode\n with_gcc_major_version_only\n '\n@@ -1326,7 +1323,6 @@ Optional Features:\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --enable-werror-always  enable -Werror despite compiler version\n   --enable-twoprocess       Use a separate process to apply the fixes\n-  --enable-host-pie       build host code as PIE\n   --enable-maintainer-mode enable make rules and dependencies not useful\n                           (and sometimes confusing) to the casual installer\n \n@@ -4839,15 +4835,6 @@ $as_echo \"#define SEPARATE_FIX_PROC 1\" >>confdefs.h\n \n fi\n \n-# Enable --enable-host-pie.\n-# Check whether --enable-host-pie was given.\n-if test \"${enable_host_pie+set}\" = set; then :\n-  enableval=$enable_host_pie; PICFLAG=-fPIE; LD_PICFLAG=-pie\n-fi\n-\n-\n-\n-\n case $host in\n \tvax-dec-bsd* )\n "}, {"sha": "14813b910f196a7adc7f185a55d02195c021351f", "filename": "fixincludes/configure.ac", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/fixincludes%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/fixincludes%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure.ac?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -68,14 +68,6 @@ if test $TARGET = twoprocess; then\n \t\t  [Define if testing and fixing are done by separate process])\n fi\n \n-# Enable --enable-host-pie.\n-AC_ARG_ENABLE(host-pie,\n-[AS_HELP_STRING([--enable-host-pie],\n-       [build host code as PIE])],\n-[PICFLAG=-fPIE; LD_PICFLAG=-pie], [])\n-AC_SUBST(PICFLAG)\n-AC_SUBST(LD_PICFLAG)\n-\n case $host in\n \tvax-dec-bsd* )\n \t\tAC_DEFINE(exit, xexit, [Define to xexit if the host system does not support atexit])"}, {"sha": "5ad638f59d81a3beaa14c3ffcac9647a5b478abd", "filename": "gcc/Makefile.in", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -158,9 +158,6 @@ LDFLAGS = @LDFLAGS@\n # Should we build position-independent host code?\n PICFLAG = @PICFLAG@\n \n-# The linker flag for the above.\n-LD_PICFLAG = @LD_PICFLAG@\n-\n # Flags to determine code coverage. When coverage is disabled, this will\n # contain the optimization flags, as you normally want code coverage\n # without optimization.\n@@ -269,17 +266,18 @@ LINKER = $(CC)\n LINKER_FLAGS = $(CFLAGS)\n endif\n \n-enable_host_pie = @enable_host_pie@\n-\n # Enable Intel CET on Intel CET enabled host if needed.\n CET_HOST_FLAGS = @CET_HOST_FLAGS@\n COMPILER += $(CET_HOST_FLAGS)\n \n-# Maybe compile the compilers with -fPIE or -fPIC.\n-COMPILER += $(PICFLAG)\n+NO_PIE_CFLAGS = @NO_PIE_CFLAGS@\n+NO_PIE_FLAG = @NO_PIE_FLAG@\n+\n+# We don't want to compile the compilers with -fPIE, it make PCH fail.\n+COMPILER += $(NO_PIE_CFLAGS)\n \n-# Link with -pie, or -no-pie, depending on the above.\n-LINKER += $(LD_PICFLAG)\n+# Link with -no-pie since we compile the compiler with -fno-PIE.\n+LINKER += $(NO_PIE_FLAG)\n \n # Like LINKER, but use a mutex for serializing front end links.\n ifeq (@DO_LINK_MUTEX@,true)\n@@ -1062,21 +1060,18 @@ ALL_CPPFLAGS = $(INCLUDES) $(CPPFLAGS)\n ALL_COMPILERFLAGS = $(ALL_CXXFLAGS)\n \n # This is the variable to use when using $(LINKER).\n-ALL_LINKERFLAGS = $(ALL_CXXFLAGS) $(LD_PICFLAG)\n+ALL_LINKERFLAGS = $(ALL_CXXFLAGS)\n \n # Build and host support libraries.\n \n-# Use the \"pic\" build of libiberty if --enable-host-shared or --enable-host-pie,\n-# unless we are building for mingw.\n+# Use the \"pic\" build of libiberty if --enable-host-shared, unless we are\n+# building for mingw.\n LIBIBERTY_PICDIR=$(if $(findstring mingw,$(target)),,pic)\n-ifneq ($(enable_host_shared)$(enable_host_pie),)\n-LIBIBERTY = ../libiberty/$(LIBIBERTY_PICDIR)/libiberty.a\n-else\n-LIBIBERTY = ../libiberty/libiberty.a\n-endif\n ifeq ($(enable_host_shared),yes)\n+LIBIBERTY = ../libiberty/$(LIBIBERTY_PICDIR)/libiberty.a\n BUILD_LIBIBERTY = $(build_libobjdir)/libiberty/$(LIBIBERTY_PICDIR)/libiberty.a\n else\n+LIBIBERTY = ../libiberty/libiberty.a\n BUILD_LIBIBERTY = $(build_libobjdir)/libiberty/libiberty.a\n endif\n "}, {"sha": "aa0960991c92f130f53edcf70cc959b106efefe1", "filename": "gcc/configure", "status": "modified", "additions": 14, "deletions": 33, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -632,10 +632,10 @@ ac_includes_default=\"\\\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n CET_HOST_FLAGS\n-LD_PICFLAG\n-PICFLAG\n+NO_PIE_FLAG\n+NO_PIE_CFLAGS\n enable_default_pie\n-enable_host_pie\n+PICFLAG\n enable_host_shared\n enable_plugin\n pluginlibs\n@@ -1025,7 +1025,6 @@ enable_link_serialization\n enable_version_specific_runtime_libs\n enable_plugin\n enable_host_shared\n-enable_host_pie\n enable_libquadmath_support\n with_linker_hash_style\n with_diagnostics_color\n@@ -1788,7 +1787,6 @@ Optional Features:\n                           in a compiler-specific directory\n   --enable-plugin         enable plugin support\n   --enable-host-shared    build host code as shared libraries\n-  --enable-host-pie       build host code as PIE\n   --disable-libquadmath-support\n                           disable libquadmath support for Fortran\n   --enable-default-pie    enable Position Independent Executable as default\n@@ -19712,7 +19710,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19727 \"configure\"\n+#line 19713 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19818,7 +19816,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19833 \"configure\"\n+#line 19819 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -31947,17 +31945,13 @@ fi\n # Enable --enable-host-shared\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n-  enableval=$enable_host_shared;\n+  enableval=$enable_host_shared; PICFLAG=-fPIC\n+else\n+  PICFLAG=\n fi\n \n \n \n-# Enable --enable-host-pie\n-# Check whether --enable-host-pie was given.\n-if test \"${enable_host_pie+set}\" = set; then :\n-  enableval=$enable_host_pie;\n-fi\n-\n \n \n # Check whether --enable-libquadmath-support was given.\n@@ -32111,6 +32105,10 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_c_no_fpie\" >&5\n $as_echo \"$gcc_cv_c_no_fpie\" >&6; }\n+if test \"$gcc_cv_c_no_fpie\" = \"yes\"; then\n+  NO_PIE_CFLAGS=\"-fno-PIE\"\n+fi\n+\n \n # Check if -no-pie works.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -no-pie option\" >&5\n@@ -32135,28 +32133,11 @@ rm -f core conftest.err conftest.$ac_objext \\\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_no_pie\" >&5\n $as_echo \"$gcc_cv_no_pie\" >&6; }\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n-elif test x$gcc_cv_c_no_fpie = xyes; then\n-  PICFLAG=-fno-PIE\n-else\n-  PICFLAG=\n-fi\n-\n-if test x$enable_host_pie = xyes; then\n-  LD_PICFLAG=-pie\n-elif test x$gcc_cv_no_pie = xyes; then\n-  LD_PICFLAG=-no-pie\n-else\n-  LD_PICFLAG=\n+if test \"$gcc_cv_no_pie\" = \"yes\"; then\n+  NO_PIE_FLAG=\"-no-pie\"\n fi\n \n \n-\n-\n # Enable Intel CET on Intel CET enabled host if jit is enabled.\n  # Check whether --enable-cet was given.\n if test \"${enable_cet+set}\" = set; then :"}, {"sha": "7c55bff6cb0621a49f3d2fa95e5b6532344e64c3", "filename": "gcc/configure.ac", "status": "modified", "additions": 10, "deletions": 26, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -7364,14 +7364,11 @@ fi\n # Enable --enable-host-shared\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n-\t\t[build host code as shared libraries])])\n+\t\t[build host code as shared libraries])],\n+[PICFLAG=-fPIC], [PICFLAG=])\n AC_SUBST(enable_host_shared)\n+AC_SUBST(PICFLAG)\n \n-# Enable --enable-host-pie\n-AC_ARG_ENABLE(host-pie,\n-[AS_HELP_STRING([--enable-host-pie],\n-\t\t[build host code as PIE])])\n-AC_SUBST(enable_host_pie)\n \n AC_ARG_ENABLE(libquadmath-support,\n [AS_HELP_STRING([--disable-libquadmath-support],\n@@ -7493,6 +7490,10 @@ AC_CACHE_CHECK([for -fno-PIE option],\n      [gcc_cv_c_no_fpie=yes],\n      [gcc_cv_c_no_fpie=no])\n    CXXFLAGS=\"$saved_CXXFLAGS\"])\n+if test \"$gcc_cv_c_no_fpie\" = \"yes\"; then\n+  NO_PIE_CFLAGS=\"-fno-PIE\"\n+fi\n+AC_SUBST([NO_PIE_CFLAGS])\n \n # Check if -no-pie works.\n AC_CACHE_CHECK([for -no-pie option],\n@@ -7503,27 +7504,10 @@ AC_CACHE_CHECK([for -no-pie option],\n      [gcc_cv_no_pie=yes],\n      [gcc_cv_no_pie=no])\n    LDFLAGS=\"$saved_LDFLAGS\"])\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n-elif test x$gcc_cv_c_no_fpie = xyes; then\n-  PICFLAG=-fno-PIE\n-else\n-  PICFLAG=\n+if test \"$gcc_cv_no_pie\" = \"yes\"; then\n+  NO_PIE_FLAG=\"-no-pie\"\n fi\n-\n-if test x$enable_host_pie = xyes; then\n-  LD_PICFLAG=-pie\n-elif test x$gcc_cv_no_pie = xyes; then\n-  LD_PICFLAG=-no-pie\n-else\n-  LD_PICFLAG=\n-fi\n-\n-AC_SUBST([PICFLAG])\n-AC_SUBST([LD_PICFLAG])\n+AC_SUBST([NO_PIE_FLAG])\n \n # Enable Intel CET on Intel CET enabled host if jit is enabled.\n GCC_CET_HOST_FLAGS(CET_HOST_FLAGS)"}, {"sha": "6f9b2e5c26a140e2468babe48073a200ac1bd606", "filename": "gcc/d/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/gcc%2Fd%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/gcc%2Fd%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FMake-lang.in?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -64,7 +64,7 @@ ALL_DFLAGS = $(DFLAGS-$@) $(GDCFLAGS) -fversion=IN_GCC $(CHECKING_DFLAGS) \\\n \t$(PICFLAG) $(ALIASING_FLAGS) $(NOEXCEPTION_DFLAGS) $(COVERAGE_FLAGS) \\\n \t$(WARN_DFLAGS)\n \n-DCOMPILE.base = $(GDC) -c $(ALL_DFLAGS) -o $@\n+DCOMPILE.base = $(GDC) $(NO_PIE_CFLAGS) -c $(ALL_DFLAGS) -o $@\n DCOMPILE = $(DCOMPILE.base) -MT $@ -MMD -MP -MF $(@D)/$(DEPDIR)/$(*F).TPo\n DPOSTCOMPILE = @mv $(@D)/$(DEPDIR)/$(*F).TPo $(@D)/$(DEPDIR)/$(*F).Po\n DLINKER = $(GDC) $(NO_PIE_FLAG) -lstdc++"}, {"sha": "589c64965b2ac0f1a5b071a1b7f37098e1245a74", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -1026,26 +1026,14 @@ code.\n \n @item --enable-host-shared\n Specify that the @emph{host} code should be built into position-independent\n-machine code (with @option{-fPIC}), allowing it to be used within shared\n-libraries, but yielding a slightly slower compiler.\n+machine code (with -fPIC), allowing it to be used within shared libraries,\n+but yielding a slightly slower compiler.\n \n This option is required when building the libgccjit.so library.\n \n Contrast with @option{--enable-shared}, which affects @emph{target}\n libraries.\n \n-@item --enable-host-pie\n-Specify that the @emph{host} executables should be built into\n-position-independent executables (with @option{-fPIE} and @option{-pie}),\n-yielding a slightly slower compiler (but faster than\n-@option{--enable-host-shared}).  Position-independent executables are loaded\n-at random addresses each time they are executed, therefore provide additional\n-protection against Return Oriented Programming (ROP) attacks.\n-\n-@option{--enable-host-pie}) may be used with @option{--enable-host-shared}),\n-in which case @option{-fPIC} is used when compiling, and @option{-pie} when\n-linking.\n-\n @item @anchor{with-gnu-as}--with-gnu-as\n Specify that the compiler should assume that the\n assembler it finds is the GNU assembler.  However, this does not modify"}, {"sha": "409d693c48e8eeb885f5bdd1638e9b88b489baa6", "filename": "intl/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/intl%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/intl%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2FMakefile.in?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -54,7 +54,7 @@ CTAGS = @CTAGS@\n ETAGS = @ETAGS@\n MKID = @MKID@\n \n-COMPILE = $(CC) -c $(CPPFLAGS) $(CFLAGS) @PICFLAG@ $(DEFS) $(DEFS-$@) $(INCLUDES)\n+COMPILE = $(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(DEFS-$@) $(INCLUDES)\n \n HEADERS = \\\n   gmo.h \\"}, {"sha": "03f40487a92b98bcf62711eb69e38c793264266f", "filename": "intl/configure", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/intl%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/intl%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fconfigure?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -623,8 +623,6 @@ ac_header_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n PICFLAG\n-enable_host_pie\n-enable_host_shared\n BISON3_NO\n BISON3_YES\n INCINTL\n@@ -733,7 +731,6 @@ with_libintl_prefix\n with_libintl_type\n enable_maintainer_mode\n enable_host_shared\n-enable_host_pie\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1359,7 +1356,6 @@ Optional Features:\n   --disable-rpath         do not hardcode runtime library paths\n   --enable-maintainer-mode enable rules only needed by maintainers\n   --enable-host-shared    build host code as shared libraries\n-  --enable-host-pie       build host code as PIE\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -6856,31 +6852,15 @@ fi\n \n \n \n-# Enable --enable-host-shared.\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n-  enableval=$enable_host_shared;\n-fi\n-\n-\n-\n-# Enable --enable-host-pie.\n-# Check whether --enable-host-pie was given.\n-if test \"${enable_host_pie+set}\" = set; then :\n-  enableval=$enable_host_pie;\n-fi\n-\n-\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n+  enableval=$enable_host_shared; PICFLAG=-fPIC\n else\n   PICFLAG=\n fi\n \n \n+\n ac_config_files=\"$ac_config_files Makefile config.intl\"\n \n cat >confcache <<\\_ACEOF"}, {"sha": "16a740aa230aa29971893b3a59f7a570299e1a45", "filename": "intl/configure.ac", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/intl%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/intl%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fconfigure.ac?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -83,25 +83,10 @@ fi\n AC_SUBST(BISON3_YES)\n AC_SUBST(BISON3_NO)\n \n-# Enable --enable-host-shared.\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n-       [build host code as shared libraries])])\n-AC_SUBST(enable_host_shared)\n-\n-# Enable --enable-host-pie.\n-AC_ARG_ENABLE(host-pie,\n-[AS_HELP_STRING([--enable-host-pie],\n-       [build host code as PIE])])\n-AC_SUBST(enable_host_pie)\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n-else\n-  PICFLAG=\n-fi\n+\t\t[build host code as shared libraries])],\n+[PICFLAG=-fPIC], [PICFLAG=])\n AC_SUBST(PICFLAG)\n \n AC_CONFIG_FILES(Makefile config.intl)"}, {"sha": "bb87468cb9a33f60718dda00037552cd8c6d8fb1", "filename": "libcody/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/libcody%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/libcody%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FMakefile.in?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -31,7 +31,7 @@ endif\n CXXOPTS += $(filter-out -DHAVE_CONFIG_H,@DEFS@) -include config.h\n \n # Linker options\n-LDFLAGS := @LDFLAGS@ @LD_PICFLAG@\n+LDFLAGS := @LDFLAGS@\n LIBS := @LIBS@\n \n # Per-source & per-directory compile flags (warning: recursive)"}, {"sha": "da52a5cfca5e9b069a7c8a022239aa2df8fa8793", "filename": "libcody/configure", "status": "modified", "additions": 1, "deletions": 29, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/libcody%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/libcody%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fconfigure?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -591,10 +591,7 @@ configure_args\n AR\n RANLIB\n EXCEPTIONS\n-LD_PICFLAG\n PICFLAG\n-enable_host_pie\n-enable_host_shared\n OBJEXT\n EXEEXT\n ac_ct_CXX\n@@ -656,7 +653,6 @@ enable_maintainer_mode\n with_compiler\n enable_checking\n enable_host_shared\n-enable_host_pie\n enable_exceptions\n '\n       ac_precious_vars='build_alias\n@@ -1290,7 +1286,6 @@ Optional Features:\n                           yes,no,all,none,release. Flags are: misc,valgrind or\n                           other strings\n   --enable-host-shared    build host code as shared libraries\n-  --enable-host-pie       build host code as PIE\n   --enable-exceptions     enable exceptions & rtti\n \n Optional Packages:\n@@ -2640,34 +2635,11 @@ fi\n # Enable --enable-host-shared.\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n-  enableval=$enable_host_shared;\n-fi\n-\n-\n-\n-# Enable --enable-host-pie.\n-# Check whether --enable-host-pie was given.\n-if test \"${enable_host_pie+set}\" = set; then :\n-  enableval=$enable_host_pie;\n-fi\n-\n-\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n+  enableval=$enable_host_shared; PICFLAG=-fPIC\n else\n   PICFLAG=\n fi\n \n-if test x$enable_host_pie = xyes; then\n-  LD_PICFLAG=-pie\n-else\n-  LD_PICFLAG=\n-fi\n-\n-\n \n \n # Check whether --enable-exceptions was given."}, {"sha": "960191ecb72c4d34111535be85e6760922ec88bb", "filename": "libcody/configure.ac", "status": "modified", "additions": 2, "deletions": 24, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/libcody%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/libcody%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fconfigure.ac?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -63,31 +63,9 @@ fi\n # Enable --enable-host-shared.\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n-\t\t[build host code as shared libraries])])\n-AC_SUBST(enable_host_shared)\n-\n-# Enable --enable-host-pie.\n-AC_ARG_ENABLE(host-pie,\n-[AS_HELP_STRING([--enable-host-pie],\n-\t\t[build host code as PIE])])\n-AC_SUBST(enable_host_pie)\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n-else\n-  PICFLAG=\n-fi\n-\n-if test x$enable_host_pie = xyes; then\n-  LD_PICFLAG=-pie\n-else\n-  LD_PICFLAG=\n-fi\n-\n+\t\t[build host code as shared libraries])],\n+[PICFLAG=-fPIC], [PICFLAG=])\n AC_SUBST(PICFLAG)\n-AC_SUBST(LD_PICFLAG)\n \n NMS_ENABLE_EXCEPTIONS\n "}, {"sha": "e9937cde3303f9918ffaf1521406879d2f5247d1", "filename": "libcpp/configure", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -625,8 +625,6 @@ ac_includes_default=\"\\\n ac_subst_vars='LTLIBOBJS\n CET_HOST_FLAGS\n PICFLAG\n-enable_host_pie\n-enable_host_shared\n MAINT\n USED_CATALOGS\n PACKAGE\n@@ -740,7 +738,6 @@ enable_maintainer_mode\n enable_checking\n enable_canonical_system_headers\n enable_host_shared\n-enable_host_pie\n enable_cet\n enable_valgrind_annotations\n '\n@@ -1382,7 +1379,6 @@ Optional Features:\n   --enable-canonical-system-headers\n                           enable or disable system headers canonicalization\n   --enable-host-shared    build host code as shared libraries\n-  --enable-host-pie       build host code as PIE\n   --enable-cet            enable Intel CET in host libraries [default=auto]\n   --enable-valgrind-annotations\n                           enable valgrind runtime interaction\n@@ -7609,23 +7605,7 @@ esac\n # Enable --enable-host-shared.\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n-  enableval=$enable_host_shared;\n-fi\n-\n-\n-\n-# Enable --enable-host-pie.\n-# Check whether --enable-host-pie was given.\n-if test \"${enable_host_pie+set}\" = set; then :\n-  enableval=$enable_host_pie;\n-fi\n-\n-\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n+  enableval=$enable_host_shared; PICFLAG=-fPIC\n else\n   PICFLAG=\n fi"}, {"sha": "89ac99b04bdb21f851174acb98d3b75d5e838350", "filename": "libcpp/configure.ac", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -211,23 +211,8 @@ esac\n # Enable --enable-host-shared.\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n-\t\t[build host code as shared libraries])])\n-AC_SUBST(enable_host_shared)\n-\n-# Enable --enable-host-pie.\n-AC_ARG_ENABLE(host-pie,\n-[AS_HELP_STRING([--enable-host-pie],\n-\t\t[build host code as PIE])])\n-AC_SUBST(enable_host_pie)\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n-else\n-  PICFLAG=\n-fi\n-\n+\t\t[build host code as shared libraries])],\n+[PICFLAG=-fPIC], [PICFLAG=])\n AC_SUBST(PICFLAG)\n \n # Enable Intel CET on Intel CET enabled host if jit is enabled."}, {"sha": "fb6db05565a0da9750da2eebd4e9382713463366", "filename": "libdecnumber/configure", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/libdecnumber%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/libdecnumber%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -626,8 +626,6 @@ ac_subst_vars='LTLIBOBJS\n LIBOBJS\n CET_HOST_FLAGS\n PICFLAG\n-enable_host_pie\n-enable_host_shared\n ADDITIONAL_OBJS\n enable_decimal_float\n target_os\n@@ -708,7 +706,6 @@ enable_werror_always\n enable_maintainer_mode\n enable_decimal_float\n enable_host_shared\n-enable_host_pie\n enable_cet\n '\n       ac_precious_vars='build_alias\n@@ -1341,7 +1338,6 @@ Optional Features:\n \t\t\tor 'dpd' choses which decimal floating point format\n \t\t\tto use\n   --enable-host-shared    build host code as shared libraries\n-  --enable-host-pie       build host code as PIE\n   --enable-cet            enable Intel CET in host libraries [default=auto]\n \n Some influential environment variables:\n@@ -5190,23 +5186,7 @@ $as_echo \"#define AC_APPLE_UNIVERSAL_BUILD 1\" >>confdefs.h\n # Enable --enable-host-shared.\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n-  enableval=$enable_host_shared;\n-fi\n-\n-\n-\n-# Enable --enable-host-pie.\n-# Check whether --enable-host-pie was given.\n-if test \"${enable_host_pie+set}\" = set; then :\n-  enableval=$enable_host_pie;\n-fi\n-\n-\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n+  enableval=$enable_host_shared; PICFLAG=-fPIC\n else\n   PICFLAG=\n fi"}, {"sha": "0794031ec830afa97376c93f151b0f4fcad99780", "filename": "libdecnumber/configure.ac", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/libdecnumber%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/libdecnumber%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure.ac?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -100,23 +100,8 @@ AC_C_BIGENDIAN\n # Enable --enable-host-shared.\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n-\t\t[build host code as shared libraries])])\n-AC_SUBST(enable_host_shared)\n-\n-# Enable --enable-host-pie.\n-AC_ARG_ENABLE(host-pie,\n-[AS_HELP_STRING([--enable-host-pie],\n-\t\t[build host code as PIE])])\n-AC_SUBST(enable_host_pie)\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n-else\n-  PICFLAG=\n-fi\n-\n+\t\t[build host code as shared libraries])],\n+[PICFLAG=-fPIC], [PICFLAG=])\n AC_SUBST(PICFLAG)\n \n # Enable Intel CET on Intel CET enabled host if jit is enabled."}, {"sha": "860f981fa18354dfec7d23461079e9ebb8d388a4", "filename": "libiberty/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -5258,8 +5258,8 @@ case \"${enable_shared}\" in\n   *) shared=yes ;;\n esac\n \n-# ...unless --enable-host-{shared,pie} was passed from top-level config:\n-if [ \"${enable_host_shared}\" = \"yes\" ] || [ \"${enable_host_pie}\" = \"yes\" ]; then\n+# ...unless --enable-host-shared was passed from top-level config:\n+if [ \"${enable_host_shared}\" = \"yes\" ]; then\n   shared=yes\n fi\n "}, {"sha": "28d996f9cf7b7c84247a81b0fbcb3a1ae6adcb9e", "filename": "libiberty/configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -233,8 +233,8 @@ case \"${enable_shared}\" in\n   *) shared=yes ;;\n esac\n \n-# ...unless --enable-host-{shared,pie} was passed from top-level config:\n-if [[ \"${enable_host_shared}\" = \"yes\" ]] || [[ \"${enable_host_pie}\" = \"yes\" ]]; then\n+# ...unless --enable-host-shared was passed from top-level config:\n+if [[ \"${enable_host_shared}\" = \"yes\" ]]; then\n   shared=yes\n fi\n "}, {"sha": "e35ac6e7e17883054bc2b4eb63927af419f32cd5", "filename": "zlib/configure", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/zlib%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/zlib%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -635,8 +635,6 @@ am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n PICFLAG\n-enable_host_pie\n-enable_host_shared\n TARGET_LIBRARY_FALSE\n TARGET_LIBRARY_TRUE\n toolexeclibdir\n@@ -780,7 +778,6 @@ with_gnu_ld\n enable_libtool_lock\n with_toolexeclibdir\n enable_host_shared\n-enable_host_pie\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1423,7 +1420,6 @@ Optional Features:\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n   --enable-host-shared    build host code as shared libraries\n-  --enable-host-pie       build host code as PIE\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -10763,7 +10759,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10778 \"configure\"\n+#line 10762 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10869,7 +10865,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10884 \"configure\"\n+#line 10868 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11552,31 +11548,15 @@ else\n   multilib_arg=\n fi\n \n-# Enable --enable-host-shared.\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n-  enableval=$enable_host_shared;\n-fi\n-\n-\n-\n-# Enable --enable-host-pie.\n-# Check whether --enable-host-pie was given.\n-if test \"${enable_host_pie+set}\" = set; then :\n-  enableval=$enable_host_pie;\n-fi\n-\n-\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n+  enableval=$enable_host_shared; PICFLAG=-fPIC\n else\n   PICFLAG=\n fi\n \n \n+\n ac_config_files=\"$ac_config_files Makefile\"\n \n cat >confcache <<\\_ACEOF"}, {"sha": "be1cfe296512dd65384fbd9569d86519a626e831", "filename": "zlib/configure.ac", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04711f5189a72c2fcaeed520d65582704adca042/zlib%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04711f5189a72c2fcaeed520d65582704adca042/zlib%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure.ac?ref=04711f5189a72c2fcaeed520d65582704adca042", "patch": "@@ -122,26 +122,11 @@ else\n   multilib_arg=\n fi\n \n-# Enable --enable-host-shared.\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n-\t\t[build host code as shared libraries])])\n-AC_SUBST(enable_host_shared)\n-\n-# Enable --enable-host-pie.\n-AC_ARG_ENABLE(host-pie,\n-[AS_HELP_STRING([--enable-host-pie],\n-\t\t[build host code as PIE])])\n-AC_SUBST(enable_host_pie)\n-\n-if test x$enable_host_shared = xyes; then\n-  PICFLAG=-fPIC\n-elif test x$enable_host_pie = xyes; then\n-  PICFLAG=-fPIE\n-else\n-  PICFLAG=\n-fi\n-\n+\t\t[build host code as shared libraries])],\n+[PICFLAG=-fPIC], [PICFLAG=])\n AC_SUBST(PICFLAG)\n+\n AC_CONFIG_FILES([Makefile])\n AC_OUTPUT"}]}