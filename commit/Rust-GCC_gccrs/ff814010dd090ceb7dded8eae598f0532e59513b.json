{"sha": "ff814010dd090ceb7dded8eae598f0532e59513b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY4MTQwMTBkZDA5MGNlYjdkZGVkOGVhZTU5OGYwNTMyZTU5NTEzYg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-02-01T16:04:18Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-02-01T16:04:18Z"}, "message": "re PR rtl-optimization/84157 ([nvptx] ICE: RTL check: expected code 'reg', have 'lshiftrt')\n\n\tPR rtl-optimization/84157\n\t* combine.c (change_zero_ext): Use REG_P predicate in\n\tfront of HARD_REGISTER_P predicate.\n\nFrom-SVN: r257302", "tree": {"sha": "3f347d51dba9f488d550eb9c7ab63e3e7e450f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f347d51dba9f488d550eb9c7ab63e3e7e450f37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff814010dd090ceb7dded8eae598f0532e59513b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff814010dd090ceb7dded8eae598f0532e59513b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff814010dd090ceb7dded8eae598f0532e59513b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff814010dd090ceb7dded8eae598f0532e59513b/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19416210b37db0584cd0b3f3b3961324b8973d25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19416210b37db0584cd0b3f3b3961324b8973d25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19416210b37db0584cd0b3f3b3961324b8973d25"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "2f44038f514a392dbff43de5848d5be68b06212f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff814010dd090ceb7dded8eae598f0532e59513b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff814010dd090ceb7dded8eae598f0532e59513b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff814010dd090ceb7dded8eae598f0532e59513b", "patch": "@@ -1,3 +1,9 @@\n+2018-02-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl-optimization/84157\n+\t* combine.c (change_zero_ext): Use REG_P predicate in\n+\tfront of HARD_REGISTER_P predicate.\n+\n 2018-02-01  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.c (avr_option_override): Move disabling of"}, {"sha": "a9929f2a3e2d988d1388213bc932eb1d6a4b4184", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff814010dd090ceb7dded8eae598f0532e59513b/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff814010dd090ceb7dded8eae598f0532e59513b/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=ff814010dd090ceb7dded8eae598f0532e59513b", "patch": "@@ -11483,7 +11483,7 @@ change_zero_ext (rtx pat)\n \n \t  if (mode != inner_mode)\n \t    {\n-\t      if (HARD_REGISTER_P (x)\n+\t      if (REG_P (x) && HARD_REGISTER_P (x)\n \t\t  && !can_change_dest_mode (x, 0, mode))\n \t\tcontinue;\n \n@@ -11501,7 +11501,7 @@ change_zero_ext (rtx pat)\n \t  x = SUBREG_REG (XEXP (x, 0));\n \t  if (GET_MODE (x) != mode)\n \t    {\n-\t      if (HARD_REGISTER_P (x)\n+\t      if (REG_P (x) && HARD_REGISTER_P (x)\n \t\t  && !can_change_dest_mode (x, 0, mode))\n \t\tcontinue;\n "}]}