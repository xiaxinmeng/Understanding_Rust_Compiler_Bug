{"sha": "e379122d1f078d230514ff862c4f9053c2898af4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM3OTEyMmQxZjA3OGQyMzA1MTRmZjg2MmM0ZjkwNTNjMjg5OGFmNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-05-29T12:01:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-05-29T12:01:26Z"}, "message": "tree-cfg.c (verify_gimple_assign_unary): Add checking for VEC_UNPACK_*_EXPR.\n\n\t* tree-cfg.c (verify_gimple_assign_unary): Add checking for\n\tVEC_UNPACK_*_EXPR.\n\t(verify_gimple_assign_binary): Check TYPE_VECTOR_SUBPARTS for\n\tVEC_PACK_*_EXPR.\n\nFrom-SVN: r260894", "tree": {"sha": "2e775f122d97f10e38b00212892c83eee50f1aec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e775f122d97f10e38b00212892c83eee50f1aec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e379122d1f078d230514ff862c4f9053c2898af4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e379122d1f078d230514ff862c4f9053c2898af4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e379122d1f078d230514ff862c4f9053c2898af4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e379122d1f078d230514ff862c4f9053c2898af4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1bda738bab8193f0fb4551672d3be928d2015cd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bda738bab8193f0fb4551672d3be928d2015cd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bda738bab8193f0fb4551672d3be928d2015cd2"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "2a3094b216424039ac366aee5ceb221c9191ed2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e379122d1f078d230514ff862c4f9053c2898af4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e379122d1f078d230514ff862c4f9053c2898af4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e379122d1f078d230514ff862c4f9053c2898af4", "patch": "@@ -1,5 +1,10 @@\n 2018-05-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* tree-cfg.c (verify_gimple_assign_unary): Add checking for\n+\tVEC_UNPACK_*_EXPR.\n+\t(verify_gimple_assign_binary): Check TYPE_VECTOR_SUBPARTS for\n+\tVEC_PACK_*_EXPR.\n+\n \tPR target/85918\n \t* tree.def (VEC_UNPACK_FIX_TRUNC_HI_EXPR, VEC_UNPACK_FIX_TRUNC_LO_EXPR,\n \tVEC_PACK_FLOAT_EXPR): New tree codes."}, {"sha": "4a1b2bef5705a3049378b6d1253456c72e10e771", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 37, "deletions": 3, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e379122d1f078d230514ff862c4f9053c2898af4/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e379122d1f078d230514ff862c4f9053c2898af4/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=e379122d1f078d230514ff862c4f9053c2898af4", "patch": "@@ -3678,7 +3678,37 @@ verify_gimple_assign_unary (gassign *stmt)\n     case VEC_UNPACK_FLOAT_LO_EXPR:\n     case VEC_UNPACK_FIX_TRUNC_HI_EXPR:\n     case VEC_UNPACK_FIX_TRUNC_LO_EXPR:\n-      /* FIXME.  */\n+      if (TREE_CODE (rhs1_type) != VECTOR_TYPE\n+          || TREE_CODE (lhs_type) != VECTOR_TYPE\n+          || (!INTEGRAL_TYPE_P (TREE_TYPE (lhs_type))\n+\t      && !SCALAR_FLOAT_TYPE_P (TREE_TYPE (lhs_type)))\n+          || (!INTEGRAL_TYPE_P (TREE_TYPE (rhs1_type))\n+\t      && !SCALAR_FLOAT_TYPE_P (TREE_TYPE (rhs1_type)))\n+\t  || ((rhs_code == VEC_UNPACK_HI_EXPR\n+\t       || rhs_code == VEC_UNPACK_LO_EXPR)\n+\t      && (INTEGRAL_TYPE_P (TREE_TYPE (lhs_type))\n+\t\t  != INTEGRAL_TYPE_P (TREE_TYPE (rhs1_type))))\n+\t  || ((rhs_code == VEC_UNPACK_FLOAT_HI_EXPR\n+\t       || rhs_code == VEC_UNPACK_FLOAT_LO_EXPR)\n+\t      && (INTEGRAL_TYPE_P (TREE_TYPE (lhs_type))\n+\t\t  || SCALAR_FLOAT_TYPE_P (TREE_TYPE (rhs1_type))))\n+\t  || ((rhs_code == VEC_UNPACK_FIX_TRUNC_HI_EXPR\n+\t       || rhs_code == VEC_UNPACK_FIX_TRUNC_LO_EXPR)\n+\t      && (INTEGRAL_TYPE_P (TREE_TYPE (rhs1_type))\n+\t\t  || SCALAR_FLOAT_TYPE_P (TREE_TYPE (lhs_type))))\n+\t  || (maybe_ne (GET_MODE_SIZE (element_mode (lhs_type)),\n+\t\t\t2 * GET_MODE_SIZE (element_mode (rhs1_type)))\n+\t      && (!VECTOR_BOOLEAN_TYPE_P (lhs_type)\n+\t\t  || !VECTOR_BOOLEAN_TYPE_P (rhs1_type)))\n+\t  || maybe_ne (2 * TYPE_VECTOR_SUBPARTS (lhs_type),\n+\t\t       TYPE_VECTOR_SUBPARTS (rhs1_type)))\n+\t{\n+\t  error (\"type mismatch in vector unpack expression\");\n+\t  debug_generic_expr (lhs_type);\n+\t  debug_generic_expr (rhs1_type);\n+\t  return true;\n+        }\n+\n       return false;\n \n     case NEGATE_EXPR:\n@@ -3993,7 +4023,9 @@ verify_gimple_assign_binary (gassign *stmt)\n \t\t     == INTEGRAL_TYPE_P (TREE_TYPE (lhs_type))))\n \t    || !types_compatible_p (rhs1_type, rhs2_type)\n \t    || maybe_ne (GET_MODE_SIZE (element_mode (rhs1_type)),\n-\t\t\t 2 * GET_MODE_SIZE (element_mode (lhs_type))))\n+\t\t\t 2 * GET_MODE_SIZE (element_mode (lhs_type)))\n+\t    || maybe_ne (2 * TYPE_VECTOR_SUBPARTS (rhs1_type),\n+\t\t\t TYPE_VECTOR_SUBPARTS (lhs_type)))\n           {\n             error (\"type mismatch in vector pack expression\");\n             debug_generic_expr (lhs_type);\n@@ -4012,7 +4044,9 @@ verify_gimple_assign_binary (gassign *stmt)\n \t  || !SCALAR_FLOAT_TYPE_P (TREE_TYPE (lhs_type))\n \t  || !types_compatible_p (rhs1_type, rhs2_type)\n \t  || maybe_ne (GET_MODE_SIZE (element_mode (rhs1_type)),\n-\t\t       2 * GET_MODE_SIZE (element_mode (lhs_type))))\n+\t\t       2 * GET_MODE_SIZE (element_mode (lhs_type)))\n+\t  || maybe_ne (2 * TYPE_VECTOR_SUBPARTS (rhs1_type),\n+\t\t       TYPE_VECTOR_SUBPARTS (lhs_type)))\n \t{\n \t  error (\"type mismatch in vector pack expression\");\n \t  debug_generic_expr (lhs_type);"}]}