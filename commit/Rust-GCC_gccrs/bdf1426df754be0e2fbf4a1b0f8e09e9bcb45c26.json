{"sha": "bdf1426df754be0e2fbf4a1b0f8e09e9bcb45c26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRmMTQyNmRmNzU0YmUwZTJmYmY0YTFiMGY4ZTA5ZTliY2I0NWMyNg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2019-10-24T16:11:42Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2019-10-24T16:11:42Z"}, "message": "[C++ PATCH] Template parm index fix\n\nhttps://gcc.gnu.org/ml/gcc-patches/2019-10/msg01761.html\n\t* pt.c (reduce_template_parm_level): Attach the new TPI to the new\n\tDECL.\n\t(convert_generic_types_to_packs): Pass the copied type to\n\treduce_template_parm_level.\n\nFrom-SVN: r277416", "tree": {"sha": "6f5460988c75d115c933b1dbe83578a1870feced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f5460988c75d115c933b1dbe83578a1870feced"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdf1426df754be0e2fbf4a1b0f8e09e9bcb45c26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf1426df754be0e2fbf4a1b0f8e09e9bcb45c26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdf1426df754be0e2fbf4a1b0f8e09e9bcb45c26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf1426df754be0e2fbf4a1b0f8e09e9bcb45c26/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84d2160d5d1d2fb7bcba2402d20cbfb570b34dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84d2160d5d1d2fb7bcba2402d20cbfb570b34dbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84d2160d5d1d2fb7bcba2402d20cbfb570b34dbd"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "d28eea373d4c5232550571fb1d7fc7d4f5a59a78", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdf1426df754be0e2fbf4a1b0f8e09e9bcb45c26/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdf1426df754be0e2fbf4a1b0f8e09e9bcb45c26/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bdf1426df754be0e2fbf4a1b0f8e09e9bcb45c26", "patch": "@@ -1,3 +1,10 @@\n+2019-10-24  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* pt.c (reduce_template_parm_level): Attach the new TPI to the new\n+\tDECL.\n+\t(convert_generic_types_to_packs): Pass the copied type to\n+\treduce_templatE_parm_level.\n+\n 2019-10-23  Nathan Sidwell  <nathan@acm.org>\n \n \t* cp-tree.c (CPTI_STD_IDENTIFIER): Delete."}, {"sha": "c5675dd8e3f37098b3cc5a051ec0cbb7225ec6ce", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdf1426df754be0e2fbf4a1b0f8e09e9bcb45c26/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdf1426df754be0e2fbf4a1b0f8e09e9bcb45c26/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=bdf1426df754be0e2fbf4a1b0f8e09e9bcb45c26", "patch": "@@ -4429,33 +4429,40 @@ reduce_template_parm_level (tree index, tree type, int levels, tree args,\n       || !same_type_p (type, TREE_TYPE (TEMPLATE_PARM_DESCENDANTS (index))))\n     {\n       tree orig_decl = TEMPLATE_PARM_DECL (index);\n-      tree decl, t;\n \n-      decl = build_decl (DECL_SOURCE_LOCATION (orig_decl),\n-\t\t\t TREE_CODE (orig_decl), DECL_NAME (orig_decl), type);\n+      tree decl = build_decl (DECL_SOURCE_LOCATION (orig_decl),\n+\t\t\t      TREE_CODE (orig_decl), DECL_NAME (orig_decl),\n+\t\t\t      type);\n       TREE_CONSTANT (decl) = TREE_CONSTANT (orig_decl);\n       TREE_READONLY (decl) = TREE_READONLY (orig_decl);\n       DECL_ARTIFICIAL (decl) = 1;\n       SET_DECL_TEMPLATE_PARM_P (decl);\n \n-      t = build_template_parm_index (TEMPLATE_PARM_IDX (index),\n-\t\t\t\t     TEMPLATE_PARM_LEVEL (index) - levels,\n-\t\t\t\t     TEMPLATE_PARM_ORIG_LEVEL (index),\n-\t\t\t\t     decl, type);\n-      TEMPLATE_PARM_DESCENDANTS (index) = t;\n-      TEMPLATE_PARM_PARAMETER_PACK (t)\n+      tree tpi = build_template_parm_index (TEMPLATE_PARM_IDX (index),\n+\t\t\t\t\t    TEMPLATE_PARM_LEVEL (index) - levels,\n+\t\t\t\t\t    TEMPLATE_PARM_ORIG_LEVEL (index),\n+\t\t\t\t\t    decl, type);\n+      TEMPLATE_PARM_DESCENDANTS (index) = tpi;\n+      TEMPLATE_PARM_PARAMETER_PACK (tpi)\n \t= TEMPLATE_PARM_PARAMETER_PACK (index);\n \n \t/* Template template parameters need this.  */\n+      tree inner = decl;\n       if (TREE_CODE (decl) == TEMPLATE_DECL)\n \t{\n-\t  DECL_TEMPLATE_RESULT (decl)\n-\t    = build_decl (DECL_SOURCE_LOCATION (decl),\n-\t\t\t  TYPE_DECL, DECL_NAME (decl), type);\n-\t  DECL_ARTIFICIAL (DECL_TEMPLATE_RESULT (decl)) = true;\n+\t  inner = build_decl (DECL_SOURCE_LOCATION (decl),\n+\t\t\t      TYPE_DECL, DECL_NAME (decl), type);\n+\t  DECL_TEMPLATE_RESULT (decl) = inner;\n+\t  DECL_ARTIFICIAL (inner) = true;\n \t  DECL_TEMPLATE_PARMS (decl) = tsubst_template_parms\n \t    (DECL_TEMPLATE_PARMS (orig_decl), args, complain);\n \t}\n+\n+      /* Attach the TPI to the decl.  */\n+      if (TREE_CODE (inner) == TYPE_DECL)\n+\tTEMPLATE_TYPE_PARM_INDEX (type) = tpi;\n+      else\n+\tDECL_INITIAL (decl) = tpi;\n     }\n \n   return TEMPLATE_PARM_DESCENDANTS (index);\n@@ -28440,7 +28447,7 @@ convert_generic_types_to_packs (tree parm, int start_idx, int end_idx)\n       tree t = copy_type (o);\n       TEMPLATE_TYPE_PARM_INDEX (t)\n \t= reduce_template_parm_level (TEMPLATE_TYPE_PARM_INDEX (o),\n-\t\t\t\t      o, 0, 0, tf_none);\n+\t\t\t\t      t, 0, 0, tf_none);\n       TREE_TYPE (TEMPLATE_TYPE_DECL (t)) = t;\n       TYPE_STUB_DECL (t) = TYPE_NAME (t) = TEMPLATE_TYPE_DECL (t);\n       TYPE_MAIN_VARIANT (t) = t;"}]}