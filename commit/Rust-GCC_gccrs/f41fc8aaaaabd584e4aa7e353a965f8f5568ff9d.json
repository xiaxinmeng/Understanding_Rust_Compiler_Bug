{"sha": "f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQxZmM4YWFhYWFiZDU4NGU0YWE3ZTM1M2E5NjVmOGY1NTY4ZmY5ZA==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2011-11-15T19:06:32Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2011-11-15T19:06:32Z"}, "message": "epiphany.md (mov<mode>cc): Fix code to get mode from CMP_OP1 if CMP_OP0 is VOIDmode.\n\n        * config/epiphany/epiphany.md (mov<mode>cc): Fix code to\n        get mode from CMP_OP1 if CMP_OP0 is VOIDmode.\n\nFrom-SVN: r181388", "tree": {"sha": "cfb83d81f88bbdc579f6bc8e6b7dd4fa29094b34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfb83d81f88bbdc579f6bc8e6b7dd4fa29094b34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76a2c904dff6263556807f1a3e39521bea73f76d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76a2c904dff6263556807f1a3e39521bea73f76d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76a2c904dff6263556807f1a3e39521bea73f76d"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "2f0aedc70f8861b8e6b071d4cfb68973d2779fda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d", "patch": "@@ -1,3 +1,8 @@\n+2011-11-15  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* config/epiphany/epiphany.md (mov<mode>cc): Fix code to\n+\tget mode from CMP_OP1 if CMP_OP0 is VOIDmode.\n+\n 2011-11-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (vec_pack_trunc_v2df): Optimize sequence for AVX."}, {"sha": "7f8f2a952313a3b57fc993f18d044e13d101b1e1", "filename": "gcc/config/epiphany/epiphany.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d/gcc%2Fconfig%2Fepiphany%2Fepiphany.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d/gcc%2Fconfig%2Fepiphany%2Fepiphany.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.md?ref=f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d", "patch": "@@ -1711,7 +1711,7 @@\n \n   cmp_in_mode = GET_MODE (cmp_op0);\n   if (cmp_in_mode == VOIDmode)\n-    cmp_in_mode = GET_MODE (cmp_op0);\n+    cmp_in_mode = GET_MODE (cmp_op1);\n   if (cmp_in_mode == VOIDmode)\n     cmp_in_mode = SImode;\n   /* If the operands are a better match when reversed, swap them now."}]}