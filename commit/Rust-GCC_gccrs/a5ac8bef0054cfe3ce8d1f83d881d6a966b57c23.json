{"sha": "a5ac8bef0054cfe3ce8d1f83d881d6a966b57c23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVhYzhiZWYwMDU0Y2ZlM2NlOGQxZjgzZDg4MWQ2YTk2NmI1N2MyMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-16T12:43:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-16T12:43:33Z"}, "message": "(yylex): Use is_space, not is_hor_space, to find keyword end.\n\n(is_space): New decl.\n(is_hor_space): Removed.\n\nFrom-SVN: r13654", "tree": {"sha": "0ffdfca52b1134a283f27c85e210731a3c7942c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ffdfca52b1134a283f27c85e210731a3c7942c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5ac8bef0054cfe3ce8d1f83d881d6a966b57c23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5ac8bef0054cfe3ce8d1f83d881d6a966b57c23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5ac8bef0054cfe3ce8d1f83d881d6a966b57c23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5ac8bef0054cfe3ce8d1f83d881d6a966b57c23/comments", "author": null, "committer": null, "parents": [{"sha": "14053679673217581ff7e6d37df5af771aa4da19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14053679673217581ff7e6d37df5af771aa4da19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14053679673217581ff7e6d37df5af771aa4da19"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "dd4d16495f026fe82059cdd8cad646af079d9588", "filename": "gcc/cexp.y", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ac8bef0054cfe3ce8d1f83d881d6a966b57c23/gcc%2Fcexp.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ac8bef0054cfe3ce8d1f83d881d6a966b57c23/gcc%2Fcexp.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.y?ref=a5ac8bef0054cfe3ce8d1f83d881d6a966b57c23", "patch": "@@ -153,7 +153,7 @@ static int keyword_parsing = 0;\n static int skip_evaluation;\n \n /* some external tables of character types */\n-extern unsigned char is_idstart[], is_idchar[], is_hor_space[];\n+extern unsigned char is_idstart[], is_idchar[], is_space[];\n \n /* Flag for -pedantic.  */\n extern int pedantic;\n@@ -846,7 +846,7 @@ yylex ()\n \n   if (keyword_parsing) {\n     for (namelen = 0;; namelen++) {\n-      if (is_hor_space[tokstart[namelen]])\n+      if (is_space[tokstart[namelen]])\n \tbreak;\n       if (tokstart[namelen] == '(' || tokstart[namelen] == ')')\n \tbreak;\n@@ -1108,9 +1108,8 @@ main (argc, argv)\n unsigned char is_idchar[256];\n /* table to tell if char can be first char of a c identifier. */\n unsigned char is_idstart[256];\n-/* table to tell if c is horizontal space.  isspace () thinks that\n-   newline is space; this is not a good idea for this program. */\n-unsigned char is_hor_space[256];\n+/* table to tell if c is horizontal or vertical space.  */\n+unsigned char is_space[256];\n \n /*\n  * initialize random junk in the hash table and maybe other places\n@@ -1139,9 +1138,12 @@ initialize_random_junk ()\n   ++is_idchar['$'];\n   ++is_idstart['$'];\n \n-  /* horizontal space table */\n-  ++is_hor_space[' '];\n-  ++is_hor_space['\\t'];\n+  ++is_space[' '];\n+  ++is_space['\\t'];\n+  ++is_space['\\v'];\n+  ++is_space['\\f'];\n+  ++is_space['\\n'];\n+  ++is_space['\\r'];\n }\n \n void"}]}