{"sha": "ccf64c833ffaa36f74940afcdaef57a688bb4dcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NmNjRjODMzZmZhYTM2Zjc0OTQwYWZjZGFlZjU3YTY4OGJiNGRjZg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-09-07T11:57:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-09-07T11:57:57Z"}, "message": "re PR middle-end/33330 (Wrong alias for accessing scalar through array)\n\n2007-09-07  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/33330\n\t* tree-ssa-operands.c (access_can_touch_variable): An access\n\tof the form (*p)[0] can touch a variable of same size.\n\nFrom-SVN: r128240", "tree": {"sha": "0514e97c90603913cf1160e3082b070b0b763294", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0514e97c90603913cf1160e3082b070b0b763294"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccf64c833ffaa36f74940afcdaef57a688bb4dcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccf64c833ffaa36f74940afcdaef57a688bb4dcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccf64c833ffaa36f74940afcdaef57a688bb4dcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccf64c833ffaa36f74940afcdaef57a688bb4dcf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "201b2eadc44a3217be14bed57b979dc4b01a5990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201b2eadc44a3217be14bed57b979dc4b01a5990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/201b2eadc44a3217be14bed57b979dc4b01a5990"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "a63a9e9748d44e01d82bfb7b711b5599109c7f6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccf64c833ffaa36f74940afcdaef57a688bb4dcf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccf64c833ffaa36f74940afcdaef57a688bb4dcf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccf64c833ffaa36f74940afcdaef57a688bb4dcf", "patch": "@@ -1,3 +1,9 @@\n+2007-09-07  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/33330\n+\t* tree-ssa-operands.c (access_can_touch_variable): An access\n+\tof the form (*p)[0] can touch a variable of same size.\n+\n 2007-09-07  Jan Hubicka  <jh@suse.cz>\n \n \t* passes.c (init_optimization_passes): Add simple dce and addressable"}, {"sha": "a3e34ecc766b7d28ff8539edd8bef72c6af4e925", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccf64c833ffaa36f74940afcdaef57a688bb4dcf/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccf64c833ffaa36f74940afcdaef57a688bb4dcf/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=ccf64c833ffaa36f74940afcdaef57a688bb4dcf", "patch": "@@ -1292,6 +1292,15 @@ access_can_touch_variable (tree ref, tree alias, HOST_WIDE_INT offset,\n      }\n      To implement this, we just punt on accesses through union\n      pointers entirely.\n+\n+     Another case we have to allow is accessing a variable\n+     through an array access at offset zero.  This happens from\n+     code generated by the fortran frontend like\n+\n+     char[1:1] & my_char_ref;\n+     char my_char;\n+     my_char_ref_1 = (char[1:1] &) &my_char;\n+     D.874_2 = (*my_char_ref_1)[1]{lb: 1 sz: 1};\n   */\n   else if (ref \n \t   && flag_strict_aliasing\n@@ -1300,6 +1309,14 @@ access_can_touch_variable (tree ref, tree alias, HOST_WIDE_INT offset,\n \t   && base\n \t   && (TREE_CODE (base) != INDIRECT_REF\n \t       || TREE_CODE (TREE_TYPE (base)) != UNION_TYPE)\n+\t   && (TREE_CODE (base) != INDIRECT_REF\n+\t       || TREE_CODE (ref) != ARRAY_REF\n+\t       || offset != 0\n+\t       || (DECL_SIZE (alias)\n+\t\t   && TREE_CODE (DECL_SIZE (alias)) == INTEGER_CST\n+\t\t   && size != -1\n+\t\t   && (unsigned HOST_WIDE_INT)size\n+\t\t      != TREE_INT_CST_LOW (DECL_SIZE (alias))))\n \t   && !AGGREGATE_TYPE_P (TREE_TYPE (alias))\n \t   && TREE_CODE (TREE_TYPE (alias)) != COMPLEX_TYPE\n \t   && !var_ann (alias)->is_heapvar"}]}