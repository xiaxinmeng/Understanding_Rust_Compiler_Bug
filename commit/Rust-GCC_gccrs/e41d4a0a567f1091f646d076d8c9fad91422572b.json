{"sha": "e41d4a0a567f1091f646d076d8c9fad91422572b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQxZDRhMGE1NjdmMTA5MWY2NDZkMDc2ZDhjOWZhZDkxNDIyNTcyYg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-03-16T08:48:54Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-03-16T09:38:55Z"}, "message": "d/dmd: Merge upstream dmd b061bd744\n\nFixes an ICE in the parser, and deprecates a previously allowed style of\nsyntax that deviated from GNU-style extended asm.\n\nReviewed-on: https://github.com/dlang/dmd/pull/10916\n\ngcc/testsuite/ChangeLog:\n\n2020-03-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n\n\t* gdc.dg/asm1.d: Add new test for ICE in asm parser.\n\t* gdc.dg/asm5.d: New test.", "tree": {"sha": "985b53b710a4f8082573b700661dd611860daae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/985b53b710a4f8082573b700661dd611860daae7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e41d4a0a567f1091f646d076d8c9fad91422572b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41d4a0a567f1091f646d076d8c9fad91422572b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e41d4a0a567f1091f646d076d8c9fad91422572b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41d4a0a567f1091f646d076d8c9fad91422572b/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2d3807f580a86ca0bdc2b66aa9b4d2367c77a2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d3807f580a86ca0bdc2b66aa9b4d2367c77a2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d3807f580a86ca0bdc2b66aa9b4d2367c77a2e"}], "stats": {"total": 58, "additions": 54, "deletions": 4}, "files": [{"sha": "6cbc4e37819921ffb7277183ffb7254861cebbc6", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41d4a0a567f1091f646d076d8c9fad91422572b/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41d4a0a567f1091f646d076d8c9fad91422572b/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=e41d4a0a567f1091f646d076d8c9fad91422572b", "patch": "@@ -1,4 +1,4 @@\n-e9420cfbf5cd0cf9e6e398603e009ccc8e14d324\n+b061bd744cb4eb94a7118581387d988d4ec25e97\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "548453321db87bf57ea81545a352ee2886585d41", "filename": "gcc/d/dmd/iasmgcc.c", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41d4a0a567f1091f646d076d8c9fad91422572b/gcc%2Fd%2Fdmd%2Fiasmgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41d4a0a567f1091f646d076d8c9fad91422572b/gcc%2Fd%2Fdmd%2Fiasmgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fiasmgcc.c?ref=e41d4a0a567f1091f646d076d8c9fad91422572b", "patch": "@@ -13,6 +13,7 @@\n \n #include \"scope.h\"\n #include \"declaration.h\"\n+#include \"errors.h\"\n #include \"parse.h\"\n #include \"statement.h\"\n \n@@ -23,8 +24,8 @@ Statement *semantic(Statement *s, Scope *sc);\n  * Parse list of extended asm input or output operands.\n  * Grammar:\n  *      | Operands:\n- *      |     SymbolicName(opt) StringLiteral AssignExpression\n- *      |     SymbolicName(opt) StringLiteral AssignExpression , Operands\n+ *      |     SymbolicName(opt) StringLiteral ( AssignExpression )\n+ *      |     SymbolicName(opt) StringLiteral ( AssignExpression ), Operands\n  *      |\n  *      | SymbolicName:\n  *      |     [ Identifier ]\n@@ -54,7 +55,9 @@ static int parseExtAsmOperands(Parser *p, GccAsmStatement *s)\n             case TOKlbracket:\n                 if (p->peekNext() == TOKidentifier)\n                 {\n+                    // Skip over openings `[`\n                     p->nextToken();\n+                    // Store the symbolic name\n                     name = p->token.ident;\n                     p->nextToken();\n                 }\n@@ -63,12 +66,32 @@ static int parseExtAsmOperands(Parser *p, GccAsmStatement *s)\n                     p->error(s->loc, \"expected identifier after `[`\");\n                     goto Lerror;\n                 }\n+                // Look for closing `]`\n                 p->check(TOKrbracket);\n+                // Look for the string literal and fall through\n+                if (p->token.value != TOKstring)\n+                    goto Ldefault;\n                 // fall through\n \n             case TOKstring:\n                 constraint = p->parsePrimaryExp();\n-                arg = p->parseAssignExp();\n+                // @@@DEPRECATED@@@\n+                // Old parser allowed omitting parentheses around the expression.\n+                // Deprecated in 2.091. Can be made permanent error after 2.100\n+                if (p->token.value != TOKlparen)\n+                {\n+                    arg = p->parseAssignExp();\n+                    deprecation(arg->loc, \"`%s` must be surrounded by parentheses\", arg->toChars());\n+                }\n+                else\n+                {\n+                    // Look for the opening `(`\n+                    p->check(TOKlparen);\n+                    // Parse the assign expression\n+                    arg = p->parseAssignExp();\n+                    // Look for the closing `)`\n+                    p->check(TOKrparen);\n+                }\n \n                 if (!s->args)\n                 {\n@@ -86,6 +109,7 @@ static int parseExtAsmOperands(Parser *p, GccAsmStatement *s)\n                 break;\n \n             default:\n+            Ldefault:\n                 p->error(\"expected constant string constraint for operand, not `%s`\",\n                         p->token.toChars());\n                 goto Lerror;"}, {"sha": "0f87a04d10017fdf740207a0ed79a30f66b5d460", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41d4a0a567f1091f646d076d8c9fad91422572b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41d4a0a567f1091f646d076d8c9fad91422572b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e41d4a0a567f1091f646d076d8c9fad91422572b", "patch": "@@ -1,3 +1,8 @@\n+2020-03-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* gdc.dg/asm1.d: Add new test for ICE in asm parser.\n+\t* gdc.dg/asm5.d: New test.\n+\n 2020-03-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/94167"}, {"sha": "3fcfd6a58c11c8a06445682f76ba5d1eec3a9e4b", "filename": "gcc/testsuite/gdc.dg/asm1.d", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41d4a0a567f1091f646d076d8c9fad91422572b/gcc%2Ftestsuite%2Fgdc.dg%2Fasm1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41d4a0a567f1091f646d076d8c9fad91422572b/gcc%2Ftestsuite%2Fgdc.dg%2Fasm1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fasm1.d?ref=e41d4a0a567f1091f646d076d8c9fad91422572b", "patch": "@@ -29,6 +29,15 @@ void parse3()\n     // { dg-error \"found 'EOF' when expecting ';'\" \"\" { target *-*-* } .-4 }\n }\n \n+void parse4()\n+{\n+    int expr;\n+    asm\n+    {\n+        \"%name\" : [name] string (expr); // { dg-error \"expected constant string constraint for operand, not 'string'\" }\n+    }\n+}\n+\n void semantic1()\n {\n     {"}, {"sha": "b525a2131ce100e57881a9ad35509386c8e1814a", "filename": "gcc/testsuite/gdc.dg/asm5.d", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41d4a0a567f1091f646d076d8c9fad91422572b/gcc%2Ftestsuite%2Fgdc.dg%2Fasm5.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41d4a0a567f1091f646d076d8c9fad91422572b/gcc%2Ftestsuite%2Fgdc.dg%2Fasm5.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fasm5.d?ref=e41d4a0a567f1091f646d076d8c9fad91422572b", "patch": "@@ -0,0 +1,12 @@\n+// https://issues.dlang.org/show_bug.cgi?id=20593\n+// { dg-do compile }\n+// { dg-options \"-Wall -Wdeprecated -Werror\" }\n+module asm5;\n+\n+void test(int a)\n+{\n+    asm\n+    {\n+        \"cpuid\" : : \"a\" a;  // { dg-error \"'a' must be surrounded by parentheses\" }\n+    }\n+}"}]}