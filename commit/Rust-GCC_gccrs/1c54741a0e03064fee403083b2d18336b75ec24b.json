{"sha": "1c54741a0e03064fee403083b2d18336b75ec24b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM1NDc0MWEwZTAzMDY0ZmVlNDAzMDgzYjJkMTgzMzZiNzVlYzI0Yg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2006-01-03T22:01:10Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2006-01-03T22:01:10Z"}, "message": "re PR fortran/25101 ([4.1] Zero stride allowed in FORALL:s)\n\n2006-01-03  Steven G. Kargl  <kargls@comcast.net>\n\n\tPR fortran/25101\n\t* resolve.c (resolve_forall_iterators):  Check for scalar variables;\n\tCheck stride is nonzero.\n\n\t* gfortran.dg/forall_2.f90:  New test.\n\nFrom-SVN: r109288", "tree": {"sha": "b29a597b749faea1934c2365795c0207f637b034", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b29a597b749faea1934c2365795c0207f637b034"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c54741a0e03064fee403083b2d18336b75ec24b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c54741a0e03064fee403083b2d18336b75ec24b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c54741a0e03064fee403083b2d18336b75ec24b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c54741a0e03064fee403083b2d18336b75ec24b/comments", "author": null, "committer": null, "parents": [{"sha": "6b2acaad348e14fd8285f32cac639fcc3cf2d42c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2acaad348e14fd8285f32cac639fcc3cf2d42c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b2acaad348e14fd8285f32cac639fcc3cf2d42c"}], "stats": {"total": 51, "additions": 40, "deletions": 11}, "files": [{"sha": "a1aec2588dff5d10a1df2d9c3b03426b90178368", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c54741a0e03064fee403083b2d18336b75ec24b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c54741a0e03064fee403083b2d18336b75ec24b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1c54741a0e03064fee403083b2d18336b75ec24b", "patch": "@@ -1,3 +1,9 @@\n+2006-01-03  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR fortran/25101\n+\t* resolve.c (resolve_forall_iterators):  Check for scalar variables;\n+\tCheck stride is nonzero.\n+\n 2006-01-02  Steven G. Kargl  <kargls@comcast.net>\n \n \tPR fortran/24640"}, {"sha": "d0b7ab97acaf5d478d6e73bdbe384434096188b7", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c54741a0e03064fee403083b2d18336b75ec24b/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c54741a0e03064fee403083b2d18336b75ec24b/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=1c54741a0e03064fee403083b2d18336b75ec24b", "patch": "@@ -2509,7 +2509,9 @@ gfc_resolve_iterator (gfc_iterator * iter, bool real_ok)\n }\n \n \n-/* Resolve a list of FORALL iterators.  */\n+/* Resolve a list of FORALL iterators.  The FORALL index-name is constrained\n+   to be a scalar INTEGER variable.  The subscripts and stride are scalar\n+   INTEGERs, and if stride is a constant it must be nonzero.  */\n \n static void\n resolve_forall_iterators (gfc_forall_iterator * iter)\n@@ -2518,28 +2520,35 @@ resolve_forall_iterators (gfc_forall_iterator * iter)\n   while (iter)\n     {\n       if (gfc_resolve_expr (iter->var) == SUCCESS\n-\t  && iter->var->ts.type != BT_INTEGER)\n-\tgfc_error (\"FORALL Iteration variable at %L must be INTEGER\",\n+\t  && (iter->var->ts.type != BT_INTEGER || iter->var->rank != 0))\n+\tgfc_error (\"FORALL index-name at %L must be a scalar INTEGER\",\n \t\t   &iter->var->where);\n \n       if (gfc_resolve_expr (iter->start) == SUCCESS\n-\t  && iter->start->ts.type != BT_INTEGER)\n-\tgfc_error (\"FORALL start expression at %L must be INTEGER\",\n+\t  && (iter->start->ts.type != BT_INTEGER || iter->start->rank != 0))\n+\tgfc_error (\"FORALL start expression at %L must be a scalar INTEGER\",\n \t\t   &iter->start->where);\n       if (iter->var->ts.kind != iter->start->ts.kind)\n \tgfc_convert_type (iter->start, &iter->var->ts, 2);\n \n       if (gfc_resolve_expr (iter->end) == SUCCESS\n-\t  && iter->end->ts.type != BT_INTEGER)\n-\tgfc_error (\"FORALL end expression at %L must be INTEGER\",\n+\t  && (iter->end->ts.type != BT_INTEGER || iter->end->rank != 0))\n+\tgfc_error (\"FORALL end expression at %L must be a scalar INTEGER\",\n \t\t   &iter->end->where);\n       if (iter->var->ts.kind != iter->end->ts.kind)\n \tgfc_convert_type (iter->end, &iter->var->ts, 2);\n \n-      if (gfc_resolve_expr (iter->stride) == SUCCESS\n-\t  && iter->stride->ts.type != BT_INTEGER)\n-\tgfc_error (\"FORALL Stride expression at %L must be INTEGER\",\n-\t\t   &iter->stride->where);\n+      if (gfc_resolve_expr (iter->stride) == SUCCESS)\n+\t{\n+\t  if (iter->stride->ts.type != BT_INTEGER || iter->stride->rank != 0)\n+\t    gfc_error (\"FORALL stride expression at %L must be a scalar %s\",\n+\t\t        &iter->stride->where, \"INTEGER\");\n+\n+\t  if (iter->stride->expr_type == EXPR_CONSTANT\n+\t      && mpz_cmp_ui(iter->stride->value.integer, 0) == 0)\n+\t    gfc_error (\"FORALL stride expression at %L cannot be zero\",\n+\t\t       &iter->stride->where);\n+\t}\n       if (iter->var->ts.kind != iter->stride->ts.kind)\n \tgfc_convert_type (iter->stride, &iter->var->ts, 2);\n "}, {"sha": "9d4355caa65c472814696850805358e968faac78", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c54741a0e03064fee403083b2d18336b75ec24b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c54741a0e03064fee403083b2d18336b75ec24b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c54741a0e03064fee403083b2d18336b75ec24b", "patch": "@@ -1,3 +1,8 @@\n+2006-01-03  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR fortran/25101\n+\t* gfortran.dg/forall_2.f90:  New test.\n+\n 2006-01-03  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* g++.dg/abi/thunk3.C, g++.dg/abi/thunk4.C: Gate on"}, {"sha": "223c2cea79e810557c170249e7c3202e51b8d6c0", "filename": "gcc/testsuite/gfortran.dg/forall_2.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c54741a0e03064fee403083b2d18336b75ec24b/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c54741a0e03064fee403083b2d18336b75ec24b/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_2.f90?ref=1c54741a0e03064fee403083b2d18336b75ec24b", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/25101  -- Stride must be nonzero.\n+program forall_2\n+   integer :: a(10),j(2),i\n+   forall(i=1:2:0)  ! { dg-error \"stride expression at\" }\n+     a(i)=1\n+   end forall\n+end program forall_2\n+"}]}