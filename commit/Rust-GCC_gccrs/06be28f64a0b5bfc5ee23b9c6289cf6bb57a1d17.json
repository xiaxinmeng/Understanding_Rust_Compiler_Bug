{"sha": "06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "node_id": "C_kwDOANBUbNoAKDA2YmUyOGY2NGEwYjViZmM1ZWUyM2I5YzYyODljZjZiYjU3YTFkMTc", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-11-23T00:16:27Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-11-23T00:16:27Z"}, "message": "Daily bump.", "tree": {"sha": "50cea6061af16a52829cee621afc1929dbfa2436", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50cea6061af16a52829cee621afc1929dbfa2436"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/comments", "author": null, "committer": null, "parents": [{"sha": "1df539fd197ef2427bdfa27156b92d2a857af949", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1df539fd197ef2427bdfa27156b92d2a857af949", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1df539fd197ef2427bdfa27156b92d2a857af949"}], "stats": {"total": 139, "additions": 138, "deletions": 1}, "files": [{"sha": "b70adbd8cb7d2fc5cef9b2c2bd1330fc5171d5e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "patch": "@@ -1,3 +1,39 @@\n+2021-11-22  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR tree-optimization/98953\n+\tPR tree-optimization/103345\n+\t* gimple-ssa-store-merging.c (find_bswap_or_nop_1): Handle\n+\tBIT_XOR_EXPR and PLUS_EXPR the same as BIT_IOR_EXPR.\n+\t(pass_optimize_bswap::execute): Likewise.\n+\n+2021-11-22  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Remove duplicate documentation for 3 params.\n+\n+2021-11-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103351\n+\t* tree-ssa-dce.c (sort_phi_args): Sort after e->dest_idx as\n+\tsecond key.\n+\n+2021-11-22  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/103275\n+\t* config/i386/constraints.md (Bk): New\n+\tdefine_memory_constraint.\n+\t* config/i386/i386-protos.h (ix86_gpr_tls_address_pattern_p):\n+\tDeclare.\n+\t* config/i386/i386.c (ix86_gpr_tls_address_pattern_p): New\n+\tfunction.\n+\t* config/i386/i386.md (*movsi_internal): Don't allow\n+\tmask/sse/mmx move in TLS code sequences.\n+\t(*movdi_internal): Ditto.\n+\n+2021-11-22  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* config/xtensa/xtensa.md (movdi_internal, movdf_internal): Fix split\n+\tcondition.\n+\n 2021-11-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/101180"}, {"sha": "e45f2d04f4ec66424e58bcf58f18f6a706fd24d5", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "patch": "@@ -1 +1 @@\n-20211122\n+20211123"}, {"sha": "836ab867fa4c0f78c1e580ee5e54a5c811be5cc5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "patch": "@@ -1,3 +1,27 @@\n+2021-11-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* typeck.c (build_x_unary_op): Set address location.\n+\t(convert_member_func_to_ptr): Handle location wrapper.\n+\t* pt.c (convert_nontype_argument): Likewise.\n+\n+2021-11-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* typeck.c (check_return_expr): Only strip location wrapper during\n+\tNRV handling.\n+\n+2021-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/101731\n+\t* parser.c (cp_parser_late_parsing_oacc_routine): Set\n+\tparser->oacc_routine->fndecl_seen here, rather than ...\n+\t(cp_finalize_oacc_routine): ... here.  Don't error if\n+\tparser->oacc_routine->fndecl_seen is set for FUNCTION_DECLs.\n+\n+2021-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/103349\n+\t* constexpr.c (potential_constant_expression_1): Punt on OMP_MASKED.\n+\n 2021-11-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/101180"}, {"sha": "cdf542eb40d7ddea52b2aac486f2a38853563ea7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "patch": "@@ -1,3 +1,49 @@\n+2021-11-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/template/crash106.C: Adjust.\n+\t* g++.dg/diagnostic/ptrtomem3.C: New test.\n+\n+2021-11-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/pr65327.C: Adjust location.\n+\t* g++.dg/cpp23/constexpr-nonlit4.C: Likewise.\n+\t* g++.dg/cpp23/constexpr-nonlit5.C: Likewise.\n+\t* g++.dg/cpp2a/constexpr-init1.C: Likewise.\n+\n+2021-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR preprocessor/103165\n+\t* c-c++-common/gomp/pragma-3.c: New test.\n+\t* c-c++-common/gomp/pragma-4.c: New test.\n+\t* c-c++-common/gomp/pragma-5.c: New test.\n+\n+2021-11-22  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR tree-optimization/98953\n+\tPR tree-optimization/103345\n+\t* gcc.dg/tree-ssa/pr98953.c: New test case.\n+\t* gcc.dg/tree-ssa/pr103345.c: New test case.\n+\n+2021-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/101731\n+\t* c-c++-common/goacc/routine-6.c: New test.\n+\n+2021-11-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103351\n+\t* g++.dg/torture/pr103351.C: New testcase.\n+\n+2021-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/103349\n+\t* g++.dg/gomp/masked-1.C: New test.\n+\n+2021-11-22  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr103275.c: New test.\n+\n 2021-11-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/101180"}, {"sha": "7ca41e99bf49c73807a9ef1f0b2de78743c5c04f", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "patch": "@@ -1,3 +1,12 @@\n+2021-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR preprocessor/103165\n+\t* internal.h (struct lexer_state): Add ignore__Pragma field.\n+\t* macro.c (builtin_macro): Don't interpret _Pragma if\n+\tpfile->state.ignore__Pragma.\n+\t(expand_arg): Temporarily set pfile->state.ignore__Pragma to 1.\n+\n 2021-11-17  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR preprocessor/103026"}, {"sha": "adeff81653e54f408f619af6bb4109f5d99ce585", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "patch": "@@ -1,3 +1,20 @@\n+2021-11-22  Florian Weimer  <fweimer@redhat.com>\n+\n+\t* unwind-dw2-fde-dip.c (NEED_DBASE_MEMBER): Define.\n+\t(struct unw_eh_callback_data): Make dbase member conditional.\n+\t(unw_eh_callback_data_dbase): New function.\n+\t(base_from_cb_data): Simplify for the non-dbase case.\n+\t(_Unwind_IteratePhdrCallback): Adjust.\n+\t(_Unwind_Find_FDE): Likewise.\n+\n+2021-11-22  Florian Weimer  <fweimer@redhat.com>\n+\n+\t* unwind-dw2-fde-dip.c (struct unw_eh_callback_data): Remove\n+\ttbase member.\n+\t(base_from_cb_data): Adjust.\n+\t(_Unwind_IteratePhdrCallback): Likewise.\n+\t(_Unwind_Find_FDE): Likewise.\n+\n 2021-11-19  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config.host: Add weak emutls crt to the extra_parts."}, {"sha": "e6282b3bcd7cb84b71cb00adc0837c0fb329702a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "patch": "@@ -1,3 +1,8 @@\n+2021-11-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/c++config (_GLIBCXX14_DEPRECATED): Fix condition\n+\tchecking for C++14.\n+\n 2021-11-20  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/bits/erase_if.h (__erase_nodes_if): Add _UnsafeContainer template"}]}