{"sha": "b47f38a520f61eccd0bb16387d948f0d5eca017d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ3ZjM4YTUyMGY2MWVjY2QwYmIxNjM4N2Q5NDhmMGQ1ZWNhMDE3ZA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-22T18:03:59Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-22T18:03:59Z"}, "message": "jump.c: Use rtx_insn in a few places (also touches rtl.h and cfgexpand.c)\n\ngcc/\n\t* rtl.h (rebuild_jump_labels): Strengthen param \"f\" from rtx to\n\trtx_insn *.\n\t(rebuild_jump_labels_chain): Likewise for param \"chain\".\n\n\t* cfgexpand.c (pass_expand::execute): Add checked cast to\n\trtx_insn * when calling rebuild_jump_labels_chain in region where\n\twe know e->insns.r is non-NULL.\n\n\t* jump.c (rebuild_jump_labels_1): Strengthen param \"f\" from rtx to\n\trtx_insn *.\n\t(rebuild_jump_labels): Likewise.\n\t(rebuild_jump_labels_chain): Likewise for param \"chain\".\n\t(cleanup_barriers): Likewise for locals \"insn\", \"next\", \"prev\".\n\t(init_label_info): Likewise for param \"f\".\n\t(maybe_propagate_label_ref): Likewise for params \"jump_insn\",\n\t\"prev_nonjump_insn\".\n\t(mark_all_labels): Likewise for param \"f\" and locals \"insn\",\n\t\"prev_nonjump_insn\".\n\nFrom-SVN: r214341", "tree": {"sha": "0f66caa868d223dc9556765ee61daeb9af06c1f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f66caa868d223dc9556765ee61daeb9af06c1f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b47f38a520f61eccd0bb16387d948f0d5eca017d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47f38a520f61eccd0bb16387d948f0d5eca017d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b47f38a520f61eccd0bb16387d948f0d5eca017d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47f38a520f61eccd0bb16387d948f0d5eca017d/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "070a1983b3abcec2f457443961ae64d97975cfd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/070a1983b3abcec2f457443961ae64d97975cfd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/070a1983b3abcec2f457443961ae64d97975cfd4"}], "stats": {"total": 55, "additions": 38, "deletions": 17}, "files": [{"sha": "505e8ed29087aa861ad463563f505b286cc8bf95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47f38a520f61eccd0bb16387d948f0d5eca017d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47f38a520f61eccd0bb16387d948f0d5eca017d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b47f38a520f61eccd0bb16387d948f0d5eca017d", "patch": "@@ -1,3 +1,24 @@\n+2014-08-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* rtl.h (rebuild_jump_labels): Strengthen param \"f\" from rtx to\n+\trtx_insn *.\n+\t(rebuild_jump_labels_chain): Likewise for param \"chain\".\n+\n+\t* cfgexpand.c (pass_expand::execute): Add checked cast to\n+\trtx_insn * when calling rebuild_jump_labels_chain in region where\n+\twe know e->insns.r is non-NULL.\n+\n+\t* jump.c (rebuild_jump_labels_1): Strengthen param \"f\" from rtx to\n+\trtx_insn *.\n+\t(rebuild_jump_labels): Likewise.\n+\t(rebuild_jump_labels_chain): Likewise for param \"chain\".\n+\t(cleanup_barriers): Likewise for locals \"insn\", \"next\", \"prev\".\n+\t(init_label_info): Likewise for param \"f\".\n+\t(maybe_propagate_label_ref): Likewise for params \"jump_insn\",\n+\t\"prev_nonjump_insn\".\n+\t(mark_all_labels): Likewise for param \"f\" and locals \"insn\",\n+\t\"prev_nonjump_insn\".\n+\n 2014-08-22  David Malcolm  <dmalcolm@redhat.com>\n \n \t* ira-int.h (struct ira_allocno_copy): Strengthen field \"insn\""}, {"sha": "16762941a35199ffc0b6778901fe2b068aa5ca99", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47f38a520f61eccd0bb16387d948f0d5eca017d/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47f38a520f61eccd0bb16387d948f0d5eca017d/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=b47f38a520f61eccd0bb16387d948f0d5eca017d", "patch": "@@ -5865,7 +5865,7 @@ pass_expand::execute (function *fun)\n \t{\n \t  if (e->insns.r)\n \t    {\n-\t      rebuild_jump_labels_chain (e->insns.r);\n+\t      rebuild_jump_labels_chain (as_a <rtx_insn *> (e->insns.r));\n \t      /* Put insns after parm birth, but before\n \t\t NOTE_INSNS_FUNCTION_BEG.  */\n \t      if (e->src == ENTRY_BLOCK_PTR_FOR_FN (fun)"}, {"sha": "cc0eb02852705e24a4471ae56865b989d9776e55", "filename": "gcc/jump.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47f38a520f61eccd0bb16387d948f0d5eca017d/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47f38a520f61eccd0bb16387d948f0d5eca017d/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=b47f38a520f61eccd0bb16387d948f0d5eca017d", "patch": "@@ -62,8 +62,8 @@ along with GCC; see the file COPYING3.  If not see\n    or even change what is live at any point.\n    So perhaps let combiner do it.  */\n \n-static void init_label_info (rtx);\n-static void mark_all_labels (rtx);\n+static void init_label_info (rtx_insn *);\n+static void mark_all_labels (rtx_insn *);\n static void mark_jump_label_1 (rtx, rtx, bool, bool);\n static void mark_jump_label_asm (rtx, rtx);\n static void redirect_exp_1 (rtx *, rtx, rtx, rtx);\n@@ -72,7 +72,7 @@ static int returnjump_p_1 (rtx *, void *);\n \f\n /* Worker for rebuild_jump_labels and rebuild_jump_labels_chain.  */\n static void\n-rebuild_jump_labels_1 (rtx f, bool count_forced)\n+rebuild_jump_labels_1 (rtx_insn *f, bool count_forced)\n {\n   rtx insn;\n \n@@ -96,7 +96,7 @@ rebuild_jump_labels_1 (rtx f, bool count_forced)\n    instructions and jumping insns that have labels as operands\n    (e.g. cbranchsi4).  */\n void\n-rebuild_jump_labels (rtx f)\n+rebuild_jump_labels (rtx_insn *f)\n {\n   rebuild_jump_labels_1 (f, true);\n }\n@@ -105,7 +105,7 @@ rebuild_jump_labels (rtx f)\n    forced_labels.  It can be used on insn chains that aren't the \n    main function chain.  */\n void\n-rebuild_jump_labels_chain (rtx chain)\n+rebuild_jump_labels_chain (rtx_insn *chain)\n {\n   rebuild_jump_labels_1 (chain, false);\n }\n@@ -121,20 +121,20 @@ rebuild_jump_labels_chain (rtx chain)\n static unsigned int\n cleanup_barriers (void)\n {\n-  rtx insn;\n+  rtx_insn *insn;\n   for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n     {\n       if (BARRIER_P (insn))\n \t{\n-\t  rtx prev = prev_nonnote_insn (insn);\n+\t  rtx_insn *prev = prev_nonnote_insn (insn);\n \t  if (!prev)\n \t    continue;\n \n \t  if (CALL_P (prev))\n \t    {\n \t      /* Make sure we do not split a call and its corresponding\n \t\t CALL_ARG_LOCATION note.  */\n-\t      rtx next = NEXT_INSN (prev);\n+\t      rtx_insn *next = NEXT_INSN (prev);\n \n \t      if (NOTE_P (next)\n \t\t  && NOTE_KIND (next) == NOTE_INSN_CALL_ARG_LOCATION)\n@@ -191,9 +191,9 @@ make_pass_cleanup_barriers (gcc::context *ctxt)\n    notes whose labels don't occur in the insn any more.  */\n \n static void\n-init_label_info (rtx f)\n+init_label_info (rtx_insn *f)\n {\n-  rtx insn;\n+  rtx_insn *insn;\n \n   for (insn = f; insn; insn = NEXT_INSN (insn))\n     {\n@@ -229,7 +229,7 @@ init_label_info (rtx f)\n    load into a jump_insn that uses it.  */\n \n static void\n-maybe_propagate_label_ref (rtx jump_insn, rtx prev_nonjump_insn)\n+maybe_propagate_label_ref (rtx_insn *jump_insn, rtx_insn *prev_nonjump_insn)\n {\n   rtx label_note, pc, pc_src;\n \n@@ -277,9 +277,9 @@ maybe_propagate_label_ref (rtx jump_insn, rtx prev_nonjump_insn)\n    Combine consecutive labels, and count uses of labels.  */\n \n static void\n-mark_all_labels (rtx f)\n+mark_all_labels (rtx_insn *f)\n {\n-  rtx insn;\n+  rtx_insn *insn;\n \n   if (current_ir_type () == IR_RTL_CFGLAYOUT)\n     {\n@@ -309,7 +309,7 @@ mark_all_labels (rtx f)\n     }\n   else\n     {\n-      rtx prev_nonjump_insn = NULL;\n+      rtx_insn *prev_nonjump_insn = NULL;\n       for (insn = f; insn; insn = NEXT_INSN (insn))\n \t{\n \t  if (INSN_DELETED_P (insn))"}, {"sha": "acd0be954654f0cb3dde7a0878a39aa8c8bd0cb6", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47f38a520f61eccd0bb16387d948f0d5eca017d/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47f38a520f61eccd0bb16387d948f0d5eca017d/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=b47f38a520f61eccd0bb16387d948f0d5eca017d", "patch": "@@ -3056,8 +3056,8 @@ extern unsigned int reg_or_subregno (const_rtx);\n extern int redirect_jump_1 (rtx, rtx);\n extern void redirect_jump_2 (rtx, rtx, rtx, int, int);\n extern int redirect_jump (rtx, rtx, int);\n-extern void rebuild_jump_labels (rtx);\n-extern void rebuild_jump_labels_chain (rtx);\n+extern void rebuild_jump_labels (rtx_insn *);\n+extern void rebuild_jump_labels_chain (rtx_insn *);\n extern rtx reversed_comparison (const_rtx, enum machine_mode);\n extern enum rtx_code reversed_comparison_code (const_rtx, const_rtx);\n extern enum rtx_code reversed_comparison_code_parts (enum rtx_code, const_rtx,"}]}