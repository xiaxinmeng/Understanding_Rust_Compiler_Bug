{"sha": "d095e03c25490c14ec610ce9ce4749f3e908a752", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA5NWUwM2MyNTQ5MGMxNGVjNjEwY2U5Y2U0NzQ5ZjNlOTA4YTc1Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-03-05T02:49:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-03-05T02:49:13Z"}, "message": "re PR c++/13549 (Problem compiling Boost.Python test)\n\n        PR c++/13549\n        * semantics.c (perform_koenig_lookup): Handle TEMPLATE_ID_EXPR.\n        * parser.c (cp_parser_postfix_expression): Call it for\n        TEMPLATE_ID_EXPR.\n        * tree.c (is_overloaded_fn): Look through TEMPLATE_ID_EXPR.\n        (get_first_fn): Likewise.\n\nFrom-SVN: r144636", "tree": {"sha": "611c5b46ac873b20115c25a9f275f950dc7f0e0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/611c5b46ac873b20115c25a9f275f950dc7f0e0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d095e03c25490c14ec610ce9ce4749f3e908a752", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d095e03c25490c14ec610ce9ce4749f3e908a752", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d095e03c25490c14ec610ce9ce4749f3e908a752", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d095e03c25490c14ec610ce9ce4749f3e908a752/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a1f5eeddb74e8ba36c1020f2350341d981e849d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a1f5eeddb74e8ba36c1020f2350341d981e849d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a1f5eeddb74e8ba36c1020f2350341d981e849d"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "187ade4067815a22b2223d309c98b53644fe99e6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d095e03c25490c14ec610ce9ce4749f3e908a752/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d095e03c25490c14ec610ce9ce4749f3e908a752/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d095e03c25490c14ec610ce9ce4749f3e908a752", "patch": "@@ -1,5 +1,12 @@\n 2009-03-04  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/13549\n+\t* semantics.c (perform_koenig_lookup): Handle TEMPLATE_ID_EXPR.\n+\t* parser.c (cp_parser_postfix_expression): Call it for \n+\tTEMPLATE_ID_EXPR.\n+\t* tree.c (is_overloaded_fn): Look through TEMPLATE_ID_EXPR.\n+\t(get_first_fn): Likewise.\n+\n \tPR c++/9634\n \tPR c++/29469\n \tPR c++/29607"}, {"sha": "5c5c912b5879b9a5f31c52062b4a42d9b540955b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d095e03c25490c14ec610ce9ce4749f3e908a752/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d095e03c25490c14ec610ce9ce4749f3e908a752/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=d095e03c25490c14ec610ce9ce4749f3e908a752", "patch": "@@ -4732,7 +4732,8 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t      }\n \n \t    koenig_p = false;\n-\t    if (idk == CP_ID_KIND_UNQUALIFIED)\n+\t    if (idk == CP_ID_KIND_UNQUALIFIED\n+\t\t|| idk == CP_ID_KIND_TEMPLATE_ID)\n \t      {\n \t\tif (TREE_CODE (postfix_expression) == IDENTIFIER_NODE)\n \t\t  {"}, {"sha": "5f01a83c463e386df071244dc1990d5f580f798d", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d095e03c25490c14ec610ce9ce4749f3e908a752/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d095e03c25490c14ec610ce9ce4749f3e908a752/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=d095e03c25490c14ec610ce9ce4749f3e908a752", "patch": "@@ -1801,6 +1801,13 @@ perform_koenig_lookup (tree fn, tree args)\n {\n   tree identifier = NULL_TREE;\n   tree functions = NULL_TREE;\n+  tree tmpl_args = NULL_TREE;\n+\n+  if (TREE_CODE (fn) == TEMPLATE_ID_EXPR)\n+    {\n+      tmpl_args = TREE_OPERAND (fn, 1);\n+      fn = TREE_OPERAND (fn, 0);\n+    }\n \n   /* Find the name of the overloaded function.  */\n   if (TREE_CODE (fn) == IDENTIFIER_NODE)\n@@ -1820,14 +1827,18 @@ perform_koenig_lookup (tree fn, tree args)\n \n      Do Koenig lookup -- unless any of the arguments are\n      type-dependent.  */\n-  if (!any_type_dependent_arguments_p (args))\n+  if (!any_type_dependent_arguments_p (args)\n+      && !any_dependent_template_arguments_p (tmpl_args))\n     {\n       fn = lookup_arg_dependent (identifier, functions, args);\n       if (!fn)\n \t/* The unqualified name could not be resolved.  */\n \tfn = unqualified_fn_lookup_error (identifier);\n     }\n \n+  if (fn && tmpl_args)\n+    fn = build_nt (TEMPLATE_ID_EXPR, fn, tmpl_args);\n+  \n   return fn;\n }\n "}, {"sha": "82f3b89e402b9e6d3451192a51e62668aa0d4f81", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d095e03c25490c14ec610ce9ce4749f3e908a752/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d095e03c25490c14ec610ce9ce4749f3e908a752/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=d095e03c25490c14ec610ce9ce4749f3e908a752", "patch": "@@ -1175,8 +1175,9 @@ is_overloaded_fn (tree x)\n     x = TREE_OPERAND (x, 1);\n   if (BASELINK_P (x))\n     x = BASELINK_FUNCTIONS (x);\n-  if (TREE_CODE (x) == TEMPLATE_ID_EXPR\n-      || DECL_FUNCTION_TEMPLATE_P (OVL_CURRENT (x))\n+  if (TREE_CODE (x) == TEMPLATE_ID_EXPR)\n+    x = TREE_OPERAND (x, 0);\n+  if (DECL_FUNCTION_TEMPLATE_P (OVL_CURRENT (x))\n       || (TREE_CODE (x) == OVERLOAD && OVL_CHAIN (x)))\n     return 2;\n   return  (TREE_CODE (x) == FUNCTION_DECL\n@@ -1202,6 +1203,8 @@ get_first_fn (tree from)\n     from = TREE_OPERAND (from, 1);\n   if (BASELINK_P (from))\n     from = BASELINK_FUNCTIONS (from);\n+  if (TREE_CODE (from) == TEMPLATE_ID_EXPR)\n+    from = TREE_OPERAND (from, 0);\n   return OVL_CURRENT (from);\n }\n "}, {"sha": "dfeb6fdb810a419b7332c5303416c24945333bfd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d095e03c25490c14ec610ce9ce4749f3e908a752/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d095e03c25490c14ec610ce9ce4749f3e908a752/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d095e03c25490c14ec610ce9ce4749f3e908a752", "patch": "@@ -1,3 +1,8 @@\n+2009-03-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/13549\n+\t* g++.dg/template/koenig7.C: New test.\n+\n 2009-03-04  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/torture/predcom-1.C: New test."}, {"sha": "07f2fcad33d244336e12c308c562e822e962e422", "filename": "gcc/testsuite/g++.dg/template/koenig7.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d095e03c25490c14ec610ce9ce4749f3e908a752/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fkoenig7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d095e03c25490c14ec610ce9ce4749f3e908a752/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fkoenig7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fkoenig7.C?ref=d095e03c25490c14ec610ce9ce4749f3e908a752", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/13549\n+// We need to do arg-dep lookup for g<T>(j) at instantiation time because\n+// g<T> is dependent, even though (j) is not; at that point we can find\n+// g(h).\n+\n+template <typename T> int g(int);\n+class h{};\n+template <typename T> int l(){h j; return g<T>(j);}\n+template <typename T> int g(const h&);\n+class j{};\n+int jj(){return l<j>();}"}]}