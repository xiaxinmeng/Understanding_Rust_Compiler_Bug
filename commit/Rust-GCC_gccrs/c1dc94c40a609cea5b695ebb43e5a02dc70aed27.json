{"sha": "c1dc94c40a609cea5b695ebb43e5a02dc70aed27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFkYzk0YzQwYTYwOWNlYTViNjk1ZWJiNDNlNWEwMmRjNzBhZWQyNw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-11-14T12:55:15Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-14T12:55:15Z"}, "message": "c-common.c (walk_stmt_tree): Remove.\n\n\t* c-common.c (walk_stmt_tree): Remove.\n\t* c-common.h: Remove the corresponding prototype.\n\nFrom-SVN: r90619", "tree": {"sha": "7b827bcc76c3c667a06dfc2fe952ddf5fdfd0b6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b827bcc76c3c667a06dfc2fe952ddf5fdfd0b6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1dc94c40a609cea5b695ebb43e5a02dc70aed27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1dc94c40a609cea5b695ebb43e5a02dc70aed27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1dc94c40a609cea5b695ebb43e5a02dc70aed27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1dc94c40a609cea5b695ebb43e5a02dc70aed27/comments", "author": null, "committer": null, "parents": [{"sha": "29eb4ac9ad2c2429469e965192c9021a0f250781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29eb4ac9ad2c2429469e965192c9021a0f250781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29eb4ac9ad2c2429469e965192c9021a0f250781"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "d1150c428170240d73541b4fd9d3d88174a90297", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1dc94c40a609cea5b695ebb43e5a02dc70aed27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1dc94c40a609cea5b695ebb43e5a02dc70aed27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1dc94c40a609cea5b695ebb43e5a02dc70aed27", "patch": "@@ -3,6 +3,9 @@\n \t* c-common.c (walk_stmt_tree): Remove.\n \t* c-common.h: Remove the corresponding prototype.\n \n+\t* emit-rtl.c (push_to_full_sequence): Remove.\n+\t* rtl.h: Remove the corresponding prototype.\n+\n 2004-11-13  Richard Henderson  <rth@redhat.com>\n \n \t* calls.c (precompute_register_parameters): Force all PARALLELs"}, {"sha": "4a0ead7b34eef135c57f7690617db217f79017f8", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1dc94c40a609cea5b695ebb43e5a02dc70aed27/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1dc94c40a609cea5b695ebb43e5a02dc70aed27/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=c1dc94c40a609cea5b695ebb43e5a02dc70aed27", "patch": "@@ -4820,18 +4820,6 @@ push_to_sequence (rtx first)\n   last_insn = last;\n }\n \n-/* Set up the insn chain from a chain stort in FIRST to LAST.  */\n-\n-void\n-push_to_full_sequence (rtx first, rtx last)\n-{\n-  start_sequence ();\n-  first_insn = first;\n-  last_insn = last;\n-  /* We really should have the end of the insn chain here.  */\n-  gcc_assert (!last || !NEXT_INSN (last));\n-}\n-\n /* Set up the outer-level insn chain\n    as the current sequence, saving the previously current one.  */\n "}, {"sha": "f2b84c092ca564dcc17332cd890d3736c2e0e151", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1dc94c40a609cea5b695ebb43e5a02dc70aed27/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1dc94c40a609cea5b695ebb43e5a02dc70aed27/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=c1dc94c40a609cea5b695ebb43e5a02dc70aed27", "patch": "@@ -1408,7 +1408,6 @@ extern rtx get_last_nonnote_insn (void);\n extern void start_sequence (void);\n extern void push_to_sequence (rtx);\n extern void end_sequence (void);\n-extern void push_to_full_sequence (rtx, rtx);\n extern rtx immed_double_const (HOST_WIDE_INT, HOST_WIDE_INT,\n \t\t\t       enum machine_mode);\n "}]}