{"sha": "ed7da216129081dad06fbf057d345dc50a7fe1da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ3ZGEyMTYxMjkwODFkYWQwNmZiZjA1N2QzNDVkYzUwYTdmZTFkYQ==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-12T23:51:11Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-12T23:51:11Z"}, "message": "sem_ch12.adb (Save_Entity_Descendant): Use syntactic field names on known node types, rather than untyped fields.\n\n\t* sem_ch12.adb (Save_Entity_Descendant): Use syntactic field names\n\ton known node types, rather than untyped fields. Further cleanups.\n\n\t* sem_ch12.adb:\n\t(Save_Entity_Descendant): Minor comment update.\n\t(Copy_Generic_Node): Deal with incorrect reference to Associated_Node\n\t of an N_Attribute_Reference node. As per note below, this does not\n\teliminate need for Associated_Node in attribute ref nodes.\n\t(Associated_Node): Documentation explicitly mentions attribute\n\treference nodes, since this field is used in such nodes.\n\n\t* sem_ch12.adb (Associated_Node): Minor documentation cleanup.\n\nFrom-SVN: r47954", "tree": {"sha": "5951246c59246e34ea5b55e3e954a2d1de5fa42b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5951246c59246e34ea5b55e3e954a2d1de5fa42b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed7da216129081dad06fbf057d345dc50a7fe1da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed7da216129081dad06fbf057d345dc50a7fe1da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed7da216129081dad06fbf057d345dc50a7fe1da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed7da216129081dad06fbf057d345dc50a7fe1da/comments", "author": null, "committer": null, "parents": [{"sha": "9e5c7dba50d3ad60d6920b76c1e20e0e401927e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e5c7dba50d3ad60d6920b76c1e20e0e401927e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e5c7dba50d3ad60d6920b76c1e20e0e401927e6"}], "stats": {"total": 63, "additions": 51, "deletions": 12}, "files": [{"sha": "c30170598fa611a2c7fdc4028a276d2012badde1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed7da216129081dad06fbf057d345dc50a7fe1da/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed7da216129081dad06fbf057d345dc50a7fe1da/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ed7da216129081dad06fbf057d345dc50a7fe1da", "patch": "@@ -1,3 +1,20 @@\n+2001-12-12  Ed Schonberg <schonber@gnat.com>\n+\n+\t* sem_ch12.adb (Save_Entity_Descendant): Use syntactic field names \n+\ton known node types, rather than untyped fields. Further cleanups.\n+\t\n+2001-12-12  Robert Dewar <dewar@gnat.com>\n+\n+\t* sem_ch12.adb:\n+\t(Save_Entity_Descendant): Minor comment update.\n+\t(Copy_Generic_Node): Deal with incorrect reference to Associated_Node\n+\t of an N_Attribute_Reference node. As per note below, this does not \n+\teliminate need for Associated_Node in attribute ref nodes.\n+\t(Associated_Node): Documentation explicitly mentions attribute \n+\treference nodes, since this field is used in such nodes.\n+\t\n+\t* sem_ch12.adb (Associated_Node): Minor documentation cleanup.\n+\n 2001-12-12  Robert Dewar <dewar@gnat.com>\n \n \t* s-stalib.adb: Add more comments on with statements being needed"}, {"sha": "655291f1d0a8686aefc75e8b705dc26924ddd05e", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 34, "deletions": 12, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed7da216129081dad06fbf057d345dc50a7fe1da/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed7da216129081dad06fbf057d345dc50a7fe1da/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=ed7da216129081dad06fbf057d345dc50a7fe1da", "patch": "@@ -534,8 +534,10 @@ package body Sem_Ch12 is\n \n    --  Three kinds of source nodes have associated nodes:\n \n-   --    a) those that contain entities, that is to say identifiers,\n-   --       expanded_names, and operators (N_Has_Entity)\n+   --    a) those that can reference (denote) entities, that is identifiers,\n+   --       character literals, expanded_names, operator symbols, operators,\n+   --       and attribute reference nodes. These nodes have an Entity field\n+   --       and are the set of nodes that are in N_Has_Entity.\n \n    --    b) aggregates (N_Aggregate and N_Extension_Aggregate)\n \n@@ -4660,6 +4662,7 @@ package body Sem_Ch12 is\n \n       elsif Nkind (N) = N_Allocator\n         and then Nkind (Expression (N)) = N_Qualified_Expression\n+        and then Is_Entity_Name (Subtype_Mark (Expression (N)))\n         and then Instantiating\n       then\n          declare\n@@ -8207,8 +8210,13 @@ package body Sem_Ch12 is\n \n       procedure Save_Entity_Descendants (N : Node_Id);\n       --  Apply Save_Global_References to the two syntactic descendants of\n-      --  nodes that carry entities, i.e. identifiers, character literals,\n-      --  expanded names, and operators.\n+      --  non-terminal nodes that carry an Associated_Node and are processed\n+      --  through Reset_Entity. Once the global entity (if any) has been\n+      --  captured together with its type, only two syntactic descendants\n+      --  need to be traversed to complete the processing of the tree rooted\n+      --  at N. This applies to Selected_Components, Expanded_Names, and to\n+      --  Operator nodes. N can also be a character literal, identifier, or\n+      --  operator symbol node, but the call has no effect in these cases.\n \n       procedure Save_Global_Defaults (N1, N2 : Node_Id);\n       --  Default actuals in nested instances must be handled specially\n@@ -8449,14 +8457,25 @@ package body Sem_Ch12 is\n       -----------------------------\n \n       procedure Save_Entity_Descendants (N : Node_Id) is\n+      begin\n+         case Nkind (N) is\n+            when N_Binary_Op =>\n+               Save_Global_Descendant (Union_Id (Left_Opnd (N)));\n+               Save_Global_Descendant (Union_Id (Right_Opnd (N)));\n \n-         use Atree.Unchecked_Access;\n-         --  This code section is part of the implementation of an untyped\n-         --  tree traversal, so it needs direct access to node fields.\n+            when N_Unary_Op =>\n+               Save_Global_Descendant (Union_Id (Right_Opnd (N)));\n \n-      begin\n-         Save_Global_Descendant (Field2 (N));\n-         Save_Global_Descendant (Field3 (N));\n+            when N_Expanded_Name | N_Selected_Component =>\n+               Save_Global_Descendant (Union_Id (Prefix (N)));\n+               Save_Global_Descendant (Union_Id (Selector_Name (N)));\n+\n+            when N_Identifier | N_Character_Literal | N_Operator_Symbol =>\n+               null;\n+\n+            when others =>\n+               raise Program_Error;\n+         end case;\n       end Save_Entity_Descendants;\n \n       --------------------------\n@@ -8715,9 +8734,12 @@ package body Sem_Ch12 is\n                end if;\n             end if;\n \n-            --  Complete the check on operands\n+            --  Complete the check on operands, if node has not been\n+            --  constant-folded.\n \n-            Save_Entity_Descendants (N);\n+            if Nkind (N) in N_Op then\n+               Save_Entity_Descendants (N);\n+            end if;\n \n          elsif Nkind (N) = N_Identifier then\n             if Nkind (N) = Nkind (Get_Associated_Node (N)) then"}]}