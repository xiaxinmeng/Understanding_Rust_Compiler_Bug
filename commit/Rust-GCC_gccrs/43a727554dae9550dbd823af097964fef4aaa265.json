{"sha": "43a727554dae9550dbd823af097964fef4aaa265", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNhNzI3NTU0ZGFlOTU1MGRiZDgyM2FmMDk3OTY0ZmVmNGFhYTI2NQ==", "commit": {"author": {"name": "Stephane Carrez", "email": "Stephane.Carrez@worldnet.fr", "date": "2001-07-05T21:17:10Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2001-07-05T21:17:10Z"}, "message": "m68hc11.md (\"*ashlsi3\"): Operand 1 can be a memory reference using the stack pointer...\n\n\t* config/m68hc11/m68hc11.md (\"*ashlsi3\"): Operand 1 can be a memory\n\treference using the stack pointer, adjust it since we push Y\n\ttemporarily.\n\t(\"*ashrsi3\"): Likewise.\n\t(\"*lshrsi3\"): Likewise.\n\nFrom-SVN: r43791", "tree": {"sha": "50f37a4df9830a88761aa121b1976bfa088092ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50f37a4df9830a88761aa121b1976bfa088092ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43a727554dae9550dbd823af097964fef4aaa265", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a727554dae9550dbd823af097964fef4aaa265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43a727554dae9550dbd823af097964fef4aaa265", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a727554dae9550dbd823af097964fef4aaa265/comments", "author": null, "committer": null, "parents": [{"sha": "35f0a736aebf61d40512c4aaeded94d658b8e792", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f0a736aebf61d40512c4aaeded94d658b8e792", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f0a736aebf61d40512c4aaeded94d658b8e792"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "03e9a4c127bf6988829ca44aee029b83681f58a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43a727554dae9550dbd823af097964fef4aaa265/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43a727554dae9550dbd823af097964fef4aaa265/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43a727554dae9550dbd823af097964fef4aaa265", "patch": "@@ -1,3 +1,11 @@\n+2001-07-04  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n+\n+\t* config/m68hc11/m68hc11.md (\"*ashlsi3\"): Operand 1 can be a memory \n+\treference using the stack pointer, adjust it since we push Y \n+\ttemporarily.\n+\t(\"*ashrsi3\"): Likewise.\n+\t(\"*lshrsi3\"): Likewise.\n+\n 2001-07-05  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n \t* config/m68hc11/m68hc11.h (RETURN_ADDR_RTX): Fix return address"}, {"sha": "f5992049563841354f1b6bf58e53569ad5f8999b", "filename": "gcc/config/m68hc11/m68hc11.md", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43a727554dae9550dbd823af097964fef4aaa265/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43a727554dae9550dbd823af097964fef4aaa265/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md?ref=43a727554dae9550dbd823af097964fef4aaa265", "patch": "@@ -4190,8 +4190,15 @@\n      is true for 68hc11 only, we save temporary the value of Y.  */\n   if (!Y_REG_P (operands[2]))\n     {\n+      rtx ops[1];\n+\n+      ops[0] = operands[1];\n       output_asm_insn (\\\"pshy\\\", operands);\n-      output_asm_insn (\\\"ldy\\\\t%1\\\", operands);\n+      if (reg_mentioned_p (stack_pointer_rtx, operands[1]))\n+\t{\n+\t  ops[0] = adjust_address (operands[1], GET_MODE (operands[1]), 2);\n+\t}\n+      output_asm_insn (\\\"ldy\\\\t%0\\\", ops);\n       output_asm_insn (\\\"bsr\\\\t___ashlsi3\\\", operands);\n       return \\\"puly\\\";\n     }\n@@ -4591,8 +4598,15 @@\n      is true for 68hc11 only, we save temporary the value of Y.  */\n   if (!Y_REG_P (operands[2]))\n     {\n+      rtx ops[1];\n+\n+      ops[0] = operands[1];\n       output_asm_insn (\\\"pshy\\\", operands);\n-      output_asm_insn (\\\"ldy\\\\t%1\\\", operands);\n+      if (reg_mentioned_p (stack_pointer_rtx, operands[1]))\n+\t{\n+\t  ops[0] = adjust_address (operands[1], GET_MODE (operands[1]), 2);\n+\t}\n+      output_asm_insn (\\\"ldy\\\\t%0\\\", ops);\n       output_asm_insn (\\\"bsr\\\\t___ashrsi3\\\", operands);\n       return \\\"puly\\\";\n     }\n@@ -4928,8 +4942,15 @@\n      is true for 68hc11 only, we save temporary the value of Y.  */\n   if (!Y_REG_P (operands[2]))\n     {\n+      rtx ops[1];\n+\n+      ops[0] = operands[1];\n       output_asm_insn (\\\"pshy\\\", operands);\n-      output_asm_insn (\\\"ldy\\\\t%1\\\", operands);\n+      if (reg_mentioned_p (stack_pointer_rtx, operands[1]))\n+\t{\n+\t  ops[0] = adjust_address (operands[1], GET_MODE (operands[1]), 2);\n+\t}\n+      output_asm_insn (\\\"ldy\\\\t%0\\\", ops);\n       output_asm_insn (\\\"bsr\\\\t___lshrsi3\\\", operands);\n       return \\\"puly\\\";\n     }"}]}