{"sha": "1d5c7584fd6e72bfdbede86cef5ff04ae35f9744", "node_id": "C_kwDOANBUbNoAKDFkNWM3NTg0ZmQ2ZTcyYmZkYmVkZTg2Y2VmNWZmMDRhZTM1Zjk3NDQ", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-02-03T10:20:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-02-03T15:02:12Z"}, "message": "debug/104337 - avoid messing with the abstract origin chain in NRV\n\nThe following avoids NRV from massaging DECL_ABSTRACT_ORIGIN after\nvariable creation since NRV runs _after_ the function was inlined and thus\naffects the inlined variables copy indirectly.  We may adjust the abstract\norigin of a variable only at the point we create it, not further along the\npath since otherwise the (new) invariant that the abstract origin is always\nthe ultimate origin cannot be maintained.\n\nThe intent of what NRV does is OK I guess and it may improve the debug\nexperience.  But I also notice we do\n\n  SET_DECL_VALUE_EXPR (found, result);\n  DECL_HAS_VALUE_EXPR_P (found) = 1;\n\nthe code is there since the merge from tree-ssa which added tree-nrv.c.\n\nJakub added the DECL_VALUE_EXPR in g:938650d8fddb878f623e315f0b7fd94b217efa96\nand Jason added the abstract origin setting conditional in g:7716876bbd3a\n\nThe follwoing takes the radical approach and remove the attempt\nto \"optimize\" the debug info.\n\nThe gdb testsuites show no regressions.\n\n2022-02-03  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/104337\n\t* tree-nrv.cc (pass_nrv::execute): Remove tieing result and found\n\ttogether via DECL_ABSTRACT_ORIGIN.\n\n\t* gcc.dg/debug/pr104337.c: New testcase.", "tree": {"sha": "3c5a3beb5c51021932a853787d615c51ed207a82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c5a3beb5c51021932a853787d615c51ed207a82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d5c7584fd6e72bfdbede86cef5ff04ae35f9744", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d5c7584fd6e72bfdbede86cef5ff04ae35f9744", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d5c7584fd6e72bfdbede86cef5ff04ae35f9744", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d5c7584fd6e72bfdbede86cef5ff04ae35f9744/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1b4d225d8cd07c79eea81fb6416e8ad5a07f018", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1b4d225d8cd07c79eea81fb6416e8ad5a07f018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1b4d225d8cd07c79eea81fb6416e8ad5a07f018"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "d15680fbf1a3a75a3eb419ca3ad4373717109a93", "filename": "gcc/testsuite/gcc.dg/debug/pr104337.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5c7584fd6e72bfdbede86cef5ff04ae35f9744/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr104337.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5c7584fd6e72bfdbede86cef5ff04ae35f9744/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr104337.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr104337.c?ref=1d5c7584fd6e72bfdbede86cef5ff04ae35f9744", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+\n+struct a {\n+  unsigned b : 7;\n+};\n+inline __attribute__((optimize(3))) __attribute__((always_inline)) struct a\n+c() {\n+  struct a d;\n+  return d;\n+}\n+void e() {\n+  for (;;)\n+    c();\n+}\n+int main() {}"}, {"sha": "b96d5b86f27475180fb54f22998285a769109645", "filename": "gcc/tree-nrv.cc", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5c7584fd6e72bfdbede86cef5ff04ae35f9744/gcc%2Ftree-nrv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5c7584fd6e72bfdbede86cef5ff04ae35f9744/gcc%2Ftree-nrv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nrv.cc?ref=1d5c7584fd6e72bfdbede86cef5ff04ae35f9744", "patch": "@@ -236,19 +236,6 @@ pass_nrv::execute (function *fun)\n       fprintf (dump_file, \"\\n\");\n     }\n \n-  /* At this point we know that all the return statements return the\n-     same local which has suitable attributes for NRV.   Copy debugging\n-     information from FOUND to RESULT if it will be useful.  But don't set\n-     DECL_ABSTRACT_ORIGIN to point at another function.  */\n-  if (!DECL_IGNORED_P (found)\n-      && !(DECL_ABSTRACT_ORIGIN (found)\n-\t   && DECL_CONTEXT (DECL_ABSTRACT_ORIGIN (found)) != current_function_decl))\n-    {\n-      DECL_NAME (result) = DECL_NAME (found);\n-      DECL_SOURCE_LOCATION (result) = DECL_SOURCE_LOCATION (found);\n-      DECL_ABSTRACT_ORIGIN (result) = DECL_ABSTRACT_ORIGIN (found);\n-    }\n-\n   TREE_ADDRESSABLE (result) |= TREE_ADDRESSABLE (found);\n \n   /* Now walk through the function changing all references to VAR to be"}]}