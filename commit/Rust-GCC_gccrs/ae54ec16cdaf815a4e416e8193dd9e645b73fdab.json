{"sha": "ae54ec16cdaf815a4e416e8193dd9e645b73fdab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU1NGVjMTZjZGFmODE1YTRlNDE2ZTgxOTNkZDllNjQ1YjczZmRhYg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2005-02-17T19:25:05Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2005-02-17T19:25:05Z"}, "message": "re PR c++/20028 (class and then template class gives an ICE)\n\ngcc/cp/ChangeLog:\nPR c++/20028\n* class.c (finish_struct): Initialize TYPE_SIZE_UNIT of a\ntemplate along with TYPE_SIZE.\ngcc/testsuite/ChangeLog:\nPR c++/20028\n* g++.dg/template/crash34.C: New.\n\nFrom-SVN: r95182", "tree": {"sha": "8e65cf1212a979de73c372e019c8f791799fda07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e65cf1212a979de73c372e019c8f791799fda07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae54ec16cdaf815a4e416e8193dd9e645b73fdab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae54ec16cdaf815a4e416e8193dd9e645b73fdab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae54ec16cdaf815a4e416e8193dd9e645b73fdab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae54ec16cdaf815a4e416e8193dd9e645b73fdab/comments", "author": null, "committer": null, "parents": [{"sha": "2a2c6e55e790704eb0e4013276aee8a91cec46c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a2c6e55e790704eb0e4013276aee8a91cec46c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a2c6e55e790704eb0e4013276aee8a91cec46c5"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "cdbbfa51d809288bbc7fad86ce233dba9440726e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae54ec16cdaf815a4e416e8193dd9e645b73fdab/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae54ec16cdaf815a4e416e8193dd9e645b73fdab/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ae54ec16cdaf815a4e416e8193dd9e645b73fdab", "patch": "@@ -1,5 +1,9 @@\n 2005-02-17  Alexandre Oliva  <aoliva@redhat.com>\n \n+\tPR c++/20028\n+\t* class.c (finish_struct): Initialize TYPE_SIZE_UNIT of a\n+\ttemplate along with TYPE_SIZE.\n+\n \tPR c++/20022\n \t* semantics.c (perform_deferred_access_checks): Use\n \tget_deferred_access_checks to get the top of the stack."}, {"sha": "77e9b80f4f9a49712af15c1c626d3df1f8980c0a", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae54ec16cdaf815a4e416e8193dd9e645b73fdab/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae54ec16cdaf815a4e416e8193dd9e645b73fdab/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=ae54ec16cdaf815a4e416e8193dd9e645b73fdab", "patch": "@@ -5111,6 +5111,7 @@ finish_struct (tree t, tree attributes)\n \n       finish_struct_methods (t);\n       TYPE_SIZE (t) = bitsize_zero_node;\n+      TYPE_SIZE_UNIT (t) = size_zero_node;\n \n       /* We need to emit an error message if this type was used as a parameter\n \t and it is an abstract type, even if it is a template. We construct"}, {"sha": "d03c81fa06f84a6d24a691886b67b2264ba6a114", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae54ec16cdaf815a4e416e8193dd9e645b73fdab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae54ec16cdaf815a4e416e8193dd9e645b73fdab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae54ec16cdaf815a4e416e8193dd9e645b73fdab", "patch": "@@ -1,5 +1,8 @@\n 2005-02-17  Alexandre Oliva  <aoliva@redhat.com>\n \n+\tPR c++/20028\n+\t* g++.dg/template/crash34.C: New.\n+\n \tPR c++/20022\n \t* g++.dg/other/access3.C: New.\n "}, {"sha": "9cca62f05391dcf494f7f9b9535d522f6c828585", "filename": "gcc/testsuite/g++.dg/template/crash34.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae54ec16cdaf815a4e416e8193dd9e645b73fdab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae54ec16cdaf815a4e416e8193dd9e645b73fdab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash34.C?ref=ae54ec16cdaf815a4e416e8193dd9e645b73fdab", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+\n+// PR c++/20028\n+\n+// We used to crash when referencing TYPE_SIZE_UNIT of the messed-up\n+// type used for x, because it was not initialized.\n+\n+class Foo;\n+\n+template <typename T> class Foo { }; // { dg-error \"not a template type\" }\n+\n+Foo<int> x; // { dg-error \"not a template\" }"}]}