{"sha": "e64e5f7438497707a97da41a07ca787e04d5f311", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY0ZTVmNzQzODQ5NzcwN2E5N2RhNDFhMDdjYTc4N2UwNGQ1ZjMxMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T10:28:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T10:28:23Z"}, "message": "[multiple changes]\n\n2009-11-30  Sergey Rybin  <rybin@adacore.com>\n\n\t* gnat_ugn.texi: Update gnatcheck doc.\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\tmake.adb, prj-makr.adb, g-sothco.ads: Minor reformattting\n\t* s-taprop-dummy.adb: Minor code reorganization (raise with msgs start\n\twith lower case).\n\t* i-vxwoio.adb, g-dirope.adb, g-sercom-linux.adb,\n\tg-enblsp-vms-alpha.adb, g-regist.adb, s-imgcha.adb, s-tarest.adb,\n\ts-taprop-mingw.adb, g-exctra.adb, g-expect.adb, g-comlin.adb,\n\tg-debpoo.adb, g-expect-vms.adb, g-pehage.adb, g-trasym-vms-alpha.adb,\n\tg-enblsp-vms-ia64.adb, s-fatgen.adb, s-fileio.adb: Minor code\n\treorganization (use conditional expressions).\n\nFrom-SVN: r154773", "tree": {"sha": "31ebe42337e32d1a1265944b1ae6957ba684600f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31ebe42337e32d1a1265944b1ae6957ba684600f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e64e5f7438497707a97da41a07ca787e04d5f311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64e5f7438497707a97da41a07ca787e04d5f311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64e5f7438497707a97da41a07ca787e04d5f311", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64e5f7438497707a97da41a07ca787e04d5f311/comments", "author": null, "committer": null, "parents": [{"sha": "ff149a358cd46b8e54a0080e8c714103a8def136", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff149a358cd46b8e54a0080e8c714103a8def136", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff149a358cd46b8e54a0080e8c714103a8def136"}], "stats": {"total": 277, "additions": 106, "deletions": 171}, "files": [{"sha": "6effdb82c4f15ef961f055e54ccd760eefac1475", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -1,3 +1,19 @@\n+2009-11-30  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_ugn.texi: Update gnatcheck doc.\n+\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\tmake.adb, prj-makr.adb, g-sothco.ads: Minor reformattting\n+\t* s-taprop-dummy.adb: Minor code reorganization (raise with msgs start\n+\twith lower case).\n+\t* i-vxwoio.adb, g-dirope.adb, g-sercom-linux.adb,\n+\tg-enblsp-vms-alpha.adb, g-regist.adb, s-imgcha.adb, s-tarest.adb,\n+\ts-taprop-mingw.adb, g-exctra.adb, g-expect.adb, g-comlin.adb,\n+\tg-debpoo.adb, g-expect-vms.adb, g-pehage.adb, g-trasym-vms-alpha.adb,\n+\tg-enblsp-vms-ia64.adb, s-fatgen.adb, s-fileio.adb: Minor code\n+\treorganization (use conditional expressions).\n+\n 2009-11-30  Vincent Celier  <celier@adacore.com>\n \n \t* prj-makr.adb (Source_Files): New hash table to keep track of source"}, {"sha": "eb982543b387b959c1d56b04206a17630c149615", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -574,11 +574,8 @@ package body GNAT.Command_Line is\n             --  Depending on the value of Concatenate, the full switch is\n             --  a single character or the rest of the argument.\n \n-            if Concatenate then\n-               End_Index := Parser.Current_Index;\n-            else\n-               End_Index := Arg'Last;\n-            end if;\n+            End_Index :=\n+              (if Concatenate then Parser.Current_Index else Arg'Last);\n \n             if Switches (Switches'First) = '*' then\n \n@@ -2279,20 +2276,16 @@ package body GNAT.Command_Line is\n \n          Cmd.Coalesce_Sections := new Argument_List (Cmd.Sections'Range);\n          for E in Cmd.Sections'Range loop\n-            if Cmd.Sections (E) = null then\n-               Cmd.Coalesce_Sections (E) := null;\n-            else\n-               Cmd.Coalesce_Sections (E) := new String'(Cmd.Sections (E).all);\n-            end if;\n+            Cmd.Coalesce_Sections (E) :=\n+              (if Cmd.Sections (E) = null then null\n+               else new String'(Cmd.Sections (E).all));\n          end loop;\n \n          Cmd.Coalesce_Params := new Argument_List (Cmd.Params'Range);\n          for E in Cmd.Params'Range loop\n-            if Cmd.Params (E) = null then\n-               Cmd.Coalesce_Params (E) := null;\n-            else\n-               Cmd.Coalesce_Params (E) := new String'(Cmd.Params (E).all);\n-            end if;\n+            Cmd.Coalesce_Params (E) :=\n+              (if Cmd.Params (E) = null then null\n+               else new String'(Cmd.Params (E).all));\n          end loop;\n \n          --  Not a clone, since we will not modify the parameters anyway"}, {"sha": "ef7ce9e3dbd3e8667ae195da41ef9353905538db", "filename": "gcc/ada/g-debpoo.adb", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -985,11 +985,7 @@ package body GNAT.Debug_Pools is\n       is\n       begin\n          if H.Block_Size /= 0 then\n-            if In_Use then\n-               To_Byte (A).all := In_Use_Mark;\n-            else\n-               To_Byte (A).all := Free_Mark;\n-            end if;\n+            To_Byte (A).all := (if In_Use then In_Use_Mark else Free_Mark);\n          end if;\n       end Mark;\n \n@@ -1416,11 +1412,8 @@ package body GNAT.Debug_Pools is\n                Backtrace_Htable_Cumulate.Set (Elem);\n \n                if Cumulate then\n-                  if Data.Kind = Alloc then\n-                     K := Indirect_Alloc;\n-                  else\n-                     K := Indirect_Dealloc;\n-                  end if;\n+                  K := (if Data.Kind = Alloc then Indirect_Alloc\n+                                             else Indirect_Dealloc);\n \n                   --  Propagate the direct call to all its parents\n "}, {"sha": "294aa7031ee58aa3d99553f28106657f2f8a351c", "filename": "gcc/ada/g-dirope.adb", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-dirope.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-dirope.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2008, AdaCore                     --\n+--                     Copyright (C) 1998-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -97,12 +97,7 @@ package body GNAT.Directory_Operations is\n       begin\n          --  Cut_Start point to the first basename character\n \n-         if Cut_Start = 0 then\n-            Cut_Start := Path'First;\n-\n-         else\n-            Cut_Start := Cut_Start + 1;\n-         end if;\n+         Cut_Start := (if Cut_Start = 0 then Path'First else Cut_Start + 1);\n \n          --  Cut_End point to the last basename character\n \n@@ -580,11 +575,8 @@ package body GNAT.Directory_Operations is\n    begin\n       Local_Get_Current_Dir (Buffer'Address, Path_Len'Address);\n \n-      if Dir'Length > Path_Len then\n-         Last := Dir'First + Path_Len - 1;\n-      else\n-         Last := Dir'Last;\n-      end if;\n+      Last :=\n+        (if Dir'Length > Path_Len then Dir'First + Path_Len - 1 else Dir'Last);\n \n       Dir (Buffer'First .. Last) := Buffer (Buffer'First .. Last);\n \n@@ -683,11 +675,9 @@ package body GNAT.Directory_Operations is\n          return;\n       end if;\n \n-      if Str'Length > Filename_Len then\n-         Last := Str'First + Filename_Len - 1;\n-      else\n-         Last := Str'Last;\n-      end if;\n+      Last :=\n+        (if Str'Length > Filename_Len then Str'First + Filename_Len - 1\n+         else Str'Last);\n \n       declare\n          subtype Path_String is String (1 .. Filename_Len);"}, {"sha": "64af051d825901b4c2f61563e890685b599050e5", "filename": "gcc/ada/g-enblsp-vms-alpha.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-enblsp-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-enblsp-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-enblsp-vms-alpha.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 2005-2008, AdaCore                      --\n+--                    Copyright (C) 2005-2009, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -77,11 +77,9 @@ begin\n \n    --  Fork a new process (it is not possible to do this in a subprogram)\n \n-   if Alloc_Vfork_Blocks >= 0 then\n-      Descriptor.Pid := Get_Current_Invo_Context (Get_Vfork_Jmpbuf);\n-   else\n-      Descriptor.Pid := -1;\n-   end if;\n+   Descriptor.Pid :=\n+     (if Alloc_Vfork_Blocks >= 0\n+      then Get_Current_Invo_Context (Get_Vfork_Jmpbuf) else -1);\n \n    --  Are we now in the child\n "}, {"sha": "6ac7c5a0804e4fad45dabf7317397479ce927d2b", "filename": "gcc/ada/g-enblsp-vms-ia64.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-enblsp-vms-ia64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-enblsp-vms-ia64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-enblsp-vms-ia64.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 2005-2008, AdaCore                      --\n+--                    Copyright (C) 2005-2009, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -75,11 +75,8 @@ begin\n \n    --  Fork a new process (it is not possible to do this in a subprogram)\n \n-   if Alloc_Vfork_Blocks >= 0 then\n-      Descriptor.Pid := Setjmp1 (Get_Vfork_Jmpbuf);\n-   else\n-      Descriptor.Pid := -1;\n-   end if;\n+   Descriptor.Pid :=\n+     (if Alloc_Vfork_Blocks >= 0 then Setjmp1 (Get_Vfork_Jmpbuf) else -1);\n \n    --  Are we now in the child\n "}, {"sha": "8534bbbb47e79f2d19ce1066805fa0a843fe57de", "filename": "gcc/ada/g-exctra.adb", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-exctra.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-exctra.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-exctra.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2005, AdaCore                     --\n+--                     Copyright (C) 2000-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -88,17 +88,11 @@ package body GNAT.Exception_Traces is\n    procedure Set_Trace_Decorator (Decorator : Traceback_Decorator) is\n    begin\n       Current_Decorator := Decorator;\n-\n-      if Current_Decorator /= null then\n-         Traceback_Decorator_Wrapper := Decorator_Wrapper'Access;\n-      else\n-         Traceback_Decorator_Wrapper := null;\n-      end if;\n+      Traceback_Decorator_Wrapper :=\n+        (if Current_Decorator /= null\n+         then Decorator_Wrapper'Access else null);\n    end Set_Trace_Decorator;\n \n-   --  Trace_On/Trace_Off control the kind of automatic output to occur\n-   --  by way of the global Exception_Trace variable.\n-\n    ---------------\n    -- Trace_Off --\n    ---------------"}, {"sha": "cc413f7248d4ce12e68d13ce13049817635a2683", "filename": "gcc/ada/g-expect-vms.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-expect-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-expect-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect-vms.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -1030,11 +1030,7 @@ package body GNAT.Expect is\n          Reinitialize_Buffer (Descriptor);\n       end if;\n \n-      if Add_LF then\n-         Last := Full_Str'Last;\n-      else\n-         Last := Full_Str'Last - 1;\n-      end if;\n+      Last := (if Add_LF then Full_Str'Last else Full_Str'Last - 1);\n \n       Call_Filters (Descriptor, Full_Str (Full_Str'First .. Last), Input);\n "}, {"sha": "6510c3108136b9766e28db4f80f63aae0cef1171", "filename": "gcc/ada/g-expect.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -1003,11 +1003,10 @@ package body GNAT.Expect is\n          --  Prepare low-level argument list from the normalized arguments\n \n          for K in Arg_List'Range loop\n-            if Arg_List (K) /= null then\n-               C_Arg_List (K) := Arg_List (K).all'Address;\n-            else\n-               C_Arg_List (K) := System.Null_Address;\n-            end if;\n+            C_Arg_List (K) :=\n+              (if Arg_List (K) /= null\n+               then Arg_List (K).all'Address\n+               else System.Null_Address);\n          end loop;\n \n          --  This does not return on Unix systems"}, {"sha": "e96b9cc0c58603ba3d38af7d92b90a94df56436d", "filename": "gcc/ada/g-pehage.adb", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-pehage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-pehage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2008, AdaCore                     --\n+--                     Copyright (C) 2002-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1970,11 +1970,7 @@ package body GNAT.Perfect_Hash_Generators is\n       Q := Seed / 127773;\n       X := 16807 * R - 2836 * Q;\n \n-      if X < 0 then\n-         Seed := X + 2147483647;\n-      else\n-         Seed := X;\n-      end if;\n+      Seed := (if X < 0 then X + 2147483647 else X);\n    end Random;\n \n    -------------\n@@ -2233,11 +2229,8 @@ package body GNAT.Perfect_Hash_Generators is\n             --  The first position should not exceed the minimum key length.\n             --  Otherwise, we may end up with an empty word once reduced.\n \n-            if Last_Sel_Pos = 0 then\n-               Max_Sel_Pos := Min_Key_Len;\n-            else\n-               Max_Sel_Pos := Max_Key_Len;\n-            end if;\n+            Max_Sel_Pos :=\n+              (if Last_Sel_Pos = 0 then Min_Key_Len else Max_Key_Len);\n \n             --  Find which position increases more the number of differences\n "}, {"sha": "c04248e588f582f2cc8a38c78a282b398eab731f", "filename": "gcc/ada/g-regist.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-regist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-regist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regist.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -417,11 +417,7 @@ package body GNAT.Registry is\n       Result     : LONG;\n \n    begin\n-      if Expand then\n-         Value_Type := REG_EXPAND_SZ;\n-      else\n-         Value_Type := REG_SZ;\n-      end if;\n+      Value_Type := (if Expand then REG_EXPAND_SZ else REG_SZ);\n \n       Result :=\n         RegSetValueEx"}, {"sha": "b1b5d3454e232dff6971223eea24ce949f39130f", "filename": "gcc/ada/g-sercom-linux.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-sercom-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-sercom-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom-linux.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -211,7 +211,10 @@ package body GNAT.Serial_Communications is\n       pragma Import (C, tcflush, \"tcflush\");\n \n       Current : termios;\n-      Res     : int;\n+\n+      Res : int;\n+      pragma Warnings (Off, Res);\n+      --  Warnings off, since we don't always test the result\n \n    begin\n       if Port.H = null then\n@@ -246,11 +249,7 @@ package body GNAT.Serial_Communications is\n \n       --  Block\n \n-      if Block then\n-         Res := fcntl (int (Port.H.all), F_SETFL, 0);\n-      else\n-         Res := fcntl (int (Port.H.all), F_SETFL, FNDELAY);\n-      end if;\n+      Res := fcntl (int (Port.H.all), F_SETFL, (if Block then 0 else FNDELAY));\n \n       if Res = -1 then\n          Raise_Error (\"set: fcntl failed\");"}, {"sha": "ffa3e69ca6373474f2bb08e5ee125dc02620de81", "filename": "gcc/ada/g-sothco.ads", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sothco.ads?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -212,8 +212,8 @@ package GNAT.Sockets.Thin_Common is\n                       C.Strings.Null_Ptr);\n    --  Arrays of C (char *)\n \n-   type Servent is new System.Storage_Elements.Storage_Array\n-                         (1 .. SOSC.SIZEOF_struct_servent);\n+   type Servent is new\n+     System.Storage_Elements.Storage_Array (1 .. SOSC.SIZEOF_struct_servent);\n    for Servent'Alignment use 8;\n    --  Service entry. This is an opaque type used only via the following\n    --  accessor functions, because 'struct servent' has different layouts on\n@@ -223,11 +223,14 @@ package GNAT.Sockets.Thin_Common is\n    pragma Convention (C, Servent_Access);\n    --  Access to service entry\n \n-   function Servent_S_Name (E : Servent_Access) return C.Strings.chars_ptr;\n-   function Servent_S_Aliases (E : Servent_Access)\n-                               return Chars_Ptr_Pointers.Pointer;\n-   function Servent_S_Port (E : Servent_Access) return C.int;\n-   function Servent_S_Proto (E : Servent_Access) return C.Strings.chars_ptr;\n+   function Servent_S_Name\n+     (E : Servent_Access) return C.Strings.chars_ptr;\n+   function Servent_S_Aliases\n+     (E : Servent_Access) return Chars_Ptr_Pointers.Pointer;\n+   function Servent_S_Port\n+     (E : Servent_Access) return C.int;\n+   function Servent_S_Proto\n+     (E : Servent_Access) return C.Strings.chars_ptr;\n \n    ------------------\n    -- Host entries --"}, {"sha": "c58c5610bfd0a108faf77c42065f672b3c25db0b", "filename": "gcc/ada/g-trasym-vms-alpha.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-trasym-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fg-trasym-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym-vms-alpha.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -217,11 +217,9 @@ package body GNAT.Traceback.Symbolic is\n          System.Soft_Links.Lock_Task.all;\n \n          for J in Traceback'Range loop\n-            if J = Traceback'Last then\n-               Return_Address := Address_Zero;\n-            else\n-               Return_Address := PC_For (Traceback (J + 1));\n-            end if;\n+            Return_Address :=\n+              (if J = Traceback'Last then Address_Zero\n+                                     else PC_For (Traceback (J + 1)));\n \n             Symbolize\n               (Status,"}, {"sha": "70b02c9b375b0dc779ca46ee52b388f8d0c337e2", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -22519,7 +22519,9 @@ This rule has no parameters.\n @cindex @code{Positional_Generic_Parameters} rule (for @command{gnatcheck})\n \n @noindent\n-Flag each instantiation using positional parameter notation.\n+Flag each positional actual generic parameter except for the case when\n+the generic unit being iinstantiated has exactly one generic formal\n+parameter.\n \n This rule has no parameters.\n \n@@ -22529,15 +22531,15 @@ This rule has no parameters.\n @cindex @code{Positional_Parameters} rule (for @command{gnatcheck})\n \n @noindent\n-Flag each subprogram or entry call using positional parameter notation,\n+Flag each positional parameter notation in a subprogram or entry call,\n except for the following:\n \n @itemize @bullet\n @item\n-Invocations of prefix or infix operators are not flagged\n+Parameters of calls to of prefix or infix operators are not flagged\n @item\n If the called subprogram or entry has only one formal parameter,\n-the call is not flagged;\n+the parameter of the call is not flagged;\n @item\n If a subprogram call uses the @emph{Object.Operation} notation, then\n @itemize @minus"}, {"sha": "4d480e0519f9d96187ea9307e6b78e2425566aa2", "filename": "gcc/ada/i-vxwoio.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fi-vxwoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fi-vxwoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-vxwoio.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -63,16 +63,10 @@ package body Interfaces.VxWorks.IO is\n    is\n       Status : int;\n       Fd     : int;\n-\n    begin\n       Fd := fileno (File);\n       Status := ioctl (Fd, FIOSETOPTIONS, OPT_TERMINAL);\n-\n-      if Status /= int (ERROR) then\n-         Success := True;\n-      else\n-         Success := False;\n-      end if;\n+      Success := (if Status /= int (ERROR) then True else False);\n    end Disable_Get_Immediate;\n \n end Interfaces.VxWorks.IO;"}, {"sha": "39a30468317ae42a8a1aeeb8bf4a6546716b0424", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -3427,8 +3427,8 @@ package body Make is\n                      end if;\n \n                      --  Start the compilation and record it. We can do this\n-                     --  because there is at least one free process. This\n-                     --  might change the current directory.\n+                     --  because there is at least one free process. This might\n+                     --  change the current directory.\n \n                      Collect_Arguments_And_Compile\n                        (Full_Source_File => Full_Source_File,"}, {"sha": "50cd0703d675733e3596464452937d477d0ae34a", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -39,7 +39,7 @@ with Table;    use Table;\n with Ada.Characters.Handling;   use Ada.Characters.Handling;\n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n-with System.Case_Util;          use System.Case_Util;\n+with System.Case_Util; use System.Case_Util;\n with System.CRTL;\n with System.HTable;\n \n@@ -613,13 +613,14 @@ package body Prj.Makr is\n                                 In_Tree       => Tree);\n \n             begin\n-               --  Add source file name to the source list file, if it is not\n+               --  Add source file name to the source list file if it is not\n                --  already there.\n \n                if not Source_Files.Get (Current_Source.File_Name) then\n                   Source_Files.Set (Current_Source.File_Name, True);\n                   Get_Name_String (Current_Source.File_Name);\n                   Add_Char_To_Name_Buffer (ASCII.LF);\n+\n                   if Write (Source_List_FD,\n                             Name_Buffer (1)'Address,\n                             Name_Len) /= Name_Len"}, {"sha": "cf7e4254b66287d6f1e6fa0ec5b21ab39b45060a", "filename": "gcc/ada/s-fatgen.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -232,12 +232,7 @@ package body System.Fat_Gen is\n                end loop;\n             end if;\n \n-            if X > 0.0 then\n-               Frac := Ax;\n-            else\n-               Frac := -Ax;\n-            end if;\n-\n+            Frac := (if X > 0.0 then Ax else -Ax);\n             Expo := Ex;\n          end;\n       end if;"}, {"sha": "60a96e427cfa94f5f1dfdbf5619033bbb98d00b5", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -519,27 +519,17 @@ package body System.File_IO is\n             end if;\n \n          when Inout_File | Append_File =>\n-            if Creat then\n-               Fopstr (1) := 'w';\n-            else\n-               Fopstr (1) := 'r';\n-            end if;\n-\n+            Fopstr (1) := (if Creat then 'w' else 'r');\n             Fopstr (2) := '+';\n             Fptr := 3;\n \n       end case;\n \n-      --  If text_translation_required is true then we need to append\n-      --  either a t or b to the string to get the right mode\n+      --  If text_translation_required is true then we need to append either a\n+      --  \"t\" or \"b\" to the string to get the right mode.\n \n       if text_translation_required then\n-         if Text then\n-            Fopstr (Fptr) := 't';\n-         else\n-            Fopstr (Fptr) := 'b';\n-         end if;\n-\n+         Fopstr (Fptr) := (if Text then 't' else 'b');\n          Fptr := Fptr + 1;\n       end if;\n "}, {"sha": "7678bf7205abf72a27ecfb4fa27b3ed0dd529910", "filename": "gcc/ada/s-imgcha.adb", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fs-imgcha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fs-imgcha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgcha.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -124,22 +124,13 @@ package body System.Img_Char is\n \n       if V in C0_Range then\n          S (1 .. 3) := C0 (V);\n-\n-         if S (3) = ' ' then\n-            P := 2;\n-         else\n-            P := 3;\n-         end if;\n+         P := (if S (3) = ' ' then 2 else 3);\n \n       elsif V in C1_Range then\n          S (1 .. 3) := C1 (V);\n \n          if S (1) /= 'r' then\n-            if S (3) = ' ' then\n-               P := 2;\n-            else\n-               P := 3;\n-            end if;\n+            P := (if S (3) = ' ' then 2 else 3);\n \n          --  Special case, res means RESERVED_nnn where nnn is the three digit\n          --  decimal value corresponding to the code position (more efficient"}, {"sha": "645e9fd90bae03a7fc9e373a95ec6610e223ece5", "filename": "gcc/ada/s-taprop-dummy.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fs-taprop-dummy.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fs-taprop-dummy.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-dummy.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -190,7 +190,7 @@ package body System.Task_Primitives.Operations is\n    procedure Initialize (Environment_Task : Task_Id) is\n       No_Tasking : Boolean;\n    begin\n-      raise Program_Error with \"Tasking not implemented on this configuration\";\n+      raise Program_Error with \"tasking not implemented on this configuration\";\n    end Initialize;\n \n    procedure Initialize (S : in out Suspension_Object) is"}, {"sha": "a3b19ab5c5df7aa0a8f150f4c1e69672643f2298", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -312,18 +312,17 @@ package body System.Task_Primitives.Operations is\n       Unlock (L, Global_Lock => True);\n \n       --  No problem if we are interrupted here: if the condition is signaled,\n-      --  WaitForSingleObject will simply not block\n+      --  WaitForSingleObject will simply not block.\n \n       if Rel_Time <= 0.0 then\n          Timed_Out := True;\n          Wait_Result := 0;\n \n       else\n-         if Rel_Time >= Duration (Time_Out_Max) / 1000 then\n-            Time_Out := Time_Out_Max;\n-         else\n-            Time_Out := DWORD (Rel_Time * 1000);\n-         end if;\n+         Time_Out :=\n+           (if Rel_Time >= Duration (Time_Out_Max) / 1000\n+            then Time_Out_Max\n+            else DWORD (Rel_Time * 1000));\n \n          Wait_Result := WaitForSingleObject (HANDLE (Cond.all), Time_Out);\n "}, {"sha": "07ddbce8c60cb103bbc9673a83bbc25a6256b431", "filename": "gcc/ada/s-tarest.adb", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fs-tarest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64e5f7438497707a97da41a07ca787e04d5f311/gcc%2Fada%2Fs-tarest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.adb?ref=e64e5f7438497707a97da41a07ca787e04d5f311", "patch": "@@ -340,11 +340,10 @@ package body System.Tasking.Restricted.Stages is\n \n             Write_Lock (C);\n \n-            if C.Common.Base_Priority < Get_Priority (Self_ID) then\n-               Activate_Prio := Get_Priority (Self_ID);\n-            else\n-               Activate_Prio := C.Common.Base_Priority;\n-            end if;\n+            Activate_Prio :=\n+              (if C.Common.Base_Priority < Get_Priority (Self_ID)\n+               then Get_Priority (Self_ID)\n+               else C.Common.Base_Priority);\n \n             STPO.Create_Task\n               (C, Task_Wrapper'Address,\n@@ -477,11 +476,10 @@ package body System.Tasking.Restricted.Stages is\n \n       pragma Assert (Stack_Address = Null_Address);\n \n-      if Priority = Unspecified_Priority then\n-         Base_Priority := Self_ID.Common.Base_Priority;\n-      else\n-         Base_Priority := System.Any_Priority (Priority);\n-      end if;\n+      Base_Priority :=\n+        (if Priority = Unspecified_Priority\n+         then Self_ID.Common.Base_Priority\n+         else System.Any_Priority (Priority));\n \n       if Single_Lock then\n          Lock_RTS;"}]}