{"sha": "56529056cb42baa382c40de7d239d02dbf72c94f", "node_id": "C_kwDOANBUbNoAKDU2NTI5MDU2Y2I0MmJhYTM4MmM0MGRlN2QyMzlkMDJkYmY3MmM5NGY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-04-12T14:22:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-04-12T14:22:28Z"}, "message": "c++: Fix Solaris bootstraps across midnight\n\nWhen working on the PR109040 fix, I wanted to test it on some\nWORD_REGISTER_OPERATIONS target and tried sparc-solaris on GCC Farm.\nMy bootstrap failed in comparison failure on cp/module.o, because\nSolaris date doesn't support the -r option and one stage's cp/module.o\nwas built before midnight and next stage's cp/module.o after midnight,\nso they had different -DMODULE_VERSION= value.\n\nNow, I think the advice (don't bootstrap at midnight) is something\nwe shouldn't have, so the following patch stores the module version\n(still generated through the same way, date -r cp/module.cc\nif it works, otherwise just date) into a temporary file, makes sure\nthat temporary file is updated when cp/module.cc source is updated\nand when date -r doesn't work copies file from previous stage\nif it is newer than cp/module.cc.\n\n2023-04-12  Jakub Jelinek  <jakub@redhat.com>\n\n\t* Make-lang.in (s-cp-module-version): New target.\n\t(cp/module.o): Depend on it.\n\t(MODULE_VERSION): Remove variable.\n\t(CFLAGS-cp/module.o): For -DMODULE_VERSION= argument just\n\tcat s-cp-module-version.", "tree": {"sha": "a72043e954c209f76bde8e534d79b82412c8a392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a72043e954c209f76bde8e534d79b82412c8a392"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56529056cb42baa382c40de7d239d02dbf72c94f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56529056cb42baa382c40de7d239d02dbf72c94f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56529056cb42baa382c40de7d239d02dbf72c94f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56529056cb42baa382c40de7d239d02dbf72c94f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14f0ea22413fe3e64306c57fbfd2ae7b5769c1a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f0ea22413fe3e64306c57fbfd2ae7b5769c1a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f0ea22413fe3e64306c57fbfd2ae7b5769c1a1"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "4ee26fad93d646afd7c1bb2d47472ba80da9fae7", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56529056cb42baa382c40de7d239d02dbf72c94f/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56529056cb42baa382c40de7d239d02dbf72c94f/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=56529056cb42baa382c40de7d239d02dbf72c94f", "patch": "@@ -59,12 +59,21 @@ CFLAGS-cp/module.o += -DHOST_MACHINE=\\\"$(host)\\\" \\\n \n # In non-release builds, use a date-related module version.\n ifneq ($(DEVPHASE_c),)\n-# Some date's don't grok 'r', if so, simply use today's\n-# date (don't bootstrap at midnight).\n-MODULE_VERSION := $(shell date -r $(srcdir)/cp/module.cc '+%y%m%d-%H%M' \\\n-  2>/dev/null || date '+%y%m%d-0000' 2>/dev/null || echo 0)\n-\n-CFLAGS-cp/module.o += -DMODULE_VERSION='($(subst -,,$(MODULE_VERSION))U)'\n+# Some date's don't grok 'r', if so, simply use today's date,\n+# but use date from previous stage if bootstrapping to avoid breaking\n+# bootstraps across midnight.\n+s-cp-module-version: $(srcdir)/cp/module.cc\n+\tMODULE_VERSION=`if date -r $(srcdir)/cp/module.cc '+%y%m%d%H%MU' \\\n+\t\t\t  2>/dev/null; then :; \\\n+\t\t\telif test ../prev-gcc/s-cp-module-version -nt \\\n+\t\t\t       $(srcdir)/cp/module.cc; then \\\n+\t\t\t  cat ../prev-gcc/s-cp-module-version; \\\n+\t\t\telse \\\n+\t\t\t  date '+%y%m%d0000U' 2>/dev/null; \\\n+\t\t\tfi`; \\\n+\techo $${MODULE_VERSION} > s-cp-module-version\n+cp/module.o: s-cp-module-version\n+CFLAGS-cp/module.o += -DMODULE_VERSION='$(shell cat s-cp-module-version)'\n endif\n \n # Create the compiler driver for g++."}]}