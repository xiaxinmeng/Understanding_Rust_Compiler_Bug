{"sha": "f4356120ba88c083dd5987376aab7590dd1e0e13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQzNTYxMjBiYTg4YzA4M2RkNTk4NzM3NmFhYjc1OTBkZDFlMGUxMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-15T07:24:38Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-15T07:24:38Z"}, "message": "i386: Add V2SFmode hadd/hsub instructions [PR95046]\n\nPFACC/PFNACC 3dNow! instructions got their corresponding SSE alternative\nin SSE3, so these can't be implemented with TARGET_MMX_WITH_SSE, which\nimplies SSE2.  These instructions are only generated via builtins, and\nsince several 3dNow! insns have no corresponding SSE alternative,\nwe can't avoid MMX registers with 3dNow! builtins anyway.\n\nAdd SSE3/AVX alternatives to the insn pattern, so compiler will be able\nto use XMM registers when available, but don't prevent MMX registers,\nsince they are needed when SSE3 is not active.\n\nAdd additional generic insn patterns, used by the combiner to\nsynthesize horizontal V2SFmode add/sub instructions.  These patterns\nare active for TARGET_MMX_WITH_SSE only, and use only XMM registers.\n\ngcc/ChangeLog:\n\n\tPR target/95046\n\t* config/i386/i386.md (isa): Add sse3_noavx.\n\t(enabled): Handle sse3_noavx.\n\n\t* config/i386/mmx.md (mmx_haddv2sf3): New expander.\n\t(*mmx_haddv2sf3): Rename from mmx_haddv2sf3.  Add SSE/AVX\n\talternatives.  Match commutative vec_select selector operands.\n\t(*mmx_haddv2sf3_low): New insn pattern.\n\n\t(*mmx_hsubv2sf3): Add SSE/AVX alternatives.\n\t(*mmx_hsubv2sf3_low): New insn pattern.\n\ntestsuite/ChangeLog:\n\n\tPR target/95046\n\t* gcc.target/i386/pr95046-8.c: New test.", "tree": {"sha": "b5b669738d26d060ebd3a957c32b39f9646248e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5b669738d26d060ebd3a957c32b39f9646248e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4356120ba88c083dd5987376aab7590dd1e0e13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4356120ba88c083dd5987376aab7590dd1e0e13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4356120ba88c083dd5987376aab7590dd1e0e13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4356120ba88c083dd5987376aab7590dd1e0e13/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84935c9822183ce403bb361c5f405711b9a808c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84935c9822183ce403bb361c5f405711b9a808c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84935c9822183ce403bb361c5f405711b9a808c6"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "e164fd4ea37bf2a4e177e79c8fa5d5ed91f241bf", "filename": "gcc/testsuite/gcc.target/i386/pr95046-8.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4356120ba88c083dd5987376aab7590dd1e0e13/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95046-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4356120ba88c083dd5987376aab7590dd1e0e13/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95046-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95046-8.c?ref=f4356120ba88c083dd5987376aab7590dd1e0e13", "patch": "@@ -0,0 +1,22 @@\n+/* PR target/95046 */\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -msse3\" } */\n+\n+\n+typedef float __v2sf __attribute__ ((__vector_size__ (8)));\n+\n+float\n+foo (__v2sf a)\n+{\n+  return a[0] + a[1];\n+}\n+\n+/* { dg-final { scan-assembler \"\\tv?haddps\" } } */\n+\n+float\n+bar (__v2sf a)\n+{\n+  return a[0] - a[1];\n+}\n+\n+/* { dg-final { scan-assembler \"\\tv?hsubps\" } } */"}]}