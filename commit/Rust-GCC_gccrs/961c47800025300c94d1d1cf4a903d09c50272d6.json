{"sha": "961c47800025300c94d1d1cf4a903d09c50272d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYxYzQ3ODAwMDI1MzAwYzk0ZDFkMWNmNGE5MDNkMDljNTAyNzJkNg==", "commit": {"author": {"name": "Steve Chamberlain", "email": "sac@gnu.org", "date": "1994-04-20T19:17:23Z"}, "committer": {"name": "Steve Chamberlain", "email": "sac@gnu.org", "date": "1994-04-20T19:17:23Z"}, "message": "ls -la\n\nFrom-SVN: r7102", "tree": {"sha": "26e40c25486ae79e12893f43b24d7b072c5a626d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26e40c25486ae79e12893f43b24d7b072c5a626d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/961c47800025300c94d1d1cf4a903d09c50272d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/961c47800025300c94d1d1cf4a903d09c50272d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/961c47800025300c94d1d1cf4a903d09c50272d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/961c47800025300c94d1d1cf4a903d09c50272d6/comments", "author": null, "committer": null, "parents": [{"sha": "d3ae8277eb0e9bf19536a1b0916c23bb55edbc59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ae8277eb0e9bf19536a1b0916c23bb55edbc59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ae8277eb0e9bf19536a1b0916c23bb55edbc59"}], "stats": {"total": 239, "additions": 102, "deletions": 137}, "files": [{"sha": "794fe457f1db89658a79ab24ebe96f587f7407e5", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 102, "deletions": 137, "changes": 239, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/961c47800025300c94d1d1cf4a903d09c50272d6/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/961c47800025300c94d1d1cf4a903d09c50272d6/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=961c47800025300c94d1d1cf4a903d09c50272d6", "patch": "@@ -57,6 +57,9 @@\n \n (define_attr \"cpu\" \"sh0,sh1,sh2,sh3\"\n   (const (symbol_ref \"sh_cpu\")))\n+\n+(define_attr \"interrupt_function\" \"no,yes\"\n+  (const (symbol_ref \"pragma_interrupt\")))\n ;;\n ;; cbranch\tconditional branch instructions\n ;; jump\t\tunconditional jumps\n@@ -139,9 +142,10 @@\n   [(eq_attr \"in_delay_slot\" \"yes\") (nil) (nil)])\n \n (define_delay \n-  (eq_attr \"type\" \"rte\")\n+  (eq_attr \"type\" \"return\")\n   [(and (eq_attr \"in_delay_slot\" \"yes\") \n-\t(eq_attr \"hit_stack\" \"no\")) (nil) (nil)])\n+\t(ior (eq_attr \"interrupt_function\" \"no\")\n+\t    (eq_attr \"hit_stack\" \"no\"))) (nil) (nil)])\n \n (define_attr \"hit_stack\" \"yes,no\" (const_string \"no\"))\n \n@@ -190,8 +194,8 @@\n   \"tst\t%0,%0 ! t0\")\n \n (define_insn \"cmpeqsi_t\"\n-  [(set (reg:SI 18) (eq:SI (match_operand:SI 0 \"arith_operand\" \"r,N,r,z\")\n-\t\t\t   (match_operand:SI 1 \"arith_operand\" \"N,r,r,I\")))]\n+  [(set (reg:SI 18) (eq:SI (match_operand:SI 0 \"arith_operand\" \"r,N,z,r\")\n+\t\t\t   (match_operand:SI 1 \"arith_operand\" \"N,r,rI,r\")))]\n   \"\"\n   \"@\n \ttst\t%0,%0 !t1\n@@ -260,29 +264,34 @@\n \t(plus:SI (reg:SI 18)\n \t\t (plus:SI (match_operand:SI 1 \"arith_reg_operand\" \"%0\")\n \t\t\t  (match_operand:SI 2 \"arith_reg_operand\" \"r\"))))\n-   (clobber (reg:SI 18))]\n+   (set (reg:SI 18) (gt:SI (match_dup 1) (match_dup 0)))]\n   \"\"\n   \"addc\t%2,%0\")\n \n \n ;; this should be a define split.\n \n (define_expand \"adddi3\"\n-  [(set (reg:SI 18) (const_int 0))\n-   (parallel\n-    [(set (subreg:SI (match_operand:DI 0 \"arith_reg_operand\" \"=r\") 1)\n-\t  (plus:SI (reg:SI 18)\n-\t\t   (plus:SI (subreg:SI (match_operand:DI 1 \"arith_reg_operand\" \"r\") 1)\n-\t\t\t    (subreg:SI (match_operand:DI 2 \"arith_reg_operand\" \"r\") 1))))\n-     (clobber (reg:SI 18))])\n-   (parallel\n-    [(set (subreg:SI (match_dup 0) 0)\n-\t  (plus:SI (reg:SI 18)\n-\t\t   (plus:SI (subreg:SI (match_dup 1) 0)\n-\t\t\t    (subreg:SI (match_dup 2) 0))))\n-     (clobber (reg:SI 18))])]\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(plus:DI (match_operand:DI 1 \"register_operand\" \"\")\n+\t\t (match_operand:DI 2 \"register_operand\" \"\")))]\n   \"\"\n-  \"\")\n+  \"\n+{\n+  rtx low_a = gen_rtx (SUBREG, SImode, operands[1], 1);\n+  rtx low_b = gen_rtx (SUBREG, SImode, operands[2], 1);\n+  rtx low_s = gen_rtx (SUBREG, SImode, operands[0], 1);\n+\n+  rtx high_a = gen_rtx (SUBREG, SImode, operands[1], 0);\n+  rtx high_b = gen_rtx (SUBREG, SImode, operands[2], 0);\n+  rtx high_s = gen_rtx (SUBREG, SImode, operands[0], 0);\n+\n+  emit_insn (gen_clrt ());\n+  emit_insn (gen_addc (low_s, low_a, low_b));\n+  emit_insn (gen_addc (high_s, high_a, high_b));\n+\n+  DONE;\n+}\")\n \n (define_insn \"addsi3_real\"\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n@@ -423,9 +432,9 @@\n (define_expand \"mulhisi3\"\n   [(set (reg:SI 21)\n \t(mult:SI (sign_extend:SI\n-\t\t  (match_operand:HI 1 \"arith_reg_operand\" \"r\"))\n+\t\t  (match_operand:HI 1 \"mac_operand\" \"r\"))\n \t\t (sign_extend:SI\n-\t\t  (match_operand:HI 2 \"arith_reg_operand\" \"r\"))))\n+\t\t  (match_operand:HI 2 \"mac_operand\" \"r\"))))\n    (set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n \t(reg:SI 21))]\n   \"\"\n@@ -494,7 +503,7 @@\n \t\t  (match_operand:SI 2 \"arith_reg_operand\" \"r\")))\n    (set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n \t(reg:SI 21))]\n-  \"\"\n+  \"TARGET_SH2\"\n   \"\n {\n   if (!TARGET_SH2)\n@@ -650,7 +659,7 @@\n \t(ashift:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n \t\t   (match_operand:SI 2 \"immediate_operand\" \"n\")))\n    (clobber (reg:SI 18))]\n-  \"(! pnum_clobbers)\"\n+  \"\"\n   \"*return output_shift(\\\"shll\\\", operands[0], operands[2], ASHIFT);\"\n   [(set_attr \"length\" \"12\")\n    (set_attr \"in_delay_slot\" \"no\")\n@@ -736,18 +745,14 @@\n \tshlr\t%0\n \tshlr%O2\t%0\")\n \n-; seperate pattern for shifts by any N.  Look at pnum_clobbers\n-; to see if this is being recognised inside combine.  If so, dont\n-; match, since combine will try and merge shifts, which will break\n-; scheduling - this could be handled with a large number of\n-; define_splits\n+; seperate pattern for shifts by any N. \n \n (define_insn \"lshrsi3_n\"\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n \t(lshiftrt:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n \t\t     (match_operand:SI 2 \"immediate_operand\" \"n\")))\n    (clobber (reg:SI 18))]\n-  \"!pnum_clobbers\"\n+  \"\"\n   \"* return output_shift (\\\"shlr\\\", operands[0], operands[2], LSHIFTRT);\"\n   [(set_attr \"length\" \"12\")\n    (set_attr \"in_delay_slot\" \"no\")\n@@ -965,6 +970,14 @@\n   \"\"\n   \"clrt\")\n \n+;(define_insn \"movsi_pi\"\n+;  [(set (match_operand:SI 0 \"general_movdst_operand\" \"=r\")\n+;\t(mem:SI (post_inc (match_operand:SI 1 \"register_operand\" \"r\"))))]\n+;  \"\"\n+;  \"mov.l\t@%1,%0\\;add\t#4,%1\"\n+;  [(set_attr \"length\" \"4\")])\n+\n+\n (define_insn \"movsi_i\"\n   [(set (match_operand:SI 0 \"general_movdst_operand\" \"=r,r,r,r,r,<m,<,xl,xl,t,r\")\n \t(match_operand:SI 1 \"general_movsrc_operand\" \"Q,rI,>m,xl,t,r,xl,r,>,r,i\"))]\n@@ -977,7 +990,7 @@\n       switch (get_attr_length(insn)) \n \t{\n \tcase 2:\n-\t  return \\\"mov.l\t%1,%0 ! 2 byte\\\";\n+\t  return \\\"mov.l\t%1,%0\\\";\n \tcase 12:\n \t  return \\\"mov.l\tTA%*,%0\\;bra\tTB%*\\;mov.l\t@%0,%0\\;.align 2\\;TA%*: .long %1\\;TB%*:%^\\\";\n \t}\n@@ -1000,8 +1013,10 @@\n   [(set (match_operand:SI 0 \"general_movdst_operand\" \"\")\n \t(match_operand:SI 1 \"general_movsrc_operand\" \"\"))]\n   \"\"\n+\n   \"{ if (prepare_move_operands(operands, SImode)) DONE; } \")\n \n+\n (define_insn \"movqi_i\"\n   [(set (match_operand:QI 0 \"general_movdst_operand\" \"=r,r,>m,r,r,l\")\n \t(match_operand:QI 1 \"general_movsrc_operand\"  \"ri,<m,r,t,l,r\"))]\n@@ -1035,7 +1050,7 @@\n       switch (get_attr_length(insn)) \n \t{\n \tcase 2:\n-\t  return \\\"mov.w\t%1,%0 ! 2 byte\\\";\n+\t  return \\\"mov.w\t%1,%0\\\";\n \tcase 12:\n \t  return \\\"mov.l\tTA%*,%0\\;bra\tTB%*\\;mov.w\t@%0,%0\\;.align 2\\;TA%*: .long %1\\;TB%*:%^\\\";\n \t}\n@@ -1065,14 +1080,6 @@\n    [(set_attr \"length\" \"4\")\n     (set_attr \"type\" \"store\")])\n \n-(define_split \n-  [(set (match_operand:DI 0 \"general_movdst_operand\" \"\")\n-\t(match_operand:DI 1 \"nonimmediate_operand\" \"\"))]\n-  \"\"\n-  [(set (match_dup 2) (match_dup 3))\n-   (set (match_dup 4) (match_dup 5))]\n-  \"if (prepare_split_double_ops (operands, DImode)) DONE; else FAIL;\")\n-\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"general_movdst_operand\" \"=r,r,r,m,r\")\n \t(match_operand:DI 1 \"general_movsrc_operand\" \"Q,r,m,r,i\"))]\n@@ -1082,11 +1089,13 @@\n   [(set_attr \"length\" \"*,4,4,4,4\")\n    (set_attr \"type\" \"pcloadsi,move,load,store,move\")])\n \n+\n+\t\n (define_expand \"movdi\"\n-  [(set (match_operand:DI 0 \"general_movdst_operand\" \"=r,m,r\")\n-\t(match_operand:DI 1 \"general_movsrc_operand\" \"m,r,i\"))]\n+  [(set (match_operand:DI 0 \"general_movdst_operand\" \"\")\n+\t(match_operand:DI 1 \"general_movsrc_operand\" \"\"))]\n   \"\"\n-  \"if (prepare_move_operands(operands, DImode)) DONE;\")\n+  \"if ( prepare_move_operands(operands, DImode)) DONE; \")\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"push_operand\" \"=<\")\n@@ -1096,14 +1105,6 @@\n    [(set_attr \"length\" \"4\")\n     (set_attr \"type\" \"store\")])\n \n-(define_split \n-  [(set (match_operand:DF 0 \"general_movdst_operand\" \"\")\n-\t(match_operand:DF 1 \"nonimmediate_operand\" \"\"))]\n-  \"\"\n-  [(set (match_dup 2) (match_dup 3))\n-   (set (match_dup 4) (match_dup 5))]\n-  \"if (prepare_split_double_ops (operands, DFmode)) DONE; else FAIL;\")\n-\n (define_insn \"movdf_k\"\n   [(set (match_operand:DF 0 \"general_movdst_operand\" \"=r,r,m\")\n \t(match_operand:DF 1 \"general_movsrc_operand\" \"r,m,r\"))]\n@@ -1117,7 +1118,7 @@\n   [(set (match_operand:DF 0 \"general_movdst_operand\" \"\")\n \t(match_operand:DF 1 \"general_movsrc_operand\" \"\"))]\n   \"\"\n-  \"if (prepare_move_operands (operands, DFmode)) DONE;\")\n+ \"{ if (prepare_move_operands(operands, DFmode)) DONE; } \")\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"push_operand\" \"=<\")\n@@ -1131,8 +1132,8 @@\n \t(match_operand:SF 1 \"general_movsrc_operand\"  \"r,<,r,I,m,r,r,l\"))]\n   \"\"\n   \"@\n-        mov.l\t%1,@%N0\\;add\t#4,%N0\n-        add\t#-4,%1\\;mov.l\t@%N1,%0\n+        mov.l\t%1,@%N0\\;add\t#4,%N0 !bad\n+        add\t#-4,%1\\;mov.l\t@%N1,%0 !bad\n \tmov\t%1,%0\n \tmov\t%1,%0\n \tmov.l\t%1,%0\n@@ -1166,7 +1167,7 @@\n \t\t\t   (label_ref (match_operand 0 \"\" \"\"))\n \t\t\t   (pc)))]\n   \"\"\n-  \"* return output_branch (0, insn, operands[1]);\"\n+  \"* return output_branch (0, insn);\"\n   [(set_attr \"type\" \"cbranch\")])\n \n (define_insn \"inverse_branch_true\"\n@@ -1315,6 +1316,16 @@\n    (set_attr \"needs_delay_slot\" \"yes\")])\n \n \n+(define_insn \"bsr\"\n+  [(call (mem:SI (match_operand 0 \"bsr_operand\" \"i\"))\n+\t (match_operand 1 \"\" \"\"))\n+   (clobber (reg:SI 17))]\n+  \"TARGET_BSR\"\n+  \"bsr\t%O0%#\"\n+  [(set_attr \"needs_delay_slot\" \"yes\")\n+   (set_attr \"in_delay_slot\" \"no\")\n+   (set_attr \"length\" \"4\")])\n+\n (define_insn \"calli\"\n   [(call (mem:SI (match_operand:SI 0 \"arith_reg_operand\" \"r\"))\n \t (match_operand 1 \"\" \"\"))\n@@ -1325,6 +1336,17 @@\n    (set_attr \"in_delay_slot\" \"no\")\n    (set_attr \"length\" \"4\")])\n \n+(define_insn \"bsr_value\"\n+  [(set (match_operand 0 \"\" \"=rf\")\n+\t(call (mem:SI (match_operand 1 \"bsr_operand\" \"i\"))\n+\t      (match_operand 2 \"\" \"\")))\n+   (clobber (reg:SI 17))]\n+  \"TARGET_BSR\"\n+  \"bsr\t%O1%#\"\n+  [(set_attr \"needs_delay_slot\" \"yes\")\n+   (set_attr \"in_delay_slot\" \"no\")\n+   (set_attr \"length\" \"4\")])\n+\n (define_insn \"call_valuei\"\n   [(set (match_operand 0 \"\" \"=rf\")\n \t(call (mem:SI (match_operand:SI 1 \"arith_reg_operand\" \"r\"))\n@@ -1389,7 +1411,7 @@\n   [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n \t(mem:QI (pre_dec:SI (match_operand:SI 1 \"register_operand\" \"r\"))))]\n   \"\"\n-  \"add\t#-1,%1\\;mov.b\t@%1,%0\"\n+  \"add\t#-1,%1\\;mov.b\t@%1,%0 !bad\"\n   [(set_attr \"length\" \"4\")])\n \n ;; Load address of a label. This is only generated by the casesi expand.\n@@ -1450,17 +1472,12 @@\n    (set_attr \"in_delay_slot\" \"no\")\n    (set_attr \"length\" \"6\")])\n \n-(define_insn \"\"\n- [(return)]\n- \"!pragma_interrupt && reload_completed\"\n- \"rts%#\"\n- [(set_attr \"type\" \"return\")])\n \n-(define_insn \"\"\n+(define_insn \"return\"\n   [(return)]\n-  \"pragma_interrupt && reload_completed\"\n-  \"rte%#\"\n-  [(set_attr \"type\" \"rte\")])\n+  \"reload_completed\"\n+  \"%@\t%#\"\n+  [(set_attr \"type\" \"return\")])\n \n (define_expand \"prologue\"\n   [(const_int 0)]\n@@ -1485,7 +1502,7 @@\n \n (define_insn \"movt\"\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n-\t(eq (reg:SI 18) (const_int 1)))]\n+\t(eq:SI (reg:SI 18) (const_int 1)))]\n   \"\"\n   \"movt\t%0 ! \")\n \n@@ -1590,26 +1607,9 @@\n    (set (match_operand:SI 2 \"register_operand\" \"=r\")\n \t(sign_extend:SI (match_dup 0)))]\n   \"REGNO (operands[0]) != REGNO (operands[2]) \n-   && dead_or_set_p (insn, operands[0])\"\n+   && 0 && dead_or_set_p (insn, operands[0])\"\n   \"mov.b\t%1,%2 ! p4\")\n \n-; notice when a mov.b could be done with a displacement\n-\n-(define_peephole\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(plus:SI (match_dup 0)\n-\t\t (match_operand:SI 1 \"byte_index_operand\" \"i\")))\n-   (set (mem:QI (match_dup 0))\t(reg:QI 0))]\n-  \"dead_or_set_p (insn, operands[0])\"\n-  \"mov.b\tr0,@(%O1,%0)\")\n-\n-(define_peephole\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(plus:SI (match_dup 0)\n-\t\t (match_operand:SI 1 \"byte_index_operand\" \"i\")))\n-   (set (reg:QI 0) (mem:QI (match_dup 0)))]\n-  \"dead_or_set_p (insn, operands[0])\"\n-  \"mov.b\t@(%O1,%0),r0\")\n   \n ;; -------------------------------------------------------------------------\n ;; Peepholes\n@@ -1628,54 +1628,6 @@\n     (set_attr \"in_delay_slot\" \"no\")])\n \n \n-;\tmov\tr4,r3\n-;\tshll\tr3\n-;\tmov\tr3,r0\n-;->\n-;\tmov\tr4,r0\n-;\tshll\tr0\n-\n-(define_peephole \n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(match_operand:SI 1 \"register_operand\" \"r\"))\n-  (set (match_dup 0)\n-\t  (plus:SI (match_dup 0) (match_dup 1)))\n-   (set (match_operand:SI 2 \"register_operand\" \"=r\")\n-\t(match_dup 0))]\n-  \"dead_or_set_p (NEXT_INSN (insn), operands[0])\"\n-  \"mov\t%1,%2\\;add\t%2,%2\"\n-  [(set_attr \"length\" \"4\")])\n-\n-(define_peephole\n-  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n-\t(and:SI (match_dup 0)\n-\t\t(const_int 1)))\n-   (set (match_operand:SI 1 \"arith_reg_operand\" \"=r\")\n-\t(const_int 0))\n-   (set (reg:SI 18)\n-\t(eq:SI (match_dup 0) (match_dup 1)))]\n-  \"dead_or_set_p (insn, operands[0])\n-   && dead_or_set_p (insn, operands[1])\"\n-  \"rotr\t%0\")\n-\n-(define_peephole\n-  [(set (match_operand:SI 0 \"arith_reg_operand\" \"z,r\")\n-\t(and:SI (match_dup  0)\n-\t\t(match_operand:SI 1 \"arith_operand\" \"L,r\")))\n-   (set (reg:SI 18) \n-\t(eq:SI (match_dup 0) (const_int 0)))]\n-  \"dead_or_set_p (insn, operands[0])\"\n-  \"tst\t%1,%0 !t5\")\n-  \n-(define_peephole\n-  [(set (match_operand:SI 0 \"arith_reg_operand\" \"z,r\")\n-\t(and:SI (match_dup  0)\n-\t\t(match_operand:SI 1 \"arith_operand\" \"L,r\")))\n-   (set (reg:SI 18) \n-\t(eq:SI (match_dup 0) (const_int 0)))]\n-  \"dead_or_set_p (insn, operands[0])\"\n-  \"tst\t%1,%0 !t4\")\n-\n ;; -------------------------------------------------------------------------\n ;; Combine patterns\n ;; -------------------------------------------------------------------------\n@@ -1705,11 +1657,11 @@\n   \n (define_insn \"combine_2\"\n   [(set (reg:SI 18)\n-\t(eq (and:SI (match_operand:SI 0 \"arith_reg_operand\" \"z,r\")\n+\t(eq:SI (and:SI (match_operand:SI 0 \"arith_reg_operand\" \"z,r\")\n \t\t    (match_operand:SI 1 \"arith_operand\" \"L,r\"))\n \t    (const_int 0)))]\n   \"\"\n-  \"tst\t%1,%0 !t2\")\n+  \"tst\t%1,%0 !t2c\")\n \n (define_split\n   [(set (pc) \n@@ -1720,7 +1672,7 @@\n \t (pc)))\n    (clobber (reg:SI 18))]\n   \"\"\n-  [(set (reg:SI 18) (eq (and:SI (match_dup 0) (match_dup 0))\n+  [(set (reg:SI 18) (eq:SI (and:SI (match_dup 0) (match_dup 0))\n \t\t\t(const_int 0)))\n    (set (pc)\n \t(if_then_else (match_op_dup 2 [(reg:SI 18) (const_int 1)])\n@@ -1825,23 +1777,26 @@\n    operands[4] = gen_reg_rtx(SImode);} \")\n \n \n+;; these instructions don't really exist - they are needed\n+;; before machine_dependent_reorg\n+\n (define_insn \"movsi_k\"\n  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n        (match_operand:SI 1 \"immediate_operand\" \"\"))]\n-  \"!pnum_clobbers\"\n+  \"\"\n   \"! this is a fake\")\n \n \n (define_insn \"movhi_k\"\n  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n        (match_operand:HI 1 \"immediate_operand\" \"\"))]\n-  \"!pnum_clobbers\"\n+  \"\"\n   \"! this is a fake\")\n \n (define_insn \"movdi_k\"\n  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n        (match_operand:DI 1 \"immediate_operand\" \"\"))]\n-  \"!pnum_clobbers\"\n+  \"\"\n   \"! this is a fake\")\n \n ;; -------------------------------------------------------------------------\n@@ -1898,4 +1853,14 @@\n    (set_attr \"type\" \"sfunc\")\n    (set_attr \"needs_delay_slot\" \"yes\")])\n \n+(define_insn \"mac\"\n+  [(set (reg:SI 21)\n+\t(mult:SI (sign_extend:SI (mem:HI (post_inc:SI \n+\t\t\t\t\t  (match_operand:SI 0 \"arith_reg_operand\" \"r\"))))\n+\t\t (sign_extend:SI (mem:HI (post_inc:SI\n+\t\t\t\t\t  (match_operand:SI 1 \"arith_reg_operand\" \"r\"))))))]\n+  \"\"\n+  \"mac.w\t@%0+,@%1+\")\n+\n \n+\t\t\t"}]}