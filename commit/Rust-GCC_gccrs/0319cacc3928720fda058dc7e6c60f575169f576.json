{"sha": "0319cacc3928720fda058dc7e6c60f575169f576", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMxOWNhY2MzOTI4NzIwZmRhMDU4ZGM3ZTZjNjBmNTc1MTY5ZjU3Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T15:39:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T15:39:29Z"}, "message": "[multiple changes]\n\n2011-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch7.adb: Minor reformatting.\n\n2011-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_strm.adb: Minor reformatting.\n\n2011-08-04  Vadim Godunko  <godunko@adacore.com>\n\n\t* s-atocou.adb: Replace by dummy version and use on targets where atomic\n\toperations are not supported.\n\t* s-atocou-builtin.adb: Renamed from s-atocou.adb.\n\t* s-atocou-x86.adb: New file.\n\t* Makefile.rtl: Add s-atocou.o file\n\n2011-08-04  Arnaud Charlet  <charlet@adacore.com>\n\n\t* make.adb (Compile): Move setting of CodePeer_Mode to ...\n\t(Compilation_Phase): ... here.\n\t(Scan_Make_Arg): Now bind and link by default in CodePeer mode.\n\n2011-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* Make-generated.in: Fix minor typo in comment.\n\nFrom-SVN: r177403", "tree": {"sha": "74c2008ce6ed267b2d7fb03bcf097fcef4d4d4d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74c2008ce6ed267b2d7fb03bcf097fcef4d4d4d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0319cacc3928720fda058dc7e6c60f575169f576", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0319cacc3928720fda058dc7e6c60f575169f576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0319cacc3928720fda058dc7e6c60f575169f576", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0319cacc3928720fda058dc7e6c60f575169f576/comments", "author": null, "committer": null, "parents": [{"sha": "26e7e1a05d9a120305dcc16b8908cd70439b4dd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26e7e1a05d9a120305dcc16b8908cd70439b4dd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26e7e1a05d9a120305dcc16b8908cd70439b4dd3"}], "stats": {"total": 262, "additions": 212, "deletions": 50}, "files": [{"sha": "2b513970420fe4b3ce82fbb3257286dc56daedf9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0319cacc3928720fda058dc7e6c60f575169f576", "patch": "@@ -1,3 +1,29 @@\n+2011-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch7.adb: Minor reformatting.\n+\n+2011-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_strm.adb: Minor reformatting.\n+\n+2011-08-04  Vadim Godunko  <godunko@adacore.com>\n+\n+\t* s-atocou.adb: Replace by dummy version and use on targets where atomic\n+\toperations are not supported.\n+\t* s-atocou-builtin.adb: Renamed from s-atocou.adb.\n+\t* s-atocou-x86.adb: New file.\n+\t* Makefile.rtl: Add s-atocou.o file\n+\n+2011-08-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* make.adb (Compile): Move setting of CodePeer_Mode to ...\n+\t(Compilation_Phase): ... here.\n+\t(Scan_Make_Arg): Now bind and link by default in CodePeer mode.\n+\n+2011-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* Make-generated.in: Fix minor typo in comment.\n+\n 2011-08-04  Thomas Quinot  <quinot@adacore.com>\n \n \t* gnatls.adb: Use Prj.Env.Initialize_Default_Project_Path to retrieve"}, {"sha": "74536191483698a298ed24ec0f4aa6744d153abd", "filename": "gcc/ada/Make-generated.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2FMake-generated.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2FMake-generated.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-generated.in?ref=0319cacc3928720fda058dc7e6c60f575169f576", "patch": "@@ -74,7 +74,7 @@ OSCONS_EXTRACT=../../../$(DECC) -DNATIVE \\\n   ./s-oscons-tmplt.exe > s-oscons-tmplt.s\n \n else\n-# GCC_FOR_TARGET has paths relative to the gcc directory, so we need to ajust\n+# GCC_FOR_TARGET has paths relative to the gcc directory, so we need to adjust\n # for running it from $(ADA_GEN_SUBDIR)/bldtools/oscons\n OSCONS_CC=`echo \"$(GCC_FOR_TARGET)\" \\\n   | sed -e 's^\\./xgcc^../../../xgcc^' -e 's^-B./^-B../../../^'`"}, {"sha": "4f5cb48b13d44a0e95483b3f189ae452669515e5", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=0319cacc3928720fda058dc7e6c60f575169f576", "patch": "@@ -446,6 +446,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-arit64$(objext) \\\n   s-assert$(objext) \\\n   s-atacco$(objext) \\\n+  s-atocou$(objext) \\\n   s-auxdec$(objext) \\\n   s-bitops$(objext) \\\n   s-boarop$(objext) \\"}, {"sha": "8343d2af0b4833bf12fb4bdf38c929d2dde89d11", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 10, "deletions": 20, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=0319cacc3928720fda058dc7e6c60f575169f576", "patch": "@@ -1130,8 +1130,8 @@ package body Exp_Ch7 is\n       --  object.\n \n       Has_Tagged_Types : Boolean := False;\n-      --  A general flag which denotes whether N has at least one library-level\n-      --  tagged type declaration.\n+      --  A general flag which indicates whether N has at least one library-\n+      --  level tagged type declaration.\n \n       HSS : Node_Id := Empty;\n       --  The sequence of statements of N (if available)\n@@ -1741,6 +1741,7 @@ package body Exp_Ch7 is\n                   then\n                      Last_Top_Level_Ctrl_Construct := Decl;\n                   end if;\n+\n                else\n                   Process_Tagged_Type_Declaration (Decl);\n                end if;\n@@ -1757,6 +1758,7 @@ package body Exp_Ch7 is\n                   then\n                      Last_Top_Level_Ctrl_Construct := Decl;\n                   end if;\n+\n                else\n                   Process_Object_Declaration (Decl, Has_No_Init, Is_Protected);\n                end if;\n@@ -2774,19 +2776,15 @@ package body Exp_Ch7 is\n          --  cases, the finalizer must be created and carry the additional\n          --  statements.\n \n-         if Acts_As_Clean\n-           or else Has_Ctrl_Objs\n-           or else Has_Tagged_Types\n-         then\n+         if Acts_As_Clean or Has_Ctrl_Objs or Has_Tagged_Types then\n             Build_Components;\n          end if;\n \n          --  The preprocessing has determined that the context has controlled\n          --  objects or library-level tagged types.\n \n-         if Has_Ctrl_Objs\n-           or else Has_Tagged_Types\n-         then\n+         if Has_Ctrl_Objs or Has_Tagged_Types then\n+\n             --  Private declarations are processed first in order to preserve\n             --  possible dependencies between public and private objects.\n \n@@ -2820,27 +2818,19 @@ package body Exp_Ch7 is\n          --  cases, the finalizer must be created and carry the additional\n          --  statements.\n \n-         if Acts_As_Clean\n-           or else Has_Ctrl_Objs\n-           or else Has_Tagged_Types\n-         then\n+         if Acts_As_Clean or Has_Ctrl_Objs or Has_Tagged_Types then\n             Build_Components;\n          end if;\n \n-         if Has_Ctrl_Objs\n-           or else Has_Tagged_Types\n-         then\n+         if Has_Ctrl_Objs or Has_Tagged_Types then\n             Process_Declarations (Stmts);\n             Process_Declarations (Decls);\n          end if;\n       end if;\n \n       --  Step 3: Finalizer creation\n \n-      if Acts_As_Clean\n-        or else Has_Ctrl_Objs\n-        or else Has_Tagged_Types\n-      then\n+      if Acts_As_Clean or Has_Ctrl_Objs or Has_Tagged_Types then\n          Create_Finalizer;\n       end if;\n    end Build_Finalizer;"}, {"sha": "cc697bf8270f33bf0f80970220ba5d8c3a206558", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=0319cacc3928720fda058dc7e6c60f575169f576", "patch": "@@ -477,6 +477,8 @@ package body Exp_Strm is\n    begin\n       Check_Restriction (No_Default_Stream_Attributes, N);\n \n+      --  Are we sure following messages are issued in -gnatc mode ???\n+\n       if Restriction_Active (No_Default_Stream_Attributes) then\n          Error_Msg_NE\n            (\"missing user-defined Input for type&\", N, Etype (Targ));"}, {"sha": "f6f889d3cb0704931560e177b973ae822a0e56f8", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=0319cacc3928720fda058dc7e6c60f575169f576", "patch": "@@ -2908,13 +2908,6 @@ package body Make is\n                Do_Bind_Step := False;\n                Do_Link_Step := False;\n                Syntax_Only  := False;\n-\n-            elsif Args (J).all = \"-gnatC\"\n-              or else Args (J).all = \"-gnatcC\"\n-            then\n-               --  If we compile with -gnatC, enable CodePeer globalize step\n-\n-               CodePeer_Mode := True;\n             end if;\n          end loop;\n \n@@ -4879,12 +4872,14 @@ package body Make is\n          return;\n       end if;\n \n-      --  If the objects were up-to-date check if the executable file\n-      --  is also up-to-date. For now always bind and link on the JVM\n-      --  since there is currently no simple way to check whether\n-      --  objects are up-to-date.\n+      --  If the objects were up-to-date check if the executable file is also\n+      --  up-to-date. For now always bind and link on the JVM since there is\n+      --  currently no simple way to check whether objects are up-to-date wrt\n+      --  the executable. Similarly in CodePeer mode where there is no\n+      --  executable.\n \n       if Targparm.VM_Target /= JVM_Target\n+        and then not CodePeer_Mode\n         and then First_Compiled_File = No_File\n       then\n          Executable_Stamp := File_Stamp (Executable);\n@@ -7838,9 +7833,9 @@ package body Make is\n             Operating_Mode           := Check_Semantics;\n             Check_Object_Consistency := False;\n \n-            if not CodePeer_Mode\n-              and then (Argv'Last < 7 or else Argv (7) /= 'C')\n-            then\n+            if Argv'Last >= 7 and then Argv (7) = 'C' then\n+               CodePeer_Mode := True;\n+            else\n                Compile_Only := True;\n                Do_Bind_Step := False;\n                Do_Link_Step := False;"}, {"sha": "38ef24a202bc6e85d56cf73b79b91a63644b1125", "filename": "gcc/ada/s-atocou-builtin.adb", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2Fs-atocou-builtin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2Fs-atocou-builtin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou-builtin.adb?ref=0319cacc3928720fda058dc7e6c60f575169f576", "patch": "@@ -0,0 +1,74 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--               S Y S T E M . A T O M I C _ C O U N T E R S                --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--                       Copyright (C) 2011, AdaCore                        --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides implementation of atomic counter for platforms where\n+--  GCC supports __sync_add_and_fetch_4 and __sync_sub_and_fetch_4 builtins.\n+\n+package body System.Atomic_Counters is\n+\n+   procedure Sync_Add_And_Fetch\n+     (Ptr   : access Unsigned_32;\n+      Value : Unsigned_32);\n+   pragma Import (Intrinsic, Sync_Add_And_Fetch, \"__sync_add_and_fetch_4\");\n+\n+   function Sync_Sub_And_Fetch\n+     (Ptr   : access Unsigned_32;\n+      Value : Unsigned_32) return Unsigned_32;\n+   pragma Import (Intrinsic, Sync_Sub_And_Fetch, \"__sync_sub_and_fetch_4\");\n+\n+   ---------------\n+   -- Decrement --\n+   ---------------\n+\n+   function Decrement (Item : in out Atomic_Counter) return Boolean is\n+   begin\n+      return Sync_Sub_And_Fetch (Item.Value'Access, 1) = 0;\n+   end Decrement;\n+\n+   ---------------\n+   -- Increment --\n+   ---------------\n+\n+   procedure Increment (Item : in out Atomic_Counter) is\n+   begin\n+      Sync_Add_And_Fetch (Item.Value'Access, 1);\n+   end Increment;\n+\n+   ------------\n+   -- Is_One --\n+   ------------\n+\n+   function Is_One (Item : Atomic_Counter) return Boolean is\n+   begin\n+      return Item.Value = 1;\n+   end Is_One;\n+\n+end System.Atomic_Counters;"}, {"sha": "8f0c7fb8e05f18a811fa70e855401ce01750ff53", "filename": "gcc/ada/s-atocou-x86.adb", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2Fs-atocou-x86.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2Fs-atocou-x86.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou-x86.adb?ref=0319cacc3928720fda058dc7e6c60f575169f576", "patch": "@@ -0,0 +1,83 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--               S Y S T E M . A T O M I C _ C O U N T E R S                --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--                       Copyright (C) 2011, AdaCore                        --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This implementation of the package for x86 processor. GCC can't generate\n+--  code for atomic builtins for 386 CPU there only increment/decrement\n+--  instructions are supported, thus implementaton use assembler code.\n+\n+with System.Machine_Code;\n+\n+package body System.Atomic_Counters is\n+\n+   ---------------\n+   -- Decrement --\n+   ---------------\n+\n+   function Decrement (Item : in out Atomic_Counter) return Boolean is\n+      Aux : Boolean;\n+\n+   begin\n+      System.Machine_Code.Asm\n+        (Template =>\n+           \"lock decl\" & ASCII.HT & \"%0\" & ASCII.LF & ASCII.HT\n+             & \"sete %1\",\n+         Outputs  =>\n+           (Unsigned_32'Asm_Output (\"=m\", Item.Value),\n+            Boolean'Asm_Output (\"=rm\", Aux)),\n+         Inputs   => Unsigned_32'Asm_Input (\"m\", Item.Value),\n+         Volatile => True);\n+\n+      return Aux;\n+   end Decrement;\n+\n+   ---------------\n+   -- Increment --\n+   ---------------\n+\n+   procedure Increment (Item : in out Atomic_Counter) is\n+   begin\n+      System.Machine_Code.Asm\n+        (Template => \"lock incl\" & ASCII.HT & \"%0\",\n+         Outputs  => Unsigned_32'Asm_Output (\"=m\", Item.Value),\n+         Inputs   => Unsigned_32'Asm_Input (\"m\", Item.Value),\n+         Volatile => True);\n+   end Increment;\n+\n+   ------------\n+   -- Is_One --\n+   ------------\n+\n+   function Is_One (Item : Atomic_Counter) return Boolean is\n+   begin\n+      return Item.Value = 1;\n+   end Is_One;\n+\n+end System.Atomic_Counters;"}, {"sha": "709d3889e0458f85012bc247bfeafd0eb8b0bdf8", "filename": "gcc/ada/s-atocou.adb", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2Fs-atocou.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0319cacc3928720fda058dc7e6c60f575169f576/gcc%2Fada%2Fs-atocou.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou.adb?ref=0319cacc3928720fda058dc7e6c60f575169f576", "patch": "@@ -29,28 +29,18 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides implementation of atomic counter for platforms where\n---  GCC supports __sync_add_and_fetch_4 and __sync_sub_and_fetch_4 builtins.\n+--  This is dummy version of the package.\n \n package body System.Atomic_Counters is\n \n-   procedure Sync_Add_And_Fetch\n-     (Ptr   : access Unsigned_32;\n-      Value : Unsigned_32);\n-   pragma Import (Intrinsic, Sync_Add_And_Fetch, \"__sync_add_and_fetch_4\");\n-\n-   function Sync_Sub_And_Fetch\n-     (Ptr   : access Unsigned_32;\n-      Value : Unsigned_32) return Unsigned_32;\n-   pragma Import (Intrinsic, Sync_Sub_And_Fetch, \"__sync_sub_and_fetch_4\");\n-\n    ---------------\n    -- Decrement --\n    ---------------\n \n    function Decrement (Item : in out Atomic_Counter) return Boolean is\n    begin\n-      return Sync_Sub_And_Fetch (Item.Value'Access, 1) = 0;\n+      raise Program_Error;\n+      return False;\n    end Decrement;\n \n    ---------------\n@@ -59,7 +49,7 @@ package body System.Atomic_Counters is\n \n    procedure Increment (Item : in out Atomic_Counter) is\n    begin\n-      Sync_Add_And_Fetch (Item.Value'Access, 1);\n+      raise Program_Error;\n    end Increment;\n \n    ------------\n@@ -68,7 +58,8 @@ package body System.Atomic_Counters is\n \n    function Is_One (Item : Atomic_Counter) return Boolean is\n    begin\n-      return Item.Value = 1;\n+      raise Program_Error;\n+      return False;\n    end Is_One;\n \n end System.Atomic_Counters;"}]}