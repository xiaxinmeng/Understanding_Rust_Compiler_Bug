{"sha": "a502683de1f036b5f8b4e483bd9f5a45be73382e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUwMjY4M2RlMWYwMzZiNWY4YjRlNDgzYmQ5ZjVhNDViZTczMzgyZQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2020-09-07T07:36:29Z"}, "committer": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2020-09-07T07:37:01Z"}, "message": "fortran: Fix arg types of _gfortran_is_extension_of\n\ngcc/fortran/ChangeLog\n\n\t* resolve.c (resolve_select_type): Provide a formal arg list.", "tree": {"sha": "24bd70c8b746f641b99d4de532ae232a9e6d7157", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24bd70c8b746f641b99d4de532ae232a9e6d7157"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a502683de1f036b5f8b4e483bd9f5a45be73382e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a502683de1f036b5f8b4e483bd9f5a45be73382e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a502683de1f036b5f8b4e483bd9f5a45be73382e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a502683de1f036b5f8b4e483bd9f5a45be73382e/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "995bb851ffee659cb86aa24bf36ad5bb5d36da7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/995bb851ffee659cb86aa24bf36ad5bb5d36da7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/995bb851ffee659cb86aa24bf36ad5bb5d36da7b"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "fc2431b8aad7bb2e0f4b6f88f7fe6b5fbf35fa7f", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a502683de1f036b5f8b4e483bd9f5a45be73382e/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a502683de1f036b5f8b4e483bd9f5a45be73382e/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=a502683de1f036b5f8b4e483bd9f5a45be73382e", "patch": "@@ -9637,6 +9637,12 @@ resolve_select_type (gfc_code *code, gfc_namespace *old_ns)\n \t  new_st->expr1->value.function.actual->next = gfc_get_actual_arglist ();\n \t  new_st->expr1->value.function.actual->next->expr = gfc_get_variable_expr (st);\n \t  new_st->expr1->value.function.actual->next->expr->where = code->loc;\n+\t  /* Set up types in formal arg list.  */\n+\t  new_st->expr1->value.function.isym->formal = XCNEW (gfc_intrinsic_arg);\n+\t  new_st->expr1->value.function.isym->formal->ts = new_st->expr1->value.function.actual->expr->ts;\n+\t  new_st->expr1->value.function.isym->formal->next = XCNEW (gfc_intrinsic_arg);\n+\t  new_st->expr1->value.function.isym->formal->next->ts = new_st->expr1->value.function.actual->next->expr->ts;\n+\n \t  new_st->next = body->next;\n \t}\n \tif (default_case->next)"}]}