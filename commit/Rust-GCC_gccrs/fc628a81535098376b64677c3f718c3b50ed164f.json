{"sha": "fc628a81535098376b64677c3f718c3b50ed164f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM2MjhhODE1MzUwOTgzNzZiNjQ2NzdjM2Y3MThjM2I1MGVkMTY0Zg==", "commit": {"author": {"name": "Zhenqiang Chen", "email": "zhenqiang.chen@arm.com", "date": "2014-11-04T02:21:51Z"}, "committer": {"name": "Zhenqiang Chen", "email": "zqchen@gcc.gnu.org", "date": "2014-11-04T02:21:51Z"}, "message": "revert: ifcvt.c (noce_emit_cmove, [...]): Allow CC mode if HAVE_cbranchcc4.\n\n2014-11-04  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n\n\tRevert:\n\t2014-11-03  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n\t* ifcvt.c (noce_emit_cmove, noce_get_alt_condition, noce_get_condition):\n\tAllow CC mode if HAVE_cbranchcc4.\n\nFrom-SVN: r217062", "tree": {"sha": "116daa8e7a608ad54f3a70d9a0fa8e8f1f319e2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/116daa8e7a608ad54f3a70d9a0fa8e8f1f319e2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc628a81535098376b64677c3f718c3b50ed164f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc628a81535098376b64677c3f718c3b50ed164f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc628a81535098376b64677c3f718c3b50ed164f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc628a81535098376b64677c3f718c3b50ed164f/comments", "author": null, "committer": null, "parents": [{"sha": "b86fa3ee6d8f6a815a1ab8257904737f8f31a78c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86fa3ee6d8f6a815a1ab8257904737f8f31a78c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b86fa3ee6d8f6a815a1ab8257904737f8f31a78c"}], "stats": {"total": 31, "additions": 11, "deletions": 20}, "files": [{"sha": "5d80ab9a4ece111b452fa33e194fca88954a82ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc628a81535098376b64677c3f718c3b50ed164f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc628a81535098376b64677c3f718c3b50ed164f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc628a81535098376b64677c3f718c3b50ed164f", "patch": "@@ -1,3 +1,10 @@\n+2014-11-04  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n+\n+\tRevert:\n+\t2014-11-03  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n+\t* ifcvt.c (noce_emit_cmove, noce_get_alt_condition, noce_get_condition):\n+\tAllow CC mode if HAVE_cbranchcc4.\n+\n 2014-11-03  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* godump.c (go_format_type): Rewrite RECORD_TYPE nad UNION_TYPE support"}, {"sha": "f4002f9d13288913954c53b1aeecdf692cb84149", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc628a81535098376b64677c3f718c3b50ed164f/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc628a81535098376b64677c3f718c3b50ed164f/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=fc628a81535098376b64677c3f718c3b50ed164f", "patch": "@@ -1459,17 +1459,10 @@ noce_emit_cmove (struct noce_if_info *if_info, rtx x, enum rtx_code code,\n       end_sequence ();\n     }\n \n-  /* Don't even try if the comparison operands are weird\n-     except that the target supports cbranchcc4.  */\n+  /* Don't even try if the comparison operands are weird.  */\n   if (! general_operand (cmp_a, GET_MODE (cmp_a))\n       || ! general_operand (cmp_b, GET_MODE (cmp_b)))\n-    {\n-#if HAVE_cbranchcc4\n-      if (GET_MODE_CLASS (GET_MODE (cmp_a)) != MODE_CC\n-\t  || cmp_b != const0_rtx)\n-#endif\n-\treturn NULL_RTX;\n-    }\n+    return NULL_RTX;\n \n #if HAVE_conditional_move\n   unsignedp = (code == LTU || code == GEU\n@@ -1795,11 +1788,6 @@ noce_get_alt_condition (struct noce_if_info *if_info, rtx target,\n   rtx cond, set;\n   rtx_insn *insn;\n   int reverse;\n-  int allow_cc_mode = false;\n-#if HAVE_cbranchcc4\n-  allow_cc_mode = true;\n-#endif\n-\n \n   /* If target is already mentioned in the known condition, return it.  */\n   if (reg_mentioned_p (target, if_info->cond))\n@@ -1921,7 +1909,7 @@ noce_get_alt_condition (struct noce_if_info *if_info, rtx target,\n     }\n \n   cond = canonicalize_condition (if_info->jump, cond, reverse,\n-\t\t\t\t earliest, target, allow_cc_mode, true);\n+\t\t\t\t earliest, target, false, true);\n   if (! cond || ! reg_mentioned_p (target, cond))\n     return NULL;\n \n@@ -2377,10 +2365,6 @@ noce_get_condition (rtx_insn *jump, rtx_insn **earliest, bool then_else_reversed\n {\n   rtx cond, set, tmp;\n   bool reverse;\n-  int allow_cc_mode = false;\n-#if HAVE_cbranchcc4\n-  allow_cc_mode = true;\n-#endif\n \n   if (! any_condjump_p (jump))\n     return NULL_RTX;\n@@ -2417,7 +2401,7 @@ noce_get_condition (rtx_insn *jump, rtx_insn **earliest, bool then_else_reversed\n   /* Otherwise, fall back on canonicalize_condition to do the dirty\n      work of manipulating MODE_CC values and COMPARE rtx codes.  */\n   tmp = canonicalize_condition (jump, cond, reverse, earliest,\n-\t\t\t\tNULL_RTX, allow_cc_mode, true);\n+\t\t\t\tNULL_RTX, false, true);\n \n   /* We don't handle side-effects in the condition, like handling\n      REG_INC notes and making sure no duplicate conditions are emitted.  */"}]}