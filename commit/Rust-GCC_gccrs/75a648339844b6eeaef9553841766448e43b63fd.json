{"sha": "75a648339844b6eeaef9553841766448e43b63fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVhNjQ4MzM5ODQ0YjZlZWFlZjk1NTM4NDE3NjY0NDhlNDNiNjNmZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-09-16T12:30:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-09-16T12:30:39Z"}, "message": "[multiple changes]\n\n2009-09-16  Thomas Quinot  <quinot@adacore.com>\n\n\t* freeze.adb, exp_intr.adb (Expand_Intrinsic_Call): Leave calls to\n\tintrinsics untouched (to be expanded later on by gigi) if an external\n\tname has been specified.\n\t(Freeze_Entity): Do not generate a default external name for\n\timported subprograms with convention Intrinsic (so that the above code\n\tcan identify the case where an external name has been explicitly\n\tprovided).\n\n\t* s-oscons-tmplt.c: Quote TARGET_OS early so that it is not erroneously\n\treplaced by something else due to an existing #define clause.\n\n2009-09-16  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sinfo.ads, sinfo.adb (Is_Accessibility_Actual): New flag on\n\tParameter_Association node, created for the extra actual generated for\n\tan access parameter of a function that dispatches on result, to prevent\n\tdouble generation of such actuals when the call is rewritten is a\n\tdispatching call.\n\t* exp_ch6.adb (Expand_Call): Set Is_Accessibility_Actual when needed.\n\t* exp_disp.adb (Expand_Dispatching_Call): Do not transfer extra actuals\n\tthat carry this flag when rewriting the original call as a dispatching\n\tcall, after propagating the controlling tag.\n\n2009-09-16  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Add_Source): New parameter Source_Dir_Rank to be put\n\tin the source data.\n\t(Check_File): New parameter Source_Dir_Rank, to check if a duplicate\n\tsource is allowed.\n\t(Find_Source_Dirs): New parameter Rank to be recorded with the source\n\tdirectories.\n\t(Search_Directories): Call Check_File with the rank of the directory\n\t* prj.adb (Project_Empty): Add new component Source_Dir_Ranks\n\t(Free): Free also Number_Lists\n\t(Reset): Init also Number_Lists\n\t* prj.ads (Number_List_Table): New dynamic table for lists of numbers\n\t(Source_Data): New component Source_Dir_Rank. Remove component\n\tKnown_Order_Of_Source_Dirs, no longer needed.\n\t(Project_Data): New component Source_Dir_Ranks\n\t(Project_Tree_Data): New components Number_Lists\n\nFrom-SVN: r151749", "tree": {"sha": "3b8e0a0e73a769e176fefad050be04b6ff2e0cd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b8e0a0e73a769e176fefad050be04b6ff2e0cd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75a648339844b6eeaef9553841766448e43b63fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a648339844b6eeaef9553841766448e43b63fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75a648339844b6eeaef9553841766448e43b63fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a648339844b6eeaef9553841766448e43b63fd/comments", "author": null, "committer": null, "parents": [{"sha": "bac7206de028db55def3c7ec5c9b21169bb2fc20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bac7206de028db55def3c7ec5c9b21169bb2fc20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bac7206de028db55def3c7ec5c9b21169bb2fc20"}], "stats": {"total": 400, "additions": 302, "deletions": 98}, "files": [{"sha": "06954551e4db6a2f9a0cbe5c066ef80d826e0e61", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=75a648339844b6eeaef9553841766448e43b63fd", "patch": "@@ -1,3 +1,46 @@\n+2009-09-16  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* freeze.adb, exp_intr.adb (Expand_Intrinsic_Call): Leave calls to\n+\tintrinsics untouched (to be expanded later on by gigi) if an external\n+\tname has been specified.\n+\t(Freeze_Entity): Do not generate a default external name for\n+\timported subprograms with convention Intrinsic (so that the above code\n+\tcan identify the case where an external name has been explicitly\n+\tprovided).\n+\n+\t* s-oscons-tmplt.c: Quote TARGET_OS early so that it is not erroneously\n+\treplaced by something else due to an existing #define clause.\n+\n+2009-09-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sinfo.ads, sinfo.adb (Is_Accessibility_Actual): New flag on\n+\tParameter_Association node, created for the extra actual generated for\n+\tan access parameter of a function that dispatches on result, to prevent\n+\tdouble generation of such actuals when the call is rewritten is a\n+\tdispatching call.\n+\t* exp_ch6.adb (Expand_Call): Set Is_Accessibility_Actual when needed.\n+\t* exp_disp.adb (Expand_Dispatching_Call): Do not transfer extra actuals\n+\tthat carry this flag when rewriting the original call as a dispatching\n+\tcall, after propagating the controlling tag.\n+\n+2009-09-16  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Add_Source): New parameter Source_Dir_Rank to be put\n+\tin the source data.\n+\t(Check_File): New parameter Source_Dir_Rank, to check if a duplicate\n+\tsource is allowed.\n+\t(Find_Source_Dirs): New parameter Rank to be recorded with the source\n+\tdirectories.\n+\t(Search_Directories): Call Check_File with the rank of the directory\n+\t* prj.adb (Project_Empty): Add new component Source_Dir_Ranks\n+\t(Free): Free also Number_Lists\n+\t(Reset): Init also Number_Lists\n+\t* prj.ads (Number_List_Table): New dynamic table for lists of numbers\n+\t(Source_Data): New component Source_Dir_Rank. Remove component\n+\tKnown_Order_Of_Source_Dirs, no longer needed.\n+\t(Project_Data): New component Source_Dir_Ranks\n+\t(Project_Tree_Data): New components Number_Lists\n+\n 2009-09-16  Vincent Celier  <celier@adacore.com>\n \n \t* gprep.adb (Yes_No): New global constant"}, {"sha": "238aad61043ffc3af06a4582ff040141b0509fb6", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 11, "deletions": 22, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=75a648339844b6eeaef9553841766448e43b63fd", "patch": "@@ -496,6 +496,7 @@ package body Exp_Ch6 is\n       declare\n          Activation_Chain_Actual : Node_Id;\n          Activation_Chain_Formal : Node_Id;\n+\n       begin\n          --  Locate implicit activation chain parameter in the called function\n \n@@ -1807,6 +1808,10 @@ package body Exp_Ch6 is\n                Make_Identifier (Loc, Chars (EF))));\n \n          Analyze_And_Resolve (Expr, Etype (EF));\n+\n+         if Nkind (N) = N_Function_Call then\n+            Set_Is_Accessibility_Actual (Parent (Expr));\n+         end if;\n       end Add_Extra_Actual;\n \n       ---------------------------\n@@ -2282,31 +2287,15 @@ package body Exp_Ch6 is\n                   when N_Attribute_Reference =>\n                      case Get_Attribute_Id (Attribute_Name (Prev_Orig)) is\n \n-                        --  For X'Access, pass on the level of the prefix X.\n-                        --  If the call is a rewritten attribute reference to\n-                        --  'Input and the prefix is a tagged type, prevent\n-                        --  double expansion (once as a function call and once\n-                        --  as a dispatching call)\n+                        --  For X'Access, pass on the level of the prefix X\n \n                         when Attribute_Access =>\n-                           declare\n-                              Onode : constant Node_Id :=\n-                                        Original_Node (Parent (N));\n-                           begin\n-                              if Nkind (Onode) = N_Attribute_Reference\n-                                and then Attribute_Name (Onode) = Name_Input\n-                                and then Is_Tagged_Type (Etype (Subp))\n-                              then\n-                                 null;\n-                              else\n-                                 Add_Extra_Actual\n-                                   (Make_Integer_Literal (Loc,\n-                                      Intval =>\n-                                        Object_Access_Level\n-                                          (Prefix (Prev_Orig))),\n+                           Add_Extra_Actual\n+                             (Make_Integer_Literal (Loc,\n+                               Intval =>\n+                                 Object_Access_Level\n+                                   (Prefix (Prev_Orig))),\n                                     Extra_Accessibility (Formal));\n-                              end if;\n-                           end;\n \n                         --  Treat the unchecked attributes as library-level\n "}, {"sha": "34aacef8c2557d73d74f08b4fad0864fc6148fab", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=75a648339844b6eeaef9553841766448e43b63fd", "patch": "@@ -692,7 +692,9 @@ package body Exp_Disp is\n                Append_To (New_Params,\n                  Duplicate_Subexpr_Move_Checks (Param));\n \n-            else\n+            elsif Nkind (Parent (Param)) /= N_Parameter_Association\n+              or else not Is_Accessibility_Actual (Parent (Param))\n+            then\n                Append_To (New_Params, Relocate_Node (Param));\n             end if;\n "}, {"sha": "da1314c3aa7803b8d1ec2682bc226ff2782772df", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=75a648339844b6eeaef9553841766448e43b63fd", "patch": "@@ -394,6 +394,13 @@ package body Exp_Intr is\n       Nam : Name_Id;\n \n    begin\n+      --  If an external name is specified for the intrinsic, it is handled\n+      --  by the back-end: leave the call node unchanged for now.\n+\n+      if Present (Interface_Name (E)) then\n+         return;\n+      end if;\n+\n       --  If the intrinsic subprogram is generic, gets its original name\n \n       if Present (Parent (E))"}, {"sha": "56389bb053559d8eb493beb21751e6d51d7e9c04", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=75a648339844b6eeaef9553841766448e43b63fd", "patch": "@@ -2443,11 +2443,16 @@ package body Freeze is\n          --  If entity is exported or imported and does not have an external\n          --  name, now is the time to provide the appropriate default name.\n          --  Skip this if the entity is stubbed, since we don't need a name\n-         --  for any stubbed routine.\n+         --  for any stubbed routine. For the case on intrinsics, if no\n+         --  external name is specified, then calls will be handled in\n+         --  Exp_Intr.Expand_Intrinsic_Call, and no name is needed; if\n+         --  an external name is provided, then Expand_Intrinsic_Call leaves\n+         --  calls in place for expansion by GIGI.\n \n          if (Is_Imported (E) or else Is_Exported (E))\n            and then No (Interface_Name (E))\n            and then Convention (E) /= Convention_Stubbed\n+           and then Convention (E) /= Convention_Intrinsic\n          then\n             Set_Encoded_Interface_Name\n               (E, Get_Default_External_Name (E));\n@@ -3335,9 +3340,7 @@ package body Freeze is\n \n                --  For bit-packed arrays, check the size\n \n-               if Is_Bit_Packed_Array (E)\n-                 and then Known_RM_Size (E)\n-               then\n+               if Is_Bit_Packed_Array (E) and then Known_RM_Size (E) then\n                   declare\n                      SizC : constant Node_Id := Size_Clause (E);\n "}, {"sha": "33f389327c8194bd3d94e525719e015d85952cd7", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 166, "deletions": 61, "changes": 227, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=75a648339844b6eeaef9553841766448e43b63fd", "patch": "@@ -192,6 +192,7 @@ package body Prj.Nmsc is\n      (Id                  : out Source_Id;\n       Data                : in out Tree_Processing_Data;\n       Project             : Project_Id;\n+      Source_Dir_Rank     : Natural;\n       Lang_Id             : Language_Ptr;\n       Kind                : Source_Kind;\n       File_Name           : File_Name_Type;\n@@ -295,6 +296,7 @@ package body Prj.Nmsc is\n    procedure Check_File\n      (Project           : in out Project_Processing_Data;\n       Data              : in out Tree_Processing_Data;\n+      Source_Dir_Rank   : Natural;\n       Path              : Path_Name_Type;\n       File_Name         : File_Name_Type;\n       Display_File_Name : File_Name_Type;\n@@ -539,6 +541,7 @@ package body Prj.Nmsc is\n      (Id                  : out Source_Id;\n       Data                : in out Tree_Processing_Data;\n       Project             : Project_Id;\n+      Source_Dir_Rank     : Natural;\n       Lang_Id             : Language_Ptr;\n       Kind                : Source_Kind;\n       File_Name           : File_Name_Type;\n@@ -598,7 +601,7 @@ package body Prj.Nmsc is\n                if Data.Flags.Allow_Duplicate_Basenames then\n                   Add_Src := True;\n \n-               elsif Project.Known_Order_Of_Source_Dirs then\n+               elsif Source_Dir_Rank /= Source.Source_Dir_Rank then\n                   Add_Src := False;\n \n                else\n@@ -610,7 +613,7 @@ package body Prj.Nmsc is\n                end if;\n \n             else\n-               if Project.Known_Order_Of_Source_Dirs then\n+               if Source_Dir_Rank /= Source.Source_Dir_Rank then\n                   Add_Src := False;\n \n                --  We might be seeing the same file through a different path\n@@ -722,6 +725,7 @@ package body Prj.Nmsc is\n       end if;\n \n       Id.Project             := Project;\n+      Id.Source_Dir_Rank     := Source_Dir_Rank;\n       Id.Language            := Lang_Id;\n       Id.Kind                := Kind;\n       Id.Alternate_Languages := Alternate_Languages;\n@@ -2807,6 +2811,7 @@ package body Prj.Nmsc is\n                     (Id               => Source,\n                      Data             => Data,\n                      Project          => Project,\n+                     Source_Dir_Rank  => 0,\n                      Lang_Id          => Lang_Id,\n                      Kind             => Kind,\n                      File_Name        => File_Name,\n@@ -2916,16 +2921,17 @@ package body Prj.Nmsc is\n \n             if Unit /= No_Name then\n                Add_Source\n-                 (Id           => Source,\n-                  Data         => Data,\n-                  Project      => Project,\n-                  Lang_Id      => Lang_Id,\n-                  Kind         => Kind,\n-                  File_Name    => File_Name,\n-                  Display_File => File_Name_Type (Element.Value.Value),\n-                  Unit         => Unit,\n-                  Index        => Index,\n-                  Location     => Element.Value.Location,\n+                 (Id               => Source,\n+                  Data             => Data,\n+                  Project          => Project,\n+                  Source_Dir_Rank  => 0,\n+                  Lang_Id          => Lang_Id,\n+                  Kind             => Kind,\n+                  File_Name        => File_Name,\n+                  Display_File     => File_Name_Type (Element.Value.Value),\n+                  Unit             => Unit,\n+                  Index            => Index,\n+                  Location         => Element.Value.Location,\n                   Naming_Exception => True);\n             end if;\n \n@@ -4675,7 +4681,8 @@ package body Prj.Nmsc is\n                         (Name_Source_Files,\n                          Project.Decl.Attributes, Data.Tree);\n \n-      Last_Source_Dir : String_List_Id  := Nil_String;\n+      Last_Source_Dir   : String_List_Id    := Nil_String;\n+      Last_Src_Dir_Rank : Number_List_Index := No_Number_List;\n \n       Languages : constant Variable_Value :=\n                       Prj.Util.Value_Of\n@@ -4684,6 +4691,7 @@ package body Prj.Nmsc is\n       procedure Find_Source_Dirs\n         (From     : File_Name_Type;\n          Location : Source_Ptr;\n+         Rank     : Natural;\n          Removed  : Boolean := False);\n       --  Find one or several source directories, and add (or remove, if\n       --  Removed is True) them to list of source directories of the project.\n@@ -4695,6 +4703,7 @@ package body Prj.Nmsc is\n       procedure Find_Source_Dirs\n         (From     : File_Name_Type;\n          Location : Source_Ptr;\n+         Rank     : Natural;\n          Removed  : Boolean := False)\n       is\n          Directory : constant String := Get_Name_String (From);\n@@ -4714,6 +4723,8 @@ package body Prj.Nmsc is\n             Last    : Natural;\n             List    : String_List_Id;\n             Prev    : String_List_Id;\n+            Rank_List : Number_List_Index;\n+            Prev_Rank : Number_List_Index;\n             Element : String_Element;\n             Found   : Boolean := False;\n \n@@ -4756,6 +4767,8 @@ package body Prj.Nmsc is\n \n             List := Project.Source_Dirs;\n             Prev := Nil_String;\n+            Rank_List := Project.Source_Dir_Ranks;\n+            Prev_Rank := No_Number_List;\n             while List /= Nil_String loop\n                Element := Data.Tree.String_Elements.Table (List);\n \n@@ -4766,6 +4779,8 @@ package body Prj.Nmsc is\n \n                Prev := List;\n                List := Element.Next;\n+               Prev_Rank := Rank_List;\n+               Rank_List := Data.Tree.Number_Lists.Table (Rank_List).Next;\n             end loop;\n \n             --  If directory is not already in list, put it there\n@@ -4785,11 +4800,15 @@ package body Prj.Nmsc is\n                   Next          => Nil_String,\n                   Index         => 0);\n \n+               Number_List_Table.Increment_Last (Data.Tree.Number_Lists);\n+\n                --  Case of first source directory\n \n                if Last_Source_Dir = Nil_String then\n                   Project.Source_Dirs :=\n                     String_Element_Table.Last (Data.Tree.String_Elements);\n+                  Project.Source_Dir_Ranks :=\n+                    Number_List_Table.Last (Data.Tree.Number_Lists);\n \n                   --  Here we already have source directories\n \n@@ -4798,22 +4817,34 @@ package body Prj.Nmsc is\n \n                   Data.Tree.String_Elements.Table\n                     (Last_Source_Dir).Next :=\n-                      String_Element_Table.Last (Data.Tree.String_Elements);\n+                    String_Element_Table.Last (Data.Tree.String_Elements);\n+                  Data.Tree.Number_Lists.Table\n+                    (Last_Src_Dir_Rank).Next :=\n+                    Number_List_Table.Last (Data.Tree.Number_Lists);\n+\n                end if;\n \n                --  And register this source directory as the new last\n \n                Last_Source_Dir :=\n                  String_Element_Table.Last (Data.Tree.String_Elements);\n                Data.Tree.String_Elements.Table (Last_Source_Dir) := Element;\n+               Last_Src_Dir_Rank :=\n+                 Number_List_Table.Last (Data.Tree.Number_Lists);\n+               Data.Tree.Number_Lists.Table (Last_Src_Dir_Rank) :=\n+                 (Number => Rank, Next => No_Number_List);\n \n             elsif Removed and Found then\n                if Prev = Nil_String then\n                   Project.Source_Dirs :=\n                     Data.Tree.String_Elements.Table (List).Next;\n+                  Project.Source_Dir_Ranks :=\n+                    Data.Tree.Number_Lists.Table (Rank_List).Next;\n                else\n                   Data.Tree.String_Elements.Table (Prev).Next :=\n                     Data.Tree.String_Elements.Table (List).Next;\n+                  Data.Tree.Number_Lists.Table (Prev_Rank).Next :=\n+                    Data.Tree.Number_Lists.Table (Rank_List).Next;\n                end if;\n             end if;\n \n@@ -4872,6 +4903,8 @@ package body Prj.Nmsc is\n          if Current_Verbosity = High and then not Removed then\n             Write_Str (\"Find_Source_Dirs (\"\"\");\n             Write_Str (Directory);\n+            Write_Str (\",\");\n+            Write_Str (Rank'Img);\n             Write_Line (\"\"\")\");\n          end if;\n \n@@ -4884,10 +4917,6 @@ package body Prj.Nmsc is\n                        or else\n                      Directory (Directory'Last - 2) = Directory_Separator)\n          then\n-            if not Removed then\n-               Project.Known_Order_Of_Source_Dirs := False;\n-            end if;\n-\n             Name_Len := Directory'Length - 3;\n \n             if Name_Len = 0 then\n@@ -4960,6 +4989,8 @@ package body Prj.Nmsc is\n                Path_Name  : Path_Information;\n                List       : String_List_Id;\n                Prev       : String_List_Id;\n+               Rank_List  : Number_List_Index;\n+               Prev_Rank  : Number_List_Index;\n                Dir_Exists : Boolean;\n \n             begin\n@@ -5011,70 +5042,105 @@ package body Prj.Nmsc is\n                           (Display_Path'First .. Last_Display_Path));\n                      Display_Path_Id := Name_Find;\n \n+                     --  Check if the directory is already in the list\n+\n+                     Prev := Nil_String;\n+                     Prev_Rank := No_Number_List;\n+\n+                     --  Look for source dir in current list\n+\n+                     List := Project.Source_Dirs;\n+                     Rank_List := Project.Source_Dir_Ranks;\n+                     while List /= Nil_String loop\n+                        Element := Data.Tree.String_Elements.Table (List);\n+                        exit when Element.Value = Path_Id;\n+                        Prev := List;\n+                        List := Element.Next;\n+                        Prev_Rank := Rank_List;\n+                        Rank_List :=\n+                          Data.Tree.Number_Lists.Table (Prev_Rank).Next;\n+                     end loop;\n+\n+                     --  The directory is in the list if List is not Nil_String\n+\n                      if not Removed then\n \n                         --  As it is an existing directory, we add it to the\n-                        --  list of directories.\n+                        --  list of directories, if it is not already in the\n+                        --  list.\n \n-                        String_Element_Table.Increment_Last\n-                          (Data.Tree.String_Elements);\n-                        Element :=\n-                          (Value         => Path_Id,\n-                           Index         => 0,\n-                           Display_Value => Display_Path_Id,\n-                           Location      => No_Location,\n-                           Flag          => False,\n-                           Next          => Nil_String);\n+                        if List = Nil_String then\n+                           String_Element_Table.Increment_Last\n+                             (Data.Tree.String_Elements);\n+                           Element :=\n+                             (Value         => Path_Id,\n+                              Index         => 0,\n+                              Display_Value => Display_Path_Id,\n+                              Location      => No_Location,\n+                              Flag          => False,\n+                              Next          => Nil_String);\n+                           Number_List_Table.Increment_Last\n+                             (Data.Tree.Number_Lists);\n \n-                        if Last_Source_Dir = Nil_String then\n+                           if Last_Source_Dir = Nil_String then\n \n-                           --  This is the first source directory\n+                              --  This is the first source directory\n \n-                           Project.Source_Dirs := String_Element_Table.Last\n-                             (Data.Tree.String_Elements);\n+                              Project.Source_Dirs :=\n+                                String_Element_Table.Last\n+                                  (Data.Tree.String_Elements);\n+                              Project.Source_Dir_Ranks :=\n+                                Number_List_Table.Last\n+                                  (Data.Tree.Number_Lists);\n \n-                        else\n-                           --  We already have source directories, link the\n-                           --  previous last to the new one.\n+                           else\n+                              --  We already have source directories, link the\n+                              --  previous last to the new one.\n+\n+                              Data.Tree.String_Elements.Table\n+                                (Last_Source_Dir).Next :=\n+                                String_Element_Table.Last\n+                                  (Data.Tree.String_Elements);\n+                              Data.Tree.Number_Lists.Table\n+                                (Last_Src_Dir_Rank).Next :=\n+                                Number_List_Table.Last\n+                                  (Data.Tree.Number_Lists);\n \n-                           Data.Tree.String_Elements.Table\n-                             (Last_Source_Dir).Next :=\n+                           end if;\n+\n+                           --  And register this source directory as the new\n+                           --  last.\n+\n+                           Last_Source_Dir :=\n                              String_Element_Table.Last\n                                (Data.Tree.String_Elements);\n+                           Data.Tree.String_Elements.Table\n+                             (Last_Source_Dir) := Element;\n+                           Last_Src_Dir_Rank :=\n+                             Number_List_Table.Last\n+                               (Data.Tree.Number_Lists);\n+                           Data.Tree.Number_Lists.Table\n+                             (Last_Src_Dir_Rank) :=\n+                             (Number => Rank, Next => No_Number_List);\n                         end if;\n \n-                        --  And register this source directory as the new last\n-\n-                        Last_Source_Dir := String_Element_Table.Last\n-                          (Data.Tree.String_Elements);\n-                        Data.Tree.String_Elements.Table\n-                          (Last_Source_Dir) := Element;\n-\n                      else\n                         --  Remove source dir, if present\n \n-                        Prev := Nil_String;\n-\n-                        --  Look for source dir in current list\n-\n-                        List := Project.Source_Dirs;\n-                        while List /= Nil_String loop\n-                           Element := Data.Tree.String_Elements.Table (List);\n-                           exit when Element.Value = Path_Id;\n-                           Prev := List;\n-                           List := Element.Next;\n-                        end loop;\n-\n                         if List /= Nil_String then\n                            --  Source dir was found, remove it from the list\n \n                            if Prev = Nil_String then\n                               Project.Source_Dirs :=\n                                 Data.Tree.String_Elements.Table (List).Next;\n+                              Project.Source_Dir_Ranks :=\n+                                Data.Tree.Number_Lists.Table (Rank_List).Next;\n \n                            else\n                               Data.Tree.String_Elements.Table (Prev).Next :=\n                                 Data.Tree.String_Elements.Table (List).Next;\n+                              Data.Tree.Number_Lists.Table (Prev_Rank).Next :=\n+                                Data.Tree.Number_Lists.Table (Rank_List).Next;\n                            end if;\n                         end if;\n                      end if;\n@@ -5276,6 +5342,13 @@ package body Prj.Nmsc is\n          Project.Source_Dirs :=\n            String_Element_Table.Last (Data.Tree.String_Elements);\n \n+         Number_List_Table.Append\n+           (Data.Tree.Number_Lists,\n+            (Number => 1, Next => No_Number_List));\n+\n+         Project.Source_Dir_Ranks :=\n+           Number_List_Table.Last (Data.Tree.Number_Lists);\n+\n          if Current_Verbosity = High then\n             Write_Attr\n               (\"Default source directory\",\n@@ -5296,15 +5369,17 @@ package body Prj.Nmsc is\n          declare\n             Source_Dir : String_List_Id;\n             Element    : String_Element;\n-\n+            Rank       : Natural;\n          begin\n             --  Process the source directories for each element of the list\n \n             Source_Dir := Source_Dirs.Values;\n+            Rank := 0;\n             while Source_Dir /= Nil_String loop\n                Element := Data.Tree.String_Elements.Table (Source_Dir);\n+               Rank := Rank + 1;\n                Find_Source_Dirs\n-                 (File_Name_Type (Element.Value), Element.Location);\n+                 (File_Name_Type (Element.Value), Element.Location, Rank);\n                Source_Dir := Element.Next;\n             end loop;\n          end;\n@@ -5326,6 +5401,7 @@ package body Prj.Nmsc is\n                Find_Source_Dirs\n                  (File_Name_Type (Element.Value),\n                   Element.Location,\n+                  0,\n                   Removed => True);\n                Source_Dir := Element.Next;\n             end loop;\n@@ -6582,6 +6658,7 @@ package body Prj.Nmsc is\n    procedure Check_File\n      (Project           : in out Project_Processing_Data;\n       Data              : in out Tree_Processing_Data;\n+      Source_Dir_Rank   : Natural;\n       Path              : Path_Name_Type;\n       File_Name         : File_Name_Type;\n       Display_File_Name : File_Name_Type;\n@@ -6606,6 +6683,14 @@ package body Prj.Nmsc is\n       Kind                  : Source_Kind := Spec;\n \n    begin\n+      if Current_Verbosity = High then\n+         Write_Line (\"Checking file:\");\n+         Write_Str (\"   Path = \");\n+         Write_Line (Get_Name_String (Path));\n+         Write_Str (\"   Rank =\");\n+         Write_Line (Source_Dir_Rank'Img);\n+      end if;\n+\n       if Name_Loc = No_Name_Location then\n          Check_Name := For_All_Sources;\n \n@@ -6615,7 +6700,7 @@ package body Prj.Nmsc is\n             --  Check if it is OK to have the same file name in several\n             --  source directories.\n \n-            if not Project.Project.Known_Order_Of_Source_Dirs then\n+            if Source_Dir_Rank = Name_Loc.Source.Source_Dir_Rank then\n                Error_Msg_File_1 := File_Name;\n                Error_Msg\n                  (Data.Flags,\n@@ -6689,6 +6774,7 @@ package body Prj.Nmsc is\n             Add_Source\n               (Id                  => Source,\n                Project             => Project.Project,\n+               Source_Dir_Rank     => Source_Dir_Rank,\n                Lang_Id             => Language,\n                Kind                => Kind,\n                Data                => Data,\n@@ -6713,6 +6799,8 @@ package body Prj.Nmsc is\n    is\n       Source_Dir        : String_List_Id;\n       Element           : String_Element;\n+      Src_Dir_Rank      : Number_List_Index;\n+      Num_Nod           : Number_Node;\n       Dir               : Dir_Type;\n       Name              : String (1 .. 1_000);\n       Last              : Natural;\n@@ -6727,12 +6815,21 @@ package body Prj.Nmsc is\n       --  Loop through subdirectories\n \n       Source_Dir := Project.Project.Source_Dirs;\n+      Src_Dir_Rank := Project.Project.Source_Dir_Ranks;\n       while Source_Dir /= Nil_String loop\n          begin\n+            Num_Nod := Data.Tree.Number_Lists.Table (Src_Dir_Rank);\n             Element := Data.Tree.String_Elements.Table (Source_Dir);\n+\n             if Element.Value /= No_Name then\n                Get_Name_String (Element.Display_Value);\n \n+               if Current_Verbosity = High then\n+                  Write_Str (\"Directory: \");\n+                  Write_Str (Name_Buffer (1 .. Name_Len));\n+                  Write_Line (Num_Nod.Number'Img);\n+               end if;\n+\n                declare\n                   Source_Directory : constant String :=\n                                        Name_Buffer (1 .. Name_Len) &\n@@ -6819,14 +6916,15 @@ package body Prj.Nmsc is\n                                  --  still need to add it to the list: if we\n                                  --  don't, the file will not appear in the\n                                  --  mapping file and will cause the compiler\n-                                 --  to fail\n+                                 --  to fail.\n \n                                  To_Remove := True;\n                               end if;\n                            end if;\n \n                            Check_File\n                              (Project           => Project,\n+                              Source_Dir_Rank   => Num_Nod.Number,\n                               Data              => Data,\n                               Path              => Path,\n                               File_Name         => File_Name,\n@@ -6847,6 +6945,7 @@ package body Prj.Nmsc is\n          end;\n \n          Source_Dir := Element.Next;\n+         Src_Dir_Rank := Num_Nod.Next;\n       end loop;\n \n       if Current_Verbosity = High then\n@@ -7176,7 +7275,13 @@ package body Prj.Nmsc is\n    begin\n       if Current_Verbosity = High then\n          Write_Str (\"Removing source \");\n-         Write_Line (Get_Name_String (Id.File) & \" at\" & Id.Index'Img);\n+         Write_Str (Get_Name_String (Id.File));\n+\n+         if Id.Index /= 0 then\n+            Write_Str (\" at\" & Id.Index'Img);\n+         end if;\n+\n+         Write_Eol;\n       end if;\n \n       if Replaced_By /= No_Source then"}, {"sha": "b485f706829bc6edcb5c9d51a38fcaab3648c2a3", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=75a648339844b6eeaef9553841766448e43b63fd", "patch": "@@ -89,7 +89,7 @@ package body Prj is\n                       Include_Path                   => null,\n                       Include_Data_Set               => False,\n                       Source_Dirs                    => Nil_String,\n-                      Known_Order_Of_Source_Dirs     => True,\n+                      Source_Dir_Ranks               => No_Number_List,\n                       Object_Directory               => No_Path_Information,\n                       Library_TS                     => Empty_Time_Stamp,\n                       Exec_Directory                 => No_Path_Information,\n@@ -841,6 +841,7 @@ package body Prj is\n    begin\n       if Tree /= null then\n          Name_List_Table.Free (Tree.Name_Lists);\n+         Number_List_Table.Free (Tree.Number_Lists);\n          String_Element_Table.Free (Tree.String_Elements);\n          Variable_Element_Table.Free (Tree.Variable_Elements);\n          Array_Element_Table.Free (Tree.Array_Elements);\n@@ -868,6 +869,7 @@ package body Prj is\n       --  Visible tables\n \n       Name_List_Table.Init          (Tree.Name_Lists);\n+      Number_List_Table.Init        (Tree.Number_Lists);\n       String_Element_Table.Init     (Tree.String_Elements);\n       Variable_Element_Table.Init   (Tree.Variable_Elements);\n       Array_Element_Table.Init      (Tree.Array_Elements);"}, {"sha": "502ace95f8df52a9137134f8afa3fe19577a07c0", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=75a648339844b6eeaef9553841766448e43b63fd", "patch": "@@ -314,7 +314,23 @@ package Prj is\n       Table_Low_Bound      => 1,\n       Table_Initial        => 10,\n       Table_Increment      => 100);\n-   --  The table for lists of names used in package Language_Processing\n+   --  The table for lists of names\n+\n+   type Number_List_Index is new Nat;\n+   No_Number_List : constant Number_List_Index := 0;\n+\n+   type Number_Node is record\n+      Number : Natural           := 0;\n+      Next   : Number_List_Index := No_Number_List;\n+   end record;\n+\n+   package Number_List_Table is new GNAT.Dynamic_Tables\n+     (Table_Component_Type => Number_Node,\n+      Table_Index_Type     => Number_List_Index,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 10,\n+      Table_Increment      => 100);\n+   --  The table for lists of numbers\n \n    package Mapping_Files_Htable is new Simple_HTable\n      (Header_Num => Header_Num,\n@@ -623,6 +639,12 @@ package Prj is\n       Project                : Project_Id          := No_Project;\n       --  Project of the source\n \n+      Source_Dir_Rank        : Natural             := 0;\n+      --  The rank of the source directory in list declared with attribute\n+      --  Source_Dirs. Two source files with the same name cannot appears in\n+      --  different directory with the same rank. That can happen when the\n+      --  recursive notation <dir>/** is used in attribute Source_Dirs.\n+\n       Language               : Language_Ptr        := No_Language_Index;\n       --  Index of the language. This is an index into\n       --  Project_Tree.Languages_Data.\n@@ -717,6 +739,7 @@ package Prj is\n \n    No_Source_Data : constant Source_Data :=\n                       (Project                => No_Project,\n+                       Source_Dir_Rank        => 0,\n                        Language               => No_Language_Index,\n                        In_Interfaces          => True,\n                        Declared_In_Interfaces => False,\n@@ -1155,10 +1178,7 @@ package Prj is\n       Source_Dirs : String_List_Id := Nil_String;\n       --  The list of all the source directories\n \n-      Known_Order_Of_Source_Dirs : Boolean := True;\n-      --  False, if there is any /** in the Source_Dirs, because in this case\n-      --  the ordering of the source subdirs depend on the OS. If True,\n-      --  duplicate file names in the same project file are allowed.\n+      Source_Dir_Ranks : Number_List_Index := No_Number_List;\n \n       Ada_Include_Path : String_Access := null;\n       --  The cached value of source search path for this project file. Set by\n@@ -1273,6 +1293,7 @@ package Prj is\n    type Project_Tree_Data is\n       record\n          Name_Lists        : Name_List_Table.Instance;\n+         Number_Lists      : Number_List_Table.Instance;\n          String_Elements   : String_Element_Table.Instance;\n          Variable_Elements : Variable_Element_Table.Instance;\n          Array_Elements    : Array_Element_Table.Instance;"}, {"sha": "bce8648209b53aec0cd534e4b72c281cf0bc7c5a", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=75a648339844b6eeaef9553841766448e43b63fd", "patch": "@@ -231,13 +231,13 @@ TXT(\"   Target_Name : constant String := \" STR(TARGET) \";\")\n    type Target_OS_Type is (Windows, VMS, Other_OS);\n */\n #if defined (__MINGW32__)\n-# define TARGET_OS Windows\n+# define TARGET_OS \"Windows\"\n #elif defined (__VMS)\n-# define TARGET_OS VMS\n+# define TARGET_OS \"VMS\"\n #else\n-# define TARGET_OS Other_OS\n+# define TARGET_OS \"Other_OS\"\n #endif\n-TXT(\"   Target_OS : constant Target_OS_Type := \" STR(TARGET_OS) \";\")\n+TXT(\"   Target_OS : constant Target_OS_Type := \" TARGET_OS \";\")\n /*\n \n    -------------------"}, {"sha": "dd4aaafce9acdfed3be20dc96141d2a2f6220dc5", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=75a648339844b6eeaef9553841766448e43b63fd", "patch": "@@ -1583,6 +1583,14 @@ package body Sinfo is\n       return Uint3 (N);\n    end Intval;\n \n+   function Is_Accessibility_Actual\n+     (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Parameter_Association);\n+      return Flag12 (N);\n+   end Is_Accessibility_Actual;\n+\n    function Is_Asynchronous_Call_Block\n       (N : Node_Id) return Boolean is\n    begin\n@@ -4435,6 +4443,14 @@ package body Sinfo is\n       Set_Uint3 (N, Val);\n    end Set_Intval;\n \n+   procedure Set_Is_Accessibility_Actual\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Parameter_Association);\n+      Set_Flag12 (N, Val);\n+   end Set_Is_Accessibility_Actual;\n+\n    procedure Set_Is_Asynchronous_Call_Block\n       (N : Node_Id; Val : Boolean := True) is\n    begin"}, {"sha": "2e666c49a640c38c9c8298b28eacabc44d6d7633", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a648339844b6eeaef9553841766448e43b63fd/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=75a648339844b6eeaef9553841766448e43b63fd", "patch": "@@ -1179,6 +1179,13 @@ package Sinfo is\n    --    to the node for the spec of the instance, inserted as part of the\n    --    semantic processing for instantiations in Sem_Ch12.\n \n+   --  Is_Accessibility_Actual (Flag12-Sem)\n+   --    Present in N_Parameter_Association nodes. True if the parameter is\n+   --    an extra actual that carries the accessibility level of the actual\n+   --    for an access parameter, in a function that dispatches on result and\n+   --    is called in a dispatching context. Used to prevent a formal/actual\n+   --    mismatch when the call is rewritten as a dispatching call.\n+\n    --  Is_Asynchronous_Call_Block (Flag7-Sem)\n    --    A flag set in a Block_Statement node to indicate that it is the\n    --    expansion of an asynchronous entry call. Such a block needs cleanup\n@@ -4450,6 +4457,7 @@ package Sinfo is\n       --  Selector_Name (Node2) (always non-Empty)\n       --  Explicit_Actual_Parameter (Node3)\n       --  Next_Named_Actual (Node4-Sem)\n+      --  Is_Accessibility_Actual (Flag12-Sem)\n \n       ---------------------------\n       -- 6.4  Actual Parameter --\n@@ -8070,6 +8078,9 @@ package Sinfo is\n    function Intval\n      (N : Node_Id) return Uint;       -- Uint3\n \n+   function Is_Accessibility_Actual\n+     (N : Node_Id) return Boolean;    -- Flag12\n+\n    function Is_Asynchronous_Call_Block\n      (N : Node_Id) return Boolean;    -- Flag7\n \n@@ -8979,6 +8990,9 @@ package Sinfo is\n    procedure Set_Intval\n      (N : Node_Id; Val : Uint);               -- Uint3\n \n+   procedure Set_Is_Accessibility_Actual\n+     (N : Node_Id; Val : Boolean := True);    -- Flag12\n+\n    procedure Set_Is_Asynchronous_Call_Block\n      (N : Node_Id; Val : Boolean := True);    -- Flag7\n \n@@ -11246,6 +11260,7 @@ package Sinfo is\n    pragma Inline (In_Present);\n    pragma Inline (Instance_Spec);\n    pragma Inline (Intval);\n+   pragma Inline (Is_Accessibility_Actual);\n    pragma Inline (Is_Asynchronous_Call_Block);\n    pragma Inline (Is_Component_Left_Opnd);\n    pragma Inline (Is_Component_Right_Opnd);\n@@ -11545,6 +11560,7 @@ package Sinfo is\n    pragma Inline (Set_In_Present);\n    pragma Inline (Set_Instance_Spec);\n    pragma Inline (Set_Intval);\n+   pragma Inline (Set_Is_Accessibility_Actual);\n    pragma Inline (Set_Is_Asynchronous_Call_Block);\n    pragma Inline (Set_Is_Component_Left_Opnd);\n    pragma Inline (Set_Is_Component_Right_Opnd);"}]}