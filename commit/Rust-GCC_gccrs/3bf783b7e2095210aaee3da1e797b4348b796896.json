{"sha": "3bf783b7e2095210aaee3da1e797b4348b796896", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JmNzgzYjdlMjA5NTIxMGFhZWUzZGExZTc5N2I0MzQ4Yjc5Njg5Ng==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2007-01-18T18:17:08Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2007-01-18T18:17:08Z"}, "message": "trans-stmt.c (compute_overall_iter_number): Enhance to precompute the number of interations in unconditional FORALL nests...\n\n\n\t* trans-stmt.c (compute_overall_iter_number): Enhance to precompute\n\tthe number of interations in unconditional FORALL nests with constant\n\tbounds.\n\nFrom-SVN: r120905", "tree": {"sha": "8e73ebedbd664148992d609d0ca894ca246ff53c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e73ebedbd664148992d609d0ca894ca246ff53c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bf783b7e2095210aaee3da1e797b4348b796896", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bf783b7e2095210aaee3da1e797b4348b796896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bf783b7e2095210aaee3da1e797b4348b796896", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bf783b7e2095210aaee3da1e797b4348b796896/comments", "author": null, "committer": null, "parents": [{"sha": "e2265be077337cbef09d8910ee391b3f3f7a048f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2265be077337cbef09d8910ee391b3f3f7a048f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2265be077337cbef09d8910ee391b3f3f7a048f"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "4c1a3c528e74a41045357f4f89db94ff59f6290d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bf783b7e2095210aaee3da1e797b4348b796896/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bf783b7e2095210aaee3da1e797b4348b796896/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3bf783b7e2095210aaee3da1e797b4348b796896", "patch": "@@ -1,3 +1,9 @@\n+2007-01-18  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* trans-stmt.c (compute_overall_iter_number): Enhance to precompute\n+\tthe number of interations in unconditional FORALL nests with constant\n+\tbounds.\n+\n 2007-01-18  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \t    Tobias Burnus  <burnus@net-b.de>\n "}, {"sha": "c36d6faf0e9e154de3c8c96439906b8d9c999a55", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bf783b7e2095210aaee3da1e797b4348b796896/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bf783b7e2095210aaee3da1e797b4348b796896/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=3bf783b7e2095210aaee3da1e797b4348b796896", "patch": "@@ -2034,9 +2034,33 @@ compute_overall_iter_number (forall_info *nested_forall_info, tree inner_size,\n   tree tmp, number;\n   stmtblock_t body;\n \n-  /* Optimize the case for an outer-most loop with constant bounds.  */\n-  if (INTEGER_CST_P (inner_size) && !nested_forall_info)\n-    return inner_size;\n+  /* Optimize the case of unconditional FORALL nests with constant bounds.  */\n+  if (INTEGER_CST_P (inner_size))\n+    {\n+      bool all_const_p = true;\n+      forall_info *forall_tmp;\n+\n+      /* First check whether all the bounds are constant.  */\n+      for (forall_tmp = nested_forall_info;\n+\t   forall_tmp;\n+\t   forall_tmp = forall_tmp->next_nest)\n+\tif (forall_tmp->mask || !INTEGER_CST_P (forall_tmp->size))\n+\t  {\n+\t    all_const_p = false;\n+\t    break;\n+\t  }\n+\n+      if (all_const_p)\n+\t{\n+\t  tree tmp = inner_size;\n+\t  for (forall_tmp = nested_forall_info;\n+\t       forall_tmp;\n+\t       forall_tmp = forall_tmp->next_nest)\n+\t    tmp = fold_build2 (MULT_EXPR, gfc_array_index_type,\n+\t\t\t       tmp, forall->size);\n+\t  return tmp;\n+\t}\n+    }\n   \n   /* TODO: optimizing the computing process.  */\n   number = gfc_create_var (gfc_array_index_type, \"num\");"}]}