{"sha": "5bc08e85f179b65b4e8f4bb70421216805c5c6bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJjMDhlODVmMTc5YjY1YjRlOGY0YmI3MDQyMTIxNjgwNWM1YzZiZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-04-01T17:33:27Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-04-01T17:33:27Z"}, "message": "cp-tree.h (DECL_UNBOUND_CLASS_TEMPLATE_P): Remove.\n\n2013-04-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* cp-tree.h (DECL_UNBOUND_CLASS_TEMPLATE_P): Remove.\n\t(DECL_FUNCTION_TEMPLATE_P): Adjust.\n\n\t* cxx-pretty-print.c (pp_cxx_nested_name_specifier,\n\tpp_cxx_qualified_id): Use get_containing_scope.\n\t* parser.c (cp_parser_class_head): Likewise.\n\t* pt.c (push_template_decl_real): Likewise.\n\n\t* decl2.c (import_export_decl): Use DECL_TEMPLOID_INSTANTIATION.\n\t* pt.c (unify): Use CP_INTEGRAL_TYPE_P.\n\nFrom-SVN: r197309", "tree": {"sha": "0d8d5bdf7ad8a0274141690de1839c4d8b042617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d8d5bdf7ad8a0274141690de1839c4d8b042617"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bc08e85f179b65b4e8f4bb70421216805c5c6bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc08e85f179b65b4e8f4bb70421216805c5c6bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bc08e85f179b65b4e8f4bb70421216805c5c6bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/comments", "author": null, "committer": null, "parents": [{"sha": "136fb3f734a18e6759988346b1c8d3e34e67d05a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136fb3f734a18e6759988346b1c8d3e34e67d05a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/136fb3f734a18e6759988346b1c8d3e34e67d05a"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "f96c26430597d759c12f75e0240ae3a158289acd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5bc08e85f179b65b4e8f4bb70421216805c5c6bf", "patch": "@@ -1,3 +1,16 @@\n+2013-04-01  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* cp-tree.h (DECL_UNBOUND_CLASS_TEMPLATE_P): Remove.\n+\t(DECL_FUNCTION_TEMPLATE_P): Adjust.\n+\n+\t* cxx-pretty-print.c (pp_cxx_nested_name_specifier,\n+\tpp_cxx_qualified_id): Use get_containing_scope.\n+\t* parser.c (cp_parser_class_head): Likewise.\n+\t* pt.c (push_template_decl_real): Likewise.\n+\n+\t* decl2.c (import_export_decl): Use DECL_TEMPLOID_INSTANTIATION.\n+\t* pt.c (unify): Use CP_INTEGRAL_TYPE_P.\n+\n 2013-03-31  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl2.c (collect_candidates_for_java_method_aliases): Use"}, {"sha": "3119105863be89d5a1593a0b7dc9c54831c97566", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=5bc08e85f179b65b4e8f4bb70421216805c5c6bf", "patch": "@@ -3730,14 +3730,10 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n #define DECL_TEMPLATE_TEMPLATE_PARM_P(NODE) \\\n   (TREE_CODE (NODE) == TEMPLATE_DECL && DECL_TEMPLATE_PARM_P (NODE))\n \n-/* Nonzero if NODE is a TEMPLATE_DECL representing an\n-   UNBOUND_CLASS_TEMPLATE tree node.  */\n-#define DECL_UNBOUND_CLASS_TEMPLATE_P(NODE) \\\n-  (TREE_CODE (NODE) == TEMPLATE_DECL && !DECL_TEMPLATE_RESULT (NODE))\n-\n-#define DECL_FUNCTION_TEMPLATE_P(NODE)  \\\n-  (TREE_CODE (NODE) == TEMPLATE_DECL \\\n-   && !DECL_UNBOUND_CLASS_TEMPLATE_P (NODE) \\\n+/* Nonzero for a DECL that represents a function template.  */\n+#define DECL_FUNCTION_TEMPLATE_P(NODE)                          \\\n+  (TREE_CODE (NODE) == TEMPLATE_DECL                            \\\n+   && DECL_TEMPLATE_RESULT (NODE) != NULL_TREE\t\t\t\\\n    && TREE_CODE (DECL_TEMPLATE_RESULT (NODE)) == FUNCTION_DECL)\n \n /* Nonzero for a DECL that represents a class template or alias"}, {"sha": "ef8df7067587b357e64c6df7ef1143e70f8c2632", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=5bc08e85f179b65b4e8f4bb70421216805c5c6bf", "patch": "@@ -260,7 +260,7 @@ pp_cxx_nested_name_specifier (cxx_pretty_printer *pp, tree t)\n {\n   if (!SCOPE_FILE_SCOPE_P (t) && t != pp->enclosing_scope)\n     {\n-      tree scope = TYPE_P (t) ? TYPE_CONTEXT (t) : DECL_CONTEXT (t);\n+      tree scope = get_containing_scope (t);\n       pp_cxx_nested_name_specifier (pp, scope);\n       pp_cxx_template_keyword_if_needed (pp, scope, t);\n       pp_cxx_unqualified_id (pp, t);\n@@ -308,7 +308,7 @@ pp_cxx_qualified_id (cxx_pretty_printer *pp, tree t)\n \n     default:\n       {\n-\ttree scope = TYPE_P (t) ? TYPE_CONTEXT (t) : DECL_CONTEXT (t);\n+\ttree scope = get_containing_scope (t);\n \tif (scope != pp->enclosing_scope)\n \t  {\n \t    pp_cxx_nested_name_specifier (pp, scope);"}, {"sha": "e14c38814eb27d632345aa6b4ef82f2625a2cce5", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=5bc08e85f179b65b4e8f4bb70421216805c5c6bf", "patch": "@@ -2572,8 +2572,7 @@ import_export_decl (tree decl)\n       else\n \tcomdat_p = true;\n     }\n-  else if (DECL_TEMPLATE_INSTANTIATION (decl)\n-\t   || DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION (decl))\n+  else if (DECL_TEMPLOID_INSTANTIATION (decl))\n     {\n       /* DECL is an implicit instantiation of a function or static\n \t data member.  */"}, {"sha": "a5cf66d304ed0bc4712710f9713798af85cc21ea", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=5bc08e85f179b65b4e8f4bb70421216805c5c6bf", "patch": "@@ -18773,9 +18773,7 @@ cp_parser_class_head (cp_parser* parser,\n \n \t  for (scope = TREE_TYPE (type);\n \t       scope && TREE_CODE (scope) != NAMESPACE_DECL;\n-\t       scope = (TYPE_P (scope)\n-\t\t\t? TYPE_CONTEXT (scope)\n-\t\t\t: DECL_CONTEXT (scope)))\n+\t       scope = get_containing_scope (scope))\n \t    if (TYPE_P (scope)\n \t\t&& CLASS_TYPE_P (scope)\n \t\t&& CLASSTYPE_TEMPLATE_INFO (scope)"}, {"sha": "7f4212de9a8bfbccaafbd2d891f7d222ec28f0c6", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc08e85f179b65b4e8f4bb70421216805c5c6bf/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5bc08e85f179b65b4e8f4bb70421216805c5c6bf", "patch": "@@ -4803,9 +4803,7 @@ push_template_decl_real (tree decl, bool is_friend)\n \t      /* Can happen in erroneous input.  */\n \t      break;\n \t    else\n-\t      current = (TYPE_P (current)\n-\t\t\t ? TYPE_CONTEXT (current)\n-\t\t\t : DECL_CONTEXT (current));\n+\t      current = get_containing_scope (current);\n \t  }\n \n       /* Check that the parms are used in the appropriate qualifying scopes\n@@ -16750,8 +16748,7 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict,\n       else if (same_type_p (TREE_TYPE (arg), tparm))\n \t/* OK */;\n       else if ((strict & UNIFY_ALLOW_INTEGER)\n-\t       && (TREE_CODE (tparm) == INTEGER_TYPE\n-\t\t   || TREE_CODE (tparm) == BOOLEAN_TYPE))\n+\t       && CP_INTEGRAL_TYPE_P (tparm))\n \t/* Convert the ARG to the type of PARM; the deduced non-type\n \t   template argument must exactly match the types of the\n \t   corresponding parameter.  */"}]}