{"sha": "f626ae5478887b0cec886160dcfc4d59bf6fda07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYyNmFlNTQ3ODg4N2IwY2VjODg2MTYwZGNmYzRkNTliZjZmZGEwNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-03T08:00:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-03T08:03:12Z"}, "message": "s390x: Fix popcounthi2_z196 expander [PR93533]\n\nThe following testcase started to ICE when .POPCOUNT matching has been added\nto match.pd; we had __builtin_popcount*, but nothing would use the\npopcounthi2 expander before.\n\nThe problem is that the popcounthi2_z196 expander doesn't emit valid RTL:\nerror: unrecognizable insn:\n(insn 138 137 139 27 (set (reg:SI 190)\n        (ashift:SI (reg:HI 95 [ _105 ])\n            (const_int 8 [0x8]))) -1\n     (nil))\nduring RTL pass: vregs\nThe following patch is an attempt to fix that, furthermore I've tried to\nslightly simplify it as well, it makes no sense to me to perform\n(x + (x << 8)) >> 8 when we need to either zero extend or mask the result\nat the end in order to avoid bits from above HImode to affect it, when we\ncan do\n(x + (x >> 8)) & 0xff (or zero extension).\n\n2020-02-03  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/93533\n\t* config/s390/s390.md (popcounthi2_z196): Fix up expander to emit\n\tvalid RTL to sum up the lowest and second lowest bytes of the popcnt\n\tresult.\n\n\t* gcc.c-torture/compile/pr93533.c: New test.\n\t* gcc.target/s390/pr93533.c: New test.", "tree": {"sha": "766b78d2bb74aa6109d4696637e07943be27c89e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/766b78d2bb74aa6109d4696637e07943be27c89e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f626ae5478887b0cec886160dcfc4d59bf6fda07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f626ae5478887b0cec886160dcfc4d59bf6fda07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f626ae5478887b0cec886160dcfc4d59bf6fda07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f626ae5478887b0cec886160dcfc4d59bf6fda07/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3ccce5b47f85d70127f5bb894bc5e83f8d2510e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e"}], "stats": {"total": 56, "additions": 45, "deletions": 11}, "files": [{"sha": "2cb1b9f7361ccdd6ea6d8cd90d8f3e5b45c96176", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f626ae5478887b0cec886160dcfc4d59bf6fda07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f626ae5478887b0cec886160dcfc4d59bf6fda07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f626ae5478887b0cec886160dcfc4d59bf6fda07", "patch": "@@ -1,3 +1,10 @@\n+2020-02-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93533\n+\t* config/s390/s390.md (popcounthi2_z196): Fix up expander to emit\n+\tvalid RTL to sum up the lowest and second lowest bytes of the popcnt\n+\tresult.\n+\n 2020-02-02  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/91333"}, {"sha": "e37ba49444a3569ecdc129493a0cb74b078caf8f", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f626ae5478887b0cec886160dcfc4d59bf6fda07/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f626ae5478887b0cec886160dcfc4d59bf6fda07/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=f626ae5478887b0cec886160dcfc4d59bf6fda07", "patch": "@@ -11670,21 +11670,28 @@\n })\n \n (define_expand \"popcounthi2_z196\"\n-  [; popcnt op0, op1\n-   (parallel [(set (match_operand:HI 0 \"register_operand\" \"\")\n+  [; popcnt op2, op1\n+   (parallel [(set (match_dup 2)\n \t\t   (unspec:HI [(match_operand:HI 1 \"register_operand\")]\n \t\t\t      UNSPEC_POPCNT))\n \t      (clobber (reg:CC CC_REGNUM))])\n-   ; sllk op2, op0, 8\n-   (set (match_dup 2)\n-\t(ashift:SI (match_dup 0) (const_int 8)))\n-   ; ar op0, op2\n-   (parallel [(set (match_dup 0) (plus:SI (match_dup 0) (match_dup 2)))\n+   ; lr op3, op2\n+   (set (match_dup 3) (subreg:SI (match_dup 2) 0))\n+   ; srl op4, op3, 8\n+   (set (match_dup 4) (lshiftrt:SI (match_dup 3) (const_int 8)))\n+   ; ar op3, op4\n+   (parallel [(set (match_dup 3) (plus:SI (match_dup 3) (match_dup 4)))\n \t      (clobber (reg:CC CC_REGNUM))])\n-   ; srl op0, op0, 8\n-   (set (match_dup 0) (lshiftrt:HI (match_dup 0) (const_int 8)))]\n+   ; llgc op0, op3\n+   (parallel [(set (match_operand:HI 0 \"register_operand\" \"\")\n+\t\t   (and:HI (subreg:HI (match_dup 3) 2) (const_int 255)))\n+\t      (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_Z196\"\n-  \"operands[2] = gen_reg_rtx (SImode);\")\n+{\n+  operands[2] = gen_reg_rtx (HImode);\n+  operands[3] = gen_reg_rtx (SImode);\n+  operands[4] = gen_reg_rtx (SImode);\n+})\n \n (define_expand \"popcounthi2\"\n   [(set (match_dup 2)"}, {"sha": "86b9edcad56813b77a19f7d2c0ab68badc3d95d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f626ae5478887b0cec886160dcfc4d59bf6fda07/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f626ae5478887b0cec886160dcfc4d59bf6fda07/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f626ae5478887b0cec886160dcfc4d59bf6fda07", "patch": "@@ -1,4 +1,10 @@\n-2020-02-03  Jun Ma <JunMa@linux.alibaba.com>\n+2020-02-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93533\n+\t* gcc.c-torture/compile/pr93533.c: New test.\n+\t* gcc.target/s390/pr93533.c: New test.\n+\n+2020-02-03  Jun Ma  <JunMa@linux.alibaba.com>\n \n \t* g++.dg/coroutines/co-await-04-control-flow.C: Add label.\n "}, {"sha": "8b9b1bea4e2abbd7b67972c34d3ab8675a6d72d8", "filename": "gcc/testsuite/gcc.c-torture/compile/pr93533.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f626ae5478887b0cec886160dcfc4d59bf6fda07/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr93533.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f626ae5478887b0cec886160dcfc4d59bf6fda07/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr93533.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr93533.c?ref=f626ae5478887b0cec886160dcfc4d59bf6fda07", "patch": "@@ -0,0 +1,9 @@\n+/* PR target/93533 */\n+\n+unsigned\n+foo (unsigned short a)\n+{\n+  a = a - (a >> 1 & 21845);\n+  a = (a & 13107) + (a >> 2 & 13107);\n+  return (unsigned short) ((a + (a >> 4) & 3855) * 257) >> 8;\n+}"}, {"sha": "1a49c7395bacddbc27c585aecd3a1ef4b4d3d651", "filename": "gcc/testsuite/gcc.target/s390/pr93533.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f626ae5478887b0cec886160dcfc4d59bf6fda07/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr93533.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f626ae5478887b0cec886160dcfc4d59bf6fda07/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr93533.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr93533.c?ref=f626ae5478887b0cec886160dcfc4d59bf6fda07", "patch": "@@ -0,0 +1,5 @@\n+/* PR target/93533 */\n+/* { dg-do compile } */\n+/* { dg-options \"-march=z196 -O2\" } */\n+\n+#include \"../../gcc.c-torture/compile/pr93533.c\""}]}