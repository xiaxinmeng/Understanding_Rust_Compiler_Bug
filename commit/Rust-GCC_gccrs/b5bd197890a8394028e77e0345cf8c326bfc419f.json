{"sha": "b5bd197890a8394028e77e0345cf8c326bfc419f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViZDE5Nzg5MGE4Mzk0MDI4ZTc3ZTAzNDVjZjhjMzI2YmZjNDE5Zg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-06-02T12:26:42Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-06-02T12:26:42Z"}, "message": "[rtlanal] Fix rtl-optimization/71295\n\n\tPR rtl-optimization/71295\n\t* rtlanal.c (subreg_get_info): If taking a subreg at the requested\n\toffset would go over the size of the inner mode reject it.\n\n\t* gcc.c-torture/compile/pr71295.c: New test.\n\nFrom-SVN: r237034", "tree": {"sha": "a941aa68273c5d9bb083a41f678ef943244940f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a941aa68273c5d9bb083a41f678ef943244940f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5bd197890a8394028e77e0345cf8c326bfc419f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bd197890a8394028e77e0345cf8c326bfc419f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5bd197890a8394028e77e0345cf8c326bfc419f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bd197890a8394028e77e0345cf8c326bfc419f/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8aa5bdd61e96a7adeec6dad22847be27faad7122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa5bdd61e96a7adeec6dad22847be27faad7122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aa5bdd61e96a7adeec6dad22847be27faad7122"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "01beb954298220db06cabec47ab3247c753ad83f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bd197890a8394028e77e0345cf8c326bfc419f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bd197890a8394028e77e0345cf8c326bfc419f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5bd197890a8394028e77e0345cf8c326bfc419f", "patch": "@@ -1,3 +1,9 @@\n+2016-06-02  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/71295\n+\t* rtlanal.c (subreg_get_info): If taking a subreg at the requested\n+\toffset would go over the size of the inner mode reject it.\n+\n 2016-06-02  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/sse.md (*vec_concatv4si): Use v=v,v instead of"}, {"sha": "8e4762c86817adff665d5e5b5e4d54a3ed63e7ff", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bd197890a8394028e77e0345cf8c326bfc419f/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bd197890a8394028e77e0345cf8c326bfc419f/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=b5bd197890a8394028e77e0345cf8c326bfc419f", "patch": "@@ -3657,6 +3657,16 @@ subreg_get_info (unsigned int xregno, machine_mode xmode,\n \t  info->offset = offset / regsize_xmode;\n \t  return;\n \t}\n+      /* It's not valid to extract a subreg of mode YMODE at OFFSET that\n+\t would go outside of XMODE.  */\n+      if (!rknown\n+\t  && GET_MODE_SIZE (ymode) + offset > GET_MODE_SIZE (xmode))\n+\t{\n+\t  info->representable_p = false;\n+\t  info->nregs = nregs_ymode;\n+\t  info->offset = offset / regsize_xmode;\n+\t  return;\n+\t}\n       /* Quick exit for the simple and common case of extracting whole\n \t subregisters from a multiregister value.  */\n       /* ??? It would be better to integrate this into the code below,"}, {"sha": "2bd4681100453bcc5c4747f03d13f0f1fa2bff39", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bd197890a8394028e77e0345cf8c326bfc419f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bd197890a8394028e77e0345cf8c326bfc419f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b5bd197890a8394028e77e0345cf8c326bfc419f", "patch": "@@ -1,3 +1,8 @@\n+2016-06-02  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/71295\n+\t* gcc.c-torture/compile/pr71295.c: New test.\n+\n 2016-06-02  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.target/i386/avx512vl-concatv4si-1.c: New test."}, {"sha": "d2ec852fd08b307da50bfd993a6c43d42f303037", "filename": "gcc/testsuite/gcc.c-torture/compile/pr71295.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bd197890a8394028e77e0345cf8c326bfc419f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr71295.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bd197890a8394028e77e0345cf8c326bfc419f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr71295.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr71295.c?ref=b5bd197890a8394028e77e0345cf8c326bfc419f", "patch": "@@ -0,0 +1,12 @@\n+extern void fn2 (long long);\n+int a;\n+\n+void\n+fn1 ()\n+{\n+  long long b[3];\n+  a = 0;\n+  for (; a < 3; a++)\n+    b[a] = 1;\n+  fn2 (b[1]);\n+}"}]}