{"sha": "5dba8769311c65ca4f289382045075d1d55f7e77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiYTg3NjkzMTFjNjVjYTRmMjg5MzgyMDQ1MDc1ZDFkNTVmN2U3Nw==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2014-08-23T15:56:07Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2014-08-23T15:56:07Z"}, "message": "re PR target/62038 (Out of range branch target in thunk)\n\n\tPR target/62038\n\t* config/pa/pa.c (pa_output_function_epilogue): Don't set\n\tlast_address when the current function is a thunk.\n\t(pa_asm_output_mi_thunk): When we don't have named sections or they\n\tare not being used, check that thunk can reach the stub table with a\n\tshort branch.\n\nFrom-SVN: r214397", "tree": {"sha": "0aceace87d79d3c1339f3d6dfb3f48007264816a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aceace87d79d3c1339f3d6dfb3f48007264816a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dba8769311c65ca4f289382045075d1d55f7e77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dba8769311c65ca4f289382045075d1d55f7e77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dba8769311c65ca4f289382045075d1d55f7e77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dba8769311c65ca4f289382045075d1d55f7e77/comments", "author": null, "committer": null, "parents": [{"sha": "5e0231c231404677aa1b90e499b54cc1ff6328a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e0231c231404677aa1b90e499b54cc1ff6328a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e0231c231404677aa1b90e499b54cc1ff6328a4"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "d01509ab4507432a160f248be6290b1ce38d2234", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dba8769311c65ca4f289382045075d1d55f7e77/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dba8769311c65ca4f289382045075d1d55f7e77/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5dba8769311c65ca4f289382045075d1d55f7e77", "patch": "@@ -1,3 +1,12 @@\n+2014-08-23  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR target/62038\n+\t* config/pa/pa.c (pa_output_function_epilogue): Don't set\n+\tlast_address when the current function is a thunk.\n+\t(pa_asm_output_mi_thunk): When we don't have named sections or they\n+\tare not being used, check that thunk can reach the stub table with a\n+\tshort branch.\n+\n 2014-08-23  David Malcolm  <dmalcolm@redhat.com>\n \n \t* web.c (union_match_dups): Strengthen param \"insn\" from rtx to"}, {"sha": "ad0cca34f71818fe7b8cece5ef6823c1dbcf674f", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dba8769311c65ca4f289382045075d1d55f7e77/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dba8769311c65ca4f289382045075d1d55f7e77/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=5dba8769311c65ca4f289382045075d1d55f7e77", "patch": "@@ -4137,8 +4137,7 @@ static void\n pa_output_function_epilogue (FILE *file, HOST_WIDE_INT size ATTRIBUTE_UNUSED)\n {\n   rtx insn = get_last_insn ();\n-\n-  last_address = 0;\n+  bool extra_nop;\n \n   /* pa_expand_epilogue does the dirty work now.  We just need\n      to output the assembler directives which denote the end\n@@ -4162,8 +4161,10 @@ pa_output_function_epilogue (FILE *file, HOST_WIDE_INT size ATTRIBUTE_UNUSED)\n   if (insn && CALL_P (insn))\n     {\n       fputs (\"\\tnop\\n\", file);\n-      last_address += 4;\n+      extra_nop = true;\n     }\n+  else\n+    extra_nop = false;\n \n   fputs (\"\\t.EXIT\\n\\t.PROCEND\\n\", file);\n \n@@ -4176,12 +4177,13 @@ pa_output_function_epilogue (FILE *file, HOST_WIDE_INT size ATTRIBUTE_UNUSED)\n       cfun->machine->in_nsubspa = 2;\n     }\n \n-  /* Thunks do their own accounting.  */\n+  /* Thunks do their own insn accounting.  */\n   if (cfun->is_thunk)\n     return;\n \n   if (INSN_ADDRESSES_SET_P ())\n     {\n+      last_address = extra_nop ? 4 : 0;\n       insn = get_last_nonnote_insn ();\n       last_address += INSN_ADDRESSES (INSN_UID (insn));\n       if (INSN_P (insn))\n@@ -8275,12 +8277,16 @@ pa_asm_output_mi_thunk (FILE *file, tree thunk_fndecl, HOST_WIDE_INT delta,\n \t\t   || ((DECL_SECTION_NAME (thunk_fndecl)\n \t\t\t== DECL_SECTION_NAME (function))\n \t\t       && last_address < 262132)))\n+\t      /* In this case, we need to be able to reach the start of\n+\t\t the stub table even though the function is likely closer\n+\t\t and can be jumped to directly.  */\n \t      || (targetm_common.have_named_sections\n \t\t  && DECL_SECTION_NAME (thunk_fndecl) == NULL\n \t\t  && DECL_SECTION_NAME (function) == NULL\n-\t\t  && last_address < 262132)\n+\t\t  && total_code_bytes < MAX_PCREL17F_OFFSET)\n+\t      /* Likewise.  */\n \t      || (!targetm_common.have_named_sections\n-\t\t  && last_address < 262132))))\n+\t\t  && total_code_bytes < MAX_PCREL17F_OFFSET))))\n     {\n       if (!val_14)\n \toutput_asm_insn (\"addil L'%2,%%r26\", xoperands);"}]}