{"sha": "708eab9b5bfdb5be44253dbac5f58cea5c652c55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA4ZWFiOWI1YmZkYjViZTQ0MjUzZGJhYzVmNThjZWE1YzY1MmM1NQ==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@gcc.gnu.org", "date": "2017-12-12T22:22:53Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@gcc.gnu.org", "date": "2017-12-12T22:22:53Z"}, "message": "re PR target/82190 (Possibly latent miscompilation issue on ppc64le-linux-gnu for memcpy-bi.c with -fweb -fno-optimize-strlen)\n\n2017-12-12  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n\n\tPR target/82190\n\t* config/rs6000/rs6000-string.c (expand_block_compare,\n\texpand_strn_compare): Fix set_mem_size() calls.\n\nFrom-SVN: r255592", "tree": {"sha": "eae294451e639aa701218cf4b0cb5c1211fa70be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eae294451e639aa701218cf4b0cb5c1211fa70be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/708eab9b5bfdb5be44253dbac5f58cea5c652c55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/708eab9b5bfdb5be44253dbac5f58cea5c652c55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/708eab9b5bfdb5be44253dbac5f58cea5c652c55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/708eab9b5bfdb5be44253dbac5f58cea5c652c55/comments", "author": null, "committer": null, "parents": [{"sha": "48f43f9547392ede42dbd56514d7386c564baa8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f43f9547392ede42dbd56514d7386c564baa8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f43f9547392ede42dbd56514d7386c564baa8d"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "1ff4284073a475562c6b318a0b8df1554c4bdc1e", "filename": "gcc/config/rs6000/rs6000-string.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708eab9b5bfdb5be44253dbac5f58cea5c652c55/gcc%2Fconfig%2Frs6000%2Frs6000-string.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708eab9b5bfdb5be44253dbac5f58cea5c652c55/gcc%2Fconfig%2Frs6000%2Frs6000-string.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-string.c?ref=708eab9b5bfdb5be44253dbac5f58cea5c652c55", "patch": "@@ -459,14 +459,14 @@ expand_block_compare (rtx operands[])\n \t  rtx src1_reg = copy_addr_to_reg (XEXP (src1, 0));\n \t  src1 = replace_equiv_address (src1, src1_reg);\n \t}\n-      set_mem_size (src1, cmp_bytes);\n+      set_mem_size (src1, load_mode_size);\n \n       if (!REG_P (XEXP (src2, 0)))\n \t{\n \t  rtx src2_reg = copy_addr_to_reg (XEXP (src2, 0));\n \t  src2 = replace_equiv_address (src2, src2_reg);\n \t}\n-      set_mem_size (src2, cmp_bytes);\n+      set_mem_size (src2, load_mode_size);\n \n       do_load_for_compare (tmp_reg_src1, src1, load_mode);\n       do_load_for_compare (tmp_reg_src2, src2, load_mode);\n@@ -937,14 +937,14 @@ expand_strn_compare (rtx operands[], int no_length)\n \t  rtx src1_reg = copy_addr_to_reg (XEXP (src1, 0));\n \t  src1 = replace_equiv_address (src1, src1_reg);\n \t}\n-      set_mem_size (src1, cmp_bytes);\n+      set_mem_size (src1, load_mode_size);\n \n       if (!REG_P (XEXP (src2, 0)))\n \t{\n \t  rtx src2_reg = copy_addr_to_reg (XEXP (src2, 0));\n \t  src2 = replace_equiv_address (src2, src2_reg);\n \t}\n-      set_mem_size (src2, cmp_bytes);\n+      set_mem_size (src2, load_mode_size);\n \n       do_load_for_compare (tmp_reg_src1, src1, load_mode);\n       do_load_for_compare (tmp_reg_src2, src2, load_mode);\n@@ -1096,14 +1096,14 @@ expand_strn_compare (rtx operands[], int no_length)\n \t  rtx src1_reg = copy_addr_to_reg (XEXP (src1, 0));\n \t  src1 = replace_equiv_address (src1, src1_reg);\n \t}\n-      set_mem_size (src1, cmp_bytes);\n+      set_mem_size (src1, load_mode_size);\n \n       if (!REG_P (XEXP (src2, 0)))\n \t{\n \t  rtx src2_reg = copy_addr_to_reg (XEXP (src2, 0));\n \t  src2 = replace_equiv_address (src2, src2_reg);\n \t}\n-      set_mem_size (src2, cmp_bytes);\n+      set_mem_size (src2, load_mode_size);\n \n       /* Construct call to strcmp/strncmp to compare the rest of the string.  */\n       if (no_length)"}, {"sha": "aa8cc85d8b6bd02175dd90682c98c2a3ca8af201", "filename": "gcc/testsuite/gcc.dg/pr82190.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708eab9b5bfdb5be44253dbac5f58cea5c652c55/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82190.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708eab9b5bfdb5be44253dbac5f58cea5c652c55/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82190.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82190.c?ref=708eab9b5bfdb5be44253dbac5f58cea5c652c55", "patch": "@@ -0,0 +1,22 @@\n+/* PR target/82190 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-optimize-strlen -fweb\" } */\n+\n+char src[64] __attribute__ ((aligned)) = \"aaaaaaa\";\n+char dst[64] __attribute__ ((aligned));\n+\n+int\n+main ()\n+{\n+  __builtin_memcpy (dst, src, 6);\n+  if (__builtin_memcmp (dst, src, 6))\n+    __builtin_abort ();\n+\n+  __builtin_memcpy (dst, src, 7);\n+  if (__builtin_memcmp (dst, src, 7))\n+    __builtin_abort ();\n+\n+  return 0;\n+}\n+\n+"}]}