{"sha": "418df9d79aedfe4ab88febd6ce0df43dfc74828e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE4ZGY5ZDc5YWVkZmU0YWI4OGZlYmQ2Y2UwZGY0M2RmYzc0ODI4ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-02-17T23:21:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-02-17T23:21:23Z"}, "message": "re PR tree-optimization/36922 (ICE in tree-data-ref.c with -ftree-loop-linear)\n\n\tPR tree-optimization/36922\n\t* tree-data-ref.c (initialize_matrix_A): Handle BIT_NOT_EXPR.\n\t* tree-scalar-evolution.c (interpret_rhs_expr, instantiate_scev_1):\n\tLikewise.\n\n\t* gfortran.dg/pr36922.f: New test.\n\nFrom-SVN: r144250", "tree": {"sha": "99d57e94e1f1d6770502eaeebe10cc9b46a906ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99d57e94e1f1d6770502eaeebe10cc9b46a906ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/418df9d79aedfe4ab88febd6ce0df43dfc74828e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/418df9d79aedfe4ab88febd6ce0df43dfc74828e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/418df9d79aedfe4ab88febd6ce0df43dfc74828e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/418df9d79aedfe4ab88febd6ce0df43dfc74828e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "082d2ebb8481f4a0399f7e6f2fcacf67d4927993", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/082d2ebb8481f4a0399f7e6f2fcacf67d4927993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/082d2ebb8481f4a0399f7e6f2fcacf67d4927993"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "551619115b652fd5cdc1cc55d7f6aaf2488dac0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/418df9d79aedfe4ab88febd6ce0df43dfc74828e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/418df9d79aedfe4ab88febd6ce0df43dfc74828e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=418df9d79aedfe4ab88febd6ce0df43dfc74828e", "patch": "@@ -1,3 +1,10 @@\n+2009-02-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/36922\n+\t* tree-data-ref.c (initialize_matrix_A): Handle BIT_NOT_EXPR.\n+\t* tree-scalar-evolution.c (interpret_rhs_expr, instantiate_scev_1):\n+\tLikewise.\n+\n 2009-02-17  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips.c (mips_override_options): Set flag_dwarf2_cfi_asm"}, {"sha": "3cbc3e79229034325e12b10f7626bedd4fb6e61c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/418df9d79aedfe4ab88febd6ce0df43dfc74828e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/418df9d79aedfe4ab88febd6ce0df43dfc74828e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=418df9d79aedfe4ab88febd6ce0df43dfc74828e", "patch": "@@ -1,3 +1,8 @@\n+2009-02-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/36922\n+\t* gfortran.dg/pr36922.f: New test.\n+\n 2009-02-17  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/39202"}, {"sha": "6aa95beb6968ce91c616b492ba19818a35a26fe5", "filename": "gcc/testsuite/gfortran.dg/pr36922.f", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/418df9d79aedfe4ab88febd6ce0df43dfc74828e/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr36922.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/418df9d79aedfe4ab88febd6ce0df43dfc74828e/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr36922.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr36922.f?ref=418df9d79aedfe4ab88febd6ce0df43dfc74828e", "patch": "@@ -0,0 +1,16 @@\n+C PR tree-optimization/36922\n+C { dg-do compile }\n+C { dg-options \"-O2 -ftree-loop-linear\" }\n+      SUBROUTINE PR36922(N,F,Z,C)\n+      IMPLICIT DOUBLE PRECISION(A-H,O-Z)\n+      DIMENSION C(23821),Z(0:2*N+1),F(0:2*N)\n+      I=0\n+      DO L=0,N\n+        DO M=0,L\n+          DO M2=M,L\n+            I=I+1\n+            C(I)=F(L+M)*F(L-M)*Z(L-M2)/(F(M2+M)*F(M2-M)*F(L-M2)*F(L-M2))\n+          ENDDO\n+        ENDDO\n+      ENDDO\n+      END"}, {"sha": "9a72bc348b80cd88c7f92fd9eedb397f3e2a3a15", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/418df9d79aedfe4ab88febd6ce0df43dfc74828e/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/418df9d79aedfe4ab88febd6ce0df43dfc74828e/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=418df9d79aedfe4ab88febd6ce0df43dfc74828e", "patch": "@@ -1896,6 +1896,14 @@ initialize_matrix_A (lambda_matrix A, tree chrec, unsigned index, int mult)\n \treturn chrec_convert (chrec_type (chrec), op, NULL);\n       }\n \n+    case BIT_NOT_EXPR:\n+      {\n+\t/* Handle ~X as -1 - X.  */\n+\ttree op = initialize_matrix_A (A, TREE_OPERAND (chrec, 0), index, mult);\n+\treturn chrec_fold_op (MINUS_EXPR, chrec_type (chrec),\n+\t\t\t      build_int_cst (TREE_TYPE (chrec), -1), op);\n+      }\n+\n     case INTEGER_CST:\n       return chrec;\n "}, {"sha": "ba15d52c68d7c56d9ed070c1ba875297262d0dc8", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/418df9d79aedfe4ab88febd6ce0df43dfc74828e/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/418df9d79aedfe4ab88febd6ce0df43dfc74828e/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=418df9d79aedfe4ab88febd6ce0df43dfc74828e", "patch": "@@ -1712,6 +1712,15 @@ interpret_rhs_expr (struct loop *loop, gimple at_stmt,\n \t\t\t\t fold_convert (type, integer_minus_one_node));\n       break;\n \n+    case BIT_NOT_EXPR:\n+      /* Handle ~X as -1 - X.  */\n+      chrec1 = analyze_scalar_evolution (loop, rhs1);\n+      chrec1 = chrec_convert (type, chrec1, at_stmt);\n+      res = chrec_fold_minus (type,\n+\t\t\t      fold_convert (type, integer_minus_one_node),\n+\t\t\t      chrec1);\n+      break;\n+\n     case MULT_EXPR:\n       chrec1 = analyze_scalar_evolution (loop, rhs1);\n       chrec2 = analyze_scalar_evolution (loop, rhs2);\n@@ -2215,6 +2224,24 @@ instantiate_scev_1 (basic_block instantiate_below,\n \n       return chrec_convert (TREE_TYPE (chrec), op0, NULL);\n \n+    case BIT_NOT_EXPR:\n+      /* Handle ~X as -1 - X.  */\n+      op0 = instantiate_scev_1 (instantiate_below, evolution_loop,\n+\t\t\t\tTREE_OPERAND (chrec, 0),\n+\t\t\t\tfold_conversions, cache, size_expr);\n+      if (op0 == chrec_dont_know)\n+\treturn chrec_dont_know;\n+\n+      if (TREE_OPERAND (chrec, 0) != op0)\n+\t{\n+\t  op0 = chrec_convert (type, op0, NULL);\n+\t  chrec = chrec_fold_minus (type,\n+\t\t\t\t    fold_convert (type,\n+\t\t\t\t\t\t  integer_minus_one_node),\n+\t\t\t\t    op0);\n+\t}\n+      return chrec;\n+\n     case SCEV_NOT_KNOWN:\n       return chrec_dont_know;\n "}]}