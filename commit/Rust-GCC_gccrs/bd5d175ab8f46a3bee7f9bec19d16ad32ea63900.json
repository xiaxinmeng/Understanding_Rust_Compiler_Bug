{"sha": "bd5d175ab8f46a3bee7f9bec19d16ad32ea63900", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ1ZDE3NWFiOGY0NmEzYmVlN2Y5YmVjMTlkMTZhZDMyZWE2MzkwMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-08-25T23:38:10Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-08-25T23:38:10Z"}, "message": "expmed.c (store_bit_field): Do not use bitfield instructions for STRICT_ALIGNMENT machines if...\n\n\t* expmed.c (store_bit_field): Do not use bitfield instructions for\n\tSTRICT_ALIGNMENT machines if the MEM's alignment isn't as big as\n\tthe MEM's mode.\n\nFrom-SVN: r5213", "tree": {"sha": "dadcaacb464e7c2b2e9552e80afa7b66c6953d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dadcaacb464e7c2b2e9552e80afa7b66c6953d58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd5d175ab8f46a3bee7f9bec19d16ad32ea63900", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5d175ab8f46a3bee7f9bec19d16ad32ea63900", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd5d175ab8f46a3bee7f9bec19d16ad32ea63900", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5d175ab8f46a3bee7f9bec19d16ad32ea63900/comments", "author": null, "committer": null, "parents": [{"sha": "673596d8b201cf7657a681a3968913baa023db7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/673596d8b201cf7657a681a3968913baa023db7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/673596d8b201cf7657a681a3968913baa023db7b"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "c8e2f22618ad2c8adbc87a453412cf1c3d8dbed5", "filename": "gcc/expmed.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5d175ab8f46a3bee7f9bec19d16ad32ea63900/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5d175ab8f46a3bee7f9bec19d16ad32ea63900/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=bd5d175ab8f46a3bee7f9bec19d16ad32ea63900", "patch": "@@ -389,7 +389,8 @@ store_bit_field (str_rtx, bitsize, bitnum, fieldmode, value, align, total_size)\n \t  else\n \t    bestmode = GET_MODE (op0);\n \n-\t  if (bestmode == VOIDmode)\n+\t  if (bestmode == VOIDmode\n+\t      || (STRICT_ALIGNMENT && GET_MODE_SIZE (bestmode) > align))\n \t    goto insv_loses;\n \n \t  /* Adjust address to point to the containing unit of that mode.  */\n@@ -959,7 +960,8 @@ extract_bit_field (str_rtx, bitsize, bitnum, unsignedp,\n \t\t  else\n \t\t    bestmode = GET_MODE (xop0);\n \n-\t\t  if (bestmode == VOIDmode)\n+\t\t  if (bestmode == VOIDmode\n+\t\t      || (STRICT_ALIGNMENT && GET_MODE_SIZE (bestmode) > align))\n \t\t    goto extzv_loses;\n \n \t\t  /* Compute offset as multiple of this unit,\n@@ -1092,7 +1094,8 @@ extract_bit_field (str_rtx, bitsize, bitnum, unsignedp,\n \t\t  else\n \t\t    bestmode = GET_MODE (xop0);\n \n-\t\t  if (bestmode == VOIDmode)\n+\t\t  if (bestmode == VOIDmode\n+\t\t      || (STRICT_ALIGNMENT && GET_MODE_SIZE (bestmode) > align))\n \t\t    goto extv_loses;\n \n \t\t  /* Compute offset as multiple of this unit,"}]}