{"sha": "c1736aea437d36ba1b5fde344d30a2522f1d438c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE3MzZhZWE0MzdkMzZiYTFiNWZkZTM0NGQzMGEyNTIyZjFkNDM4Yw==", "commit": {"author": {"name": "Teresa Johnson", "email": "tejohnson@google.com", "date": "2012-09-13T04:59:14Z"}, "committer": {"name": "Teresa Johnson", "email": "tejohnson@gcc.gnu.org", "date": "2012-09-13T04:59:14Z"}, "message": "This fixes PR gcov-profile/54487 where the gcda files were not locked by the profile-use read...\n\nThis fixes PR gcov-profile/54487 where the gcda files were not locked\nby the profile-use read, enabling writes by other instrumented compiles\nto change the profile in the middle of the profile use read. The GCOV_LOCKED\nmacro was not set because it was guarded by HOST_HAS_F_SETLKW, which was\nnever set. The fix is to add a compile test in the configure to set it.\n\n2012-09-12  Teresa Johnson  <tejohnson@google.com>\n\n\tPR gcov-profile/54487\n\t* configure.ac (HOST_HAS_F_SETLKW): Set based on compile\n\ttest using F_SETLKW with fcntl.\n\t* configure, config.in: Regenerate.\n\nFrom-SVN: r191238", "tree": {"sha": "82ac9f479b6edc66be72e9fef90299de5bc73430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82ac9f479b6edc66be72e9fef90299de5bc73430"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1736aea437d36ba1b5fde344d30a2522f1d438c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1736aea437d36ba1b5fde344d30a2522f1d438c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1736aea437d36ba1b5fde344d30a2522f1d438c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1736aea437d36ba1b5fde344d30a2522f1d438c/comments", "author": {"login": "teresajohnson", "id": 20446403, "node_id": "MDQ6VXNlcjIwNDQ2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/20446403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teresajohnson", "html_url": "https://github.com/teresajohnson", "followers_url": "https://api.github.com/users/teresajohnson/followers", "following_url": "https://api.github.com/users/teresajohnson/following{/other_user}", "gists_url": "https://api.github.com/users/teresajohnson/gists{/gist_id}", "starred_url": "https://api.github.com/users/teresajohnson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teresajohnson/subscriptions", "organizations_url": "https://api.github.com/users/teresajohnson/orgs", "repos_url": "https://api.github.com/users/teresajohnson/repos", "events_url": "https://api.github.com/users/teresajohnson/events{/privacy}", "received_events_url": "https://api.github.com/users/teresajohnson/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8dec297cde150e616a4271302b0c22570609904c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dec297cde150e616a4271302b0c22570609904c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dec297cde150e616a4271302b0c22570609904c"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "860c81bc613aeb7fbdddfad3be9664457e5e9302", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1736aea437d36ba1b5fde344d30a2522f1d438c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1736aea437d36ba1b5fde344d30a2522f1d438c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1736aea437d36ba1b5fde344d30a2522f1d438c", "patch": "@@ -1,3 +1,10 @@\n+2012-09-12  Teresa Johnson  <tejohnson@google.com>\n+\n+\tPR gcov-profile/54487\n+\t* configure.ac (HOST_HAS_F_SETLKW): Set based on compile\n+\ttest using F_SETLKW with fcntl.\n+\t* configure, config.in: Regenerate.\n+\n 2012-09-12  Jan Hubicka  <jh@suse.cz>\n \n \tPR fortran/48636"}, {"sha": "b13805d98ce9efdd14ec721cf051aea2e7dfc859", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1736aea437d36ba1b5fde344d30a2522f1d438c/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1736aea437d36ba1b5fde344d30a2522f1d438c/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=c1736aea437d36ba1b5fde344d30a2522f1d438c", "patch": "@@ -1600,6 +1600,12 @@\n #endif\n \n \n+/* Define if F_SETLKW supported by fcntl. */\n+#ifndef USED_FOR_TARGET\n+#undef HOST_HAS_F_SETLKW\n+#endif\n+\n+\n /* Define as const if the declaration of iconv() needs const. */\n #ifndef USED_FOR_TARGET\n #undef ICONV_CONST"}, {"sha": "86fa82543e0a34bb68ec62ac5be5d5f094f7c124", "filename": "gcc/configure", "status": "modified", "additions": 42, "deletions": 2, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1736aea437d36ba1b5fde344d30a2522f1d438c/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1736aea437d36ba1b5fde344d30a2522f1d438c/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=c1736aea437d36ba1b5fde344d30a2522f1d438c", "patch": "@@ -10731,6 +10731,46 @@ $as_echo \"#define HAVE_CLOCK_T 1\" >>confdefs.h\n \n fi\n \n+# Check if F_SETLKW is supported by fcntl.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for F_SETLKW\" >&5\n+$as_echo_n \"checking for F_SETLKW... \" >&6; }\n+if test \"${ac_cv_f_setlkw+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <fcntl.h>\n+int\n+main ()\n+{\n+\n+struct flock fl;\n+fl.l_whence = 0;\n+fl.l_start = 0;\n+fl.l_len = 0;\n+fl.l_pid = 0;\n+return fcntl (1, F_SETLKW, &fl);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_f_setlkw=yes\n+else\n+  ac_cv_f_setlkw=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_f_setlkw\" >&5\n+$as_echo \"$ac_cv_f_setlkw\" >&6; }\n+if test $ac_cv_f_setlkw = yes; then\n+\n+$as_echo \"#define HOST_HAS_F_SETLKW 1\" >>confdefs.h\n+\n+fi\n+\n # Restore CFLAGS, CXXFLAGS from before the gcc_AC_NEED_DECLARATIONS tests.\n CFLAGS=\"$saved_CFLAGS\"\n CXXFLAGS=\"$saved_CXXFLAGS\"\n@@ -17742,7 +17782,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17745 \"configure\"\n+#line 17785 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17848,7 +17888,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17851 \"configure\"\n+#line 17891 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "9f200c7a9912be6169aa6949c2814aee3f085201", "filename": "gcc/configure.ac", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1736aea437d36ba1b5fde344d30a2522f1d438c/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1736aea437d36ba1b5fde344d30a2522f1d438c/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=c1736aea437d36ba1b5fde344d30a2522f1d438c", "patch": "@@ -1159,6 +1159,22 @@ if test $gcc_cv_type_clock_t = yes; then\n   [Define if <time.h> defines clock_t.])\n fi\n \n+# Check if F_SETLKW is supported by fcntl.\n+AC_CACHE_CHECK(for F_SETLKW, ac_cv_f_setlkw, [\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+#include <fcntl.h>]], [[\n+struct flock fl;\n+fl.l_whence = 0;\n+fl.l_start = 0;\n+fl.l_len = 0;\n+fl.l_pid = 0;\n+return fcntl (1, F_SETLKW, &fl);]])],\n+[ac_cv_f_setlkw=yes],[ac_cv_f_setlkw=no])])\n+if test $ac_cv_f_setlkw = yes; then\n+  AC_DEFINE(HOST_HAS_F_SETLKW, 1,\n+  [Define if F_SETLKW supported by fcntl.])\n+fi\n+\n # Restore CFLAGS, CXXFLAGS from before the gcc_AC_NEED_DECLARATIONS tests.\n CFLAGS=\"$saved_CFLAGS\"\n CXXFLAGS=\"$saved_CXXFLAGS\""}]}