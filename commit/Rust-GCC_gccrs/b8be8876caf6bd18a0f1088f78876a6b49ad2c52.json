{"sha": "b8be8876caf6bd18a0f1088f78876a6b49ad2c52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhiZTg4NzZjYWY2YmQxOGEwZjEwODhmNzg4NzZhNmI0OWFkMmM1Mg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-24T17:53:14Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-24T17:53:14Z"}, "message": "pa.md (sh[123\\add): Collapse into a single pattern.\n\n\t* pa.md (sh[123\\add): Collapse into a single pattern.\n\t(sh[123]add for reload): Likewise.\n\t* pa.c (shadd_operand): New function.\n\t(print_operand): Handle \"%O\" for shadd patterns.\n\nFrom-SVN: r3866", "tree": {"sha": "48b7a72312c6e58f6af0eb8a87df7629a6b02668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48b7a72312c6e58f6af0eb8a87df7629a6b02668"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8be8876caf6bd18a0f1088f78876a6b49ad2c52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8be8876caf6bd18a0f1088f78876a6b49ad2c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8be8876caf6bd18a0f1088f78876a6b49ad2c52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8be8876caf6bd18a0f1088f78876a6b49ad2c52/comments", "author": null, "committer": null, "parents": [{"sha": "469adec3fbf61d1e28ae727859e3e047811f9c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/469adec3fbf61d1e28ae727859e3e047811f9c33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/469adec3fbf61d1e28ae727859e3e047811f9c33"}], "stats": {"total": 48, "additions": 5, "deletions": 43}, "files": [{"sha": "ed528b415804f87378802a9f3fe5df39f96b7d09", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 5, "deletions": 43, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8be8876caf6bd18a0f1088f78876a6b49ad2c52/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8be8876caf6bd18a0f1088f78876a6b49ad2c52/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=b8be8876caf6bd18a0f1088f78876a6b49ad2c52", "patch": "@@ -2336,61 +2336,23 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n-\t\t\t  (const_int 2))\n+\t\t\t  (match_operand:SI 3 \"shadd_operand\" \"\"))\n \t\t (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"\"\n-  \"sh1add %2,%1,%0\")\n+  \"sh%O3add %2,%1,%0\")\n \n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n-\t\t\t  (const_int 4))\n-\t\t (match_operand:SI 1 \"register_operand\" \"r\")))]\n-  \"\"\n-  \"sh2add %2,%1,%0\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n-\t\t\t  (const_int 8))\n-\t\t (match_operand:SI 1 \"register_operand\" \"r\")))]\n-  \"\"\n-  \"sh3add %2,%1,%0\")\n-\n-;; These variants of the above insns can occur if the first operand\n+;; This variant of the above insn can occur if the first operand\n ;; is the frame pointer.  This is a kludge, but there doesn't\n ;; seem to be a way around it.  Only recognize them while reloading.\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n \t(plus:SI (plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n-\t\t\t\t   (const_int 2))\n-\t\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n-\t\t (match_operand:SI 3 \"const_int_operand\" \"rJ\")))]\n-  \"reload_in_progress\"\n-  \"sh1add %2,%1,%0\\;add%I3 %3,%0,%0\"\n-  [(set_attr \"type\" \"multi\")\n-   (set_attr \"length\" \"2\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n-\t(plus:SI (plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n-\t\t\t\t   (const_int 4))\n-\t\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n-\t\t (match_operand:SI 3 \"const_int_operand\" \"rJ\")))]\n-  \"reload_in_progress\"\n-  \"sh2add %2,%1,%0\\;add%I3 %3,%0,%0\"\n-  [(set_attr \"type\" \"multi\")\n-   (set_attr \"length\" \"2\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n-\t(plus:SI (plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n-\t\t\t\t   (const_int 8))\n+\t\t\t\t   (match_operand:SI 4 \"shadd_operand\" \"\"))\n \t\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n \t\t (match_operand:SI 3 \"const_int_operand\" \"rJ\")))]\n   \"reload_in_progress\"\n-  \"sh3add %2,%1,%0\\;add%I3 %3,%0,%0\"\n+  \"sh%O4add %2,%1,%0\\;add%I3 %3,%0,%0\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"length\" \"2\")])\n "}]}