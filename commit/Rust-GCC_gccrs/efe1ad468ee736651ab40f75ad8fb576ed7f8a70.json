{"sha": "efe1ad468ee736651ab40f75ad8fb576ed7f8a70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZlMWFkNDY4ZWU3MzY2NTFhYjQwZjc1YWQ4ZmI1NzZlZDdmOGE3MA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-04-25T03:33:38Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-04-25T03:33:38Z"}, "message": "re PR c++/27292 (ICE on casts on bitfields)\n\n\tPR c++/27292\n\t* typeck.c (decay_conversion): Don't adjust bitfield types.\n\t(perform_integral_promotions): Treat bitfield enums as enums, not\n\tas short integer types.\n\t* tree.c (rvalue): Convert bitfields to their correct types.\n\tPR c++/27292\n\t* g++.dg/conversion/bitfield1.C: New test.\n\t* g++.dg/conversion/bitfield2.C: Likewise.\n\t* g++.dg/conversion/bitfield3.C: Likewise.\n\nFrom-SVN: r113240", "tree": {"sha": "9cb7bd0eab657259542747a3841de9e35c66cd77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cb7bd0eab657259542747a3841de9e35c66cd77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efe1ad468ee736651ab40f75ad8fb576ed7f8a70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe1ad468ee736651ab40f75ad8fb576ed7f8a70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe1ad468ee736651ab40f75ad8fb576ed7f8a70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/comments", "author": null, "committer": null, "parents": [{"sha": "9c9bd27b0b17a012e7db07af76c48144c28d6ddc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c9bd27b0b17a012e7db07af76c48144c28d6ddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c9bd27b0b17a012e7db07af76c48144c28d6ddc"}], "stats": {"total": 74, "additions": 67, "deletions": 7}, "files": [{"sha": "494bdef22c6bc33597f03e0d050adc8c83adf681", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=efe1ad468ee736651ab40f75ad8fb576ed7f8a70", "patch": "@@ -1,3 +1,11 @@\n+2006-04-24  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/27292\n+\t* typeck.c (decay_conversion): Don't adjust bitfield types.\n+\t(perform_integral_promotions): Treat bitfield enums as enums, not\n+\tas short integer types.\n+\t* tree.c (rvalue): Convert bitfields to their correct types.\n+\n 2006-04-24  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/19963"}, {"sha": "a956205a13603c407b176889cb5cc0fc0f7fdff0", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=efe1ad468ee736651ab40f75ad8fb576ed7f8a70", "patch": "@@ -371,7 +371,9 @@ rvalue (tree expr)\n   tree type;\n   if (real_lvalue_p (expr))\n     {\n-      type = TREE_TYPE (expr);\n+      type = is_bitfield_expr_with_lowered_type (expr);\n+      if (!type)\n+\ttype = TREE_TYPE (expr);\n       /* [basic.lval]\n \t \n          Non-class rvalues always have cv-unqualified types.  */"}, {"sha": "394a4ec0575f1d154f8ee7b440a747588ac27fab", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=efe1ad468ee736651ab40f75ad8fb576ed7f8a70", "patch": "@@ -1435,7 +1435,6 @@ tree\n decay_conversion (tree exp)\n {\n   tree type;\n-  tree bitfield_type;\n   enum tree_code code;\n \n   type = TREE_TYPE (exp);\n@@ -1448,10 +1447,6 @@ decay_conversion (tree exp)\n       return error_mark_node;\n     }\n \n-  bitfield_type = is_bitfield_expr_with_lowered_type (exp);\n-  if (bitfield_type) \n-    exp = build_nop (bitfield_type, exp);\n-\n   exp = decl_constant_value (exp);\n \n   /* build_c_cast puts on a NOP_EXPR to make the result not an lvalue.\n@@ -1533,7 +1528,13 @@ perform_integral_promotions (tree expr)\n   tree type;\n   tree promoted_type;\n \n-  type = TREE_TYPE (expr);\n+  /* [conv.prom]\n+\n+     If the bitfield has an enumerated type, it is treated as any\n+     other value of that type for promotion purposes.  */\n+  type = is_bitfield_expr_with_lowered_type (expr);\n+  if (!type || TREE_CODE (type) != ENUMERAL_TYPE)\n+    type = TREE_TYPE (expr);\n   gcc_assert (INTEGRAL_OR_ENUMERATION_TYPE_P (type));\n   promoted_type = type_promotes_to (type);\n   if (type != promoted_type)"}, {"sha": "abad315a6c2119d8866d499221277b3af0cdf8dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=efe1ad468ee736651ab40f75ad8fb576ed7f8a70", "patch": "@@ -1,3 +1,10 @@\n+2006-04-24  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/27292\n+\t* g++.dg/conversion/bitfield1.C: New test.\n+\t* g++.dg/conversion/bitfield2.C: Likewise.\n+\t* g++.dg/conversion/bitfield3.C: Likewise.\n+\n 2006-04-24  Andrew Pinski  <pinskia@gcc.gnu.org>\n \tRichard Guenther  <rguenther@suse.de>\n "}, {"sha": "a660e79503d714962816af54f9336a29829d49ea", "filename": "gcc/testsuite/g++.dg/conversion/bitfield1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fbitfield1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fbitfield1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fbitfield1.C?ref=efe1ad468ee736651ab40f75ad8fb576ed7f8a70", "patch": "@@ -0,0 +1,17 @@\n+// { dg-do run }\n+// { dg-options \"-w\" }\n+\n+enum E { a, b = 1LL << 48 };\n+ \n+struct S {\n+  E e : 3;\n+};\n+\n+S s;\n+\n+int main () {\n+  if (sizeof (E) != sizeof (long long))\n+    return 1;\n+  if (sizeof (s.e + 3) != sizeof (long long))\n+    return 2;\n+}"}, {"sha": "aa60d3505783f2934c4b2de51a5d866a652928ba", "filename": "gcc/testsuite/g++.dg/conversion/bitfield2.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fbitfield2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fbitfield2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fbitfield2.C?ref=efe1ad468ee736651ab40f75ad8fb576ed7f8a70", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/27292\n+\n+struct A\n+{\n+  int i : 8;\n+};\n+\n+bool foo(A a)\n+{\n+  return int(a.i);\n+}"}, {"sha": "a897bf59e5d0a2f5f34e5aaccf4241f94e4fc33a", "filename": "gcc/testsuite/g++.dg/conversion/bitfield3.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fbitfield3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe1ad468ee736651ab40f75ad8fb576ed7f8a70/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fbitfield3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fbitfield3.C?ref=efe1ad468ee736651ab40f75ad8fb576ed7f8a70", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/16376\n+// { dg-do run }\n+\n+int main(void){\n+  struct bits {\n+    unsigned int ui3 : 3;\n+  } bits;\n+  int i = -1;   /* is a very large positive number as unsigned */\n+\n+  bits.ui3 = 1u;\n+  if( bits.ui3 < i )\n+    return 1;\n+  return 0;\n+}"}]}