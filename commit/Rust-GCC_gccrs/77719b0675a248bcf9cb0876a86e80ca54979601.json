{"sha": "77719b0675a248bcf9cb0876a86e80ca54979601", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc3MTliMDY3NWEyNDhiY2Y5Y2IwODc2YTg2ZTgwY2E1NDk3OTYwMQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-01-13T12:56:54Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-01-13T12:56:54Z"}, "message": "Reload global options when strict aliasing is dropped (PR ipa/79043).\n\n2017-01-13  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/79043\n\t* function.c (set_cfun): Add new argument force.\n\t* function.h (set_cfun): Likewise.\n\t* ipa-inline-transform.c (inline_call): Use the function when\n\tstrict alising from is dropped for function we inline to.\n2017-01-13  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/79043\n\t* gcc.c-torture/execute/pr79043.c: New test.\n\nFrom-SVN: r244435", "tree": {"sha": "ee2c1eda6fcc5175948e6466e036b6bf04e1ee12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee2c1eda6fcc5175948e6466e036b6bf04e1ee12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77719b0675a248bcf9cb0876a86e80ca54979601", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77719b0675a248bcf9cb0876a86e80ca54979601", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77719b0675a248bcf9cb0876a86e80ca54979601", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77719b0675a248bcf9cb0876a86e80ca54979601/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1c95bb595d159b769409063df40414b9c830009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c95bb595d159b769409063df40414b9c830009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c95bb595d159b769409063df40414b9c830009"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "f14a2c1a81bdd3606e3519017189886ed011ce98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77719b0675a248bcf9cb0876a86e80ca54979601/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77719b0675a248bcf9cb0876a86e80ca54979601/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77719b0675a248bcf9cb0876a86e80ca54979601", "patch": "@@ -1,3 +1,11 @@\n+2017-01-13  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/79043\n+\t* function.c (set_cfun): Add new argument force.\n+\t* function.h (set_cfun): Likewise.\n+\t* ipa-inline-transform.c (inline_call): Use the function when\n+\tstrict alising from is dropped for function we inline to.\n+\n 2017-01-13  Richard Biener  <rguenther@suse.de>\n \n \t* tree-pretty-print.c (dump_generic_node): Fix inverted condition"}, {"sha": "f625489205be3f31c17b39e102dd94d6a29cda59", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77719b0675a248bcf9cb0876a86e80ca54979601/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77719b0675a248bcf9cb0876a86e80ca54979601/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=77719b0675a248bcf9cb0876a86e80ca54979601", "patch": "@@ -4811,9 +4811,9 @@ invoke_set_current_function_hook (tree fndecl)\n /* cfun should never be set directly; use this function.  */\n \n void\n-set_cfun (struct function *new_cfun)\n+set_cfun (struct function *new_cfun, bool force)\n {\n-  if (cfun != new_cfun)\n+  if (cfun != new_cfun || force)\n     {\n       cfun = new_cfun;\n       invoke_set_current_function_hook (new_cfun ? new_cfun->decl : NULL_TREE);"}, {"sha": "fb8f57ae3854226b6b537ae500b130685b76c1c0", "filename": "gcc/function.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77719b0675a248bcf9cb0876a86e80ca54979601/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77719b0675a248bcf9cb0876a86e80ca54979601/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=77719b0675a248bcf9cb0876a86e80ca54979601", "patch": "@@ -613,7 +613,7 @@ extern tree block_chainon (tree, tree);\n extern void number_blocks (tree);\n \n /* cfun shouldn't be set directly; use one of these functions instead.  */\n-extern void set_cfun (struct function *new_cfun);\n+extern void set_cfun (struct function *new_cfun, bool force = false);\n extern void push_cfun (struct function *new_cfun);\n extern void pop_cfun (void);\n "}, {"sha": "a8e73cd6967f6488db3535998130bcdd603c196f", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77719b0675a248bcf9cb0876a86e80ca54979601/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77719b0675a248bcf9cb0876a86e80ca54979601/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=77719b0675a248bcf9cb0876a86e80ca54979601", "patch": "@@ -340,6 +340,8 @@ inline_call (struct cgraph_edge *e, bool update_original,\n   if (DECL_FUNCTION_PERSONALITY (callee->decl))\n     DECL_FUNCTION_PERSONALITY (to->decl)\n       = DECL_FUNCTION_PERSONALITY (callee->decl);\n+\n+  bool reload_optimization_node = false;\n   if (!opt_for_fn (callee->decl, flag_strict_aliasing)\n       && opt_for_fn (to->decl, flag_strict_aliasing))\n     {\n@@ -352,6 +354,7 @@ inline_call (struct cgraph_edge *e, bool update_original,\n \t\t to->name (), to->order);\n       DECL_FUNCTION_SPECIFIC_OPTIMIZATION (to->decl)\n \t = build_optimization_node (&opts);\n+      reload_optimization_node = true;\n     }\n \n   inline_summary *caller_info = inline_summaries->get (to);\n@@ -412,9 +415,14 @@ inline_call (struct cgraph_edge *e, bool update_original,\n \t\t     callee->name (), callee->order, to->name (), to->order);\n \t  DECL_FUNCTION_SPECIFIC_OPTIMIZATION (to->decl)\n \t     = build_optimization_node (&opts);\n+\t  reload_optimization_node = true;\n \t}\n     }\n \n+  /* Reload global optimization flags.  */\n+  if (reload_optimization_node && DECL_STRUCT_FUNCTION (to->decl) == cfun)\n+    set_cfun (cfun, true);\n+\n   /* If aliases are involved, redirect edge to the actual destination and\n      possibly remove the aliases.  */\n   if (e->callee != callee)"}, {"sha": "33c5955009404b1131dd41b0d34405af083643f7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77719b0675a248bcf9cb0876a86e80ca54979601/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77719b0675a248bcf9cb0876a86e80ca54979601/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=77719b0675a248bcf9cb0876a86e80ca54979601", "patch": "@@ -1,3 +1,8 @@\n+2017-01-13  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/79043\n+\t* gcc.c-torture/execute/pr79043.c: New test.\n+\n 2017-01-13  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/78411"}, {"sha": "b7fcc8260dc30488c169f9b3c02c0b7fc01ceb3c", "filename": "gcc/testsuite/gcc.c-torture/execute/pr79043.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77719b0675a248bcf9cb0876a86e80ca54979601/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr79043.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77719b0675a248bcf9cb0876a86e80ca54979601/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr79043.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr79043.c?ref=77719b0675a248bcf9cb0876a86e80ca54979601", "patch": "@@ -0,0 +1,21 @@\n+/* PR ipa/78791 */\n+\n+int val;\n+\n+int *ptr = &val;\n+float *ptr2 = &val;\n+\n+static\n+__attribute__((always_inline, optimize (\"-fno-strict-aliasing\")))\n+typepun ()\n+{\n+  *ptr2=0;\n+}\n+\n+main()\n+{\n+  *ptr=1;\n+  typepun ();\n+  if (*ptr)\n+    __builtin_abort ();\n+}"}]}