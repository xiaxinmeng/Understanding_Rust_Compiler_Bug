{"sha": "1e2041330fd0997c734a1a8d48ebaadb2037cb32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUyMDQxMzMwZmQwOTk3YzczNGExYThkNDhlYmFhZGIyMDM3Y2IzMg==", "commit": {"author": {"name": "Rafael Avila de Espindola", "email": "espindola@google.com", "date": "2007-05-24T04:38:27Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2007-05-24T04:38:27Z"}, "message": "c-common.c (c_common_signed_or_unsigned_type): Delay the check for INTEGRAL_TYPE_P and TYPE_UNSIGNED.\n\n       * c-common.c (c_common_signed_or_unsigned_type): Delay the check for\n       INTEGRAL_TYPE_P and TYPE_UNSIGNED.\n       * langhooks.c (get_signed_or_unsigned_type): Don't check for\n       INTEGRAL_TYPE_P or TYPE_UNSIGNED.\n       (lhd_signed_or_unsigned_type): Check for INTEGRAL_TYPE_P and\n       TYPE_UNSIGNED.\n\nFrom-SVN: r125012", "tree": {"sha": "e16321ac90dcddb5bd7344617b086ff07f74195a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e16321ac90dcddb5bd7344617b086ff07f74195a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e2041330fd0997c734a1a8d48ebaadb2037cb32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2041330fd0997c734a1a8d48ebaadb2037cb32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e2041330fd0997c734a1a8d48ebaadb2037cb32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2041330fd0997c734a1a8d48ebaadb2037cb32/comments", "author": null, "committer": null, "parents": [{"sha": "b9061212faa98367a5a69d66074aeb0f6837d62c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9061212faa98367a5a69d66074aeb0f6837d62c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9061212faa98367a5a69d66074aeb0f6837d62c"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "6422382491a27f45ece1afc61e50ddb2c7a2d4b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2041330fd0997c734a1a8d48ebaadb2037cb32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2041330fd0997c734a1a8d48ebaadb2037cb32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e2041330fd0997c734a1a8d48ebaadb2037cb32", "patch": "@@ -1,3 +1,12 @@\n+2007-05-16  Rafael Avila de Espindola  <espindola@google.com>\n+\n+\t* c-common.c (c_common_signed_or_unsigned_type): Delay the check for\n+\tINTEGRAL_TYPE_P and TYPE_UNSIGNED.\n+\t* langhooks.c (get_signed_or_unsigned_type): Don't check for\n+\tINTEGRAL_TYPE_P or TYPE_UNSIGNED.\n+\t(lhd_signed_or_unsigned_type): Check for INTEGRAL_TYPE_P and\n+\tTYPE_UNSIGNED.\n+\n 2007-05-23  Sandra Loosemore  <sandra@codesourcery.com>\n \t    Nigel Stephens  <nigel@mips.com>\n \t    Richard Sandiford  <richard@codesourcery.com>"}, {"sha": "48dcd5ddd0ee2519c1a191722610ffe9a8148f8d", "filename": "gcc/c-common.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2041330fd0997c734a1a8d48ebaadb2037cb32/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2041330fd0997c734a1a8d48ebaadb2037cb32/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=1e2041330fd0997c734a1a8d48ebaadb2037cb32", "patch": "@@ -2076,9 +2076,6 @@ tree\n c_common_signed_or_unsigned_type (int unsignedp, tree type)\n {\n   tree type1;\n-  if (!INTEGRAL_TYPE_P (type)\n-      || TYPE_UNSIGNED (type) == unsignedp)\n-    return type;\n \n   /* This block of code emulates the behavior of the old\n      c_common_unsigned_type. In particular, it returns\n@@ -2121,6 +2118,10 @@ c_common_signed_or_unsigned_type (int unsignedp, tree type)\n      types, and producing a signed or unsigned variant of an\n      ENUMERAL_TYPE may cause other problems as well.  */\n \n+  if (!INTEGRAL_TYPE_P (type)\n+      || TYPE_UNSIGNED (type) == unsignedp)\n+    return type;\n+\n #define TYPE_OK(node)\t\t\t\t\t\t\t    \\\n   (TYPE_MODE (type) == TYPE_MODE (node)\t\t\t\t\t    \\\n    && (c_dialect_cxx () || TYPE_PRECISION (type) == TYPE_PRECISION (node)))"}, {"sha": "dc816ba37c50e6d23c640266e2a1101120160ce6", "filename": "gcc/langhooks.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2041330fd0997c734a1a8d48ebaadb2037cb32/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2041330fd0997c734a1a8d48ebaadb2037cb32/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=1e2041330fd0997c734a1a8d48ebaadb2037cb32", "patch": "@@ -579,9 +579,6 @@ lhd_builtin_function (tree decl)\n tree\n get_signed_or_unsigned_type (int unsignedp, tree type)\n {\n-  if (!INTEGRAL_TYPE_P (type) || TYPE_UNSIGNED (type) == unsignedp)\n-    return type;\n-\n   return lang_hooks.types.signed_or_unsigned_type(unsignedp, type);\n }\n \n@@ -590,5 +587,8 @@ get_signed_or_unsigned_type (int unsignedp, tree type)\n tree\n lhd_signed_or_unsigned_type (int unsignedp, tree type)\n {\n+  if (!INTEGRAL_TYPE_P (type) || TYPE_UNSIGNED (type) == unsignedp)\n+    return type;\n+\n   return lang_hooks.types.type_for_size (TYPE_PRECISION (type), unsignedp);\n }"}]}