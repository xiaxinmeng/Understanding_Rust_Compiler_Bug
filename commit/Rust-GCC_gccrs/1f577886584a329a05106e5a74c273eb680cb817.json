{"sha": "1f577886584a329a05106e5a74c273eb680cb817", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY1Nzc4ODY1ODRhMzI5YTA1MTA2ZTVhNzRjMjczZWI2ODBjYjgxNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-05-01T21:36:39Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-05-01T21:36:39Z"}, "message": "Makefile.am (GCJCOMPILE, [...]): Move -L option out of FLAGS.\n\n2000-04-28  Jakub Jelinek  <jakub@redhat.com>\n\n\t* Makefile.am (GCJCOMPILE, JCFLAGS, JF1CLAGS, jv_convert_LINK,\n\tgij_LINK, libgcj.zip, .java=.class): Move -L option out of FLAGS.\n\t(libgcj_la_LDFLAGS): Add -L../libstdc++ for in-gcc builds.\n\t(jv_convert_LDFLAGS, gij_LDFLAGS): Add `pwd`/../libstdc++ to\n\t-rpath for in-gcc builds.\n\t* Makefile.in: Rebuilt.\n\nFrom-SVN: r33587", "tree": {"sha": "fa53289679da9c79d7c0b651fa50f73afedbdf80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa53289679da9c79d7c0b651fa50f73afedbdf80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f577886584a329a05106e5a74c273eb680cb817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f577886584a329a05106e5a74c273eb680cb817", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f577886584a329a05106e5a74c273eb680cb817", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f577886584a329a05106e5a74c273eb680cb817/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91bffbe9d6060e79715ae15924af89d90f86be27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91bffbe9d6060e79715ae15924af89d90f86be27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91bffbe9d6060e79715ae15924af89d90f86be27"}], "stats": {"total": 49, "additions": 29, "deletions": 20}, "files": [{"sha": "3035ddabb8d5268dbfba517c5a59fec49bd30c5f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f577886584a329a05106e5a74c273eb680cb817/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f577886584a329a05106e5a74c273eb680cb817/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=1f577886584a329a05106e5a74c273eb680cb817", "patch": "@@ -1,3 +1,12 @@\n+2000-04-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Makefile.am (GCJCOMPILE, JCFLAGS, JF1CLAGS, jv_convert_LINK,\n+\tgij_LINK, libgcj.zip, .java=.class): Move -L option out of FLAGS.\n+\t(libgcj_la_LDFLAGS): Add -L../libstdc++ for in-gcc builds.\n+\t(jv_convert_LDFLAGS, gij_LDFLAGS): Add `pwd`/../libstdc++ to\n+\t-rpath for in-gcc builds.\n+\t* Makefile.in: Rebuilt.\n+\n 2000-04-28  Tom Tromey  <tromey@cygnus.com>\n \n \t* libgcj.spec.in (*jc1): Added -fasynchronous-exceptions."}, {"sha": "25bab2d747c729868f88d5515f45ada4d75c99fa", "filename": "libjava/Makefile.am", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f577886584a329a05106e5a74c273eb680cb817/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f577886584a329a05106e5a74c273eb680cb817/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=1f577886584a329a05106e5a74c273eb680cb817", "patch": "@@ -71,7 +71,7 @@ GCJH = $(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n ZIP = $(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n endif # CANADIAN\n \n-GCJCOMPILE = CLASSPATH=$(here) $(LIBTOOL) --mode=compile $(GCJ) -fassume-compiled $(JC1FLAGS) -c\n+GCJCOMPILE = CLASSPATH=$(here) $(LIBTOOL) --mode=compile $(GCJ) -fassume-compiled -L$(here) $(JC1FLAGS) -c\n \n JAVAC = $(GCJ) -C\n \n@@ -91,8 +91,8 @@ else\n AM_CFLAGS = @LIBGCJ_CFLAGS@\n endif\n \n-JCFLAGS = -g -L$(here)\n-JC1FLAGS = -g -L$(here) @LIBGCJ_JAVAFLAGS@\n+JCFLAGS = -g\n+JC1FLAGS = -g @LIBGCJ_JAVAFLAGS@\n \n LIBFFIINCS = -I$(top_srcdir)/../libffi/include -I$(MULTIBUILDTOP)../libffi/include\n \n@@ -128,7 +128,7 @@ libgcj_la_DEPENDENCIES = libgcj.zip $(javao_files) $(nat_files) \\\n \t$(c_files) $(GCOBJS) $(THREADOBJS) $(LIBLTDL)\n libgcj_la_LIBADD = $(javao_files) $(nat_files) $(c_files) $(GCOBJS) \\\n \t$(THREADOBJS) $(libffi_files) $(LIBLTDL)\n-libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n+libgcj_la_LDFLAGS = -L../libstdc++ -rpath $(toolexeclibdir) \\\n ## The mysterious backslash is consumed by make.\n \t-version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n \n@@ -154,7 +154,7 @@ $(built_java_source_files:.java=.class): $(built_java_source_files)\n ## This little nastiness is here so that the backquoted stuff in the\n ## GCJ definition can be correctly expanded, if required.\n \tjavac=\"$(JAVAC)\"; \\\n-\t$$javac $(JCFLAGS) -classpath $(here):`cd $(srcdir) && /bin/pwd` \\\n+\t$$javac -L$(here) $(JCFLAGS) -classpath $(here):`cd $(srcdir) && /bin/pwd` \\\n \t  -d $(here) $?\n \n ## We have the zip file depend on the java sources and not the class\n@@ -170,7 +170,7 @@ libgcj.zip: $(java_source_files) $(cond_awt_java_source_files)\n ## This little nastiness is here so that the backquoted stuff in the\n ## GCJ definition can be correctly expanded, if required.\n \tjavac=\"$(JAVAC)\"; cd $(srcdir); \\\n-\t  $$javac $(JCFLAGS) -classpath $(here):`/bin/pwd` -d $(here) \\\n+\t  $$javac -L$(here) $(JCFLAGS) -classpath $(here):`/bin/pwd` -d $(here) \\\n \t    $(subst $(srcdir)/,,$?)\n \t-@rm -f libgcj.zip\n ## Note that we explicitly want to include directory information.\n@@ -361,8 +361,8 @@ EXTRA_jv_convert_SOURCES = $(convert_source_files)\n ## need this because we are explicitly using libtool to link using the\n ## `.la' file.\n jv_convert_LDFLAGS = --main=gnu.gcj.convert.Convert \\\n-\t-rpath $(toolexeclibdir)\n-jv_convert_LINK = $(LIBTOOL) --mode=link $(GCJ) $(JC1FLAGS) $(LDFLAGS) \\\n+\t-rpath `if test -d ../libstdc++; then cd ../libstdc++; pwd; fi` -rpath $(toolexeclibdir)\n+jv_convert_LINK = $(LIBTOOL) --mode=link $(GCJ) -L$(here) $(JC1FLAGS) $(LDFLAGS) \\\n \t-o jv-convert\n ## We explicitly link in the libraries we need.  This way we don't\n ## need -nodefaultlibs, so we can still rely on gcj picking up the\n@@ -380,8 +380,8 @@ gij_SOURCES = gij.cc\n ## We need -nodefaultlibs because we want to avoid gcj's `-lgcj'.  We\n ## need this because we are explicitly using libtool to link using the\n ## `.la' file.\n-gij_LDFLAGS = -rpath $(toolexeclibdir)\n-gij_LINK = $(LIBTOOL) --mode=link $(GCJ) $(JC1FLAGS) $(LDFLAGS) \\\n+gij_LDFLAGS = -rpath `if test -d ../libstdc++; then cd ../libstdc++; pwd; fi` -rpath $(toolexeclibdir)\n+gij_LINK = $(LIBTOOL) --mode=link $(GCJ) -L$(here) $(JC1FLAGS) $(LDFLAGS) \\\n \t-o gij\n ## We explicitly link in the libraries we need.  This way we don't\n ## need -nodefaultlibs, so we can still rely on gcj picking up the"}, {"sha": "d5d05daa2dcee202d468b0f0da1e6314b87484cc", "filename": "libjava/Makefile.in", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f577886584a329a05106e5a74c273eb680cb817/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f577886584a329a05106e5a74c273eb680cb817/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=1f577886584a329a05106e5a74c273eb680cb817", "patch": "@@ -157,7 +157,7 @@ data_DATA = libgcj.zip\n @CANADIAN_FALSE@expanded = \\\n @CANADIAN_FALSE@`cd $(MULTIBUILDTOP)../$(COMPPATH)/gcc && pwd`\n \n-GCJCOMPILE = CLASSPATH=$(here) $(LIBTOOL) --mode=compile $(GCJ) -fassume-compiled $(JC1FLAGS) -c\n+GCJCOMPILE = CLASSPATH=$(here) $(LIBTOOL) --mode=compile $(GCJ) -fassume-compiled -L$(here) $(JC1FLAGS) -c\n \n JAVAC = $(GCJ) -C\n \n@@ -172,8 +172,8 @@ AM_CXXFLAGS = -fno-rtti -fvtable-thunks -fasynchronous-exceptions \\\n @USING_GCC_FALSE@AM_CFLAGS = \\\n @USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n \n-JCFLAGS = -g -L$(here)\n-JC1FLAGS = -g -L$(here) @LIBGCJ_JAVAFLAGS@\n+JCFLAGS = -g\n+JC1FLAGS = -g @LIBGCJ_JAVAFLAGS@\n \n LIBFFIINCS = -I$(top_srcdir)/../libffi/include -I$(MULTIBUILDTOP)../libffi/include\n \n@@ -204,7 +204,7 @@ libgcj_la_DEPENDENCIES = libgcj.zip $(javao_files) $(nat_files) \\\n libgcj_la_LIBADD = $(javao_files) $(nat_files) $(c_files) $(GCOBJS) \\\n \t$(THREADOBJS) $(libffi_files) $(LIBLTDL)\n \n-libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n+libgcj_la_LDFLAGS = -L../libstdc++ -rpath $(toolexeclibdir) \\\n \t-version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n \n \n@@ -240,9 +240,9 @@ CONVERT_DIR = gnu/gcj/convert\n jv_convert_SOURCES = \n EXTRA_jv_convert_SOURCES = $(convert_source_files)\n jv_convert_LDFLAGS = --main=gnu.gcj.convert.Convert \\\n-\t-rpath $(toolexeclibdir)\n+\t-rpath `if test -d ../libstdc++; then cd ../libstdc++; pwd; fi` -rpath $(toolexeclibdir)\n \n-jv_convert_LINK = $(LIBTOOL) --mode=link $(GCJ) $(JC1FLAGS) $(LDFLAGS) \\\n+jv_convert_LINK = $(LIBTOOL) --mode=link $(GCJ) -L$(here) $(JC1FLAGS) $(LDFLAGS) \\\n \t-o jv-convert\n \n jv_convert_LDADD = $(convert_source_files:.java=.lo) libgcj.la \\\n@@ -253,8 +253,8 @@ jv_convert_DEPENDENCIES = $(convert_source_files:.java=.lo) \\\n \n \n gij_SOURCES = gij.cc\n-gij_LDFLAGS = -rpath $(toolexeclibdir)\n-gij_LINK = $(LIBTOOL) --mode=link $(GCJ) $(JC1FLAGS) $(LDFLAGS) \\\n+gij_LDFLAGS = -rpath `if test -d ../libstdc++; then cd ../libstdc++; pwd; fi` -rpath $(toolexeclibdir)\n+gij_LINK = $(LIBTOOL) --mode=link $(GCJ) -L$(here) $(JC1FLAGS) $(LDFLAGS) \\\n \t-o gij\n \n gij_LDADD = libgcj.la $(GCLIBS) $(THREADLIBS) $(ZLIBS) -L$(here)/.libs\n@@ -1671,13 +1671,13 @@ $(awt_java_source_files:.java=.class): libgcj.zip\n \n $(built_java_source_files:.java=.class): $(built_java_source_files)\n \tjavac=\"$(JAVAC)\"; \\\n-\t$$javac $(JCFLAGS) -classpath $(here):`cd $(srcdir) && /bin/pwd` \\\n+\t$$javac -L$(here) $(JCFLAGS) -classpath $(here):`cd $(srcdir) && /bin/pwd` \\\n \t  -d $(here) $?\n \n libgcj.zip: $(java_source_files) $(cond_awt_java_source_files)\n \t$(MAKE) $(built_java_source_files:.java=.class)\n \tjavac=\"$(JAVAC)\"; cd $(srcdir); \\\n-\t  $$javac $(JCFLAGS) -classpath $(here):`/bin/pwd` -d $(here) \\\n+\t  $$javac -L$(here) $(JCFLAGS) -classpath $(here):`/bin/pwd` -d $(here) \\\n \t    $(subst $(srcdir)/,,$?)\n \t-@rm -f libgcj.zip\n \t$(ZIP) -r libgcj java gnu -n .class -i '*.class' -i '*/'"}]}