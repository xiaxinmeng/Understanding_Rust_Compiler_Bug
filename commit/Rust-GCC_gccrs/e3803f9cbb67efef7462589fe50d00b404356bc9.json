{"sha": "e3803f9cbb67efef7462589fe50d00b404356bc9", "node_id": "C_kwDOANBUbNoAKGUzODAzZjljYmI2N2VmZWY3NDYyNTg5ZmU1MGQwMGI0MDQzNTZiYzk", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-05-28T18:42:38Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-05-28T18:42:38Z"}, "message": "OpenMP/Fortran: Add support for enter clause on declare target\n\nFortran version to C/C++ commit r13-797-g0ccba4ed8571c18c7015413441e971\n\ngcc/fortran/ChangeLog:\n\n\t* dump-parse-tree.cc (show_omp_clauses): Handle OMP_LIST_ENTER.\n\t* gfortran.h: Add OMP_LIST_ENTER.\n\t* openmp.cc (enum omp_mask2, OMP_DECLARE_TARGET_CLAUSES): Add\n\tOMP_CLAUSE_ENTER.\n\t(gfc_match_omp_clauses, gfc_match_omp_declare_target,\n\tresolve_omp_clauses): Handle 'enter' clause.\n\nlibgomp/ChangeLog:\n\n\t* libgomp.texi (OpenMP 5.2): Mark 'enter' clause as supported.\n\t* testsuite/libgomp.fortran/declare-target-1.f90: Extend to test\n\texplicit 'to' and 'enter' clause.\n\t* testsuite/libgomp.fortran/declare-target-2.f90: Update accordingly.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/gomp/declare-target-2.f90: Add 'enter' clause test.\n\t* gfortran.dg/gomp/declare-target-4.f90: Likewise.", "tree": {"sha": "69177909510ec7a66615cf34b80c564c261e1a1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69177909510ec7a66615cf34b80c564c261e1a1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3803f9cbb67efef7462589fe50d00b404356bc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3803f9cbb67efef7462589fe50d00b404356bc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3803f9cbb67efef7462589fe50d00b404356bc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3803f9cbb67efef7462589fe50d00b404356bc9/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce1580252ea57de23a595e9804ea87ed4353aa6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce1580252ea57de23a595e9804ea87ed4353aa6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce1580252ea57de23a595e9804ea87ed4353aa6a"}], "stats": {"total": 110, "additions": 78, "deletions": 32}, "files": [{"sha": "e3affb8bc48c408ac15925c8e12d55830c98350b", "filename": "gcc/fortran/dump-parse-tree.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3803f9cbb67efef7462589fe50d00b404356bc9/gcc%2Ffortran%2Fdump-parse-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3803f9cbb67efef7462589fe50d00b404356bc9/gcc%2Ffortran%2Fdump-parse-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.cc?ref=e3803f9cbb67efef7462589fe50d00b404356bc9", "patch": "@@ -1679,6 +1679,7 @@ show_omp_clauses (gfc_omp_clauses *omp_clauses)\n \t  case OMP_LIST_IN_REDUCTION: type = \"IN_REDUCTION\"; break;\n \t  case OMP_LIST_TASK_REDUCTION: type = \"TASK_REDUCTION\"; break;\n \t  case OMP_LIST_DEVICE_RESIDENT: type = \"DEVICE_RESIDENT\"; break;\n+\t  case OMP_LIST_ENTER: type = \"ENTER\"; break;\n \t  case OMP_LIST_LINK: type = \"LINK\"; break;\n \t  case OMP_LIST_USE_DEVICE: type = \"USE_DEVICE\"; break;\n \t  case OMP_LIST_CACHE: type = \"CACHE\"; break;"}, {"sha": "0bac8657790849656be6664ca955969fcbf560d1", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3803f9cbb67efef7462589fe50d00b404356bc9/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3803f9cbb67efef7462589fe50d00b404356bc9/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=e3803f9cbb67efef7462589fe50d00b404356bc9", "patch": "@@ -1395,6 +1395,7 @@ enum\n   OMP_LIST_NONTEMPORAL,\n   OMP_LIST_ALLOCATE,\n   OMP_LIST_HAS_DEVICE_ADDR,\n+  OMP_LIST_ENTER,\n   OMP_LIST_NUM /* Must be the last.  */\n };\n "}, {"sha": "a1aa88c5d7447c95c74c9b14a755b1d3ad8fab3a", "filename": "gcc/fortran/openmp.cc", "status": "modified", "additions": 43, "deletions": 22, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3803f9cbb67efef7462589fe50d00b404356bc9/gcc%2Ffortran%2Fopenmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3803f9cbb67efef7462589fe50d00b404356bc9/gcc%2Ffortran%2Fopenmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.cc?ref=e3803f9cbb67efef7462589fe50d00b404356bc9", "patch": "@@ -986,6 +986,7 @@ enum omp_mask2\n   OMP_CLAUSE_ATTACH,\n   OMP_CLAUSE_NOHOST,\n   OMP_CLAUSE_HAS_DEVICE_ADDR,  /* OpenMP 5.1  */\n+  OMP_CLAUSE_ENTER, /* OpenMP 5.2 */\n   /* This must come last.  */\n   OMP_MASK2_LAST\n };\n@@ -2101,6 +2102,16 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t\tcontinue;\n \t    }\n \t  break;\n+\tcase 'e':\n+\t  if ((mask & OMP_CLAUSE_ENTER))\n+\t    {\n+\t      m = gfc_match_omp_to_link (\"enter (\", &c->lists[OMP_LIST_ENTER]);\n+\t      if (m == MATCH_ERROR)\n+\t\tgoto error;\n+\t      if (m == MATCH_YES)\n+\t\tcontinue;\n+\t    }\n+\t  break;\n \tcase 'f':\n \t  if ((mask & OMP_CLAUSE_FAIL)\n \t      && (m = gfc_match_dupl_check (c->fail == OMP_MEMORDER_UNSET,\n@@ -2921,8 +2932,12 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t    continue;\n \t  if ((mask & OMP_CLAUSE_TO) && (mask & OMP_CLAUSE_LINK))\n \t    {\n-\t      if (gfc_match_omp_to_link (\"to (\", &c->lists[OMP_LIST_TO])\n-\t\t  == MATCH_YES)\n+\t      /* Declare target: 'to' is an alias for 'enter';\n+\t\t 'to' is deprecated since 5.2.  */\n+\t      m = gfc_match_omp_to_link (\"to (\", &c->lists[OMP_LIST_TO]);\n+\t      if (m == MATCH_ERROR)\n+\t\tgoto error;\n+\t      if (m == MATCH_YES)\n \t\tcontinue;\n \t    }\n \t  else if ((mask & OMP_CLAUSE_TO)\n@@ -3724,7 +3739,8 @@ gfc_match_oacc_routine (void)\n #define OMP_ORDERED_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_THREADS) | OMP_CLAUSE_SIMD)\n #define OMP_DECLARE_TARGET_CLAUSES \\\n-  (omp_mask (OMP_CLAUSE_TO) | OMP_CLAUSE_LINK | OMP_CLAUSE_DEVICE_TYPE)\n+  (omp_mask (OMP_CLAUSE_ENTER) | OMP_CLAUSE_LINK | OMP_CLAUSE_DEVICE_TYPE \\\n+   | OMP_CLAUSE_TO)\n #define OMP_ATOMIC_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_ATOMIC) | OMP_CLAUSE_CAPTURE | OMP_CLAUSE_HINT\t\\\n    | OMP_CLAUSE_MEMORDER | OMP_CLAUSE_COMPARE | OMP_CLAUSE_FAIL \t\\\n@@ -4530,7 +4546,7 @@ gfc_match_omp_declare_target (void)\n     {\n       c = gfc_get_omp_clauses ();\n       gfc_current_locus = old_loc;\n-      m = gfc_match_omp_to_link (\" (\", &c->lists[OMP_LIST_TO]);\n+      m = gfc_match_omp_to_link (\" (\", &c->lists[OMP_LIST_ENTER]);\n       if (m != MATCH_YES)\n \tgoto syntax;\n       if (gfc_match_omp_eos () != MATCH_YES)\n@@ -4544,38 +4560,40 @@ gfc_match_omp_declare_target (void)\n \n   gfc_buffer_error (false);\n \n-  for (list = OMP_LIST_TO; list != OMP_LIST_NUM;\n-       list = (list == OMP_LIST_TO ? OMP_LIST_LINK : OMP_LIST_NUM))\n+  static const int to_enter_link_lists[]\n+    = { OMP_LIST_TO, OMP_LIST_ENTER, OMP_LIST_LINK };\n+  for (size_t listn = 0; listn < ARRAY_SIZE (to_enter_link_lists)\n+\t\t\t && (list = to_enter_link_lists[listn], true); ++listn)\n     for (n = c->lists[list]; n; n = n->next)\n       if (n->sym)\n \tn->sym->mark = 0;\n       else if (n->u.common->head)\n \tn->u.common->head->mark = 0;\n \n-  for (list = OMP_LIST_TO; list != OMP_LIST_NUM;\n-       list = (list == OMP_LIST_TO ? OMP_LIST_LINK : OMP_LIST_NUM))\n+  for (size_t listn = 0; listn < ARRAY_SIZE (to_enter_link_lists)\n+\t\t\t && (list = to_enter_link_lists[listn], true); ++listn)\n     for (n = c->lists[list]; n; n = n->next)\n       if (n->sym)\n \t{\n \t  if (n->sym->attr.in_common)\n \t    gfc_error_now (\"OMP DECLARE TARGET variable at %L is an \"\n \t\t\t   \"element of a COMMON block\", &n->where);\n+\t  else if (n->sym->mark)\n+\t    gfc_error_now (\"Variable at %L mentioned multiple times in \"\n+\t\t\t   \"clauses of the same OMP DECLARE TARGET directive\",\n+\t\t\t   &n->where);\n \t  else if (n->sym->attr.omp_declare_target\n \t\t   && n->sym->attr.omp_declare_target_link\n \t\t   && list != OMP_LIST_LINK)\n \t    gfc_error_now (\"OMP DECLARE TARGET variable at %L previously \"\n-\t\t\t   \"mentioned in LINK clause and later in TO clause\",\n-\t\t\t   &n->where);\n+\t\t\t   \"mentioned in LINK clause and later in %s clause\",\n+\t\t\t   &n->where, list == OMP_LIST_TO ? \"TO\" : \"ENTER\");\n \t  else if (n->sym->attr.omp_declare_target\n \t\t   && !n->sym->attr.omp_declare_target_link\n \t\t   && list == OMP_LIST_LINK)\n \t    gfc_error_now (\"OMP DECLARE TARGET variable at %L previously \"\n-\t\t\t   \"mentioned in TO clause and later in LINK clause\",\n-\t\t\t   &n->where);\n-\t  else if (n->sym->mark)\n-\t    gfc_error_now (\"Variable at %L mentioned multiple times in \"\n-\t\t\t   \"clauses of the same OMP DECLARE TARGET directive\",\n-\t\t\t   &n->where);\n+\t\t\t   \"mentioned in TO or ENTER clause and later in \"\n+\t\t\t   \"LINK clause\", &n->where);\n \t  else if (gfc_add_omp_declare_target (&n->sym->attr, n->sym->name,\n \t\t\t\t\t       &n->sym->declared_at))\n \t    {\n@@ -4598,14 +4616,14 @@ gfc_match_omp_declare_target (void)\n \t       && n->u.common->omp_declare_target_link\n \t       && list != OMP_LIST_LINK)\n \tgfc_error_now (\"OMP DECLARE TARGET COMMON at %L previously \"\n-\t\t       \"mentioned in LINK clause and later in TO clause\",\n-\t\t       &n->where);\n+\t\t       \"mentioned in LINK clause and later in %s clause\",\n+\t\t       &n->where, list == OMP_LIST_TO ? \"TO\" : \"ENTER\");\n       else if (n->u.common->omp_declare_target\n \t       && !n->u.common->omp_declare_target_link\n \t       && list == OMP_LIST_LINK)\n \tgfc_error_now (\"OMP DECLARE TARGET COMMON at %L previously \"\n-\t\t       \"mentioned in TO clause and later in LINK clause\",\n-\t\t       &n->where);\n+\t\t       \"mentioned in TO or ENTER clause and later in \"\n+\t\t       \"LINK clause\", &n->where);\n       else if (n->u.common->head && n->u.common->head->mark)\n \tgfc_error_now (\"COMMON at %L mentioned multiple times in \"\n \t\t       \"clauses of the same OMP DECLARE TARGET directive\",\n@@ -4639,7 +4657,10 @@ gfc_match_omp_declare_target (void)\n \t      s->attr.omp_device_type = c->device_type;\n \t    }\n \t}\n-  if (c->device_type && !c->lists[OMP_LIST_TO] && !c->lists[OMP_LIST_LINK])\n+  if (c->device_type\n+      && !c->lists[OMP_LIST_ENTER]\n+      && !c->lists[OMP_LIST_TO]\n+      && !c->lists[OMP_LIST_LINK])\n     gfc_warning_now (0, \"OMP DECLARE TARGET directive at %L with only \"\n \t\t\t\"DEVICE_TYPE clause is ignored\", &old_loc);\n \n@@ -6331,7 +6352,7 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t\"IN_REDUCTION\", \"TASK_REDUCTION\",\n \t\"DEVICE_RESIDENT\", \"LINK\", \"USE_DEVICE\",\n \t\"CACHE\", \"IS_DEVICE_PTR\", \"USE_DEVICE_PTR\", \"USE_DEVICE_ADDR\",\n-\t\"NONTEMPORAL\", \"ALLOCATE\", \"HAS_DEVICE_ADDR\" };\n+\t\"NONTEMPORAL\", \"ALLOCATE\", \"HAS_DEVICE_ADDR\", \"ENTER\" };\n   STATIC_ASSERT (ARRAY_SIZE (clause_names) == OMP_LIST_NUM);\n \n   if (omp_clauses == NULL)"}, {"sha": "93075fb147ea647f76883f301996d928c05f465a", "filename": "gcc/testsuite/gfortran.dg/gomp/declare-target-2.f90", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3803f9cbb67efef7462589fe50d00b404356bc9/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-target-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3803f9cbb67efef7462589fe50d00b404356bc9/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-target-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-target-2.f90?ref=e3803f9cbb67efef7462589fe50d00b404356bc9", "patch": "@@ -1,9 +1,9 @@\n ! { dg-do compile }\n \n module declare_target_2\n-  !$omp declare target to (a) link (a)\t! { dg-error \"TO clause and later in LINK\" }\n+  !$omp declare target to (a) link (a)\t! { dg-error \"mentioned multiple times in clauses of the same OMP DECLARE TARGET directive\" }\n   !$omp declare target (b)\n-  !$omp declare target link (b)\t\t! { dg-error \"TO clause and later in LINK\" }\n+  !$omp declare target link (b)\t\t! { dg-error \"TO or ENTER clause and later in LINK\" }\n   !$omp declare target link (f)\n   !$omp declare target to (f)\t\t! { dg-error \"LINK clause and later in TO\" }\n   !$omp declare target(c, c)\t\t! { dg-error \"mentioned multiple times in clauses of the same\" }\n@@ -39,13 +39,23 @@ subroutine foo\t\t\t\t! { dg-error \"attribute conflicts\" }\n   !$omp declare target to (/c2/)\n   !$omp declare target (/c2/)\n   !$omp declare target to(/c2/)\n-  !$omp declare target link(/c2/)\t! { dg-error \"TO clause and later in LINK\" }\n+  !$omp declare target link(/c2/)\t! { dg-error \"TO or ENTER clause and later in LINK\" }\n   !$omp declare target link(/c3/)\n-  !$omp declare target (/c3/)\t\t! { dg-error \"LINK clause and later in TO\" }\n+  !$omp declare target (/c3/)\t\t! { dg-error \"LINK clause and later in ENTER\" }\n   !$omp declare target (/c4/, /c4/)\t! { dg-error \"mentioned multiple times in clauses of the same\" }\n   !$omp declare target to (/c4/) to(/c4/) ! { dg-error \"mentioned multiple times in clauses of the same\" }\n   !$omp declare target link (/c5/)\n   !$omp declare target link (/c5/)\n   !$omp declare target link(/c5/)link(/c5/) ! { dg-error \"mentioned multiple times in clauses of the same\" }\n   !$omp declare target link(/c5/,/c5/)\t! { dg-error \"mentioned multiple times in clauses of the same\" }\n end subroutine\n+\n+module declare_target_3\n+  !$omp declare target enter (a) link (a)\t! { dg-error \"mentioned multiple times in clauses of the same OMP DECLARE TARGET directive\" }\n+  !$omp declare target link(b) enter(b)\t! { dg-error \"mentioned multiple times in clauses of the same OMP DECLARE TARGET directive\" }\n+  !$omp declare target to (c) enter (c)\t! { dg-error \"mentioned multiple times in clauses of the same\" }\n+  !$omp declare target enter (d) to (d)\t! { dg-error \"mentioned multiple times in clauses of the same\" }\n+  !$omp declare target enter (e) enter (e)\t! { dg-error \"mentioned multiple times in clauses of the same\" }\n+  integer, save :: a, b, c, d, e\n+end\n+"}, {"sha": "4f5de4bd8c7e226dab9b23974d246658e4be4229", "filename": "gcc/testsuite/gfortran.dg/gomp/declare-target-4.f90", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3803f9cbb67efef7462589fe50d00b404356bc9/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-target-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3803f9cbb67efef7462589fe50d00b404356bc9/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-target-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-target-4.f90?ref=e3803f9cbb67efef7462589fe50d00b404356bc9", "patch": "@@ -21,6 +21,10 @@ subroutine f5\n   !$omp declare target device_type (nohost) to (f5)\n end subroutine\n \n+subroutine f6\n+  !$omp declare target enter (f6) device_type (any)\n+end subroutine\n+\n module mymod\n   ! device_type is ignored for variables in OpenMP 5.0\n   ! but TR8 and later apply those rules to variables as well\n@@ -69,13 +73,14 @@ module m2\n   public :: m, n, o, p, q, r, s, t, u, v, w, x\n end module m2\n \n-! { dg-final { scan-tree-dump-times \"omp declare target\" 7 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target \\\\(device_type\\\\(\" 7 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"omp declare target\" 8 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target \\\\(device_type\\\\(\" 8 \"original\" } }\n ! { dg-final { scan-tree-dump-not \"__attribute__\\\\(\\\\(omp declare target \\[^\\n\\r\\]*\\[\\n\\r\\]void f1\" \"original\" } }\n ! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target \\\\(device_type\\\\(any\\\\)\\\\)\\\\)\\\\)\\[\\n\\r]__attribute__\\[^\\n\\r]+\\[\\n\\r]void f2\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target \\\\(device_type\\\\(any\\\\)\\\\)\\\\)\\\\)\\[\\n\\r]__attribute__\\[^\\n\\r]+\\[\\n\\r\\]void f3\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target \\\\(device_type\\\\(host\\\\)\\\\)\\\\)\\\\)\\[\\n\\r]__attribute__\\[^\\n\\r]+\\[\\n\\r\\]void f4\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target \\\\(device_type\\\\(nohost\\\\)\\\\)\\\\)\\\\)\\[\\n\\r]__attribute__\\[^\\n\\r]+\\[\\n\\r\\]void f5\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target \\\\(device_type\\\\(any\\\\)\\\\)\\\\)\\\\)\\[\\n\\r]__attribute__\\[^\\n\\r]+\\[\\n\\r]void f6\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target \\\\(device_type\\\\(any\\\\)\\\\)\\\\)\\\\)\\[\\n\\r]__attribute__\\[^\\n\\r]+\\[\\n\\r\\]void s1\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target \\\\(device_type\\\\(nohost\\\\)\\\\)\\\\)\\\\)\\[\\n\\r]__attribute__\\[^\\n\\r]+\\[\\n\\r\\]void s2\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target \\\\(device_type\\\\(host\\\\)\\\\)\\\\)\\\\)\\[\\n\\r]__attribute__\\[^\\n\\r]+\\[\\n\\r\\]void s3\" 1 \"original\" } }"}, {"sha": "ff02ccd496906deb9edf1d5a430d7d1c840c07e6", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3803f9cbb67efef7462589fe50d00b404356bc9/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3803f9cbb67efef7462589fe50d00b404356bc9/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=e3803f9cbb67efef7462589fe50d00b404356bc9", "patch": "@@ -368,7 +368,7 @@ The OpenMP 4.5 specification is fully supported.\n @item If a matching mapped list item is not found in the data environment, the\n       pointer retains its original value @tab N @tab\n @item New @code{enter} clause as alias for @code{to} on declare target directive\n-      @tab N @tab\n+      @tab Y @tab\n @item Deprecation of @code{to} clause on declare target directive @tab N @tab\n @item Extended list of directives permitted in Fortran pure procedures\n       @tab N @tab"}, {"sha": "d9abf685a545c3cd9ccad3899ab05d3ae299aff1", "filename": "libgomp/testsuite/libgomp.fortran/declare-target-1.f90", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3803f9cbb67efef7462589fe50d00b404356bc9/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3803f9cbb67efef7462589fe50d00b404356bc9/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-1.f90?ref=e3803f9cbb67efef7462589fe50d00b404356bc9", "patch": "@@ -2,8 +2,10 @@\n ! { dg-additional-sources declare-target-2.f90 }\n \n module declare_target_1_mod\n-  integer :: var_x\n+  integer :: var_x, var_y, var_z\n   !$omp declare target(var_x)\n+  !$omp declare target to(var_y)\n+  !$omp declare target enter(var_z)\n end module declare_target_1_mod\n \n   interface"}, {"sha": "2210fc5a52f588e9f2a088ca39f3845176ba4e05", "filename": "libgomp/testsuite/libgomp.fortran/declare-target-2.f90", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3803f9cbb67efef7462589fe50d00b404356bc9/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3803f9cbb67efef7462589fe50d00b404356bc9/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-2.f90?ref=e3803f9cbb67efef7462589fe50d00b404356bc9", "patch": "@@ -7,12 +7,18 @@ subroutine foo\n   use declare_target_1_mod\n \n   var_x = 10\n-  !$omp target update to(var_x)\n+  var_y = 20\n+  var_z = 30\n+  !$omp target update to(var_x, var_y, var_z)\n \n   !$omp target\n     var_x = var_x * 2;\n+    var_y = var_y * 3;\n+    var_z = var_z * 4;\n   !$omp end target\n \n-  !$omp target update from(var_x)\n+  !$omp target update from(var_x, var_y, var_z)\n   if (var_x /= 20) stop 1\n+  if (var_y /= 20*3) stop 2\n+  if (var_z /= 30*4) stop 3\n end subroutine foo"}]}