{"sha": "9625f2a27cd633acd19a1744e8f7439bd7a5715d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYyNWYyYTI3Y2Q2MzNhY2QxOWExNzQ0ZThmNzQzOWJkN2E1NzE1ZA==", "commit": {"author": {"name": "Abderrazek Zaafrani", "email": "a.zaafrani@samsung.com", "date": "2015-12-16T23:40:06Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-12-16T23:40:06Z"}, "message": "attach schedule tree to the scop\n\nwe used to translate the just computed schedule tree into a union_map,\nand then in the code generation it would be translated back to a schedule tree\njust before generating AST code.\n\nFrom-SVN: r231725", "tree": {"sha": "6502df57ccc8b89b30cd48d0f4b6825eff505cfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6502df57ccc8b89b30cd48d0f4b6825eff505cfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9625f2a27cd633acd19a1744e8f7439bd7a5715d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9625f2a27cd633acd19a1744e8f7439bd7a5715d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9625f2a27cd633acd19a1744e8f7439bd7a5715d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9625f2a27cd633acd19a1744e8f7439bd7a5715d/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cb6583c5ff97ef55e49a07d0367e8445e494dec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb6583c5ff97ef55e49a07d0367e8445e494dec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb6583c5ff97ef55e49a07d0367e8445e494dec"}], "stats": {"total": 90, "additions": 85, "deletions": 5}, "files": [{"sha": "d0d4d677347dac92e68d2f541398f463d7ccf3f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9625f2a27cd633acd19a1744e8f7439bd7a5715d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9625f2a27cd633acd19a1744e8f7439bd7a5715d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9625f2a27cd633acd19a1744e8f7439bd7a5715d", "patch": "@@ -1,3 +1,15 @@\n+2015-12-16  Abderrazek Zaafrani  <a.zaafrani@samsung.com>\n+\n+\t* graphite-isl-ast-to-gimple.c: Include isl/schedule_node.h.\n+\t(set_separate_option): New.\n+\t(translate_isl_ast_to_gimple::set_options_for_schedule_tree): New.\n+\t(translate_isl_ast_to_gimple::scop_to_isl_ast): Use scop->schedule.\n+\t* graphite-optimize-isl.c (optimize_isl): Set scop->schedule, do not\n+\tfree the computed schedule tree.\n+\t* graphite-poly.c (new_scop): Initialize scop->schedule.\n+\t* graphite.h: Include isl/schedule.h.\n+\t(struct scop): Add field schedule.\n+\n 2015-12-16  Nathan Sidwell  <nathan@acm.org>\n \n \t* ipa-visibility.c (can_replace_by_local_alias): Make static,"}, {"sha": "0043bf44f34253dc35c256c6a88b44239b1bd2f2", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 63, "deletions": 2, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9625f2a27cd633acd19a1744e8f7439bd7a5715d/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9625f2a27cd633acd19a1744e8f7439bd7a5715d/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=9625f2a27cd633acd19a1744e8f7439bd7a5715d", "patch": "@@ -61,6 +61,9 @@ along with GCC; see the file COPYING3.  If not see\n #include <isl/union_map.h>\n #include <isl/ast_build.h>\n #include <isl/val_gmp.h>\n+#ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+#include <isl/schedule_node.h>\n+#endif\n \n #include \"graphite.h\"\n \n@@ -125,6 +128,29 @@ void ivs_params_clear (ivs_params &ip)\n     }\n }\n \n+#ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+\n+/* Set the \"separate\" option for the schedule node.  */\n+\n+static __isl_give isl_schedule_node *\n+set_separate_option (__isl_take isl_schedule_node *node, void *user)\n+{\n+  if (user)\n+    return node;\n+\n+  if (isl_schedule_node_get_type (node) != isl_schedule_node_band)\n+    return node;\n+\n+  /* Set the \"separate\" option unless it is set earlier to another option.  */\n+  if (isl_schedule_node_band_member_get_ast_loop_type (node, 0)\n+      == isl_ast_loop_default)\n+    return isl_schedule_node_band_member_set_ast_loop_type\n+      (node, 0, isl_ast_loop_separate);\n+\n+  return node;\n+}\n+#endif\n+\n class translate_isl_ast_to_gimple\n {\n  public:\n@@ -290,6 +316,14 @@ class translate_isl_ast_to_gimple\n \n   __isl_give isl_union_map *generate_isl_schedule (scop_p scop);\n \n+#ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+  /* Set the \"separate\" option for all schedules.  This helps reducing control\n+     overhead.  */\n+\n+  __isl_give isl_schedule *\n+    set_options_for_schedule_tree (__isl_take isl_schedule *schedule);\n+#endif\n+\n   /* Set the separate option for all dimensions.\n      This helps to reduce control overhead.  */\n \n@@ -3163,6 +3197,19 @@ ast_build_before_for (__isl_keep isl_ast_build *build, void *user)\n   return id;\n }\n \n+#ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+/* Set the separate option for all schedules.  This helps reducing control\n+   overhead.  */\n+\n+__isl_give isl_schedule *\n+translate_isl_ast_to_gimple::set_options_for_schedule_tree\n+(__isl_take isl_schedule *schedule)\n+{\n+  return isl_schedule_map_schedule_node_bottom_up\n+    (schedule, set_separate_option, NULL);\n+}\n+#endif\n+\n /* Set the separate option for all dimensions.\n    This helps to reduce control overhead.  */\n \n@@ -3187,6 +3234,7 @@ translate_isl_ast_to_gimple::set_options (__isl_take isl_ast_build *control,\n __isl_give isl_ast_node *\n translate_isl_ast_to_gimple::scop_to_isl_ast (scop_p scop, ivs_params &ip)\n {\n+  isl_ast_node *ast_isl = NULL;\n   /* Generate loop upper bounds that consist of the current loop iterator, an\n      operator (< or <=) and an expression not involving the iterator.  If this\n      option is not set, then the current loop iterator may appear several times\n@@ -3204,8 +3252,21 @@ translate_isl_ast_to_gimple::scop_to_isl_ast (scop_p scop, ivs_params &ip)\n \tisl_ast_build_set_before_each_for (context_isl, ast_build_before_for,\n \t\t\t\t\t   dependence);\n     }\n-  isl_ast_node *ast_isl = isl_ast_build_ast_from_schedule (context_isl,\n-\t\t\t\t\t\t\t   schedule_isl);\n+\n+#ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+  if (scop->schedule)\n+    {\n+      scop->schedule = set_options_for_schedule_tree (scop->schedule);\n+      ast_isl = isl_ast_build_node_from_schedule (context_isl, scop->schedule);\n+      isl_union_map_free(schedule_isl);\n+    }\n+  else\n+    ast_isl = isl_ast_build_ast_from_schedule (context_isl, schedule_isl);\n+#else\n+  ast_isl = isl_ast_build_ast_from_schedule (context_isl, schedule_isl);\n+  isl_schedule_free (scop->schedule);\n+#endif\n+\n   isl_ast_build_free (context_isl);\n   return ast_isl;\n }"}, {"sha": "1d9449b5ca99661c29aa5f335837a1ec51c88cbf", "filename": "gcc/graphite-optimize-isl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9625f2a27cd633acd19a1744e8f7439bd7a5715d/gcc%2Fgraphite-optimize-isl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9625f2a27cd633acd19a1744e8f7439bd7a5715d/gcc%2Fgraphite-optimize-isl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-optimize-isl.c?ref=9625f2a27cd633acd19a1744e8f7439bd7a5715d", "patch": "@@ -420,6 +420,10 @@ optimize_isl (scop_p scop)\n       return false;\n     }\n \n+  /* Attach the schedule to scop so that it can be used in code generation.\n+     schedule freeing will occur in code generation.  */\n+  scop->schedule = schedule;\n+\n #ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n   /* isl 0.15 or later.  */\n   isl_union_map *schedule_map = get_schedule_map_st (schedule);\n@@ -428,7 +432,6 @@ optimize_isl (scop_p scop)\n #endif\n   apply_schedule_map_to_scop (scop, schedule_map);\n \n-  isl_schedule_free (schedule);\n   isl_union_map_free (schedule_map);\n   return true;\n }"}, {"sha": "1f50ff8c6c718761c82b030523e661b6862e3729", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9625f2a27cd633acd19a1744e8f7439bd7a5715d/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9625f2a27cd633acd19a1744e8f7439bd7a5715d/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=9625f2a27cd633acd19a1744e8f7439bd7a5715d", "patch": "@@ -295,9 +295,9 @@ scop_p\n new_scop (edge entry, edge exit)\n {\n   sese_info_p region = new_sese_info (entry, exit);\n-  scop_p s;\n-  s = XNEW (struct scop);\n+  scop_p s = XNEW (struct scop);\n \n+  s->schedule = NULL;\n   s->param_context = NULL;\n   scop_set_region (s, region);\n   s->pbbs.create (3);"}, {"sha": "929c399d593955d4e73c0b29dc0ca24b5f26632e", "filename": "gcc/graphite.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9625f2a27cd633acd19a1744e8f7439bd7a5715d/gcc%2Fgraphite.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9625f2a27cd633acd19a1744e8f7439bd7a5715d/gcc%2Fgraphite.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.h?ref=9625f2a27cd633acd19a1744e8f7439bd7a5715d", "patch": "@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #define GCC_GRAPHITE_POLY_H\n \n #include \"sese.h\"\n+#include <isl/schedule.h>\n \n #ifndef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n   /* isl 0.14.  */\n@@ -411,6 +412,9 @@ struct scop\n   /* The context used internally by ISL.  */\n   isl_ctx *isl_context;\n \n+  /* SCoP final schedule.  */\n+  isl_schedule *schedule;\n+\n   /* The data dependence relation among the data references in this scop.  */\n   isl_union_map *dependence;\n };"}]}