{"sha": "bf8ba8ab41cdd63381bf7e6e85481c49ee73cd8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY4YmE4YWI0MWNkZDYzMzgxYmY3ZTZlODU0ODFjNDllZTczY2Q4Zg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2008-12-01T19:31:41Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2008-12-01T19:31:41Z"}, "message": "re PR rtl-optimization/37514 (Wrong code generated for 20021120-1.c with -O3 -fomit-frame-pointer on sh4)\n\n2008-12-01  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/37514\n\t* reload1.c (reload_as_needed): Invalidate reg_last_reload\n\tfrom previous insns.\n\nFrom-SVN: r142328", "tree": {"sha": "242b75896f5d3ea2d35431520de4971ef7d0b2c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/242b75896f5d3ea2d35431520de4971ef7d0b2c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf8ba8ab41cdd63381bf7e6e85481c49ee73cd8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf8ba8ab41cdd63381bf7e6e85481c49ee73cd8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf8ba8ab41cdd63381bf7e6e85481c49ee73cd8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf8ba8ab41cdd63381bf7e6e85481c49ee73cd8f/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34d5d95884a2d6060098b9cd431360ea03416b69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34d5d95884a2d6060098b9cd431360ea03416b69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34d5d95884a2d6060098b9cd431360ea03416b69"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "ec4530cb5a2920e5b3dbd8732e5d9beffbd101b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8ba8ab41cdd63381bf7e6e85481c49ee73cd8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8ba8ab41cdd63381bf7e6e85481c49ee73cd8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf8ba8ab41cdd63381bf7e6e85481c49ee73cd8f", "patch": "@@ -1,3 +1,9 @@\n+2008-12-01  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/37514\n+\t* reload1.c (reload_as_needed): Invalidate reg_last_reload\n+\tfrom previous insns.\n+\n 2008-12-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/38348"}, {"sha": "2f95fa55aa26fe1185b924da28bcae22c0b19d07", "filename": "gcc/reload1.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8ba8ab41cdd63381bf7e6e85481c49ee73cd8f/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8ba8ab41cdd63381bf7e6e85481c49ee73cd8f/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=bf8ba8ab41cdd63381bf7e6e85481c49ee73cd8f", "patch": "@@ -4164,6 +4164,9 @@ reload_as_needed (int live_known)\n       rtx prev = 0;\n       rtx insn = chain->insn;\n       rtx old_next = NEXT_INSN (insn);\n+#ifdef AUTO_INC_DEC\n+      rtx old_prev = PREV_INSN (insn);\n+#endif\n \n       /* If we pass a label, copy the offsets from the label information\n \t into the current offsets of each elimination.  */\n@@ -4388,6 +4391,33 @@ reload_as_needed (int live_known)\n \t\t      SET_REGNO_REG_SET (&reg_has_output_reload,\n \t\t\t\t\t REGNO (XEXP (in_reg, 0)));\n \t\t    }\n+\t\t  else if ((code == PRE_INC || code == PRE_DEC\n+\t\t\t    || code == POST_INC || code == POST_DEC))\n+\t\t    {\n+\t\t      int in_hard_regno;\n+\t\t      int in_regno = REGNO (XEXP (in_reg, 0));\n+\n+\t\t      if (reg_last_reload_reg[in_regno] != NULL_RTX)\n+\t\t\t{\n+\t\t\t  in_hard_regno = REGNO (reg_last_reload_reg[in_regno]);\n+\t\t\t  gcc_assert (TEST_HARD_REG_BIT (reg_reloaded_valid,\n+\t\t\t\t\t\t\t in_hard_regno));\n+\t\t\t  for (x = old_prev ? NEXT_INSN (old_prev) : insn;\n+\t\t\t       x != old_next;\n+\t\t\t       x = NEXT_INSN (x))\n+\t\t\t    if (x == reg_reloaded_insn[in_hard_regno])\n+\t\t\t      break;\n+\t\t\t  /* If for some reasons, we didn't set up\n+\t\t\t     reg_last_reload_reg in this insn,\n+\t\t\t     invalidate inheritance from previous\n+\t\t\t     insns for the incremented/decremented\n+\t\t\t     register.  Such registers will be not in\n+\t\t\t     reg_has_output_reload.  */\n+\t\t\t  if (x == old_next)\n+\t\t\t    forget_old_reloads_1 (XEXP (in_reg, 0),\n+\t\t\t\t\t\t  NULL_RTX, NULL);\n+\t\t\t}\n+\t\t    }\n \t\t}\n \t    }\n \t  /* If a pseudo that got a hard register is auto-incremented,"}]}