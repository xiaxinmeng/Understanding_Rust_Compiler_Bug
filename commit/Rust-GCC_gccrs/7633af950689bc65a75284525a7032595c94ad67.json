{"sha": "7633af950689bc65a75284525a7032595c94ad67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYzM2FmOTUwNjg5YmM2NWE3NTI4NDUyNWE3MDMyNTk1Yzk0YWQ2Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-28T13:11:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-28T13:11:38Z"}, "message": "(check_precompiled): Delete unused var dollar_loc.\n\n(pcstring_used): Delete unused var TMP.\n(write_output): Delete unused var WRITTEN.\n(assertion_lookup): Delete unused var BP.\n(pedwarn_with_file_and_line): Delete unused var I.\n\nFrom-SVN: r6675", "tree": {"sha": "9e73fc8425e99c321b2060bea572683749440f10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e73fc8425e99c321b2060bea572683749440f10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7633af950689bc65a75284525a7032595c94ad67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7633af950689bc65a75284525a7032595c94ad67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7633af950689bc65a75284525a7032595c94ad67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7633af950689bc65a75284525a7032595c94ad67/comments", "author": null, "committer": null, "parents": [{"sha": "68de38314c2ee87564672eeb4e3cbb6d634d1442", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68de38314c2ee87564672eeb4e3cbb6d634d1442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68de38314c2ee87564672eeb4e3cbb6d634d1442"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "98a1b8d943bd6a14c3dfc2531f4aed4f03d31b2c", "filename": "gcc/cccp.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7633af950689bc65a75284525a7032595c94ad67/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7633af950689bc65a75284525a7032595c94ad67/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=7633af950689bc65a75284525a7032595c94ad67", "patch": "@@ -4785,7 +4785,6 @@ check_precompiled (pcf, fname, limit)\n   long st_size;\n   int length = 0;\n   char *buf;\n-  char *dollar_loc;\n   int i;\n   char *cp;\n \n@@ -5018,7 +5017,7 @@ static void\n pcstring_used (hp)\n      HASHNODE *hp;\n {\n-  KEYDEF *kp, *tmp;\n+  KEYDEF *kp;\n   \n   for (kp = hp->value.keydef; kp; kp = kp->chain)\n     kp->str->writeflag = 1;\n@@ -5035,7 +5034,6 @@ write_output ()\n   int line_command_len = 80;\n   char *line_command = xmalloc (line_command_len);\n   int len;\n-  int written;\n \n   /* In each run through the loop, either cur_buf_loc == */\n   /* next_string_loc, in which case we print a series of strings, or */\n@@ -6116,7 +6114,6 @@ assertion_lookup (name, len, hash)\n      int len;\n      int hash;\n {\n-  register U_CHAR *bp;\n   register ASSERTION_HASHNODE *bucket;\n \n   bucket = assertion_hashtab[hash];\n@@ -8415,7 +8412,6 @@ pedwarn_with_file_and_line (file, line, msg, arg1, arg2, arg3)\n      char *msg;\n      char *arg1, *arg2, *arg3;\n {\n-  int i;\n   if (!pedantic_errors && inhibit_warnings)\n     return;\n   if (file != NULL)"}]}