{"sha": "96a2d174ccfd5b1cdb746e79468dd926ad26718f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZhMmQxNzRjY2ZkNWIxY2RiNzQ2ZTc5NDY4ZGQ5MjZhZDI2NzE4Zg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2015-08-10T15:22:30Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2015-08-10T15:22:30Z"}, "message": "Fix offloading machine mode stream reading\n\n... in context of the GET_MODE_INNER changes applied in r226328.\n\n\tgcc/\n\t* lto-streamer-in.c (lto_input_mode_table): Adjust to\n\tGET_MODE_INNER changes.\n\tlibgomp/\n\t* testsuite/libgomp.oacc-c-c++-common/vector-type-1.c: New file.\n\nFrom-SVN: r226759", "tree": {"sha": "8a8774799581261f44d24469fba467584fca849c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a8774799581261f44d24469fba467584fca849c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96a2d174ccfd5b1cdb746e79468dd926ad26718f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a2d174ccfd5b1cdb746e79468dd926ad26718f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96a2d174ccfd5b1cdb746e79468dd926ad26718f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a2d174ccfd5b1cdb746e79468dd926ad26718f/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78647e656d853937295d821974aca6176b4ea0e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78647e656d853937295d821974aca6176b4ea0e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78647e656d853937295d821974aca6176b4ea0e7"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "f547931b4e9d7b9a0506808f054dd25eff4eca11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a2d174ccfd5b1cdb746e79468dd926ad26718f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a2d174ccfd5b1cdb746e79468dd926ad26718f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96a2d174ccfd5b1cdb746e79468dd926ad26718f", "patch": "@@ -1,3 +1,8 @@\n+2015-08-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* lto-streamer-in.c (lto_input_mode_table): Adjust to\n+\tGET_MODE_INNER changes.\n+\n 2015-08-10  Thomas Schwinge  <thomas@codesourcery.com>\n \t    Ilya Verbin  <ilya.verbin@intel.com>\n "}, {"sha": "2eb80511b919f82a77a392eb6258618a5dee6e06", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a2d174ccfd5b1cdb746e79468dd926ad26718f/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a2d174ccfd5b1cdb746e79468dd926ad26718f/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=96a2d174ccfd5b1cdb746e79468dd926ad26718f", "patch": "@@ -1544,7 +1544,7 @@ lto_input_mode_table (struct lto_file_decl_data *file_data)\n \t= bp_unpack_enum (&bp, mode_class, MAX_MODE_CLASS);\n       unsigned int size = bp_unpack_value (&bp, 8);\n       unsigned int prec = bp_unpack_value (&bp, 16);\n-      machine_mode inner = (machine_mode) table[bp_unpack_value (&bp, 8)];\n+      machine_mode inner = (machine_mode) bp_unpack_value (&bp, 8);\n       unsigned int nunits = bp_unpack_value (&bp, 8);\n       unsigned int ibit = 0, fbit = 0;\n       unsigned int real_fmt_len = 0;\n@@ -1578,7 +1578,9 @@ lto_input_mode_table (struct lto_file_decl_data *file_data)\n \t  if (GET_MODE_CLASS (mr) != mclass\n \t      || GET_MODE_SIZE (mr) != size\n \t      || GET_MODE_PRECISION (mr) != prec\n-\t      || GET_MODE_INNER (mr) != inner\n+\t      || (inner == m\n+\t\t  ? GET_MODE_INNER (mr) != mr\n+\t\t  : GET_MODE_INNER (mr) != table[(int) inner])\n \t      || GET_MODE_IBIT (mr) != ibit\n \t      || GET_MODE_FBIT (mr) != fbit\n \t      || GET_MODE_NUNITS (mr) != nunits)\n@@ -1606,7 +1608,7 @@ lto_input_mode_table (struct lto_file_decl_data *file_data)\n \t    case MODE_VECTOR_UACCUM:\n \t      /* For unsupported vector modes just use BLKmode,\n \t\t if the scalar mode is supported.  */\n-\t      if (inner != VOIDmode)\n+\t      if (table[(int) inner] != VOIDmode)\n \t\t{\n \t\t  table[m] = BLKmode;\n \t\t  break;"}, {"sha": "3ca88556638af7f442b7f8d650a0ba6eeab2a3aa", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a2d174ccfd5b1cdb746e79468dd926ad26718f/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a2d174ccfd5b1cdb746e79468dd926ad26718f/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=96a2d174ccfd5b1cdb746e79468dd926ad26718f", "patch": "@@ -2676,7 +2676,7 @@ lto_write_mode_table (void)\n   ob = create_output_block (LTO_section_mode_table);\n   bitpack_d bp = bitpack_create (ob->main_stream);\n \n-  /* Ensure that for GET_MODE_INNER (m) != VOIDmode we have\n+  /* Ensure that for GET_MODE_INNER (m) != m we have\n      also the inner mode marked.  */\n   for (int i = 0; i < (int) MAX_MACHINE_MODE; i++)\n     if (streamer_mode_table[i])\n@@ -2685,7 +2685,7 @@ lto_write_mode_table (void)\n \tif (GET_MODE_INNER (m) != m)\n \t  streamer_mode_table[(int) GET_MODE_INNER (m)] = 1;\n       }\n-  /* First stream modes that have GET_MODE_INNER (m) == VOIDmode,\n+  /* First stream modes that have GET_MODE_INNER (m) == m,\n      so that we can refer to them afterwards.  */\n   for (int pass = 0; pass < 2; pass++)\n     for (int i = 0; i < (int) MAX_MACHINE_MODE; i++)"}, {"sha": "3b60290b0bcb1a8e32edf406866c3ca5556660ab", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a2d174ccfd5b1cdb746e79468dd926ad26718f/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a2d174ccfd5b1cdb746e79468dd926ad26718f/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=96a2d174ccfd5b1cdb746e79468dd926ad26718f", "patch": "@@ -1,3 +1,7 @@\n+2015-08-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/vector-type-1.c: New file.\n+\n 2015-08-03  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* plugin/plugin-nvptx.c: Don't include dlfcn.h."}, {"sha": "5adfcecd6411e8eba3450cb7023f15c31d258d70", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/vector-type-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a2d174ccfd5b1cdb746e79468dd926ad26718f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fvector-type-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a2d174ccfd5b1cdb746e79468dd926ad26718f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fvector-type-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fvector-type-1.c?ref=96a2d174ccfd5b1cdb746e79468dd926ad26718f", "patch": "@@ -0,0 +1,24 @@\n+#define vector __attribute__ ((vector_size (4 * sizeof(int))))\n+\n+int main(void)\n+{\n+  vector int vi = { 12, -34, -56, 78 };\n+\n+#pragma acc parallel copy(vi)\n+  {\n+    if (vi[0] != 12\n+\t|| vi[1] != -34\n+\t|| vi[2] != -56\n+\t|| vi[3] != 78)\n+      __builtin_abort();\n+    vector int vi_ = { -21, -43, 65, 87 };\n+    vi = vi_;\n+  }\n+  if (vi[0] != -21\n+      || vi[1] != -43\n+      || vi[2] != 65\n+      || vi[3] != 87)\n+    __builtin_abort();\n+\n+  return 0;\n+}"}]}