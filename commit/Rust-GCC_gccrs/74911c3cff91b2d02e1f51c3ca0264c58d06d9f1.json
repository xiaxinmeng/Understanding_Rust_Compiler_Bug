{"sha": "74911c3cff91b2d02e1f51c3ca0264c58d06d9f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ5MTFjM2NmZjkxYjJkMDJlMWY1MWMzY2EwMjY0YzU4ZDA2ZDlmMQ==", "commit": {"author": {"name": "Sharad Singhai", "email": "singhai@google.com", "date": "2012-10-22T18:50:19Z"}, "committer": {"name": "Sharad Singhai", "email": "singhai@gcc.gnu.org", "date": "2012-10-22T18:50:19Z"}, "message": "dumpfile.c (dump_phase_enabled_p): Renamed dump_enabled_p.\n\n2012-10-22  Sharad Singhai  <singhai@google.com>\n\n        * dumpfile.c (dump_phase_enabled_p): Renamed dump_enabled_p. Update\n        all callers.\n\t(dump_enabled_p): A new function to check if any of the dump files\n\tis available.\n\t(dump_kind_p): Remove check for current_function_decl. Add check for\n\tdumpfile and alt_dump_file.\n\t* dumpfile.h: Add declaration of dump_enabled_p.\n\nFrom-SVN: r192692", "tree": {"sha": "681f63b2a5de370e26f0825f084508a7576d4775", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/681f63b2a5de370e26f0825f084508a7576d4775"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74911c3cff91b2d02e1f51c3ca0264c58d06d9f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74911c3cff91b2d02e1f51c3ca0264c58d06d9f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74911c3cff91b2d02e1f51c3ca0264c58d06d9f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74911c3cff91b2d02e1f51c3ca0264c58d06d9f1/comments", "author": null, "committer": null, "parents": [{"sha": "4caaa4621a91d1ecb80151f83566cafd0b1f7a70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4caaa4621a91d1ecb80151f83566cafd0b1f7a70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4caaa4621a91d1ecb80151f83566cafd0b1f7a70"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "e7e9788ea6ca57ff13d37aa89696a4dcc3249005", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74911c3cff91b2d02e1f51c3ca0264c58d06d9f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74911c3cff91b2d02e1f51c3ca0264c58d06d9f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74911c3cff91b2d02e1f51c3ca0264c58d06d9f1", "patch": "@@ -1,3 +1,13 @@\n+2012-10-22  Sharad Singhai  <singhai@google.com>\n+\n+\t* dumpfile.c (dump_phase_enabled_p): Renamed dump_enabled_p. Update\n+        all callers.\n+\t(dump_enabled_p): A new function to check if any of the dump files\n+\tis available.\n+\t(dump_kind_p): Remove check for current_function_decl. Add check for\n+\tdumpfile and alt_dump_file.\n+\t* dumpfile.h: Add declaration of dump_enabled_p.\n+\n 2012-10-22  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/55021"}, {"sha": "4ac427b273a6be03fd5b644b5fd39cada48b9707", "filename": "gcc/dumpfile.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74911c3cff91b2d02e1f51c3ca0264c58d06d9f1/gcc%2Fdumpfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74911c3cff91b2d02e1f51c3ca0264c58d06d9f1/gcc%2Fdumpfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.c?ref=74911c3cff91b2d02e1f51c3ca0264c58d06d9f1", "patch": "@@ -35,7 +35,7 @@ static int alt_flags;                /* current opt_info flags */\n static FILE *alt_dump_file = NULL;\n \n static void dump_loc (int, FILE *, source_location);\n-static int dump_enabled_p (int);\n+static int dump_phase_enabled_p (int);\n static FILE *dump_open_alternate_stream (struct dump_file_info *);\n \n /* Table of tree dump switches. This must be consistent with the\n@@ -380,7 +380,7 @@ dump_start (int phase, int *flag_ptr)\n   char *name;\n   struct dump_file_info *dfi;\n   FILE *stream;\n-  if (phase == TDI_none || !dump_enabled_p (phase))\n+  if (phase == TDI_none || !dump_phase_enabled_p (phase))\n     return 0;\n \n   dfi = get_dump_file_info (phase);\n@@ -461,7 +461,7 @@ dump_begin (int phase, int *flag_ptr)\n   struct dump_file_info *dfi;\n   FILE *stream;\n \n-  if (phase == TDI_none || !dump_enabled_p (phase))\n+  if (phase == TDI_none || !dump_phase_enabled_p (phase))\n     return NULL;\n \n   name = get_dump_file_name (phase);\n@@ -493,8 +493,8 @@ dump_begin (int phase, int *flag_ptr)\n    If PHASE is TDI_tree_all, return nonzero if any dump is enabled for\n    any phase.  */\n \n-int\n-dump_enabled_p (int phase)\n+static int\n+dump_phase_enabled_p (int phase)\n {\n   if (phase == TDI_tree_all)\n     {\n@@ -514,6 +514,14 @@ dump_enabled_p (int phase)\n     }\n }\n \n+/* Return true if any of the dumps are enabled, false otherwise. */\n+\n+inline bool\n+dump_enabled_p (void)\n+{\n+  return (dump_file || alt_dump_file);\n+}\n+\n /* Returns nonzero if tree dump PHASE has been initialized.  */\n \n int\n@@ -834,9 +842,8 @@ opt_info_switch_p (const char *arg)\n bool\n dump_kind_p (int msg_type)\n {\n-  if (!current_function_decl)\n-    return 0;\n-  return ((msg_type & pflags) || (msg_type & alt_flags));\n+  return (dump_file && (msg_type & pflags))\n+    || (alt_dump_file && (msg_type & alt_flags));\n }\n \n /* Print basic block on the dump streams.  */"}, {"sha": "24374bfd96b124e567f0b61fdcfa27fedae8b3b4", "filename": "gcc/dumpfile.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74911c3cff91b2d02e1f51c3ca0264c58d06d9f1/gcc%2Fdumpfile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74911c3cff91b2d02e1f51c3ca0264c58d06d9f1/gcc%2Fdumpfile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.h?ref=74911c3cff91b2d02e1f51c3ca0264c58d06d9f1", "patch": "@@ -121,6 +121,7 @@ extern int dump_switch_p (const char *);\n extern int opt_info_switch_p (const char *);\n extern const char *dump_flag_name (int);\n extern bool dump_kind_p (int);\n+extern inline bool dump_enabled_p (void);\n extern void dump_printf (int, const char *, ...) ATTRIBUTE_PRINTF_2;\n extern void dump_printf_loc (int, source_location,\n                              const char *, ...) ATTRIBUTE_PRINTF_3;"}]}