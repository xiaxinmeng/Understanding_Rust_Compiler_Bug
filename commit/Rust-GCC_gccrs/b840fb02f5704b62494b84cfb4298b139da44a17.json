{"sha": "b840fb02f5704b62494b84cfb4298b139da44a17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg0MGZiMDJmNTcwNGI2MjQ5NGI4NGNmYjQyOThiMTM5ZGE0NGExNw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-01-24T00:59:51Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-01-24T00:59:51Z"}, "message": "re PR tree-optimization/38953 ([graphite] loop closed SSA not maintained by graphite code generation)\n\n2009-01-24  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR tree-optimization/38953\n\t* graphite.c (graphite_verify): Add a call to verify_loop_closed_ssa.\n\t(scop_adjust_phis_for_liveouts): Initialize false_i to zero.\n\t(gloog): Split the exit of the scop when the scop exit is a loop exit.\n\t(graphite_transform_loops): Only call cleanup_tree_cfg if gloog\n\tchanged the CFG.\n\n\t* gfortran.dg/graphite/pr38953.f90: New.\n\nFrom-SVN: r143599", "tree": {"sha": "1a379d5668d1da83b452efb96fbb212b8a824b8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a379d5668d1da83b452efb96fbb212b8a824b8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b840fb02f5704b62494b84cfb4298b139da44a17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b840fb02f5704b62494b84cfb4298b139da44a17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b840fb02f5704b62494b84cfb4298b139da44a17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b840fb02f5704b62494b84cfb4298b139da44a17/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77f9581b890f0d19c5d6c6bddb4aef72b5e02bb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f9581b890f0d19c5d6c6bddb4aef72b5e02bb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77f9581b890f0d19c5d6c6bddb4aef72b5e02bb9"}], "stats": {"total": 158, "additions": 153, "deletions": 5}, "files": [{"sha": "0b172fe4111a712ef8961a82397f458f9c3210b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b840fb02f5704b62494b84cfb4298b139da44a17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b840fb02f5704b62494b84cfb4298b139da44a17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b840fb02f5704b62494b84cfb4298b139da44a17", "patch": "@@ -1,3 +1,12 @@\n+2009-01-24  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/38953\n+\t* graphite.c (graphite_verify): Add a call to verify_loop_closed_ssa.\n+\t(scop_adjust_phis_for_liveouts): Initialize false_i to zero.\n+\t(gloog): Split the exit of the scop when the scop exit is a loop exit.\n+\t(graphite_transform_loops): Only call cleanup_tree_cfg if gloog\n+\tchanged the CFG.\n+\n 2009-01-24  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/neon.md (neon_type): Move to arm.md."}, {"sha": "3cb24b86b16c9b9cf6e118d738bba73433c116b9", "filename": "gcc/graphite.c", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b840fb02f5704b62494b84cfb4298b139da44a17/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b840fb02f5704b62494b84cfb4298b139da44a17/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=b840fb02f5704b62494b84cfb4298b139da44a17", "patch": "@@ -2178,6 +2178,7 @@ graphite_verify (void)\n   verify_dominators (CDI_DOMINATORS);\n   verify_dominators (CDI_POST_DOMINATORS);\n   verify_ssa (false);\n+  verify_loop_closed_ssa ();\n #endif\n }\n \n@@ -5229,7 +5230,8 @@ scop_adjust_phis_for_liveouts (scop_p scop, basic_block bb, edge false_e,\n \n   for (si = gsi_start_phis (bb); !gsi_end_p (si); gsi_next (&si))\n     {\n-      unsigned i, false_i;\n+      unsigned i;\n+      unsigned false_i = 0;\n       gimple phi = gsi_stmt (si);\n \n       if (!is_gimple_reg (PHI_RESULT (phi)))\n@@ -5376,9 +5378,9 @@ compute_cloog_iv_types (struct clast_stmt *stmt)\n }\n \n /* GIMPLE Loop Generator: generates loops from STMT in GIMPLE form for\n-   the given SCOP.  */\n+   the given SCOP.  Return true if code generation succeeded.  */\n \n-static void\n+static bool\n gloog (scop_p scop, struct clast_stmt *stmt)\n {\n   edge new_scop_exit_edge = NULL;\n@@ -5387,6 +5389,19 @@ gloog (scop_p scop, struct clast_stmt *stmt)\n   loop_p context_loop;\n   ifsese if_region = NULL;\n \n+  /* To maintain the loop closed SSA form, we have to keep the phi\n+     nodes after the last loop in the scop.  */\n+  if (loop_depth (SESE_EXIT (SCOP_REGION (scop))->dest->loop_father)\n+      != loop_depth (SESE_EXIT (SCOP_REGION (scop))->src->loop_father))\n+    {\n+      basic_block bb = SESE_EXIT (SCOP_REGION (scop))->dest;\n+      SESE_EXIT (SCOP_REGION (scop)) = split_block_after_labels (bb);\n+      bitmap_set_bit (SCOP_BBS_B (scop), bb->index);\n+      pointer_set_insert (SESE_REGION_BBS (SCOP_REGION (scop)), bb);\n+    }\n+\n+  recompute_all_dominators ();\n+  graphite_verify ();\n   if_region = move_sese_in_condition (SCOP_REGION (scop));\n   sese_build_livein_liveouts (SCOP_REGION (scop));\n   scop_insert_phis_for_liveouts (SCOP_REGION (scop),\n@@ -5412,6 +5427,7 @@ gloog (scop_p scop, struct clast_stmt *stmt)\n \n   recompute_all_dominators ();\n   graphite_verify ();\n+  return true;\n }\n \n /* Returns the number of data references in SCOP.  */\n@@ -6040,6 +6056,7 @@ graphite_transform_loops (void)\n {\n   int i;\n   scop_p scop;\n+  bool transform_done = false;\n \n   if (number_of_loops () <= 1)\n     return;\n@@ -6098,7 +6115,7 @@ graphite_transform_loops (void)\n \t}\n \n       if (graphite_apply_transformations (scop))\n-        gloog (scop, find_transform (scop));\n+        transform_done = gloog (scop, find_transform (scop));\n #ifdef ENABLE_CHECKING\n       else\n \t{\n@@ -6109,7 +6126,9 @@ graphite_transform_loops (void)\n     }\n \n   /* Cleanup.  */\n-  cleanup_tree_cfg ();\n+  if (transform_done)\n+    cleanup_tree_cfg ();\n+\n   free_scops (current_scops);\n   cloog_finalize ();\n   free_original_copy_tables ();"}, {"sha": "1ae8375987689af34e954a9906770cbe680b50e8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b840fb02f5704b62494b84cfb4298b139da44a17/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b840fb02f5704b62494b84cfb4298b139da44a17/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b840fb02f5704b62494b84cfb4298b139da44a17", "patch": "@@ -1,3 +1,8 @@\n+2009-01-24  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/38953\n+\t* gfortran.dg/graphite/pr38953.f90: New.\n+\n 2009-01-24  Paul Brook  <paul@codesourcery.com>\n \n \t* gcc.target/arm/neon-cond-1.c: New test."}, {"sha": "245db0dfe28a9e326bf57ed2a8705e232fa4ae88", "filename": "gcc/testsuite/gfortran.dg/graphite/pr38953.f90", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b840fb02f5704b62494b84cfb4298b139da44a17/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr38953.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b840fb02f5704b62494b84cfb4298b139da44a17/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr38953.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr38953.f90?ref=b840fb02f5704b62494b84cfb4298b139da44a17", "patch": "@@ -0,0 +1,115 @@\n+! { dg-options \"-O3 -floop-block -fgraphite-identity\" }\n+\n+      MODULE MAIN1\n+      INTEGER , PARAMETER :: IFMAX = 40 , IKN = 85 , ISTRG = 132 ,      &\n+     &                       IERRN = 170 , ILEN_FLD = 80\n+      CHARACTER PATH*2 , PPATH*2 , KEYWRD*8 , PKEYWD*8 , KEYWD*8 ,      &\n+     &          KTYPE*5 , RUNST*1\n+      DIMENSION FIELD(IFMAX) , KEYWD(IKN) , RUNST(ISTRG)\n+      LOGICAL :: DFAULT , CONC , DEPOS , DDEP , WDEP , RURAL , URBAN ,  &\n+     &        GRDRIS , NOSTD , NOBID , CLMPRO , MSGPRO , PERIOD ,       &\n+     &            OLM=.FALSE.    \n+      INTEGER :: NSRC , NREC , NGRP , NQF,                              &\n+     &           NARC , NOLM\n+      CHARACTER NETID*8 , NETIDT*8 , PNETID*8 , NTID*8 , NTTYP*8 ,      &\n+     &          RECTYP*2 , PXSOID*8 , PESOID*8 , ARCID*8\n+      ALLOCATABLE ::NETID(:) , RECTYP(:) , NTID(:) , NTTYP(:) , ARCID(:)\n+      DATA (KEYWD(I),I=1,IKN)/'STARTING' , 'FINISHED' , 'TITLEONE' ,    &\n+     &      'TITLETWO' , 'MODELOPT' , 'AVERTIME' , 'POLLUTID' ,         &\n+     &      'HALFLIFE' , 'DCAYCOEF' , 'DEBUGOPT' , 'ELEVUNIT' ,         &\n+     &      'FLAGPOLE' , 'RUNORNOT' , 'EVENTFIL' , 'SAVEFILE' ,         &\n+     &      'INITFILE' , 'MULTYEAR' , 'ERRORFIL' , 'GASDEPDF' ,         &\n+     &      'GDSEASON' , 'GASDEPVD' , 'GDLANUSE' , 'EVENTFIL' ,         &\n+     &      'URBANOPT' , 'METHOD_2' , 'LOCATION' , 'SRCPARAM' ,         &\n+     &      'BUILDHGT' , 'BUILDWID' , 'BUILDLEN' , 'XBADJ   ' ,         &\n+     &      'YBADJ   ' , 'EMISFACT' , 'EMISUNIT' , 'PARTDIAM' ,         &\n+     &      'MASSFRAX' , 'PARTDENS' , '        ' , '        ' ,         &\n+     &      '        ' , 'CONCUNIT' , 'DEPOUNIT' , 'HOUREMIS' ,         &\n+     &      'GASDEPOS' , 'URBANSRC' , 'EVENTPER' , 'EVENTLOC' ,         &\n+     &      'SRCGROUP' , 'GRIDCART' , 'GRIDPOLR' , 'DISCCART' ,         &\n+     &      'DISCPOLR' , 'SURFFILE' , 'PROFFILE' , 'PROFBASE' ,         &\n+     &      '        ' , 'SURFDATA' , 'UAIRDATA' , 'SITEDATA' ,         &\n+     &      'STARTEND' , 'DAYRANGE' , 'WDROTATE' , 'DTHETADZ' ,         &\n+     &      'WINDCATS' , 'RECTABLE' , 'MAXTABLE' , 'DAYTABLE' ,         &\n+     &      'MAXIFILE' , 'POSTFILE' , 'PLOTFILE' , 'TOXXFILE' ,         &\n+     &      'EVENTOUT' , 'INCLUDED' , 'SCIMBYHR' , 'SEASONHR' ,         &\n+     &      'AREAVERT' , 'PARTSIZE' , 'RANKFILE' , 'EVALCART' ,         &\n+     &      'EVALFILE' , 'NO2EQUIL' , 'OZONEVAL' , 'OZONEFIL' ,         &\n+     &      'NO2RATIO' , 'OLMGROUP'/\n+      DIMENSION RESTAB(9,6,5) , STAB(9)\n+      DATA (((RESTAB(I,J,K),I=1,9),J=1,6),K=1,5)/1.E07 , 60. , 120. ,   &\n+     &      100. , 200. , 150. , 1.E07 , 1.E07 , 80. , 1.E07 , 2000. ,  &\n+     &      2000. , 2000. , 2000. , 2000. , 1.E07 , 1.E07 , 2500. ,     &\n+     &      1.E07 , 1000. , 1000. , 1000. , 2000. , 2000. , 1.E07 ,     &\n+     &      1.E07 , 1000. , 100. , 200. , 100. , 2000. , 100. , 1500. , &\n+     &      0. , 0. , 300. , 400. , 150. , 350. , 300. , 500. , 450. ,  &\n+     &      0. , 1000. , 0. , 300. , 150. , 200. , 200. , 300. , 300. , &\n+     &      2000. , 400. , 1000. , 1.E07 , 1.E07 , 1.E07 , 350. ,       &\n+     &      1.E07 , 700. , 1.E07 , 1.E07 , 1.E07 , 1.E07 , 6500. ,      &\n+     &      6500. , 3000. , 2000. , 2000. , 1.E07 , 1.E07 , 6500. ,     &\n+     &      1.E07 , 400. , 300. , 500. , 600. , 1000. , 1.E07 , 1.E07 , &\n+     &      300. , 100. , 150. , 100. , 1700. , 100. , 1200. , 0. , 0. ,&\n+     &      200. , 400. , 200. , 350. , 300. , 500. , 450. , 0. ,       &\n+     &      1000. , 0. , 300. , 150. , 200. , 200. , 300. , 300. ,      &\n+     &      2000. , 400. , 800. , 1.E07 , 1.E07 , 1.E07 , 500. , 1.E07 ,&\n+     &      1000. , 1.E07 , 1.E07 , 1.E07 , 1.E07 , 1.E07 , 9000. ,     &\n+     &      6000. , 2000. , 2000. , 1.E07 , 1.E07 , 9000. , 1.E07 ,     &\n+     &      1.E07 , 400. , 600. , 800. , 1600. , 1.E07 , 1.E07 , 800. , &\n+     &      100. , 0. , 100. , 1500. , 100. , 1000. , 0. , 0. , 100. ,  &\n+     &      400. , 150. , 350. , 300. , 500. , 450. , 0. , 0. , 1000. , &\n+     &      300. , 150. , 200. , 200. , 300. , 300. , 2000. , 400. ,    &\n+     &      1000. , 1.E07 , 1.E07 , 1.E07 , 800. , 1.E07 , 1600. ,      &\n+     &      1.E07 , 1.E07 , 1.E07 , 1.E07 , 1.E07 , 1.E07 , 400. ,      &\n+     &      1.E07 , 800. , 1.E07 , 1.E07 , 9000. , 1.E07 , 2000. ,      &\n+     &      1000. , 600. , 2000. , 1200. , 1.E07 , 1.E07 , 800. , 100. ,&\n+     &      0. , 10. , 1500. , 100. , 1000. , 0. , 0. , 50. , 100. ,    &\n+     &      100. , 100. , 100. , 200. , 200. , 0. , 1000. , 100. ,      &\n+     &      600. , 3500. , 3500. , 3500. , 500. , 500. , 2000. , 400. , &\n+     &      3500. , 1.E07 , 100. , 120. , 100. , 200. , 150. , 1.E07 ,  &\n+     &      1.E07 , 80. , 1.E07 , 2000. , 2000. , 1500. , 2000. ,       &\n+     &      2000. , 1.E07 , 1.E07 , 2000. , 1.E07 , 1000. , 250. ,      &\n+     &      350. , 500. , 700. , 1.E07 , 1.E07 , 300. , 100. , 50. ,    &\n+     &      80. , 1500. , 100. , 1000. , 0. , 0. , 200. , 500. , 150. , &\n+     &      350. , 300. , 500. , 450. , 0. , 1000. , 0. , 300. , 150. , &\n+     &      200. , 200. , 300. , 300. , 2000. , 400. , 1000./\n+      END\n+      SUBROUTINE SHAVE\n+      USE MAIN1\n+      IF ( PERIOD ) THEN\n+ 9020    FORMAT ('(''*'',8X,''X'',13X,''Y'',4X,',I1,                    &\n+     &'(2X,3A4),4X,''ZELEV'',   4X,''ZHILL'',4X,''ZFLAG'',4X,''AVE'',5X,&\n+     &_______  ________  ________'')')\n+      ENDIF\n+      DO IGRP = 1 , NUMGRP\n+         IF ( IANPST(IGRP).EQ.1 ) THEN\n+            IF ( IANFRM(IGRP).EQ.0 ) THEN\n+               DO IREC = 1 , NUMREC\n+               ENDDO\n+            ENDIF\n+            DO IREC = 1 , NUMREC\n+               IF ( RECTYP(IREC).EQ.'DC' ) THEN\n+                  WRITE (IOUNIT,9082) SRCID(ISRF) , SRCTYP(ISRF) ,      &\n+     &                                AXS(ISRF) , AYS(ISRF) , AZS(ISRF) &\n+     &                                , (J,AXR(IREC+J-1),AYR(IREC+J-1), &\n+     &                                HCLMSG(IREC+J-1,IHNUM,IGRP,IAVE,  &\n+     &                                ITYP),J=1,36)\n+ 9082             FORMAT (' BOUNDARY RECEPTOR NETWORK OF SOURCE ID: ',  &\n+     &                    18(2(1X,I4,3X,F10.2,', ',F10.2,',',F13.5,A1,  &\n+     &                    '(',I8.8,')',7X),/),/)\n+               ENDIF\n+            ENDDO\n+         ENDIF\n+      ENDDO\n+      END\n+      USE MAIN1\n+      IF ( ICOUNT.NE.0 .AND. JCOUNT.NE.0 ) THEN\n+         DO J = 1 , JCOUNT\n+            DO I = 1 , ICOUNT\n+               IF ( ISET.GT.NREC ) THEN\n+                  GOTO 999\n+               ENDIF\n+            ENDDO\n+         ENDDO\n+      ENDIF\n+ 999  CONTINUE\n+      END"}]}