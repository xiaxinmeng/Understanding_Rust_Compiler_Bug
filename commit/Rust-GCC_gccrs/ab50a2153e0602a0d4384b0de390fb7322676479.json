{"sha": "ab50a2153e0602a0d4384b0de390fb7322676479", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI1MGEyMTUzZTA2MDJhMGQ0Mzg0YjBkZTM5MGZiNzMyMjY3NjQ3OQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-08-09T20:57:39Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-08-09T20:57:39Z"}, "message": "Fix usage of POW2 histogram\n\n\t* value-prof.c (gimple_divmod_values_to_profile): Do not\n\tinstrument MOD histogram if a value is not a SSA name.\n\t* gcc.dg/tree-prof/val-prof-9.c: New test.\n\nFrom-SVN: r239305", "tree": {"sha": "dbb4966972e8a87470d386651e906c5035e0aec7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbb4966972e8a87470d386651e906c5035e0aec7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab50a2153e0602a0d4384b0de390fb7322676479", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab50a2153e0602a0d4384b0de390fb7322676479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab50a2153e0602a0d4384b0de390fb7322676479", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab50a2153e0602a0d4384b0de390fb7322676479/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dcb1e1379ea52c33e5025d6e5842c43888888afa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb1e1379ea52c33e5025d6e5842c43888888afa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcb1e1379ea52c33e5025d6e5842c43888888afa"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "2b1d5ffb00ecb0541a910a9e0b2d751072a5107f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab50a2153e0602a0d4384b0de390fb7322676479/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab50a2153e0602a0d4384b0de390fb7322676479/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab50a2153e0602a0d4384b0de390fb7322676479", "patch": "@@ -1,3 +1,8 @@\n+2016-08-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* value-prof.c (gimple_divmod_values_to_profile): Do not\n+\tinstrument MOD histogram if a value is not a SSA name.\n+\n 2016-08-09  Martin Liska  <mliska@suse.cz>\n \n \t* value-prof.c (dump_histogram_value): Swap pow2 and non-pow2"}, {"sha": "55ff0819c0d8f9f17ac10e3f9e7d44b8ed0dbe09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab50a2153e0602a0d4384b0de390fb7322676479/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab50a2153e0602a0d4384b0de390fb7322676479/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab50a2153e0602a0d4384b0de390fb7322676479", "patch": "@@ -1,3 +1,7 @@\n+2016-08-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/tree-prof/val-prof-9.c: New test.\n+\n 2016-08-09  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/tree-prof/val-prof-8.c: New test."}, {"sha": "8fc23015938a29ca793276115e3a826aa4bf0238", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-9.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab50a2153e0602a0d4384b0de390fb7322676479/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab50a2153e0602a0d4384b0de390fb7322676479/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-9.c?ref=ab50a2153e0602a0d4384b0de390fb7322676479", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-options \"-O0 -fdump-tree-optimized\" } */\n+\n+int\n+main (int argc, char **argv)\n+{\n+  unsigned u = (argc - 1);\n+  int counter = 0;\n+\n+  for (unsigned i = 0; i < 100; i++)\n+  {\n+    counter += u % 16;\n+  }\n+\n+  return counter;\n+}\n+\n+/* autofdo does not do value profiling so far */\n+/* { dg-final-use-not-autofdo { scan-tree-dump-times \"__gcov_pow2_profiler\" 0 \"optimized\" } } */"}, {"sha": "a4653aa8ee98c173a8329b884b950e6e935d2382", "filename": "gcc/value-prof.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab50a2153e0602a0d4384b0de390fb7322676479/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab50a2153e0602a0d4384b0de390fb7322676479/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=ab50a2153e0602a0d4384b0de390fb7322676479", "patch": "@@ -1950,7 +1950,8 @@ gimple_divmod_values_to_profile (gimple *stmt, histogram_values *values)\n       /* For mod, check whether it is not often a noop (or replaceable by\n \t a few subtractions).  */\n       if (gimple_assign_rhs_code (stmt) == TRUNC_MOD_EXPR\n-\t  && TYPE_UNSIGNED (type))\n+\t  && TYPE_UNSIGNED (type)\n+\t  && TREE_CODE (divisor) == SSA_NAME)\n \t{\n           tree val;\n           /* Check for a special case where the divisor is power of 2.  */"}]}