{"sha": "f2919ef38aef3ddfde42e8858fa1b7098a1bba5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI5MTllZjM4YWVmM2RkZmRlNDJlODg1OGZhMWI3MDk4YTFiYmE1ZQ==", "commit": {"author": {"name": "David Jee", "email": "djee@redhat.com", "date": "2004-01-27T21:28:39Z"}, "committer": {"name": "David Jee", "email": "djee@gcc.gnu.org", "date": "2004-01-27T21:28:39Z"}, "message": "2004-01-27  David Jee  <djee@redhat.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n\t(addExposeFilter): Handle GtkFramePeer separately.\n\t(removeExposeFilter): Likewise.\n\nFrom-SVN: r76751", "tree": {"sha": "663615af36bdf3eb00d658269a176fca0d3de9a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/663615af36bdf3eb00d658269a176fca0d3de9a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2919ef38aef3ddfde42e8858fa1b7098a1bba5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2919ef38aef3ddfde42e8858fa1b7098a1bba5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2919ef38aef3ddfde42e8858fa1b7098a1bba5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2919ef38aef3ddfde42e8858fa1b7098a1bba5e/comments", "author": null, "committer": null, "parents": [{"sha": "39e453d7bdb901da17e5d92d4b9e3f75995431aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e453d7bdb901da17e5d92d4b9e3f75995431aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39e453d7bdb901da17e5d92d4b9e3f75995431aa"}], "stats": {"total": 68, "additions": 64, "deletions": 4}, "files": [{"sha": "70fead24cfe1a49bd2bf978da6cd4368e4bcd6e4", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2919ef38aef3ddfde42e8858fa1b7098a1bba5e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2919ef38aef3ddfde42e8858fa1b7098a1bba5e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f2919ef38aef3ddfde42e8858fa1b7098a1bba5e", "patch": "@@ -1,3 +1,9 @@\n+2004-01-27  David Jee  <djee@redhat.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n+\t(addExposeFilter): Handle GtkFramePeer separately.\n+\t(removeExposeFilter): Likewise.\n+\n 2004-01-27  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/net/protocol/http/Connection.java"}, {"sha": "62a97e255d061a938013aa70c0582fd9ee1ca7b1", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c", "status": "modified", "additions": 58, "deletions": 4, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2919ef38aef3ddfde42e8858fa1b7098a1bba5e/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2919ef38aef3ddfde42e8858fa1b7098a1bba5e/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c?ref=f2919ef38aef3ddfde42e8858fa1b7098a1bba5e", "patch": "@@ -602,11 +602,38 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_addExposeFilt\n   void *ptr = NSA_GET_PTR (env, obj);\n   jobject *gref = NSA_GET_GLOBAL_REF (env, obj);\n   g_assert (gref);\n+  GtkObject *filterobj;\n+  GtkWidget *vbox, *layout;\n+  GList *children;\n \n   gdk_threads_enter ();\n \n-  g_signal_handlers_block_by_func (GTK_OBJECT(ptr), *pre_event_handler, *gref);\n-  g_signal_connect( GTK_OBJECT(ptr), \"event\",\n+  // GtkFramePeer is built as a GtkLayout inside a GtkVBox inside a GtkWindow.\n+  // Events go to the GtkLayout layer, so we filter them there.\n+  if (GTK_IS_WINDOW(ptr))\n+    {\n+      children = gtk_container_get_children(GTK_CONTAINER(ptr));\n+      vbox = children->data;\n+      g_assert (GTK_IS_VBOX(vbox));\n+\n+      children = gtk_container_get_children(GTK_CONTAINER(vbox));\n+      do\n+      {\n+        layout = children->data;\n+        children = children->next;\n+      }\n+      while (!GTK_IS_LAYOUT (layout) && children != NULL);\n+      g_assert (GTK_IS_LAYOUT(layout));\n+\n+      filterobj = GTK_OBJECT(layout);\n+    }\n+  else\n+    {\n+      filterobj = GTK_OBJECT(ptr);\n+    }\n+\n+  g_signal_handlers_block_by_func (filterobj, *pre_event_handler, *gref);\n+  g_signal_connect( filterobj, \"event\",\n                     G_CALLBACK(filter_expose_event_handler), *gref);\n \n   gdk_threads_leave ();\n@@ -618,12 +645,39 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_removeExposeF\n   void *ptr = NSA_GET_PTR (env, obj);\n   jobject *gref = NSA_GET_GLOBAL_REF (env, obj);\n   g_assert (gref);\n+  GtkObject *filterobj;\n+  GtkWidget *vbox, *layout;\n+  GList *children;\n \n   gdk_threads_enter ();\n \n-  g_signal_handlers_disconnect_by_func (GTK_OBJECT(ptr),\n+  // GtkFramePeer is built as a GtkLayout inside a GtkVBox inside a GtkWindow.\n+  // Events go to the GtkLayout layer, so we filter them there.\n+  if (GTK_IS_WINDOW(ptr))\n+    {\n+      children = gtk_container_get_children(GTK_CONTAINER(ptr));\n+      vbox = children->data;\n+      g_assert (GTK_IS_VBOX(vbox));\n+\n+      children = gtk_container_get_children(GTK_CONTAINER(vbox));\n+      do\n+      {\n+        layout = children->data;\n+        children = children->next;\n+      }\n+      while (!GTK_IS_LAYOUT (layout) && children != NULL);\n+      g_assert (GTK_IS_LAYOUT(layout));\n+\n+      filterobj = GTK_OBJECT(layout);\n+    }\n+  else\n+    {\n+      filterobj = GTK_OBJECT(ptr);\n+    }\n+\n+  g_signal_handlers_disconnect_by_func (filterobj,\n                                         *filter_expose_event_handler, *gref);\n-  g_signal_handlers_unblock_by_func (GTK_OBJECT(ptr), *pre_event_handler, *gref);\n+  g_signal_handlers_unblock_by_func (filterobj, *pre_event_handler, *gref);\n \n   gdk_threads_leave ();\n }"}]}