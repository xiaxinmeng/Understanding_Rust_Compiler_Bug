{"sha": "74daec8cf211dc4bc322ec9ee5a6e992122ceb45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRkYWVjOGNmMjExZGM0YmMzMjJlYzllZTVhNmU5OTIxMjJjZWI0NQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2005-12-12T15:27:43Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2005-12-12T15:27:43Z"}, "message": "re PR java/25330 (A race condition in write_classfile)\n\n2005-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR java/25330\n\t* jcf-write.c (write_classfile): Use PID in temporary class\n\tfile. Save/restore errno when reporting error.\n\nFrom-SVN: r108411", "tree": {"sha": "8db93f717f2fce3d6e3be76fff3b14c7fda1c8a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8db93f717f2fce3d6e3be76fff3b14c7fda1c8a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74daec8cf211dc4bc322ec9ee5a6e992122ceb45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74daec8cf211dc4bc322ec9ee5a6e992122ceb45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74daec8cf211dc4bc322ec9ee5a6e992122ceb45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74daec8cf211dc4bc322ec9ee5a6e992122ceb45/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22e0395a104807767c1dda3e97ba8a44d435dee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22e0395a104807767c1dda3e97ba8a44d435dee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22e0395a104807767c1dda3e97ba8a44d435dee7"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "ec7f2ececb88c99e32bc34c9cb95849da178dc0c", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74daec8cf211dc4bc322ec9ee5a6e992122ceb45/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74daec8cf211dc4bc322ec9ee5a6e992122ceb45/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=74daec8cf211dc4bc322ec9ee5a6e992122ceb45", "patch": "@@ -1,3 +1,9 @@\n+2005-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR java/25330\n+\t* jcf-write.c (write_classfile): Use PID in temporary class\n+\tfile. Save/restore errno when reporting error.\n+\n 2005-12-10  Terry Laurenzo  <tlaurenzo@gmail.com>\n \n \tPR java/9861"}, {"sha": "caf57d1e8bc6ba5b3e7b8dbef1203a228f92bcea", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74daec8cf211dc4bc322ec9ee5a6e992122ceb45/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74daec8cf211dc4bc322ec9ee5a6e992122ceb45/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=74daec8cf211dc4bc322ec9ee5a6e992122ceb45", "patch": "@@ -3522,11 +3522,15 @@ write_classfile (tree clas)\n     {\n       FILE *stream;\n       char *temporary_file_name;\n+      char pid [sizeof (long) * 2 + 2];\n \n-      /* The .class file is initially written to a \".tmp\" file so that\n+      /* The .class file is initially written to a \".PID\" file so that\n \t if multiple instances of the compiler are running at once\n-\t they do not see partially formed class files. */\n-      temporary_file_name = concat (class_file_name, \".tmp\", NULL);\n+\t they do not see partially formed class files nor override\n+\t each other, which may happen in libjava with parallel build.\n+       */\n+      sprintf (pid, \".%lx\", (unsigned long) getpid ());\n+      temporary_file_name = concat (class_file_name, pid, NULL);\n       stream = fopen (temporary_file_name, \"wb\");\n       if (stream == NULL)\n \tfatal_error (\"can't open %s for writing: %m\", temporary_file_name);\n@@ -3548,7 +3552,9 @@ write_classfile (tree clas)\n \n       if (rename (temporary_file_name, class_file_name) == -1)\n \t{\n+\t  int errno_saved = errno;\n \t  remove (temporary_file_name);\n+\t  errno = errno_saved;\n \t  fatal_error (\"can't create %s: %m\", class_file_name);\n \t}\n       free (temporary_file_name);"}]}