{"sha": "cd0377a460db9d8b286e03a701227ebd62132c89", "node_id": "C_kwDOANBUbNoAKGNkMDM3N2E0NjBkYjlkOGIyODZlMDNhNzAxMjI3ZWJkNjIxMzJjODk", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-24T10:51:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-24T10:51:49Z"}, "message": "options: Fix up -fsanitize-coverage= [PR104158]\n\nThis is incremental patch to fix up -fsanitize-coverage= option\nhandling, allow -fno-sanitize-coverage= again, allow both\noptions together in one option or make\n-fsanitize-coverage=trace-pc -fsanitize-coverage=trace-cmp\nactually enable both suboptions rather than the last one.\n\n2022-01-24  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR sanitizer/104158\n\t* common.opt (flag_sanitize_coverage): Remove Variable entry.\n\t(fsanitize-coverage=): Remove RejectNegative property, add\n\tVar(flag_sanitize_coverage) and EnumSet properties.\n\t(trace-pc): Add Set(1) property.\n\t(trace-cmp): Add Set(2) property.\n\t* opts.cc (common_handle_option): Don't handle\n\tOPT_fsanitize_coverage_.\n\n\t* gcc.dg/spellcheck-options-24.c: New test.\n\t* gcc.dg/sancov/pr104158-1.c: New test.\n\t* gcc.dg/sancov/pr104158-2.c: New test.\n\t* gcc.dg/sancov/pr104158-3.c: New test.\n\t* gcc.dg/sancov/pr104158-4.c: New test.\n\t* gcc.dg/sancov/pr104158-5.c: New test.\n\t* gcc.dg/sancov/pr104158-6.c: New test.\n\t* gcc.dg/sancov/pr104158-7.c: New test.", "tree": {"sha": "7ea0b94866d513e5044b72655309e789dd9ffde2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ea0b94866d513e5044b72655309e789dd9ffde2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd0377a460db9d8b286e03a701227ebd62132c89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd0377a460db9d8b286e03a701227ebd62132c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd0377a460db9d8b286e03a701227ebd62132c89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd0377a460db9d8b286e03a701227ebd62132c89/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "385196adb52d854ebf4f9237e8a521a17c5524c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/385196adb52d854ebf4f9237e8a521a17c5524c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/385196adb52d854ebf4f9237e8a521a17c5524c5"}], "stats": {"total": 90, "additions": 79, "deletions": 11}, "files": [{"sha": "985e6ab6f81b3062a175e43b10526340468eef13", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=cd0377a460db9d8b286e03a701227ebd62132c89", "patch": "@@ -223,10 +223,6 @@ unsigned int flag_sanitize\n Variable\n unsigned int flag_sanitize_recover = (SANITIZE_UNDEFINED | SANITIZE_UNDEFINED_NONDEFAULT | SANITIZE_KERNEL_ADDRESS | SANITIZE_KERNEL_HWADDRESS) & ~(SANITIZE_UNREACHABLE | SANITIZE_RETURN)\n \n-; What the coverage sanitizers should instrument\n-Variable\n-unsigned int flag_sanitize_coverage\n-\n ; Flag whether a prefix has been added to dump_base_name\n Variable\n bool dump_base_name_prefixed = false\n@@ -1076,17 +1072,17 @@ Common Driver Joined\n Select what to sanitize.\n \n fsanitize-coverage=\n-Common Joined RejectNegative Enum(sanitize_coverage)\n+Common Joined Enum(sanitize_coverage) Var(flag_sanitize_coverage) EnumSet\n Select type of coverage sanitization.\n \n Enum\n Name(sanitize_coverage) Type(int)\n \n EnumValue\n-Enum(sanitize_coverage) String(trace-pc) Value(SANITIZE_COV_TRACE_PC)\n+Enum(sanitize_coverage) String(trace-pc) Value(SANITIZE_COV_TRACE_PC) Set(1)\n \n EnumValue\n-Enum(sanitize_coverage) String(trace-cmp) Value(SANITIZE_COV_TRACE_CMP)\n+Enum(sanitize_coverage) String(trace-cmp) Value(SANITIZE_COV_TRACE_CMP) Set(2)\n \n fasan-shadow-offset=\n Common Joined RejectNegative Var(common_deferred_options) Defer"}, {"sha": "fb906fa0aea22f3cc1360f6f1baf87b8b7e647c8", "filename": "gcc/opts.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Fopts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Fopts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.cc?ref=cd0377a460db9d8b286e03a701227ebd62132c89", "patch": "@@ -2621,10 +2621,6 @@ common_handle_option (struct gcc_options *opts,\n \t  &= ~(SANITIZE_UNDEFINED | SANITIZE_UNDEFINED_NONDEFAULT);\n       break;\n \n-    case OPT_fsanitize_coverage_:\n-      opts->x_flag_sanitize_coverage = value;\n-      break;\n-\n     case OPT_O:\n     case OPT_Os:\n     case OPT_Ofast:"}, {"sha": "2a3187982ca49b9be4b3e6f1133008c060221236", "filename": "gcc/testsuite/gcc.dg/sancov/pr104158-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-1.c?ref=cd0377a460db9d8b286e03a701227ebd62132c89", "patch": "@@ -0,0 +1,11 @@\n+/* PR sanitizer/104158 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize-coverage=trace-cmp -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump \"__sanitizer_cov_trace_cmp\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"__sanitizer_cov_trace_pc\" \"optimized\" } } */\n+\n+int\n+foo (int a, int b)\n+{\n+  return a == b;\n+}"}, {"sha": "b143504e29d674caa8e4480797935ba65c2f49a5", "filename": "gcc/testsuite/gcc.dg/sancov/pr104158-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-2.c?ref=cd0377a460db9d8b286e03a701227ebd62132c89", "patch": "@@ -0,0 +1,11 @@\n+/* PR sanitizer/104158 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize-coverage=trace-pc -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-not \"__sanitizer_cov_trace_cmp\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"__sanitizer_cov_trace_pc\" \"optimized\" } } */\n+\n+int\n+foo (int a, int b)\n+{\n+  return a == b;\n+}"}, {"sha": "e2a1cfbc6357658662b24cc27743a1be59f8e186", "filename": "gcc/testsuite/gcc.dg/sancov/pr104158-3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-3.c?ref=cd0377a460db9d8b286e03a701227ebd62132c89", "patch": "@@ -0,0 +1,11 @@\n+/* PR sanitizer/104158 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize-coverage=trace-cmp,trace-pc -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump \"__sanitizer_cov_trace_cmp\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"__sanitizer_cov_trace_pc\" \"optimized\" } } */\n+\n+int\n+foo (int a, int b)\n+{\n+  return a == b;\n+}"}, {"sha": "9c2e722436e19ce4a74743539d2406ff761cc24f", "filename": "gcc/testsuite/gcc.dg/sancov/pr104158-4.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-4.c?ref=cd0377a460db9d8b286e03a701227ebd62132c89", "patch": "@@ -0,0 +1,11 @@\n+/* PR sanitizer/104158 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize-coverage=trace-pc,trace-cmp -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump \"__sanitizer_cov_trace_cmp\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"__sanitizer_cov_trace_pc\" \"optimized\" } } */\n+\n+int\n+foo (int a, int b)\n+{\n+  return a == b;\n+}"}, {"sha": "5b130d0efbfc20ee38209eff2832655b1fbd2806", "filename": "gcc/testsuite/gcc.dg/sancov/pr104158-5.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-5.c?ref=cd0377a460db9d8b286e03a701227ebd62132c89", "patch": "@@ -0,0 +1,11 @@\n+/* PR sanitizer/104158 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize-coverage=trace-cmp -fsanitize-coverage=trace-pc -fno-sanitize-coverage=trace-cmp -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-not \"__sanitizer_cov_trace_cmp\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"__sanitizer_cov_trace_pc\" \"optimized\" } } */\n+\n+int\n+foo (int a, int b)\n+{\n+  return a == b;\n+}"}, {"sha": "3eed1d7206d03c97a34e41ce52d730a7a5f11824", "filename": "gcc/testsuite/gcc.dg/sancov/pr104158-6.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-6.c?ref=cd0377a460db9d8b286e03a701227ebd62132c89", "patch": "@@ -0,0 +1,11 @@\n+/* PR sanitizer/104158 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize-coverage=trace-cmp -fsanitize-coverage=trace-pc -fno-sanitize-coverage=trace-pc,trace-cmp -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-not \"__sanitizer_cov_trace_cmp\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"__sanitizer_cov_trace_pc\" \"optimized\" } } */\n+\n+int\n+foo (int a, int b)\n+{\n+  return a == b;\n+}"}, {"sha": "aacd23e9512be3e14a6f22fecf8e128e00884d23", "filename": "gcc/testsuite/gcc.dg/sancov/pr104158-7.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsancov%2Fpr104158-7.c?ref=cd0377a460db9d8b286e03a701227ebd62132c89", "patch": "@@ -0,0 +1,5 @@\n+/* PR sanitizer/104158 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize-coverage=trace-cmp,trace-cmp -fdump-tree-optimized\" } */\n+/* { dg-error \"invalid argument in option '-fsanitize-coverage=trace-cmp,trace-cmp'\" \"\" { target *-*-* } 0 } */\n+/* { dg-message \"'trace-cmp' specified multiple times in the same option\" \"\" { target *-*-* } 0 } */"}, {"sha": "1bd6cc29be77ee42104db3fcefd20c9062df76d5", "filename": "gcc/testsuite/gcc.dg/spellcheck-options-24.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd0377a460db9d8b286e03a701227ebd62132c89/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-24.c?ref=cd0377a460db9d8b286e03a701227ebd62132c89", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize-coverage=trace-pc,tracecmp\" } */\n+\n+/* { dg-error \"unrecognized argument in option '-fsanitize-coverage=trace-pc,tracecmp'\" \"\" { target *-*-* } 0 } */\n+/* { dg-message \"valid arguments to '-fsanitize-coverage=' are: trace-cmp trace-pc; did you mean 'trace-cmp'?\" \"\" { target *-*-* } 0 } */"}]}