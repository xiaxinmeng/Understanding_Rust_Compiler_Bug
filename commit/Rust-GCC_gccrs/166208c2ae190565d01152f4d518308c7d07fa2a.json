{"sha": "166208c2ae190565d01152f4d518308c7d07fa2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY2MjA4YzJhZTE5MDU2NWQwMTE1MmY0ZDUxODMwOGM3ZDA3ZmEyYQ==", "commit": {"author": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2010-10-31T14:16:22Z"}, "committer": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2010-10-31T14:16:22Z"}, "message": "pdp11.md: Change output operands to disallow immediate operands.\n\n* config/pdp11/pdp11.md: Change output operands to disallow\nimmediate operands.\n* config/pdp11/predicates.md (float_nonimm_operand): New.\n\nFrom-SVN: r166108", "tree": {"sha": "29f038621321e0a33380e0c619edc8beb8b6f873", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29f038621321e0a33380e0c619edc8beb8b6f873"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/166208c2ae190565d01152f4d518308c7d07fa2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/166208c2ae190565d01152f4d518308c7d07fa2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/166208c2ae190565d01152f4d518308c7d07fa2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/166208c2ae190565d01152f4d518308c7d07fa2a/comments", "author": null, "committer": null, "parents": [{"sha": "b034e301bb14b789ba8fa7b45a7c36b7c967efb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b034e301bb14b789ba8fa7b45a7c36b7c967efb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b034e301bb14b789ba8fa7b45a7c36b7c967efb6"}], "stats": {"total": 109, "additions": 58, "deletions": 51}, "files": [{"sha": "2f73390a501d7b60a50832ce4757947dac373a0b", "filename": "gcc/config/pdp11/pdp11.md", "status": "modified", "additions": 48, "deletions": 50, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/166208c2ae190565d01152f4d518308c7d07fa2a/gcc%2Fconfig%2Fpdp11%2Fpdp11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/166208c2ae190565d01152f4d518308c7d07fa2a/gcc%2Fconfig%2Fpdp11%2Fpdp11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.md?ref=166208c2ae190565d01152f4d518308c7d07fa2a", "patch": "@@ -282,15 +282,15 @@\n ;; Move instructions\n \n (define_insn \"movdi\"\n-  [(set (match_operand:DI 0 \"general_operand\" \"=g,rm,o\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=g,rm,o\")\n \t(match_operand:DI 1 \"general_operand\" \"m,r,a\"))]\n   \"\"\n   \"* return output_move_quad (operands);\"\n ;; what's the mose expensive code - say twice movsi = 16\n   [(set_attr \"length\" \"32,32,32\")])\n \n (define_insn \"movsi\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"=r,r,r,rm,m\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,rm,m\")\n \t(match_operand:SI 1 \"general_operand\" \"rN,IJ,K,m,r\"))]\n   \"\"\n   \"* return output_move_double (operands);\"\n@@ -299,7 +299,7 @@\n   [(set_attr \"length\" \"4,6,8,16,16\")])\n \n (define_insn \"movhi\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=rR,rR,Q,Q\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,rR,Q,Q\")\n \t(match_operand:HI 1 \"general_operand\" \"rRN,Qi,rRN,Qi\"))]\n   \"\"\n   \"*\n@@ -312,7 +312,7 @@\n   [(set_attr \"length\" \"2,4,4,6\")])\n \n (define_insn \"movqi\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=rR,rR,Q,Q\")\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=rR,rR,Q,Q\")\n \t(match_operand:QI 1 \"general_operand\" \"rRN,Qi,rRN,Qi\"))]\n   \"\"\n   \"*\n@@ -325,7 +325,7 @@\n   [(set_attr \"length\" \"2,4,4,6\")])\n \n (define_insn \"movdf\"\n-  [(set (match_operand:DF 0 \"float_operand\" \"=a,fR,a,Q,g\")\n+  [(set (match_operand:DF 0 \"float_nonimm_operand\" \"=a,fR,a,Q,g\")\n         (match_operand:DF 1 \"float_operand\" \"fFR,a,Q,a,g\"))]\n   \"TARGET_FPU\"\n   \"* if (which_alternative ==0 || which_alternative == 2)\n@@ -338,7 +338,7 @@\n   [(set_attr \"length\" \"2,2,10,10,32\")])\n \n (define_insn \"movsf\"\n-  [(set (match_operand:SF 0 \"float_operand\" \"=a,fR,a,Q,g\")\n+  [(set (match_operand:SF 0 \"float_nonimm_operand\" \"=a,fR,a,Q,g\")\n         (match_operand:SF 1 \"float_operand\" \"fFR,a,Q,a,g\"))]\n   \"TARGET_FPU\"\n   \"* if (which_alternative ==0 || which_alternative == 2)\n@@ -396,7 +396,7 @@\n ;;- truncation instructions\n \n (define_insn  \"truncdfsf2\"\n-  [(set (match_operand:SF 0 \"general_operand\" \"=f,R,Q\")\n+  [(set (match_operand:SF 0 \"float_nonimm_operand\" \"=f,R,Q\")\n \t(float_truncate:SF (match_operand:DF 1 \"register_operand\" \"f,a,a\")))]\n   \"TARGET_FPU\"\n   \"* if (which_alternative ==0)\n@@ -412,7 +412,7 @@\n \n \n (define_expand \"truncsihi2\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=g\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=g\")\n \t(subreg:HI \n \t  (match_operand:SI 1 \"general_operand\" \"or\")\n           0))]\n@@ -423,7 +423,7 @@\n ;;- zero extension instructions\n \n (define_insn \"zero_extendqihi2\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=rR,Q\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,Q\")\n \t(zero_extend:HI (match_operand:QI 1 \"general_operand\" \"0,0\")))]\n   \"\"\n   \"bic $0177400, %0\"\n@@ -446,7 +446,7 @@\n \n (define_insn \"extendsfdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,a,a\")\n-\t(float_extend:DF (match_operand:SF 1 \"general_operand\" \"f,R,Q\")))]\n+\t(float_extend:DF (match_operand:SF 1 \"float_operand\" \"f,R,Q\")))]\n   \"TARGET_FPU\"\n   \"@\n    /* nothing */\n@@ -485,13 +485,13 @@\n ;; unconditionally, and then match dependent on CPU type:\n \n (define_expand \"extendhisi2\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"=g\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=g\")\n \t(sign_extend:SI (match_operand:HI 1 \"general_operand\" \"g\")))]\n   \"\"\n   \"\")\n   \n (define_insn \"\" ; \"extendhisi2\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"=o,<,r\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=o,<,r\")\n \t(sign_extend:SI (match_operand:HI 1 \"general_operand\" \"g,g,g\")))]\n   \"TARGET_40_PLUS\"\n   \"*\n@@ -610,7 +610,7 @@\n \t\n ;; cut float to int\n (define_insn \"fix_truncdfsi2\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"=r,R,Q\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,R,Q\")\n \t(fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"a,a,a\"))))]\n   \"TARGET_FPU\"\n   \"* if (which_alternative ==0)\n@@ -631,7 +631,7 @@\n   [(set_attr \"length\" \"10,6,8\")])\n \n (define_insn \"fix_truncdfhi2\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=rR,Q\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,Q\")\n \t(fix:HI (fix:DF (match_operand:DF 1 \"register_operand\" \"a,a\"))))]\n   \"TARGET_FPU\"\n   \"{stcdi|movfi} %1, %0\"\n@@ -650,7 +650,7 @@\n   [(set_attr \"length\" \"2,4,10\")])\n \n (define_insn \"addsi3\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"=r,r,o,o,r,r,r,o,o,o\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,o,o,r,r,r,o,o,o\")\n \t(plus:SI (match_operand:SI 1 \"general_operand\" \"%0,0,0,0,0,0,0,0,0,0\")\n \t\t (match_operand:SI 2 \"general_operand\" \"r,o,r,o,I,J,K,I,J,K\")))]\n   \"\"\n@@ -700,7 +700,7 @@\n   [(set_attr \"length\" \"6,10,12,16,6,2,10,10,6,16\")])\n \n (define_insn \"addhi3\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=rR,rR,Q,Q\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,rR,Q,Q\")\n \t(plus:HI (match_operand:HI 1 \"general_operand\" \"%0,0,0,0\")\n \t\t (match_operand:HI 2 \"general_operand\" \"rRLM,Qi,rRLM,Qi\")))]\n   \"\"\n@@ -719,7 +719,7 @@\n   [(set_attr \"length\" \"2,4,4,6\")])\n \n (define_insn \"addqi3\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=rR,rR,Q,Q\")\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=rR,rR,Q,Q\")\n \t(plus:QI (match_operand:QI 1 \"general_operand\" \"%0,0,0,0\")\n \t\t (match_operand:QI 2 \"general_operand\" \"rRLM,Qi,rRLM,Qi\")))]\n   \"\"\n@@ -752,7 +752,7 @@\n   [(set_attr \"length\" \"2,4\")])\n \n (define_insn \"subsi3\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"=r,r,o,o\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,o,o\")\n         (minus:SI (match_operand:SI 1 \"general_operand\" \"0,0,0,0\")\n                   (match_operand:SI 2 \"general_operand\" \"r,o,r,o\")))]\n   \"\"\n@@ -786,7 +786,7 @@\n   [(set_attr \"length\" \"6,10,12,16\")])\n \n (define_insn \"subhi3\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=rR,rR,Q,Q\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,rR,Q,Q\")\n \t(minus:HI (match_operand:HI 1 \"general_operand\" \"0,0,0,0\")\n \t\t  (match_operand:HI 2 \"general_operand\" \"rR,Qi,rR,Qi\")))]\n   \"\"\n@@ -799,7 +799,7 @@\n   [(set_attr \"length\" \"2,4,4,6\")])\n \n (define_insn \"subqi3\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=rR,rR,Q,Q\")\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=rR,rR,Q,Q\")\n \t(minus:QI (match_operand:QI 1 \"general_operand\" \"0,0,0,0\")\n \t\t  (match_operand:QI 2 \"general_operand\" \"rR,Qi,rR,Qi\")))]\n   \"\"\n@@ -815,7 +815,7 @@\n ;; Bit-and on the pdp (like on the VAX) is done with a clear-bits insn.\n \n (define_expand \"and<mode>3\"\n-  [(set (match_operand:PDPint 0 \"general_operand\" \"\")\n+  [(set (match_operand:PDPint 0 \"nonimmediate_operand\" \"\")\n \t(and:PDPint (not:PDPint (match_operand:PDPint 1 \"general_operand\" \"\"))\n \t\t   (match_operand:PDPint 2 \"general_operand\" \"\")))]\n   \"\"\n@@ -841,7 +841,7 @@\n }\")\n \n (define_insn \"*bic<mode>\"\n-  [(set (match_operand:PDPint 0 \"general_operand\" \"=rR,rR,Q,Q\")\n+  [(set (match_operand:PDPint 0 \"nonimmediate_operand\" \"=rR,rR,Q,Q\")\n \t(and:PDPint\n \t     (not: PDPint (match_operand:PDPint 1 \"general_operand\" \"rR,Qi,rR,Qi\"))\n \t     (match_operand:PDPint 2 \"general_operand\" \"0,0,0,0\")))]\n@@ -851,7 +851,7 @@\n \n ;;- Bit set (inclusive or) instructions\n (define_insn \"iorsi3\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"=r,r,o,o,r,r,r,o,o,o\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,o,o,r,r,r,o,o,o\")\n         (ior:SI (match_operand:SI 1 \"general_operand\" \"%0,0,0,0,0,0,0,0,0,0\")\n                   (match_operand:SI 2 \"general_operand\" \"r,o,r,o,I,J,K,I,J,K\")))]\n   \"\"\n@@ -899,15 +899,15 @@\n   [(set_attr \"length\" \"4,8,8,12,4,4,8,6,6,12\")])\n \n (define_insn \"iorhi3\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=rR,rR,Q,Q\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,rR,Q,Q\")\n \t(ior:HI (match_operand:HI 1 \"general_operand\" \"%0,0,0,0\")\n \t\t(match_operand:HI 2 \"general_operand\" \"rR,Qi,rR,Qi\")))]\n   \"\"\n   \"bis %2, %0\"\n   [(set_attr \"length\" \"2,4,4,6\")])\n \n (define_insn \"iorqi3\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=rR,rR,Q,Q\")\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=rR,rR,Q,Q\")\n \t(ior:QI (match_operand:QI 1 \"general_operand\" \"%0,0,0,0\")\n \t\t(match_operand:QI 2 \"general_operand\" \"rR,Qi,rR,Qi\")))]\n   \"\"\n@@ -934,15 +934,13 @@\n \n       output_asm_insn (\\\"xor %2, %0\\\", operands);\n       output_asm_insn (\\\"xor %2, %0\\\", lateoperands);\n-\n-      return \\\"\\\";\n     }\n-\n+  return \\\"\\\";\n }\"\n   [(set_attr \"length\" \"4\")])\n \n (define_insn \"xorhi3\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=rR,Q\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,Q\")\n \t(xor:HI (match_operand:HI 1 \"general_operand\" \"%0,0\")\n \t\t(match_operand:HI 2 \"register_operand\" \"r,r\")))]\n   \"TARGET_40_PLUS\"\n@@ -952,14 +950,14 @@\n ;;- one complement instructions\n \n (define_insn \"one_cmplhi2\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=rR,Q\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,Q\")\n         (not:HI (match_operand:HI 1 \"general_operand\" \"0,0\")))]\n   \"\"\n   \"com %0\"\n   [(set_attr \"length\" \"2,4\")])\n \n (define_insn \"one_cmplqi2\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=rR,rR\")\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=rR,rR\")\n         (not:QI (match_operand:QI 1 \"general_operand\" \"0,g\")))]\n   \"\"\n   \"@\n@@ -991,7 +989,7 @@\n \n ;; asl \n (define_insn \"\" \n-  [(set (match_operand:HI 0 \"general_operand\" \"=rR,Q\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,Q\")\n \t(ashift:HI (match_operand:HI 1 \"general_operand\" \"0,0\")\n \t\t   (const_int 1)))]\n   \"\"\n@@ -1004,7 +1002,7 @@\n \n ;; asr\n (define_insn \"\" \n-  [(set (match_operand:HI 0 \"general_operand\" \"=rR,Q\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,Q\")\n \t(ashift:HI (match_operand:HI 1 \"general_operand\" \"0,0\")\n \t\t   (const_int -1)))]\n   \"\"\n@@ -1013,7 +1011,7 @@\n \n ;; lsr\n (define_insn \"\" \n-  [(set (match_operand:HI 0 \"general_operand\" \"=rR,Q\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,Q\")\n \t(lshiftrt:HI (match_operand:HI 1 \"general_operand\" \"0,0\")\n \t\t   (const_int 1)))]\n   \"\"\n@@ -1047,7 +1045,7 @@\n ;; shift by one cheap - so let's do that, if\n ;; space doesn't matter\n (define_insn \"\" \n-  [(set (match_operand:HI 0 \"general_operand\" \"=r\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r\")\n \t(ashift:HI (match_operand:HI 1 \"general_operand\" \"0\")\n \t\t   (match_operand:HI 2 \"expand_shift_operand\" \"O\")))]\n   \"! optimize_size\"\n@@ -1068,7 +1066,7 @@\n \n ;; aslb\n (define_insn \"\" \n-  [(set (match_operand:QI 0 \"general_operand\" \"=r,o\")\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,o\")\n \t(ashift:QI (match_operand:QI 1 \"general_operand\" \"0,0\")\n \t\t   (match_operand:HI 2 \"const_int_operand\" \"n,n\")))]\n   \"\"\n@@ -1090,7 +1088,7 @@\n \n ;;; asr \n ;(define_insn \"\" \n-;  [(set (match_operand:HI 0 \"general_operand\" \"=rR,Q\")\n+;  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,Q\")\n ;\t(ashiftrt:HI (match_operand:HI 1 \"general_operand\" \"0,0\")\n ;\t\t     (const_int 1)))]\n ;  \"\"\n@@ -1099,7 +1097,7 @@\n \n ;; asrb\n (define_insn \"\" \n-  [(set (match_operand:QI 0 \"general_operand\" \"=r,o\")\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,o\")\n \t(ashiftrt:QI (match_operand:QI 1 \"general_operand\" \"0,0\")\n \t\t     (match_operand:HI 2 \"const_int_operand\" \"n,n\")))]\n   \"\"\n@@ -1170,14 +1168,14 @@\n ;; absolute \n \n (define_insn \"absdf2\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=fR,Q\")\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=fR,Q\")\n \t(abs:DF (match_operand:DF 1 \"general_operand\" \"0,0\")))]\n   \"TARGET_FPU\"\n   \"{absd|absf} %0\"\n   [(set_attr \"length\" \"2,4\")])\n \n (define_insn \"abshi2\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=r,o\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,o\")\n \t(abs:HI (match_operand:HI 1 \"general_operand\" \"0,0\")))]\n   \"TARGET_ABSHI_BUILTIN\"\n   \"*\n@@ -1204,7 +1202,7 @@\n ; -- just a thought - don't have time to check \n ;\n ;(define_expand \"abshi2\"\n-;  [(match_operand:HI 0 \"general_operand\" \"\")\n+;  [(match_operand:HI 0 \"nonimmediate_operand\" \"\")\n ;   (match_operand:HI 1 \"general_operand\" \"\")]\n ;  \"\"\n ;  \"\n@@ -1234,7 +1232,7 @@\n ;; negate insns\n \n (define_insn \"negdf2\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=fR,Q\")\n+  [(set (match_operand:DF 0 \"float_nonimm_operand\" \"=fR,Q\")\n \t(neg:DF (match_operand:DF 1 \"register_operand\" \"0,0\")))]\n   \"TARGET_FPU\"\n   \"{negd|negf} %0\"\n@@ -1264,14 +1262,14 @@\n   [(set_attr \"length\" \"10\")])\n \n (define_insn \"neghi2\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"=rR,Q\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,Q\")\n \t(neg:HI (match_operand:HI 1 \"general_operand\" \"0,0\")))]\n   \"\"\n   \"neg %0\"\n   [(set_attr \"length\" \"2,4\")])\n \n (define_insn \"negqi2\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=rR,Q\")\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=rR,Q\")\n \t(neg:QI (match_operand:QI 1 \"general_operand\" \"0,0\")))]\n   \"\"\n   \"negb %0\"\n@@ -1358,7 +1356,7 @@\n (define_insn \"muldf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=a,a,a\")\n \t(mult:DF (match_operand:DF 1 \"register_operand\" \"%0,0,0\")\n-\t\t (match_operand:DF 2 \"general_operand\" \"fR,Q,F\")))]\n+\t\t (match_operand:DF 2 \"float_operand\" \"fR,Q,F\")))]\n   \"TARGET_FPU\"\n   \"{muld|mulf} %2, %0\"\n   [(set_attr \"length\" \"2,4,10\")])\n@@ -1372,15 +1370,15 @@\n (define_insn \"mulhi3\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=d,d\") ; multiply regs\n \t(mult:HI (match_operand:HI 1 \"register_operand\" \"%0,0\")\n-\t\t (match_operand:HI 2 \"general_operand\" \"rR,Qi\")))]\n+\t\t (match_operand:HI 2 \"float_operand\" \"rR,Qi\")))]\n   \"TARGET_40_PLUS\"\n   \"mul %2, %0\"\n   [(set_attr \"length\" \"2,4\")])\n \n ;; 32 bit result\n (define_expand \"mulhisi3\"\n   [(set (match_dup 3)\n-\t(match_operand:HI 1 \"general_operand\" \"g,g\"))\n+\t(match_operand:HI 1 \"nonimmediate_operand\" \"g,g\"))\n    (set (match_operand:SI 0 \"register_operand\" \"=r,r\") ; even numbered!\n \t(mult:SI (truncate:HI \n                   (match_dup 0))\n@@ -1426,7 +1424,7 @@\n   \"\")\n \n (define_insn \"\"\n-  [(set (subreg:HI (match_operand:SI 0 \"general_operand\" \"=r\") 0)\n+  [(set (subreg:HI (match_operand:SI 0 \"register_operand\" \"=r\") 0)\n \t(div:HI (match_operand:SI 1 \"general_operand\" \"0\")\n \t\t(match_operand:HI 2 \"general_operand\" \"g\")))]\n   \"TARGET_40_PLUS\"\n@@ -1443,7 +1441,7 @@\n   \"\")\n \n (define_insn \"\"\n-  [(set (subreg:HI (match_operand:SI 0 \"general_operand\" \"=r\") 2)\n+  [(set (subreg:HI (match_operand:SI 0 \"register_operand\" \"=r\") 2)\n \t(mod:HI (match_operand:SI 1 \"general_operand\" \"0\")\n \t\t(match_operand:HI 2 \"general_operand\" \"g\")))]\n   \"TARGET_40_PLUS\"\n@@ -1465,7 +1463,7 @@\n ;  \"\")\n ;\n ;(define_insn \"\"\n-;  [(set (subreg:HI (match_operand:SI 0 \"general_operand\" \"=r\") 0)\n+;  [(set (subreg:HI (match_operand:SI 0 \"register_operand\" \"=r\") 0)\n ;\t           (div:HI (match_operand:SI 1 \"general_operand\" \"0\")\n ;\t\t           (match_operand:HI 2 \"general_operand\" \"g\")))\n ;   (set (subreg:HI (match_dup 0) 2)"}, {"sha": "8b24ba4fc5c300d21922deb589ff2617d0a98138", "filename": "gcc/config/pdp11/predicates.md", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/166208c2ae190565d01152f4d518308c7d07fa2a/gcc%2Fconfig%2Fpdp11%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/166208c2ae190565d01152f4d518308c7d07fa2a/gcc%2Fconfig%2Fpdp11%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpredicates.md?ref=166208c2ae190565d01152f4d518308c7d07fa2a", "patch": "@@ -36,11 +36,20 @@\n   return (abs (sh) > 1 && abs (sh) <= 4);\n })\n \n-;; Accept anything general-operand accepts, except that registers must\n+;; Accept anything general_operand accepts, except that registers must\n ;; be FPU registers.\n (define_predicate \"float_operand\"\n   (if_then_else (match_code \"reg\")\n \t\t(ior \n \t\t (match_test \"REGNO_REG_CLASS (REGNO (op)) == LOAD_FPU_REGS\")\n \t\t (match_test \"REGNO_REG_CLASS (REGNO (op)) == NO_LOAD_FPU_REGS\"))\n \t\t(match_test \"general_operand (op, mode)\")))\n+\n+;; Accept anything nonimmediate_operand accepts, except that registers must\n+;; be FPU registers.\n+(define_predicate \"float_nonimm_operand\"\n+  (if_then_else (match_code \"reg\")\n+\t\t(ior \n+\t\t (match_test \"REGNO_REG_CLASS (REGNO (op)) == LOAD_FPU_REGS\")\n+\t\t (match_test \"REGNO_REG_CLASS (REGNO (op)) == NO_LOAD_FPU_REGS\"))\n+\t\t(match_test \"nonimmediate_operand (op, mode)\")))"}]}