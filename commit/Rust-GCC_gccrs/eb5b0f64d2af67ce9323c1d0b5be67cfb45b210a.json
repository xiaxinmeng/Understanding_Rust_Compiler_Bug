{"sha": "eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI1YjBmNjRkMmFmNjdjZTkzMjNjMWQwYjViZTY3Y2ZiNDViMjEwYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-05-15T19:19:48Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-05-15T19:19:48Z"}, "message": "mfdg.exp (additional_prunes): New global.\n\n\t* testsuite/lib/mfdg.exp (additional_prunes): New global.\n\t(dg-test): Clear additional_prunes before test is run.\n\t(dg-prune-output): New procedure.\n\t* testsuite/lib/libmudflap.exp (libmudflap-dg-test): Do not call\n\tprune_gcc_output.\n\t(libmudflap-dg-prune): New procedure.\n\t* testsuite/libmudflap.c++/pass57-frag.cxx (dg-prune-output):\n\tNew dg directive.\n\nFrom-SVN: r159440", "tree": {"sha": "cd11a9beea0a8034da21fa40bbe0e2f7d7924456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd11a9beea0a8034da21fa40bbe0e2f7d7924456"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4bdd0a60b27aa25d23cc19e4ab23163edf1a363b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bdd0a60b27aa25d23cc19e4ab23163edf1a363b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bdd0a60b27aa25d23cc19e4ab23163edf1a363b"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "0c24a037e64f0a199a4fc03ee05ef953709f0cf0", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a", "patch": "@@ -1,3 +1,14 @@\n+2010-05-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* testsuite/lib/mfdg.exp (additional_prunes): New global.\n+\t(dg-test): Clear additional_prunes before test is run.\n+\t(dg-prune-output): New procedure.\n+\t* testsuite/lib/libmudflap.exp (libmudflap-dg-test): Do not call\n+\tprune_gcc_output.\n+\t(libmudflap-dg-prune): New procedure.\n+\t* testsuite/libmudflap.c++/pass57-frag.cxx (dg-prune-output):\n+\tNew dg directive.\n+\n 2010-05-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR other/43620"}, {"sha": "588ecb5c86bd1ac1ece03287578815cf330089c3", "filename": "libmudflap/testsuite/lib/libmudflap.exp", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a/libmudflap%2Ftestsuite%2Flib%2Flibmudflap.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a/libmudflap%2Ftestsuite%2Flib%2Flibmudflap.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Ftestsuite%2Flib%2Flibmudflap.exp?ref=eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a", "patch": "@@ -187,7 +187,6 @@ proc libmudflap-dg-test { prog do_what extra_tool_flags } {\n     lappend options \"libs=$mfconfig_libs\"\n \n     set comp_output [libmudflap_target_compile \"$prog\" \"$output_file\" \"$compile_type\" $options];\n-    set comp_output [prune_gcc_output $comp_output ];\n \n     return [list $comp_output $output_file]\n }\n@@ -278,6 +277,22 @@ proc libmudflap-list-sourcefiles { } {\n }\n \n \n+proc libmudflap-dg-prune { system text } {\n+    global additional_prunes\n+\n+    set text [prune_gcc_output $text]\n+\n+    foreach p $additional_prunes {\n+\tif { [string length $p] > 0 } {\n+\t    # Following regexp matches a complete line containing $p.\n+\t    regsub -all \"(^|\\n)\\[^\\n\\]*$p\\[^\\n\\]*\" $text \"\" text\n+\t}\n+    }\n+\n+    return $text\n+}\n+\n+\n proc prune_gcc_output { text } {\n     regsub -all {(^|\\n)[^\\n]*ld: warning: libgcc_s[^\\n]*not found[^\\n]*try using[^\\n]*} $text \"\" text\n     regsub -all {(^|\\n)[^\\n]*In function.*pthread_create[^\\n]*} $text \"\" text"}, {"sha": "5f864745c01ded55ea133ef34e3ff3f893d65050", "filename": "libmudflap/testsuite/lib/mfdg.exp", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a/libmudflap%2Ftestsuite%2Flib%2Fmfdg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a/libmudflap%2Ftestsuite%2Flib%2Fmfdg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Ftestsuite%2Flib%2Fmfdg.exp?ref=eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a", "patch": "@@ -33,6 +33,7 @@ load_lib dg.exp\n proc dg-test { args } {\n     global dg-do-what-default dg-interpreter-batch-mode dg-linenum-format\n     global errorCode errorInfo\n+    global additional_prunes\n     global tool\n     global srcdir\t\t;# eg: /calvin/dje/build/gcc/./testsuite/\n     global host_triplet target_triplet\n@@ -91,6 +92,8 @@ proc dg-test { args } {\n     set dg-extra-tool-flags $default_extra_tool_flags\n     set dg-final-code \"\"\n \n+    set additional_prunes \"\"\n+\n     # `dg-output-text' is a list of two elements: pass/fail and text.\n     # Leave second element off for now (indicates \"don't perform test\")\n     set dg-output-text \"P\"\n@@ -334,7 +337,6 @@ proc dg-test { args } {\n }\n \n \n-\n # \n # Indicate that this test case is to be rerun several times.  This\n # is useful if it is nondeterministic.  This applies to rerunning the\n@@ -346,3 +348,18 @@ proc dg-repetitions { line value } {\n     upvar dg-repetitions repetitions\n     set repetitions $value\n }\n+\n+\n+# Prune any messages matching ARGS[1] (a regexp) from test output.\n+proc dg-prune-output { args } {\n+    global additional_prunes\n+\n+    if { [llength $args] != 2 } {\n+\terror \"[lindex $args 1]: need one argument\"\n+\treturn\n+    }\n+\n+    lappend additional_prunes [lindex $args 1]\n+}\n+\n+set additional_prunes \"\""}, {"sha": "8be1a2d1113d19707ef6f59905d0bd00cdc96551", "filename": "libmudflap/testsuite/libmudflap.c++/pass57-frag.cxx", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a/libmudflap%2Ftestsuite%2Flibmudflap.c%2B%2B%2Fpass57-frag.cxx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a/libmudflap%2Ftestsuite%2Flibmudflap.c%2B%2B%2Fpass57-frag.cxx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Ftestsuite%2Flibmudflap.c%2B%2B%2Fpass57-frag.cxx?ref=eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a", "patch": "@@ -23,3 +23,6 @@ int main ()\n {\n   return 0;\n }\n+\n+/* Ignore a warning that is irrelevant to the purpose of this test.  */\n+/* { dg-prune-output \".*mudflap cannot track unknown size extern.*\" } */"}]}