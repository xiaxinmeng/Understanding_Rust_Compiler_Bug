{"sha": "f6fc79d0c90ff3a924d272eff74b32656bdf5481", "node_id": "C_kwDOANBUbNoAKGY2ZmM3OWQwYzkwZmYzYTkyNGQyNzJlZmY3NGIzMjY1NmJkZjU0ODE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-09T00:17:38Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-09T00:17:38Z"}, "message": "Daily bump.", "tree": {"sha": "66b5b0c678767402b841158dbc0f5cb5df615245", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66b5b0c678767402b841158dbc0f5cb5df615245"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6fc79d0c90ff3a924d272eff74b32656bdf5481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6fc79d0c90ff3a924d272eff74b32656bdf5481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6fc79d0c90ff3a924d272eff74b32656bdf5481", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6fc79d0c90ff3a924d272eff74b32656bdf5481/comments", "author": null, "committer": null, "parents": [{"sha": "53678f7f794aa3ff99d9df87c02abe1caf4ec1d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53678f7f794aa3ff99d9df87c02abe1caf4ec1d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53678f7f794aa3ff99d9df87c02abe1caf4ec1d3"}], "stats": {"total": 132, "additions": 131, "deletions": 1}, "files": [{"sha": "8cd8d075ac48014aaa10d3e8ed058361c039d2e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fc79d0c90ff3a924d272eff74b32656bdf5481/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fc79d0c90ff3a924d272eff74b32656bdf5481/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6fc79d0c90ff3a924d272eff74b32656bdf5481", "patch": "@@ -1,3 +1,61 @@\n+2023-02-08  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* doc/include/gpl_v3.texi: Change fsf.org to www.fsf.org.\n+\n+2023-02-08  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n+\n+\tPR target/108505\n+\t* config.gcc (tm_mlib_file): Define new variable.\n+\n+2023-02-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/108692\n+\t* tree-vect-patterns.cc (vect_widened_op_tree): If rhs_code is\n+\twidened_code which is different from code, don't call\n+\tvect_look_through_possible_promotion but instead just check op is\n+\tSSA_NAME with integral type for which vect_is_simple_use is true\n+\tand call set_op on this_unprom.\n+\n+2023-02-08  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\t* config/aarch64/aarch64-protos.h (aarch_ra_sign_key): Remove\n+\tdeclaration.\n+\t* config/aarch64/aarch64.cc (aarch_ra_sign_key): Remove\n+\tdefinition.\n+\t* config/aarch64/aarch64.opt (aarch64_ra_sign_key): Rename\n+\tto 'aarch_ra_sign_key'.\n+\t* config/arm/aarch-common.cc (aarch_ra_sign_key): Remove\n+\tdeclaration.\n+\t* config/arm/arm-protos.h (aarch_ra_sign_key): Likewise.\n+\t* config/arm/arm.cc (enum aarch_key_type): Remove definition.\n+\t* config/arm/arm.opt: Define.\n+\n+2023-02-08  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/108316\n+\t* tree-vect-stmts.cc (get_load_store_type): When using\n+\tinternal functions for gather/scatter, make sure that the type\n+\tof the offset argument is consistent with the offset vector type.\n+\n+2023-02-08  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tRevert:\n+\t2023-02-07  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* ira.h (struct ira_reg_equiv_s): Add new field caller_save_p.\n+\t* ira.cc (validate_equiv_mem): Check memref address variance.\n+\t(update_equiv_regs): Define caller save equivalence for\n+\tvalid_combine.\n+\t(setup_reg_equiv): Clear defined_p flag for caller save equivalence.\n+\t* lra-constraints.cc (lra_copy_reg_equiv): Add new arg\n+\tcall_save_p.  Use caller save equivalence depending on the arg.\n+\t(split_reg): Adjust the call.\n+\n+2023-02-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree.def (SAD_EXPR): Remove outdated comment about missing\n+\tWIDEN_MINUS_EXPR.\n+\n 2023-02-07  Marek Polacek  <polacek@redhat.com>\n \n \t* doc/invoke.texi: Update -fchar8_t documentation."}, {"sha": "afa750637c5539542f446b1cd984410a6fc5e1b3", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fc79d0c90ff3a924d272eff74b32656bdf5481/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fc79d0c90ff3a924d272eff74b32656bdf5481/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=f6fc79d0c90ff3a924d272eff74b32656bdf5481", "patch": "@@ -1 +1 @@\n-20230208\n+20230209"}, {"sha": "dcd1cf55389301b73ea6b982a318e747c9522ff5", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fc79d0c90ff3a924d272eff74b32656bdf5481/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fc79d0c90ff3a924d272eff74b32656bdf5481/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=f6fc79d0c90ff3a924d272eff74b32656bdf5481", "patch": "@@ -1,3 +1,10 @@\n+2023-02-08  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/108704\n+\t* state-purge.cc (state_purge_per_decl::process_point_backwards):\n+\tDon't stop processing the decl if it's fully overwritten by\n+\tthis stmt if it's also used by this stmt.\n+\n 2023-02-07  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/108661"}, {"sha": "498c33124d16adacd00a14d94ff48dd778d015a9", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fc79d0c90ff3a924d272eff74b32656bdf5481/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fc79d0c90ff3a924d272eff74b32656bdf5481/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=f6fc79d0c90ff3a924d272eff74b32656bdf5481", "patch": "@@ -1,3 +1,10 @@\n+2023-02-08  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-typeck.cc (check_constexpr_init): Remove argument\n+\tnull_pointer_constant.  Only check pointer initializers for being\n+\tnull.\n+\t(digest_init): Update calls to check_constexpr_init.\n+\n 2023-02-02  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-typeck.cc (build_binary_op): Allow comparisons between"}, {"sha": "99ee582a87f09c414a847bf4fdec0e600ea531fb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fc79d0c90ff3a924d272eff74b32656bdf5481/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fc79d0c90ff3a924d272eff74b32656bdf5481/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f6fc79d0c90ff3a924d272eff74b32656bdf5481", "patch": "@@ -1,3 +1,9 @@\n+2023-02-08  Steve Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/103259\n+\t* resolve.cc (resolve_common_vars): Avoid NULL pointer dereference\n+\twhen a symbol's location is not set.\n+\n 2023-02-07  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/95107"}, {"sha": "81eeb459c3f6bcebe07ddec698d1839cc95de803", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fc79d0c90ff3a924d272eff74b32656bdf5481/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fc79d0c90ff3a924d272eff74b32656bdf5481/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6fc79d0c90ff3a924d272eff74b32656bdf5481", "patch": "@@ -1,3 +1,55 @@\n+2023-02-08  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/c2x-constexpr-1.c: Test initialization of constexpr\n+\tpointers with null values that are not null pointer constants.\n+\t* gcc.dg/c2x-constexpr-3.c: Test initialization of constexpr\n+\tpointers with non-null values, not with null values that are not\n+\tnull pointer constants.\n+\n+2023-02-08  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gcc.dg/torture/pr100398.c: Limit to lra targets.\n+\t* gcc.dg/pr100590.c: Ditto.\n+\n+2023-02-08  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/108704\n+\t* gcc.dg/analyzer/uninit-7.c: New test.\n+\t* gcc.dg/analyzer/uninit-pr108704.c: New test.\n+\n+2023-02-08  Steve Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/103259\n+\t* gfortran.dg/pr103259.f90: New test.\n+\n+2023-02-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/108692\n+\t* gcc.dg/pr108692.c: New test.\n+\n+2023-02-08  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* objc/execute/execute.exp: Load objc-dg.exp.\n+\n+2023-02-08  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/108316\n+\t* gcc.dg/vect/pr108316.c: New test.\n+\n+2023-02-08  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tRevert:\n+\t2023-02-08  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* gcc.target/i386/pr103541.c: New.\n+\n+2023-02-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/108525\n+\t* g++.dg/cpp23/static-operator-call5.C: Move PR108525 testcase\n+\tincorrectly applied into PR108526 testcase ...\n+\t* g++.dg/cpp23/static-operator-call6.C: ... here.  New test.\n+\n 2023-02-07  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/108661"}]}