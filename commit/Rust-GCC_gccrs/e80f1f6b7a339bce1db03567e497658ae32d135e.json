{"sha": "e80f1f6b7a339bce1db03567e497658ae32d135e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgwZjFmNmI3YTMzOWJjZTFkYjAzNTY3ZTQ5NzY1OGFlMzJkMTM1ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-26T19:02:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-26T19:02:29Z"}, "message": "testsuite: Fix TBAA in sse*and*p[sd]*.c tests\n\nThis patch drops the no-strict-aliasing hack in m128-check.h and instead\nensures the tests read objects with the right dynamic type.\n\n2021-01-26  Jakub Jelinek  <jakub@redhat.com>\n\n\t* gcc.target/powerpc/m128-check.h (CHECK_EXP): Remove\n\toptimize (\"no-strict-aliasing\") attribute.\n\t* gcc.target/powerpc/sse-andnps-1.c (TEST): Copy e into float[4]\n\tarray to avoid violating TBAA.\n\t* gcc.target/powerpc/sse2-andpd-1.c (TEST): Copy e.d into double[2]\n\tarray to avoid violating TBAA.\n\t* gcc.target/powerpc/sse-andps-1.c (TEST): Copy e.f into float[4]\n\tarray to avoid violating TBAA.\n\t* gcc.target/powerpc/sse2-andnpd-1.c (TEST): Copy e into double[2]\n\tarray to avoid violating TBAA.", "tree": {"sha": "c3739665ccdd1e5ac960afcb713871113fa6f9f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3739665ccdd1e5ac960afcb713871113fa6f9f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e80f1f6b7a339bce1db03567e497658ae32d135e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e80f1f6b7a339bce1db03567e497658ae32d135e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e80f1f6b7a339bce1db03567e497658ae32d135e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e80f1f6b7a339bce1db03567e497658ae32d135e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c41bcc59c237aaa629e271f88c20a90cb8e0af5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c41bcc59c237aaa629e271f88c20a90cb8e0af5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c41bcc59c237aaa629e271f88c20a90cb8e0af5"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "a3088e0c2475708fa59b5ee8039eb36300b4fdf8", "filename": "gcc/testsuite/gcc.target/powerpc/m128-check.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80f1f6b7a339bce1db03567e497658ae32d135e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fm128-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80f1f6b7a339bce1db03567e497658ae32d135e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fm128-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fm128-check.h?ref=e80f1f6b7a339bce1db03567e497658ae32d135e", "patch": "@@ -85,7 +85,6 @@ typedef union\n \n #define CHECK_EXP(UNION_TYPE, VALUE_TYPE, FMT)\t\t\\\n static int\t\t\t\t\t\t\\\n-__attribute__((optimize (\"no-strict-aliasing\")))\t\\\n __attribute__((noinline, unused))\t\t\t\\\n check_##UNION_TYPE (UNION_TYPE u, const VALUE_TYPE *v)\t\\\n {\t\t\t\t\t\t\t\\"}, {"sha": "9851621de374dba0d0d231791a43fa6ac66abcd9", "filename": "gcc/testsuite/gcc.target/powerpc/sse-andnps-1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80f1f6b7a339bce1db03567e497658ae32d135e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse-andnps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80f1f6b7a339bce1db03567e497658ae32d135e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse-andnps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse-andnps-1.c?ref=e80f1f6b7a339bce1db03567e497658ae32d135e", "patch": "@@ -30,6 +30,7 @@ TEST (void)\n   int source1[4]={34, 545, 955, 67};\n   int source2[4]={67, 4, 57, 897};\n   int e[4];\n+  float f[4];\n    \n   s1.x = _mm_loadu_ps ((float *)source1);\n   s2.x = _mm_loadu_ps ((float *)source2);\n@@ -39,7 +40,8 @@ TEST (void)\n   e[1] = (~source1[1]) & source2[1];\n   e[2] = (~source1[2]) & source2[2];\n   e[3] = (~source1[3]) & source2[3];\n+  __builtin_memcpy (f, e, sizeof (f));\n \n-  if (check_union128 (u, (float *)e))\n+  if (check_union128 (u, f))\n     abort ();\n }"}, {"sha": "3a636669deedcce16f1bdecd92b34dd466505474", "filename": "gcc/testsuite/gcc.target/powerpc/sse-andps-1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80f1f6b7a339bce1db03567e497658ae32d135e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse-andps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80f1f6b7a339bce1db03567e497658ae32d135e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse-andps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse-andps-1.c?ref=e80f1f6b7a339bce1db03567e497658ae32d135e", "patch": "@@ -32,6 +32,7 @@ TEST (void)\n     float f[4];\n     int   i[4];\n   }source1, source2, e;\n+  float f[4];\n \n   s1.x = _mm_set_ps (34, 545, 955, 67);\n   s2.x = _mm_set_ps (67, 4, 57, 897);\n@@ -45,7 +46,8 @@ TEST (void)\n   e.i[1] = source1.i[1] & source2.i[1];\n   e.i[2] = source1.i[2] & source2.i[2];\n   e.i[3] = source1.i[3] & source2.i[3];\n+  __builtin_memcpy (f, e.f, sizeof (f));\n \n-  if (check_union128 (u, e.f))\n+  if (check_union128 (u, f))\n     abort ();\n }"}, {"sha": "747bcc9387a46fffec013ecbaf83a86aa9ea401e", "filename": "gcc/testsuite/gcc.target/powerpc/sse2-andnpd-1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80f1f6b7a339bce1db03567e497658ae32d135e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse2-andnpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80f1f6b7a339bce1db03567e497658ae32d135e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse2-andnpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse2-andnpd-1.c?ref=e80f1f6b7a339bce1db03567e497658ae32d135e", "patch": "@@ -28,14 +28,16 @@ TEST (void)\n   long long source1[2]={34545, 95567};\n   long long source2[2]={674, 57897};\n   long long e[2];\n+  double d[2];\n    \n   s1.x = _mm_loadu_pd ((double *)source1);\n   s2.x = _mm_loadu_pd ((double *)source2);\n   u.x = test (s1.x, s2.x); \n    \n   e[0] = (~source1[0]) & source2[0];\n   e[1] = (~source1[1]) & source2[1];\n+  __builtin_memcpy (d, e, sizeof (d));\n \n-  if (check_union128d (u, (double *)e))\n+  if (check_union128d (u, d))\n     abort ();\n }"}, {"sha": "5034bf9f5faba0d51d5dbe10251c357eca4a8818", "filename": "gcc/testsuite/gcc.target/powerpc/sse2-andpd-1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80f1f6b7a339bce1db03567e497658ae32d135e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse2-andpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80f1f6b7a339bce1db03567e497658ae32d135e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse2-andpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse2-andpd-1.c?ref=e80f1f6b7a339bce1db03567e497658ae32d135e", "patch": "@@ -31,6 +31,7 @@ TEST (void)\n     double d[2];\n     long long ll[2];\n   }source1, source2, e;\n+  double d[2];\n    \n   s1.x = _mm_set_pd (34545, 95567);\n   s2.x = _mm_set_pd (674, 57897);\n@@ -42,7 +43,8 @@ TEST (void)\n    \n   e.ll[0] = source1.ll[0] & source2.ll[0];\n   e.ll[1] = source1.ll[1] & source2.ll[1];\n+  __builtin_memcpy (d, e.d, sizeof (d));\n \n-  if (check_union128d (u, e.d))\n+  if (check_union128d (u, d))\n     abort ();\n }"}]}