{"sha": "015337d35b4b3d5688162d24866b58a16a152f56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE1MzM3ZDM1YjRiM2Q1Njg4MTYyZDI0ODY2YjU4YTE2YTE1MmY1Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-01-19T13:21:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-01-19T13:21:04Z"}, "message": "re PR debug/65779 (undefined local symbol on powerpc [regression])\n\n\tPR debug/65779\n\t* shrink-wrap.c: Include valtrack.h.\n\t(move_insn_for_shrink_wrap): Add DEBUG argument.  If\n\tMAY_HAVE_DEBUG_INSNS, call dead_debug_add on DEBUG_INSNs\n\tin between insn and where it will be moved to.  Call\n\tdead_debug_insert_temp.\n\t(prepare_shrink_wrap): Adjust caller.  Call dead_debug_local_init\n\tfirst and dead_debug_local_finish at the end.\n\tFor uses and defs bitmap, handle all regs in between REGNO and\n\tEND_REGNO, not just the first one.\n\n\t* gcc.dg/pr65779.c: New test.\n\nFrom-SVN: r232558", "tree": {"sha": "f9945e294d3a755495e9d717f36d83f5bf2e5f47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9945e294d3a755495e9d717f36d83f5bf2e5f47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/015337d35b4b3d5688162d24866b58a16a152f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/015337d35b4b3d5688162d24866b58a16a152f56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/015337d35b4b3d5688162d24866b58a16a152f56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/015337d35b4b3d5688162d24866b58a16a152f56/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2c768b6440a76c5850ce9fcf5e4e7c395f750db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2c768b6440a76c5850ce9fcf5e4e7c395f750db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2c768b6440a76c5850ce9fcf5e4e7c395f750db"}], "stats": {"total": 100, "additions": 96, "deletions": 4}, "files": [{"sha": "dfc2174dc8666690d67238a653842cb6278b37fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/015337d35b4b3d5688162d24866b58a16a152f56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/015337d35b4b3d5688162d24866b58a16a152f56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=015337d35b4b3d5688162d24866b58a16a152f56", "patch": "@@ -1,3 +1,16 @@\n+2016-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/65779\n+\t* shrink-wrap.c: Include valtrack.h.\n+\t(move_insn_for_shrink_wrap): Add DEBUG argument.  If\n+\tMAY_HAVE_DEBUG_INSNS, call dead_debug_add on DEBUG_INSNs\n+\tin between insn and where it will be moved to.  Call\n+\tdead_debug_insert_temp.\n+\t(prepare_shrink_wrap): Adjust caller.  Call dead_debug_local_init\n+\tfirst and dead_debug_local_finish at the end.\n+\tFor uses and defs bitmap, handle all regs in between REGNO and\n+\tEND_REGNO, not just the first one.\n+\n 2016-01-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69352"}, {"sha": "fe795196709810920b20a4ac2610687e8693149f", "filename": "gcc/shrink-wrap.c", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/015337d35b4b3d5688162d24866b58a16a152f56/gcc%2Fshrink-wrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/015337d35b4b3d5688162d24866b58a16a152f56/gcc%2Fshrink-wrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fshrink-wrap.c?ref=015337d35b4b3d5688162d24866b58a16a152f56", "patch": "@@ -39,6 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"shrink-wrap.h\"\n #include \"regcprop.h\"\n #include \"rtl-iter.h\"\n+#include \"valtrack.h\"\n \n \n /* Return true if INSN requires the stack frame to be set up.\n@@ -149,7 +150,8 @@ static bool\n move_insn_for_shrink_wrap (basic_block bb, rtx_insn *insn,\n \t\t\t   const HARD_REG_SET uses,\n \t\t\t   const HARD_REG_SET defs,\n-\t\t\t   bool *split_p)\n+\t\t\t   bool *split_p,\n+\t\t\t   struct dead_debug_local *debug)\n {\n   rtx set, src, dest;\n   bitmap live_out, live_in, bb_uses, bb_defs;\n@@ -158,6 +160,8 @@ move_insn_for_shrink_wrap (basic_block bb, rtx_insn *insn,\n   unsigned int end_sregno = FIRST_PSEUDO_REGISTER;\n   basic_block next_block;\n   edge live_edge;\n+  rtx_insn *dinsn;\n+  df_ref def;\n \n   /* Look for a simple register assignment.  We don't use single_set here\n      because we can't deal with any CLOBBERs, USEs, or REG_UNUSED secondary\n@@ -302,6 +306,20 @@ move_insn_for_shrink_wrap (basic_block bb, rtx_insn *insn,\n      move it as far as we can.  */\n   do\n     {\n+      if (MAY_HAVE_DEBUG_INSNS)\n+\t{\n+\t  FOR_BB_INSNS_REVERSE (bb, dinsn)\n+\t    if (DEBUG_INSN_P (dinsn))\n+\t      {\n+\t\tdf_ref use;\n+\t\tFOR_EACH_INSN_USE (use, dinsn)\n+\t\t  if (refers_to_regno_p (dregno, end_dregno,\n+\t\t\t\t\t DF_REF_REG (use), (rtx *) NULL))\n+\t\t    dead_debug_add (debug, use, DF_REF_REGNO (use));\n+\t      }\n+\t    else if (dinsn == insn)\n+\t      break;\n+\t}\n       live_out = df_get_live_out (bb);\n       live_in = df_get_live_in (next_block);\n       bb = next_block;\n@@ -384,6 +402,12 @@ move_insn_for_shrink_wrap (basic_block bb, rtx_insn *insn,\n \tSET_REGNO_REG_SET (bb_uses, i);\n     }\n \n+  /* Insert debug temps for dead REGs used in subsequent debug insns.  */\n+  if (debug->used && !bitmap_empty_p (debug->used))\n+    FOR_EACH_INSN_DEF (def, insn)\n+      dead_debug_insert_temp (debug, DF_REF_REGNO (def), insn,\n+\t\t\t      DEBUG_TEMP_BEFORE_WITH_VALUE);\n+\n   emit_insn_after (PATTERN (insn), bb_note (bb));\n   delete_insn (insn);\n   return true;\n@@ -404,6 +428,8 @@ prepare_shrink_wrap (basic_block entry_block)\n   HARD_REG_SET uses, defs;\n   df_ref def, use;\n   bool split_p = false;\n+  unsigned int i;\n+  struct dead_debug_local debug;\n \n   if (JUMP_P (BB_END (entry_block)))\n     {\n@@ -414,29 +440,35 @@ prepare_shrink_wrap (basic_block entry_block)\n       copyprop_hardreg_forward_bb_without_debug_insn (entry_block);\n     }\n \n+  dead_debug_local_init (&debug, NULL, NULL);\n   CLEAR_HARD_REG_SET (uses);\n   CLEAR_HARD_REG_SET (defs);\n+\n   FOR_BB_INSNS_REVERSE_SAFE (entry_block, insn, curr)\n     if (NONDEBUG_INSN_P (insn)\n \t&& !move_insn_for_shrink_wrap (entry_block, insn, uses, defs,\n-\t\t\t\t       &split_p))\n+\t\t\t\t       &split_p, &debug))\n       {\n \t/* Add all defined registers to DEFs.  */\n \tFOR_EACH_INSN_DEF (def, insn)\n \t  {\n \t    x = DF_REF_REG (def);\n \t    if (REG_P (x) && HARD_REGISTER_P (x))\n-\t      SET_HARD_REG_BIT (defs, REGNO (x));\n+\t      for (i = REGNO (x); i < END_REGNO (x); i++)\n+\t\tSET_HARD_REG_BIT (defs, i);\n \t  }\n \n \t/* Add all used registers to USESs.  */\n \tFOR_EACH_INSN_USE (use, insn)\n \t  {\n \t    x = DF_REF_REG (use);\n \t    if (REG_P (x) && HARD_REGISTER_P (x))\n-\t      SET_HARD_REG_BIT (uses, REGNO (x));\n+\t      for (i = REGNO (x); i < END_REGNO (x); i++)\n+\t\tSET_HARD_REG_BIT (uses, i);\n \t  }\n       }\n+\n+  dead_debug_local_finish (&debug, NULL);\n }\n \n /* Return whether basic block PRO can get the prologue.  It can not if it"}, {"sha": "c0dfcf1cb425f13f8bfaa35a1cd93803b72129e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/015337d35b4b3d5688162d24866b58a16a152f56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/015337d35b4b3d5688162d24866b58a16a152f56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=015337d35b4b3d5688162d24866b58a16a152f56", "patch": "@@ -1,3 +1,8 @@\n+2016-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/65779\n+\t* gcc.dg/pr65779.c: New test.\n+\n 2016-01-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69352"}, {"sha": "7d5c522d042e59582d920a7830e17f97d745ca3e", "filename": "gcc/testsuite/gcc.dg/pr65779.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/015337d35b4b3d5688162d24866b58a16a152f56/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65779.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/015337d35b4b3d5688162d24866b58a16a152f56/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65779.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65779.c?ref=015337d35b4b3d5688162d24866b58a16a152f56", "patch": "@@ -0,0 +1,42 @@\n+/* PR debug/65779 */\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -fcompare-debug\" } */\n+\n+unsigned long\n+foo (unsigned long x, unsigned char *y, unsigned int z)\n+{\n+  unsigned long a = x & 0xffff;\n+  unsigned long b = (x >> 16) & 0xffff;\n+  int k;\n+  if (y == 0) return 1L;\n+  while (z > 0)\n+    {\n+      k = z < 5552 ? z : 5552;\n+      z -= k;\n+      while (k >= 16)\n+\t{\n+          a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  a += *y++; b += a;\n+\t  k -= 16;\n+        }\n+      if (k != 0)\n+\tdo { a += *y++; b += a; } while (--k);\n+      a %= 65521L;\n+      b %= 65521L;\n+    }\n+  return (b << 16) | a;\n+}"}]}