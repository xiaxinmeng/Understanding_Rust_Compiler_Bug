{"sha": "f60689fa50609683d5f6adc32d96f965d510dd6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYwNjg5ZmE1MDYwOTY4M2Q1ZjZhZGMzMmQ5NmY5NjVkNTEwZGQ2Yg==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2019-11-20T08:39:21Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2019-11-20T08:39:21Z"}, "message": "[ARC] Register ARC specific passes with a .def file.\n\nNew arc-passes.def to register ARC specific passes.\n\ngcc/\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc-protos.h (make_pass_arc_ifcvt): Declare.\n\t(make_pass_arc_predicate_delay_insns): Likewise.\n\t* config/arc/arc.c (class pass_arc_ifcvt): Reformat text, add gate\n\tmethod, remove clone.\n\t(class pass_arc_predicate_delay_insns): Likewise.\n\t(arc_init): Remove registering of ARC specific passes.\n\t* config/arc/t-arc (PASSES_EXTRA): Add arc-passes.def.\n\t* config/arc/arc-passes.def: New file.\n\nFrom-SVN: r278485", "tree": {"sha": "faf3924b883999d233827151256c3b1710701456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faf3924b883999d233827151256c3b1710701456"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f60689fa50609683d5f6adc32d96f965d510dd6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f60689fa50609683d5f6adc32d96f965d510dd6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f60689fa50609683d5f6adc32d96f965d510dd6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f60689fa50609683d5f6adc32d96f965d510dd6b/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee686729283500c330b8b920f4f8e4dcc566adde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee686729283500c330b8b920f4f8e4dcc566adde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee686729283500c330b8b920f4f8e4dcc566adde"}], "stats": {"total": 109, "additions": 72, "deletions": 37}, "files": [{"sha": "45b16058e6bd94375486455c816dd77f55863b40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f60689fa50609683d5f6adc32d96f965d510dd6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f60689fa50609683d5f6adc32d96f965d510dd6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f60689fa50609683d5f6adc32d96f965d510dd6b", "patch": "@@ -1,3 +1,14 @@\n+2019-11-20  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc-protos.h (make_pass_arc_ifcvt): Declare.\n+\t(make_pass_arc_predicate_delay_insns): Likewise.\n+\t* config/arc/arc.c (class pass_arc_ifcvt): Reformat text, add gate\n+\tmethod, remove clone.\n+\t(class pass_arc_predicate_delay_insns): Likewise.\n+\t(arc_init): Remove registering of ARC specific passes.\n+\t* config/arc/t-arc (PASSES_EXTRA): Add arc-passes.def.\n+\t* config/arc/arc-passes.def: New file.\n+\n 2019-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/90840"}, {"sha": "ebb69a563df9a2a5fd04b30e5637ec1e3e680cce", "filename": "gcc/config/arc/arc-passes.def", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f60689fa50609683d5f6adc32d96f965d510dd6b/gcc%2Fconfig%2Farc%2Farc-passes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f60689fa50609683d5f6adc32d96f965d510dd6b/gcc%2Fconfig%2Farc%2Farc-passes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-passes.def?ref=f60689fa50609683d5f6adc32d96f965d510dd6b", "patch": "@@ -0,0 +1,29 @@\n+/* Description of target passes for ARC.\n+   Copyright (C) 2019 Free Software Foundation, Inc. */\n+\n+/* This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it under\n+   the terms of the GNU General Public License as published by the Free\n+   Software Foundation; either version 3, or (at your option) any later\n+   version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+   for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* First target dependent ARC if-conversion pass.  */\n+INSERT_PASS_AFTER (pass_delay_slots, 1, pass_arc_ifcvt);\n+\n+/* Second target dependent ARC if-conversion pass.  */\n+INSERT_PASS_BEFORE (pass_shorten_branches, 1, pass_arc_ifcvt);\n+\n+/* Find annulled delay insns and convert them to use the appropriate\n+   predicate.  This allows branch shortening to size up these\n+   instructions properly.  */\n+INSERT_PASS_AFTER (pass_delay_slots, 1, pass_arc_predicate_delay_insns);"}, {"sha": "da128dcbcb2b121f624f73a2dd4ffff4f397f332", "filename": "gcc/config/arc/arc-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f60689fa50609683d5f6adc32d96f965d510dd6b/gcc%2Fconfig%2Farc%2Farc-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f60689fa50609683d5f6adc32d96f965d510dd6b/gcc%2Fconfig%2Farc%2Farc-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-protos.h?ref=f60689fa50609683d5f6adc32d96f965d510dd6b", "patch": "@@ -111,3 +111,6 @@ extern void arc_eh_return_address_location (rtx);\n extern bool arc_is_jli_call_p (rtx);\n extern void arc_file_end (void);\n extern bool arc_is_secure_call_p (rtx);\n+\n+rtl_opt_pass * make_pass_arc_ifcvt (gcc::context *ctxt);\n+rtl_opt_pass * make_pass_arc_predicate_delay_insns (gcc::context *ctxt);"}, {"sha": "28305f459dcdeb1d8a55f7f65b82ec365ea4b69c", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 27, "deletions": 37, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f60689fa50609683d5f6adc32d96f965d510dd6b/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f60689fa50609683d5f6adc32d96f965d510dd6b/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=f60689fa50609683d5f6adc32d96f965d510dd6b", "patch": "@@ -962,14 +962,24 @@ const pass_data pass_data_arc_ifcvt =\n \n class pass_arc_ifcvt : public rtl_opt_pass\n {\n-public:\n-  pass_arc_ifcvt(gcc::context *ctxt)\n-  : rtl_opt_pass(pass_data_arc_ifcvt, ctxt)\n-  {}\n+ public:\n+ pass_arc_ifcvt (gcc::context *ctxt)\n+   : rtl_opt_pass (pass_data_arc_ifcvt, ctxt)\n+    {}\n \n   /* opt_pass methods: */\n-  opt_pass * clone () { return new pass_arc_ifcvt (m_ctxt); }\n-  virtual unsigned int execute (function *) { return arc_ifcvt (); }\n+  opt_pass * clone ()\n+    {\n+      return new pass_arc_ifcvt (m_ctxt);\n+    }\n+  virtual unsigned int execute (function *)\n+  {\n+    return arc_ifcvt ();\n+  }\n+  virtual bool gate (function *)\n+  {\n+    return (optimize > 1 && !TARGET_NO_COND_EXEC);\n+  }\n };\n \n } // anon namespace\n@@ -999,16 +1009,20 @@ const pass_data pass_data_arc_predicate_delay_insns =\n \n class pass_arc_predicate_delay_insns : public rtl_opt_pass\n {\n-public:\n-  pass_arc_predicate_delay_insns(gcc::context *ctxt)\n-  : rtl_opt_pass(pass_data_arc_predicate_delay_insns, ctxt)\n-  {}\n+ public:\n+ pass_arc_predicate_delay_insns(gcc::context *ctxt)\n+   : rtl_opt_pass(pass_data_arc_predicate_delay_insns, ctxt)\n+    {}\n \n   /* opt_pass methods: */\n   virtual unsigned int execute (function *)\n-    {\n-      return arc_predicate_delay_insns ();\n-    }\n+  {\n+    return arc_predicate_delay_insns ();\n+  }\n+  virtual bool gate (function *)\n+  {\n+    return flag_delayed_branch;\n+  }\n };\n \n } // anon namespace\n@@ -1101,30 +1115,6 @@ arc_init (void)\n   arc_punct_chars['&'] = 1;\n   arc_punct_chars['+'] = 1;\n   arc_punct_chars['_'] = 1;\n-\n-  if (optimize > 1 && !TARGET_NO_COND_EXEC)\n-    {\n-      /* There are two target-independent ifcvt passes, and arc_reorg may do\n-\t one or more arc_ifcvt calls.  */\n-      opt_pass *pass_arc_ifcvt_4 = make_pass_arc_ifcvt (g);\n-      struct register_pass_info arc_ifcvt4_info\n-\t= { pass_arc_ifcvt_4, \"dbr\", 1, PASS_POS_INSERT_AFTER };\n-      struct register_pass_info arc_ifcvt5_info\n-\t= { pass_arc_ifcvt_4->clone (), \"shorten\", 1, PASS_POS_INSERT_BEFORE };\n-\n-      register_pass (&arc_ifcvt4_info);\n-      register_pass (&arc_ifcvt5_info);\n-    }\n-\n-  if (flag_delayed_branch)\n-    {\n-      opt_pass *pass_arc_predicate_delay_insns\n-\t= make_pass_arc_predicate_delay_insns (g);\n-      struct register_pass_info arc_predicate_delay_info\n-\t= { pass_arc_predicate_delay_insns, \"dbr\", 1, PASS_POS_INSERT_AFTER };\n-\n-      register_pass (&arc_predicate_delay_info);\n-    }\n }\n \n /* Parse -mirq-ctrl-saved=RegisterRange, blink, lp_copunt.  The"}, {"sha": "604e639b5bf4417cc70b4898f6a8f5c925a2225c", "filename": "gcc/config/arc/t-arc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f60689fa50609683d5f6adc32d96f965d510dd6b/gcc%2Fconfig%2Farc%2Ft-arc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f60689fa50609683d5f6adc32d96f965d510dd6b/gcc%2Fconfig%2Farc%2Ft-arc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Ft-arc?ref=f60689fa50609683d5f6adc32d96f965d510dd6b", "patch": "@@ -43,6 +43,8 @@ $(srcdir)/config/arc/arc-tables.opt: $(srcdir)/config/arc/genoptions.awk \\\n \t\t\t\t $(srcdir)/config/arc/arc-cpus.def\n \t$(AWK) -f $< -v FORMAT=Makefile $< $(srcdir)/config/arc/arc-cpus.def > $@\n \n+PASSES_EXTRA += $(srcdir)/config/arc/arc-passes.def\n+\n # Local Variables:\n # mode: Makefile\n # End:"}]}