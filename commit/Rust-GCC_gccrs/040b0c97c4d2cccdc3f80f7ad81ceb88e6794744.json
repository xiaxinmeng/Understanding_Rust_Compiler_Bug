{"sha": "040b0c97c4d2cccdc3f80f7ad81ceb88e6794744", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwYjBjOTdjNGQyY2NjZGMzZjgwZjdhZDgxY2ViODhlNjc5NDc0NA==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-12-16T17:24:25Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-12-16T17:24:25Z"}, "message": "add more dumps on data dependence graph\n\nCo-Authored-By: Sebastian Pop <s.pop@samsung.com>\n\nFrom-SVN: r231703", "tree": {"sha": "d39caa6949e1dc80b9b2ecc13bc3eea6f0a43788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d39caa6949e1dc80b9b2ecc13bc3eea6f0a43788"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d06f8b75bd1d2bda101444a44b0a953a4b9895b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d06f8b75bd1d2bda101444a44b0a953a4b9895b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d06f8b75bd1d2bda101444a44b0a953a4b9895b3"}], "stats": {"total": 77, "additions": 67, "deletions": 10}, "files": [{"sha": "ee2af1db9fb8adef9ad9d3851d2d1f7a98f30fa1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=040b0c97c4d2cccdc3f80f7ad81ceb88e6794744", "patch": "@@ -1,3 +1,13 @@\n+2015-12-16  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* graphite-dependences.c (scop_get_reads): Add more dumps.\n+\t(scop_get_must_writes): Same.\n+\t(scop_get_may_writes): Same.\n+\t* graphite-poly.c (new_poly_dr): Same.\n+\t* graphite-scop-detection.c (build_cross_bb_scalars_def): Same.\n+\t(gather_bbs::before_dom_children): Same.\n+\n 2015-12-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_extend_bitfield_pattern_p):"}, {"sha": "7b7912ac503727c878637f31905a4de2fbc6f608", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=040b0c97c4d2cccdc3f80f7ad81ceb88e6794744", "patch": "@@ -89,8 +89,16 @@ scop_get_reads (scop_p scop, vec<poly_bb_p> pbbs)\n \tif (pdr_read_p (pdr))\n \t  {\n \t    if (dump_file)\n-\t      print_pdr (dump_file, pdr);\n+\t      {\n+\t\tfprintf (dump_file, \"Adding read to depedence graph: \");\n+\t\tprint_pdr (dump_file, pdr);\n+\t      }\n \t    res = isl_union_map_add_map (res, add_pdr_constraints (pdr, pbb));\n+\t    if (dump_file)\n+\t      {\n+\t\tfprintf (dump_file, \"Reads depedence graph: \");\n+\t\tprint_isl_union_map (dump_file, res);\n+\t      }\n \t  }\n     }\n \n@@ -114,8 +122,16 @@ scop_get_must_writes (scop_p scop, vec<poly_bb_p> pbbs)\n \tif (pdr_write_p (pdr))\n \t  {\n \t    if (dump_file)\n-\t      print_pdr (dump_file, pdr);\n+\t      {\n+\t\tfprintf (dump_file, \"Adding must write to depedence graph: \");\n+\t\tprint_pdr (dump_file, pdr);\n+\t      }\n \t    res = isl_union_map_add_map (res, add_pdr_constraints (pdr, pbb));\n+\t    if (dump_file)\n+\t      {\n+\t\tfprintf (dump_file, \"Must writes depedence graph: \");\n+\t\tprint_isl_union_map (dump_file, res);\n+\t      }\n \t  }\n     }\n \n@@ -139,9 +155,16 @@ scop_get_may_writes (scop_p scop, vec<poly_bb_p> pbbs)\n \tif (pdr_may_write_p (pdr))\n \t  {\n \t    if (dump_file)\n-\t      print_pdr (dump_file, pdr);\n-\n+\t      {\n+\t\tfprintf (dump_file, \"Adding may write to depedence graph: \");\n+\t\tprint_pdr (dump_file, pdr);\n+\t      }\n \t    res = isl_union_map_add_map (res, add_pdr_constraints (pdr, pbb));\n+\t    if (dump_file)\n+\t      {\n+\t\tfprintf (dump_file, \"May writes depedence graph: \");\n+\t\tprint_isl_union_map (dump_file, res);\n+\t      }\n \t  }\n     }\n "}, {"sha": "6c01a4c1bb1b83b7834a745e5034a61a15e60057", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=040b0c97c4d2cccdc3f80f7ad81ceb88e6794744", "patch": "@@ -31,13 +31,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"gimple.h\"\n #include \"cfghooks.h\"\n-#include \"gimple-pretty-print.h\"\n #include \"diagnostic-core.h\"\n #include \"fold-const.h\"\n #include \"gimple-iterator.h\"\n #include \"tree-ssa-loop.h\"\n #include \"cfgloop.h\"\n #include \"tree-data-ref.h\"\n+#include \"pretty-print.h\"\n+#include \"gimple-pretty-print.h\"\n+#include \"tree-dump.h\"\n \n #include <isl/constraint.h>\n #include <isl/set.h>\n@@ -147,6 +149,17 @@ new_poly_dr (poly_bb_p pbb, gimple *stmt, enum poly_dr_type type,\n   pdr->subscript_sizes = subscript_sizes;\n   PDR_TYPE (pdr) = type;\n   PBB_DRS (pbb).safe_push (pdr);\n+\n+  if (dump_file)\n+    {\n+      fprintf (dump_file, \"Converting dr: \");\n+      print_pdr (dump_file, pdr);\n+      fprintf (dump_file, \"To polyhedral representation:\\n\");\n+      fprintf (dump_file, \"  - access functions: \");\n+      print_isl_map (dump_file, acc);\n+      fprintf (dump_file, \"  - subscripts: \");\n+      print_isl_set (dump_file, subscript_sizes);\n+    }\n }\n \n /* Free polyhedral data reference PDR.  */"}, {"sha": "baff5d46874791fc7603078285a6631c84267c86", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b0c97c4d2cccdc3f80f7ad81ceb88e6794744/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=040b0c97c4d2cccdc3f80f7ad81ceb88e6794744", "patch": "@@ -1684,9 +1684,9 @@ build_cross_bb_scalars_def (scop_p scop, tree def, basic_block def_bb,\n     if (def_bb != gimple_bb (use_stmt) && !is_gimple_debug (use_stmt))\n       {\n \twrites->safe_push (def);\n-\tDEBUG_PRINT (dp << \"Adding scalar write:\\n\";\n+\tDEBUG_PRINT (dp << \"Adding scalar write: \";\n \t\t     print_generic_expr (dump_file, def, 0);\n-\t\t     dp << \"From stmt:\\n\";\n+\t\t     dp << \"\\nFrom stmt: \";\n \t\t     print_gimple_stmt (dump_file,\n \t\t\t\t\tSSA_NAME_DEF_STMT (def), 0, 0));\n \t/* This is required by the FOR_EACH_IMM_USE_STMT when we want to break\n@@ -1713,9 +1713,9 @@ build_cross_bb_scalars_use (scop_p scop, tree use, gimple *use_stmt,\n   gimple *def_stmt = SSA_NAME_DEF_STMT (use);\n   if (gimple_bb (def_stmt) != gimple_bb (use_stmt))\n     {\n-      DEBUG_PRINT (dp << \"Adding scalar read:\";\n+      DEBUG_PRINT (dp << \"Adding scalar read: \";\n \t\t   print_generic_expr (dump_file, use, 0);\n-\t\t   dp << \"\\nFrom stmt:\";\n+\t\t   dp << \"\\nFrom stmt: \";\n \t\t   print_gimple_stmt (dump_file, use_stmt, 0, 0));\n       reads->safe_push (std::make_pair (use_stmt, use));\n     }\n@@ -1879,7 +1879,18 @@ gather_bbs::before_dom_children (basic_block bb)\n   int i;\n   data_reference_p dr;\n   FOR_EACH_VEC_ELT (gbb->data_refs, i, dr)\n-    scop->drs.safe_push (dr_info (dr, pbb));\n+    {\n+      DEBUG_PRINT (dp << \"Adding memory \";\n+\t\t   if (dr->is_read)\n+\t\t     dp << \"read: \";\n+\t\t   else\n+\t\t     dp << \"write: \";\n+\t\t   print_generic_expr (dump_file, dr->ref, 0);\n+\t\t   dp << \"\\nFrom stmt: \";\n+\t\t   print_gimple_stmt (dump_file, dr->stmt, 0, 0));\n+\n+      scop->drs.safe_push (dr_info (dr, pbb));\n+    }\n \n   return NULL;\n }"}]}