{"sha": "dd5593fc441c85171db5915982a1c4f53a9f025e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ1NTkzZmM0NDFjODUxNzFkYjU5MTU5ODJhMWM0ZjUzYTlmMDI1ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-04-01T19:13:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-04-01T19:13:50Z"}, "message": "re PR c++/60713 (ICE in iterative_hash_expr)\n\n\tPR c++/60713\n\t* typeck2.c (PICFLAG_SIDE_EFFECTS): New.\n\t(picflag_from_initializer): Return it.\n\t(process_init_constructor): Handle it.\n\nFrom-SVN: r208995", "tree": {"sha": "0e5f482d04bd4e7814d66d5a334bed85504dd1f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e5f482d04bd4e7814d66d5a334bed85504dd1f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd5593fc441c85171db5915982a1c4f53a9f025e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd5593fc441c85171db5915982a1c4f53a9f025e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd5593fc441c85171db5915982a1c4f53a9f025e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd5593fc441c85171db5915982a1c4f53a9f025e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6fb619e43119d418163b0572a82231e8b5258867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fb619e43119d418163b0572a82231e8b5258867", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fb619e43119d418163b0572a82231e8b5258867"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "453e2c58b5f7dda9c8bd2479d342a2d446dc0ac1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd5593fc441c85171db5915982a1c4f53a9f025e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd5593fc441c85171db5915982a1c4f53a9f025e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dd5593fc441c85171db5915982a1c4f53a9f025e", "patch": "@@ -1,5 +1,10 @@\n 2014-04-01  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/60713\n+\t* typeck2.c (PICFLAG_SIDE_EFFECTS): New.\n+\t(picflag_from_initializer): Return it.\n+\t(process_init_constructor): Handle it.\n+\n \tPR c++/60642\n \t* decl2.c (is_late_template_attribute): Don't defer abi_tag.\n \t* mangle.c (write_unqualified_name): Fix abi_tag on templates."}, {"sha": "68e518a5c73e8e72fef76e0f3b0887a23fa9f0f3", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd5593fc441c85171db5915982a1c4f53a9f025e/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd5593fc441c85171db5915982a1c4f53a9f025e/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=dd5593fc441c85171db5915982a1c4f53a9f025e", "patch": "@@ -1103,6 +1103,7 @@ digest_init_flags (tree type, tree init, int flags)\n #define PICFLAG_ERRONEOUS 1\n #define PICFLAG_NOT_ALL_CONSTANT 2\n #define PICFLAG_NOT_ALL_SIMPLE 4\n+#define PICFLAG_SIDE_EFFECTS 8\n \n /* Given an initializer INIT, return the flag (PICFLAG_*) which better\n    describe it.  */\n@@ -1113,7 +1114,12 @@ picflag_from_initializer (tree init)\n   if (init == error_mark_node)\n     return PICFLAG_ERRONEOUS;\n   else if (!TREE_CONSTANT (init))\n-    return PICFLAG_NOT_ALL_CONSTANT;\n+    {\n+      if (TREE_SIDE_EFFECTS (init))\n+\treturn PICFLAG_SIDE_EFFECTS;\n+      else\n+\treturn PICFLAG_NOT_ALL_CONSTANT;\n+    }\n   else if (!initializer_constant_valid_p (init, TREE_TYPE (init)))\n     return PICFLAG_NOT_ALL_SIMPLE;\n   return 0;\n@@ -1493,7 +1499,12 @@ process_init_constructor (tree type, tree init, tsubst_flags_t complain)\n   TREE_TYPE (init) = type;\n   if (TREE_CODE (type) == ARRAY_TYPE && TYPE_DOMAIN (type) == NULL_TREE)\n     cp_complete_array_type (&TREE_TYPE (init), init, /*do_default=*/0);\n-  if (flags & PICFLAG_NOT_ALL_CONSTANT)\n+  if (flags & PICFLAG_SIDE_EFFECTS)\n+    {\n+      TREE_CONSTANT (init) = false;\n+      TREE_SIDE_EFFECTS (init) = true;\n+    }\n+  else if (flags & PICFLAG_NOT_ALL_CONSTANT)\n     /* Make sure TREE_CONSTANT isn't set from build_constructor.  */\n     TREE_CONSTANT (init) = false;\n   else"}, {"sha": "5978c6388938d9b5dd7de1df904f3e1138843ff7", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist81.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd5593fc441c85171db5915982a1c4f53a9f025e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist81.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd5593fc441c85171db5915982a1c4f53a9f025e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist81.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist81.C?ref=dd5593fc441c85171db5915982a1c4f53a9f025e", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/60713\n+// { dg-options \"-O\" }\n+// { dg-do compile { target c++11 } }\n+\n+template < class x0, class x1, class x2, class x3, class x4 >\n+int *x5 (x0 *, x2 (x1::*)(x3, x4));\n+\n+class x6\n+{\n+    void x7 ();\n+    struct x8\n+    {\n+        int *x9;\n+    };\n+    void x10 (x8);\n+    void x11 (int *, int *);\n+};\n+\n+void\n+x6::x7 ()\n+{\n+    x10 ({\n+        x5 (this, &x6::x11)\n+    });\n+}"}]}