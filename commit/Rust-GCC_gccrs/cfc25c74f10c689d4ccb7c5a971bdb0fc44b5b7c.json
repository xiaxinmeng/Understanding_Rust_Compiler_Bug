{"sha": "cfc25c74f10c689d4ccb7c5a971bdb0fc44b5b7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZjMjVjNzRmMTBjNjg5ZDRjY2I3YzVhOTcxYmRiMGZjNDRiNWI3Yw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2009-11-14T18:16:18Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2009-11-14T18:16:18Z"}, "message": "arm.md (adddi_sesidi_di): Place tied contraint first.\n\n\t* arm.md (adddi_sesidi_di): Place tied contraint first.\n\t(adddi_zesidi_di, subdi_di_zesidi, subdi_di_sesidi): Likewise\n\t(subdi_zesidi_di, subdi_sesidi_di): Likewise.\n\t(mulsi3_compare0, mulsi_compare0_scratch): Likewise.\n\t(mulsi3addsi, mulsi3addsi_compare0): Likewise.\n\t(mulsi3addsi_compare0_scratch, smulsi3_highpart_nov6): Likewise.\n\t(umulsi3_highpart_nov6, anddi_zesidi_di, anddi_sesdi_di): Likewise.\n\t(anddi_notdi_di, iordi_sesidi_di, xordi_sesidi_di): Likewise.\n\t(andsi_iorsi3_notsi, arm_ashldi3_1bit, arm_ashrdi3_1_bit): Likewise.\n\t(arm_lshrdi3_1bit, one_cmpldi2): Likewise.\n\nFrom-SVN: r154181", "tree": {"sha": "1464e1bbae5bac6696fef1ca46b2dd3ec9d5263a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1464e1bbae5bac6696fef1ca46b2dd3ec9d5263a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfc25c74f10c689d4ccb7c5a971bdb0fc44b5b7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfc25c74f10c689d4ccb7c5a971bdb0fc44b5b7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfc25c74f10c689d4ccb7c5a971bdb0fc44b5b7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfc25c74f10c689d4ccb7c5a971bdb0fc44b5b7c/comments", "author": null, "committer": null, "parents": [{"sha": "618cc62edbc70a017483bb686beac3ac3978a172", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/618cc62edbc70a017483bb686beac3ac3978a172", "html_url": "https://github.com/Rust-GCC/gccrs/commit/618cc62edbc70a017483bb686beac3ac3978a172"}], "stats": {"total": 71, "additions": 42, "deletions": 29}, "files": [{"sha": "b5578e481afc48125bdba6fd6384c40466d88507", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfc25c74f10c689d4ccb7c5a971bdb0fc44b5b7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfc25c74f10c689d4ccb7c5a971bdb0fc44b5b7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfc25c74f10c689d4ccb7c5a971bdb0fc44b5b7c", "patch": "@@ -1,3 +1,16 @@\n+2009-11-14  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.md (adddi_sesidi_di): Place tied contraint first.\n+\t(adddi_zesidi_di, subdi_di_zesidi, subdi_di_sesidi): Likewise\n+\t(subdi_zesidi_di, subdi_sesidi_di): Likewise.\n+\t(mulsi3_compare0, mulsi_compare0_scratch): Likewise.\n+\t(mulsi3addsi, mulsi3addsi_compare0): Likewise.\n+\t(mulsi3addsi_compare0_scratch, smulsi3_highpart_nov6): Likewise.\n+\t(umulsi3_highpart_nov6, anddi_zesidi_di, anddi_sesdi_di): Likewise.\n+\t(anddi_notdi_di, iordi_sesidi_di, xordi_sesidi_di): Likewise.\n+\t(andsi_iorsi3_notsi, arm_ashldi3_1bit, arm_ashrdi3_1_bit): Likewise.\n+\t(arm_lshrdi3_1bit, one_cmpldi2): Likewise.\n+\n 2009-11-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/predicates.md (call_register_no_elim_operand):"}, {"sha": "8527208d6f33918c5fd0308bb4a11cc4bbab07f3", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfc25c74f10c689d4ccb7c5a971bdb0fc44b5b7c/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfc25c74f10c689d4ccb7c5a971bdb0fc44b5b7c/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=cfc25c74f10c689d4ccb7c5a971bdb0fc44b5b7c", "patch": "@@ -523,7 +523,7 @@\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(plus:DI (sign_extend:DI\n \t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n-\t\t (match_operand:DI 1 \"s_register_operand\" \"r,0\")))\n+\t\t (match_operand:DI 1 \"s_register_operand\" \"0,r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_32BIT && !(TARGET_HARD_FLOAT && TARGET_MAVERICK)\"\n   \"#\"\n@@ -552,7 +552,7 @@\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(plus:DI (zero_extend:DI\n \t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n-\t\t (match_operand:DI 1 \"s_register_operand\" \"r,0\")))\n+\t\t (match_operand:DI 1 \"s_register_operand\" \"0,r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_32BIT && !(TARGET_HARD_FLOAT && TARGET_MAVERICK)\"\n   \"#\"\n@@ -1015,7 +1015,7 @@\n \n (define_insn \"*subdi_di_zesidi\"\n   [(set (match_operand:DI           0 \"s_register_operand\" \"=&r,&r\")\n-\t(minus:DI (match_operand:DI 1 \"s_register_operand\"  \"?r,0\")\n+\t(minus:DI (match_operand:DI 1 \"s_register_operand\"  \"0,r\")\n \t\t  (zero_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"  \"r,r\"))))\n    (clobber (reg:CC CC_REGNUM))]\n@@ -1027,7 +1027,7 @@\n \n (define_insn \"*subdi_di_sesidi\"\n   [(set (match_operand:DI            0 \"s_register_operand\" \"=&r,&r\")\n-\t(minus:DI (match_operand:DI  1 \"s_register_operand\"  \"r,0\")\n+\t(minus:DI (match_operand:DI  1 \"s_register_operand\"  \"0,r\")\n \t\t  (sign_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"  \"r,r\"))))\n    (clobber (reg:CC CC_REGNUM))]\n@@ -1041,7 +1041,7 @@\n   [(set (match_operand:DI            0 \"s_register_operand\" \"=&r,&r\")\n \t(minus:DI (zero_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"  \"r,r\"))\n-\t\t  (match_operand:DI  1 \"s_register_operand\" \"?r,0\")))\n+\t\t  (match_operand:DI  1 \"s_register_operand\" \"0,r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"rsbs\\\\t%Q0, %Q1, %2\\;rsc\\\\t%R0, %R1, #0\"\n@@ -1053,7 +1053,7 @@\n   [(set (match_operand:DI            0 \"s_register_operand\" \"=&r,&r\")\n \t(minus:DI (sign_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"   \"r,r\"))\n-\t\t  (match_operand:DI  1 \"s_register_operand\"  \"?r,0\")))\n+\t\t  (match_operand:DI  1 \"s_register_operand\"  \"0,r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"rsbs\\\\t%Q0, %Q1, %2\\;rsc\\\\t%R0, %R1, %2, asr #31\"\n@@ -1222,7 +1222,7 @@\n (define_insn \"*arm_mulsi3\"\n   [(set (match_operand:SI          0 \"s_register_operand\" \"=&r,&r\")\n \t(mult:SI (match_operand:SI 2 \"s_register_operand\" \"r,r\")\n-\t\t (match_operand:SI 1 \"s_register_operand\" \"%?r,0\")))]\n+\t\t (match_operand:SI 1 \"s_register_operand\" \"%0,r\")))]\n   \"TARGET_32BIT && !arm_arch6\"\n   \"mul%?\\\\t%0, %2, %1\"\n   [(set_attr \"insn\" \"mul\")\n@@ -1276,7 +1276,7 @@\n   [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (mult:SI\n \t\t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\")\n-\t\t\t  (match_operand:SI 1 \"s_register_operand\" \"%?r,0\"))\n+\t\t\t  (match_operand:SI 1 \"s_register_operand\" \"%0,r\"))\n \t\t\t (const_int 0)))\n    (set (match_operand:SI 0 \"s_register_operand\" \"=&r,&r\")\n \t(mult:SI (match_dup 2) (match_dup 1)))]\n@@ -1304,7 +1304,7 @@\n   [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (mult:SI\n \t\t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\")\n-\t\t\t  (match_operand:SI 1 \"s_register_operand\" \"%?r,0\"))\n+\t\t\t  (match_operand:SI 1 \"s_register_operand\" \"%0,r\"))\n \t\t\t (const_int 0)))\n    (clobber (match_scratch:SI 0 \"=&r,&r\"))]\n   \"TARGET_ARM && !arm_arch6\"\n@@ -1332,8 +1332,8 @@\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r,&r,&r,&r\")\n \t(plus:SI\n \t  (mult:SI (match_operand:SI 2 \"s_register_operand\" \"r,r,r,r\")\n-\t\t   (match_operand:SI 1 \"s_register_operand\" \"%r,0,r,0\"))\n-\t  (match_operand:SI 3 \"s_register_operand\" \"?r,r,0,0\")))]\n+\t\t   (match_operand:SI 1 \"s_register_operand\" \"%0,r,0,r\"))\n+\t  (match_operand:SI 3 \"s_register_operand\" \"r,r,0,0\")))]\n   \"TARGET_32BIT && !arm_arch6\"\n   \"mla%?\\\\t%0, %2, %1, %3\"\n   [(set_attr \"insn\" \"mla\")\n@@ -1357,8 +1357,8 @@\n \t(compare:CC_NOOV\n \t (plus:SI (mult:SI\n \t\t   (match_operand:SI 2 \"s_register_operand\" \"r,r,r,r\")\n-\t\t   (match_operand:SI 1 \"s_register_operand\" \"%r,0,r,0\"))\n-\t\t  (match_operand:SI 3 \"s_register_operand\" \"?r,r,0,0\"))\n+\t\t   (match_operand:SI 1 \"s_register_operand\" \"%0,r,0,r\"))\n+\t\t  (match_operand:SI 3 \"s_register_operand\" \"r,r,0,0\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"s_register_operand\" \"=&r,&r,&r,&r\")\n \t(plus:SI (mult:SI (match_dup 2) (match_dup 1))\n@@ -1391,7 +1391,7 @@\n \t(compare:CC_NOOV\n \t (plus:SI (mult:SI\n \t\t   (match_operand:SI 2 \"s_register_operand\" \"r,r,r,r\")\n-\t\t   (match_operand:SI 1 \"s_register_operand\" \"%r,0,r,0\"))\n+\t\t   (match_operand:SI 1 \"s_register_operand\" \"%0,r,0,r\"))\n \t\t  (match_operand:SI 3 \"s_register_operand\" \"?r,r,0,0\"))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 0 \"=&r,&r,&r,&r\"))]\n@@ -1571,7 +1571,7 @@\n \t(truncate:SI\n \t (lshiftrt:DI\n \t  (mult:DI\n-\t   (sign_extend:DI (match_operand:SI 1 \"s_register_operand\" \"%r,0\"))\n+\t   (sign_extend:DI (match_operand:SI 1 \"s_register_operand\" \"%0,r\"))\n \t   (sign_extend:DI (match_operand:SI 2 \"s_register_operand\" \"r,r\")))\n \t  (const_int 32))))\n    (clobber (match_scratch:SI 3 \"=&r,&r\"))]\n@@ -1615,7 +1615,7 @@\n \t(truncate:SI\n \t (lshiftrt:DI\n \t  (mult:DI\n-\t   (zero_extend:DI (match_operand:SI 1 \"s_register_operand\" \"%r,0\"))\n+\t   (zero_extend:DI (match_operand:SI 1 \"s_register_operand\" \"%0,r\"))\n \t   (zero_extend:DI (match_operand:SI 2 \"s_register_operand\" \"r,r\")))\n \t  (const_int 32))))\n    (clobber (match_scratch:SI 3 \"=&r,&r\"))]\n@@ -1870,7 +1870,7 @@\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(and:DI (zero_extend:DI\n \t\t (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n-\t\t(match_operand:DI 1 \"s_register_operand\" \"?r,0\")))]\n+\t\t(match_operand:DI 1 \"s_register_operand\" \"0,r\")))]\n   \"TARGET_32BIT\"\n   \"#\"\n   \"TARGET_32BIT && reload_completed\"\n@@ -1891,7 +1891,7 @@\n   [(set (match_operand:DI          0 \"s_register_operand\" \"=&r,&r\")\n \t(and:DI (sign_extend:DI\n \t\t (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n-\t\t(match_operand:DI  1 \"s_register_operand\" \"?r,0\")))]\n+\t\t(match_operand:DI  1 \"s_register_operand\" \"0,r\")))]\n   \"TARGET_32BIT\"\n   \"#\"\n   [(set_attr \"length\" \"8\")]\n@@ -2457,8 +2457,8 @@\n ; constants for op 2 will never be given to these patterns.\n (define_insn_and_split \"*anddi_notdi_di\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n-\t(and:DI (not:DI (match_operand:DI 1 \"s_register_operand\" \"r,0\"))\n-\t\t(match_operand:DI 2 \"s_register_operand\" \"0,r\")))]\n+\t(and:DI (not:DI (match_operand:DI 1 \"s_register_operand\" \"0,r\"))\n+\t\t(match_operand:DI 2 \"s_register_operand\" \"r,0\")))]\n   \"TARGET_32BIT\"\n   \"#\"\n   \"TARGET_32BIT && reload_completed && ! IS_IWMMXT_REGNUM (REGNO (operands[0]))\"\n@@ -2612,7 +2612,7 @@\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(ior:DI (sign_extend:DI\n \t\t (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n-\t\t(match_operand:DI 1 \"s_register_operand\" \"?r,0\")))]\n+\t\t(match_operand:DI 1 \"s_register_operand\" \"0,r\")))]\n   \"TARGET_32BIT\"\n   \"#\"\n   [(set_attr \"length\" \"8\")\n@@ -2742,7 +2742,7 @@\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(xor:DI (sign_extend:DI\n \t\t (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n-\t\t(match_operand:DI 1 \"s_register_operand\" \"?r,0\")))]\n+\t\t(match_operand:DI 1 \"s_register_operand\" \"0,r\")))]\n   \"TARGET_32BIT\"\n   \"#\"\n   [(set_attr \"length\" \"8\")\n@@ -2836,7 +2836,7 @@\n \n (define_insn \"*andsi_iorsi3_notsi\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r,&r,&r\")\n-\t(and:SI (ior:SI (match_operand:SI 1 \"s_register_operand\" \"r,r,0\")\n+\t(and:SI (ior:SI (match_operand:SI 1 \"s_register_operand\" \"%0,r,r\")\n \t\t\t(match_operand:SI 2 \"arm_rhs_operand\" \"rI,0,rI\"))\n \t\t(not:SI (match_operand:SI 3 \"arm_rhs_operand\" \"rI,rI,rI\"))))]\n   \"TARGET_32BIT\"\n@@ -3190,7 +3190,7 @@\n \n (define_insn \"arm_ashldi3_1bit\"\n   [(set (match_operand:DI            0 \"s_register_operand\" \"=&r,r\")\n-        (ashift:DI (match_operand:DI 1 \"s_register_operand\" \"?r,0\")\n+        (ashift:DI (match_operand:DI 1 \"s_register_operand\" \"0,r\")\n                    (const_int 1)))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_32BIT\"\n@@ -3249,7 +3249,7 @@\n \n (define_insn \"arm_ashrdi3_1bit\"\n   [(set (match_operand:DI              0 \"s_register_operand\" \"=&r,r\")\n-        (ashiftrt:DI (match_operand:DI 1 \"s_register_operand\" \"?r,0\")\n+        (ashiftrt:DI (match_operand:DI 1 \"s_register_operand\" \"0,r\")\n                      (const_int 1)))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_32BIT\"\n@@ -3305,7 +3305,7 @@\n \n (define_insn \"arm_lshrdi3_1bit\"\n   [(set (match_operand:DI              0 \"s_register_operand\" \"=&r,r\")\n-        (lshiftrt:DI (match_operand:DI 1 \"s_register_operand\" \"?r,0\")\n+        (lshiftrt:DI (match_operand:DI 1 \"s_register_operand\" \"0,r\")\n                      (const_int 1)))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_32BIT\"\n@@ -3552,10 +3552,10 @@\n )\n \n ;; The constraints here are to prevent a *partial* overlap (where %Q0 == %R1).\n-;; The second alternative is to allow the common case of a *full* overlap.\n+;; The first alternative allows the common case of a *full* overlap.\n (define_insn \"*arm_negdi2\"\n   [(set (match_operand:DI         0 \"s_register_operand\" \"=&r,r\")\n-\t(neg:DI (match_operand:DI 1 \"s_register_operand\"  \"?r,0\")))\n+\t(neg:DI (match_operand:DI 1 \"s_register_operand\"  \"0,r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"rsbs\\\\t%Q0, %Q1, #0\\;rsc\\\\t%R0, %R1, #0\"\n@@ -3708,7 +3708,7 @@\n \n (define_insn_and_split \"one_cmpldi2\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n-\t(not:DI (match_operand:DI 1 \"s_register_operand\" \"?r,0\")))]\n+\t(not:DI (match_operand:DI 1 \"s_register_operand\" \"0,r\")))]\n   \"TARGET_32BIT\"\n   \"#\"\n   \"TARGET_32BIT && reload_completed\""}]}