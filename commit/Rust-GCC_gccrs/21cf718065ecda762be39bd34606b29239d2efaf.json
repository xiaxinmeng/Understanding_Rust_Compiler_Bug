{"sha": "21cf718065ecda762be39bd34606b29239d2efaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFjZjcxODA2NWVjZGE3NjJiZTM5YmQzNDYwNmIyOTIzOWQyZWZhZg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2009-11-21T05:04:30Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2009-11-21T05:04:30Z"}, "message": "re PR tree-optimization/42078 (ICE in gimple_assign_set_rhs_code)\n\ngcc/ChangeLog:\nPR tree-optimization/42078\n* gimple.h (gimple_replace_lhs): New declaration.\n* gimple.c (gimple_replace_lhs): New function.\n* tree-ssa-math-opts.c (execute_cse_reciprocals): Call it before\nmodifying the call.\ngcc/testsuite/ChangeLog:\nPR tree-optimization/42078\n* gcc.dg/pr42078.c: New test.\n\nFrom-SVN: r154400", "tree": {"sha": "45cdd369007484a44434fbf6ca63aa95185eabd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45cdd369007484a44434fbf6ca63aa95185eabd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21cf718065ecda762be39bd34606b29239d2efaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21cf718065ecda762be39bd34606b29239d2efaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21cf718065ecda762be39bd34606b29239d2efaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21cf718065ecda762be39bd34606b29239d2efaf/comments", "author": null, "committer": null, "parents": [{"sha": "04482dd1056ef5718524cefc4b43c5ef7eea986f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04482dd1056ef5718524cefc4b43c5ef7eea986f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04482dd1056ef5718524cefc4b43c5ef7eea986f"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "c4edde6f55b586eba6c37198e00723de9557a7c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cf718065ecda762be39bd34606b29239d2efaf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cf718065ecda762be39bd34606b29239d2efaf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21cf718065ecda762be39bd34606b29239d2efaf", "patch": "@@ -1,3 +1,11 @@\n+2009-11-21  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR tree-optimization/42078\n+\t* gimple.h (gimple_replace_lhs): New declaration.\n+\t* gimple.c (gimple_replace_lhs): New function.\n+\t* tree-ssa-math-opts.c (execute_cse_reciprocals): Call it before\n+\tmodifying the call.\n+\n 2009-11-20  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* config/i386/sse.md (*xop_pmacsdql_mem): Don't call reg_mentioned_p."}, {"sha": "f84a20cd6c1a03e5ee3f10c72e06a0ae19580224", "filename": "gcc/gimple.c", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cf718065ecda762be39bd34606b29239d2efaf/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cf718065ecda762be39bd34606b29239d2efaf/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=21cf718065ecda762be39bd34606b29239d2efaf", "patch": "@@ -1981,6 +1981,39 @@ gimple_set_lhs (gimple stmt, tree lhs)\n     gcc_unreachable();\n }\n \n+/* Replace the LHS of STMT, an assignment, either a GIMPLE_ASSIGN or a\n+   GIMPLE_CALL, with NLHS, in preparation for modifying the RHS to an\n+   expression with a different value.\n+\n+   This will update any annotations (say debug bind stmts) referring\n+   to the original LHS, so that they use the RHS instead.  This is\n+   done even if NLHS and LHS are the same, for it is understood that\n+   the RHS will be modified afterwards, and NLHS will not be assigned\n+   an equivalent value.\n+\n+   Adjusting any non-annotation uses of the LHS, if needed, is a\n+   responsibility of the caller.\n+\n+   The effect of this call should be pretty much the same as that of\n+   inserting a copy of STMT before STMT, and then removing the\n+   original stmt, at which time gsi_remove() would have update\n+   annotations, but using this function saves all the inserting,\n+   copying and removing.  */\n+\n+void\n+gimple_replace_lhs (gimple stmt, tree nlhs)\n+{\n+  if (MAY_HAVE_DEBUG_STMTS)\n+    {\n+      tree lhs = gimple_get_lhs (stmt);\n+\n+      gcc_assert (SSA_NAME_DEF_STMT (lhs) == stmt);\n+\n+      insert_debug_temp_for_var_def (NULL, lhs);\n+    }\n+\n+  gimple_set_lhs (stmt, nlhs);\n+}\n \n /* Return a deep copy of statement STMT.  All the operands from STMT\n    are reallocated and copied using unshare_expr.  The DEF, USE, VDEF"}, {"sha": "f355ab1ba356672ed3c6ad1471514535090ac8bc", "filename": "gcc/gimple.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cf718065ecda762be39bd34606b29239d2efaf/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cf718065ecda762be39bd34606b29239d2efaf/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=21cf718065ecda762be39bd34606b29239d2efaf", "patch": "@@ -843,6 +843,7 @@ void gimple_assign_set_rhs_with_ops (gimple_stmt_iterator *, enum tree_code,\n \t\t\t\t     tree, tree);\n tree gimple_get_lhs (const_gimple);\n void gimple_set_lhs (gimple, tree);\n+void gimple_replace_lhs (gimple, tree);\n gimple gimple_copy (gimple);\n bool is_gimple_operand (const_tree);\n void gimple_set_modified (gimple, bool);"}, {"sha": "bb722a77ac3d14251015de381725fe9538c42259", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cf718065ecda762be39bd34606b29239d2efaf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cf718065ecda762be39bd34606b29239d2efaf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=21cf718065ecda762be39bd34606b29239d2efaf", "patch": "@@ -1,3 +1,8 @@\n+2009-11-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/42078\n+\t* gcc.dg/pr42078.c: New test.\n+\n 2009-11-19  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n \n \tPR Testsuite/42114"}, {"sha": "8107ff5557a5d86e3be40258bc928c6b806b82e5", "filename": "gcc/testsuite/gcc.dg/pr42078.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cf718065ecda762be39bd34606b29239d2efaf/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42078.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cf718065ecda762be39bd34606b29239d2efaf/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42078.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42078.c?ref=21cf718065ecda762be39bd34606b29239d2efaf", "patch": "@@ -0,0 +1,22 @@\n+/* PR tree-optimization/42078 */\n+/* { dg-do compile } */\n+/* { dg-options \"-g -O -ffast-math\" } */\n+\n+double sqrt (double x);\n+\n+float\n+foo (float x)\n+{\n+  float y = sqrt (x);\n+  return x / y;\n+}\n+\n+inline float\n+bar (float x)\n+{\n+  float y = sqrt (x);\n+  float a = y;\n+  float b = y;\n+  float c = y;\n+  return x / y;\n+}"}, {"sha": "948707eb1a0e2f9091f3a167522ca99f373f5f85", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cf718065ecda762be39bd34606b29239d2efaf/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cf718065ecda762be39bd34606b29239d2efaf/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=21cf718065ecda762be39bd34606b29239d2efaf", "patch": "@@ -563,6 +563,7 @@ execute_cse_reciprocals (void)\n \t\t  if (fail)\n \t\t    continue;\n \n+\t\t  gimple_replace_lhs (stmt1, arg1);\n \t\t  gimple_call_set_fndecl (stmt1, fndecl);\n \t\t  update_stmt (stmt1);\n "}]}