{"sha": "9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY2ZWY2YmNhZjU3MTY1MjRlMGI5N2M5YWUwN2NkYjg4NTg1OGNmMw==", "commit": {"author": {"name": "Neil Booth", "email": "neilb@earthling.net", "date": "2000-10-29T17:43:57Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-10-29T17:43:57Z"}, "message": "defined.c, [...]: New tests.\n\n\t* gcc.dg/cpp/defined.c, include1.c, paste11.c, skipping.c:\n\tNew tests.\n\t* gcc.dg/cpp/macsyntx.c: Move test to defined.c.\n\t* gcc.dg/cpp/mi3.c, mi3.h: New test for over-enthusiastic\n\toptimisation.\n\nFrom-SVN: r37126", "tree": {"sha": "866bc0a0d9329f355ba4833ecdfb5908e7e5b5e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/866bc0a0d9329f355ba4833ecdfb5908e7e5b5e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/comments", "author": null, "committer": null, "parents": [{"sha": "8c7b74b9393310aa17ef1c4360f0375a882b2500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7b74b9393310aa17ef1c4360f0375a882b2500", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c7b74b9393310aa17ef1c4360f0375a882b2500"}], "stats": {"total": 96, "additions": 94, "deletions": 2}, "files": [{"sha": "f8bad74d9bc6d3657fd6b03fcfff2a550349fe9e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3", "patch": "@@ -1,3 +1,11 @@\n+2000-10-29  Neil Booth  <neilb@earthling.net>\n+\n+\t* gcc.dg/cpp/defined.c, include1.c, paste11.c, skipping.c:\n+\tNew tests.\n+\t* gcc.dg/cpp/macsyntx.c: Move test to defined.c.\n+\t* gcc.dg/cpp/mi3.c, mi3.h: New test for over-enthusiastic\n+\toptimisation.\n+\n 2000-10-29  Neil Booth  <neilb@earthling.net>\n \n         * gcc.dg/cpp/macro4.c, macro5.c: New tests."}, {"sha": "0e82f7e1f50789a76b93f263b25e5e6adb91add0", "filename": "gcc/testsuite/gcc.dg/cpp/defined.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined.c?ref=9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3", "patch": "@@ -0,0 +1,27 @@\n+/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+\n+/* Tests behaviour of the defined operator.  */\n+\n+/*  Source: Neil Booth, 29 Oct 2000.  */\n+\n+/* No diagnostics, though you could argue there should be.  */\n+#if defined defined\n+#error defined is defined!\n+#endif\n+\n+#define defined\t\t\t/* { dg-error \"defined\" } */\n+\n+#define is_Z_defined defined Z\n+\n+/* The behaviour of \"defined\" when it comes from a macro expansion is\n+   now documented.  */\n+#if is_Z_defined\t\t/* { dg-warning \"macro expansion\" } */\n+#error Macro expanding into defined operator test 1\n+#endif\n+\n+#define Z\n+#if !is_Z_defined\t\t/* { dg-warning \"macro expansion\" } */\n+#error Macro expanding into defined operator test 2\n+#endif"}, {"sha": "a0a54e00598c32f56672b86d13704c494b67f231", "filename": "gcc/testsuite/gcc.dg/cpp/include1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude1.c?ref=9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3", "patch": "@@ -0,0 +1,13 @@\n+/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+\n+/* Tests that \"#include MACRO\" works.  */\n+\n+/* Source: Neil Booth, 29 Oct 2000.  */\n+\n+#define MACRO \"mi1c.h\"\n+#include MACRO\n+#ifndef CPP_MIC_H\n+#error #include MACRO does not work\n+#endif"}, {"sha": "ee5fd365a9cfc9ecbcff4241808a2f6351b25954", "filename": "gcc/testsuite/gcc.dg/cpp/macsyntx.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacsyntx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacsyntx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacsyntx.c?ref=9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3", "patch": "@@ -21,7 +21,6 @@\n \n #define ;\t\t\t/* { dg-error \"identifier\" } */\n #define SEMI;\t\t\t/* { dg-warning \"space\" } */\n-#define defined\t\t\t/* { dg-error \"defined\" } */\n #define foo(X\t\t\t/* { dg-error \"missing\" } */\n #define foo\\\n (X,)\t\t\t\t/* { dg-error \"parameter name\" } */"}, {"sha": "f33fd7887e9831c3602f4a191ec5bfbe3a237d79", "filename": "gcc/testsuite/gcc.dg/cpp/mi3.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi3.c?ref=9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3", "patch": "@@ -10,8 +10,11 @@\n #include \"mi3.def\"\n #undef X\n \n+#include \"mi3.h\"\n+#include \"mi3.h\"  /* The second include declares variable c.  */\n+\n int\n main(void)\n {\n-  return a + b;\n+  return a + b + c;\n }"}, {"sha": "8774fcf486ab96bc2c149f6b6e67f7e832c8cae7", "filename": "gcc/testsuite/gcc.dg/cpp/mi3.h", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi3.h?ref=9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3", "patch": "@@ -0,0 +1,7 @@\n+/* Another test case for over-eager multiple include optimization. */\n+\n+#ifndef GUARD\n+#define GUARD\n+#elif 1\t\t\t\t/* #elif kills optimisation  */\n+int c;\n+#endif"}, {"sha": "18530b3448ad64fc23d547c3f2cffb8973c2f967", "filename": "gcc/testsuite/gcc.dg/cpp/paste11.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpaste11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpaste11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpaste11.c?ref=9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3", "patch": "@@ -0,0 +1,15 @@\n+/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+\n+/* Test correct pasting of identifiers and numbers.  We can paste any\n+   number, as long as no '.', '-' or '+' appears in its spelling.  */\n+\n+#define glue(x, y) x ## y\n+\n+glue (ident, 12)\t\t/* OK.  */\n+glue (ident, 12e3)\t\t/* OK.  */\n+glue (ident, 12e+3)\t\t/* { dg-warning \"valid preprocessing tok\" } */\n+glue (ident, 12e-3)\t\t/* { dg-warning \"valid preprocessing tok\" } */\n+glue (ident, 1.2)\t\t/* { dg-warning \"valid preprocessing tok\" } */\n+glue (ident, .12)\t\t/* { dg-warning \"valid preprocessing tok\" } */"}, {"sha": "d87ea70591ccd130688669fa5b9c32618fc09e08", "filename": "gcc/testsuite/gcc.dg/cpp/skipping.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fskipping.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fskipping.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fskipping.c?ref=9f6ef6bcaf5716524e0b97c9ae07cdb885858cf3", "patch": "@@ -0,0 +1,20 @@\n+/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+\n+/* Tests expansion of macros whilst skipping false conditionals.  */\n+\n+/* Source: Neil Booth, 29 Oct 2000.  */\n+\n+#define F()\n+#define TRUE 1\n+\n+#if 0\n+F(\t\t\t/* No diagnostic: don't even try to expand it.  */\n+#endif\n+\n+#if 0\n+#elif TRUE\t\t/* Expand this, even though we were skipping.  */\n+#else\n+#error Macros not expanded in #elif\n+#endif"}]}