{"sha": "6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFiMzZkYWNjYmQ5NTVjZGIzY2FmNWI3MDQwYWI5OWNkYjZiNGQxNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-03-08T11:53:19Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-03-08T11:53:19Z"}, "message": "lang-specs.h: Pass -gnatwa if -Wall is passed.\n\n\t* lang-specs.h: Pass -gnatwa if -Wall is passed.\n\t* misc.c (gnat_handle_option) <OPT_Wall>: Expand into -Wunused\n\tand -Wuninitialized.\n\t(gnat_post_options): Clear warn_unused_parameter.\n\nFrom-SVN: r133030", "tree": {"sha": "5d337811cdef24023738299a98b7d54406f5428b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d337811cdef24023738299a98b7d54406f5428b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14/comments", "author": null, "committer": null, "parents": [{"sha": "8853cb0bcdbbf5424ceeed44778e302c4249532b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8853cb0bcdbbf5424ceeed44778e302c4249532b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8853cb0bcdbbf5424ceeed44778e302c4249532b"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "bbca1567488aa691fbcfa8fb488fa2a2500efd94", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14", "patch": "@@ -1,3 +1,10 @@\n+2008-03-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* lang-specs.h: Pass -gnatwa if -Wall is passed.\n+\t* misc.c (gnat_handle_option) <OPT_Wall>: Expand into -Wunused\n+\tand -Wuninitialized.\n+\t(gnat_post_options): Clear warn_unused_parameter.\n+\n 2008-03-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* utils.c (finish_record_type): Clear DECL_BIT_FIELD on sufficiently"}, {"sha": "65326d4c5b2d95b30debe5aaf4fa762ca5f2e27e", "filename": "gcc/ada/lang-specs.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14/gcc%2Fada%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14/gcc%2Fada%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flang-specs.h?ref=6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *           Copyright (C) 1992-2007, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 1992-2008, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -32,8 +32,8 @@\n    \"\\\n  %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n  %{!S:%{!c:%e-c or -S required for Ada}}\\\n- gnat1 %{I*} %{k8:-gnatk8} %{w:-gnatws} %{!Q:-quiet} %{nostdinc*}\\\n-    %{nostdlib*}\\\n+ gnat1 %{I*} %{k8:-gnatk8} %{Wall:-gnatwa} %{w:-gnatws} %{!Q:-quiet}\\\n+    %{nostdinc*} %{nostdlib*}\\\n     -dumpbase %{.adb:%b.adb}%{.ads:%b.ads}%{!.adb:%{!.ads:%b.ada}}\\\n     %{O*} %{W*} %{w} %{p} %{pg:-p} %{a} %{f*} %{d*} %{g*&m*} \"\n #if defined(TARGET_VXWORKS_RTP)"}, {"sha": "3845ba8242d543611804f5393b9cdef6b8241b38", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14", "patch": "@@ -249,7 +249,7 @@ gnat_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n    from ARGV that it successfully decoded; 0 indicates failure.  */\n \n static int\n-gnat_handle_option (size_t scode, const char *arg, int value ATTRIBUTE_UNUSED)\n+gnat_handle_option (size_t scode, const char *arg, int value)\n {\n   const struct cl_option *option = &cl_options[scode];\n   enum opt_code code = (enum opt_code) scode;\n@@ -271,8 +271,16 @@ gnat_handle_option (size_t scode, const char *arg, int value ATTRIBUTE_UNUSED)\n       gnat_argc++;\n       break;\n \n-      /* All front ends are expected to accept this.  */\n     case OPT_Wall:\n+      set_Wunused (value);\n+\n+      /* We save the value of warn_uninitialized, since if they put\n+\t -Wuninitialized on the command line, we need to generate a\n+\t warning about not using it without also specifying -O.  */\n+      if (warn_uninitialized != 1)\n+\twarn_uninitialized = (value ? 2 : 0);\n+      break;\n+\n       /* These are used in the GCC Makefile.  */\n     case OPT_Wmissing_prototypes:\n     case OPT_Wstrict_prototypes:\n@@ -357,6 +365,9 @@ gnat_init_options (unsigned int argc, const char **argv)\n bool\n gnat_post_options (const char **pfilename ATTRIBUTE_UNUSED)\n {\n+  /* ??? The warning machinery is outsmarted by Ada.  */\n+  warn_unused_parameter = 0;\n+\n   flag_inline_trees = 1;\n \n   if (!flag_no_inline)"}, {"sha": "8a8c5edadf5dba575afd3ae068ca7dc789a31e0c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14", "patch": "@@ -1,3 +1,7 @@\n+2008-03-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/uninit_func.adb: New test.\n+\n 2008-03-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/pack4.adb: New test."}, {"sha": "9c9ee3411431b8bdff3c5ad34d01c253ccf5da74", "filename": "gcc/testsuite/gnat.dg/uninit_func.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14/gcc%2Ftestsuite%2Fgnat.dg%2Funinit_func.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14/gcc%2Ftestsuite%2Fgnat.dg%2Funinit_func.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funinit_func.adb?ref=6ab36daccbd955cdb3caf5b7040ab99cdb6b4d14", "patch": "@@ -0,0 +1,13 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -Wall\" }\n+\n+function uninit_func (A, B : Boolean) return Boolean is\n+   C : Boolean; -- { dg-warning \"may be used uninitialized\" }\n+begin\n+   if A then\n+      C := False;\n+   elsif B then\n+      C := True;\n+   end if;\n+   return C;\n+end;"}]}