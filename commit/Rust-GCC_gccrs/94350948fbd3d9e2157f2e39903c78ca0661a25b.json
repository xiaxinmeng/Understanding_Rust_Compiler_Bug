{"sha": "94350948fbd3d9e2157f2e39903c78ca0661a25b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQzNTA5NDhmYmQzZDllMjE1N2YyZTM5OTAzYzc4Y2EwNjYxYTI1Yg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-08-23T17:12:23Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-08-23T17:12:23Z"}, "message": "cp-tree.h (DECL_CLONED_FUNCTION_P): Check DECL_LANG_SPECIFIC.\n\n\t* cp-tree.h (DECL_CLONED_FUNCTION_P): Check DECL_LANG_SPECIFIC.\n\t* mangle.c (write_function_type): Change prototype.\n\t(write_encoding): Don't mangle return types for\n\tconstructors or destructors.\n\t(write_type): Adjust call to write_function_type.\n\t* pt.c (instantiate_template): Instantiate alternate entry points\n\twhen instantiating the main function.\n\nFrom-SVN: r35916", "tree": {"sha": "3b18de0b9496900a925203d22eada82d35fb45e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b18de0b9496900a925203d22eada82d35fb45e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94350948fbd3d9e2157f2e39903c78ca0661a25b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94350948fbd3d9e2157f2e39903c78ca0661a25b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94350948fbd3d9e2157f2e39903c78ca0661a25b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94350948fbd3d9e2157f2e39903c78ca0661a25b/comments", "author": null, "committer": null, "parents": [{"sha": "e282c9c9f5ab1e633571d3ded6e15a81beb690cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e282c9c9f5ab1e633571d3ded6e15a81beb690cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e282c9c9f5ab1e633571d3ded6e15a81beb690cc"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "ae35173e9f9fcd2cb48f33a04534b97fdc952a02", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94350948fbd3d9e2157f2e39903c78ca0661a25b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94350948fbd3d9e2157f2e39903c78ca0661a25b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=94350948fbd3d9e2157f2e39903c78ca0661a25b", "patch": "@@ -1,3 +1,13 @@\n+2000-08-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (DECL_CLONED_FUNCTION_P): Check DECL_LANG_SPECIFIC.\n+\t* mangle.c (write_function_type): Change prototype.\n+\t(write_encoding): Don't mangle return types for\n+\tconstructors or destructors.\n+\t(write_type): Adjust call to write_function_type.\n+\t* pt.c (instantiate_template): Instantiate alternate entry points\n+\twhen instantiating the main function.\n+\t\n 2000-08-23  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* error.c (cp_print_error_function): Don't use embedded '\\n' in"}, {"sha": "8ccb19bcaff6c1df540a2e48aaa6ac98e050bcec", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94350948fbd3d9e2157f2e39903c78ca0661a25b/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94350948fbd3d9e2157f2e39903c78ca0661a25b/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=94350948fbd3d9e2157f2e39903c78ca0661a25b", "patch": "@@ -2010,8 +2010,9 @@ struct lang_decl\n \n /* Nonzero if NODE (a FUNCTION_DECL) is a cloned constructor or\n    destructor.  */\n-#define DECL_CLONED_FUNCTION_P(NODE) \\\n-  (DECL_CLONED_FUNCTION (NODE) != NULL_TREE)\n+#define DECL_CLONED_FUNCTION_P(NODE)\t\t\\\n+  (DECL_LANG_SPECIFIC (NODE) \t\t\t\\\n+   && DECL_CLONED_FUNCTION (NODE) != NULL_TREE)\n \n /* If DECL_CLONED_FUNCTION_P holds, this is the function that was\n    cloned.  */"}, {"sha": "9ca7178e08fe7ce690960ebd004c0984fb5700b9", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94350948fbd3d9e2157f2e39903c78ca0661a25b/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94350948fbd3d9e2157f2e39903c78ca0661a25b/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=94350948fbd3d9e2157f2e39903c78ca0661a25b", "patch": "@@ -166,7 +166,7 @@ static void write_special_name_destructor PARAMS ((tree));\n static void write_type PARAMS ((tree));\n static int write_CV_qualifiers_for_type PARAMS ((tree));\n static void write_builtin_type PARAMS ((tree));\n-static void write_function_type PARAMS ((tree, int));\n+static void write_function_type PARAMS ((tree));\n static void write_bare_function_type PARAMS ((tree, int));\n static void write_method_parms PARAMS ((tree, int));\n static void write_class_enum_type PARAMS ((tree));\n@@ -640,7 +640,10 @@ write_encoding (decl)\n       else\n \tfn_type = TREE_TYPE (decl);\n \n-      write_bare_function_type (fn_type, decl_is_template_id (decl, NULL));\n+      write_bare_function_type (fn_type, \n+\t\t\t\t(!DECL_CONSTRUCTOR_P (decl)\n+\t\t\t\t && !DECL_DESTRUCTOR_P (decl)\n+\t\t\t\t && decl_is_template_id (decl, NULL)));\n     }\n }\n \n@@ -1247,7 +1250,7 @@ write_type (type)\n \n \tcase FUNCTION_TYPE:\n \tcase METHOD_TYPE:\n-\t  write_function_type (type, 1);\n+\t  write_function_type (type);\n \t  break;\n \n \tcase UNION_TYPE:\n@@ -1431,15 +1434,14 @@ write_builtin_type (type)\n }\n \n /* Non-terminal <function-type>.  NODE is a FUNCTION_TYPE or\n-   METHOD_TYPE.  If INCLUDE_RETURN_TYPE is non-zero, the return type\n-   is mangled before the parameter types.\n+   METHOD_TYPE.  The return type is mangled before the parameter\n+   types.\n \n      <function-type> ::= F [Y] <bare-function-type> E   */\n \n static void\n-write_function_type (type, include_return_type)\n+write_function_type (type)\n      tree type;\n-     int include_return_type;\n {\n   MANGLE_TRACE_TREE (\"function-type\", type);\n \n@@ -1456,7 +1458,7 @@ write_function_type (type, include_return_type)\n        extern \"C\" function_t f; // Vice versa.\n \n      See [dcl.link].  */\n-  write_bare_function_type (type, include_return_type);\n+  write_bare_function_type (type, /*include_return_type_p=*/1);\n   write_char ('E');\n }\n "}, {"sha": "59fe306fb18d42b200df12ad22d53f36ac280254", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94350948fbd3d9e2157f2e39903c78ca0661a25b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94350948fbd3d9e2157f2e39903c78ca0661a25b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=94350948fbd3d9e2157f2e39903c78ca0661a25b", "patch": "@@ -7420,6 +7420,7 @@ tree\n instantiate_template (tmpl, targ_ptr)\n      tree tmpl, targ_ptr;\n {\n+  tree clone;\n   tree fndecl;\n   tree gen_tmpl;\n   tree spec;\n@@ -7483,6 +7484,13 @@ instantiate_template (tmpl, targ_ptr)\n   if (flag_external_templates)\n     add_pending_template (fndecl);\n \n+  /* If we've just instantiated the main entry point for a function,\n+     instantiate all the alternate entry points as well.  */\n+  for (clone = TREE_CHAIN (gen_tmpl);\n+       clone && DECL_CLONED_FUNCTION_P (clone);\n+       clone = TREE_CHAIN (clone))\n+    instantiate_template (clone, targ_ptr);\n+\n   return fndecl;\n }\n "}]}