{"sha": "be91309cdabe6cd22d8656e8c0333e578918079f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU5MTMwOWNkYWJlNmNkMjJkODY1NmU4YzAzMzNlNTc4OTE4MDc5Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-09-08T20:53:47Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-08T20:53:47Z"}, "message": "decl.c (start_function): Clear last_dtor_insn and last_parm_cleanup_insn.\n\n\t* decl.c (start_function): Clear last_dtor_insn and\n\tlast_parm_cleanup_insn.\n\t(push_cp_function_context): Just copy over a little of\n\tthe old context, not all of it.\n\nFrom-SVN: r29213", "tree": {"sha": "f5d0ca9f9a5255ae403e53148f91f3c103db5e85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5d0ca9f9a5255ae403e53148f91f3c103db5e85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be91309cdabe6cd22d8656e8c0333e578918079f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be91309cdabe6cd22d8656e8c0333e578918079f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be91309cdabe6cd22d8656e8c0333e578918079f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be91309cdabe6cd22d8656e8c0333e578918079f/comments", "author": null, "committer": null, "parents": [{"sha": "2e769ad05c7ddfd4791b18f1251113e7d0cf94a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e769ad05c7ddfd4791b18f1251113e7d0cf94a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e769ad05c7ddfd4791b18f1251113e7d0cf94a7"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "315e38db81d84786ecef39e4701e293fc3013c09", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be91309cdabe6cd22d8656e8c0333e578918079f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be91309cdabe6cd22d8656e8c0333e578918079f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=be91309cdabe6cd22d8656e8c0333e578918079f", "patch": "@@ -1,5 +1,10 @@\n 1999-09-08  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* decl.c (start_function): Clear last_dtor_insn and\n+\tlast_parm_cleanup_insn. \n+\t(push_cp_function_context): Just copy over a little of\n+\tthe old context, not all of it.\n+\n \t* cp-tree.h (copy_to_permanent): Remove.\n \t(permanent_p): Likewise.\n \t* decl.c (building_typename_type): Don't use copy_to_permanent."}, {"sha": "f3c67f922e06e95489319d98108a05f75b97317b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be91309cdabe6cd22d8656e8c0333e578918079f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be91309cdabe6cd22d8656e8c0333e578918079f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=be91309cdabe6cd22d8656e8c0333e578918079f", "patch": "@@ -12903,6 +12903,8 @@ start_function (declspecs, declarator, attrs, pre_parsed_p)\n   current_function_assigns_this = 0;\n   current_function_just_assigned_this = 0;\n   current_function_parms_stored = 0;\n+  last_dtor_insn = NULL_RTX;\n+  last_parm_cleanup_insn = NULL_RTX;\n   original_result_rtx = NULL_RTX;\n   base_init_expr = NULL_TREE;\n   current_base_init_list = NULL_TREE;\n@@ -14483,12 +14485,10 @@ push_cp_function_context (f)\n {\n   struct language_function *p \n     = ((struct language_function *) \n-       xmalloc (sizeof (struct language_function)));\n+       xcalloc (1, sizeof (struct language_function)));\n   f->language = p;\n   if (f->next)\n-    *p = *f->next->language;\n-  else\n-    bzero (p, sizeof (struct language_function));\n+    p->binding_level = f->next->language->binding_level;\n \n   /* For now, we always assume we're expanding all the way to RTL\n      unless we're explicitly doing otherwise.  */"}]}