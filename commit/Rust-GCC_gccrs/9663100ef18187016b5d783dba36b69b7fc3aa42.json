{"sha": "9663100ef18187016b5d783dba36b69b7fc3aa42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY2MzEwMGVmMTgxODcwMTZiNWQ3ODNkYmEzNmI2OWI3ZmMzYWE0Mg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1997-03-14T19:20:53Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1997-03-14T19:20:53Z"}, "message": "Add prototypes, remove unsed cplus_match, make mystrstr static\n\nFrom-SVN: r13702", "tree": {"sha": "5c1a13f6d57dc934b0550ae8136df93681ba122d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c1a13f6d57dc934b0550ae8136df93681ba122d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9663100ef18187016b5d783dba36b69b7fc3aa42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9663100ef18187016b5d783dba36b69b7fc3aa42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9663100ef18187016b5d783dba36b69b7fc3aa42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9663100ef18187016b5d783dba36b69b7fc3aa42/comments", "author": null, "committer": null, "parents": [{"sha": "38c37a0ef08365d63cad46f0c345dffdb138f5ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c37a0ef08365d63cad46f0c345dffdb138f5ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38c37a0ef08365d63cad46f0c345dffdb138f5ec"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "f43f7c1562d5c79508f8ac2bf2dcf8aa4813a722", "filename": "gcc/cplus-dem.c", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9663100ef18187016b5d783dba36b69b7fc3aa42/gcc%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9663100ef18187016b5d783dba36b69b7fc3aa42/gcc%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcplus-dem.c?ref=9663100ef18187016b5d783dba36b69b7fc3aa42", "patch": "@@ -1,5 +1,5 @@\n /* Demangler for GNU C++ \n-   Copyright 1989, 1991, 1994, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright 1989, 1991, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n    Written by James Clark (jjc@jclark.uucp)\n    Rewritten by Fred Fish (fnf@cygnus.com) for ARM and Lucid demangling\n    \n@@ -39,11 +39,13 @@ Boston, MA 02111-1307, USA.  */\n extern char *xmalloc PARAMS((unsigned));\n extern char *xrealloc PARAMS((char *, unsigned));\n \n-char *\n+static const char *mystrstr PARAMS ((const char *, const char *));\n+\n+static const char *\n mystrstr (s1, s2)\n-     char *s1, *s2;\n+     const char *s1, *s2;\n {\n-  register char *p = s1;\n+  register const char *p = s1;\n   register int len = strlen (s2);\n \n   for (; (p = strchr (p, *s2)) != 0; p++)\n@@ -222,6 +224,16 @@ static int\n demangle_template PARAMS ((struct work_stuff *work, const char **, string *,\n \t\t\t   string *));\n \n+static int\n+arm_pt PARAMS ((struct work_stuff *, const char *, int, const char **,\n+\t\tconst char **));\n+\n+static void\n+demangle_arm_pt PARAMS ((struct work_stuff *, const char **, int, string *));\n+\n+static int\n+demangle_class_name PARAMS ((struct work_stuff *, const char **, string *));\n+\n static int\n demangle_qualified PARAMS ((struct work_stuff *, const char **, string *,\n \t\t\t    int, int));\n@@ -472,21 +484,6 @@ cplus_mangle_opname (opname, options)\n   return (0);\n }\n \n-/* Check to see whether MANGLED can match TEXT in the first TEXT_LEN\n-   characters.  */\n-\n-int cplus_match (mangled, text, text_len)\n-     const char *mangled;\n-     char *text;\n-     int text_len;\n-{\n-  if (strncmp (mangled, text, text_len) != 0) {\n-    return(0); /* cannot match either */\n-  } else {\n-    return(1); /* matches mangled, may match demangled */\n-  }\n-}\n-\n /* char *cplus_demangle (const char *mangled, int options)\n \n    If MANGLED is a mangled function name produced by GNU C++, then"}]}