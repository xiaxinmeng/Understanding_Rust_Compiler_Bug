{"sha": "00738904f305a6237c2bae72b5fd7789995c4399", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA3Mzg5MDRmMzA1YTYyMzdjMmJhZTcyYjVmZDc3ODk5OTVjNDM5OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-11-29T14:01:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-11-29T14:01:32Z"}, "message": "tree-cfg.c (lower_phi_internal_fn): Do not look for further PHIs after a regular stmt.\n\n2016-11-29  Richard Biener  <rguenther@suse.de>\n\n\t* tree-cfg.c (lower_phi_internal_fn): Do not look for further\n\tPHIs after a regular stmt.\n\t(stmt_starts_bb_p): PHIs not preceeded by a PHI or a label\n\tstart a new BB.\n\nFrom-SVN: r242959", "tree": {"sha": "4a70fa5489144678da3ddf6a6199b39ce9fec70a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a70fa5489144678da3ddf6a6199b39ce9fec70a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00738904f305a6237c2bae72b5fd7789995c4399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00738904f305a6237c2bae72b5fd7789995c4399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00738904f305a6237c2bae72b5fd7789995c4399", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00738904f305a6237c2bae72b5fd7789995c4399/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "248cce34f1003712c39639980d4cb549ef24834a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/248cce34f1003712c39639980d4cb549ef24834a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/248cce34f1003712c39639980d4cb549ef24834a"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "2771bfd0fb7f0e8dfa88c97c033fb6b4f564d768", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00738904f305a6237c2bae72b5fd7789995c4399/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00738904f305a6237c2bae72b5fd7789995c4399/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00738904f305a6237c2bae72b5fd7789995c4399", "patch": "@@ -1,3 +1,10 @@\n+2016-11-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-cfg.c (lower_phi_internal_fn): Do not look for further\n+\tPHIs after a regular stmt.\n+\t(stmt_starts_bb_p): PHIs not preceeded by a PHI or a label\n+\tstart a new BB.\n+\n 2016-11-29  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/78582"}, {"sha": "6cb5b6f5b5f97b7d88b91bf932ca7134238f33fb", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00738904f305a6237c2bae72b5fd7789995c4399/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00738904f305a6237c2bae72b5fd7789995c4399/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=00738904f305a6237c2bae72b5fd7789995c4399", "patch": "@@ -361,14 +361,11 @@ lower_phi_internal_fn ()\n   /* After edge creation, handle __PHI function from GIMPLE FE.  */\n   FOR_EACH_BB_FN (bb, cfun)\n     {\n-      for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi);)\n+      for (gsi = gsi_after_labels (bb); !gsi_end_p (gsi);)\n \t{\n \t  stmt = gsi_stmt (gsi);\n \t  if (! gimple_call_internal_p (stmt, IFN_PHI))\n-\t    {\n-\t      gsi_next (&gsi);\n-\t      continue;\n-\t    }\n+\t    break;\n \n \t  lhs = gimple_call_lhs (stmt);\n \t  phi_node = create_phi_node (lhs, bb);\n@@ -2604,11 +2601,21 @@ stmt_starts_bb_p (gimple *stmt, gimple *prev_stmt)\n       else\n \treturn true;\n     }\n-  else if (gimple_code (stmt) == GIMPLE_CALL\n-\t   && gimple_call_flags (stmt) & ECF_RETURNS_TWICE)\n-    /* setjmp acts similar to a nonlocal GOTO target and thus should\n-       start a new block.  */\n-    return true;\n+  else if (gimple_code (stmt) == GIMPLE_CALL)\n+    {\n+      if (gimple_call_flags (stmt) & ECF_RETURNS_TWICE)\n+\t/* setjmp acts similar to a nonlocal GOTO target and thus should\n+\t   start a new block.  */\n+\treturn true;\n+      if (gimple_call_internal_p (stmt, IFN_PHI)\n+\t  && prev_stmt\n+\t  && gimple_code (prev_stmt) != GIMPLE_LABEL\n+\t  && (gimple_code (prev_stmt) != GIMPLE_CALL\n+\t      || ! gimple_call_internal_p (prev_stmt, IFN_PHI)))\n+\t/* PHI nodes start a new block unless preceeded by a label\n+\t   or another PHI.  */\n+\treturn true;\n+    }\n \n   return false;\n }"}]}