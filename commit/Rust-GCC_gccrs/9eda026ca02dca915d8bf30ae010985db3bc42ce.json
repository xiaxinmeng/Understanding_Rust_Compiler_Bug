{"sha": "9eda026ca02dca915d8bf30ae010985db3bc42ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVkYTAyNmNhMDJkY2E5MTVkOGJmMzBhZTAxMDk4NWRiM2JjNDJjZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-10-22T19:39:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-10-22T19:39:14Z"}, "message": "i386.c (memory_address_length): Added missing part from my previous commit.\n\n\t* config/i386/i386.c (memory_address_length):\n\tAdded missing part from my previous commit.\n\nFrom-SVN: r192694", "tree": {"sha": "e47c1e81ebec2d59f554f3ada0fadf45a09baa11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e47c1e81ebec2d59f554f3ada0fadf45a09baa11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9eda026ca02dca915d8bf30ae010985db3bc42ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eda026ca02dca915d8bf30ae010985db3bc42ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eda026ca02dca915d8bf30ae010985db3bc42ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eda026ca02dca915d8bf30ae010985db3bc42ce/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "74911c3cff91b2d02e1f51c3ca0264c58d06d9f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74911c3cff91b2d02e1f51c3ca0264c58d06d9f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74911c3cff91b2d02e1f51c3ca0264c58d06d9f1"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "3794f50c64b509d9175d9a3976aaa34364f9a14e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eda026ca02dca915d8bf30ae010985db3bc42ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eda026ca02dca915d8bf30ae010985db3bc42ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9eda026ca02dca915d8bf30ae010985db3bc42ce", "patch": "@@ -18,8 +18,8 @@\n \n \t* config/i386/i386.c (memory_address_length): Assert that non-null\n \tbase or index RTXes are registers.  Do not check for REG RTXes.\n-\tDetermine addr32 prefix from original base and index RTXes.\n-\tSimplify code.\n+\tDetermine addr32 prefix using SImode_address_operand or\n+\tfrom original base and index RTXes.  Simplify code.\n \n 2012-10-22  Richard Biener  <rguenther@suse.de>\n "}, {"sha": "ae48d1a91d5e916859dbc078749f25cddbe18dcc", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eda026ca02dca915d8bf30ae010985db3bc42ce/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eda026ca02dca915d8bf30ae010985db3bc42ce/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9eda026ca02dca915d8bf30ae010985db3bc42ce", "patch": "@@ -23780,7 +23780,8 @@ memory_address_length (rtx addr, bool lea)\n \n   /*  If this is not LEA instruction, add the length of addr32 prefix.  */\n   if (TARGET_64BIT && !lea\n-      && ((parts.base && GET_MODE (parts.base) == SImode)\n+      && (SImode_address_operand (addr, VOIDmode)\n+\t  || (parts.base && GET_MODE (parts.base) == SImode)\n \t  || (parts.index && GET_MODE (parts.index) == SImode)))\n     len++;\n "}]}