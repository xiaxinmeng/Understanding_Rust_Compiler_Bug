{"sha": "4287843d628766583f57f41f445cc32f480389d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI4Nzg0M2Q2Mjg3NjY1ODNmNTdmNDFmNDQ1Y2MzMmY0ODAzODlkNw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@redhat.com", "date": "2000-03-21T18:54:16Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2000-03-21T18:54:16Z"}, "message": "Fix problems with -mno-fp-regs\n\nFrom-SVN: r32672", "tree": {"sha": "e1e13df8f32a0663c781b9144d599684724e92cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1e13df8f32a0663c781b9144d599684724e92cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4287843d628766583f57f41f445cc32f480389d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4287843d628766583f57f41f445cc32f480389d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4287843d628766583f57f41f445cc32f480389d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4287843d628766583f57f41f445cc32f480389d7/comments", "author": null, "committer": null, "parents": [{"sha": "d0f062fbb30186c3d5b65adee0bf5ac478a366a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0f062fbb30186c3d5b65adee0bf5ac478a366a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0f062fbb30186c3d5b65adee0bf5ac478a366a4"}], "stats": {"total": 66, "additions": 49, "deletions": 17}, "files": [{"sha": "1d35900a05de304ebf215dae0016c81e63e35d05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4287843d628766583f57f41f445cc32f480389d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4287843d628766583f57f41f445cc32f480389d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4287843d628766583f57f41f445cc32f480389d7", "patch": "@@ -1,3 +1,11 @@\n+2000-03-21  Michael Meissner  <meissner@redhat.com>\n+\n+\t* config/alpha/alpha.md (floating point insns): Add TARGET_FP to\n+\tall floating point insns that just tested the macro\n+\tTARGET_HAS_XFLOATING_LIBS.\n+\t(movsf/movdf recognizers): Add separate insns if -mno-fp-regs is\n+\tused to only use the gprs.\n+\n 2000-03-21  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* tree.h (COMPLETE_TYPE_P): New macro."}, {"sha": "84a7ac3b5a0c08aae7deadb48c7f7541eea6f095", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 41, "deletions": 17, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4287843d628766583f57f41f445cc32f480389d7/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4287843d628766583f57f41f445cc32f480389d7/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=4287843d628766583f57f41f445cc32f480389d7", "patch": "@@ -2093,7 +2093,7 @@\n (define_expand \"fix_trunctfdi2\"\n   [(use (match_operand:DI 0 \"register_operand\" \"\"))\n    (use (match_operand:TF 1 \"general_operand\" \"\"))]\n-  \"TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_cvt (FIX, operands); DONE;\")\n \n (define_insn \"\"\n@@ -2131,25 +2131,25 @@\n (define_expand \"floatditf2\"\n   [(use (match_operand:TF 0 \"register_operand\" \"\"))\n    (use (match_operand:DI 1 \"general_operand\" \"\"))]\n-  \"TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_cvt (FLOAT, operands); DONE;\")\n \n (define_expand \"floatunsdisf2\"\n   [(use (match_operand:SF 0 \"register_operand\" \"\"))\n    (use (match_operand:DI 1 \"register_operand\" \"\"))]\n-  \"\"\n+  \"TARGET_FP\"\n   \"alpha_emit_floatuns (operands); DONE;\")\n \n (define_expand \"floatunsdidf2\"\n   [(use (match_operand:DF 0 \"register_operand\" \"\"))\n    (use (match_operand:DI 1 \"register_operand\" \"\"))]\n-  \"\"\n+  \"TARGET_FP\"\n   \"alpha_emit_floatuns (operands); DONE;\")\n \n (define_expand \"floatunsditf2\"\n   [(use (match_operand:TF 0 \"register_operand\" \"\"))\n    (use (match_operand:DI 1 \"general_operand\" \"\"))]\n-  \"TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_cvt (UNSIGNED_FLOAT, operands); DONE;\")\n \n (define_expand \"extendsfdf2\"\n@@ -2183,7 +2183,7 @@\n (define_expand \"extendsftf2\"\n   [(use (match_operand:TF 0 \"register_operand\" \"\"))\n    (use (match_operand:SF 1 \"general_operand\" \"\"))]\n-  \"TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n   \"\n {\n   rtx tmp = gen_reg_rtx (DFmode);\n@@ -2195,7 +2195,7 @@\n (define_expand \"extenddftf2\"\n   [(use (match_operand:TF 0 \"register_operand\" \"\"))\n    (use (match_operand:DF 1 \"general_operand\" \"\"))]\n-  \"TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_cvt (FLOAT_EXTEND, operands); DONE;\")\n \n (define_insn \"\"\n@@ -2217,13 +2217,13 @@\n (define_expand \"trunctfdf2\"\n   [(use (match_operand:DF 0 \"register_operand\" \"\"))\n    (use (match_operand:TF 1 \"general_operand\" \"\"))]\n-  \"TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_cvt (FLOAT_TRUNCATE, operands); DONE;\")\n \n (define_expand \"trunctfsf2\"\n   [(use (match_operand:SF 0 \"register_operand\" \"\"))\n    (use (match_operand:TF 1 \"general_operand\" \"\"))]\n-  \"TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n   \"\n {\n   rtx tmpf, sticky, arg, lo, hi;\n@@ -2317,7 +2317,7 @@\n   [(use (match_operand 0 \"register_operand\" \"\"))\n    (use (match_operand 1 \"general_operand\" \"\"))\n    (use (match_operand 2 \"general_operand\" \"\"))]\n-  \"TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_arith (DIV, operands); DONE;\")\n \n (define_insn \"\"\n@@ -2381,7 +2381,7 @@\n   [(use (match_operand 0 \"register_operand\" \"\"))\n    (use (match_operand 1 \"general_operand\" \"\"))\n    (use (match_operand 2 \"general_operand\" \"\"))]\n-  \"TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_arith (MULT, operands); DONE;\")\n \n (define_insn \"\"\n@@ -2455,7 +2455,7 @@\n   [(use (match_operand 0 \"register_operand\" \"\"))\n    (use (match_operand 1 \"general_operand\" \"\"))\n    (use (match_operand 2 \"general_operand\" \"\"))]\n-  \"TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_arith (MINUS, operands); DONE;\")\n \n (define_insn \"\"\n@@ -3172,7 +3172,7 @@\n (define_expand \"cmptf\"\n   [(set (cc0) (compare (match_operand:TF 0 \"general_operand\" \"\")\n \t\t       (match_operand:TF 1 \"general_operand\" \"\")))]\n-  \"TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n   \"\n {\n   alpha_compare.op0 = operands[0];\n@@ -4209,7 +4209,7 @@\n (define_insn \"\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f,f,*r,*r,m,m\")\n \t(match_operand:SF 1 \"input_operand\" \"fG,m,*rG,m,fG,*r\"))]\n-  \"! TARGET_FIX\n+  \"TARGET_FPREGS && ! TARGET_FIX\n    && (register_operand (operands[0], SFmode)\n        || reg_or_fp0_operand (operands[1], SFmode))\"\n   \"@\n@@ -4224,7 +4224,7 @@\n (define_insn \"\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f,f,*r,*r,m,m,f,*r\")\n \t(match_operand:SF 1 \"input_operand\" \"fG,m,*rG,m,fG,*r,*r,f\"))]\n-  \"TARGET_FIX\n+  \"TARGET_FPREGS && TARGET_FIX\n    && (register_operand (operands[0], SFmode)\n        || reg_or_fp0_operand (operands[1], SFmode))\"\n   \"@\n@@ -4238,10 +4238,22 @@\n    ftois %1,%0\"\n   [(set_attr \"type\" \"fcpys,fld,ilog,ild,fst,ist,itof,ftoi\")])\n \n+(define_insn \"\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=r,r,m\")\n+\t(match_operand:SF 1 \"input_operand\" \"rG,m,r\"))]\n+  \"! TARGET_FPREGS\n+   && (register_operand (operands[0], SFmode)\n+       || reg_or_fp0_operand (operands[1], SFmode))\"\n+  \"@\n+   mov %r1,%0\n+   ldl %0,%1\n+   stl %r1,%0\"\n+  [(set_attr \"type\" \"ilog,ild,ist\")])\n+\n (define_insn \"\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,*r,*r,m,m\")\n \t(match_operand:DF 1 \"input_operand\" \"fG,m,*rG,m,fG,*r\"))]\n-  \"! TARGET_FIX\n+  \"TARGET_FPREGS && ! TARGET_FIX\n    && (register_operand (operands[0], DFmode)\n        || reg_or_fp0_operand (operands[1], DFmode))\"\n   \"@\n@@ -4256,7 +4268,7 @@\n (define_insn \"\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,*r,*r,m,m,f,*r\")\n \t(match_operand:DF 1 \"input_operand\" \"fG,m,*rG,m,fG,*r,*r,f\"))]\n-  \"TARGET_FIX\n+  \"TARGET_FPREGS && TARGET_FIX\n    && (register_operand (operands[0], DFmode)\n        || reg_or_fp0_operand (operands[1], DFmode))\"\n   \"@\n@@ -4270,6 +4282,18 @@\n    ftoit %1,%0\"\n   [(set_attr \"type\" \"fcpys,fld,ilog,ild,fst,ist,itof,ftoi\")])\n \n+(define_insn \"\"\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r,r,m\")\n+\t(match_operand:DF 1 \"input_operand\" \"rG,m,r\"))]\n+  \"! TARGET_FPREGS\n+   && (register_operand (operands[0], DFmode)\n+       || reg_or_fp0_operand (operands[1], DFmode))\"\n+  \"@\n+   mov %r1,%0\n+   ldq %0,%1\n+   stq %r1,%0\"\n+  [(set_attr \"type\" \"ilog,ild,ist\")])\n+\n ;; Subregs suck for register allocation.  Pretend we can move TFmode\n ;; data between general registers until after reload.\n (define_insn \"\""}]}