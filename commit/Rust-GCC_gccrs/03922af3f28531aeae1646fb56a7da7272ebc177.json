{"sha": "03922af3f28531aeae1646fb56a7da7272ebc177", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM5MjJhZjNmMjg1MzFhZWFlMTY0NmZiNTZhN2RhNzI3MmViYzE3Nw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-03-31T18:36:54Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-03-31T18:36:54Z"}, "message": "Make print_scop output the scoplib format.\n\n2010-03-16  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-poly.c (print_scattering_function): Pretty print following\n\tthe scoplib format.\n\t(print_pdr): Same.\n\t(print_pbb_domain): Same.\n\t(dump_gbb_cases): Same.\n\t(dump_gbb_conditions): Same.\n\t(print_pdrs): Same.\n\t(print_pbb): Same.\n\t(print_scop_params): Same.\n\t(print_scop_context): Same.\n\t(print_scop): Same.\n\t(print_pbb_body): New.\n\t(lst_indent_to): New.\n\t(print_lst): Start new lines with a #.\n\t* graphite-poly.h (pbb_bb): New.\n\t(pbb_index): Use pbb_bb.\n\t* graphite-ppl.c (ppl_print_powerset_matrix): Print the number of\n\tdisjuncts.\n\t* tree-data-ref.c (dump_data_reference): Start new lines with a #.\n\nFrom-SVN: r157883", "tree": {"sha": "496b04f923347750b0a93595d2a1b26498418d34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/496b04f923347750b0a93595d2a1b26498418d34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03922af3f28531aeae1646fb56a7da7272ebc177", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03922af3f28531aeae1646fb56a7da7272ebc177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03922af3f28531aeae1646fb56a7da7272ebc177", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03922af3f28531aeae1646fb56a7da7272ebc177/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7da9e6ed3fabd75056877b359fd6d1c46e6a1e51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da9e6ed3fabd75056877b359fd6d1c46e6a1e51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7da9e6ed3fabd75056877b359fd6d1c46e6a1e51"}], "stats": {"total": 204, "additions": 164, "deletions": 40}, "files": [{"sha": "fc7e16f36be9f4a506b112fe710d47ed6bf68db9", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03922af3f28531aeae1646fb56a7da7272ebc177/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03922af3f28531aeae1646fb56a7da7272ebc177/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=03922af3f28531aeae1646fb56a7da7272ebc177", "patch": "@@ -1,3 +1,25 @@\n+2010-03-16  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-poly.c (print_scattering_function): Pretty print following\n+\tthe scoplib format.\n+\t(print_pdr): Same.\n+\t(print_pbb_domain): Same.\n+\t(dump_gbb_cases): Same.\n+\t(dump_gbb_conditions): Same.\n+\t(print_pdrs): Same.\n+\t(print_pbb): Same.\n+\t(print_scop_params): Same.\n+\t(print_scop_context): Same.\n+\t(print_scop): Same.\n+\t(print_pbb_body): New.\n+\t(lst_indent_to): New.\n+\t(print_lst): Start new lines with a #.\n+\t* graphite-poly.h (pbb_bb): New.\n+\t(pbb_index): Use pbb_bb.\n+\t* graphite-ppl.c (ppl_print_powerset_matrix): Print the number of\n+\tdisjuncts.\n+\t* tree-data-ref.c (dump_data_reference): Start new lines with a #.\n+\n 2010-03-13  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/43351"}, {"sha": "e8ab3218c390f99b8e6d932b067e98c3d749885b", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 125, "deletions": 34, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03922af3f28531aeae1646fb56a7da7272ebc177/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03922af3f28531aeae1646fb56a7da7272ebc177/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=03922af3f28531aeae1646fb56a7da7272ebc177", "patch": "@@ -145,7 +145,16 @@ print_scattering_function (FILE *file, poly_bb_p pbb)\n   if (!PBB_TRANSFORMED (pbb))\n     return;\n \n-  fprintf (file, \"scattering bb_%d (\\n\", pbb_index (pbb));\n+  if (PBB_TRANSFORMED_SCATTERING (pbb)\n+      || PBB_ORIGINAL_SCATTERING (pbb))\n+    fprintf (file, \"# Scattering function is provided\\n1\\n\");\n+  else\n+    {\n+      fprintf (file, \"# Scattering function is not provided\\n0\\n\");\n+      return;\n+    }\n+\n+  fprintf (file, \"# scattering bb_%d (\\n\", pbb_index (pbb));\n   fprintf (file, \"#  eq\");\n \n   for (i = 0; i < pbb_nb_scattering_transform (pbb); i++)\n@@ -162,9 +171,14 @@ print_scattering_function (FILE *file, poly_bb_p pbb)\n \n   fprintf (file, \"    cst\\n\");\n \n-  ppl_print_polyhedron_matrix (file, PBB_TRANSFORMED_SCATTERING (pbb));\n+  /* Number of disjunct components.  Remove this when\n+     PBB_TRANSFORMED_SCATTERING will be a pointset_powerset.  */\n+  fprintf (file, \"1\\n\");\n+  ppl_print_polyhedron_matrix (file, PBB_TRANSFORMED_SCATTERING (pbb)\n+\t\t\t       ? PBB_TRANSFORMED_SCATTERING (pbb)\n+\t\t\t       : PBB_ORIGINAL_SCATTERING (pbb));\n \n-  fprintf (file, \")\\n\");\n+  fprintf (file, \"#)\\n\");\n }\n \n /* Prints to FILE the iteration domain of PBB.  */\n@@ -411,7 +425,7 @@ print_pdr_access_layout (FILE *file, poly_dr_p pdr)\n void\n print_pdr (FILE *file, poly_dr_p pdr)\n {\n-  fprintf (file, \"pdr_%d (\", PDR_ID (pdr));\n+  fprintf (file, \"# pdr_%d (\", PDR_ID (pdr));\n \n   switch (PDR_TYPE (pdr))\n     {\n@@ -433,12 +447,12 @@ print_pdr (FILE *file, poly_dr_p pdr)\n \n   dump_data_reference (file, (data_reference_p) PDR_CDR (pdr));\n \n-  fprintf (file, \"data accesses (\\n\");\n+  fprintf (file, \"# data accesses (\\n\");\n   print_pdr_access_layout (file, pdr);\n   ppl_print_powerset_matrix (file, PDR_ACCESSES (pdr));\n-  fprintf (file, \")\\n\");\n+  fprintf (file, \"#)\\n\");\n \n-  fprintf (file, \")\\n\");\n+  fprintf (file, \"#)\\n\");\n }\n \n /* Prints to STDERR the polyhedral data reference PDR.  */\n@@ -503,7 +517,7 @@ print_pbb_domain (FILE *file, poly_bb_p pbb)\n   if (!PBB_DOMAIN (pbb))\n     return;\n \n-  fprintf (file, \"domains bb_%d (\\n\", GBB_BB (gbb)->index);\n+  fprintf (file, \"# Iteration domain of bb_%d (\\n\", GBB_BB (gbb)->index);\n   fprintf (file, \"#  eq\");\n \n   for (i = 0; i < pbb_dim_iter_domain (pbb); i++)\n@@ -516,8 +530,10 @@ print_pbb_domain (FILE *file, poly_bb_p pbb)\n \n   if (PBB_DOMAIN (pbb))\n     ppl_print_powerset_matrix (file, PBB_DOMAIN (pbb));\n+  else\n+    fprintf (file, \"0\\n\");\n \n-  fprintf (file, \")\\n\");\n+  fprintf (file, \"#)\\n\");\n }\n \n /* Dump the cases of a graphite basic block GBB on FILE.  */\n@@ -536,12 +552,15 @@ dump_gbb_cases (FILE *file, gimple_bb_p gbb)\n   if (VEC_empty (gimple, cases))\n     return;\n \n-  fprintf (file, \"cases bb_%d (\", GBB_BB (gbb)->index);\n+  fprintf (file, \"# cases bb_%d (\\n\", GBB_BB (gbb)->index);\n \n   for (i = 0; VEC_iterate (gimple, cases, i, stmt); i++)\n-    print_gimple_stmt (file, stmt, 0, 0);\n+    {\n+      fprintf (file, \"# \");\n+      print_gimple_stmt (file, stmt, 0, 0);\n+    }\n \n-  fprintf (file, \")\\n\");\n+  fprintf (file, \"#)\\n\");\n }\n \n /* Dump conditions of a graphite basic block GBB on FILE.  */\n@@ -560,12 +579,15 @@ dump_gbb_conditions (FILE *file, gimple_bb_p gbb)\n   if (VEC_empty (gimple, conditions))\n     return;\n \n-  fprintf (file, \"conditions bb_%d (\", GBB_BB (gbb)->index);\n+  fprintf (file, \"# conditions bb_%d (\\n\", GBB_BB (gbb)->index);\n \n   for (i = 0; VEC_iterate (gimple, conditions, i, stmt); i++)\n-    print_gimple_stmt (file, stmt, 0, 0);\n+    {\n+      fprintf (file, \"# \");\n+      print_gimple_stmt (file, stmt, 0, 0);\n+    }\n \n-  fprintf (file, \")\\n\");\n+  fprintf (file, \"#)\\n\");\n }\n \n /* Print to FILE all the data references of PBB.  */\n@@ -575,9 +597,38 @@ print_pdrs (FILE *file, poly_bb_p pbb)\n {\n   int i;\n   poly_dr_p pdr;\n+  int nb_reads = 0;\n+  int nb_writes = 0;\n \n+  if (VEC_length (poly_dr_p, PBB_DRS (pbb)) == 0)\n+    {\n+      fprintf (file, \"# Access informations are not provided\\n0\\n\");\n+      return;\n+    }\n+\n+  fprintf (file, \"# Data references (\\n\");\n+  fprintf (file, \"# Access informations are provided\\n1\\n\");\n+\n+  for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb), i, pdr); i++)\n+    if (PDR_TYPE (pdr) == PDR_READ)\n+      nb_reads++;\n+    else\n+      nb_writes++;\n+\n+  fprintf (file, \"# Read data references (\\n\");\n+  fprintf (file, \"# Read access informations\\n%d\\n\", nb_reads);\n   for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb), i, pdr); i++)\n-    print_pdr (file, pdr);\n+    if (PDR_TYPE (pdr) == PDR_READ)\n+      print_pdr (file, pdr);\n+  fprintf (file, \"#)\\n\");\n+\n+  fprintf (file, \"# Write data references (\\n\");\n+  fprintf (file, \"# Write access informations\\n%d\\n\", nb_writes);\n+  for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb), i, pdr); i++)\n+    if (PDR_TYPE (pdr) != PDR_READ)\n+      print_pdr (file, pdr);\n+  fprintf (file, \"#)\\n\");\n+  fprintf (file, \"#)\\n\");\n }\n \n /* Print to STDERR all the data references of PBB.  */\n@@ -588,18 +639,34 @@ debug_pdrs (poly_bb_p pbb)\n   print_pdrs (stderr, pbb);\n }\n \n+/* Print to FILE the body of PBB.  */\n+\n+static void\n+print_pbb_body (FILE *file, poly_bb_p pbb)\n+{\n+  fprintf (file, \"# Body (\\n\");\n+  fprintf (file, \"# Statement body is provided\\n1\\n\");\n+  fprintf (file, \"# Original iterator names\\n# Iterator names are not provided yet.\\n\");\n+  fprintf (file, \"# Statement body\\n\");\n+  fprintf (file, \"{\\n\");\n+  dump_bb (pbb_bb (pbb), file, 0);\n+  fprintf (file, \"}\\n\");\n+  fprintf (file, \"#)\\n\");\n+}\n+\n /* Print to FILE the domain and scattering function of PBB.  */\n \n void\n print_pbb (FILE *file, poly_bb_p pbb)\n {\n-  fprintf (file, \"pbb_%d (\\n\", pbb_index (pbb));\n+  fprintf (file, \"# pbb_%d (\\n\", pbb_index (pbb));\n   dump_gbb_conditions (file, PBB_BLACK_BOX (pbb));\n   dump_gbb_cases (file, PBB_BLACK_BOX (pbb));\n-  print_pdrs (file, pbb);\n   print_pbb_domain (file, pbb);\n   print_scattering_function (file, pbb);\n-  fprintf (file, \")\\n\");\n+  print_pdrs (file, pbb);\n+  print_pbb_body (file, pbb);\n+  fprintf (file, \"#)\\n\");\n }\n \n /* Print to FILE the parameters of SCOP.  */\n@@ -610,14 +677,19 @@ print_scop_params (FILE *file, scop_p scop)\n   int i;\n   tree t;\n \n-  fprintf (file, \"parameters (\\n\");\n+  fprintf (file, \"# parameters (\\n\");\n+\n+  if (VEC_length (tree, SESE_PARAMS (SCOP_REGION (scop))))\n+    fprintf (file, \"# Parameter names are provided\\n1\\n# Parameter names \\n\");\n+  else\n+    fprintf (file, \"# Parameter names are not provided\\n0\\n\");\n+\n   for (i = 0; VEC_iterate (tree, SESE_PARAMS (SCOP_REGION (scop)), i, t); i++)\n     {\n-      fprintf (file, \"p_%d -> \", i);\n       print_generic_expr (file, t, 0);\n-      fprintf (file, \"\\n\");\n+      fprintf (file, \" # p_%d \\n\", i);\n     }\n-  fprintf (file, \")\\n\");\n+  fprintf (file, \"#)\\n\");\n }\n \n /* Print to FILE the context of SCoP.  */\n@@ -626,7 +698,7 @@ print_scop_context (FILE *file, scop_p scop)\n {\n   graphite_dim_t i;\n \n-  fprintf (file, \"context (\\n\");\n+  fprintf (file, \"# Context (\\n\");\n   fprintf (file, \"#  eq\");\n \n   for (i = 0; i < scop_nb_params (scop); i++)\n@@ -636,8 +708,10 @@ print_scop_context (FILE *file, scop_p scop)\n \n   if (SCOP_CONTEXT (scop))\n     ppl_print_powerset_matrix (file, SCOP_CONTEXT (scop));\n+  else\n+    fprintf (file, \"0 %d\\n\", (int) scop_nb_params (scop) + 2);\n \n-  fprintf (file, \")\\n\");\n+  fprintf (file, \"# )\\n\");\n }\n \n /* Print to FILE the SCOP.  */\n@@ -648,22 +722,25 @@ print_scop (FILE *file, scop_p scop)\n   int i;\n   poly_bb_p pbb;\n \n-  fprintf (file, \"scop (\\n\");\n-  print_scop_params (file, scop);\n+  fprintf (file, \"SCoP #(\\n\");\n+  fprintf (file, \"# Language\\nGimple\\n\");\n   print_scop_context (file, scop);\n+  print_scop_params (file, scop);\n+  fprintf (file, \"# Number of statements\\n%d\\n\",\n+\t   VEC_length (poly_bb_p, SCOP_BBS (scop)));\n \n   for (i = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), i, pbb); i++)\n     print_pbb (file, pbb);\n \n-  fprintf (file, \"original_lst (\\n\");\n+  fprintf (file, \"# original_lst (\\n\");\n   print_lst (file, SCOP_ORIGINAL_SCHEDULE (scop), 0);\n-  fprintf (file, \")\\n\");\n+  fprintf (file, \"\\n#)\\n\");\n \n-  fprintf (file, \"transformed_lst (\\n\");\n+  fprintf (file, \"# transformed_lst (\\n\");\n   print_lst (file, SCOP_TRANSFORMED_SCHEDULE (scop), 0);\n-  fprintf (file, \")\\n\");\n+  fprintf (file, \"\\n#)\\n\");\n \n-  fprintf (file, \")\\n\");\n+  fprintf (file, \"#)\\n\");\n }\n \n /* Print to STDERR the domain of PBB.  */\n@@ -901,6 +978,20 @@ scop_to_lst (scop_p scop)\n   SCOP_TRANSFORMED_SCHEDULE (scop) = copy_lst (res);\n }\n \n+/* Print to FILE on a new line COLUMN white spaces.  */\n+\n+static void\n+lst_indent_to (FILE *file, int column)\n+{\n+  int i;\n+\n+  if (column > 0)\n+    fprintf (file, \"\\n#\");\n+\n+  for (i = 0; i < column; i++)\n+    fprintf (file, \" \");\n+}\n+\n /* Print LST to FILE with INDENT spaces of indentation.  */\n \n void\n@@ -909,7 +1000,7 @@ print_lst (FILE *file, lst_p lst, int indent)\n   if (!lst)\n     return;\n \n-  indent_to (file, indent);\n+  lst_indent_to (file, indent);\n \n   if (LST_LOOP_P (lst))\n     {\n@@ -919,7 +1010,7 @@ print_lst (FILE *file, lst_p lst, int indent)\n       if (LST_LOOP_FATHER (lst))\n \tfprintf (file, \"%d (loop\", lst_dewey_number (lst));\n       else\n-\tfprintf (file, \"(root\");\n+\tfprintf (file, \"#(root\");\n \n       for (i = 0; VEC_iterate (lst_p, LST_SEQ (lst), i, l); i++)\n \tprint_lst (file, l, indent + 2);"}, {"sha": "665276bdaebd195b6a4083563c526331ab652147", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03922af3f28531aeae1646fb56a7da7272ebc177/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03922af3f28531aeae1646fb56a7da7272ebc177/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=03922af3f28531aeae1646fb56a7da7272ebc177", "patch": "@@ -385,12 +385,19 @@ number_of_write_pdrs (poly_bb_p pbb)\n   return res;\n }\n \n+/* The basic block of the PBB.  */\n+static inline basic_block\n+pbb_bb (poly_bb_p pbb)\n+{\n+  return GBB_BB (PBB_BLACK_BOX (pbb));\n+}\n+\n /* The index of the PBB.  */\n \n static inline int\n pbb_index (poly_bb_p pbb)\n {\n-  return GBB_BB (PBB_BLACK_BOX (pbb))->index;\n+  return pbb_bb (pbb)->index;\n }\n \n /* The loop of the PBB.  */"}, {"sha": "fce69f75a0e9b865b3b2b88095367712e7ee351a", "filename": "gcc/graphite-ppl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03922af3f28531aeae1646fb56a7da7272ebc177/gcc%2Fgraphite-ppl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03922af3f28531aeae1646fb56a7da7272ebc177/gcc%2Fgraphite-ppl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-ppl.c?ref=03922af3f28531aeae1646fb56a7da7272ebc177", "patch": "@@ -591,11 +591,15 @@ void\n ppl_print_powerset_matrix (FILE *file,\n \t\t\t   ppl_Pointset_Powerset_C_Polyhedron_t ps)\n {\n+  size_t nb_disjuncts;\n   ppl_Pointset_Powerset_C_Polyhedron_iterator_t it, end;\n \n   ppl_new_Pointset_Powerset_C_Polyhedron_iterator (&it);\n   ppl_new_Pointset_Powerset_C_Polyhedron_iterator (&end);\n \n+  ppl_Pointset_Powerset_C_Polyhedron_size (ps, &nb_disjuncts);\n+  fprintf (file, \"%d\\n\", (int) nb_disjuncts);\n+\n   for (ppl_Pointset_Powerset_C_Polyhedron_iterator_begin (ps, it),\n        ppl_Pointset_Powerset_C_Polyhedron_iterator_end (ps, end);\n        !ppl_Pointset_Powerset_C_Polyhedron_iterator_equal_test (it, end);"}, {"sha": "0ddcbfc013f0c22c15d9e5d322933aec52b72929", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03922af3f28531aeae1646fb56a7da7272ebc177/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03922af3f28531aeae1646fb56a7da7272ebc177/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=03922af3f28531aeae1646fb56a7da7272ebc177", "patch": "@@ -203,19 +203,19 @@ dump_data_reference (FILE *outf,\n {\n   unsigned int i;\n \n-  fprintf (outf, \"(Data Ref: \\n  stmt: \");\n+  fprintf (outf, \"#(Data Ref: \\n#  stmt: \");\n   print_gimple_stmt (outf, DR_STMT (dr), 0, 0);\n-  fprintf (outf, \"  ref: \");\n+  fprintf (outf, \"#  ref: \");\n   print_generic_stmt (outf, DR_REF (dr), 0);\n-  fprintf (outf, \"  base_object: \");\n+  fprintf (outf, \"#  base_object: \");\n   print_generic_stmt (outf, DR_BASE_OBJECT (dr), 0);\n \n   for (i = 0; i < DR_NUM_DIMENSIONS (dr); i++)\n     {\n-      fprintf (outf, \"  Access function %d: \", i);\n+      fprintf (outf, \"#  Access function %d: \", i);\n       print_generic_stmt (outf, DR_ACCESS_FN (dr, i), 0);\n     }\n-  fprintf (outf, \")\\n\");\n+  fprintf (outf, \"#)\\n\");\n }\n \n /* Dumps the affine function described by FN to the file OUTF.  */"}]}