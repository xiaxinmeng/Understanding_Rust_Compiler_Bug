{"sha": "0d332addc1a564afecc4602dd9d0b0f42c4ec5ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQzMzJhZGRjMWE1NjRhZmVjYzQ2MDJkZDlkMGIwZjQyYzRlYzVjZQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-03-28T22:40:07Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-03-28T22:40:07Z"}, "message": "toplev.c (branch_prob_dump, [...]): New variables.\n\n\t* toplev.c (branch_prob_dump, profile_arc_flag, flag_test_coverage,\n\tflag_branch_probabilities, branch_prob_dump_file, branch_prob_time):\n\tNew variables.\n\t(f_options): Add profile-arcs, test-coverage, and\n\tbranch-probabilities.\n\t(compile_file): Set branch_prob_time.  Pass flag_test_coverage to\n\tinit_emit_once.  Handle branch_prob_dump.  Call init_branch_prob.\n\tCall end_branch_prob. Call output_func_start_profiler.\n\t(rest_of_compilation): Handle branch_prob_dump.  Call new\n\tbranch_prob pass.\n\t(main): Set branch_prob_dump.\n\nFrom-SVN: r13823", "tree": {"sha": "32206e3bd34600ba19a85c020c975a5777260196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32206e3bd34600ba19a85c020c975a5777260196"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d332addc1a564afecc4602dd9d0b0f42c4ec5ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d332addc1a564afecc4602dd9d0b0f42c4ec5ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d332addc1a564afecc4602dd9d0b0f42c4ec5ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d332addc1a564afecc4602dd9d0b0f42c4ec5ce/comments", "author": null, "committer": null, "parents": [{"sha": "740a5d9232bf2e89d7e459beed951c9406713c5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/740a5d9232bf2e89d7e459beed951c9406713c5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/740a5d9232bf2e89d7e459beed951c9406713c5f"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "287e26b1021a21084466a19def201ef1c216e9f9", "filename": "gcc/toplev.c", "status": "modified", "additions": 57, "deletions": 2, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d332addc1a564afecc4602dd9d0b0f42c4ec5ce/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d332addc1a564afecc4602dd9d0b0f42c4ec5ce/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=0d332addc1a564afecc4602dd9d0b0f42c4ec5ce", "patch": "@@ -240,6 +240,7 @@ int jump_opt_dump = 0;\n int cse_dump = 0;\n int loop_dump = 0;\n int cse2_dump = 0;\n+int branch_prob_dump = 0;\n int flow_dump = 0;\n int combine_dump = 0;\n int sched_dump = 0;\n@@ -323,6 +324,18 @@ int profile_flag = 0;\n \n int profile_block_flag;\n \n+/* Nonzero if generating code to profile program flow graph arcs.  */\n+\n+int profile_arc_flag = 0;\n+\n+/* Nonzero if generating info for gcov to calculate line test coverage.  */\n+\n+int flag_test_coverage = 0;\n+\n+/* Nonzero indicates that branch taken probabilities should be calculated.  */\n+\n+int flag_branch_probabilities = 0;\n+\n /* Nonzero for -pedantic switch: warn about anything\n    that standard spec forbids.  */\n \n@@ -633,6 +646,9 @@ struct { char *string; int *variable; int on_value;} f_options[] =\n   {\"pic\", &flag_pic, 1},\n   {\"PIC\", &flag_pic, 2},\n   {\"exceptions\", &flag_exceptions, 1},\n+  {\"profile-arcs\", &profile_arc_flag, 1},\n+  {\"test-coverage\", &flag_test_coverage, 1},\n+  {\"branch-probabilities\", &flag_branch_probabilities, 1},\n   {\"fast-math\", &flag_fast_math, 1},\n   {\"common\", &flag_no_common, 0},\n   {\"inhibit-size-directive\", &flag_inhibit_size_directive, 1},\n@@ -832,6 +848,7 @@ FILE *jump_opt_dump_file;\n FILE *cse_dump_file;\n FILE *loop_dump_file;\n FILE *cse2_dump_file;\n+FILE *branch_prob_dump_file;\n FILE *flow_dump_file;\n FILE *combine_dump_file;\n FILE *sched_dump_file;\n@@ -851,6 +868,7 @@ int jump_time;\n int cse_time;\n int loop_time;\n int cse2_time;\n+int branch_prob_time;\n int flow_time;\n int combine_time;\n int sched_time;\n@@ -2076,6 +2094,7 @@ compile_file (name)\n   cse_time = 0;\n   loop_time = 0;\n   cse2_time = 0;\n+  branch_prob_time = 0;\n   flow_time = 0;\n   combine_time = 0;\n   sched_time = 0;\n@@ -2114,7 +2133,8 @@ compile_file (name)\n      but the options would have to be parsed first to know that. -bson */\n   init_rtl ();\n   init_emit_once (debug_info_level == DINFO_LEVEL_NORMAL\n-\t\t  || debug_info_level == DINFO_LEVEL_VERBOSE);\n+\t\t  || debug_info_level == DINFO_LEVEL_VERBOSE\n+\t\t  || flag_test_coverage);\n   init_regs ();\n   init_decl_processing ();\n   init_optabs ();\n@@ -2157,6 +2177,10 @@ compile_file (name)\n   if (cse2_dump)\n     cse2_dump_file = open_dump_file (dump_base_name, \".cse2\");\n \n+  /* If branch_prob dump desired, open the output file.  */\n+  if (branch_prob_dump)\n+    branch_prob_dump_file = open_dump_file (dump_base_name, \".bp\");\n+\n   /* If flow dump desired, open the output file.  */\n   if (flow_dump)\n     flow_dump_file = open_dump_file (dump_base_name, \".flow\");\n@@ -2345,6 +2369,7 @@ compile_file (name)\n \n   if (!output_bytecode)\n     init_final (main_input_filename);\n+  init_branch_prob (dump_base_name);\n \n   start_time = get_run_time ();\n \n@@ -2362,6 +2387,8 @@ compile_file (name)\n \tpoplevel (0, 0, 0);\n     }\n \n+  output_func_start_profiler ();\n+\n   /* Compilation is now finished except for writing\n      what's left of the symbol table output.  */\n \n@@ -2594,7 +2621,8 @@ compile_file (name)\n \n   if (!output_bytecode)\n     {\n-      end_final (main_input_filename);\n+      end_final (dump_base_name);\n+      end_branch_prob (branch_prob_dump_file);\n \n #ifdef ASM_FILE_END\n       ASM_FILE_END (asm_out_file);\n@@ -2632,6 +2660,9 @@ compile_file (name)\n   if (cse2_dump)\n     fclose (cse2_dump_file);\n \n+  if (branch_prob_dump)\n+    fclose (branch_prob_dump_file);\n+\n   if (flow_dump)\n     fclose (flow_dump_file);\n \n@@ -2686,6 +2717,7 @@ compile_file (name)\n \t  print_time (\"cse\", cse_time);\n \t  print_time (\"loop\", loop_time);\n \t  print_time (\"cse2\", cse2_time);\n+\t  print_time (\"branch-probabilities\", branch_prob_time);\n \t  print_time (\"flow\", flow_time);\n \t  print_time (\"combine\", combine_time);\n \t  print_time (\"sched\", sched_time);\n@@ -3136,6 +3168,25 @@ rest_of_compilation (decl)\n \t       fflush (cse2_dump_file);\n \t     });\n \n+  if (branch_prob_dump)\n+    TIMEVAR (dump_time,\n+\t     {\n+\t       fprintf (branch_prob_dump_file, \"\\n;; Function %s\\n\\n\",\n+\t\t\tIDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t     });\n+\n+  if (profile_arc_flag || flag_test_coverage || flag_branch_probabilities)\n+    TIMEVAR (branch_prob_time,\n+\t     {\n+\t       branch_prob (insns, branch_prob_dump_file);\n+\t     });\n+\n+  if (branch_prob_dump)\n+    TIMEVAR (dump_time,\n+\t     {\n+\t       print_rtl (branch_prob_dump_file, insns);\n+\t       fflush (branch_prob_dump_file);\n+\t     });\n   /* We are no longer anticipating cse in this function, at least.  */\n \n   cse_not_expected = 1;\n@@ -3651,6 +3702,7 @@ main (argc, argv, envp)\n \t\tswitch (*p++)\n \t\t  {\n  \t\t  case 'a':\n+\t\t    branch_prob_dump = 1;\n  \t\t    combine_dump = 1;\n  \t\t    dbr_sched_dump = 1;\n  \t\t    flow_dump = 1;\n@@ -3665,6 +3717,9 @@ main (argc, argv, envp)\n  \t\t    sched2_dump = 1;\n \t\t    stack_reg_dump = 1;\n \t\t    break;\n+\t\t  case 'b':\n+\t\t    branch_prob_dump = 1;\n+\t\t    break;\n \t\t  case 'k':\n \t\t    stack_reg_dump = 1;\n \t\t    break;"}]}