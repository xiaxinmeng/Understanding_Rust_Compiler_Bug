{"sha": "8f8f8c68b434eb32756284dd8e80cfbdff524a20", "node_id": "C_kwDOANBUbNoAKDhmOGY4YzY4YjQzNGViMzI3NTYyODRkZDhlODBjZmJkZmY1MjRhMjA", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-02-09T13:52:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-02-09T14:50:02Z"}, "message": "middle-end/104464 - ISEL and non-call EH #2\n\nThe following adjusts the earlier change to still allow an\nuncritical replacement.\n\n2022-02-09  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/104464\n\t* gimple-isel.cc (gimple_expand_vec_cond_expr): Postpone\n\tthrowing check to after unproblematic replacement.\n\n\t* gcc.dg/pr104464.c: New testcase.", "tree": {"sha": "c144d16b7b6ee44c9dd4a650e7f18c1110254695", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c144d16b7b6ee44c9dd4a650e7f18c1110254695"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f8f8c68b434eb32756284dd8e80cfbdff524a20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f8f8c68b434eb32756284dd8e80cfbdff524a20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f8f8c68b434eb32756284dd8e80cfbdff524a20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f8f8c68b434eb32756284dd8e80cfbdff524a20/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d80f2248c5962318c77624a0eab05b81c59add1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d80f2248c5962318c77624a0eab05b81c59add1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d80f2248c5962318c77624a0eab05b81c59add1b"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "3635585bf454d1426b17bbb69b6188949ad60a15", "filename": "gcc/gimple-isel.cc", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f8f8c68b434eb32756284dd8e80cfbdff524a20/gcc%2Fgimple-isel.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f8f8c68b434eb32756284dd8e80cfbdff524a20/gcc%2Fgimple-isel.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-isel.cc?ref=8f8f8c68b434eb32756284dd8e80cfbdff524a20", "patch": "@@ -178,11 +178,7 @@ gimple_expand_vec_cond_expr (struct function *fun, gimple_stmt_iterator *gsi,\n \t}\n \n       gassign *def_stmt = dyn_cast<gassign *> (SSA_NAME_DEF_STMT (op0));\n-      if (def_stmt\n-\t  /* When the compare has EH we do not want to forward it when\n-\t     it has multiple uses and in general because of the complication\n-\t     with EH redirection.  */\n-\t  && !stmt_can_throw_internal (fun, def_stmt))\n+      if (def_stmt)\n \t{\n \t  tcode = gimple_assign_rhs_code (def_stmt);\n \t  op0a = gimple_assign_rhs1 (def_stmt);\n@@ -195,7 +191,6 @@ gimple_expand_vec_cond_expr (struct function *fun, gimple_stmt_iterator *gsi,\n \t\t\t\t\t\t     tcode);\n \n \t  /* Try to fold x CMP y ? -1 : 0 to x CMP y.  */\n-\n \t  if (can_compute_op0\n \t      && integer_minus_onep (op1)\n \t      && integer_zerop (op2)\n@@ -207,14 +202,19 @@ gimple_expand_vec_cond_expr (struct function *fun, gimple_stmt_iterator *gsi,\n \t      return new_stmt;\n \t    }\n \n-\t  if (can_compute_op0\n-\t      && used_vec_cond_exprs >= 2\n-\t      && (get_vcond_mask_icode (mode, TYPE_MODE (op0_type))\n-\t\t  != CODE_FOR_nothing))\n-\t    {\n-\t      /* Keep the SSA name and use vcond_mask.  */\n-\t      tcode = TREE_CODE (op0);\n-\t    }\n+\t  /* When the compare has EH we do not want to forward it when\n+\t     it has multiple uses and in general because of the complication\n+\t     with EH redirection.  */\n+\t  if (stmt_can_throw_internal (fun, def_stmt))\n+\t    tcode = TREE_CODE (op0);\n+\n+\t  /* If we can compute op0 and have multiple uses, keep the SSA\n+\t     name and use vcond_mask.  */\n+\t  else if (can_compute_op0\n+\t\t   && used_vec_cond_exprs >= 2\n+\t\t   && (get_vcond_mask_icode (mode, TYPE_MODE (op0_type))\n+\t\t       != CODE_FOR_nothing))\n+\t    tcode = TREE_CODE (op0);\n \t}\n       else\n \ttcode = TREE_CODE (op0);"}, {"sha": "ed6a22c39d5e6e1a8328a70fe1d24f9df16d3b66", "filename": "gcc/testsuite/gcc.dg/pr104464.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f8f8c68b434eb32756284dd8e80cfbdff524a20/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104464.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f8f8c68b434eb32756284dd8e80cfbdff524a20/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104464.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104464.c?ref=8f8f8c68b434eb32756284dd8e80cfbdff524a20", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fnon-call-exceptions -fno-tree-dce -fno-tree-forwprop -fsignaling-nans\" } */\n+\n+typedef double __attribute__((__vector_size__(16))) F;\n+F f;\n+\n+void\n+foo(void)\n+{\n+  f += (F)(f != (F){}[0]);\n+}"}]}