{"sha": "c07e547752171cafffdbae0c46f90251d266141b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA3ZTU0Nzc1MjE3MWNhZmZmZGJhZTBjNDZmOTAyNTFkMjY2MTQxYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-07-06T14:48:56Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-07-06T14:48:56Z"}, "message": "tree.h (default_flag_random_seed): Remove.\n\n\t* tree.h (default_flag_random_seed): Remove.\n\t* toplev.h (local_tick): Declare.\n\t* tree.c (flag_random_seed, default_flag_random_seed): Move to\n\ttoplev.c.\n\t(append_random_chars): Don't call default_flag_random_seed.\n\t* toplev.c (flag_random_seed): Define here. Set local_tick.\n\t(local_tick): Define.\n\t(randomize): New, moved from tree.c.\n\t(print_switch_values): Adjust.\n\t(toplev_main): Call randomize.\n\nFrom-SVN: r69005", "tree": {"sha": "5ea18708dd25d839ae29066b52fc180c8a8e697e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ea18708dd25d839ae29066b52fc180c8a8e697e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c07e547752171cafffdbae0c46f90251d266141b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c07e547752171cafffdbae0c46f90251d266141b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c07e547752171cafffdbae0c46f90251d266141b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c07e547752171cafffdbae0c46f90251d266141b/comments", "author": null, "committer": null, "parents": [{"sha": "2aab7ceb8b58b89e48e99c3e5af119cc2f50b81c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aab7ceb8b58b89e48e99c3e5af119cc2f50b81c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aab7ceb8b58b89e48e99c3e5af119cc2f50b81c"}], "stats": {"total": 104, "additions": 65, "deletions": 39}, "files": [{"sha": "da3621f50764759795983cbf85ceefe5f5935e07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c07e547752171cafffdbae0c46f90251d266141b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c07e547752171cafffdbae0c46f90251d266141b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c07e547752171cafffdbae0c46f90251d266141b", "patch": "@@ -1,3 +1,16 @@\n+2003-07-06  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* tree.h (default_flag_random_seed): Remove.\n+\t* toplev.h (local_tick): Declare.\n+\t* tree.c (flag_random_seed, default_flag_random_seed): Move to\n+\ttoplev.c.\n+\t(append_random_chars): Don't call default_flag_random_seed.\n+\t* toplev.c (flag_random_seed): Define here. Set local_tick.\n+\t(local_tick): Define.\n+\t(randomize): New, moved from tree.c.\n+\t(print_switch_values): Adjust.\n+\t(toplev_main): Call randomize.\n+\n 2003-07-06  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* tree.h (crc32_string): Declare."}, {"sha": "6351b69c7a9a02c455d32507aab5134d10e005f3", "filename": "gcc/toplev.c", "status": "modified", "additions": 49, "deletions": 5, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c07e547752171cafffdbae0c46f90251d266141b/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c07e547752171cafffdbae0c46f90251d266141b/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=c07e547752171cafffdbae0c46f90251d266141b", "patch": "@@ -463,6 +463,14 @@ int mem_report = 0;\n    and to print them when we are done.  */\n int flag_detailed_statistics = 0;\n \n+/* A random sequence of characters, unless overridden by user. */\n+const char *flag_random_seed;\n+\n+/* A local time stamp derived from the time of compilation. It will be\n+   zero if the system cannot provide a time.  It will be -1u, if the\n+   user has specified a particular random seed.  */\n+unsigned local_tick;\n+\n /* -f flags.  */\n \n /* Nonzero means `char' should be signed.  */\n@@ -1560,6 +1568,43 @@ FILE *asm_out_file;\n FILE *aux_info_file;\n FILE *rtl_dump_file = NULL;\n \n+/* Set up a default flag_random_seed and local_tick, unless the user\n+   already specified one.  */\n+\n+static void\n+randomize (void)\n+{\n+  if (!flag_random_seed)\n+    {\n+      unsigned HOST_WIDE_INT value;\n+      static char random_seed[HOST_BITS_PER_WIDE_INT / 4 + 3];\n+      \n+      /* Get some more or less random data.  */\n+#ifdef HAVE_GETTIMEOFDAY\n+      {\n+ \tstruct timeval tv;\n+ \t\n+ \tgettimeofday (&tv, NULL);\n+\tlocal_tick = tv.tv_sec * 1000 + tv.tv_usec / 1000;\n+      }\n+#else\n+      {\n+\ttime_t now = time ();\n+\n+\tif (now != (time_t)-1)\n+\t  local_tick = (unsigned) now;\n+      }\n+#endif\n+      value = local_tick ^ getpid ();\n+      \n+      sprintf (random_seed, HOST_WIDE_INT_PRINT_HEX, value);\n+      flag_random_seed = random_seed;\n+    }\n+  else\n+    local_tick = -1;\n+}\n+\n+\n /* Decode the string P as an integral parameter.\n    If the string is indeed an integer return its numeric value else\n    issue an Invalid Option error for the option PNAME and return DEFVAL.\n@@ -4394,13 +4439,10 @@ print_switch_values (FILE *file, int pos, int max,\n   const char **p;\n \n   /* Fill in the -frandom-seed option, if the user didn't pass it, so\n-     that it can be printed below.  This helps reproducibility.  Of\n-     course, the string may never be used, but we can't tell that at\n-     this point in the compile.  */\n-  default_flag_random_seed ();\n+     that it can be printed below.  This helps reproducibility.  */\n+  randomize ();\n \n   /* Print the options as passed.  */\n-\n   pos = print_single_switch (file, pos, max, indent, *indent ? \" \" : \"\", term,\n \t\t\t     _(\"options passed: \"), \"\");\n \n@@ -4969,6 +5011,8 @@ toplev_main (unsigned int argc, const char **argv)\n      enough to default flags appropriately.  */\n   decode_options (argc, argv);\n \n+  randomize ();\n+\n   /* Exit early if we can (e.g. -help).  */\n   if (!exit_after_options)\n     do_compile ();"}, {"sha": "e9c7e0dec5584b1ad5d89e54fa296dd199261bcb", "filename": "gcc/toplev.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c07e547752171cafffdbae0c46f90251d266141b/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c07e547752171cafffdbae0c46f90251d266141b/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=c07e547752171cafffdbae0c46f90251d266141b", "patch": "@@ -104,6 +104,9 @@ extern void fnotice\t\t\t(FILE *, const char *, ...)\n extern int wrapup_global_declarations   (union tree_node **, int);\n extern void check_global_declarations   (union tree_node **, int);\n \n+/* A unique local time stamp, might be zero if none is available.  */\n+extern unsigned local_tick;\n+\n extern const char *progname;\n extern const char *dump_base_name;\n extern const char *aux_base_name;"}, {"sha": "b61a70b262fc825d9c135242f61f9a34476b948f", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c07e547752171cafffdbae0c46f90251d266141b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c07e547752171cafffdbae0c46f90251d266141b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=c07e547752171cafffdbae0c46f90251d266141b", "patch": "@@ -4464,38 +4464,6 @@ dump_tree_statistics (void)\n \f\n #define FILE_FUNCTION_FORMAT \"_GLOBAL__%s_%s\"\n \n-const char *flag_random_seed;\n-\n-/* Set up a default flag_random_seed value, if there wasn't one already.  */\n-\n-void\n-default_flag_random_seed (void)\n-{\n-  unsigned HOST_WIDE_INT value;\n-  char *new_random_seed;\n-\n-  if (flag_random_seed != NULL)\n-    return;\n-\n-  /* Get some more or less random data.  */\n-#ifdef HAVE_GETTIMEOFDAY\n- {\n-   struct timeval tv;\n-\n-   gettimeofday (&tv, NULL);\n-   value = (((unsigned HOST_WIDE_INT) tv.tv_usec << 16)\n-\t    ^ tv.tv_sec ^ getpid ());\n- }\n-#else\n-  value = getpid ();\n-#endif\n-\n-  /* This slightly overestimates the space required.  */\n-  new_random_seed = xmalloc (HOST_BITS_PER_WIDE_INT / 3 + 2);\n-  sprintf (new_random_seed, HOST_WIDE_INT_PRINT_UNSIGNED, value);\n-  flag_random_seed = new_random_seed;\n-}\n-\n /* Generate a crc32 of a string.  */\n \n unsigned\n@@ -4568,7 +4536,6 @@ get_file_function_name_long (const char *type)\n       memcpy (q, file, len + 1);\n       clean_symbol_name (q);\n \n-      default_flag_random_seed ();\n       sprintf (q + len, \"_%08X_%08X\", crc32_string (0, name),\n \t       crc32_string (0, flag_random_seed));\n "}, {"sha": "a11a7e5abaaf3edac4b2109c3959e7f26dc1870c", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c07e547752171cafffdbae0c46f90251d266141b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c07e547752171cafffdbae0c46f90251d266141b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=c07e547752171cafffdbae0c46f90251d266141b", "patch": "@@ -2931,7 +2931,6 @@ extern void expand_start_case_dummy (void);\n extern HOST_WIDE_INT all_cases_count (tree, int *);\n extern void check_for_full_enumeration_handling (tree);\n extern void declare_nonlocal_label (tree);\n-extern void default_flag_random_seed (void);\n \n /* If KIND=='I', return a suitable global initializer (constructor) name.\n    If KIND=='D', return a suitable global clean-up (destructor) name.  */"}]}