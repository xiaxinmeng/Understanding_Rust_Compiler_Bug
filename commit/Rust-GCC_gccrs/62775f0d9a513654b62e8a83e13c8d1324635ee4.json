{"sha": "62775f0d9a513654b62e8a83e13c8d1324635ee4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI3NzVmMGQ5YTUxMzY1NGI2MmU4YTgzZTEzYzhkMTMyNDYzNWVlNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-11-26T09:52:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-11-26T09:52:48Z"}, "message": "re PR c++/68508 (Internal compiler error with parentheses around return value in C++14 with ASan enabled)\n\n\tPR c++/68508\n\t* cp-tree.h (cp_ubsan_maybe_instrument_downcast): Add INTYPE argument.\n\t* cp-ubsan.c (cp_ubsan_maybe_instrument_downcast): Likewise.  Use\n\tit instead of or in addition to TREE_TYPE (op).  Use\n\tis_properly_derived_from, return NULL_TREE if TREE_TYPE (intype) and\n\tTREE_TYPE (type) are the same type minus qualifiers.\n\t* typeck.c (build_static_cast_1): Adjust callers.\n\n\t* g++.dg/ubsan/pr68508.C: New test.\n\nFrom-SVN: r230928", "tree": {"sha": "a5817c2d93ec5378d7f944232b39f405296aa94f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5817c2d93ec5378d7f944232b39f405296aa94f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62775f0d9a513654b62e8a83e13c8d1324635ee4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62775f0d9a513654b62e8a83e13c8d1324635ee4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62775f0d9a513654b62e8a83e13c8d1324635ee4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62775f0d9a513654b62e8a83e13c8d1324635ee4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf8e1b52f72d079d99173a6742f0070c632cc736", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf8e1b52f72d079d99173a6742f0070c632cc736", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf8e1b52f72d079d99173a6742f0070c632cc736"}], "stats": {"total": 45, "additions": 39, "deletions": 6}, "files": [{"sha": "90d86dca052bf7d6ba81f707129f7c02250be10f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62775f0d9a513654b62e8a83e13c8d1324635ee4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62775f0d9a513654b62e8a83e13c8d1324635ee4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=62775f0d9a513654b62e8a83e13c8d1324635ee4", "patch": "@@ -1,3 +1,13 @@\n+2015-11-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/68508\n+\t* cp-tree.h (cp_ubsan_maybe_instrument_downcast): Add INTYPE argument.\n+\t* cp-ubsan.c (cp_ubsan_maybe_instrument_downcast): Likewise.  Use\n+\tit instead of or in addition to TREE_TYPE (op).  Use\n+\tis_properly_derived_from, return NULL_TREE if TREE_TYPE (intype) and\n+\tTREE_TYPE (type) are the same type minus qualifiers.\n+\t* typeck.c (build_static_cast_1): Adjust callers.\n+\n 2015-11-25  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/67876"}, {"sha": "caa601d1c98ab71da1615977fd9b9f8b80833c14", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62775f0d9a513654b62e8a83e13c8d1324635ee4/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62775f0d9a513654b62e8a83e13c8d1324635ee4/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=62775f0d9a513654b62e8a83e13c8d1324635ee4", "patch": "@@ -6854,7 +6854,7 @@ extern bool cilk_valid_spawn                    (tree);\n /* In cp-ubsan.c */\n extern void cp_ubsan_maybe_instrument_member_call (tree);\n extern void cp_ubsan_instrument_member_accesses (tree *);\n-extern tree cp_ubsan_maybe_instrument_downcast\t(location_t, tree, tree);\n+extern tree cp_ubsan_maybe_instrument_downcast\t(location_t, tree, tree, tree);\n extern tree cp_ubsan_maybe_instrument_cast_to_vbase (location_t, tree, tree);\n \n /* -- end of C++ */"}, {"sha": "6ffeb16ce1d20bebe9afee37568e68094aa714bd", "filename": "gcc/cp/cp-ubsan.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62775f0d9a513654b62e8a83e13c8d1324635ee4/gcc%2Fcp%2Fcp-ubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62775f0d9a513654b62e8a83e13c8d1324635ee4/gcc%2Fcp%2Fcp-ubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-ubsan.c?ref=62775f0d9a513654b62e8a83e13c8d1324635ee4", "patch": "@@ -243,13 +243,14 @@ cp_ubsan_instrument_member_accesses (tree *t_p)\n /* Instrument downcast.  */\n \n tree\n-cp_ubsan_maybe_instrument_downcast (location_t loc, tree type, tree op)\n+cp_ubsan_maybe_instrument_downcast (location_t loc, tree type,\n+\t\t\t\t    tree intype, tree op)\n {\n   if (!POINTER_TYPE_P (type)\n+      || !POINTER_TYPE_P (intype)\n       || !POINTER_TYPE_P (TREE_TYPE (op))\n-      || !CLASS_TYPE_P (TREE_TYPE (type))\n       || !CLASS_TYPE_P (TREE_TYPE (TREE_TYPE (op)))\n-      || !DERIVED_FROM_P (TREE_TYPE (TREE_TYPE (op)), TREE_TYPE (type)))\n+      || !is_properly_derived_from (TREE_TYPE (type), TREE_TYPE (intype)))\n     return NULL_TREE;\n \n   return cp_ubsan_maybe_instrument_vptr (loc, op, TREE_TYPE (type), true,"}, {"sha": "1d2943f50fb1d1f286f0453dff020fa6328459a4", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62775f0d9a513654b62e8a83e13c8d1324635ee4/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62775f0d9a513654b62e8a83e13c8d1324635ee4/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=62775f0d9a513654b62e8a83e13c8d1324635ee4", "patch": "@@ -6590,7 +6590,8 @@ build_static_cast_1 (tree type, tree expr, bool c_cast_p,\n       if (flag_sanitize & SANITIZE_VPTR)\n \t{\n \t  tree ubsan_check\n-\t    = cp_ubsan_maybe_instrument_downcast (input_location, type, expr);\n+\t    = cp_ubsan_maybe_instrument_downcast (input_location, type,\n+\t\t\t\t\t\t  intype, expr);\n \t  if (ubsan_check)\n \t    expr = ubsan_check;\n \t}\n@@ -6737,7 +6738,8 @@ build_static_cast_1 (tree type, tree expr, bool c_cast_p,\n       if (flag_sanitize & SANITIZE_VPTR)\n \t{\n \t  tree ubsan_check\n-\t    = cp_ubsan_maybe_instrument_downcast (input_location, type, expr);\n+\t    = cp_ubsan_maybe_instrument_downcast (input_location, type,\n+\t\t\t\t\t\t  intype, expr);\n \t  if (ubsan_check)\n \t    expr = ubsan_check;\n \t}"}, {"sha": "2e9f9623db8ff9b1fc44c68b4eb9c41235ec8398", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62775f0d9a513654b62e8a83e13c8d1324635ee4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62775f0d9a513654b62e8a83e13c8d1324635ee4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62775f0d9a513654b62e8a83e13c8d1324635ee4", "patch": "@@ -1,3 +1,8 @@\n+2015-11-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/68508\n+\t* g++.dg/ubsan/pr68508.C: New test.\n+\n 2015-11-25  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/67876"}, {"sha": "ffe8f0071dbc5a41c7e75863b735722696fc9d8a", "filename": "gcc/testsuite/g++.dg/ubsan/pr68508.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62775f0d9a513654b62e8a83e13c8d1324635ee4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr68508.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62775f0d9a513654b62e8a83e13c8d1324635ee4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr68508.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr68508.C?ref=62775f0d9a513654b62e8a83e13c8d1324635ee4", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/68508\n+// { dg-do compile }\n+// { dg-options \"-std=c++14 -fsanitize=vptr\" }\n+\n+struct A\n+{\n+  virtual int foo () { return 0; }\n+};\n+\n+const A &\n+bar ()\n+{\n+  static A x = A ();\n+  return (x);\n+}"}]}