{"sha": "3bdf634051b1b7f5dbb21e7a1388baaf78619c23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JkZjYzNDA1MWIxYjdmNWRiYjIxZTdhMTM4OGJhYWY3ODYxOWMyMw==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2013-10-11T13:42:10Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-10-11T13:42:10Z"}, "message": "sse.md (VI2_AVX512F): New.\n\n        * config/i386/sse.md (VI2_AVX512F): New.\n        (VI124_AVX512F): Ditto.\n        (sseunpackmode): Extended with wider modes.\n        (sseunpackfltmode): Ditto.\n        (vec_unpacks_float_hi_<mode>): Ditto.\n        (vec_unpacks_float_lo_<mode>): Ditto.\n        (vec_unpacku_float_hi_<mode>): Ditto.\n        (vec_unpacku_float_lo_<mode>): Ditto.\n        (vec_unpacks_lo_<mode>): Ditto.\n        (vec_unpacks_hi_<mode>): Ditto.\n        (vec_unpacku_lo_<mode>): Ditto.\n        (vec_unpacku_hi_<mode>): Ditto.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\nCo-Authored-By: Sergey Lega <sergey.s.lega@intel.com>\n\nFrom-SVN: r203433", "tree": {"sha": "f2c0152a2237250f9a9fc24dca9ede9f7bf313b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2c0152a2237250f9a9fc24dca9ede9f7bf313b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bdf634051b1b7f5dbb21e7a1388baaf78619c23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bdf634051b1b7f5dbb21e7a1388baaf78619c23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bdf634051b1b7f5dbb21e7a1388baaf78619c23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bdf634051b1b7f5dbb21e7a1388baaf78619c23/comments", "author": null, "committer": null, "parents": [{"sha": "67f783cbc3d03913a53ab9dd8c46d82aafe3a671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f783cbc3d03913a53ab9dd8c46d82aafe3a671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67f783cbc3d03913a53ab9dd8c46d82aafe3a671"}], "stats": {"total": 53, "additions": 43, "deletions": 10}, "files": [{"sha": "93da34dcabeb9b374b4f1b126814d0b8cd8dc489", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bdf634051b1b7f5dbb21e7a1388baaf78619c23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bdf634051b1b7f5dbb21e7a1388baaf78619c23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bdf634051b1b7f5dbb21e7a1388baaf78619c23", "patch": "@@ -1,3 +1,26 @@\n+2013-10-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Sergey Lega  <sergey.s.lega@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md (VI2_AVX512F): New.\n+\t(VI124_AVX512F): Ditto.\n+\t(sseunpackmode): Extended with wider modes.\n+\t(sseunpackfltmode): Ditto.\n+\t(vec_unpacks_float_hi_<mode>): Ditto.\n+\t(vec_unpacks_float_lo_<mode>): Ditto.\n+\t(vec_unpacku_float_hi_<mode>): Ditto.\n+\t(vec_unpacku_float_lo_<mode>): Ditto.\n+\t(vec_unpacks_lo_<mode>): Ditto.\n+\t(vec_unpacks_hi_<mode>): Ditto.\n+\t(vec_unpacku_lo_<mode>): Ditto.\n+\t(vec_unpacku_hi_<mode>): Ditto.\n+\n 2013-10-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Sergey Lega  <sergey.s.lega@intel.com>"}, {"sha": "351f5bb59564ae13e80cc925910b360845763b57", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bdf634051b1b7f5dbb21e7a1388baaf78619c23/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bdf634051b1b7f5dbb21e7a1388baaf78619c23/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3bdf634051b1b7f5dbb21e7a1388baaf78619c23", "patch": "@@ -201,6 +201,9 @@\n (define_mode_iterator VI2_AVX2\n   [(V16HI \"TARGET_AVX2\") V8HI])\n \n+(define_mode_iterator VI2_AVX512F\n+  [(V32HI \"TARGET_AVX512F\") (V16HI \"TARGET_AVX2\") V8HI])\n+\n (define_mode_iterator VI4_AVX2\n   [(V8SI \"TARGET_AVX2\") V4SI])\n \n@@ -223,6 +226,11 @@\n   [(V16HI \"TARGET_AVX2\") V8HI\n    (V8SI \"TARGET_AVX2\") V4SI])\n \n+(define_mode_iterator VI124_AVX512F\n+  [(V32QI \"TARGET_AVX2\") V16QI\n+   (V32HI \"TARGET_AVX512F\") (V16HI \"TARGET_AVX2\") V8HI\n+   (V16SI \"TARGET_AVX512F\") (V8SI \"TARGET_AVX2\") V4SI])\n+\n (define_mode_iterator VI124_AVX2\n   [(V32QI \"TARGET_AVX2\") V16QI\n    (V16HI \"TARGET_AVX2\") V8HI\n@@ -472,7 +480,8 @@\n ;; Pack/unpack vector modes\n (define_mode_attr sseunpackmode\n   [(V16QI \"V8HI\") (V8HI \"V4SI\") (V4SI \"V2DI\")\n-   (V32QI \"V16HI\") (V16HI \"V8SI\") (V8SI \"V4DI\")])\n+   (V32QI \"V16HI\") (V16HI \"V8SI\") (V8SI \"V4DI\")\n+   (V32HI \"V16SI\") (V64QI \"V32HI\") (V16SI \"V8DI\")])\n \n (define_mode_attr ssepackmode\n   [(V8HI \"V16QI\") (V4SI \"V8HI\") (V2DI \"V4SI\")\n@@ -3347,11 +3356,12 @@\n   \"TARGET_AVX\")\n \n (define_mode_attr sseunpackfltmode\n-  [(V8HI \"V4SF\") (V4SI \"V2DF\") (V16HI \"V8SF\") (V8SI \"V4DF\")])\n+  [(V8HI \"V4SF\") (V4SI \"V2DF\") (V16HI \"V8SF\")\n+  (V8SI \"V4DF\") (V32HI \"V16SF\") (V16SI \"V8DF\")])\n \n (define_expand \"vec_unpacks_float_hi_<mode>\"\n   [(match_operand:<sseunpackfltmode> 0 \"register_operand\")\n-   (match_operand:VI2_AVX2 1 \"register_operand\")]\n+   (match_operand:VI2_AVX512F 1 \"register_operand\")]\n   \"TARGET_SSE2\"\n {\n   rtx tmp = gen_reg_rtx (<sseunpackmode>mode);\n@@ -3364,7 +3374,7 @@\n \n (define_expand \"vec_unpacks_float_lo_<mode>\"\n   [(match_operand:<sseunpackfltmode> 0 \"register_operand\")\n-   (match_operand:VI2_AVX2 1 \"register_operand\")]\n+   (match_operand:VI2_AVX512F 1 \"register_operand\")]\n   \"TARGET_SSE2\"\n {\n   rtx tmp = gen_reg_rtx (<sseunpackmode>mode);\n@@ -3377,7 +3387,7 @@\n \n (define_expand \"vec_unpacku_float_hi_<mode>\"\n   [(match_operand:<sseunpackfltmode> 0 \"register_operand\")\n-   (match_operand:VI2_AVX2 1 \"register_operand\")]\n+   (match_operand:VI2_AVX512F 1 \"register_operand\")]\n   \"TARGET_SSE2\"\n {\n   rtx tmp = gen_reg_rtx (<sseunpackmode>mode);\n@@ -3390,7 +3400,7 @@\n \n (define_expand \"vec_unpacku_float_lo_<mode>\"\n   [(match_operand:<sseunpackfltmode> 0 \"register_operand\")\n-   (match_operand:VI2_AVX2 1 \"register_operand\")]\n+   (match_operand:VI2_AVX512F 1 \"register_operand\")]\n   \"TARGET_SSE2\"\n {\n   rtx tmp = gen_reg_rtx (<sseunpackmode>mode);\n@@ -7835,25 +7845,25 @@\n \n (define_expand \"vec_unpacks_lo_<mode>\"\n   [(match_operand:<sseunpackmode> 0 \"register_operand\")\n-   (match_operand:VI124_AVX2 1 \"register_operand\")]\n+   (match_operand:VI124_AVX512F 1 \"register_operand\")]\n   \"TARGET_SSE2\"\n   \"ix86_expand_sse_unpack (operands[0], operands[1], false, false); DONE;\")\n \n (define_expand \"vec_unpacks_hi_<mode>\"\n   [(match_operand:<sseunpackmode> 0 \"register_operand\")\n-   (match_operand:VI124_AVX2 1 \"register_operand\")]\n+   (match_operand:VI124_AVX512F 1 \"register_operand\")]\n   \"TARGET_SSE2\"\n   \"ix86_expand_sse_unpack (operands[0], operands[1], false, true); DONE;\")\n \n (define_expand \"vec_unpacku_lo_<mode>\"\n   [(match_operand:<sseunpackmode> 0 \"register_operand\")\n-   (match_operand:VI124_AVX2 1 \"register_operand\")]\n+   (match_operand:VI124_AVX512F 1 \"register_operand\")]\n   \"TARGET_SSE2\"\n   \"ix86_expand_sse_unpack (operands[0], operands[1], true, false); DONE;\")\n \n (define_expand \"vec_unpacku_hi_<mode>\"\n   [(match_operand:<sseunpackmode> 0 \"register_operand\")\n-   (match_operand:VI124_AVX2 1 \"register_operand\")]\n+   (match_operand:VI124_AVX512F 1 \"register_operand\")]\n   \"TARGET_SSE2\"\n   \"ix86_expand_sse_unpack (operands[0], operands[1], true, true); DONE;\")\n "}]}