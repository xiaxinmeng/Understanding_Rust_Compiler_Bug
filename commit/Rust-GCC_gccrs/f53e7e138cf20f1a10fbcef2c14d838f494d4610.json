{"sha": "f53e7e138cf20f1a10fbcef2c14d838f494d4610", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUzZTdlMTM4Y2YyMGYxYTEwZmJjZWYyYzE0ZDgzOGY0OTRkNDYxMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-04-19T07:46:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-04-19T07:46:54Z"}, "message": "re PR tree-optimization/85446 (wrong-code on riscv64)\n\n\tPR tree-optimization/85446\n\t* match.pd ((intptr_t) x eq/ne CST to x eq/ne (typeof x) cst): Require\n\tthe integral and pointer types to have the same precision.\n\nFrom-SVN: r259488", "tree": {"sha": "e92ff9b30968ce6b604216596e2a33ba4587ecdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e92ff9b30968ce6b604216596e2a33ba4587ecdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f53e7e138cf20f1a10fbcef2c14d838f494d4610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f53e7e138cf20f1a10fbcef2c14d838f494d4610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f53e7e138cf20f1a10fbcef2c14d838f494d4610", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f53e7e138cf20f1a10fbcef2c14d838f494d4610/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0e1df888de5675d071239b1db57fd48d6ff47b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0e1df888de5675d071239b1db57fd48d6ff47b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0e1df888de5675d071239b1db57fd48d6ff47b7"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "0fa244affc9ac98ab551033f783a318e8b88569a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f53e7e138cf20f1a10fbcef2c14d838f494d4610/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f53e7e138cf20f1a10fbcef2c14d838f494d4610/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f53e7e138cf20f1a10fbcef2c14d838f494d4610", "patch": "@@ -1,5 +1,9 @@\n 2018-04-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/85446\n+\t* match.pd ((intptr_t) x eq/ne CST to x eq/ne (typeof x) cst): Require\n+\tthe integral and pointer types to have the same precision.\n+\n \t* doc/install.texi: Document --disable-cet being the default and\n \t--enable-cet=auto.\n "}, {"sha": "442aad15e2cde2f1746b21a64095289d8f4b8d5b", "filename": "gcc/match.pd", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f53e7e138cf20f1a10fbcef2c14d838f494d4610/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f53e7e138cf20f1a10fbcef2c14d838f494d4610/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=f53e7e138cf20f1a10fbcef2c14d838f494d4610", "patch": "@@ -3711,10 +3711,13 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (for cmp (ne eq)\n  (simplify\n   (cmp (convert @0) INTEGER_CST@1)\n-  (if ((POINTER_TYPE_P (TREE_TYPE (@0)) && !FUNC_OR_METHOD_TYPE_P (TREE_TYPE (TREE_TYPE (@0)))\n-\t&& INTEGRAL_TYPE_P (TREE_TYPE (@1)))\n-      || (INTEGRAL_TYPE_P (TREE_TYPE (@0)) && POINTER_TYPE_P (TREE_TYPE (@1))\n-\t  && !FUNC_OR_METHOD_TYPE_P (TREE_TYPE (TREE_TYPE (@1)))))\n+  (if (((POINTER_TYPE_P (TREE_TYPE (@0))\n+\t && !FUNC_OR_METHOD_TYPE_P (TREE_TYPE (TREE_TYPE (@0)))\n+\t && INTEGRAL_TYPE_P (TREE_TYPE (@1)))\n+\t|| (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+\t    && POINTER_TYPE_P (TREE_TYPE (@1))\n+\t    && !FUNC_OR_METHOD_TYPE_P (TREE_TYPE (TREE_TYPE (@1)))))\n+       && TYPE_PRECISION (TREE_TYPE (@0)) == TYPE_PRECISION (TREE_TYPE (@1)))\n    (cmp @0 (convert @1)))))\n \n /* Non-equality compare simplifications from fold_binary  */"}]}