{"sha": "9609240458935f9cb80c8d13dfa57b3b26691185", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYwOTI0MDQ1ODkzNWY5Y2I4MGM4ZDEzZGZhNTdiM2IyNjY5MTE4NQ==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2014-05-07T06:34:15Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2014-05-07T06:34:15Z"}, "message": "nds32.h (HONOR_REG_ALLOC_ORDER): Have it in favor of using optimize_size.\n\n\t* config/nds32/nds32.h (HONOR_REG_ALLOC_ORDER): Have it in favor\n\tof using optimize_size.\n\nFrom-SVN: r210137", "tree": {"sha": "57eb2a1a1420016c1088b0f7255079744530ea42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57eb2a1a1420016c1088b0f7255079744530ea42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9609240458935f9cb80c8d13dfa57b3b26691185", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9609240458935f9cb80c8d13dfa57b3b26691185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9609240458935f9cb80c8d13dfa57b3b26691185", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9609240458935f9cb80c8d13dfa57b3b26691185/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "157a50f99cea6d9fbb9dbe5bb651cc44ef56f79d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/157a50f99cea6d9fbb9dbe5bb651cc44ef56f79d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/157a50f99cea6d9fbb9dbe5bb651cc44ef56f79d"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "ed5ca0ae9ed19a1273f5d55b3179f7b9ebf7a7b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9609240458935f9cb80c8d13dfa57b3b26691185/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9609240458935f9cb80c8d13dfa57b3b26691185/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9609240458935f9cb80c8d13dfa57b3b26691185", "patch": "@@ -1,3 +1,8 @@\n+2014-05-07  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32.h (HONOR_REG_ALLOC_ORDER): Have it in favor\n+\tof using optimize_size.\n+\n 2014-05-06  Mike Stump  <mikestump@comcast.net>\n \n \t* wide-int.h (wi::int_traits <HOST_WIDE_INT>): Always define."}, {"sha": "bbcf1005e02752857e39e74fd99d3a57db670462", "filename": "gcc/config/nds32/nds32.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9609240458935f9cb80c8d13dfa57b3b26691185/gcc%2Fconfig%2Fnds32%2Fnds32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9609240458935f9cb80c8d13dfa57b3b26691185/gcc%2Fconfig%2Fnds32%2Fnds32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.h?ref=9609240458935f9cb80c8d13dfa57b3b26691185", "patch": "@@ -553,7 +553,7 @@ enum nds32_builtins\n \n /* Tell IRA to use the order we define rather than messing it up with its\n    own cost calculations.  */\n-#define HONOR_REG_ALLOC_ORDER 1\n+#define HONOR_REG_ALLOC_ORDER optimize_size\n \n /* The number of consecutive hard regs needed starting at\n    reg \"regno\" for holding a value of mode \"mode\".  */"}]}