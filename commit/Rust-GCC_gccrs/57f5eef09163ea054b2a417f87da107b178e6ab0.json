{"sha": "57f5eef09163ea054b2a417f87da107b178e6ab0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdmNWVlZjA5MTYzZWEwNTRiMmE0MTdmODdkYTEwN2IxNzhlNmFiMA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2009-11-04T14:09:55Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2009-11-04T14:09:55Z"}, "message": "[multiple changes]\n\n2009-11-04  Richard Earnshaw  <rearnsha@arm.com>\n\n\tPR target/40835\n\t* arm.md (peephole2 patterns for move and compare): New.\n\n2009-11-04  Wei Guozhi  <carrot@google.com>\n\n\tPR target/40835\n\t* gcc.target/arm/pr40835: New testcase.\n\nFrom-SVN: r153895", "tree": {"sha": "d145853d7821f8a0ff1bc2768105dd32049941a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d145853d7821f8a0ff1bc2768105dd32049941a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57f5eef09163ea054b2a417f87da107b178e6ab0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f5eef09163ea054b2a417f87da107b178e6ab0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57f5eef09163ea054b2a417f87da107b178e6ab0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f5eef09163ea054b2a417f87da107b178e6ab0/comments", "author": null, "committer": null, "parents": [{"sha": "4003023f9d54dc66854c9a5a87043ba2f9a5237e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4003023f9d54dc66854c9a5a87043ba2f9a5237e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4003023f9d54dc66854c9a5a87043ba2f9a5237e"}], "stats": {"total": 105, "additions": 105, "deletions": 0}, "files": [{"sha": "1367409ac37fb2eefff11d3300c3fdf1e9861d92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57f5eef09163ea054b2a417f87da107b178e6ab0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57f5eef09163ea054b2a417f87da107b178e6ab0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57f5eef09163ea054b2a417f87da107b178e6ab0", "patch": "@@ -1,3 +1,8 @@\n+2009-11-04  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/40835\n+\t* arm.md (peephole2 patterns for move and compare): New.\n+\n 2009-11-04  Nick Clifton  <nickc@redhat.com>\n \n \t* defaults.h (CONSTANT_ADDRESS_P): Provide a default definition."}, {"sha": "fbc52f4600f8ad89969dc4cf91f88b4efa49dfcf", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57f5eef09163ea054b2a417f87da107b178e6ab0/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57f5eef09163ea054b2a417f87da107b178e6ab0/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=57f5eef09163ea054b2a417f87da107b178e6ab0", "patch": "@@ -6770,6 +6770,7 @@\n \t\t(const_int 6)\n \t\t(const_int 8))))]\n )\n+\n (define_insn \"*movsi_cbranchsi4\"\n   [(set (pc)\n \t(if_then_else\n@@ -6833,6 +6834,45 @@\n \t   (const_int 10)))))]\n )\n \n+(define_peephole2\n+  [(set (match_operand:SI 0 \"low_register_operand\" \"\")\n+\t(match_operand:SI 1 \"low_register_operand\" \"\"))\n+   (set (pc)\n+\t(if_then_else (match_operator 2 \"arm_comparison_operator\"\n+\t\t       [(match_dup 1) (const_int 0)])\n+\t\t      (label_ref (match_operand 3 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"TARGET_THUMB1\"\n+  [(parallel\n+    [(set (pc)\n+\t(if_then_else (match_op_dup 2 [(match_dup 1) (const_int 0)])\n+\t\t      (label_ref (match_dup 3))\n+\t\t      (pc)))\n+     (set (match_dup 0) (match_dup 1))])]\n+  \"\"\n+)\n+\n+;; Sigh!  This variant shouldn't be needed, but combine often fails to\n+;; merge cases like this because the op1 is a hard register in\n+;; CLASS_LIKELY_SPILLED_P.\n+(define_peephole2\n+  [(set (match_operand:SI 0 \"low_register_operand\" \"\")\n+\t(match_operand:SI 1 \"low_register_operand\" \"\"))\n+   (set (pc)\n+\t(if_then_else (match_operator 2 \"arm_comparison_operator\"\n+\t\t       [(match_dup 0) (const_int 0)])\n+\t\t      (label_ref (match_operand 3 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"TARGET_THUMB1\"\n+  [(parallel\n+    [(set (pc)\n+\t(if_then_else (match_op_dup 2 [(match_dup 1) (const_int 0)])\n+\t\t      (label_ref (match_dup 3))\n+\t\t      (pc)))\n+     (set (match_dup 0) (match_dup 1))])]\n+  \"\"\n+)\n+\n (define_insn \"*negated_cbranchsi4\"\n   [(set (pc)\n \t(if_then_else"}, {"sha": "62d1625485bfbbc53dd55fee78d9c4f41ac87ca7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57f5eef09163ea054b2a417f87da107b178e6ab0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57f5eef09163ea054b2a417f87da107b178e6ab0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57f5eef09163ea054b2a417f87da107b178e6ab0", "patch": "@@ -1,3 +1,8 @@\n+2009-11-04  Wei Guozhi  <carrot@google.com>\n+\n+\tPR target/40835\n+\t* gcc.target/arm/pr40835: New testcase.\n+\n 2009-11-04  Revital Eres  <eres@il.ibm.com>\n \n \t* gcc.target/powerpc/vsx-vectorize-3.c: Adjust tetcase following"}, {"sha": "baf940321017b0ff3c4d1d231003a7f8165e456a", "filename": "gcc/testsuite/gcc.target/arm/pr40835.c", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57f5eef09163ea054b2a417f87da107b178e6ab0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr40835.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57f5eef09163ea054b2a417f87da107b178e6ab0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr40835.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr40835.c?ref=57f5eef09163ea054b2a417f87da107b178e6ab0", "patch": "@@ -0,0 +1,55 @@\n+/* { dg-options \"-mthumb -Os -march=armv5te\" }  */\n+/* { dg-final { scan-assembler-not \"cmp\" } } */\n+\n+int bar();\n+void goo(int, int);\n+\n+void eq()\n+{\n+  int v = bar();\n+  if (v == 0)\n+    return;\n+  goo(1, v);\n+}\n+\n+void ge()\n+{\n+  int v = bar();\n+  if (v >= 0)\n+    return;\n+  goo(1, v);\n+}\n+\n+void gt()\n+{\n+  int v = bar();\n+  if (v > 0)\n+    return;\n+  goo(1, v);\n+}\n+\n+void lt()\n+{\n+  int v = bar();\n+  if (v < 0)\n+    return;\n+  goo(1, v);\n+}\n+\n+void le()\n+{\n+  int v = bar();\n+  if (v <= 0)\n+    return;\n+  goo(1, v);\n+}\n+\n+unsigned int foo();\n+\n+void leu()\n+{\n+  unsigned int v = foo();\n+  if (v <= 0)\n+    return;\n+  goo(1, v);\n+}"}]}