{"sha": "bae6eef0095c6fb444a547da7a938a2d35a6e3be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFlNmVlZjAwOTVjNmZiNDQ0YTU0N2RhN2E5MzhhMmQzNWE2ZTNiZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-06-13T07:10:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-06-13T07:10:06Z"}, "message": "tree-vect-loop.c (vect_model_reduction_cost): Do not fail, instead get vector type from stmt_info.\n\n2017-06-13  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-loop.c (vect_model_reduction_cost): Do not fail,\n\tinstead get vector type from stmt_info.\n\t(vectorizable_reduction): Adjust.  Remove dead code.\n\nFrom-SVN: r249145", "tree": {"sha": "3359c5316c7f973c8fb566d5cd3c45036e63ee84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3359c5316c7f973c8fb566d5cd3c45036e63ee84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bae6eef0095c6fb444a547da7a938a2d35a6e3be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae6eef0095c6fb444a547da7a938a2d35a6e3be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae6eef0095c6fb444a547da7a938a2d35a6e3be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae6eef0095c6fb444a547da7a938a2d35a6e3be/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f2c198d7675168416b8c994467d2941bfa5a309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f2c198d7675168416b8c994467d2941bfa5a309", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f2c198d7675168416b8c994467d2941bfa5a309"}], "stats": {"total": 53, "additions": 12, "deletions": 41}, "files": [{"sha": "2ebf47d31bd0bf93218ecc3541c2d4d295668b1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae6eef0095c6fb444a547da7a938a2d35a6e3be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae6eef0095c6fb444a547da7a938a2d35a6e3be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bae6eef0095c6fb444a547da7a938a2d35a6e3be", "patch": "@@ -1,3 +1,9 @@\n+2017-06-13  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-loop.c (vect_model_reduction_cost): Do not fail,\n+\tinstead get vector type from stmt_info.\n+\t(vectorizable_reduction): Adjust.  Remove dead code.\n+\n 2017-06-13  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/81065"}, {"sha": "b8b49c9fde459b89e72af3af7401bfbc5feda105", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 6, "deletions": 41, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae6eef0095c6fb444a547da7a938a2d35a6e3be/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae6eef0095c6fb444a547da7a938a2d35a6e3be/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=bae6eef0095c6fb444a547da7a938a2d35a6e3be", "patch": "@@ -3690,16 +3690,15 @@ get_reduction_op (gimple *stmt, int reduc_index)\n    generated within the strip-mine loop, the initial definition before\n    the loop, and the epilogue code that must be generated.  */\n \n-static bool\n+static void\n vect_model_reduction_cost (stmt_vec_info stmt_info, enum tree_code reduc_code,\n-\t\t\t   int ncopies, int reduc_index)\n+\t\t\t   int ncopies)\n {\n   int prologue_cost = 0, epilogue_cost = 0;\n   enum tree_code code;\n   optab optab;\n   tree vectype;\n-  gimple *stmt, *orig_stmt;\n-  tree reduction_op;\n+  gimple *orig_stmt;\n   machine_mode mode;\n   loop_vec_info loop_vinfo = STMT_VINFO_LOOP_VINFO (stmt_info);\n   struct loop *loop = NULL;\n@@ -3720,24 +3719,8 @@ vect_model_reduction_cost (stmt_vec_info stmt_info, enum tree_code reduc_code,\n   /* Cost of reduction op inside loop.  */\n   unsigned inside_cost = add_stmt_cost (target_cost_data, ncopies, vector_stmt,\n \t\t\t\t\tstmt_info, 0, vect_body);\n-  stmt = STMT_VINFO_STMT (stmt_info);\n-\n-  reduction_op = get_reduction_op (stmt, reduc_index);\n-\n-  vectype = get_vectype_for_scalar_type (TREE_TYPE (reduction_op));\n-  if (!vectype)\n-    {\n-      if (dump_enabled_p ())\n-        {\n-\t  dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-\t\t\t   \"unsupported data-type \");\n-          dump_generic_expr (MSG_MISSED_OPTIMIZATION, TDF_SLIM,\n-\t\t\t     TREE_TYPE (reduction_op));\n-          dump_printf (MSG_MISSED_OPTIMIZATION, \"\\n\");\n-        }\n-      return false;\n-   }\n \n+  vectype = STMT_VINFO_VECTYPE (stmt_info);\n   mode = TYPE_MODE (vectype);\n   orig_stmt = STMT_VINFO_RELATED_STMT (stmt_info);\n \n@@ -3829,8 +3812,6 @@ vect_model_reduction_cost (stmt_vec_info stmt_info, enum tree_code reduc_code,\n                  \"vect_model_reduction_cost: inside_cost = %d, \"\n                  \"prologue_cost = %d, epilogue_cost = %d .\\n\", inside_cost,\n                  prologue_cost, epilogue_cost);\n-\n-  return true;\n }\n \n \n@@ -5288,20 +5269,6 @@ vectorizable_reduction (gimple *stmt, gimple_stmt_iterator *gsi,\n   /* Flatten RHS.  */\n   switch (get_gimple_rhs_class (gimple_assign_rhs_code (stmt)))\n     {\n-    case GIMPLE_SINGLE_RHS:\n-      op_type = TREE_OPERAND_LENGTH (gimple_assign_rhs1 (stmt));\n-      if (op_type == ternary_op)\n-\t{\n-\t  tree rhs = gimple_assign_rhs1 (stmt);\n-\t  ops[0] = TREE_OPERAND (rhs, 0);\n-\t  ops[1] = TREE_OPERAND (rhs, 1);\n-\t  ops[2] = TREE_OPERAND (rhs, 2);\n-\t  code = TREE_CODE (rhs);\n-\t}\n-      else\n-\treturn false;\n-      break;\n-\n     case GIMPLE_BINARY_RHS:\n       code = gimple_assign_rhs_code (stmt);\n       op_type = TREE_CODE_LENGTH (code);\n@@ -5781,10 +5748,8 @@ vectorizable_reduction (gimple *stmt, gimple_stmt_iterator *gsi,\n \n   if (!vec_stmt) /* transformation not required.  */\n     {\n-      if (first_p\n-\t  && !vect_model_reduction_cost (stmt_info, epilog_reduc_code, ncopies,\n-\t\t\t\t\t reduc_index))\n-        return false;\n+      if (first_p)\n+\tvect_model_reduction_cost (stmt_info, epilog_reduc_code, ncopies);\n       STMT_VINFO_TYPE (stmt_info) = reduc_vec_info_type;\n       return true;\n     }"}]}