{"sha": "9580b58360584384b994413aa24e751c5503e4b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU4MGI1ODM2MDU4NDM4NGI5OTQ0MTNhYTI0ZTc1MWM1NTAzZTRiNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-16T22:36:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-16T22:36:33Z"}, "message": "Changed WINNT to _WIN32.\n\nFrom-SVN: r9732", "tree": {"sha": "e78afc664e978a89809766b13bd2d0d36cc0c595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e78afc664e978a89809766b13bd2d0d36cc0c595"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9580b58360584384b994413aa24e751c5503e4b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9580b58360584384b994413aa24e751c5503e4b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9580b58360584384b994413aa24e751c5503e4b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9580b58360584384b994413aa24e751c5503e4b4/comments", "author": null, "committer": null, "parents": [{"sha": "e9990579f163b8ee930585aaad074469aa8db384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9990579f163b8ee930585aaad074469aa8db384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9990579f163b8ee930585aaad074469aa8db384"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "3692e92bc584f6d01e9f5a50b759c6b2a05b206d", "filename": "gcc/getpwd.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9580b58360584384b994413aa24e751c5503e4b4/gcc%2Fgetpwd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9580b58360584384b994413aa24e751c5503e4b4/gcc%2Fgetpwd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgetpwd.c?ref=9580b58360584384b994413aa24e751c5503e4b4", "patch": "@@ -28,7 +28,7 @@ extern char *getcwd ();\n /* We actually use this as a starting point, not a limit.  */\n #define GUESSPATHLEN 100\n #endif /* (defined (USG) || defined (VMS)) */\n-#ifdef WINNT\n+#ifdef _WIN32\n #include <direct.h>\n #endif\n "}, {"sha": "920e7a78ca59dd4e55aeb058785a26d92aa9ae51", "filename": "gcc/protoize.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9580b58360584384b994413aa24e751c5503e4b4/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9580b58360584384b994413aa24e751c5503e4b4/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=9580b58360584384b994413aa24e751c5503e4b4", "patch": "@@ -64,7 +64,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include <errno.h>\n #include <sys/types.h>\n #include <sys/stat.h>\n-#ifndef WINNT\n+#ifndef _WIN32\n #if defined(POSIX) || defined(CONCURRENT)\n #include <dirent.h>\n #else\n@@ -169,7 +169,7 @@ typedef char * const_pointer_type;\n typedef void voidfn ();\n extern VOLATILE voidfn abort;\n #endif\n-#ifndef WINNT\n+#ifndef _WIN32\n extern int kill ();\n #endif\n extern int creat ();"}, {"sha": "4f5f4fd12a630a825f36967eb9cba9c2bc051c2e", "filename": "gcc/sdbout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9580b58360584384b994413aa24e751c5503e4b4/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9580b58360584384b994413aa24e751c5503e4b4/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=9580b58360584384b994413aa24e751c5503e4b4", "patch": "@@ -53,7 +53,7 @@ AT&T C compiler.  From the example below I would conclude the following:\n \n /* Mips systems use the SDB functions to dump out symbols, but\n    do not supply usable syms.h include files.  */\n-#if defined(USG) && !defined(MIPS) && !defined (hpux) && !defined(WINNT) && !defined(__linux__)\n+#if defined(USG) && !defined(MIPS) && !defined (hpux) && !defined(_WIN32) && !defined(__linux__)\n #include <syms.h>\n /* Use T_INT if we don't have T_VOID.  */\n #ifndef T_VOID"}, {"sha": "51d95dde2f07456127d64206674e80cf2ecdec1e", "filename": "gcc/toplev.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9580b58360584384b994413aa24e751c5503e4b4/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9580b58360584384b994413aa24e751c5503e4b4/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=9580b58360584384b994413aa24e751c5503e4b4", "patch": "@@ -35,7 +35,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include <ctype.h>\n #include <sys/stat.h>\n \n-#ifndef WINNT\n+#ifndef _WIN32\n #ifdef USG\n #undef FLOAT\n #include <sys/param.h>\n@@ -783,7 +783,7 @@ int dump_time;\n int\n get_run_time ()\n {\n-#ifndef WINNT\n+#ifndef _WIN32\n #ifdef USG\n   struct tms tms;\n #else\n@@ -803,12 +803,12 @@ get_run_time ()\n \n   if (quiet_flag)\n     return 0;\n-#ifdef WINNT\n+#ifdef _WIN32\n   if (clock() < 0)\n     return 0;\n   else\n     return (clock() * 1000);\n-#else /* not WINNT */\n+#else /* not _WIN32 */\n #ifdef USG\n   times (&tms);\n   return (tms.tms_utime + tms.tms_stime) * (1000000 / HZ);\n@@ -3914,7 +3914,7 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n \n   compile_file (filename);\n \n-#if !defined(OS2) && !defined(VMS) && !defined(WINNT)\n+#if !defined(OS2) && !defined(VMS) && !defined(_WIN32)\n   if (flag_print_mem)\n     {\n #ifdef __alpha\n@@ -3932,7 +3932,7 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n       system (\"ps v\");\n #endif /* not USG */\n     }\n-#endif /* not OS2 and not VMS and not WINNT */\n+#endif /* not OS2 and not VMS and not _WIN32 */\n \n   if (errorcount)\n     exit (FATAL_EXIT_CODE);"}]}