{"sha": "34fee389ffbd4e8e5a262027b253ca09a54e0578", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRmZWUzODlmZmJkNGU4ZTVhMjYyMDI3YjI1M2NhMDlhNTRlMDU3OA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-01-17T18:12:45Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-01-17T18:12:45Z"}, "message": "rx: Fix incorrect usage of + in output operands.\n\nFrom-SVN: r168926", "tree": {"sha": "ad095553168784954bd69a18a6266de441a582bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad095553168784954bd69a18a6266de441a582bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34fee389ffbd4e8e5a262027b253ca09a54e0578", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34fee389ffbd4e8e5a262027b253ca09a54e0578", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34fee389ffbd4e8e5a262027b253ca09a54e0578", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34fee389ffbd4e8e5a262027b253ca09a54e0578/comments", "author": null, "committer": null, "parents": [{"sha": "265c835fcfc31603765096a2ce417f37c7dbe32f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265c835fcfc31603765096a2ce417f37c7dbe32f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/265c835fcfc31603765096a2ce417f37c7dbe32f"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "a58c1eb58284cca4a52e19f77452ab4fa6460080", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34fee389ffbd4e8e5a262027b253ca09a54e0578/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34fee389ffbd4e8e5a262027b253ca09a54e0578/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34fee389ffbd4e8e5a262027b253ca09a54e0578", "patch": "@@ -1,5 +1,8 @@\n 2011-01-17  Richard Henderson  <rth@redhat.com>\n \n+\t* config/rx/rx.md (bswapsi2): Use = not + for output reload.\n+\t(bswaphi2, bitinvert, revw): Likewise.\n+\n \t* config/rx/rx.c (gen_rx_store_vector): Use VOIDmode for gen_rtx_SET.\n \t(gen_rx_rtsd_vector, gen_rx_popm_vector): Likewise.\n \t* config/rx/rx.md (pop_and_return): Use VOIDmode for SET."}, {"sha": "864b4a5a808c101bf242e6391718ead65d3aa3f5", "filename": "gcc/config/rx/rx.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34fee389ffbd4e8e5a262027b253ca09a54e0578/gcc%2Fconfig%2Frx%2Frx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34fee389ffbd4e8e5a262027b253ca09a54e0578/gcc%2Fconfig%2Frx%2Frx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.md?ref=34fee389ffbd4e8e5a262027b253ca09a54e0578", "patch": "@@ -1044,7 +1044,7 @@\n \n ;; Byte swap (single 32-bit value).\n (define_insn \"bswapsi2\"\n-  [(set (match_operand:SI           0 \"register_operand\" \"+r\")\n+  [(set (match_operand:SI           0 \"register_operand\" \"=r\")\n \t(bswap:SI (match_operand:SI 1 \"register_operand\"  \"r\")))]\n   \"\"\n   \"revl\\t%1, %0\"\n@@ -1053,7 +1053,7 @@\n \n ;; Byte swap (single 16-bit value).  Note - we ignore the swapping of the high 16-bits.\n (define_insn \"bswaphi2\"\n-  [(set (match_operand:HI           0 \"register_operand\" \"+r\")\n+  [(set (match_operand:HI           0 \"register_operand\" \"=r\")\n \t(bswap:HI (match_operand:HI 1 \"register_operand\"  \"r\")))]\n   \"\"\n   \"revw\\t%1, %0\"\n@@ -1545,8 +1545,8 @@\n    (set_attr \"timings\" \"34\")]\n )\n \n-(define_insn \"bitinvert\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"+r\")\n+(define_insn \"*bitinvert\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(xor:SI (match_operand:SI 1 \"register_operand\" \"0\")\n \t\t(ashift:SI (const_int 1)\n \t\t\t   (match_operand:SI 2 \"nonmemory_operand\" \"ri\"))))]\n@@ -1931,7 +1931,7 @@\n \n ;; Byte swap (two 16-bit values).\n (define_insn \"revw\"\n-  [(set (match_operand:SI             0 \"register_operand\" \"+r\")\n+  [(set (match_operand:SI             0 \"register_operand\" \"=r\")\n \t(unspec:SI [(match_operand:SI 1 \"register_operand\"  \"r\")]\n \t\t   UNSPEC_BUILTIN_REVW))]\n   \"\""}]}