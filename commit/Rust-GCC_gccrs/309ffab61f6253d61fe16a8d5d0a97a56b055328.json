{"sha": "309ffab61f6253d61fe16a8d5d0a97a56b055328", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA5ZmZhYjYxZjYyNTNkNjFmZTE2YThkNWQwYTk3YTU2YjA1NTMyOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-03T20:09:12Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-03T20:09:12Z"}, "message": "(check_format_info): Make warning nicer for mismatch of int vs long, etc.\n\nDon't warn if field width is an unsigned int.\n\nFrom-SVN: r5981", "tree": {"sha": "a5ef7cef4e305029c4a9f83c61ad1a099fd46524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5ef7cef4e305029c4a9f83c61ad1a099fd46524"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/309ffab61f6253d61fe16a8d5d0a97a56b055328", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/309ffab61f6253d61fe16a8d5d0a97a56b055328", "html_url": "https://github.com/Rust-GCC/gccrs/commit/309ffab61f6253d61fe16a8d5d0a97a56b055328", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/309ffab61f6253d61fe16a8d5d0a97a56b055328/comments", "author": null, "committer": null, "parents": [{"sha": "003be4554876a49978b7ca641107f137a87899d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/003be4554876a49978b7ca641107f137a87899d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/003be4554876a49978b7ca641107f137a87899d7"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "cb6e845c56ecc55bab94f2f46dcc122f3c7de4cf", "filename": "gcc/c-common.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/309ffab61f6253d61fe16a8d5d0a97a56b055328/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/309ffab61f6253d61fe16a8d5d0a97a56b055328/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=309ffab61f6253d61fe16a8d5d0a97a56b055328", "patch": "@@ -685,8 +685,11 @@ check_format_info (info, params)\n \t\t     It will work on most machines, because size_t and int\n \t\t     have the same mode.  But might as well warn anyway,\n \t\t     since it will fail on other machines.  */\n-\t\t  if (TYPE_MAIN_VARIANT (TREE_TYPE (cur_param))\n-\t\t      != integer_type_node)\n+\t\t  if ((TYPE_MAIN_VARIANT (TREE_TYPE (cur_param))\n+\t\t       != integer_type_node)\n+\t\t      &&\n+\t\t      (TYPE_MAIN_VARIANT (TREE_TYPE (cur_param))\n+\t\t       != unsigned_type_node))\n \t\t    {\n \t\t      sprintf (message,\n \t\t\t       \"field width is not type int (arg %d)\",\n@@ -935,6 +938,14 @@ check_format_info (info, params)\n \t\tthat = \"different type\";\n \t    }\n \n+\t  /* Make the warning better in case of mismatch of int vs long.  */\n+\t  if (TREE_CODE (cur_type) == INTEGER_TYPE\n+\t      && TREE_CODE (wanted_type) == INTEGER_TYPE\n+\t      && TYPE_PRECISION (cur_type) == TYPE_PRECISION (wanted_type)\n+\t      && TYPE_NAME (cur_type) != 0\n+\t      && TREE_CODE (TYPE_NAME (cur_type)) == TYPE_DECL)\n+\t    that = IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (cur_type)));\n+\n \t  if (strcmp (this, that) != 0)\n \t    {\n \t      sprintf (message, \"%s format, %s arg (arg %d)\","}]}