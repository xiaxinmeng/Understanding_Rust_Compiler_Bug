{"sha": "16d962d92cf0f9362467f4c693c296af6bfaba6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZkOTYyZDkyY2YwZjkzNjI0NjdmNGM2OTNjMjk2YWY2YmZhYmE2YQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-04-28T02:03:21Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-04-28T02:03:21Z"}, "message": "re PR libfortran/31532 (INQUIRE(...,POSITION=...) not standard conforming)\n\n2007-04-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/31532\n\t* io/file_pos.c (st_backspace): Set flags.position for end of file\n\tcondition and use new function update_position.\n\t(st_endfile): Use new function update_position.\n\t* io/io.h: Add prototype for new function.\n\t* io/inquire.c (inquire_via_unit): If not direct access, set NEXTREC\n\tto zero.\n\t* io/unit.c (update_position): New function to update position info\n\tused by inquire.\n\t* io/transfer.c (next_record): Fix typo and use new function.\n\nFrom-SVN: r124252", "tree": {"sha": "90a3e99020a35c7bc8694c854024d883c5c67a81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90a3e99020a35c7bc8694c854024d883c5c67a81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16d962d92cf0f9362467f4c693c296af6bfaba6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16d962d92cf0f9362467f4c693c296af6bfaba6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16d962d92cf0f9362467f4c693c296af6bfaba6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16d962d92cf0f9362467f4c693c296af6bfaba6a/comments", "author": null, "committer": null, "parents": [{"sha": "a6ee54a63621ec8c54f641c13150fa6a4c6c6fac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ee54a63621ec8c54f641c13150fa6a4c6c6fac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6ee54a63621ec8c54f641c13150fa6a4c6c6fac"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "983c64ff86b2d32e3129d4793977c8dc926976c8", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d962d92cf0f9362467f4c693c296af6bfaba6a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d962d92cf0f9362467f4c693c296af6bfaba6a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=16d962d92cf0f9362467f4c693c296af6bfaba6a", "patch": "@@ -1,3 +1,16 @@\n+2007-04-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/31532\n+\t* io/file_pos.c (st_backspace): Set flags.position for end of file\n+\tcondition and use new function update_position.\n+\t(st_endfile): Use new function update_position.\n+\t* io/io.h: Add prototype for new function.\n+\t* io/inquire.c (inquire_via_unit): If not direct access, set NEXTREC\n+\tto zero.\n+\t* io/unit.c (update_position): New function to update position info\n+\tused by inquire.\n+\t* io/transfer.c (next_record): Fix typo and use new function.\n+\n 2007-04-25  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR libfortran/31299"}, {"sha": "c9034e8c8ca71719b8980fa4da7b8a9372732ba1", "filename": "libgfortran/io/file_pos.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d962d92cf0f9362467f4c693c296af6bfaba6a/libgfortran%2Fio%2Ffile_pos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d962d92cf0f9362467f4c693c296af6bfaba6a/libgfortran%2Fio%2Ffile_pos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ffile_pos.c?ref=16d962d92cf0f9362467f4c693c296af6bfaba6a", "patch": "@@ -213,13 +213,17 @@ st_backspace (st_parameter_filepos *fpp)\n   if (u->endfile == AFTER_ENDFILE)\n     {\n       u->endfile = AT_ENDFILE;\n+      u->flags.position = POSITION_APPEND;\n       flush (u->s);\n       struncate (u->s);\n     }\n   else\n     {\n       if (file_position (u->s) == 0)\n-\tgoto done;\t\t/* Common special case */\n+\t{\n+\t  u->flags.position = POSITION_REWIND;\n+\t  goto done;\t\t/* Common special case */\n+\t}\n \n       if (u->mode == WRITING)\n \t{\n@@ -233,6 +237,7 @@ st_backspace (st_parameter_filepos *fpp)\n       else\n \tunformatted_backspace (fpp, u);\n \n+      update_position (u);\n       u->endfile = NO_ENDFILE;\n       u->current_record = 0;\n       u->bytes_left = 0;\n@@ -271,6 +276,7 @@ st_endfile (st_parameter_filepos *fpp)\n       flush (u->s);\n       struncate (u->s);\n       u->endfile = AFTER_ENDFILE;\n+      update_position (u);\n       unlock_unit (u);\n     }\n "}, {"sha": "b1f4a14f6c446820667c094d630d5aa2a0d478bb", "filename": "libgfortran/io/inquire.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d962d92cf0f9362467f4c693c296af6bfaba6a/libgfortran%2Fio%2Finquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d962d92cf0f9362467f4c693c296af6bfaba6a/libgfortran%2Fio%2Finquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Finquire.c?ref=16d962d92cf0f9362467f4c693c296af6bfaba6a", "patch": "@@ -152,7 +152,13 @@ inquire_via_unit (st_parameter_inquire *iqp, gfc_unit * u)\n     *iqp->strm_pos_out = (u != NULL) ? u->strm_pos : 0;\n \n   if ((cf & IOPARM_INQUIRE_HAS_NEXTREC) != 0)\n-    *iqp->nextrec = (u != NULL) ? u->last_record + 1 : 0;\n+    {\n+      /* This only makes sense in the context of DIRECT access.  */\n+      if (u != NULL && u->flags.access == ACCESS_DIRECT)\n+\t*iqp->nextrec = u->last_record + 1;\n+      else\n+\t*iqp->nextrec = 0;\n+    }\n \n   if ((cf & IOPARM_INQUIRE_HAS_BLANK) != 0)\n     {"}, {"sha": "1e5a6c9fdbf10847f68a80de12ce0805b3913da4", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d962d92cf0f9362467f4c693c296af6bfaba6a/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d962d92cf0f9362467f4c693c296af6bfaba6a/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=16d962d92cf0f9362467f4c693c296af6bfaba6a", "patch": "@@ -693,6 +693,9 @@ internal_proto(get_unit);\n extern void unlock_unit (gfc_unit *);\n internal_proto(unlock_unit);\n \n+extern void update_position (gfc_unit *);\n+internal_proto(update_position);\n+\n /* open.c */\n \n extern gfc_unit *new_unit (st_parameter_open *, gfc_unit *, unit_flags *);"}, {"sha": "ac5f11b40ffc9b0048c096db0644af3e69212f91", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d962d92cf0f9362467f4c693c296af6bfaba6a/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d962d92cf0f9362467f4c693c296af6bfaba6a/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=16d962d92cf0f9362467f4c693c296af6bfaba6a", "patch": "@@ -2546,8 +2546,10 @@ next_record (st_parameter_dt *dtp, int done)\n \n   if (!is_stream_io (dtp))\n     {\n-      /* keep position up to date for INQUIRE */\n-      dtp->u.p.current_unit->flags.position = POSITION_ASIS;\n+      /* Keep position up to date for INQUIRE */\n+      if (done)\n+\tupdate_position (dtp->u.p.current_unit);\n+\n       dtp->u.p.current_unit->current_record = 0;\n       if (dtp->u.p.current_unit->flags.access == ACCESS_DIRECT)\n \t{"}, {"sha": "7a4000d9fb504c133dd29ee09a8fb85ce2fce673", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d962d92cf0f9362467f4c693c296af6bfaba6a/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d962d92cf0f9362467f4c693c296af6bfaba6a/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=16d962d92cf0f9362467f4c693c296af6bfaba6a", "patch": "@@ -678,3 +678,17 @@ close_units (void)\n     close_unit_1 (unit_root, 1);\n   __gthread_mutex_unlock (&unit_lock);\n }\n+\n+\n+/* update_position()-- Update the flags position for later use by inquire.  */\n+\n+void\n+update_position (gfc_unit *u)\n+{\n+  if (file_position (u->s) == 0)\n+    u->flags.position = POSITION_REWIND;\n+  else if (file_length (u->s) == file_position (u->s))\n+    u->flags.position = POSITION_APPEND;\n+  else\n+    u->flags.position = POSITION_ASIS;\n+}"}]}