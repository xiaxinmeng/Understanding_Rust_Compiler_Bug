{"sha": "5ddfe794405a514824382e96b1047d3195af23cc", "node_id": "C_kwDOANBUbNoAKDVkZGZlNzk0NDA1YTUxNDgyNDM4MmU5NmIxMDQ3ZDMxOTVhZjIzY2M", "commit": {"author": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2022-12-08T18:08:22Z"}, "committer": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2022-12-08T18:49:40Z"}, "message": "bpf: add define_insn for bswap\n\nThe eBPF architecture provides 'end[be,le]' instructions for endianness\nswapping. Add a define_insn for bswap<mode>2 to use them instaed of\nfalling back on a libcall.\n\ngcc/\n\n\t* config/bpf/bpf.md (bswap<mode>2): New define_insn.\n\ngcc/testsuite/\n\n\t* gcc.target/bpf/bswap-1.c: New test.", "tree": {"sha": "ec153f538fea36809f6f731380b9498420118678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec153f538fea36809f6f731380b9498420118678"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ddfe794405a514824382e96b1047d3195af23cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ddfe794405a514824382e96b1047d3195af23cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ddfe794405a514824382e96b1047d3195af23cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ddfe794405a514824382e96b1047d3195af23cc/comments", "author": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd0485f20f4794f9787237706a6308473a8e9415", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd0485f20f4794f9787237706a6308473a8e9415", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd0485f20f4794f9787237706a6308473a8e9415"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "22a133f1c79079a91310c4323af41a8831a37fe4", "filename": "gcc/config/bpf/bpf.md", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddfe794405a514824382e96b1047d3195af23cc/gcc%2Fconfig%2Fbpf%2Fbpf.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddfe794405a514824382e96b1047d3195af23cc/gcc%2Fconfig%2Fbpf%2Fbpf.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbpf%2Fbpf.md?ref=5ddfe794405a514824382e96b1047d3195af23cc", "patch": "@@ -341,6 +341,23 @@\n   \"rsh<msuffix>\\t%0,%2\"\n   [(set_attr \"type\" \"<mtype>\")])\n \n+;;;; Endianness conversion\n+\n+(define_mode_iterator BSM [HI SI DI])\n+(define_mode_attr endmode [(HI \"16\") (SI \"32\") (DI \"64\")])\n+\n+(define_insn \"bswap<BSM:mode>2\"\n+  [(set (match_operand:BSM 0 \"register_operand\"            \"=r\")\n+        (bswap:BSM (match_operand:BSM 1 \"register_operand\" \" r\")))]\n+  \"\"\n+{\n+  if (TARGET_BIG_ENDIAN)\n+    return \"endle\\t%0, <endmode>\";\n+  else\n+    return \"endbe\\t%0, <endmode>\";\n+}\n+  [(set_attr \"type\" \"end\")])\n+\n ;;;; Conditional branches\n \n ;; The eBPF jump instructions use 64-bit arithmetic when evaluating"}, {"sha": "4748143ada507106bae74163cdf21fb9d35c50b7", "filename": "gcc/testsuite/gcc.target/bpf/bswap-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddfe794405a514824382e96b1047d3195af23cc/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fbswap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddfe794405a514824382e96b1047d3195af23cc/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fbswap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fbswap-1.c?ref=5ddfe794405a514824382e96b1047d3195af23cc", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mlittle-endian\" } */\n+\n+unsigned short in16 = 0x1234U;\n+unsigned int   in32 = 0x12345678U;\n+unsigned long  in64 = 0x123456789abcdef0ULL;\n+\n+unsigned short out16 = 0;\n+unsigned int   out32 = 0;\n+unsigned long  out64 = 0;\n+\n+int foo (void)\n+{\n+  out16 = __builtin_bswap16 (in16);\n+  out32 = __builtin_bswap32 (in32);\n+  out64 = __builtin_bswap64 (in64);\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler \"endbe\\t%r., 16\" } } */\n+/* { dg-final { scan-assembler \"endbe\\t%r., 32\" } } */\n+/* { dg-final { scan-assembler \"endbe\\t%r., 64\" } } */"}]}