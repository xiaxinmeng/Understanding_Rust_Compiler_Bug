{"sha": "8e19c582b18e18030c172cca406b5607114f80cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUxOWM1ODJiMThlMTgwMzBjMTcyY2NhNDA2YjU2MDcxMTRmODBjYw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-01-19T20:22:33Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-01-19T20:22:33Z"}, "message": "re PR fortran/51904 (ICE on SIZE function evaluation)\n\n2012-01-19  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51904\n        * expr.c (gfc_build_intrinsic_call): Also set the symtree.\n\n2012-01-19  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51904\n        * gfortran.dg/intrinsic_size_2.f90: New.\n\nFrom-SVN: r183310", "tree": {"sha": "cc369f202dad74838a38b0ba5b1231ab1703666c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc369f202dad74838a38b0ba5b1231ab1703666c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e19c582b18e18030c172cca406b5607114f80cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e19c582b18e18030c172cca406b5607114f80cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e19c582b18e18030c172cca406b5607114f80cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e19c582b18e18030c172cca406b5607114f80cc/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "58b3ebf2df0eb71597956f6ac3067fa77f6162b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b3ebf2df0eb71597956f6ac3067fa77f6162b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58b3ebf2df0eb71597956f6ac3067fa77f6162b5"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "c3106a5e1b0fc59d6ea36719bf989f16720831ba", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e19c582b18e18030c172cca406b5607114f80cc/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e19c582b18e18030c172cca406b5607114f80cc/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8e19c582b18e18030c172cca406b5607114f80cc", "patch": "@@ -1,3 +1,8 @@\n+2012-01-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51904\n+\t* expr.c (gfc_build_intrinsic_call): Also set the symtree.\n+\n 2012-01-18  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/51634"}, {"sha": "7cea780693d2a3d93a9f69da8c085e9402cd57f7", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e19c582b18e18030c172cca406b5607114f80cc/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e19c582b18e18030c172cca406b5607114f80cc/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=8e19c582b18e18030c172cca406b5607114f80cc", "patch": "@@ -4519,6 +4519,11 @@ gfc_build_intrinsic_call (const char* name, locus where, unsigned numarg, ...)\n   result->value.function.name = name;\n   result->value.function.isym = isym;\n \n+  result->symtree = gfc_find_symtree (gfc_current_ns->sym_root, name);\n+  gcc_assert (result->symtree\n+\t      && (result->symtree->n.sym->attr.flavor == FL_PROCEDURE\n+\t\t  || result->symtree->n.sym->attr.flavor == FL_UNKNOWN));\n+\n   va_start (ap, numarg);\n   atail = NULL;\n   for (i = 0; i < numarg; ++i)"}, {"sha": "eb1663c0e0ff61b7e5de5a46392e72d2bc2c0480", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e19c582b18e18030c172cca406b5607114f80cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e19c582b18e18030c172cca406b5607114f80cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e19c582b18e18030c172cca406b5607114f80cc", "patch": "@@ -1,3 +1,8 @@\n+2012-01-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51904\n+\t* gfortran.dg/intrinsic_size_2.f90: New.\n+\n 2012-01-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/51889"}, {"sha": "6070bc21b7de5255e86ced5441caba7e1bb176f9", "filename": "gcc/testsuite/gfortran.dg/intrinsic_size_2.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e19c582b18e18030c172cca406b5607114f80cc/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_size_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e19c582b18e18030c172cca406b5607114f80cc/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_size_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_size_2.f90?ref=8e19c582b18e18030c172cca406b5607114f80cc", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+!\n+! PR fortran/51904\n+!\n+! Contributed by David Sagan.\n+!\n+\n+call qp_draw_polyline_basic([1.0,2.0])\n+contains\n+subroutine qp_draw_polyline_basic (x)\n+  implicit none\n+  real :: x(:), f\n+  integer :: i\n+  f = 0\n+  print *, size(f*x)\n+end subroutine\n+end"}]}