{"sha": "842eb2a346eae7b9762537d9c4e3bab964b54e6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQyZWIyYTM0NmVhZTdiOTc2MjUzN2Q5YzRlM2JhYjk2NGI1NGU2ZA==", "commit": {"author": {"name": "Philipp Thomas", "email": "pthomas@gcc.gnu.org", "date": "2000-08-27T23:53:54Z"}, "committer": {"name": "Philipp Thomas", "email": "pthomas@gcc.gnu.org", "date": "2000-08-27T23:53:54Z"}, "message": "ABOUT-GCC-NLS: Remove gettext patches from Paul Eggert as they have been incorporated into the...\n\n2000-08-28  Philipp Thomas  <pthomas@suse.de>\n\n\t* ABOUT-GCC-NLS: Remove gettext patches from Paul Eggert as\n\tthey have been incorporated into the gettext CVS. Change the text to\n\treflect the current status of NLS. Add instructions for accessing\n\tthe gettext CVS and add the patch from Martin v. Loewis.\n\nFrom-SVN: r36008", "tree": {"sha": "ad8824ec76b3ad0bf3bbd481c1f9655c3af68f0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad8824ec76b3ad0bf3bbd481c1f9655c3af68f0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/842eb2a346eae7b9762537d9c4e3bab964b54e6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842eb2a346eae7b9762537d9c4e3bab964b54e6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/842eb2a346eae7b9762537d9c4e3bab964b54e6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842eb2a346eae7b9762537d9c4e3bab964b54e6d/comments", "author": null, "committer": null, "parents": [{"sha": "9ac96ca1f475583f602530b1746add88f0130552", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ac96ca1f475583f602530b1746add88f0130552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ac96ca1f475583f602530b1746add88f0130552"}], "stats": {"total": 639, "additions": 132, "deletions": 507}, "files": [{"sha": "e969c57035eba71a4db1c07366163fb8d37cbaf4", "filename": "gcc/ABOUT-GCC-NLS", "status": "modified", "additions": 132, "deletions": 507, "changes": 639, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842eb2a346eae7b9762537d9c4e3bab964b54e6d/gcc%2FABOUT-GCC-NLS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842eb2a346eae7b9762537d9c4e3bab964b54e6d/gcc%2FABOUT-GCC-NLS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FABOUT-GCC-NLS?ref=842eb2a346eae7b9762537d9c4e3bab964b54e6d", "patch": "@@ -1,26 +1,19 @@\n Notes on GCC's Native Language Support\n \n-GCC's Native Language Support (NLS) is relatively new and\n-experimental, so NLS is currently disabled by default.  Use\n-configure's --enable-nls option to enable it.  Eventually, NLS will be\n-enabled by default, and you'll need --disable-nls to disable it.  You\n-must enable NLS in order to make a GCC distribution.\n-\n By and large, only diagnostic messages have been internationalized.\n Some work remains in other areas; for example, GCC does not yet allow\n non-ASCII letters in identifiers.\n \n-Not all of GCC's diagnostic messages have been internationalized.\n-Programs like `enquire' and `genattr' are not internationalized, as\n-their users are GCC maintainers who typically need to be able to read\n-English anyway; internationalizing them would thus entail needless\n-work for the human translators.  And no one has yet gotten around to\n-internationalizing the messages in the C++ compiler, or in the\n-specialized MIPS-specific programs mips-tdump and mips-tfile.\n+Not all of GCC's diagnostic messages have been internationalized. Programs\n+like `enquire' and `genattr' (in fact all gen* programs) are not\n+internationalized, as their users are GCC maintainers who typically need to\n+be able to read English anyway; internationalizing them would thus entail\n+needless work for the human translators. Messages used for debugging, such\n+as used in dumped tables, should also not be translated.\n \n The GCC library should not contain any messages that need\n-internationalization, because it operates below the\n-internationalization library.\n+internationalization, because it operates below the internationalization\n+library.\n \n Currently, the only language translation supplied is en_UK (British English).\n \n@@ -42,501 +35,133 @@ line, where MSGID does not contain `%' or `}', corresponds to a\n message MSGID that requires translation; this is needed to identify\n diagnostics in GCC spec strings.\n \n-If you enable NLS and modify source files, you'll need to use a\n-special version of the GNU gettext package to propagate the\n-modifications to the translation tables.  Apply the following patch\n-(use `patch -p0') to GNU gettext 0.10.35, which you can retrieve from:\n-\n-ftp://alpha.gnu.org/gnu/gettext-0.10.35.tar.gz\n-\n-This patch has been submitted to the GNU gettext maintainer, so\n-eventually we shouldn't need this special gettext version.\n-\n-This patch is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-This patch is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this patch; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.\n-\n-1998-07-26  Paul Eggert  <eggert@twinsun.com>\n-\n-\t* po/Makefile.in.in (maintainer-clean): Remove cat-id-tbl.c and\n-\tstamp-cat-id.\n-\n-1998-07-24  Paul Eggert  <eggert@twinsun.com>\n-\n-\t* po/Makefile.in.in (cat-id-tbl.o): Depend on\n-\t$(top_srcdir)/intl/libgettext.h, not ../intl/libgettext.h.\n-\n-1998-07-20  Paul Eggert  <eggert@twinsun.com>\n-\n-\t* po/Makefile.in.in (.po.pox, all-yes, $(srcdir)/cat-id-tbl.c,\n-\t$(srcdir)/stamp-cat-id, update-po): Prepend `$(srcdir)/' to\n-\tfiles built in the source directory; this is needed for\n-\tVPATH-based make in Solaris 2.6.\n-\n-1998-07-17  Paul Eggert  <eggert@twinsun.com>\n-\n-\tAdd support for user-specified argument numbers for keywords.\n-\tExtract all strings from a keyword arg, not just the first one.\n-\tHandle parenthesized commas inside keyword args correctly.\n-\tWarn about nested keywords.\n-\n-\t* doc/gettext.texi: Document --keyword=id:argnum.\n-\n-\t* src/xgettext.c (scan_c_file):\n-\tWarn about nested keywords, e.g. _(_(\"xxx\")).\n-\tWarn also about not-yet-implemented but allowed nesting, e.g.\n-\tdcgettext(..._(\"xxx\")..., \"yyy\").\n-\tGet all strings in a keyword arg, not just the first one.\n-\tHandle parenthesized commas inside keyword args correctly.\n-\n-\t* src/xget-lex.h (enum xgettext_token_type_ty):\n-\tReplace xgettext_token_type_keyword1 and\n-\txgettext_token_type_keyword2 with just plain\n-\txgettext_token_type_keyword; it now has argnum value.\n-\tAdd xgettext_token_type_rp.\n-\t(struct xgettext_token_ty): Add argnum member.\n-\tline_number and file_name are now also set for\n-\txgettext_token_type_keyword.\n-\t(xgettext_lex_keyword): Arg is const char *.\n-\n-\t* src/xget-lex.c: Include \"hash.h\".\n-\t(enum token_type_ty): Add token_type_rp.\n-\t(keywords): Now a hash table.\n-\t(phase5_get): Return token_type_rp for ')'.\n-\t(xgettext_lex, xgettext_lex_keyword): Add support for keyword argnums.\n-\t(xgettext_lex): Return xgettext_token_type_rp for ')'.\n-\tReport keyword argnum, line number, and file name back to caller.\n-\n-1998-07-09  Paul Eggert  <eggert@twinsun.com>\n-\n-        * intl/Makefile.in (uninstall):\n-\tDo nothing unless $(PACKAGE) is gettext.\n-\n-===================================================================\n-RCS file: doc/gettext.texi,v\n-retrieving revision 0.10.35.0\n-retrieving revision 0.10.35.1\n-diff -pu -r0.10.35.0 -r0.10.35.1\n---- doc/gettext.texi\t1998/05/01 05:53:32\t0.10.35.0\n-+++ doc/gettext.texi\t1998/07/18 00:25:15\t0.10.35.1\n-@@ -1854,13 +1854,19 @@ List of directories searched for input f\n- Join messages with existing file.\n- \n- @item -k @var{word}\n--@itemx --keyword[=@var{word}]\n--Additonal keyword to be looked for (without @var{word} means not to\n-+@itemx --keyword[=@var{keywordspec}]\n-+Additonal keyword to be looked for (without @var{keywordspec} means not to\n- use default keywords).\n- \n--The default keywords, which are always looked for if not explicitly\n--disabled, are @code{gettext}, @code{dgettext}, @code{dcgettext} and\n--@code{gettext_noop}.\n-+If @var{keywordspec} is a C identifer @var{id}, @code{xgettext} looks\n-+for strings in the first argument of each call to the function or macro\n-+@var{id}.  If @var{keywordspec} is of the form\n-+@samp{@var{id}:@var{argnum}}, @code{xgettext} looks for strings in the\n-+@var{argnum}th argument of the call.\n-+\n-+The default keyword specifications, which are always looked for if not\n-+explicitly disabled, are @code{gettext}, @code{dgettext:2},\n-+@code{dcgettext:2} and @code{gettext_noop}.\n- \n- @item -m [@var{string}]\n- @itemx --msgstr-prefix[=@var{string}]\n-===================================================================\n-RCS file: intl/Makefile.in,v\n-retrieving revision 0.10.35.0\n-retrieving revision 0.10.35.1\n-diff -pu -r0.10.35.0 -r0.10.35.1\n---- intl/Makefile.in\t1998/04/27 21:53:18\t0.10.35.0\n-+++ intl/Makefile.in\t1998/07/09 21:39:18\t0.10.35.1\n-@@ -143,10 +143,14 @@ install-data: all\n- installcheck:\n- \n- uninstall:\n--\tdists=\"$(DISTFILES.common)\"; \\\n--\tfor file in $$dists; do \\\n--\t  rm -f $(gettextsrcdir)/$$file; \\\n--\tdone\n-+\tif test \"$(PACKAGE)\" = \"gettext\"; then \\\n-+\t  dists=\"$(DISTFILES.common)\"; \\\n-+\t  for file in $$dists; do \\\n-+\t    rm -f $(gettextsrcdir)/$$file; \\\n-+\t  done\n-+\telse \\\n-+\t  : ; \\\n-+\tfi\n- \n- info dvi:\n- \n-===================================================================\n-RCS file: src/xget-lex.c,v\n-retrieving revision 0.10.35.0\n-retrieving revision 0.10.35.1\n-diff -pu -r0.10.35.0 -r0.10.35.1\n---- src/xget-lex.c\t1998/07/09 22:49:48\t0.10.35.0\n-+++ src/xget-lex.c\t1998/07/18 00:25:15\t0.10.35.1\n-@@ -33,6 +33,7 @@\n- #include \"error.h\"\n- #include \"system.h\"\n- #include \"libgettext.h\"\n-+#include \"hash.h\"\n- #include \"str-list.h\"\n- #include \"xget-lex.h\"\n- \n-@@ -83,6 +84,7 @@ enum token_type_ty\n-   token_type_eoln,\n-   token_type_hash,\n-   token_type_lp,\n-+  token_type_rp,\n-   token_type_comma,\n-   token_type_name,\n-   token_type_number,\n-@@ -109,7 +111,7 @@ static FILE *fp;\n- static int trigraphs;\n- static int cplusplus_comments;\n- static string_list_ty *comment;\n--static string_list_ty *keywords;\n-+static hash_table keywords;\n- static int default_keywords = 1;\n- \n- /* These are for tracking whether comments count as immediately before\n-@@ -941,6 +943,10 @@ phase5_get (tp)\n-       tp->type = token_type_lp;\n-       return;\n- \n-+    case ')':\n-+      tp->type = token_type_rp;\n-+      return;\n-+\n-     case ',':\n-       tp->type = token_type_comma;\n-       return;\n-@@ -1179,6 +1185,7 @@ xgettext_lex (tp)\n-   while (1)\n-     {\n-       token_ty token;\n-+      void *keyword_value;\n- \n-       phase8_get (&token);\n-       switch (token.type)\n-@@ -1213,17 +1220,20 @@ xgettext_lex (tp)\n- \t  if (default_keywords)\n- \t    {\n- \t      xgettext_lex_keyword (\"gettext\");\n--\t      xgettext_lex_keyword (\"dgettext\");\n--\t      xgettext_lex_keyword (\"dcgettext\");\n-+\t      xgettext_lex_keyword (\"dgettext:2\");\n-+\t      xgettext_lex_keyword (\"dcgettext:2\");\n- \t      xgettext_lex_keyword (\"gettext_noop\");\n- \t      default_keywords = 0;\n- \t    }\n- \n--\t  if (string_list_member (keywords, token.string))\n--\t    {\n--\t      tp->type = (strcmp (token.string, \"dgettext\") == 0\n--\t\t\t  || strcmp (token.string, \"dcgettext\") == 0)\n--\t\t? xgettext_token_type_keyword2 : xgettext_token_type_keyword1;\n-+\t  if (find_entry (&keywords, token.string, strlen (token.string),\n-+\t\t\t  &keyword_value)\n-+\t      == 0)\n-+\t    {\n-+\t      tp->type = xgettext_token_type_keyword;\n-+\t      tp->argnum = (int) keyword_value;\n-+\t      tp->line_number = token.line_number;\n-+\t      tp->file_name = logical_file_name;\n- \t    }\n- \t  else\n- \t    tp->type = xgettext_token_type_symbol;\n-@@ -1236,6 +1246,12 @@ xgettext_lex (tp)\n- \t  tp->type = xgettext_token_type_lp;\n- \t  return;\n- \n-+\tcase token_type_rp:\n-+\t  last_non_comment_line = newline_count;\n-+\n-+\t  tp->type = xgettext_token_type_rp;\n-+\t  return;\n+If you modify source files, you'll need to use a special\n+version of the GNU gettext package to propagate the modifications to the\n+translation tables.\n+\n+Paul Eggerts original patches have been incorporated into the official\n+gettext CVS. These sources may be accessed via anonymous cvs. The root for\n+the gettext CVS is :pserver:anoncvs@anoncvs.cygnus.com:/cvs/gettext \n+Password is `anoncvs' like for the GCC CVS. After having retrieved the\n+sources, you have to apply the following patch, which is pending approval by\n+the gettext maintainer.\n+\n+After having built and installed these gettext tools, you have to configure\n+GCC with --enable-maintainer-mode to get the master catalog rebuilt.\n+\n+2000-06-01  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+        * xgettext.c (long_options): New option defines.\n+        * xget-lex.c (phase6_get): If set, process #defines as well.\n+\n+--- doc/gettext.texi\t2000/07/28 21:11:32\t1.2\n++++ doc/gettext.texi\t2000/08/27 23:28:32\n+@@ -20,7 +20,7 @@\n+ This file provides documentation for GNU @code{gettext} utilities.\n+ It also serves as a reference for the free Translation Project.\n+ \n+-Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n++Copyright (C) 1995, 1996, 1997, 1998, 2000 Free Software Foundation, Inc.\n+ \n+ Permission is granted to make and distribute verbatim copies of\n+ this manual provided the copyright notice and this permission notice\n+@@ -54,7 +54,7 @@ by the Foundation.\n+ \n+ @page\n+ @vskip 0pt plus 1filll\n+-Copyright @copyright{} 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n++Copyright @copyright{} 1995, 1996, 1997, 1998, 2000 Free Software Foundation, Inc.\n+ \n+ Permission is granted to make and distribute verbatim copies of\n+ this manual provided the copyright notice and this permission notice\n+@@ -1828,6 +1828,10 @@ not have to care about these details.\n+ @item -d @var{name}\n+ @itemx --default-domain=@var{name}\n+ Use @file{@var{name}.po} for output (instead of @file{messages.po}).\n +\n- \tcase token_type_comma:\n- \t  last_non_comment_line = newline_count;\n- \n-@@ -1263,16 +1279,32 @@ xgettext_lex (tp)\n- \n- void\n- xgettext_lex_keyword (name)\n--     char *name;\n-+     const char *name;\n- {\n-   if (name == NULL)\n-     default_keywords = 0;\n-   else\n-     {\n--      if (keywords == NULL)\n--\tkeywords = string_list_alloc ();\n-+      int argnum;\n-+      size_t len;\n-+      const char *sp;\n-+\n-+      if (keywords.table == NULL)\n-+\tinit_hash (&keywords, 100);\n-+\n-+      sp = strchr (name, ':');\n-+      if (sp)\n++@itemx --defines\n++Look for the keywords in #define statements as well. Normally, xgettext\n++will treat them as white space.\n+ \n+ The special domain name @file{-} or @file{/dev/stdout} means to write\n+ the output to @file{stdout}.\n+\n+--- src/xget-lex.c\t2000/07/28 21:11:32\t1.2\n++++ src/xget-lex.c\t2000/08/27 23:28:33\n+@@ -1045,6 +1045,7 @@ phaseX_get (tp)\n+ static token_ty phase6_pushback[4];\n+ static int phase6_pushback_length;\n+ \n++extern int defines;\n+ \n+ static void\n+ phase6_get (tp)\n+@@ -1068,9 +1069,36 @@ phase6_get (tp)\n+       if (tp->type != token_type_hash)\n+ \treturn;\n+ \n++      /* Find the first non-whitespace token. If it is a define, we\n++ \t will treat the rest of the line as normal input, if defines\n++ \t is set. */\n++      if (defines)\n +\t{\n-+\t  len = sp - name;\n-+\t  argnum = atoi (sp + 1);\n++\t  while (1)\n++\t    {\n++\t      phaseX_get (tp);\n++\t      if (tp->type == token_type_eoln || tp->type == token_type_eof)\n++\t\treturn;\n++\t      if (tp->type != token_type_white_space)\n++\t\tbreak;\n++\t    }\n++\t  if (tp->type == token_type_name \n++\t      && strcmp (tp->string, \"define\") == 0)\n++\t    return;\n++\t  /* It's not a define, so we start collecting tokens.  */\n++\t  if (!bufmax)\n++\t    {\n++\t      bufmax = 100;\n++\t      buf = xrealloc (buf, bufmax * sizeof (buf[0]));\n++\t    }\n++\t  buf[0] = *tp;\n++\t  bufpos = 1;\n +\t}\n +      else\n-+\t{\n-+\t  len = strlen (name);\n-+\t  argnum = 1;\n-+\t}\n- \n--      string_list_append_unique (keywords, name);\n-+      insert_entry (&keywords, name, len, (void *) argnum);\n-     }\n- }\n- \n-===================================================================\n-RCS file: src/xget-lex.h,v\n-retrieving revision 0.10.35.0\n-retrieving revision 0.10.35.1\n-diff -pu -r0.10.35.0 -r0.10.35.1\n---- src/xget-lex.h\t1998/07/09 22:49:48\t0.10.35.0\n-+++ src/xget-lex.h\t1998/07/18 00:25:15\t0.10.35.1\n-@@ -23,9 +23,9 @@ Foundation, Inc., 59 Temple Place - Suit\n- enum xgettext_token_type_ty\n- {\n-   xgettext_token_type_eof,\n--  xgettext_token_type_keyword1,\n--  xgettext_token_type_keyword2,\n-+  xgettext_token_type_keyword,\n-   xgettext_token_type_lp,\n-+  xgettext_token_type_rp,\n-   xgettext_token_type_comma,\n-   xgettext_token_type_string_literal,\n-   xgettext_token_type_symbol\n-@@ -37,8 +37,14 @@ struct xgettext_token_ty\n- {\n-   xgettext_token_type_ty type;\n- \n--  /* These 3 are only set for xgettext_token_type_string_literal.  */\n-+  /* This 1 is set only for xgettext_token_type_keyword.  */\n-+  int argnum;\n-+\n-+  /* This 1 is set only for xgettext_token_type_string_literal.  */\n-   char *string;\n++\tbufpos = 0;\n +\n-+  /* These 2 are set only for xgettext_token_type_keyword and\n-+     xgettext_token_type_string_literal.  */\n-   int line_number;\n-   char *file_name;\n- };\n-@@ -50,7 +56,7 @@ void xgettext_lex PARAMS ((xgettext_toke\n- const char *xgettext_lex_comment PARAMS ((size_t __n));\n- void xgettext_lex_comment_reset PARAMS ((void));\n- /* void xgettext_lex_filepos PARAMS ((char **, int *)); FIXME needed?  */\n--void xgettext_lex_keyword PARAMS ((char *__name));\n-+void xgettext_lex_keyword PARAMS ((const char *__name));\n- void xgettext_lex_cplusplus PARAMS ((void));\n- void xgettext_lex_trigraphs PARAMS ((void));\n- \n-===================================================================\n-RCS file: src/xgettext.c,v\n-retrieving revision 0.10.35.0\n-retrieving revision 0.10.35.1\n-diff -pu -r0.10.35.0 -r0.10.35.1\n---- src/xgettext.c\t1998/07/09 22:49:48\t0.10.35.0\n-+++ src/xgettext.c\t1998/07/18 00:25:15\t0.10.35.1\n-@@ -835,6 +835,8 @@ scan_c_file(filename, mlp, is_cpp_file)\n-      int is_cpp_file;\n- {\n-   int state;\n-+  int commas_to_skip;\t/* defined only when in states 1 and 2 */\n-+  int paren_nesting;\t/* defined only when in state 2 */\n- \n-   /* Inform scanner whether we have C++ files or not.  */\n-   if (is_cpp_file)\n-@@ -854,63 +856,79 @@ scan_c_file(filename, mlp, is_cpp_file)\n-    {\n-      xgettext_token_ty token;\n- \n--     /* A simple state machine is used to do the recognising:\n-+     /* A state machine is used to do the recognising:\n-         State 0 = waiting for something to happen\n--        State 1 = seen one of our keywords with string in first parameter\n--        State 2 = was in state 1 and now saw a left paren\n--\tState 3 = seen one of our keywords with string in second parameter\n--\tState 4 = was in state 3 and now saw a left paren\n--\tState 5 = waiting for comma after being in state 4\n--\tState 6 = saw comma after being in state 5  */\n-+        State 1 = seen one of our keywords\n-+        State 2 = waiting for part of an argument */\n-      xgettext_lex (&token);\n-      switch (token.type)\n-        {\n--       case xgettext_token_type_keyword1:\n-+       case xgettext_token_type_keyword:\n-+\t if (!extract_all && state == 2)\n-+\t   {\n-+\t     if (commas_to_skip == 0)\n-+\t       {\n-+\t\t error (0, 0,\n-+\t\t\t_(\"%s:%d: warning: keyword nested in keyword arg\"),\n-+\t\t\ttoken.file_name, token.line_number);\n-+\t\t continue;\n-+\t       }\n-+\n-+\t     /* Here we should nest properly, but this would require a\n-+\t\tpotentially unbounded stack.  We haven't run across an\n-+\t\texample that needs this functionality yet.  For now,\n-+\t\twe punt and forget the outer keyword.  */\n-+\t     error (0, 0,\n-+\t\t    _(\"%s:%d: warning: keyword between outer keyword and its arg\"),\n-+\t\t    token.file_name, token.line_number);\n-+\t   }\n-+\t commas_to_skip = token.argnum - 1;\n- \t state = 1;\n- \t continue;\n- \n--       case xgettext_token_type_keyword2:\n--\t state = 3;\n--\t continue;\n--\n-        case xgettext_token_type_lp:\n- \t switch (state)\n- \t   {\n- \t   case 1:\n-+\t     paren_nesting = 0;\n- \t     state = 2;\n- \t     break;\n--\t   case 3:\n--\t     state = 4;\n-+\t   case 2:\n-+\t     paren_nesting++;\n- \t     break;\n--\t   default:\n--\t     state = 0;\n- \t   }\n- \t continue;\n- \n-+       case xgettext_token_type_rp:\n-+\t if (state == 2 && paren_nesting != 0)\n-+\t   paren_nesting--;\n-+\t else\n-+\t   state = 0;\n-+\t continue;\n+       /* Accumulate the rest of the directive in a buffer.  Work out\n+ \t what it is later.  */\n+-      bufpos = 0;\n+       while (1)\n+ \t{\n+ \t  phaseX_get (tp);\n+\n+--- src/xgettext.c\t2000/07/28 21:11:32\t1.2\n++++ src/xgettext.c\t2000/08/27 23:28:35\n+@@ -80,6 +80,9 @@ static char *comment_tag;\n+ /* Name of default domain file.  If not set defaults to messages.po.  */\n+ static char *default_domain;\n+ \n++/* If preprocessor defines are also analyzed for keywords.  */\n++int defines;\n +\n-        case xgettext_token_type_comma:\n--\t state = state == 5 ? 6 : 0;\n-+\t if (state == 2 && commas_to_skip != 0)\n-+\t   commas_to_skip -= paren_nesting == 0;\n-+\t else\n-+\t   state = 0;\n- \t continue;\n- \n-        case xgettext_token_type_string_literal:\n--\t if (extract_all || state == 2 || state == 6)\n--\t   {\n--\t     remember_a_message (mlp, &token);\n--\t     state = 0;\n--\t   }\n-+\t if (extract_all || (state == 2 && commas_to_skip == 0))\n-+\t   remember_a_message (mlp, &token);\n- \t else\n- \t   {\n- \t     free (token.string);\n--\t     state = (state == 4 || state == 5) ? 5 : 0;\n-+\t     state = state == 2 ? 2 : 0;\n- \t   }\n- \t continue;\n- \n-        case xgettext_token_type_symbol:\n--\t state = (state == 4 || state == 5) ? 5 : 0;\n-+\t state = state == 2 ? 2 : 0;\n- \t continue;\n- \n-        default:\n--\t state = 0;\n--\t continue;\n-+\t abort ();\n- \n-        case xgettext_token_type_eof:\n- \t break;\n-===================================================================\n-RCS file: po/Makefile.in.in,v\n-retrieving revision 0.10.35.0\n-retrieving revision 0.10.35.5\n-diff -u -r0.10.35.0 -r0.10.35.5\n---- po/Makefile.in.in\t1998/07/20 20:20:38\t0.10.35.0\n-+++ po/Makefile.in.in\t1998/07/26 09:07:52\t0.10.35.5\n-@@ -62,7 +62,7 @@\n- \t$(COMPILE) $<\n- \n- .po.pox:\n--\t$(MAKE) $(PACKAGE).pot\n-+\t$(MAKE) $(srcdir)/$(PACKAGE).pot\n- \t$(MSGMERGE) $< $(srcdir)/$(PACKAGE).pot -o $*.pox\n- \n- .po.mo:\n-@@ -79,7 +79,7 @@\n- \n- all: all-@USE_NLS@\n- \n--all-yes: cat-id-tbl.c $(CATALOGS)\n-+all-yes: $(srcdir)/cat-id-tbl.c $(CATALOGS)\n- all-no:\n- \n- $(srcdir)/$(PACKAGE).pot: $(POTFILES)\n-@@ -90,8 +90,8 @@\n- \t   || ( rm -f $(srcdir)/$(PACKAGE).pot \\\n- \t\t&& mv $(PACKAGE).po $(srcdir)/$(PACKAGE).pot )\n- \n--$(srcdir)/cat-id-tbl.c: stamp-cat-id; @:\n--$(srcdir)/stamp-cat-id: $(PACKAGE).pot\n-+$(srcdir)/cat-id-tbl.c: $(srcdir)/stamp-cat-id; @:\n-+$(srcdir)/stamp-cat-id: $(srcdir)/$(PACKAGE).pot\n- \trm -f cat-id-tbl.tmp\n- \tsed -f ../intl/po2tbl.sed $(srcdir)/$(PACKAGE).pot \\\n- \t\t| sed -e \"s/@PACKAGE NAME@/$(PACKAGE)/\" > cat-id-tbl.tmp\n-@@ -180,7 +180,8 @@\n- \n- check: all\n- \n--cat-id-tbl.o: ../intl/libgettext.h\n-+cat-id-tbl.o: $(srcdir)/cat-id-tbl.c $(top_srcdir)/intl/libgettext.h\n-+\t$(COMPILE) $(srcdir)/cat-id-tbl.c\n- \n- dvi info tags TAGS ID:\n- \n-@@ -196,7 +197,7 @@\n- maintainer-clean: distclean\n- \t@echo \"This command is intended for maintainers to use;\"\n- \t@echo \"it deletes files that may require special tools to rebuild.\"\n--\trm -f $(GMOFILES)\n-+\trm -f $(GMOFILES) cat-id-tbl.c stamp-cat-id\n- \n- distdir = ../$(PACKAGE)-$(VERSION)/$(subdir)\n- dist distdir: update-po $(DISTFILES)\n-@@ -207,7 +208,7 @@\n- \tdone\n- \n- update-po: Makefile\n--\t$(MAKE) $(PACKAGE).pot\n-+\t$(MAKE) $(srcdir)/$(PACKAGE).pot\n- \tPATH=`pwd`/../src:$$PATH; \\\n- \tcd $(srcdir); \\\n- \tcatalogs='$(CATALOGS)'; \\\n+ /* If called with --debug option the output reflects whether format\n+    string recognition is done automatically or forced by the user.  */\n+ static int do_debug;\n+@@ -125,6 +128,7 @@ static const struct option long_options[\n+   { \"debug\", no_argument, &do_debug, 1 },\n+   { \"default-domain\", required_argument, NULL, 'd' },\n+   { \"directory\", required_argument, NULL, 'D' },\n++  { \"defines\", no_argument, &defines, 1 },\n+   { \"escape\", no_argument, NULL, 'E' },\n+   { \"exclude-file\", required_argument, NULL, 'x' },\n+   { \"extract-all\", no_argument, &extract_all, 1 },\n+@@ -552,6 +556,7 @@ Mandatory arguments to long options are \n+   -C, --c++                      shorthand for --language=C++\\n\\\n+       --debug                    more detailed formatstring recognision result\\n\\\n+   -d, --default-domain=NAME      use NAME.po for output (instead of messages.po)\\n\\\n++      --defines                  analyze preprocessor defines\\n\\\n+   -D, --directory=DIRECTORY      add DIRECTORY to list for input files search\\n\\\n+   -e, --no-escape                do not use C escapes in output (default)\\n\\\n+   -E, --escape                   use C escapes in output, no extended chars\\n\\\n+\n+"}]}