{"sha": "7ded35b4c2c8ebf53faa42987703616e2a813421", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RlZDM1YjRjMmM4ZWJmNTNmYWE0Mjk4NzcwMzYxNmUyYTgxMzQyMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2005-02-02T20:58:39Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2005-02-02T20:58:39Z"}, "message": "re PR tree-optimization/19578 (function pointer propagation fails for noreturn functions (part 2))\n\n\tPR tree-optimization/19578\n\t* tree-flow.h (modified_noreturn_calls): Declare.\n\t(noreturn_call_p): Declare.\n\t* tree-flow-inline.h (noreturn_call_p): New function.\n\t(modify_stmt): Add modified noreturn calls to modified_noreturn_calls.\n\t* tree-cfg.c (modified_noreturn_calls): New variable.\n\t(cleanup_control_flow): Use noreturn_call_p.  Split basic blocks\n\tthat contain a mid-block noreturn call.\n\t* tree-ssa.c (delete_tree_ssa): Clear modified_noreturn_calls.\n\nFrom-SVN: r94610", "tree": {"sha": "8186ca6684edf68798355acd2929c8c432d3b55b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8186ca6684edf68798355acd2929c8c432d3b55b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ded35b4c2c8ebf53faa42987703616e2a813421", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ded35b4c2c8ebf53faa42987703616e2a813421", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ded35b4c2c8ebf53faa42987703616e2a813421", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ded35b4c2c8ebf53faa42987703616e2a813421/comments", "author": null, "committer": null, "parents": [{"sha": "d01da8bd5ea37af2e5b6d382e489de7a73579a01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d01da8bd5ea37af2e5b6d382e489de7a73579a01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d01da8bd5ea37af2e5b6d382e489de7a73579a01"}], "stats": {"total": 65, "additions": 60, "deletions": 5}, "files": [{"sha": "70fe886844e4eec2fe6c2456af343642c9c35891", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ded35b4c2c8ebf53faa42987703616e2a813421", "patch": "@@ -1,3 +1,15 @@\n+2005-02-02  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\tPR tree-optimization/19578\n+\t* tree-flow.h (modified_noreturn_calls): Declare.\n+\t(noreturn_call_p): Declare.\n+\t* tree-flow-inline.h (noreturn_call_p): New function.\n+\t(modify_stmt): Add modified noreturn calls to modified_noreturn_calls.\n+\t* tree-cfg.c (modified_noreturn_calls): New variable.\n+\t(cleanup_control_flow): Use noreturn_call_p.  Split basic blocks\n+\tthat contain a mid-block noreturn call.\n+\t* tree-ssa.c (delete_tree_ssa): Clear modified_noreturn_calls.\n+\n 2005-02-02  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* df.c (df_def_record_1, df_uses_record): Don't use"}, {"sha": "a1dbc3fb03fdf1bbc41ae4cf54c160d4cf5efbbb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ded35b4c2c8ebf53faa42987703616e2a813421", "patch": "@@ -1,3 +1,8 @@\n+2005-02-02  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\tPR tree-optimization/19578\n+\t* gcc.c-torture/compile/20050202-1.c: New test.\n+\n 2005-02-02  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR c/19435"}, {"sha": "b3f81764538336c8cb291e6f93589fe42d753ecc", "filename": "gcc/testsuite/gcc.c-torture/compile/20050202-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050202-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050202-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050202-1.c?ref=7ded35b4c2c8ebf53faa42987703616e2a813421", "patch": "@@ -0,0 +1,10 @@\n+/* From PR 19578.  */\n+extern void foo (void) __attribute__((noreturn));\n+\n+void\n+g (void)\n+{\n+  void (*f) (void) = foo;\n+  f ();\n+  f ();\n+}"}, {"sha": "cade864f191de427eec8de3f84a060596abe4938", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=7ded35b4c2c8ebf53faa42987703616e2a813421", "patch": "@@ -2052,6 +2052,14 @@ remove_bb (basic_block bb)\n   remove_phi_nodes_and_edges_for_unreachable_block (bb);\n }\n \n+/* A list of all the noreturn calls passed to modify_stmt.\n+   cleanup_control_flow uses it to detect cases where a mid-block\n+   indirect call has been turned into a noreturn call.  When this\n+   happens, all the instructions after the call are no longer\n+   reachable and must be deleted as dead.  */\n+\n+VEC(tree) *modified_noreturn_calls;\n+\n /* Try to remove superfluous control structures.  */\n \n static bool\n@@ -2060,7 +2068,16 @@ cleanup_control_flow (void)\n   basic_block bb;\n   block_stmt_iterator bsi;\n   bool retval = false;\n-  tree stmt, call;\n+  tree stmt;\n+\n+  /* Detect cases where a mid-block call is now known not to return.  */\n+  while (VEC_length (tree, modified_noreturn_calls))\n+    {\n+      stmt = VEC_pop (tree, modified_noreturn_calls);\n+      bb = bb_for_stmt (stmt);\n+      if (bb != NULL && last_stmt (bb) != stmt && noreturn_call_p (stmt))\n+\tsplit_block (bb, stmt);\n+    }\n \n   FOR_EACH_BB (bb)\n     {\n@@ -2076,10 +2093,7 @@ cleanup_control_flow (void)\n \n       /* Check for indirect calls that have been turned into\n \t noreturn calls.  */\n-      call = get_call_expr_in (stmt);\n-      if (call != 0\n-\t  && (call_expr_flags (call) & ECF_NORETURN) != 0\n-\t  && remove_fallthru_edge (bb->succs))\n+      if (noreturn_call_p (stmt) && remove_fallthru_edge (bb->succs))\n \t{\n \t  free_dominance_info (CDI_DOMINATORS);\n \t  retval = true;"}, {"sha": "70450537698cb921e225521a1288e4501891ab88", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=7ded35b4c2c8ebf53faa42987703616e2a813421", "patch": "@@ -131,13 +131,23 @@ get_filename (tree expr)\n     return \"???\";\n }\n \n+/* Return true if T is a noreturn call.  */\n+static inline bool\n+noreturn_call_p (tree t)\n+{\n+  tree call = get_call_expr_in (t);\n+  return call != 0 && (call_expr_flags (call) & ECF_NORETURN) != 0;\n+}\n+\n /* Mark statement T as modified.  */\n static inline void\n modify_stmt (tree t)\n {\n   stmt_ann_t ann = stmt_ann (t);\n   if (ann == NULL)\n     ann = create_stmt_ann (t);\n+  else if (noreturn_call_p (t))\n+    VEC_safe_push (tree, modified_noreturn_calls, t);\n   ann->modified = 1;\n }\n "}, {"sha": "b0d0c0fd5bacd2d4195df4b14737ecfa4718eb4b", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=7ded35b4c2c8ebf53faa42987703616e2a813421", "patch": "@@ -297,6 +297,8 @@ union tree_ann_d GTY((desc (\"ann_type ((tree_ann_t)&%h)\")))\n   struct stmt_ann_d GTY((tag (\"STMT_ANN\"))) stmt;\n };\n \n+extern GTY(()) VEC(tree) *modified_noreturn_calls;\n+\n typedef union tree_ann_d *tree_ann_t;\n typedef struct var_ann_d *var_ann_t;\n typedef struct stmt_ann_d *stmt_ann_t;\n@@ -310,6 +312,7 @@ static inline stmt_ann_t get_stmt_ann (tree);\n static inline enum tree_ann_type ann_type (tree_ann_t);\n static inline basic_block bb_for_stmt (tree);\n extern void set_bb_for_stmt (tree, basic_block);\n+static inline bool noreturn_call_p (tree);\n static inline void modify_stmt (tree);\n static inline void unmodify_stmt (tree);\n static inline bool stmt_modified_p (tree);"}, {"sha": "c34ddd8626448cff997c725d2a6f548924eb9af7", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded35b4c2c8ebf53faa42987703616e2a813421/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=7ded35b4c2c8ebf53faa42987703616e2a813421", "patch": "@@ -766,6 +766,7 @@ delete_tree_ssa (void)\n   call_clobbered_vars = NULL;\n   BITMAP_XFREE (addressable_vars);\n   addressable_vars = NULL;\n+  modified_noreturn_calls = NULL;\n }\n \n "}]}