{"sha": "494d6c28c53d0852bb6468b1f1ca189159775fcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk0ZDZjMjhjNTNkMDg1MmJiNjQ2OGIxZjFjYTE4OTE1OTc3NWZjYw==", "commit": {"author": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2019-11-04T17:19:23Z"}, "committer": {"name": "Andre Vieira", "email": "avieira@gcc.gnu.org", "date": "2019-11-04T17:19:23Z"}, "message": "[vect] Clean up orig_loop_vinfo from vect_analyze_loop\n\ngcc/ChangeLog:\n2019-11-04  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* tree-vect-loop.c (vect_analyze_loop): Remove orig_loop_vinfo\n\tparameter.\n\t* tree-vectorizer.h (vect_analyze_loop): Update declaration.\n\t* tree-vectorizer.c (try_vectorize_loop_1): Update calls to\n\tvect_analyze_loop.\n\nFrom-SVN: r277785", "tree": {"sha": "981ae91d37392337b96e19ab3c3d012a090a8e55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/981ae91d37392337b96e19ab3c3d012a090a8e55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/494d6c28c53d0852bb6468b1f1ca189159775fcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/494d6c28c53d0852bb6468b1f1ca189159775fcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/494d6c28c53d0852bb6468b1f1ca189159775fcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/494d6c28c53d0852bb6468b1f1ca189159775fcc/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "818b3293f4545d899148810f4f7d676b81e989dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/818b3293f4545d899148810f4f7d676b81e989dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/818b3293f4545d899148810f4f7d676b81e989dd"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "b94a323672875cc1ef4c30abe0dad6c17def6ff7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/494d6c28c53d0852bb6468b1f1ca189159775fcc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/494d6c28c53d0852bb6468b1f1ca189159775fcc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=494d6c28c53d0852bb6468b1f1ca189159775fcc", "patch": "@@ -1,3 +1,11 @@\n+2019-11-04  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* tree-vect-loop.c (vect_analyze_loop): Remove orig_loop_vinfo\n+\tparameter.\n+\t* tree-vectorizer.h (vect_analyze_loop): Update declaration.\n+\t* tree-vectorizer.c (try_vectorize_loop_1): Update calls to\n+\tvect_analyze_loop.\n+\n 2019-11-04  Joel Hutton  <Joel.Hutton@arm.com>\n \n \t* expr.c (store_constructor): Modify to handle single element vectors."}, {"sha": "4064e9c0ff7cc2dcaeb5512a4cd59b1adc342128", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/494d6c28c53d0852bb6468b1f1ca189159775fcc/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/494d6c28c53d0852bb6468b1f1ca189159775fcc/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=494d6c28c53d0852bb6468b1f1ca189159775fcc", "patch": "@@ -2350,11 +2350,9 @@ vect_analyze_loop_2 (loop_vec_info loop_vinfo, bool &fatal, unsigned *n_stmts)\n \n    Apply a set of analyses on LOOP, and create a loop_vec_info struct\n    for it.  The different analyses will record information in the\n-   loop_vec_info struct.  If ORIG_LOOP_VINFO is not NULL epilogue must\n-   be vectorized.  */\n+   loop_vec_info struct.  */\n opt_loop_vec_info\n-vect_analyze_loop (class loop *loop, loop_vec_info orig_loop_vinfo,\n-\t\t   vec_info_shared *shared)\n+vect_analyze_loop (class loop *loop, vec_info_shared *shared)\n {\n   auto_vector_sizes vector_sizes;\n \n@@ -2406,9 +2404,7 @@ vect_analyze_loop (class loop *loop, loop_vec_info orig_loop_vinfo,\n \n       bool fatal = false;\n \n-      if (orig_loop_vinfo)\n-\tLOOP_VINFO_ORIG_LOOP_INFO (loop_vinfo) = orig_loop_vinfo;\n-      else if (vect_epilogues && first_loop_vinfo)\n+      if (vect_epilogues && first_loop_vinfo)\n \tLOOP_VINFO_ORIG_LOOP_INFO (loop_vinfo) = first_loop_vinfo;\n \n       opt_result res = vect_analyze_loop_2 (loop_vinfo, fatal, &n_stmts);"}, {"sha": "0f00383e3b33098189b2f656a8bd02d0148dd888", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/494d6c28c53d0852bb6468b1f1ca189159775fcc/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/494d6c28c53d0852bb6468b1f1ca189159775fcc/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=494d6c28c53d0852bb6468b1f1ca189159775fcc", "patch": "@@ -865,8 +865,7 @@ set_uid_loop_bbs (loop_vec_info loop_vinfo, gimple *loop_vectorized_call)\n \n static unsigned\n try_vectorize_loop_1 (hash_table<simduid_to_vf> *&simduid_to_vf_htab,\n-\t\t      unsigned *num_vectorized_loops,\n-\t\t      loop_p loop, loop_vec_info orig_loop_vinfo,\n+\t\t      unsigned *num_vectorized_loops, loop_p loop,\n \t\t      gimple *loop_vectorized_call,\n \t\t      gimple *loop_dist_alias_call)\n {\n@@ -890,7 +889,7 @@ try_vectorize_loop_1 (hash_table<simduid_to_vf> *&simduid_to_vf_htab,\n   else\n     {\n       /* Try to analyze the loop, retaining an opt_problem if dump_enabled_p.  */\n-      loop_vinfo = vect_analyze_loop (loop, orig_loop_vinfo, &shared);\n+      loop_vinfo = vect_analyze_loop (loop, &shared);\n       loop->aux = loop_vinfo;\n     }\n \n@@ -1025,7 +1024,7 @@ try_vectorize_loop_1 (hash_table<simduid_to_vf> *&simduid_to_vf_htab,\n        */\n       unsigned dont_count = *num_vectorized_loops;\n       ret |= try_vectorize_loop_1 (simduid_to_vf_htab, &dont_count,\n-\t\t\t\t   new_loop, loop_vinfo, NULL, NULL);\n+\t\t\t\t   new_loop, NULL, NULL);\n     }\n \n   return ret;\n@@ -1042,8 +1041,7 @@ try_vectorize_loop (hash_table<simduid_to_vf> *&simduid_to_vf_htab,\n \t|| loop->force_vectorize))\n     return 0;\n \n-  return try_vectorize_loop_1 (simduid_to_vf_htab, num_vectorized_loops,\n-\t\t\t       loop, NULL,\n+  return try_vectorize_loop_1 (simduid_to_vf_htab, num_vectorized_loops, loop,\n \t\t\t       vect_loop_vectorized_call (loop),\n \t\t\t       vect_loop_dist_alias_call (loop));\n }"}, {"sha": "6b4e92e78afe0d98e0e00533d57b39f1ee6b435a", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/494d6c28c53d0852bb6468b1f1ca189159775fcc/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/494d6c28c53d0852bb6468b1f1ca189159775fcc/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=494d6c28c53d0852bb6468b1f1ca189159775fcc", "patch": "@@ -1721,9 +1721,7 @@ extern bool check_reduction_path (dump_user_location_t, loop_p, gphi *, tree,\n \t\t\t\t  enum tree_code);\n extern bool needs_fold_left_reduction_p (tree, tree_code);\n /* Drive for loop analysis stage.  */\n-extern opt_loop_vec_info vect_analyze_loop (class loop *,\n-\t\t\t\t\t    loop_vec_info,\n-\t\t\t\t\t    vec_info_shared *);\n+extern opt_loop_vec_info vect_analyze_loop (class loop *, vec_info_shared *);\n extern tree vect_build_loop_niters (loop_vec_info, bool * = NULL);\n extern void vect_gen_vector_loop_niters (loop_vec_info, tree, tree *,\n \t\t\t\t\t tree *, bool);"}]}