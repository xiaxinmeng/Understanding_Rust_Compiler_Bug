{"sha": "b15369e2538086c95250ac57c56a4c2590f922f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE1MzY5ZTI1MzgwODZjOTUyNTBhYzU3YzU2YTRjMjU5MGY5MjJmNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-04T12:59:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-04T14:01:55Z"}, "message": "add vect_get_slp_vect_def\n\nThis adds vect_get_slp_vect_def to get at a SLP nodes vectorized def,\nabstracting away the details.  It also fixes one stray failure to\nuse SLP_TREE_REPRESENTATIVE.\n\n2020-05-04  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vectorizer.h (vect_get_slp_vect_def): Declare.\n\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Use it.\n\t* tree-vect-stmts.c (vect_transform_stmt): Likewise.\n\t(vect_is_simple_use): Use SLP_TREE_REPRESENTATIVE.\n\t* tree-vect-slp.c (vect_get_slp_vect_defs): Fold into single\n\tuse ...\n\t(vect_get_slp_defs): ... here.\n\t(vect_get_slp_vect_def): New function.", "tree": {"sha": "1421b8329d03fde053f3abd654662d52c1de02c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1421b8329d03fde053f3abd654662d52c1de02c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b15369e2538086c95250ac57c56a4c2590f922f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15369e2538086c95250ac57c56a4c2590f922f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b15369e2538086c95250ac57c56a4c2590f922f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15369e2538086c95250ac57c56a4c2590f922f4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0dae768c6f78eba6997930065b55184202d87ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0dae768c6f78eba6997930065b55184202d87ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0dae768c6f78eba6997930065b55184202d87ba"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "f2c52ae1909a6d4e1198c640265ddce727a61061", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15369e2538086c95250ac57c56a4c2590f922f4/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15369e2538086c95250ac57c56a4c2590f922f4/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=b15369e2538086c95250ac57c56a4c2590f922f4", "patch": "@@ -4719,7 +4719,7 @@ vect_create_epilog_for_reduction (loop_vec_info loop_vinfo,\n   for (unsigned i = 0; i < vec_num; i++)\n     {\n       if (slp_node)\n-\tdef = gimple_get_lhs (SLP_TREE_VEC_STMTS (slp_node)[i]->stmt);\n+\tdef = vect_get_slp_vect_def (slp_node, i);\n       else\n \tdef = gimple_get_lhs (STMT_VINFO_VEC_STMT (rdef_info)->stmt);\n       for (j = 0; j < ncopies; j++)"}, {"sha": "1d26c312aa86ba4c2c9fbb1ad7fa4ff839cfefdc", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15369e2538086c95250ac57c56a4c2590f922f4/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15369e2538086c95250ac57c56a4c2590f922f4/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=b15369e2538086c95250ac57c56a4c2590f922f4", "patch": "@@ -3660,23 +3660,17 @@ vect_create_constant_vectors (vec_info *vinfo, slp_tree op_node)\n       SLP_TREE_VEC_DEFS (op_node).quick_push (vop);\n }\n \n+/* Get the Ith vectorized definition from SLP_NODE.  */\n \n-/* Get vectorized definitions from SLP_NODE that contains corresponding\n-   vectorized def-stmts.  */\n-\n-static void\n-vect_get_slp_vect_defs (slp_tree slp_node, vec<tree> *vec_oprnds)\n+tree\n+vect_get_slp_vect_def (slp_tree slp_node, unsigned i)\n {\n-  stmt_vec_info vec_def_stmt_info;\n-  unsigned int i;\n-\n-  gcc_assert (SLP_TREE_VEC_STMTS (slp_node).exists ());\n-\n-  FOR_EACH_VEC_ELT (SLP_TREE_VEC_STMTS (slp_node), i, vec_def_stmt_info)\n-    vec_oprnds->quick_push (gimple_get_lhs (vec_def_stmt_info->stmt));\n+  if (SLP_TREE_VEC_STMTS (slp_node).exists ())\n+    return gimple_get_lhs (SLP_TREE_VEC_STMTS (slp_node)[i]->stmt);\n+  else\n+    return SLP_TREE_VEC_DEFS (slp_node)[i];\n }\n \n-\n /* Get N vectorized definitions for SLP_NODE.  */\n \n void\n@@ -3696,7 +3690,12 @@ vect_get_slp_defs (vec_info *,\n \t node or we need to create them (for invariants and constants).  */\n       vec_defs.create (SLP_TREE_NUMBER_OF_VEC_STMTS (child));\n       if (SLP_TREE_DEF_TYPE (child) == vect_internal_def)\n-\tvect_get_slp_vect_defs (child, &vec_defs);\n+\t{\n+\t  unsigned j;\n+\t  stmt_vec_info vec_def_stmt_info;\n+\t  FOR_EACH_VEC_ELT (SLP_TREE_VEC_STMTS (child), j, vec_def_stmt_info)\n+\t    vec_defs.quick_push (gimple_get_lhs (vec_def_stmt_info->stmt));\n+\t}\n       else\n \tvec_defs.splice (SLP_TREE_VEC_DEFS (child));\n "}, {"sha": "c0be6ef502c5f2c7220a648f2409eb8b16f7eddf", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15369e2538086c95250ac57c56a4c2590f922f4/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15369e2538086c95250ac57c56a4c2590f922f4/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=b15369e2538086c95250ac57c56a4c2590f922f4", "patch": "@@ -11385,7 +11385,7 @@ vect_transform_stmt (vec_info *vinfo,\n \t\t      == SLP_TREE_VEC_STMTS (slp_node).length ());\n \t  for (unsigned i = 0; i < SLP_TREE_VEC_STMTS (phi_node).length (); ++i)\n \t    add_phi_arg (as_a <gphi *> (SLP_TREE_VEC_STMTS (phi_node)[i]->stmt),\n-\t\t\t gimple_get_lhs (SLP_TREE_VEC_STMTS (slp_node)[i]->stmt),\n+\t\t\t vect_get_slp_vect_def (slp_node, i),\n \t\t\t e, gimple_phi_arg_location (phi, e->dest_idx));\n \t}\n     }\n@@ -11850,7 +11850,7 @@ vect_is_simple_use (vec_info *vinfo, stmt_vec_info stmt, slp_tree slp_node,\n       slp_tree child = SLP_TREE_CHILDREN (slp_node)[operand];\n       *slp_def = child;\n       if (SLP_TREE_DEF_TYPE (child) == vect_internal_def)\n-\t*op = gimple_get_lhs (SLP_TREE_SCALAR_STMTS (child)[0]->stmt);\n+\t*op = gimple_get_lhs (SLP_TREE_REPRESENTATIVE (child)->stmt);\n       else\n \t{\n \t  if (def_stmt_info_out)"}, {"sha": "9bb82a546f6b59867d85fe14908ce58f07a2d79f", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15369e2538086c95250ac57c56a4c2590f922f4/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15369e2538086c95250ac57c56a4c2590f922f4/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=b15369e2538086c95250ac57c56a4c2590f922f4", "patch": "@@ -1753,6 +1753,7 @@ extern void vect_get_vec_defs_for_stmt_copy (vec_info *,\n extern tree vect_init_vector (vec_info *, stmt_vec_info, tree, tree,\n                               gimple_stmt_iterator *);\n extern tree vect_get_vec_def_for_stmt_copy (vec_info *, tree);\n+extern tree vect_get_slp_vect_def (slp_tree, unsigned);\n extern bool vect_transform_stmt (vec_info *, stmt_vec_info,\n \t\t\t\t gimple_stmt_iterator *,\n \t\t\t\t slp_tree, slp_instance);"}]}