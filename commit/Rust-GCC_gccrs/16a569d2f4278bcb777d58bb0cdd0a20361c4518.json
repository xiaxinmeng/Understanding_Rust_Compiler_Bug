{"sha": "16a569d2f4278bcb777d58bb0cdd0a20361c4518", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZhNTY5ZDJmNDI3OGJjYjc3N2Q1OGJiMGNkZDBhMjAzNjFjNDUxOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T13:02:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T13:02:24Z"}, "message": "[multiple changes]\n\n2014-07-31  Javier Miranda  <miranda@adacore.com>\n\n\t* debug.adb: Complete documentation of -gnatd.z.\n\n2014-07-31  Bob Duff  <duff@adacore.com>\n\n\t* gnat_ugn.texi: Minor doc fixes.\n\n2014-07-31  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Array_Aggregate): Fix posting of missing\n\tindex value.\n\n2014-07-31  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-unstyp.ads (Packed_Byte): Make this type universal aliasing.\n\t(Packed_Bytes1): Make component aliased.\n\n2014-07-31  Robert Dewar  <dewar@adacore.com>\n\n\t* s-unstyp.ads, s-fileio.adb: Minor reformatting.\n\nFrom-SVN: r213360", "tree": {"sha": "5ea7c470e0c11634e4120ab5117a63ed9926b296", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ea7c470e0c11634e4120ab5117a63ed9926b296"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16a569d2f4278bcb777d58bb0cdd0a20361c4518", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a569d2f4278bcb777d58bb0cdd0a20361c4518", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16a569d2f4278bcb777d58bb0cdd0a20361c4518", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a569d2f4278bcb777d58bb0cdd0a20361c4518/comments", "author": null, "committer": null, "parents": [{"sha": "c5670cb40aaf421f25d244c122c54dca127e4ccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5670cb40aaf421f25d244c122c54dca127e4ccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5670cb40aaf421f25d244c122c54dca127e4ccb"}], "stats": {"total": 69, "additions": 57, "deletions": 12}, "files": [{"sha": "f2a97c0206d744fe665ffa0949119ef398aa3e32", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a569d2f4278bcb777d58bb0cdd0a20361c4518/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a569d2f4278bcb777d58bb0cdd0a20361c4518/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=16a569d2f4278bcb777d58bb0cdd0a20361c4518", "patch": "@@ -1,3 +1,25 @@\n+2014-07-31  Javier Miranda  <miranda@adacore.com>\n+\n+\t* debug.adb: Complete documentation of -gnatd.z.\n+\n+2014-07-31  Bob Duff  <duff@adacore.com>\n+\n+\t* gnat_ugn.texi: Minor doc fixes.\n+\n+2014-07-31  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Array_Aggregate): Fix posting of missing\n+\tindex value.\n+\n+2014-07-31  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-unstyp.ads (Packed_Byte): Make this type universal aliasing.\n+\t(Packed_Bytes1): Make component aliased.\n+\n+2014-07-31  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-unstyp.ads, s-fileio.adb: Minor reformatting.\n+\n 2014-07-31  Robert Dewar  <dewar@adacore.com>\n \n \t* inline.adb, gnat1drv.adb, exp_ch6.adb, s-fileio.adb: Minor"}, {"sha": "562a49cb85a0ffb8f1453f9f1b2a1d1544307df0", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a569d2f4278bcb777d58bb0cdd0a20361c4518/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a569d2f4278bcb777d58bb0cdd0a20361c4518/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=16a569d2f4278bcb777d58bb0cdd0a20361c4518", "patch": "@@ -594,7 +594,12 @@ package body Debug is\n    --       fully compiled and analyzed, they just get eliminated from the\n    --       code generation step.\n \n-   --  d.z  Need documentation of this flag ???\n+   --  d.z  Enable back end inlining on targets that have the GCC backend (ie.\n+   --       all targets except AAMP, .NET and JVM). This switch has no effect\n+   --       under GNATprove to avoid confusing the formal verification output,\n+   --       and it has no effect if the sources are compiled with frontend\n+   --       inlining (ie. -gnatN). This switch is currently used to evaluate\n+   --       the impact of back end inlining.\n \n    --  d.A  There seems to be a problem with ASIS if we activate the circuit\n    --       for reading and writing the aspect specification hash table, so"}, {"sha": "8e7b4fb65a8ff5ad87ecafecc3a644675e552d39", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a569d2f4278bcb777d58bb0cdd0a20361c4518/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a569d2f4278bcb777d58bb0cdd0a20361c4518/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=16a569d2f4278bcb777d58bb0cdd0a20361c4518", "patch": "@@ -14869,7 +14869,10 @@ tool argument.\n Incremental processing on a per-file basis. Source files are only\n processed if they have been modified, or if files they depend on have\n been modified. This is similar to the way gnatmake/gprbuild only\n-compiles files that need to be recompiled.\n+compiles files that need to be recompiled. Note that in this mode\n+@command{gnatpp} is acting in place of the compiler, so if a project\n+file is used, the switches set for the compiler should not be set\n+to switches recognized by @command{gcc}.\n \n @item --pp-off=@var{xxx}\n @cindex @option{--pp-off} @command{gnatpp}\n@@ -15319,7 +15322,10 @@ options:\n --incremental -- incremental processing on a per-file basis. Source files are\n       only processed if they have been modified, or if files they depend\n       on have been modified. This is similar to the way gnatmake/gprbuild\n-      only compiles files that need to be recompiled.\n+      only compiles files that need to be recompiled. Note that in this mode\n+      @command{gnat2xml} is acting in place of the compiler, so if a project\n+      file is used, the switches set for the compiler should not be set\n+      to switches recognized by @command{gcc}.\n \n -j@var{n} -- In @option{--incremental} mode, use @var{n} @command{gnat2xml}\n       processes to perform XML generation in parallel. If @var{n} is 0, then"}, {"sha": "4c21b857a5e0a7b096c31b49fccd242525fe9d81", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a569d2f4278bcb777d58bb0cdd0a20361c4518/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a569d2f4278bcb777d58bb0cdd0a20361c4518/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=16a569d2f4278bcb777d58bb0cdd0a20361c4518", "patch": "@@ -991,17 +991,15 @@ package body System.File_IO is\n          --  Note that we cannot use an aggregate here as File_Ptr is a\n          --  class-wide access to a limited type (Root_Stream_Type).\n \n-         File_Ptr.Is_Regular_File   :=\n-           (is_regular_file (fileno (Stream)) /= 0);\n+         File_Ptr.Is_Regular_File   := is_regular_file (fileno (Stream)) /= 0;\n          File_Ptr.Is_System_File    := False;\n          File_Ptr.Text_Encoding     := Text_Encoding;\n          File_Ptr.Shared_Status     := Shared;\n          File_Ptr.Access_Method     := Amethod;\n          File_Ptr.Stream            := Stream;\n-         File_Ptr.Form              :=\n-           new String'(Formstr);\n-         File_Ptr.Name              :=\n-           new String'(Fullname (1 .. Full_Name_Len));\n+         File_Ptr.Form              := new String'(Formstr);\n+         File_Ptr.Name              := new String'(Fullname\n+                                                     (1 .. Full_Name_Len));\n          File_Ptr.Mode              := Mode;\n          File_Ptr.Is_Temporary_File := Tempfile;\n          File_Ptr.Encoding          := Encoding;"}, {"sha": "9eefc15b59c679ddb8072efdd23fbb0ed8a21108", "filename": "gcc/ada/s-unstyp.ads", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a569d2f4278bcb777d58bb0cdd0a20361c4518/gcc%2Fada%2Fs-unstyp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a569d2f4278bcb777d58bb0cdd0a20361c4518/gcc%2Fada%2Fs-unstyp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-unstyp.ads?ref=16a569d2f4278bcb777d58bb0cdd0a20361c4518", "patch": "@@ -50,10 +50,13 @@ package System.Unsigned_Types is\n    --  Used in the implementation of Is_Negative intrinsic (see Exp_Intr)\n \n    type Packed_Byte is mod 2 ** 8;\n+   pragma Universal_Aliasing (Packed_Byte);\n    for Packed_Byte'Size use 8;\n-   --  Component type for Packed_Bytes array\n+   --  Component type for Packed_Bytes1, Packed_Bytes2 and Packed_Byte4 arrays.\n+   --  As this type is used by the compiler to implement operations on user\n+   --  packed array, it needs to be able to alias any type.\n \n-   type Packed_Bytes1 is array (Natural range <>) of Packed_Byte;\n+   type Packed_Bytes1 is array (Natural range <>) of aliased Packed_Byte;\n    for Packed_Bytes1'Alignment use 1;\n    for Packed_Bytes1'Component_Size use Packed_Byte'Size;\n    --  This is the type used to implement packed arrays where no alignment"}, {"sha": "bf9b24f24048322f947f67d2e18777075c8c990e", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a569d2f4278bcb777d58bb0cdd0a20361c4518/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a569d2f4278bcb777d58bb0cdd0a20361c4518/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=16a569d2f4278bcb777d58bb0cdd0a20361c4518", "patch": "@@ -2229,7 +2229,18 @@ package body Sem_Aggr is\n                            Hi_Val := Table (J - 1).Highest;\n \n                            if Lo_Val > Hi_Val + 1 then\n-                              Choice := Table (J).Lo;\n+\n+                              --  Set location for flag, if the choice is an\n+                              --  explicit Range, then point to the low bound,\n+                              --  otherwise just point to  the choice.\n+\n+                              Choice := Table (J).Choice;\n+\n+                              if Nkind (Choice) = N_Range then\n+                                 Choice := Low_Bound (Choice);\n+                              end if;\n+\n+                              --  Now post appropriate message\n \n                               if Hi_Val + 1 = Lo_Val - 1 then\n                                  Error_Msg_N"}]}