{"sha": "6e44d26e24a11cfd8bfc929f2fbc2c73765c99af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU0NGQyNmUyNGExMWNmZDhiZmM5MjlmMmZiYzJjNzM3NjVjOTlhZg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-06-30T18:38:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-06-30T18:38:37Z"}, "message": "re PR bootstrap/44726 (Yet another broken bootstrap)\n\n2010-06-30  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR bootstrrap/44726\n\t* graphite-sese-to-poly.c (build_poly_dr): Avoid uninitialized\n\tuse.\n\t(build_alias_set_optimal_p): Likewise.\n\t(build_base_obj_set_for_drs): Likewise.\n\nFrom-SVN: r161631", "tree": {"sha": "8901352c8b3ebd42b7e352fe65c6ce36299f35f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8901352c8b3ebd42b7e352fe65c6ce36299f35f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e44d26e24a11cfd8bfc929f2fbc2c73765c99af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e44d26e24a11cfd8bfc929f2fbc2c73765c99af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e44d26e24a11cfd8bfc929f2fbc2c73765c99af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e44d26e24a11cfd8bfc929f2fbc2c73765c99af/comments", "author": null, "committer": null, "parents": [{"sha": "4d00d5dd7dbc30d2ca7012245b8f3502f2889dac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d00d5dd7dbc30d2ca7012245b8f3502f2889dac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d00d5dd7dbc30d2ca7012245b8f3502f2889dac"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "eb7b5c6a1c30aae67f6bb9ad3c06cd968042acf5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e44d26e24a11cfd8bfc929f2fbc2c73765c99af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e44d26e24a11cfd8bfc929f2fbc2c73765c99af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e44d26e24a11cfd8bfc929f2fbc2c73765c99af", "patch": "@@ -1,3 +1,11 @@\n+2010-06-30  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR bootstrrap/44726\n+\t* graphite-sese-to-poly.c (build_poly_dr): Avoid uninitialized\n+\tuse.\n+\t(build_alias_set_optimal_p): Likewise.\n+\t(build_base_obj_set_for_drs): Likewise.\n+\n 2010-06-30  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* target.def: Remove comment about licensing problems of function"}, {"sha": "7f83ffcf5dfef037a9ec8d108841f9a3d070bb1b", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e44d26e24a11cfd8bfc929f2fbc2c73765c99af/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e44d26e24a11cfd8bfc929f2fbc2c73765c99af/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=6e44d26e24a11cfd8bfc929f2fbc2c73765c99af", "patch": "@@ -1778,10 +1778,11 @@ build_poly_dr (data_reference_p dr, poly_bb_p pbb)\n \t\t\t\t\t\t\t    accesses);\n   ppl_delete_Polyhedron (accesses);\n \n-  if (dr->aux)\n-    dr_base_object_set = ((base_alias_pair *)(dr->aux))->base_obj_set;\n+  gcc_assert (dr->aux);\n+  dr_base_object_set = ((base_alias_pair *)(dr->aux))->base_obj_set;\n \n-  new_poly_dr (pbb, dr_base_object_set, accesses_ps, DR_IS_READ (dr) ? PDR_READ : PDR_WRITE,\n+  new_poly_dr (pbb, dr_base_object_set, accesses_ps,\n+\t       DR_IS_READ (dr) ? PDR_READ : PDR_WRITE,\n \t       dr, DR_NUM_DIMENSIONS (dr));\n }\n \n@@ -1923,8 +1924,8 @@ build_alias_set_optimal_p (VEC (data_reference_p, heap) *drs)\n       data_reference_p dr = VEC_index (data_reference_p, drs, i);\n       base_alias_pair *bap;\n \n-      if (dr->aux)\n-\tbap = (base_alias_pair *)(dr->aux);\n+      gcc_assert (dr->aux);\n+      bap = (base_alias_pair *)(dr->aux);\n \n       bap->alias_set = XNEW (int);\n       *(bap->alias_set) = g->vertices[i].component + 1;\n@@ -2002,8 +2003,8 @@ build_base_obj_set_for_drs (VEC (data_reference_p, heap) *drs)\n       data_reference_p dr = VEC_index (data_reference_p, drs, i);\n       base_alias_pair *bap;\n \n-      if (dr->aux)\n-\tbap = (base_alias_pair *)(dr->aux);\n+      gcc_assert (dr->aux);\n+      bap = (base_alias_pair *)(dr->aux);\n \n       bap->base_obj_set = g->vertices[i].component + 1;\n     }"}]}