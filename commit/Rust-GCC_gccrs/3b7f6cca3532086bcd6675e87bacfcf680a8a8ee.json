{"sha": "3b7f6cca3532086bcd6675e87bacfcf680a8a8ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I3ZjZjY2EzNTMyMDg2YmNkNjY3NWU4N2JhY2ZjZjY4MGE4YThlZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-04-18T18:08:17Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-04-18T18:08:17Z"}, "message": "Do not generate mem->mem SF moves if -msoft-float\n\nFrom-SVN: r9408", "tree": {"sha": "f4207e14e405f3f841cb96680d80cb7947d1599b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4207e14e405f3f841cb96680d80cb7947d1599b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b7f6cca3532086bcd6675e87bacfcf680a8a8ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b7f6cca3532086bcd6675e87bacfcf680a8a8ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b7f6cca3532086bcd6675e87bacfcf680a8a8ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b7f6cca3532086bcd6675e87bacfcf680a8a8ee/comments", "author": null, "committer": null, "parents": [{"sha": "eb0430f02e045c3539a9d4120bc1bbde8925e7ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb0430f02e045c3539a9d4120bc1bbde8925e7ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb0430f02e045c3539a9d4120bc1bbde8925e7ad"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "cef070dc331baca09866ae6063ab086d420935ee", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b7f6cca3532086bcd6675e87bacfcf680a8a8ee/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b7f6cca3532086bcd6675e87bacfcf680a8a8ee/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=3b7f6cca3532086bcd6675e87bacfcf680a8a8ee", "patch": "@@ -3923,7 +3923,10 @@\n       && REGNO (SUBREG_REG (operands[1])) < FIRST_PSEUDO_REGISTER)\n     operands[1] = alter_subreg (operands[1]);\n \n-  if (TARGET_HARD_FLOAT)\n+  if (TARGET_SOFT_FLOAT && GET_CODE (operands[0]) == MEM)\n+    operands[1] = force_reg (SFmode, operands[1]);\n+\n+  else if (TARGET_HARD_FLOAT)\n     {\n       if (GET_CODE (operands[1]) == REG && REGNO (operands[1]) < 32)\n \t{\n@@ -3956,7 +3959,7 @@\n \t  /* If operands[1] is a register, it may have double-precision data\n \t     in it, so truncate it to single precision.  We need not do\n \t     this for POWERPC.  */\n-\t  if (! TARGET_POWERPC && TARGET_HARD_FLOAT && GET_CODE (operands[1]) == REG)\n+\t  if (! TARGET_POWERPC && GET_CODE (operands[1]) == REG)\n \t    {\n \t      rtx newreg = reload_in_progress ? operands[1] : gen_reg_rtx (SFmode);\n \t      emit_insn (gen_truncdfsf2 (newreg,"}]}