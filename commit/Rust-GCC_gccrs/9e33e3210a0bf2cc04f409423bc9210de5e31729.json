{"sha": "9e33e3210a0bf2cc04f409423bc9210de5e31729", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUzM2UzMjEwYTBiZjJjYzA0ZjQwOTQyM2JjOTIxMGRlNWUzMTcyOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-06T21:57:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-06T21:57:49Z"}, "message": "re PR c++/48909 ([C++0x] ICE in cxx_eval_conditional_expression, at cp/semantics.c:6213)\n\n\tPR c++/48909\n\t* semantics.c (cxx_eval_conditional_expression): Check\n\tinteger_zerop/onep instead.\n\nFrom-SVN: r173511", "tree": {"sha": "3146f151678ec1c497060f154a6f58336c8958ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3146f151678ec1c497060f154a6f58336c8958ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e33e3210a0bf2cc04f409423bc9210de5e31729", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e33e3210a0bf2cc04f409423bc9210de5e31729", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e33e3210a0bf2cc04f409423bc9210de5e31729", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e33e3210a0bf2cc04f409423bc9210de5e31729/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c80e3e0267b3b415090d49a73747486f3313138b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c80e3e0267b3b415090d49a73747486f3313138b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c80e3e0267b3b415090d49a73747486f3313138b"}], "stats": {"total": 42, "additions": 33, "deletions": 9}, "files": [{"sha": "af5e6d05544462133d16bd074d946d10a36d087f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e33e3210a0bf2cc04f409423bc9210de5e31729/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e33e3210a0bf2cc04f409423bc9210de5e31729/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9e33e3210a0bf2cc04f409423bc9210de5e31729", "patch": "@@ -1,5 +1,10 @@\n 2011-05-06  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48909\n+\t* semantics.c (cxx_eval_conditional_expression): Check\n+\tinteger_zerop instead.\n+\t(potential_constant_expression_1): Likewise.\n+\n \tPR c++/48911\n \t* semantics.c (cxx_eval_array_reference): Handle implicit\n \tinitializers."}, {"sha": "d33f9fe16a9ffcfd3dfe6cc017b1ab8f7aead160", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e33e3210a0bf2cc04f409423bc9210de5e31729/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e33e3210a0bf2cc04f409423bc9210de5e31729/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=9e33e3210a0bf2cc04f409423bc9210de5e31729", "patch": "@@ -6298,13 +6298,12 @@ cxx_eval_conditional_expression (const constexpr_call *call, tree t,\n \t\t\t\t\t   allow_non_constant, addr,\n \t\t\t\t\t   non_constant_p);\n   VERIFY_CONSTANT (val);\n-  if (val == boolean_true_node)\n-    return cxx_eval_constant_expression (call, TREE_OPERAND (t, 1),\n+  /* Don't VERIFY_CONSTANT the other operands.  */\n+  if (integer_zerop (val))\n+    return cxx_eval_constant_expression (call, TREE_OPERAND (t, 2),\n \t\t\t\t\t allow_non_constant, addr,\n \t\t\t\t\t non_constant_p);\n-  gcc_assert (val == boolean_false_node);\n-  /* Don't VERIFY_CONSTANT here.  */\n-  return cxx_eval_constant_expression (call, TREE_OPERAND (t, 2),\n+  return cxx_eval_constant_expression (call, TREE_OPERAND (t, 1),\n \t\t\t\t       allow_non_constant, addr,\n \t\t\t\t       non_constant_p);\n }\n@@ -7871,12 +7870,12 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n       tmp = TREE_OPERAND (t, 0);\n       if (!potential_constant_expression_1 (tmp, rval, flags))\n \treturn false;\n-      else if (tmp == boolean_true_node)\n-\treturn potential_constant_expression_1 (TREE_OPERAND (t, 1),\n-\t\t\t\t\t\twant_rval, flags);\n-      else if (tmp == boolean_false_node)\n+      else if (integer_zerop (tmp))\n \treturn potential_constant_expression_1 (TREE_OPERAND (t, 2),\n \t\t\t\t\t\twant_rval, flags);\n+      else if (TREE_CODE (tmp) == INTEGER_CST)\n+\treturn potential_constant_expression_1 (TREE_OPERAND (t, 1),\n+\t\t\t\t\t\twant_rval, flags);\n       for (i = 1; i < 3; ++i)\n \tif (potential_constant_expression_1 (TREE_OPERAND (t, i),\n \t\t\t\t\t     want_rval, tf_none))"}, {"sha": "ea142c2e956b0cf25448e25cd045970d0b623ed7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e33e3210a0bf2cc04f409423bc9210de5e31729/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e33e3210a0bf2cc04f409423bc9210de5e31729/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e33e3210a0bf2cc04f409423bc9210de5e31729", "patch": "@@ -1,5 +1,7 @@\n 2011-05-06  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/constexpr-condition2.C: New.\n+\n \t* g++.dg/cpp0x/constexpr-missing.C: New.\n \n 2011-05-06  Tobias Burnus  <burnus@net-b.de>"}, {"sha": "243409669bf06ae34d7cc3eeac7825ae0d0aa56f", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-condition2.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e33e3210a0bf2cc04f409423bc9210de5e31729/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-condition2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e33e3210a0bf2cc04f409423bc9210de5e31729/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-condition2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-condition2.C?ref=9e33e3210a0bf2cc04f409423bc9210de5e31729", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/48909\n+// { dg-options -std=c++0x }\n+\n+#define SA(X) static_assert((X),#X)\n+\n+constexpr int const * is_sorted_until(int const * first, int const * last)\n+{\n+ return first == last || first + 1 == last ? last\n+  : (*(first + 1) < *first) != false ? first + 1\n+  : is_sorted_until(first + 1, last);\n+}\n+\n+int main()\n+{\n+ static constexpr int array[2] = {0, 1};\n+ constexpr int const * last = is_sorted_until(array, array + 2);\n+ SA(last==array+2);\n+}"}]}