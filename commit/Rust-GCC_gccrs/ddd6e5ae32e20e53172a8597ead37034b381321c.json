{"sha": "ddd6e5ae32e20e53172a8597ead37034b381321c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRkNmU1YWUzMmUyMGU1MzE3MmE4NTk3ZWFkMzcwMzRiMzgxMzIxYw==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2006-10-31T18:04:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T18:04:45Z"}, "message": "prj-nmsc.adb (Check_Ada_Name): For children of package A...\n\n2006-10-31  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Check_Ada_Name): For children of package A, G, I and S\n\ton VMS, change \"__\" to '.' before checking the name.\n\t(Record_Ada_Source): Always add the source file name in the list of\n\tof sources, even if it is not the first time, as it is for another\n\tsource index.\n\t(Get_Unit): Replace both '_' (after 'a', 'g', 'i' or 's') with a single\n\tdot, instead of replacing only the first '_'.\n\n\t* prj-part.adb (Parse): Convert project file path to canonical form\n\n\t* prj-proc.adb (Recursive_Process): Make sure that, when a project is\n\textended, the project id of the project extending it is recorded in its\n\tdata, even when it has already been processed as an imported project.\n\nFrom-SVN: r118293", "tree": {"sha": "2882a1af068599e0ac01f5d2c814eb3e82a32072", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2882a1af068599e0ac01f5d2c814eb3e82a32072"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddd6e5ae32e20e53172a8597ead37034b381321c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd6e5ae32e20e53172a8597ead37034b381321c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd6e5ae32e20e53172a8597ead37034b381321c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd6e5ae32e20e53172a8597ead37034b381321c/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3356ee073b0b29d6468464d1b4d3b26415f8cbac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3356ee073b0b29d6468464d1b4d3b26415f8cbac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3356ee073b0b29d6468464d1b4d3b26415f8cbac"}], "stats": {"total": 100, "additions": 72, "deletions": 28}, "files": [{"sha": "88b00f4afb07ccfe08e344912d26df58bbe282dc", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 48, "deletions": 24, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd6e5ae32e20e53172a8597ead37034b381321c/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd6e5ae32e20e53172a8597ead37034b381321c/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=ddd6e5ae32e20e53172a8597ead37034b381321c", "patch": "@@ -505,6 +505,20 @@ package body Prj.Nmsc is\n \n       Name_Len := The_Name'Length;\n       Name_Buffer (1 .. Name_Len) := The_Name;\n+\n+      --  Special cases of children of packages A, G, I and S on VMS\n+\n+      if OpenVMS_On_Target and then\n+        Name_Len > 3 and then\n+        Name_Buffer (2 .. 3) = \"__\" and then\n+        ((Name_Buffer (1) = 'a') or else (Name_Buffer (1) = 'g') or else\n+         (Name_Buffer (1) = 'i') or else (Name_Buffer (1) = 's'))\n+      then\n+         Name_Buffer (2) := '.';\n+         Name_Buffer (3 .. Name_Len - 1) := Name_Buffer (4 .. Name_Len);\n+         Name_Len := Name_Len - 1;\n+      end if;\n+\n       Real_Name := Name_Find;\n \n       --  Check first that the given name is not an Ada reserved word\n@@ -3878,7 +3892,8 @@ package body Prj.Nmsc is\n          --  Check if the casing is right\n \n          declare\n-            Src : String := File (First .. Last);\n+            Src      : String := File (First .. Last);\n+            Src_Last : Positive := Last;\n \n          begin\n             case Naming.Casing is\n@@ -3921,38 +3936,49 @@ package body Prj.Nmsc is\n                   S3 : constant Character := Src (Src'First + 2);\n \n                begin\n-                  if S1 = 'a' or else S1 = 'g'\n-                    or else S1 = 'i' or else S1 = 's'\n+                  if S1 = 'a' or else\n+                     S1 = 'g' or else\n+                     S1 = 'i' or else\n+                     S1 = 's'\n                   then\n-                     --  Children or separates of packages A, G, I or S\n+                     --  Children or separates of packages A, G, I or S. On\n+                     --  VMS these names are x__ ... and on other systems the\n+                     --  names are x~... (where x is a, g, i, or s).\n \n                      if (OpenVMS_On_Target\n-                         and then S2 = '_'\n-                         and then S3 = '_')\n-                        or else\n-                         S2 = '~'\n+                          and then S2 = '_'\n+                          and then S3 = '_')\n+                       or else\n+                         (not OpenVMS_On_Target\n+                           and then S2 = '~')\n                      then\n                         Src (Src'First + 1) := '.';\n \n+                        if OpenVMS_On_Target then\n+                           Src_Last := Src_Last - 1;\n+                           Src (Src'First + 2 .. Src_Last) :=\n+                             Src (Src'First + 3 .. Src_Last + 1);\n+                        end if;\n+\n                      --  If it is potentially a run time source, disable\n                      --  filling of the mapping file to avoid warnings.\n \n                      elsif S2 = '.' then\n                         Set_Mapping_File_Initial_State_To_Empty;\n                      end if;\n-\n                   end if;\n                end;\n             end if;\n \n             if Current_Verbosity = High then\n                Write_Str  (\"      \");\n-               Write_Line (Src);\n+               Write_Line (Src (Src'First .. Src_Last));\n             end if;\n \n             --  Now, we check if this name is a valid unit name\n \n-            Check_Ada_Name (Name => Src, Unit => Unit_Name);\n+            Check_Ada_Name\n+              (Name => Src (Src'First .. Src_Last), Unit => Unit_Name);\n          end;\n \n       end;\n@@ -4958,19 +4984,17 @@ package body Prj.Nmsc is\n \n             --  Put the file name in the list of sources of the project\n \n-            if not File_Name_Recorded then\n-               String_Element_Table.Increment_Last\n-                 (In_Tree.String_Elements);\n-               In_Tree.String_Elements.Table\n-                 (String_Element_Table.Last\n-                   (In_Tree.String_Elements)) :=\n-                 (Value         => Canonical_File_Name,\n-                  Display_Value => File_Name,\n-                  Location      => No_Location,\n-                  Flag          => False,\n-                  Next          => Nil_String,\n-                  Index         => Unit_Index);\n-            end if;\n+            String_Element_Table.Increment_Last\n+              (In_Tree.String_Elements);\n+            In_Tree.String_Elements.Table\n+              (String_Element_Table.Last\n+                 (In_Tree.String_Elements)) :=\n+              (Value         => Canonical_File_Name,\n+               Display_Value => File_Name,\n+               Location      => No_Location,\n+               Flag          => False,\n+               Next          => Nil_String,\n+               Index         => Unit_Index);\n \n             if Current_Source = Nil_String then\n                Data.Sources := String_Element_Table.Last"}, {"sha": "938d394b42aeca836a882c12d487989b46f09eda", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd6e5ae32e20e53172a8597ead37034b381321c/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd6e5ae32e20e53172a8597ead37034b381321c/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=ddd6e5ae32e20e53172a8597ead37034b381321c", "patch": "@@ -78,7 +78,7 @@ package body Prj.Part is\n       Table_Index_Type     => With_Id,\n       Table_Low_Bound      => 1,\n       Table_Initial        => 10,\n-      Table_Increment      => 50,\n+      Table_Increment      => 100,\n       Table_Name           => \"Prj.Part.Withs\");\n    --  Table used to store temporarily paths and locations of imported\n    --  projects. These imported projects will be effectively parsed after the\n@@ -95,7 +95,7 @@ package body Prj.Part is\n       Table_Index_Type     => Nat,\n       Table_Low_Bound      => 1,\n       Table_Initial        => 10,\n-      Table_Increment      => 50,\n+      Table_Increment      => 100,\n       Table_Name           => \"Prj.Part.Project_Stack\");\n    --  This table is used to detect circular dependencies\n    --  for imported and extended projects and to get the project ids of\n@@ -459,7 +459,15 @@ package body Prj.Part is\n       Current_Directory : constant String := Get_Current_Dir;\n       Dummy : Boolean;\n \n+      Real_Project_File_Name : String_Access :=\n+                                 Osint.To_Canonical_File_Spec\n+                                   (Project_File_Name);\n+\n    begin\n+      if Real_Project_File_Name = null then\n+         Real_Project_File_Name := new String'(Project_File_Name);\n+      end if;\n+\n       Project := Empty_Node;\n \n       if Current_Verbosity >= Medium then\n@@ -470,10 +478,12 @@ package body Prj.Part is\n \n       declare\n          Path_Name : constant String :=\n-                       Project_Path_Name_Of (Project_File_Name,\n+                       Project_Path_Name_Of (Real_Project_File_Name.all,\n                                              Directory   => Current_Directory);\n \n       begin\n+         Free (Real_Project_File_Name);\n+\n          Prj.Err.Initialize;\n          Prj.Err.Scanner.Set_Comment_As_Token (Store_Comments);\n          Prj.Err.Scanner.Set_End_Of_Line_As_Token (Store_Comments);"}, {"sha": "1c382ab5c404078c74f8c798f3926078fa4c2246", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd6e5ae32e20e53172a8597ead37034b381321c/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd6e5ae32e20e53172a8597ead37034b381321c/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=ddd6e5ae32e20e53172a8597ead37034b381321c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2340,6 +2340,16 @@ package body Prj.Proc is\n             Project := Processed_Projects.Get (Name);\n \n             if Project /= No_Project then\n+\n+               --  Make sure that, when a project is extended, the project id\n+               --  of the project extending it is recorded in its data, even\n+               --  when it has already been processed as an imported project.\n+               --  This is for virtually extended projects.\n+\n+               if Extended_By /= No_Project then\n+                  In_Tree.Projects.Table (Project).Extended_By := Extended_By;\n+               end if;\n+\n                return;\n             end if;\n "}]}