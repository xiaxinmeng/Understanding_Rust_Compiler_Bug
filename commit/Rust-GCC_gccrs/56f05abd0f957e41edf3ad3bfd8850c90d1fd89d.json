{"sha": "56f05abd0f957e41edf3ad3bfd8850c90d1fd89d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZmMDVhYmQwZjk1N2U0MWVkZjNhZDNiZmQ4ODUwYzkwZDFmZDg5ZA==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2011-12-14T08:46:13Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2011-12-14T08:46:13Z"}, "message": "PR c++/51476 - ICE on PTRMEM_CST as template argument in c++11\n\ngcc/cp/\n\n\tPR c++/51476\n\t* pt.c (convert_nontype_argument): Don't call maybe_constant_value\n\tfor PTRMEM_CST nodes.\n\ngcc/testsuite/\n\n\tPR c++/51476\n\t* g++.dg/cpp0x/ptrmem-cst-arg1.C: New test.\n\nFrom-SVN: r182324", "tree": {"sha": "c30b95dbc4bdcc21fe4fe879a305fe5b07a240c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c30b95dbc4bdcc21fe4fe879a305fe5b07a240c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56f05abd0f957e41edf3ad3bfd8850c90d1fd89d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f05abd0f957e41edf3ad3bfd8850c90d1fd89d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56f05abd0f957e41edf3ad3bfd8850c90d1fd89d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f05abd0f957e41edf3ad3bfd8850c90d1fd89d/comments", "author": null, "committer": null, "parents": [{"sha": "58fc93fb001225df27cb502d0d5f4f939f0dc0aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58fc93fb001225df27cb502d0d5f4f939f0dc0aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58fc93fb001225df27cb502d0d5f4f939f0dc0aa"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "5b818e9f78a18bd0090e5af29869c5892354e7c9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f05abd0f957e41edf3ad3bfd8850c90d1fd89d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f05abd0f957e41edf3ad3bfd8850c90d1fd89d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=56f05abd0f957e41edf3ad3bfd8850c90d1fd89d", "patch": "@@ -1,3 +1,9 @@\n+2011-12-14  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/51476\n+\t* pt.c (convert_nontype_argument): Don't call maybe_constant_value\n+\tfor PTRMEM_CST nodes.\n+\n 2011-12-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/51406"}, {"sha": "66d4c3fb7fe17ea9e00fdc391fea7e2bd03d2d55", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f05abd0f957e41edf3ad3bfd8850c90d1fd89d/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f05abd0f957e41edf3ad3bfd8850c90d1fd89d/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=56f05abd0f957e41edf3ad3bfd8850c90d1fd89d", "patch": "@@ -5720,11 +5720,15 @@ convert_nontype_argument (tree type, tree expr, tsubst_flags_t complain)\n      to a null value, but otherwise still need to be of a specific form.  */\n   if (cxx_dialect >= cxx0x)\n     {\n-      if (INTEGRAL_OR_ENUMERATION_TYPE_P (type))\n+      if (TREE_CODE (expr) == PTRMEM_CST)\n+\t/* A PTRMEM_CST is already constant, and a valid template\n+\t   argument for a parameter of pointer to member type, we just want\n+\t   to leave it in that form rather than lower it to a\n+\t   CONSTRUCTOR.  */;\n+      else if (INTEGRAL_OR_ENUMERATION_TYPE_P (type))\n \texpr = maybe_constant_value (expr);\n       else if (TYPE_PTR_P (type)\n-\t       || (TYPE_PTR_TO_MEMBER_P (type)\n-\t\t   && TREE_CODE (expr) != PTRMEM_CST))\n+\t       || TYPE_PTR_TO_MEMBER_P (type))\n \t{\n \t  tree folded = maybe_constant_value (expr);\n \t  if (TYPE_PTR_P (type) ? integer_zerop (folded)"}, {"sha": "93c7377656535aca8af56ffd4bc774df07d01bf6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f05abd0f957e41edf3ad3bfd8850c90d1fd89d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f05abd0f957e41edf3ad3bfd8850c90d1fd89d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=56f05abd0f957e41edf3ad3bfd8850c90d1fd89d", "patch": "@@ -1,3 +1,8 @@\n+2011-12-14  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/51476\n+\t* g++.dg/cpp0x/ptrmem-cst-arg1.C: New test.\n+\n 2011-12-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/51406"}, {"sha": "b6c81d5f463c9ddb43ec88630f75cbd435ddf769", "filename": "gcc/testsuite/g++.dg/cpp0x/ptrmem-cst-arg1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f05abd0f957e41edf3ad3bfd8850c90d1fd89d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fptrmem-cst-arg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f05abd0f957e41edf3ad3bfd8850c90d1fd89d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fptrmem-cst-arg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fptrmem-cst-arg1.C?ref=56f05abd0f957e41edf3ad3bfd8850c90d1fd89d", "patch": "@@ -0,0 +1,9 @@\n+// Origin PR c++/51476\n+// { dg-options \"-std=c++11\" }\n+\n+template<int> struct A {};                                                               \n+struct B\n+{\n+    int i;\n+    A<&B::i> a; // { dg-error \"could not convert template argument\" }\n+};"}]}