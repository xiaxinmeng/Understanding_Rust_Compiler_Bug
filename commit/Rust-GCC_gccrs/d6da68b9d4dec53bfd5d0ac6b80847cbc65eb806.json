{"sha": "d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZkYTY4YjlkNGRlYzUzYmZkNWQwYWM2YjgwODQ3Y2JjNjVlYjgwNg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-03-02T22:32:27Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-03-02T22:32:27Z"}, "message": "builtins.c (BUILTIN_SETJMP_FRAME_VALUE): Remove.\n\n\t* builtins.c (BUILTIN_SETJMP_FRAME_VALUE): Remove.\n\t(expand_builtin_setjmp_setup): Use\n\ttargetm.builtin_setjmp_frame_value instead of\n\tBUILTIN_SETJMP_FRAME_VALUE.\n\t* system.h (BUILTIN_SETJMP_FRAME_VALUE): Poison.\n\t* target-def.h (TARGET_BUILTIN_SETJMP_FRAME_VALUE): New.\n\t(TARGET_INITIALIZER): Add TARGET_BUILTIN_SETJMP_FRAME_VALUE.\n\t* target.h (gcc_target): Add builtin_setjmp_frame_value.\n\t* targhooks.c (default_builtin_setjmp_frame_value): New.\n\t* targhooks.h: Add a prototype for\n\tdefault_builtin_setjmp_frame_value.\n\t* doc/tm.texi (BUILTIN_SETJMP_FRAME_VALUE): Change to\n\tTARGET_BUILTIN_SETJMP_FRAME_VALUE.\n\nFrom-SVN: r78789", "tree": {"sha": "4a224f62d0f48c8459cf8809eaf8a6da465f0ca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a224f62d0f48c8459cf8809eaf8a6da465f0ca9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/comments", "author": null, "committer": null, "parents": [{"sha": "59564c5e9a60e8d19a594020f329c3f71bcc0262", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59564c5e9a60e8d19a594020f329c3f71bcc0262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59564c5e9a60e8d19a594020f329c3f71bcc0262"}], "stats": {"total": 48, "additions": 38, "deletions": 10}, "files": [{"sha": "eed83b2628b2ccabeea131e6e1ea1b9b395d19c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806", "patch": "@@ -1,3 +1,19 @@\n+2004-03-02  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* builtins.c (BUILTIN_SETJMP_FRAME_VALUE): Remove.\n+\t(expand_builtin_setjmp_setup): Use\n+\ttargetm.builtin_setjmp_frame_value instead of\n+\tBUILTIN_SETJMP_FRAME_VALUE.\n+\t* system.h (BUILTIN_SETJMP_FRAME_VALUE): Poison.\n+\t* target-def.h (TARGET_BUILTIN_SETJMP_FRAME_VALUE): New.\n+\t(TARGET_INITIALIZER): Add TARGET_BUILTIN_SETJMP_FRAME_VALUE.\n+\t* target.h (gcc_target): Add builtin_setjmp_frame_value.\n+\t* targhooks.c (default_builtin_setjmp_frame_value): New.\n+\t* targhooks.h: Add a prototype for\n+\tdefault_builtin_setjmp_frame_value.\n+\t* doc/tm.texi (BUILTIN_SETJMP_FRAME_VALUE): Change to\n+\tTARGET_BUILTIN_SETJMP_FRAME_VALUE.\n+\n 2004-03-02  Stephane Carrez  <stcarrez@nerim.fr>\n \n \t* config/m68hc11/m68hc11.md (move peephole2): New peepholes to optimize"}, {"sha": "291e605fcb954326a34d43c1eccb1b08f1fc6fb9", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806", "patch": "@@ -490,13 +490,9 @@ expand_builtin_setjmp_setup (rtx buf_addr, rtx receiver_label)\n      the buffer and use the rest of it for the stack save area, which\n      is machine-dependent.  */\n \n-#ifndef BUILTIN_SETJMP_FRAME_VALUE\n-#define BUILTIN_SETJMP_FRAME_VALUE virtual_stack_vars_rtx\n-#endif\n-\n   mem = gen_rtx_MEM (Pmode, buf_addr);\n   set_mem_alias_set (mem, setjmp_alias_set);\n-  emit_move_insn (mem, BUILTIN_SETJMP_FRAME_VALUE);\n+  emit_move_insn (mem, targetm.builtin_setjmp_frame_value ());\n \n   mem = gen_rtx_MEM (Pmode, plus_constant (buf_addr, GET_MODE_SIZE (Pmode))),\n   set_mem_alias_set (mem, setjmp_alias_set);"}, {"sha": "3d253a1a28f924a6f88fed5dae86298072ef32b4", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806", "patch": "@@ -2853,13 +2853,13 @@ before we can access arbitrary stack frames.  You will seldom need to\n define this macro.\n @end defmac\n \n-@defmac BUILTIN_SETJMP_FRAME_VALUE\n-If defined, a C expression that contains an rtx that is used to store\n+@deftypefn {Target Hook} bool TARGET_BUILTIN_SETJMP_FRAME_VALUE ()\n+This target hook should return an rtx that is used to store\n the address of the current frame into the built in @code{setjmp} buffer.\n The default value, @code{virtual_stack_vars_rtx}, is correct for most\n-machines.  One reason you may need to define this macro is if\n+machines.  One reason you may need to define this target hook is if\n @code{hard_frame_pointer_rtx} is the appropriate value on your machine.\n-@end defmac\n+@end deftypefn\n \n @defmac RETURN_ADDR_RTX (@var{count}, @var{frameaddr})\n A C expression whose value is RTL representing the value of the return"}, {"sha": "8d91547fe986deacc12a07008cb64fd531141ba4", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806", "patch": "@@ -640,7 +640,7 @@ typedef char _Bool;\n \tMAX_WCHAR_TYPE_SIZE GCOV_TYPE_SIZE SHARED_SECTION_ASM_OP\t   \\\n \tFINAL_REG_PARM_STACK_SPACE MAYBE_REG_PARM_STACK_SPACE\t\t   \\\n \tTRADITIONAL_PIPELINE_INTERFACE DFA_PIPELINE_INTERFACE\t\t   \\\n-\tDBX_OUTPUT_STANDARD_TYPES\n+\tDBX_OUTPUT_STANDARD_TYPES BUILTIN_SETJMP_FRAME_VALUE\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}, {"sha": "9b04c3032164726cff0b08f8883760c59e2fe105", "filename": "gcc/target-def.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806", "patch": "@@ -331,6 +331,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \n #define TARGET_DEFAULT_SHORT_ENUMS hook_bool_void_false\n \n+#define TARGET_BUILTIN_SETJMP_FRAME_VALUE default_builtin_setjmp_frame_value\n+\n #define TARGET_PROMOTE_FUNCTION_ARGS hook_bool_tree_false\n #define TARGET_PROMOTE_FUNCTION_RETURN hook_bool_tree_false\n #define TARGET_PROMOTE_PROTOTYPES hook_bool_tree_false\n@@ -397,6 +399,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n   TARGET_GET_PCH_VALIDITY,\t\t\t\\\n   TARGET_PCH_VALID_P,\t\t\t\t\\\n   TARGET_DEFAULT_SHORT_ENUMS,\t\t\t\\\n+  TARGET_BUILTIN_SETJMP_FRAME_VALUE,\t\t\\\n   TARGET_HAVE_NAMED_SECTIONS,\t\t\t\\\n   TARGET_HAVE_CTORS_DTORS,\t\t\t\\\n   TARGET_HAVE_TLS,\t\t\t\t\\"}, {"sha": "858c82ad31af8f76e23a5a6825e66c2e55cc62e6", "filename": "gcc/target.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806", "patch": "@@ -421,6 +421,10 @@ struct gcc_target\n      that type.  */\n   bool (* default_short_enums) (void);\n \n+  /* This target hook returns an rtx that is used to store the address\n+     of the current frame into the built in @code{setjmp} buffer.  */\n+  rtx (* builtin_setjmp_frame_value) (void);\n+\n   /* Leave the boolean fields at the end.  */\n \n   /* True if arbitrary sections are supported.  */"}, {"sha": "c93a1a8ec6626bbc091a73d71788f95e17087ffd", "filename": "gcc/targhooks.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806", "patch": "@@ -105,6 +105,14 @@ default_setup_incoming_varargs (CUMULATIVE_ARGS *ca ATTRIBUTE_UNUSED,\n {\n }\n \n+/* The default implementation of TARGET_BUILTIN_SETJMP_FRAME_VALUE.  */\n+\n+rtx\n+default_builtin_setjmp_frame_value (void)\n+{\n+  return virtual_stack_vars_rtx;\n+}\n+\n /* Generic hook that takes a CUMULATIVE_ARGS pointer and returns true.  */\n \n bool"}, {"sha": "f90d6b3612cfceb76dbc91e77f29526ab4514d69", "filename": "gcc/targhooks.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=d6da68b9d4dec53bfd5d0ac6b80847cbc65eb806", "patch": "@@ -27,6 +27,7 @@ extern bool default_return_in_memory (tree, tree);\n \n extern rtx default_expand_builtin_saveregs (void);\n extern void default_setup_incoming_varargs (CUMULATIVE_ARGS *, enum machine_mode, tree, int *, int);\n+extern rtx default_builtin_setjmp_frame_value (void);\n extern bool hook_bool_CUMULATIVE_ARGS_false (CUMULATIVE_ARGS *);\n extern bool default_pretend_outgoing_varargs_named (CUMULATIVE_ARGS *);\n "}]}