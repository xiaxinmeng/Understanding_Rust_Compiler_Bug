{"sha": "b1af4777420641d90fc71bc8f34782d9568b3f01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFhZjQ3Nzc0MjA2NDFkOTBmYzcxYmM4ZjM0NzgyZDk1NjhiM2YwMQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-25T22:01:36Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-25T22:01:36Z"}, "message": "(do_include): \"Concatenate\" multiple \"strings\" in #include.\n\nFrom-SVN: r2248", "tree": {"sha": "10e780538f0870289666b44840f52d6e71cf9161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10e780538f0870289666b44840f52d6e71cf9161"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1af4777420641d90fc71bc8f34782d9568b3f01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1af4777420641d90fc71bc8f34782d9568b3f01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1af4777420641d90fc71bc8f34782d9568b3f01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1af4777420641d90fc71bc8f34782d9568b3f01/comments", "author": null, "committer": null, "parents": [{"sha": "08a6f4b807cc4c420e6df0eaa62f2e31ebbab75b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a6f4b807cc4c420e6df0eaa62f2e31ebbab75b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08a6f4b807cc4c420e6df0eaa62f2e31ebbab75b"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "9b3c95e32de2115522e088efbff08f19c713bced", "filename": "gcc/cccp.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1af4777420641d90fc71bc8f34782d9568b3f01/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1af4777420641d90fc71bc8f34782d9568b3f01/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=b1af4777420641d90fc71bc8f34782d9568b3f01", "patch": "@@ -3672,11 +3672,29 @@ do_include (buf, limit, op, keyword)\n \n   switch (*fbeg++) {\n   case '\\\"':\n-    fend = fbeg;\n-    while (fend != limit && *fend != '\\\"')\n-      fend++;\n-    if (*fend == '\\\"' && fend + 1 == limit) {\n+    {\n       FILE_BUF *fp;\n+      /* Copy the operand text, concatenating the strings.  */\n+      {\n+\tU_CHAR *fin = fbeg;\n+\tfbeg = (U_CHAR *) alloca (limit - fbeg + 1);\n+\tfend = fbeg;\n+\twhile (fin != limit) {\n+\t  while (fin != limit && *fin != '\\\"')\n+\t    *fend++ = *fin++;\n+\t  fin++;\n+\t  if (fin == limit)\n+\t    break;\n+\t  /* If not at the end, there had better be another string.  */\n+\t  /* Skip just horiz space, and don't go past limit.  */\n+\t  while (fin != limit && is_hor_space[*fin]) fin++;\n+\t  if (fin != limit && *fin == '\\\"')\n+\t    fin++;\n+\t  else\n+\t    goto fail;\n+\t}\n+      }\n+      *fend++ = 0;\n \n       /* We have \"filename\".  Figure out directory this source\n \t file is coming from and put it on the front of the list. */"}]}