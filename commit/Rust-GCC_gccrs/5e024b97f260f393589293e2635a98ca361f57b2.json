{"sha": "5e024b97f260f393589293e2635a98ca361f57b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUwMjRiOTdmMjYwZjM5MzU4OTI5M2UyNjM1YTk4Y2EzNjFmNTdiMg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-12-21T12:37:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-03T09:28:20Z"}, "message": "[Ada] Cleanup processing of aspect Dynamic_Predicate\n\ngcc/ada/\n\n\t* sem_ch13.adb (Build_Predicate_Functions): Fix typo in comment.\n\t(Resolve_Aspect_Expressions): Fix typo in comment; remove\n\tredundant check for no aspects; simplify with Discard_Node.", "tree": {"sha": "75eb72d83161d5d3f2f1f715ddd5830a655a1f18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75eb72d83161d5d3f2f1f715ddd5830a655a1f18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e024b97f260f393589293e2635a98ca361f57b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e024b97f260f393589293e2635a98ca361f57b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e024b97f260f393589293e2635a98ca361f57b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e024b97f260f393589293e2635a98ca361f57b2/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03c80e174bc059b50063da24cf89b67e692bc5d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03c80e174bc059b50063da24cf89b67e692bc5d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03c80e174bc059b50063da24cf89b67e692bc5d8"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "1df37d9eb3beae6af76eb530ce7f0ef5530f3791", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e024b97f260f393589293e2635a98ca361f57b2/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e024b97f260f393589293e2635a98ca361f57b2/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=5e024b97f260f393589293e2635a98ca361f57b2", "patch": "@@ -9998,7 +9998,7 @@ package body Sem_Ch13 is\n \n         --  Do not generate predicate bodies within a generic unit. The\n         --  expressions have been analyzed already, and the bodies play\n-        --  no role if not within an executable unit. However, if a statc\n+        --  no role if not within an executable unit. However, if a static\n         --  predicate is present it must be processed for legality checks\n         --  such as case coverage in an expression.\n \n@@ -14914,7 +14914,7 @@ package body Sem_Ch13 is\n             Find_Direct_Name (N);\n             Set_Entity (N, Empty);\n \n-         --  The name is component association needs no resolution.\n+         --  The name is component association needs no resolution\n \n          elsif Nkind (N) = N_Component_Association then\n             Dummy := Resolve_Name (Expression (N));\n@@ -14936,10 +14936,6 @@ package body Sem_Ch13 is\n    --  Start of processing for Resolve_Aspect_Expressions\n \n    begin\n-      if No (ASN) then\n-         return;\n-      end if;\n-\n       while Present (ASN) loop\n          if Nkind (ASN) = N_Aspect_Specification and then Entity (ASN) = E then\n             declare\n@@ -14976,16 +14972,12 @@ package body Sem_Ch13 is\n                      --  discriminants of the type.\n \n                      if No (Predicate_Function (E)) then\n-                        declare\n-                           FDecl : constant Node_Id :=\n-                                     Build_Predicate_Function_Declaration (E);\n-                           pragma Unreferenced (FDecl);\n+                        Discard_Node\n+                          (Build_Predicate_Function_Declaration (E));\n \n-                        begin\n-                           Push_Type (E);\n-                           Resolve_Aspect_Expression (Expr);\n-                           Pop_Type (E);\n-                        end;\n+                        Push_Type (E);\n+                        Resolve_Aspect_Expression (Expr);\n+                        Pop_Type (E);\n                      end if;\n \n                   when Pre_Post_Aspects =>"}]}