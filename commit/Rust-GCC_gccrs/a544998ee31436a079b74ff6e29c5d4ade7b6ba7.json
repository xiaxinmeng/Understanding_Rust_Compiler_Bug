{"sha": "a544998ee31436a079b74ff6e29c5d4ade7b6ba7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU0NDk5OGVlMzE0MzZhMDc5Yjc0ZmY2ZTI5YzVkNGFkZTdiNmJhNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-05-25T08:39:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-05-25T08:39:44Z"}, "message": "re PR c++/25666 (Bad diagnostic for templated destructor as friend)\n\n/cp\n2013-05-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/25666\n\t* decl2.c (check_classfn): Check for destructors declared as member\n\ttemplates.\n\n/testsuite\n2013-05-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/25666\n\t* g++.dg/parse/dtor16.C: New.\n\t* g++.dg/parse/dtor6.C: Adjust.\n\nFrom-SVN: r199324", "tree": {"sha": "9480d8ea22c7e40e507af3c9e5b55470fc05371f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9480d8ea22c7e40e507af3c9e5b55470fc05371f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a544998ee31436a079b74ff6e29c5d4ade7b6ba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a544998ee31436a079b74ff6e29c5d4ade7b6ba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a544998ee31436a079b74ff6e29c5d4ade7b6ba7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a544998ee31436a079b74ff6e29c5d4ade7b6ba7/comments", "author": null, "committer": null, "parents": [{"sha": "a62e8b4a2a10dccc6cd7760ca48b57c297495863", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a62e8b4a2a10dccc6cd7760ca48b57c297495863", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a62e8b4a2a10dccc6cd7760ca48b57c297495863"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "ed1d4796624ef9b79a40effc52d665f867470a51", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a544998ee31436a079b74ff6e29c5d4ade7b6ba7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a544998ee31436a079b74ff6e29c5d4ade7b6ba7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a544998ee31436a079b74ff6e29c5d4ade7b6ba7", "patch": "@@ -1,3 +1,9 @@\n+2013-05-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/25666\n+\t* decl2.c (check_classfn): Check for destructors declared as member\n+\ttemplates.\n+\n 2013-05-24  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/56971"}, {"sha": "8119210fb06a8ea797885020c2abe003ca742e33", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a544998ee31436a079b74ff6e29c5d4ade7b6ba7/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a544998ee31436a079b74ff6e29c5d4ade7b6ba7/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=a544998ee31436a079b74ff6e29c5d4ade7b6ba7", "patch": "@@ -646,6 +646,15 @@ check_classfn (tree ctype, tree function, tree template_parms)\n   /* OK, is this a definition of a member template?  */\n   is_template = (template_parms != NULL_TREE);\n \n+  /* [temp.mem]\n+\n+     A destructor shall not be a member template.  */\n+  if (DECL_DESTRUCTOR_P (function) && is_template)\n+    {\n+      error (\"destructor %qD declared as member template\", function);\n+      return error_mark_node;\n+    }\n+\n   /* We must enter the scope here, because conversion operators are\n      named by target type, and type equivalence relies on typenames\n      resolving within the scope of CTYPE.  */"}, {"sha": "e0d4ccfd0b60e76a47b4d71d2cc8ea9ad63b8663", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a544998ee31436a079b74ff6e29c5d4ade7b6ba7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a544998ee31436a079b74ff6e29c5d4ade7b6ba7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a544998ee31436a079b74ff6e29c5d4ade7b6ba7", "patch": "@@ -1,3 +1,9 @@\n+2013-05-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/25666\n+\t* g++.dg/parse/dtor16.C: New.\n+\t* g++.dg/parse/dtor6.C: Adjust.\n+\n 2013-05-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/19618"}, {"sha": "ff445c38865f5d33c309a1e620dffef8c3d4551b", "filename": "gcc/testsuite/g++.dg/parse/dtor16.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a544998ee31436a079b74ff6e29c5d4ade7b6ba7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a544998ee31436a079b74ff6e29c5d4ade7b6ba7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor16.C?ref=a544998ee31436a079b74ff6e29c5d4ade7b6ba7", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/25666\n+\n+struct A { ~A(); };\n+\n+struct B\n+{\n+  template<int> friend A::~A();  // { dg-error \"member template\" }\n+};"}, {"sha": "86370d5d4024824bf0ba8dbd562a1a0afc91c466", "filename": "gcc/testsuite/g++.dg/parse/dtor6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a544998ee31436a079b74ff6e29c5d4ade7b6ba7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a544998ee31436a079b74ff6e29c5d4ade7b6ba7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor6.C?ref=a544998ee31436a079b74ff6e29c5d4ade7b6ba7", "patch": "@@ -1,8 +1,8 @@\n // PR c++/25638\n \n-struct A { ~A(); }; // { dg-error \"candidate\" }  \n+struct A { ~A(); };\n \n struct B : A\n {\n-  template<int> friend A::~A(); // { dg-error \"match\" }\n+  template<int> friend A::~A(); // { dg-error \"member template\" }\n };"}]}