{"sha": "e80316129f08a13630a1751c9eb9fea4d5888d35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgwMzE2MTI5ZjA4YTEzNjMwYTE3NTFjOWViOWZlYTRkNTg4OGQzNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-12T11:35:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-12T11:35:09Z"}, "message": "(expand_divmod, case TRUNC_DIV_EXPR): Promote signed division by\n0x80000000 to unsigned.\n\nFrom-SVN: r8430", "tree": {"sha": "4fb86829d58e9a03bd15854226551f6f295cc402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fb86829d58e9a03bd15854226551f6f295cc402"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e80316129f08a13630a1751c9eb9fea4d5888d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e80316129f08a13630a1751c9eb9fea4d5888d35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e80316129f08a13630a1751c9eb9fea4d5888d35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e80316129f08a13630a1751c9eb9fea4d5888d35/comments", "author": null, "committer": null, "parents": [{"sha": "84e24c036d3f3b11caaa5c69be38309bada7890b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84e24c036d3f3b11caaa5c69be38309bada7890b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84e24c036d3f3b11caaa5c69be38309bada7890b"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "bae088d223a64c11218159f69696f01601cbfa50", "filename": "gcc/expmed.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80316129f08a13630a1751c9eb9fea4d5888d35/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80316129f08a13630a1751c9eb9fea4d5888d35/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=e80316129f08a13630a1751c9eb9fea4d5888d35", "patch": "@@ -2740,7 +2740,9 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n       case TRUNC_DIV_EXPR:\n \tif (op1_is_constant && HOST_BITS_PER_WIDE_INT >= size)\n \t  {\n-\t    if (unsignedp)\n+\t    if (unsignedp\n+\t\t|| (INTVAL (op1)\n+\t\t    == (HOST_WIDE_INT) 1 << (GET_MODE_BITSIZE (compute_mode) - 1)))\n \t      {\n \t\tunsigned HOST_WIDE_INT mh, ml;\n \t\tint pre_shift, post_shift;\n@@ -2901,6 +2903,8 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t\t\t\t\t\t tquotient, 0);\n \t\t      }\n \n+\t\t    /* We have computed OP0 / abs(OP1).  If OP1 is negative, negate\n+\t\t       the quotient.  */\n \t\t    if (d < 0)\n \t\t      {\n \t\t\tinsn = get_last_insn ();"}]}