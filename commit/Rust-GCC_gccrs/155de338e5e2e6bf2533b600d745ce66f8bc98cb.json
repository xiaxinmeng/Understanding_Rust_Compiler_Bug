{"sha": "155de338e5e2e6bf2533b600d745ce66f8bc98cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU1ZGUzMzhlNWUyZTZiZjI1MzNiNjAwZDc0NWNlNjZmOGJjOThjYg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-03-31T10:18:29Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-03-31T10:18:29Z"}, "message": "* config/h8300/h8300.md (a new peephole2): New.\n\nFrom-SVN: r65082", "tree": {"sha": "bd534f11376601f87ff77ec484f82280b587483d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd534f11376601f87ff77ec484f82280b587483d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/155de338e5e2e6bf2533b600d745ce66f8bc98cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155de338e5e2e6bf2533b600d745ce66f8bc98cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/155de338e5e2e6bf2533b600d745ce66f8bc98cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155de338e5e2e6bf2533b600d745ce66f8bc98cb/comments", "author": null, "committer": null, "parents": [{"sha": "da557ab84661f8906af7f8b55a8a4e68f4176258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da557ab84661f8906af7f8b55a8a4e68f4176258", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da557ab84661f8906af7f8b55a8a4e68f4176258"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "fd3e32a6af914a2393558423e72ce0568a744874", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155de338e5e2e6bf2533b600d745ce66f8bc98cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155de338e5e2e6bf2533b600d745ce66f8bc98cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=155de338e5e2e6bf2533b600d745ce66f8bc98cb", "patch": "@@ -1,3 +1,7 @@\n+2003-03-31  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (a new peephole2): New.\n+\n 2003-03-31  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* gcse.c (simple_mem): Return false for floating-point accesses"}, {"sha": "f7170c969fa9cfb15531057a4f358dcbdde8b1cd", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155de338e5e2e6bf2533b600d745ce66f8bc98cb/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155de338e5e2e6bf2533b600d745ce66f8bc98cb/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=155de338e5e2e6bf2533b600d745ce66f8bc98cb", "patch": "@@ -3955,6 +3955,50 @@\n   \"operands[3] = gen_lowpart (HImode, operands[0]);\n    operands[4] = gen_lowpart (HImode, operands[1]);\")\n \n+;; (compare (reg:HI) (const_int)) takes 4 bytes, so we try to achieve\n+;; the equivalent with shorter sequences.  Here is the summary.  Cases\n+;; are grouped for each define_peephole2.\n+;;\n+;; reg  const_int                   use     insn\n+;; --------------------------------------------------------\n+;; dead    -2                       eq/ne   inc.l\n+;; dead    -1                       eq/ne   inc.l\n+;; dead     1                       eq/ne   dec.l\n+;; dead     2                       eq/ne   dec.l\n+;;\n+;; dead     1                       geu/ltu shlr.l\n+;; dead     3 (H8S)                 geu/ltu shlr.l\n+;;\n+;; dead   255                       geu/ltu mov.b\n+\n+(define_peephole2\n+  [(set (cc0)\n+\t(compare (match_operand:HI 0 \"register_operand\" \"\")\n+\t\t (match_operand:HI 1 \"const_int_operand\" \"\")))\n+   (set (pc)\n+\t(if_then_else (match_operator 2 \"gtuleu_operator\"\n+\t\t\t[(cc0) (const_int 0)])\n+\t\t      (label_ref (match_operand 3 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && peep2_reg_dead_p (1, operands[0])\n+   && (INTVAL (operands[1]) == 1\n+\t|| (TARGET_H8300S && INTVAL (operands[1]) == 3))\"\n+  [(parallel [(set (match_dup 0)\n+\t\t   (lshiftrt:HI (match_dup 0)\n+\t\t\t\t(match_dup 5)))\n+\t      (clobber (scratch:QI))])\n+   (set (cc0)\n+\t(match_dup 0))\n+   (set (pc)\n+\t(if_then_else (match_dup 4)\n+\t\t      (label_ref (match_dup 3))\n+\t\t      (pc)))]\n+  \"operands[4] = ((GET_CODE (operands[2]) == GTU) ?\n+\t\t  gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx) :\n+\t\t  gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx));\n+   operands[5] = GEN_INT (exact_log2 (INTVAL (operands[1]) + 1));\")\n+\n ;; (compare (reg:SI) (const_int)) takes 6 bytes, so we try to achieve\n ;; the equivalent with shorter sequences.  Here is the summary.  Cases\n ;; are grouped for each define_peephole2."}]}