{"sha": "e75e98f270478aca1c8c823171e8d29d471bfc87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc1ZTk4ZjI3MDQ3OGFjYTFjOGM4MjMxNzFlOGQyOWQ0NzFiZmM4Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-14T04:30:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-14T04:30:26Z"}, "message": "re PR c++/55680 ([C++11] Member specialization with lambda is rejected)\n\n\tPR c++/55680\n\t* pt.c (maybe_process_partial_specialization): A lambda\n\tisn't what's being specialized.\n\nFrom-SVN: r196042", "tree": {"sha": "4370cd4ecc6af46e95b23306a97c07e991b4f5fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4370cd4ecc6af46e95b23306a97c07e991b4f5fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e75e98f270478aca1c8c823171e8d29d471bfc87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e75e98f270478aca1c8c823171e8d29d471bfc87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e75e98f270478aca1c8c823171e8d29d471bfc87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e75e98f270478aca1c8c823171e8d29d471bfc87/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "561f7fc72cbe475f1661e457731bb7d3b99f82a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/561f7fc72cbe475f1661e457731bb7d3b99f82a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/561f7fc72cbe475f1661e457731bb7d3b99f82a1"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "d28a6049a81db12e7919c4f124180a8180f23983", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75e98f270478aca1c8c823171e8d29d471bfc87/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75e98f270478aca1c8c823171e8d29d471bfc87/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e75e98f270478aca1c8c823171e8d29d471bfc87", "patch": "@@ -1,5 +1,9 @@\n 2013-02-13  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/55680\n+\t* pt.c (maybe_process_partial_specialization): A lambda\n+\tisn't what's being specialized.\n+\n \tPR c++/55710\n \t* semantics.c (maybe_add_lambda_conv_op): Mark static thunk\n \tTREE_USED."}, {"sha": "bd44fdebb8c3774c5296d69b27790a9d38f6d91c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75e98f270478aca1c8c823171e8d29d471bfc87/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75e98f270478aca1c8c823171e8d29d471bfc87/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e75e98f270478aca1c8c823171e8d29d471bfc87", "patch": "@@ -802,6 +802,11 @@ maybe_process_partial_specialization (tree type)\n   if (type == error_mark_node)\n     return error_mark_node;\n \n+  /* A lambda that appears in specialization context is not itself a\n+     specialization.  */\n+  if (CLASS_TYPE_P (type) && CLASSTYPE_LAMBDA_EXPR (type))\n+    return type;\n+\n   if (TREE_CODE (type) == BOUND_TEMPLATE_TEMPLATE_PARM)\n     {\n       error (\"name of class shadows template template parameter %qD\","}, {"sha": "720941dbc2f417acdbd8a9015c02c4d77baaf905", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-template8.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75e98f270478aca1c8c823171e8d29d471bfc87/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-template8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75e98f270478aca1c8c823171e8d29d471bfc87/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-template8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-template8.C?ref=e75e98f270478aca1c8c823171e8d29d471bfc87", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/55680\n+// { dg-do compile { target c++11 } }\n+\n+template <class T> struct X {\n+    static void (* code ) ();\n+};\n+template <> void (* X<int>::code ) () = [](){};"}]}