{"sha": "264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "node_id": "C_kwDOANBUbNoAKDI2NGRlZWNiMTZhYmNmYzhjYThlZmU5Yjk0YjBhZDU1ZmViZDU1Y2M", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-09-08T19:03:21Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-09-08T19:03:21Z"}, "message": "OpenMP: Document ompx warnings + add Fortran omx warning [PR106670]\n\nomp/ompx sentinels are for vendor extensions; as they might be required for\nthe correctness of the program, a warning should be printable. This patch\ndocuments in the OpenMP 5.2 table the existing warnings, including the new\nwarning for for fixed source form Fortran.\n\n\tPR fortran/106670\n\ngcc/fortran/ChangeLog:\n\n\t* scanner.cc (skip_fixed_omp_sentinel): Add -Wsurprising warning\n\tfor 'omx' sentinels with -fopenmp.\n\t* invoke.texi (-Wsurprising): Document additional warning case.\n\nlibgomp/ChangeLog:\n\n\t* libgomp.texi (OpenMP 5.2): Add comment to ompx/omx entry.\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/gomp/ompx-1.c: New test.\n\t* c-c++-common/gomp/ompx-2.c: New test.\n\t* g++.dg/gomp/ompx-attrs-1.C: New test.\n\t* gfortran.dg/gomp/ompx-1.f90: New test.\n\t* gfortran.dg/gomp/omx-1.f: New test.\n\t* gfortran.dg/gomp/omx-2.f: New test.", "tree": {"sha": "991f5d125971b4361fd84221dd642f187358361c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/991f5d125971b4361fd84221dd642f187358361c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f05ff34d63b582557918189528531f35041ef0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f05ff34d63b582557918189528531f35041ef0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f05ff34d63b582557918189528531f35041ef0e"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "58502d38ac8772e2467b75e42bdf723c74589c06", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "patch": "@@ -1092,6 +1092,11 @@ The type of a function result is declared more than once with the same type.  If\n \n @item\n A @code{CHARACTER} variable is declared with negative length.\n+\n+@item\n+With @option{-fopenmp}, for fixed-form source code, when an @code{omx}\n+vendor-extension sentinel is encountered. (The equivalent @code{ompx},\n+used in free-form source code, is diagnosed by default.)\n @end itemize\n \n @item -Wtabs"}, {"sha": "fa1d9cba39472d0238f4a643f97a9ce82d08a747", "filename": "gcc/fortran/scanner.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ffortran%2Fscanner.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ffortran%2Fscanner.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.cc?ref=264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "patch": "@@ -982,8 +982,9 @@ static bool\n skip_fixed_omp_sentinel (locus *start)\n {\n   gfc_char_t c;\n-  if (((c = next_char ()) == 'm' || c == 'M')\n-      && ((c = next_char ()) == 'p' || c == 'P'))\n+  if ((c = next_char ()) != 'm' && c != 'M')\n+    return false;\n+  if ((c = next_char ()) == 'p' || c == 'P')\n     {\n       c = next_char ();\n       if (c != '\\n'\n@@ -1005,6 +1006,9 @@ skip_fixed_omp_sentinel (locus *start)\n \t    }\n \t}\n     }\n+  else if (UNLIKELY (c == 'x' || c == 'X'))\n+    gfc_warning_now (OPT_Wsurprising,\n+\t\t     \"Ignoring '!$omx' vendor-extension sentinel at %C\");\n   return false;\n }\n "}, {"sha": "9758d0f0cae0652fd7582b64c3ec8c782f20f0ac", "filename": "gcc/testsuite/c-c++-common/gomp/ompx-1.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fompx-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fompx-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fompx-1.c?ref=264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "patch": "@@ -0,0 +1,4 @@\n+void f(void)\n+{\n+  #pragma ompx some_vendor_extension\n+}"}, {"sha": "4b66b0e2b1cc9cf072a4960f51768a88eba2c8ad", "filename": "gcc/testsuite/c-c++-common/gomp/ompx-2.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fompx-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fompx-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fompx-2.c?ref=264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-additional-options \"-Wunknown-pragmas\" } */\n+void f(void)\n+{\n+  #pragma ompx some_vendor_extension  /* { dg-warning \"-:ignoring '#pragma ompx some_vendor_extension'\" } */\n+}"}, {"sha": "2e9fc0b591f2929ca29adde8cd517a61bc0cab6f", "filename": "gcc/testsuite/g++.dg/gomp/ompx-attrs-1.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fompx-attrs-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fompx-attrs-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fompx-attrs-1.C?ref=264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "patch": "@@ -0,0 +1,7 @@\n+// { dg-do compile { target c++11 } }\n+\n+void\n+foo ()\n+{\n+  [[ompx::directive(some_vendor_extension)]];  /* { dg-warning \"attributes at the beginning of statement are ignored\" } */\n+}"}, {"sha": "e5dc6520fd41a917e045bb7cad77c54eb30bfa77", "filename": "gcc/testsuite/gfortran.dg/gomp/ompx-1.f90", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fompx-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fompx-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fompx-1.f90?ref=264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "patch": "@@ -0,0 +1,2 @@\n+!$ompx foo  ! { dg-warning \"!.OMP at .1. starts a commented line as it neither is followed by a space nor is a continuation line\" }\n+end"}, {"sha": "4febf8908bf67c29c366dd10b0f7f3758e3c753b", "filename": "gcc/testsuite/gfortran.dg/gomp/omx-1.f", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fomx-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fomx-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fomx-1.f?ref=264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "patch": "@@ -0,0 +1,7 @@\n+!$omx foo\n+!$OMX foo\n+c$oMx foo\n+c$OMx foo\n+*$oMx foo\n+*$OMx foo\n+      end"}, {"sha": "3c107d98367e169c2ab34f1df980528705d130da", "filename": "gcc/testsuite/gfortran.dg/gomp/omx-2.f", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fomx-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fomx-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fomx-2.f?ref=264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "patch": "@@ -0,0 +1,9 @@\n+! { dg-additional-options \"-Wsurprising\" }\n+\n+!$omx foo  ! { dg-warning \"Ignoring '!.omx' vendor-extension sentinel\" }\n+!$OMX foo  ! { dg-warning \"Ignoring '!.omx' vendor-extension sentinel\" }\n+c$oMx foo  ! { dg-warning \"Ignoring '!.omx' vendor-extension sentinel\" }\n+c$OMx foo  ! { dg-warning \"Ignoring '!.omx' vendor-extension sentinel\" }\n+*$oMx foo  ! { dg-warning \"Ignoring '!.omx' vendor-extension sentinel\" }\n+*$OMx foo  ! { dg-warning \"Ignoring '!.omx' vendor-extension sentinel\" }\n+      end"}, {"sha": "3dc467aade022b0f525a1d60d353aeef920d144b", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264deecb16abcfc8ca8efe9b94b0ad55febd55cc/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "patch": "@@ -361,7 +361,13 @@ to address of matching mapped list item per 5.1, Sect. 2.21.7.2 @tab N @tab\n @item @code{omp_in_explicit_task} routine and @emph{implicit-task-var} ICV\n       @tab N @tab\n @item @code{omp}/@code{ompx}/@code{omx} sentinels and @code{omp_}/@code{ompx_}\n-      namespaces @tab N/A @tab\n+      namespaces @tab N/A\n+      @tab warning for @code{omp/ompx} sentinels@footnote{@code{omp/ompx}\n+      sentinels as C/C++ pragma and C++ attributes are warned for with\n+      @code{-Wunknown-pragmas} (implied by @code{-Wall}) and @code{-Wattributes}\n+      (enabled by default), respectively; for Fortran free-source code, there is\n+      a warning enabled by default and for fixed-source code with\n+      @code{-Wsurprising} (enabled by @code{-Wall})}\n @item Clauses on @code{end} directive can be on directive @tab N @tab\n @item Deprecation of no-argument @code{destroy} clause on @code{depobj}\n       @tab N @tab"}]}