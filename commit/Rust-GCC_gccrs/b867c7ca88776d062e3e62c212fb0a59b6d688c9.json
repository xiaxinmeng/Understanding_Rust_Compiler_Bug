{"sha": "b867c7ca88776d062e3e62c212fb0a59b6d688c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg2N2M3Y2E4ODc3NmQwNjJlM2U2MmMyMTJmYjBhNTliNmQ2ODhjOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-10-09T16:53:37Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-10-09T16:53:37Z"}, "message": "* config/i386/i386.c\n\t(expand_set_or_movmem_prologue_epilogue_by_misaligned_moves): Use\n\tROUND_DOWN where applicable.\n\nFrom-SVN: r228665", "tree": {"sha": "77cf1720a2447828ca9bb5250e1aead280c6612d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77cf1720a2447828ca9bb5250e1aead280c6612d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b867c7ca88776d062e3e62c212fb0a59b6d688c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b867c7ca88776d062e3e62c212fb0a59b6d688c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b867c7ca88776d062e3e62c212fb0a59b6d688c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b867c7ca88776d062e3e62c212fb0a59b6d688c9/comments", "author": null, "committer": null, "parents": [{"sha": "7532abf27b205c73ffc29ea7b724b40ff3bce461", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7532abf27b205c73ffc29ea7b724b40ff3bce461", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7532abf27b205c73ffc29ea7b724b40ff3bce461"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "f7b9e9f5c3997fd5ffb9a471e6106008380a3a67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b867c7ca88776d062e3e62c212fb0a59b6d688c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b867c7ca88776d062e3e62c212fb0a59b6d688c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b867c7ca88776d062e3e62c212fb0a59b6d688c9", "patch": "@@ -1,3 +1,9 @@\n+2015-10-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c\n+\t(expand_set_or_movmem_prologue_epilogue_by_misaligned_moves): Use\n+\tROUND_DOWN where applicable.\n+\n 2015-10-09  Jeff Law  <law@redhat.com>\n \n \t* tree-vect-stmts.c (free_stmt_vec_info): Free the LHS of the\n@@ -224,7 +230,7 @@\n \n \t* tree-ssa-dom.c (optimize_stmt): Don't set LOOPS_NEED_FIXUP here.\n \t* tree-ssa-threadupdate.c (remove_ctrl_stmt_and_useless_edges): Do it\n-\there instead.  Tighten test to avoid setting LOOPS_NEED_FIXUP \n+\there instead.  Tighten test to avoid setting LOOPS_NEED_FIXUP\n \tunnecessarily.\n \n 2015-10-07  Aditya Kumar  <aditya.k7@samsung.com>"}, {"sha": "419966d8d4fb9ea680bf625835acfc056e9e12af", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b867c7ca88776d062e3e62c212fb0a59b6d688c9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b867c7ca88776d062e3e62c212fb0a59b6d688c9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b867c7ca88776d062e3e62c212fb0a59b6d688c9", "patch": "@@ -25564,7 +25564,8 @@ expand_set_or_movmem_prologue_epilogue_by_misaligned_moves (rtx destmem, rtx src\n \t\t\t\t    saveddest, *count, 1, OPTAB_DIRECT);\n       /* We copied at most size + prolog_size.  */\n       if (*min_size > (unsigned HOST_WIDE_INT)(size + prolog_size))\n-\t*min_size = (*min_size - size) & ~(unsigned HOST_WIDE_INT)(size - 1);\n+\t*min_size\n+\t  = ROUND_DOWN (*min_size - size, (unsigned HOST_WIDE_INT)size);\n       else\n \t*min_size = 0;\n \n@@ -25582,9 +25583,10 @@ expand_set_or_movmem_prologue_epilogue_by_misaligned_moves (rtx destmem, rtx src\n \t*count = expand_simple_binop (GET_MODE (*count), PLUS, *count,\n \t\t\t\t      constm1_rtx, *count, 1, OPTAB_DIRECT);\n       else\n-\t*count = GEN_INT ((UINTVAL (*count) - 1) & ~(unsigned HOST_WIDE_INT)(size - 1));\n+\t*count = GEN_INT (ROUND_DOWN (UINTVAL (*count) - 1,\n+\t\t\t\t      (unsigned HOST_WIDE_INT)size));\n       if (*min_size)\n-\t*min_size = (*min_size - 1) & ~(unsigned HOST_WIDE_INT)(size - 1);\n+\t*min_size = ROUND_DOWN (*min_size - 1, (unsigned HOST_WIDE_INT)size);\n     }\n }\n "}]}