{"sha": "1af3e06beef2bc9769d0c3bc2f2e7dce549f8305", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFmM2UwNmJlZWYyYmM5NzY5ZDBjM2JjMmYyZTdkY2U1NDlmODMwNQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-06-28T08:27:29Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-06-28T08:27:29Z"}, "message": "2003-06-28  Michael Koch  <konqueror@gmx.de>\n\n\t* java/io/PrintStream.java\n\t(checkError): Call flush() instead of direct flushing of the Writer\n\tobject.\n\t(print): Call print(String) instead of direct print method of the\n\tWriter Object.\n\t(println): Call println(String) instead of direct println method of the\n\tWriter Object.\n\t(write): Simplified.\n\nFrom-SVN: r68632", "tree": {"sha": "3beec293320a6f168abbe10e0734c206c544e9d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3beec293320a6f168abbe10e0734c206c544e9d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1af3e06beef2bc9769d0c3bc2f2e7dce549f8305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1af3e06beef2bc9769d0c3bc2f2e7dce549f8305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1af3e06beef2bc9769d0c3bc2f2e7dce549f8305", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1af3e06beef2bc9769d0c3bc2f2e7dce549f8305/comments", "author": null, "committer": null, "parents": [{"sha": "c5b49e898ee038d71d7c8b6f3c51fc53c35faa25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5b49e898ee038d71d7c8b6f3c51fc53c35faa25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5b49e898ee038d71d7c8b6f3c51fc53c35faa25"}], "stats": {"total": 84, "additions": 29, "deletions": 55}, "files": [{"sha": "9c2ae9eca4a144d8c6675464bc00947c6a4ab95f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1af3e06beef2bc9769d0c3bc2f2e7dce549f8305/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1af3e06beef2bc9769d0c3bc2f2e7dce549f8305/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=1af3e06beef2bc9769d0c3bc2f2e7dce549f8305", "patch": "@@ -1,3 +1,14 @@\n+2003-06-28  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/io/PrintStream.java\n+\t(checkError): Call flush() instead of direct flushing of the Writer\n+\tobject.\n+\t(print): Call print(String) instead of direct print method of the\n+\tWriter Object.\n+\t(println): Call println(String) instead of direct println method of the\n+\tWriter Object.\n+\t(write): Simplified.\n+\n 2003-06-28  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/ServerSocket.java"}, {"sha": "94800150870e246baca900d80b737a4ca9f6669b", "filename": "libjava/java/io/PrintStream.java", "status": "modified", "additions": 18, "deletions": 55, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1af3e06beef2bc9769d0c3bc2f2e7dce549f8305/libjava%2Fjava%2Fio%2FPrintStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1af3e06beef2bc9769d0c3bc2f2e7dce549f8305/libjava%2Fjava%2Fio%2FPrintStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPrintStream.java?ref=1af3e06beef2bc9769d0c3bc2f2e7dce549f8305", "patch": "@@ -58,17 +58,6 @@\n  */\n public class PrintStream extends FilterOutputStream\n {\n-  /*\n-   * This class could easily have been extended to support character\n-   * encodings.  In fact, PrintWriter is basically a superset of this\n-   * except for the write() methods.  So let's do something tricky\n-   * here and just redirect calls in this class to a hidden\n-   * PrintWriter instance.  All the functionality goes there since\n-   * that is the 'real' class.  The big win of doing this way is that\n-   * the default character encoding is done automagicially by the\n-   * PrintWriter tree!\n-   */\n-\n   /**\n    * This boolean indicates whether or not an error has ever occurred\n    * on this stream.\n@@ -155,7 +144,7 @@ public PrintStream (OutputStream out, boolean auto_flush, String encoding)\n   public boolean checkError ()\n   {\n     if (!closed)\n-      pw.flush ();\n+      flush ();\n \n     return error_occurred | pw.checkError ();\n   }\n@@ -196,7 +185,7 @@ public void flush ()\n    */\n   public void print (boolean bool)\n   {\n-    pw.print (bool);\n+    print (String.valueOf (bool));\n   }\n \n   /**\n@@ -207,7 +196,7 @@ public void print (boolean bool)\n    */\n   public void print (int inum)\n   {\n-    pw.print (inum);\n+    print (String.valueOf (inum));\n   }\n \n   /**\n@@ -218,7 +207,7 @@ public void print (int inum)\n    */\n   public void print (long lnum)\n   {\n-    pw.print (lnum);\n+    print (String.valueOf (lnum));\n   }\n \n   /**\n@@ -229,7 +218,7 @@ public void print (long lnum)\n    */\n   public void print (float fnum)\n   {\n-    pw.print (fnum);\n+    print (String.valueOf (fnum));\n   }\n \n   /**\n@@ -240,7 +229,7 @@ public void print (float fnum)\n    */\n   public void print (double dnum)\n   {\n-    pw.print (dnum);\n+    print (String.valueOf (dnum));\n   }\n \n   /**\n@@ -281,12 +270,7 @@ public void print (String str)\n    */\n   public void print (char ch)\n   {\n-    pw.print (ch);\n-\n-    if (auto_flush)\n-      if ((ch == '\\r')\n-          || (ch == '\\n'))\n-        flush ();    \n+    print (String.valueOf (ch));\n   }\n \n   /**\n@@ -298,15 +282,6 @@ public void print (char ch)\n   public void print (char[] charArray)\n   {\n     pw.print (charArray);\n-\n-    if (auto_flush)\n-      for (int i = 0; i < charArray.length; i++)\n-        if ((charArray [i] == '\\r')\n-            || (charArray [i] == '\\n'))\n-          {\n-            flush ();\n-            break;\n-          }\n   }\n \n   /**\n@@ -316,7 +291,7 @@ public void print (char[] charArray)\n    */\n   public void println ()\n   {\n-    pw.println ();\n+    pw.println();\n   }\n \n   /**\n@@ -330,7 +305,7 @@ public void println ()\n    */\n   public void println (boolean bool)\n   {\n-    pw.println (bool);\n+    println (String.valueOf (bool));\n   }\n \n   /**\n@@ -343,7 +318,7 @@ public void println (boolean bool)\n    */\n   public void println (int inum)\n   {\n-    pw.println (inum);\n+    println (String.valueOf (inum));\n   }\n \n   /**\n@@ -356,7 +331,7 @@ public void println (int inum)\n    */\n   public void println (long lnum)\n   {\n-    pw.println (lnum);\n+    println (String.valueOf (lnum));\n   }\n \n   /**\n@@ -369,7 +344,7 @@ public void println (long lnum)\n    */\n   public void println (float fnum)\n   {\n-    pw.println (fnum);\n+    println (String.valueOf (fnum));\n   }\n \n   /**\n@@ -382,7 +357,7 @@ public void println (float fnum)\n    */\n   public void println (double dnum)\n   {\n-    pw.println (dnum);\n+    println (String.valueOf (dnum));\n   }\n \n   /**\n@@ -396,7 +371,7 @@ public void println (double dnum)\n    */\n   public void println (Object obj)\n   {\n-    pw.println (obj);\n+    println (String.valueOf (obj));\n   }\n \n   /**\n@@ -422,7 +397,7 @@ public void println (String str)\n    */\n   public void println (char ch)\n   {\n-    pw.println (ch);\n+    println (String.valueOf (ch));\n   }\n \n   /**\n@@ -447,21 +422,9 @@ public void println (char[] charArray)\n    */\n   public void write (int oneByte)\n   {\n-    // Sigh, we actually have to implement this method. Flush first so that\n-    // things get written in the right order.\n-    flush ();\n-\n-    try\n-      {\n-        out.write (oneByte);\n-\n-        if (auto_flush && oneByte == '\\n')\n-          flush ();\n-      }\n-    catch (IOException e)\n-      {\n-        setError ();\n-      }\n+    byte[] data = new byte [1];\n+    data [0] = (byte) (oneByte & 0xff);\n+    write (data, 0, 1);\n   }\n \n   /**"}]}