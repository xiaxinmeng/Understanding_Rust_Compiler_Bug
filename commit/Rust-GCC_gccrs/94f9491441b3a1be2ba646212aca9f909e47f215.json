{"sha": "94f9491441b3a1be2ba646212aca9f909e47f215", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRmOTQ5MTQ0MWIzYTFiZTJiYTY0NjIxMmFjYTlmOTA5ZTQ3ZjIxNQ==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-04-26T00:44:18Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-04-26T00:44:18Z"}, "message": "Revert my patch for mingw32.\n\nFrom-SVN: r134692", "tree": {"sha": "5e9aab1588c95d3800fa64b6f0c2cea9985034ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e9aab1588c95d3800fa64b6f0c2cea9985034ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94f9491441b3a1be2ba646212aca9f909e47f215", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f9491441b3a1be2ba646212aca9f909e47f215", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94f9491441b3a1be2ba646212aca9f909e47f215", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f9491441b3a1be2ba646212aca9f909e47f215/comments", "author": null, "committer": null, "parents": [{"sha": "c818d0196384dfd7af19533be9b4ca912db685a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c818d0196384dfd7af19533be9b4ca912db685a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c818d0196384dfd7af19533be9b4ca912db685a4"}], "stats": {"total": 28, "additions": 0, "deletions": 28}, "files": [{"sha": "374615b45463609bfd52650a85b947898a2e9742", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f9491441b3a1be2ba646212aca9f909e47f215/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f9491441b3a1be2ba646212aca9f909e47f215/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94f9491441b3a1be2ba646212aca9f909e47f215", "patch": "@@ -1,10 +1,3 @@\n-2008-04-25  Kai Tietz  <kai.tietz@onevision.com>\n-\n-\t* config/i386/mingw32.h (SUBTARGET_INIT_BUILTINS): New.\n-\t* config/i386/i386.c (ix86_init_builtins): Use of\n-\tSUBTARGET_INIT_BUILTINS.\n-\tAdd include of c-common.h for builtin.\n-\n 2008-04-25  Jan Hubicka  <jh@suse.cz>\n \n \tPR testsuite/35843"}, {"sha": "dee2410757d9c3ca1d6b5dbc7519a0e43c4f4bf6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f9491441b3a1be2ba646212aca9f909e47f215/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f9491441b3a1be2ba646212aca9f909e47f215/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=94f9491441b3a1be2ba646212aca9f909e47f215", "patch": "@@ -19807,10 +19807,6 @@ ix86_init_builtins (void)\n {\n   if (TARGET_MMX)\n     ix86_init_mmx_sse_builtins ();\n-\n-#ifdef SUBTARGET_INIT_BUILTINS\n-  SUBTARGET_INIT_BUILTINS;\n-#endif\n }\n \n /* Errors in the source file can cause expand_expr to return const0_rtx"}, {"sha": "3a3b74cf8be8c7a88fab8fcb9c0e55c9bb4e8fc4", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f9491441b3a1be2ba646212aca9f909e47f215/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f9491441b3a1be2ba646212aca9f909e47f215/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=94f9491441b3a1be2ba646212aca9f909e47f215", "patch": "@@ -180,23 +180,6 @@ __enable_execute_stack (void *addr)\t\t\t\t\t\\\n #undef ENABLE_EXECUTE_STACK\n #define ENABLE_EXECUTE_STACK MINGW_ENABLE_EXECUTE_STACK\n \n-#define SUBTARGET_INIT_BUILTINS\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\\\n-  if (TARGET_64BIT_MS_ABI)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-\t  /* These builtin functions have a different return\t\\\n-\t     type (intptr_t) on 64-bit MS Windows.  */\t\t\\\n-\t  disable_builtin_function (\"execl\");\t\t\t\\\n-\t  disable_builtin_function (\"execlp\");\t\t\t\\\n-\t  disable_builtin_function (\"execle\");\t\t\t\\\n-\t  disable_builtin_function (\"execv\");\t\t\t\\\n-\t  disable_builtin_function (\"execvp\");\t\t\t\\\n-\t  disable_builtin_function (\"execve\");\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  /* Second argument of MS scalb is long, not double. */\t\\\n-  disable_builtin_function (\"scalb\");\t\t\t\t\\\n-} while (0)                                                     \\\n-\n #ifdef IN_LIBGCC2\n #include <windows.h>\n #endif"}]}