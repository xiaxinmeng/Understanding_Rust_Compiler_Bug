{"sha": "2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA2NmVmNmFjOGNkM2UwNGY0NmI5ZmNlZWI3YjhkMTZlZmY2MmNmMw==", "commit": {"author": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2016-10-20T07:55:28Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh3492@gcc.gnu.org", "date": "2016-10-20T07:55:28Z"}, "message": "re PR tree-optimization/53979 (((a ^ b) | a) not optimized to (a | b))\n\n2016-10-20  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n\n\tPR tree-optimization/53979\n\t* match.pd ((a ^ b) | a -> a | b): New pattern.\n\ntestsuite/\n\t* gcc.dg/pr53979-1.c: New test-case.\n\t* gcc.dg/pr53979-2.c: Likewise.\n\nFrom-SVN: r241360", "tree": {"sha": "c4c0b7c3c40fd68c97f751d828328f8ef3fc6de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4c0b7c3c40fd68c97f751d828328f8ef3fc6de5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3/comments", "author": null, "committer": null, "parents": [{"sha": "d480863abb1e4ed178fcc906969008c37fc68f60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d480863abb1e4ed178fcc906969008c37fc68f60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d480863abb1e4ed178fcc906969008c37fc68f60"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "d4779690e9eb7d97f02d6e8e7a12b37badf54960", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3", "patch": "@@ -1,3 +1,8 @@\n+2016-10-20  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\tPR tree-optimization/53979\n+\t* match.pd ((a ^ b) | a -> a | b): New pattern.\n+\n 2016-10-19  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/pa/pa64-hpux.h (PA_INIT_FRAME_DUMMY_ASM_OP): Move to"}, {"sha": "78884591c8fba331544431351495253480abdb42", "filename": "gcc/match.pd", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3", "patch": "@@ -541,6 +541,12 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (bit_ior:c (bit_and @0 INTEGER_CST@2) (bit_and (bit_not @0) INTEGER_CST@1))\n  (if (wi::bit_not (@2) == @1)\n   (bit_xor @0 @1)))\n+\n+/* PR53979: Transform ((a ^ b) | a) -> (a | b) */\n+(simplify\n+  (bit_ior:c (bit_xor:c @0 @1) @0)\n+  (bit_ior @0 @1))\n+\n /* Simplify (~X & Y) to X ^ Y if we know that (X & ~Y) is 0.  */\n #if GIMPLE\n (simplify"}, {"sha": "152b1b26bbaf673c284889c73ade64c207d56e43", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3", "patch": "@@ -1,3 +1,9 @@\n+2016-10-20  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\tPR tree-optimization/53979\n+\t* gcc.dg/pr53979-1.c: New test-case.\n+\t* gcc.dg/pr53979-2.c: Likewise.\n+\n 2016-10-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* c-c++-common/Wint-in-bool-context-2.c: New test."}, {"sha": "aee54f52378c985542a4c62b36e1045a61c17bbb", "filename": "gcc/testsuite/gcc.dg/pr53979-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53979-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53979-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53979-1.c?ref=2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-gimple\" } */\n+\n+unsigned f1(unsigned a, unsigned b)\n+{\n+  return (a ^ b) | a; \n+}\n+\n+/* { dg-final { scan-tree-dump \"a | b\" \"gimple\" } } */"}, {"sha": "be2607aea391254396b7342a3851f328a457e826", "filename": "gcc/testsuite/gcc.dg/pr53979-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53979-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53979-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53979-2.c?ref=2066ef6ac8cd3e04f46b9fceeb7b8d16eff62cf3", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-forwprop-details\" } */\n+\n+unsigned f(unsigned a, unsigned b)\n+{\n+  unsigned t1 = a ^ b;\n+  unsigned t2 = t1 | a;\n+  return t2;\n+}\n+\n+/* { dg-final { scan-tree-dump \"gimple_simplified to t2_\\[0-9\\] = a_\\[0-9\\]*\\\\(D\\\\) | b_\\[0-9\\]*\\\\(D\\\\)\" \"forwprop1\" } } */"}]}