{"sha": "0676c39392eb5fb5868b89e8627496167d5b9bf8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY3NmMzOTM5MmViNWZiNTg2OGI4OWU4NjI3NDk2MTY3ZDViOWJmOA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2009-05-23T17:56:14Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2009-05-23T17:56:14Z"}, "message": "final.c (shorten_branches): Do not align labels for jump tables.\n\n\t* final.c (shorten_branches): Do not align labels for jump tables.\n\t(final_scan_insn): Use JUMP_TABLE_DATA_P.\n\n\t* gcc.dg/falign-labels-1.c: New test.\n\nCo-Authored-By: Maxim Kuvyrkov <maxim@codesourcery.com>\n\nFrom-SVN: r147824", "tree": {"sha": "0a9977b1a4b5eab728f17f573225f95024883d98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a9977b1a4b5eab728f17f573225f95024883d98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0676c39392eb5fb5868b89e8627496167d5b9bf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0676c39392eb5fb5868b89e8627496167d5b9bf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0676c39392eb5fb5868b89e8627496167d5b9bf8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0676c39392eb5fb5868b89e8627496167d5b9bf8/comments", "author": null, "committer": null, "parents": [{"sha": "94324dae550a37823711fad728cbc0b045c7d9f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94324dae550a37823711fad728cbc0b045c7d9f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94324dae550a37823711fad728cbc0b045c7d9f7"}], "stats": {"total": 142, "additions": 92, "deletions": 50}, "files": [{"sha": "6cdbee7ec8e791e0bfd75b3911806dca9265a8a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0676c39392eb5fb5868b89e8627496167d5b9bf8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0676c39392eb5fb5868b89e8627496167d5b9bf8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0676c39392eb5fb5868b89e8627496167d5b9bf8", "patch": "@@ -1,3 +1,8 @@\n+2009-05-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* final.c (shorten_branches): Do not align labels for jump tables.\n+\t(final_scan_insn): Use JUMP_TABLE_DATA_P.\n+\n 2009-05-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* doc/passes.texi: Standardize spelling of RTL, Tree and Tree SSA."}, {"sha": "2f68ee8431e940cfc1c3349cef9714117d1b97b9", "filename": "gcc/final.c", "status": "modified", "additions": 43, "deletions": 50, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0676c39392eb5fb5868b89e8627496167d5b9bf8/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0676c39392eb5fb5868b89e8627496167d5b9bf8/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=0676c39392eb5fb5868b89e8627496167d5b9bf8", "patch": "@@ -901,6 +901,7 @@ shorten_branches (rtx first ATTRIBUTE_UNUSED)\n       if (LABEL_P (insn))\n \t{\n \t  rtx next;\n+\t  bool next_is_jumptable;\n \n \t  /* Merge in alignments computed by compute_alignments.  */\n \t  log = LABEL_TO_ALIGNMENT (insn);\n@@ -910,31 +911,30 @@ shorten_branches (rtx first ATTRIBUTE_UNUSED)\n \t      max_skip = LABEL_TO_MAX_SKIP (insn);\n \t    }\n \n-\t  log = LABEL_ALIGN (insn);\n-\t  if (max_log < log)\n+\t  next = next_nonnote_insn (insn);\n+\t  next_is_jumptable = next && JUMP_TABLE_DATA_P (next);\n+\t  if (!next_is_jumptable)\n \t    {\n-\t      max_log = log;\n-\t      max_skip = LABEL_ALIGN_MAX_SKIP;\n+\t      log = LABEL_ALIGN (insn);\n+\t      if (max_log < log)\n+\t\t{\n+\t\t  max_log = log;\n+\t\t  max_skip = LABEL_ALIGN_MAX_SKIP;\n+\t\t}\n \t    }\n-\t  next = next_nonnote_insn (insn);\n \t  /* ADDR_VECs only take room if read-only data goes into the text\n \t     section.  */\n-\t  if (JUMP_TABLES_IN_TEXT_SECTION\n-\t      || readonly_data_section == text_section)\n-\t    if (next && JUMP_P (next))\n-\t      {\n-\t\trtx nextbody = PATTERN (next);\n-\t\tif (GET_CODE (nextbody) == ADDR_VEC\n-\t\t    || GET_CODE (nextbody) == ADDR_DIFF_VEC)\n-\t\t  {\n-\t\t    log = ADDR_VEC_ALIGN (next);\n-\t\t    if (max_log < log)\n-\t\t      {\n-\t\t\tmax_log = log;\n-\t\t\tmax_skip = LABEL_ALIGN_MAX_SKIP;\n-\t\t      }\n-\t\t  }\n-\t      }\n+\t  if ((JUMP_TABLES_IN_TEXT_SECTION\n+\t       || readonly_data_section == text_section)\n+\t      && next_is_jumptable)\n+\t    {\n+\t      log = ADDR_VEC_ALIGN (next);\n+\t      if (max_log < log)\n+\t\t{\n+\t\t  max_log = log;\n+\t\t  max_skip = LABEL_ALIGN_MAX_SKIP;\n+\t\t}\n+\t    }\n \t  LABEL_TO_ALIGNMENT (insn) = max_log;\n \t  LABEL_TO_MAX_SKIP (insn) = max_skip;\n \t  max_log = 0;\n@@ -2023,48 +2023,41 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n       app_disable ();\n \n       next = next_nonnote_insn (insn);\n-      if (next != 0 && JUMP_P (next))\n+      /* If this label is followed by a jump-table, make sure we put\n+\t the label in the read-only section.  Also possibly write the\n+\t label and jump table together.  */\n+      if (next != 0 && JUMP_TABLE_DATA_P (next))\n \t{\n-\t  rtx nextbody = PATTERN (next);\n-\n-\t  /* If this label is followed by a jump-table,\n-\t     make sure we put the label in the read-only section.  Also\n-\t     possibly write the label and jump table together.  */\n-\n-\t  if (GET_CODE (nextbody) == ADDR_VEC\n-\t      || GET_CODE (nextbody) == ADDR_DIFF_VEC)\n-\t    {\n #if defined(ASM_OUTPUT_ADDR_VEC) || defined(ASM_OUTPUT_ADDR_DIFF_VEC)\n-\t      /* In this case, the case vector is being moved by the\n-\t\t target, so don't output the label at all.  Leave that\n-\t\t to the back end macros.  */\n+\t  /* In this case, the case vector is being moved by the\n+\t     target, so don't output the label at all.  Leave that\n+\t     to the back end macros.  */\n #else\n-\t      if (! JUMP_TABLES_IN_TEXT_SECTION)\n-\t\t{\n-\t\t  int log_align;\n+\t  if (! JUMP_TABLES_IN_TEXT_SECTION)\n+\t    {\n+\t      int log_align;\n \n-\t\t  switch_to_section (targetm.asm_out.function_rodata_section\n-\t\t\t\t     (current_function_decl));\n+\t      switch_to_section (targetm.asm_out.function_rodata_section\n+\t\t\t\t (current_function_decl));\n \n #ifdef ADDR_VEC_ALIGN\n-\t\t  log_align = ADDR_VEC_ALIGN (next);\n+\t      log_align = ADDR_VEC_ALIGN (next);\n #else\n-\t\t  log_align = exact_log2 (BIGGEST_ALIGNMENT / BITS_PER_UNIT);\n+\t      log_align = exact_log2 (BIGGEST_ALIGNMENT / BITS_PER_UNIT);\n #endif\n-\t\t  ASM_OUTPUT_ALIGN (file, log_align);\n-\t\t}\n-\t      else\n-\t\tswitch_to_section (current_function_section ());\n+\t      ASM_OUTPUT_ALIGN (file, log_align);\n+\t    }\n+\t  else\n+\t    switch_to_section (current_function_section ());\n \n #ifdef ASM_OUTPUT_CASE_LABEL\n-\t      ASM_OUTPUT_CASE_LABEL (file, \"L\", CODE_LABEL_NUMBER (insn),\n-\t\t\t\t     next);\n+\t  ASM_OUTPUT_CASE_LABEL (file, \"L\", CODE_LABEL_NUMBER (insn),\n+\t\t\t\t next);\n #else\n-\t      targetm.asm_out.internal_label (file, \"L\", CODE_LABEL_NUMBER (insn));\n+\t  targetm.asm_out.internal_label (file, \"L\", CODE_LABEL_NUMBER (insn));\n #endif\n #endif\n-\t      break;\n-\t    }\n+\t  break;\n \t}\n       if (LABEL_ALT_ENTRY_P (insn))\n \toutput_alternate_entry_point (file, insn);"}, {"sha": "06d2dc3a873451aac606e299897303b6ba852748", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0676c39392eb5fb5868b89e8627496167d5b9bf8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0676c39392eb5fb5868b89e8627496167d5b9bf8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0676c39392eb5fb5868b89e8627496167d5b9bf8", "patch": "@@ -1,3 +1,8 @@\n+2009-05-23  Mark Mitchell  <mark@codesourcery.com>\n+\t    Maxim Kuvyrkov  <maxim@codesourcery.com>\n+\n+\t* gcc.dg/falign-labels-1.c: New test.\n+\n 2009-05-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/rep_clause3.ads: New test."}, {"sha": "1e9661790e3005af9586575e5479fbad92ffe19b", "filename": "gcc/testsuite/gcc.dg/falign-labels-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0676c39392eb5fb5868b89e8627496167d5b9bf8/gcc%2Ftestsuite%2Fgcc.dg%2Ffalign-labels-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0676c39392eb5fb5868b89e8627496167d5b9bf8/gcc%2Ftestsuite%2Fgcc.dg%2Ffalign-labels-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffalign-labels-1.c?ref=0676c39392eb5fb5868b89e8627496167d5b9bf8", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do run } */\n+/* { dg-options \"-falign-labels=8\" { target { ! { m68k*-*-* || fido*-*-* } } } } */\n+\n+/* On ARMv7-A CPUs, this test resulted in incorrect code generation.\n+   The code generated for the switch statement expected the jump table\n+   to immediately follow the jump instruction, but -falign-labels\n+   caused the label preceding the table to be aligned.  */\n+/* M68K and fido only support -falign-labels argument <= 2.  */\n+\n+volatile int x;\n+\n+int main(void)\n+{\n+  int y;\n+\n+  x = 0;\n+\n+  switch(x)\n+    {\n+    case 0:\n+      y = 2 * x;\n+      break;\n+    case 1:\n+      y = -3 * x;\n+      break;\n+    case 2:\n+      y = x + 5;\n+      break;\n+    case 3:\n+      y = x - 7;\n+      break;\n+    default:\n+      break;\n+    }\n+\n+  x = y;\n+\n+  return 0;\n+}"}]}