{"sha": "12e1243e426a12358e793cef2735e77c37452ec7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJlMTI0M2U0MjZhMTIzNThlNzkzY2VmMjczNWU3N2MzNzQ1MmVjNw==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2000-11-15T14:39:14Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2000-11-15T14:39:14Z"}, "message": "tree.c (build_type_no_quals): New function.\n\n2000-11-13  Andrew Haley  <aph@redhat.com>\n\n        * tree.c (build_type_no_quals): New function.\n        * tree.h (build_type_no_quals): Declare.\n        * c-common.c (c_get_alias_set): When considering type\n        compatibility for pointer types, ignore cv-qualifiers anywhere in\n        a pointer chain.\n\nFrom-SVN: r37479", "tree": {"sha": "125e489e2c90a52e691eac99b293650f052b66f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/125e489e2c90a52e691eac99b293650f052b66f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12e1243e426a12358e793cef2735e77c37452ec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e1243e426a12358e793cef2735e77c37452ec7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12e1243e426a12358e793cef2735e77c37452ec7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e1243e426a12358e793cef2735e77c37452ec7/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "71631a1f1ce6cba9b823cb48a2bff17e97e2664f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71631a1f1ce6cba9b823cb48a2bff17e97e2664f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71631a1f1ce6cba9b823cb48a2bff17e97e2664f"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "69ad2e9d1682ce278ea142f605f8c01f7f0bd83e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e1243e426a12358e793cef2735e77c37452ec7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e1243e426a12358e793cef2735e77c37452ec7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12e1243e426a12358e793cef2735e77c37452ec7", "patch": "@@ -1,3 +1,11 @@\n+2000-11-13  Andrew Haley  <aph@redhat.com>\n+\n+\t* tree.c (build_type_no_quals): New function.\n+\t* tree.h (build_type_no_quals): Declare.\n+\t* c-common.c (c_get_alias_set): When considering type\n+\tcompatibility for pointer types, ignore cv-qualifiers anywhere in\n+\ta pointer chain.\n+\n 2000-11-15  Graham Stott  <grahams@redhat.com>\n \n \t* regrename.c (scan_rtx_rtx): Skip to the next chain on"}, {"sha": "50620f0ec6a457d3d4a66be421a9b7be751a9be1", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e1243e426a12358e793cef2735e77c37452ec7/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e1243e426a12358e793cef2735e77c37452ec7/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=12e1243e426a12358e793cef2735e77c37452ec7", "patch": "@@ -4794,9 +4794,7 @@ lang_get_alias_set (t)\n \t can dereference IPP and CIPP.  So, we ignore cv-qualifiers on\n \t the pointed-to types.  This issue has been reported to the\n \t C++ committee.  */\n-      t1 = TYPE_MAIN_VARIANT (TREE_TYPE (t));\n-      t1 = ((TREE_CODE (t) == POINTER_TYPE)\n-\t   ? build_pointer_type (t1) : build_reference_type (t1));\n+      t1 = build_type_no_quals (t);\n       if (t1 != t)\n \treturn get_alias_set (t1);\n     }"}, {"sha": "7e820f559cee3a1bba209d5731c8c992593c1b08", "filename": "gcc/tree.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e1243e426a12358e793cef2735e77c37452ec7/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e1243e426a12358e793cef2735e77c37452ec7/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=12e1243e426a12358e793cef2735e77c37452ec7", "patch": "@@ -3798,6 +3798,26 @@ build_reference_type (to_type)\n   return t;\n }\n \n+/* Build a type that is compatible with t but has no cv quals anywhere\n+   in its type, thus\n+\n+   const char *const *const *  ->  char ***.  */\n+\n+tree\n+build_type_no_quals (t)\n+  tree t;\n+{\n+  switch (TREE_CODE (t))\n+    {\n+    case POINTER_TYPE:\n+      return build_pointer_type (build_type_no_quals (TREE_TYPE (t)));\n+    case REFERENCE_TYPE:\n+      return build_reference_type (build_type_no_quals (TREE_TYPE (t)));\n+    default:\n+      return TYPE_MAIN_VARIANT (t);\n+    }\n+}\n+\n /* Create a type of integers to be the TYPE_DOMAIN of an ARRAY_TYPE.\n    MAXVAL should be the maximum value in the domain\n    (one less than the length of the array)."}, {"sha": "a264df4fbdc0f012cb879b71a930f62f9fe6aff0", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e1243e426a12358e793cef2735e77c37452ec7/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e1243e426a12358e793cef2735e77c37452ec7/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=12e1243e426a12358e793cef2735e77c37452ec7", "patch": "@@ -1923,6 +1923,7 @@ extern tree signed_or_unsigned_type \tPARAMS ((int, tree));\n extern void fixup_unsigned_type\t\tPARAMS ((tree));\n extern tree build_pointer_type\t\tPARAMS ((tree));\n extern tree build_reference_type \tPARAMS ((tree));\n+extern tree build_type_no_quals \tPARAMS ((tree));\n extern tree build_index_type\t\tPARAMS ((tree));\n extern tree build_index_2_type\t\tPARAMS ((tree, tree));\n extern tree build_array_type\t\tPARAMS ((tree, tree));"}]}