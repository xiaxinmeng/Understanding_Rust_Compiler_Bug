{"sha": "cb2f563be758d2ca93457cb15f21084c8e259cfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IyZjU2M2JlNzU4ZDJjYTkzNDU3Y2IxNWYyMTA4NGM4ZTI1OWNmYQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2007-11-24T22:15:54Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2007-11-24T22:15:54Z"}, "message": "rtlanal.c (label_is_jump_target_p): Return true for a matching REG_LABEL_TARGET.\n\n\t* rtlanal.c (label_is_jump_target_p): Return true for a matching\n\tREG_LABEL_TARGET.\n\t* reorg.c (fill_slots_from_thread): Correct last change to use\n\tNULL_RTX, not NULL.  Outside of REG_NOTES loop, increase and\n\tdecrease LABEL_NUSES for JUMP_LABEL (trial), not XEXP (note, 0).\n\t* jump.c (mark_jump_label_1): Add comment for last change\n\tregarding JUMP_LABEL setting.\n\t* gcse.c (add_label_notes): Remove conditional that the label is\n\tmentioned in insn before adding regnote.\n\t* sched-rgn.c (is_cfg_nonregular): Don't return 1 for a\n\tsingle_set insn only feeding a label to a jump through a\n\tregister that dies there.\n\nFrom-SVN: r130398", "tree": {"sha": "7dc842093d9a325576f2a5371a5f79eaf8125394", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dc842093d9a325576f2a5371a5f79eaf8125394"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb2f563be758d2ca93457cb15f21084c8e259cfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2f563be758d2ca93457cb15f21084c8e259cfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb2f563be758d2ca93457cb15f21084c8e259cfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2f563be758d2ca93457cb15f21084c8e259cfa/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54b42fe269b6e554090dbb7ecc25e245d0bd791c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54b42fe269b6e554090dbb7ecc25e245d0bd791c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54b42fe269b6e554090dbb7ecc25e245d0bd791c"}], "stats": {"total": 85, "additions": 64, "deletions": 21}, "files": [{"sha": "670c0ac04e8fd02bb7657b9ffa03cf0c0b528b6e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2f563be758d2ca93457cb15f21084c8e259cfa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2f563be758d2ca93457cb15f21084c8e259cfa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb2f563be758d2ca93457cb15f21084c8e259cfa", "patch": "@@ -1,3 +1,18 @@\n+2007-11-24  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* rtlanal.c (label_is_jump_target_p): Return true for a matching\n+\tREG_LABEL_TARGET.\n+\t* reorg.c (fill_slots_from_thread): Correct last change to use\n+\tNULL_RTX, not NULL.  Outside of REG_NOTES loop, increase and\n+\tdecrease LABEL_NUSES for JUMP_LABEL (trial), not XEXP (note, 0).\n+\t* jump.c (mark_jump_label_1): Add comment for last change\n+\tregarding JUMP_LABEL setting.\n+\t* gcse.c (add_label_notes): Remove conditional that the label is\n+\tmentioned in insn before adding regnote.\n+\t* sched-rgn.c (is_cfg_nonregular): Don't return 1 for a\n+\tsingle_set insn only feeding a label to a jump through a\n+\tregister that dies there.\n+\n 2007-11-23  Dirk Mueller  <dmueller@suse.de>\n \tRichard Guenther <rguenther@suse.de>\n "}, {"sha": "db7e03c03d9f45a97bb52361e0f1e220404bdcab", "filename": "gcc/gcse.c", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2f563be758d2ca93457cb15f21084c8e259cfa/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2f563be758d2ca93457cb15f21084c8e259cfa/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=cb2f563be758d2ca93457cb15f21084c8e259cfa", "patch": "@@ -4614,18 +4614,16 @@ add_label_notes (rtx x, rtx insn)\n \t We no longer ignore such label references (see LABEL_REF handling in\n \t mark_jump_label for additional information).  */\n \n-\tif (reg_mentioned_p (XEXP (x, 0), insn))\n-\t  {\n-\t    /* There's no reason for current users to emit jump-insns\n-\t       with such a LABEL_REF, so we don't have to handle\n-\t       REG_LABEL_TARGET notes.  */\n-\t    gcc_assert (!JUMP_P (insn));\n-\t    REG_NOTES (insn)\n-\t      = gen_rtx_INSN_LIST (REG_LABEL_OPERAND, XEXP (x, 0),\n-\t\t\t\t   REG_NOTES (insn));\n-\t    if (LABEL_P (XEXP (x, 0)))\n-\t      LABEL_NUSES (XEXP (x, 0))++;\n-\t  }\n+      /* There's no reason for current users to emit jump-insns with\n+\t such a LABEL_REF, so we don't have to handle REG_LABEL_TARGET\n+\t notes.  */\n+      gcc_assert (!JUMP_P (insn));\n+      REG_NOTES (insn)\n+\t= gen_rtx_INSN_LIST (REG_LABEL_OPERAND, XEXP (x, 0),\n+\t\t\t     REG_NOTES (insn));\n+      if (LABEL_P (XEXP (x, 0)))\n+\tLABEL_NUSES (XEXP (x, 0))++;\n+\n       return;\n     }\n "}, {"sha": "4564cd105ce2b90744048c1bc3546c5c4ce2169f", "filename": "gcc/jump.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2f563be758d2ca93457cb15f21084c8e259cfa/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2f563be758d2ca93457cb15f21084c8e259cfa/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=cb2f563be758d2ca93457cb15f21084c8e259cfa", "patch": "@@ -1051,6 +1051,9 @@ mark_jump_label_1 (rtx x, rtx insn, bool in_mem, bool is_target)\n \tif (insn)\n \t  {\n \t    if (is_target\n+\t\t/* Do not change a previous setting of JUMP_LABEL.  If the\n+\t\t   JUMP_LABEL slot is occupied by a different label,\n+\t\t   create a note for this label.  */\n \t\t&& (JUMP_LABEL (insn) == NULL || JUMP_LABEL (insn) == label))\n \t      JUMP_LABEL (insn) = label;\n \t    else"}, {"sha": "985c118bc8c5b7dd93333a2d67091a4e0e6942ee", "filename": "gcc/reorg.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2f563be758d2ca93457cb15f21084c8e259cfa/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2f563be758d2ca93457cb15f21084c8e259cfa/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=cb2f563be758d2ca93457cb15f21084c8e259cfa", "patch": "@@ -2740,7 +2740,7 @@ fill_slots_from_thread (rtx insn, rtx condition, rtx thread,\n \t\t\t temporarily increment the use count on any referenced\n \t\t\t label lest it be deleted by delete_related_insns.  */\n \t\t      for (note = REG_NOTES (trial);\n-\t\t\t   note != NULL;\n+\t\t\t   note != NULL_RTX;\n \t\t\t   note = XEXP (note, 1))\n \t\t\tif (REG_NOTE_KIND (note) == REG_LABEL_OPERAND\n \t\t\t    || REG_NOTE_KIND (note) == REG_LABEL_TARGET)\n@@ -2754,12 +2754,12 @@ fill_slots_from_thread (rtx insn, rtx condition, rtx thread,\n \t\t\t\t\t  == REG_LABEL_OPERAND);\n \t\t\t  }\n \t\t      if (JUMP_P (trial) && JUMP_LABEL (trial))\n-\t\t\tLABEL_NUSES (XEXP (note, 0))++;\n+\t\t\tLABEL_NUSES (JUMP_LABEL (trial))++;\n \n \t\t      delete_related_insns (trial);\n \n \t\t      for (note = REG_NOTES (trial);\n-\t\t\t   note != NULL;\n+\t\t\t   note != NULL_RTX;\n \t\t\t   note = XEXP (note, 1))\n \t\t\tif (REG_NOTE_KIND (note) == REG_LABEL_OPERAND\n \t\t\t    || REG_NOTE_KIND (note) == REG_LABEL_TARGET)\n@@ -2773,7 +2773,7 @@ fill_slots_from_thread (rtx insn, rtx condition, rtx thread,\n \t\t\t\t\t  == REG_LABEL_OPERAND);\n \t\t\t  }\n \t\t      if (JUMP_P (trial) && JUMP_LABEL (trial))\n-\t\t\tLABEL_NUSES (XEXP (note, 0))--;\n+\t\t\tLABEL_NUSES (JUMP_LABEL (trial))--;\n \t\t    }\n \t\t  else\n \t\t    new_thread = next_active_insn (trial);"}, {"sha": "d9e60d3b1ab7c0cd5139fbab3b367963bfd9b18f", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2f563be758d2ca93457cb15f21084c8e259cfa/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2f563be758d2ca93457cb15f21084c8e259cfa/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=cb2f563be758d2ca93457cb15f21084c8e259cfa", "patch": "@@ -3434,6 +3434,9 @@ label_is_jump_target_p (const_rtx label, const_rtx jump_insn)\n \t  return true;\n     }\n \n+  if (find_reg_note (jump_insn, REG_LABEL_TARGET, label))\n+    return true;\n+\n   return false;\n }\n "}, {"sha": "b340bd532e43e3d33517041ddc466a52e77520ed", "filename": "gcc/sched-rgn.c", "status": "modified", "additions": 29, "deletions": 5, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2f563be758d2ca93457cb15f21084c8e259cfa/gcc%2Fsched-rgn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2f563be758d2ca93457cb15f21084c8e259cfa/gcc%2Fsched-rgn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-rgn.c?ref=cb2f563be758d2ca93457cb15f21084c8e259cfa", "patch": "@@ -320,16 +320,40 @@ is_cfg_nonregular (void)\n   FOR_EACH_BB (b)\n     FOR_BB_INSNS (b, insn)\n       {\n-\t/* Check for labels referred to but (at least not directly) as\n-\t   jump targets.  */\n-\tif (INSN_P (insn)\n-\t    && find_reg_note (insn, REG_LABEL_OPERAND, NULL_RTX))\n-\t  return 1;\n+\trtx note, next, set, dest;\n \n \t/* If this function has a computed jump, then we consider the cfg\n \t   not well structured.  */\n \tif (JUMP_P (insn) && computed_jump_p (insn))\n \t  return 1;\n+\n+\tif (!INSN_P (insn))\n+\t  continue;\n+\n+\tnote = find_reg_note (insn, REG_LABEL_OPERAND, NULL_RTX);\n+\tif (note == NULL_RTX)\n+\t  continue;\n+\n+\t/* For that label not to be seen as a referred-to label, this\n+\t   must be a single-set which is feeding a jump *only*.  This\n+\t   could be a conditional jump with the label split off for\n+\t   machine-specific reasons or a casesi/tablejump.  */\n+\tnext = next_nonnote_insn (insn);\n+\tif (next == NULL_RTX\n+\t    || !JUMP_P (next)\n+\t    || (JUMP_LABEL (next) != XEXP (note, 0)\n+\t\t&& find_reg_note (next, REG_LABEL_TARGET,\n+\t\t\t\t  XEXP (note, 0)) == NULL_RTX)\n+\t    || BLOCK_FOR_INSN (insn) != BLOCK_FOR_INSN (next))\n+\t  return 1;\n+\n+\tset = single_set (insn);\n+\tif (set == NULL_RTX)\n+\t  return 1;\n+\n+\tdest = SET_DEST (set);\n+\tif (!REG_P (dest) || !dead_or_set_p (next, dest))\n+\t  return 1;\n       }\n \n   /* Unreachable loops with more than one basic block are detected"}]}