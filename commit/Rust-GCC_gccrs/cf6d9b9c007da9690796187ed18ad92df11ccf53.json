{"sha": "cf6d9b9c007da9690796187ed18ad92df11ccf53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y2ZDliOWMwMDdkYTk2OTA3OTYxODdlZDE4YWQ5MmRmMTFjY2Y1Mw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-13T05:41:28Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-13T05:41:28Z"}, "message": "(build_indirect_ref): If arg is void *, just warn.\n\nFrom-SVN: r3469", "tree": {"sha": "d8d6bd09c1ff31906ed5727ec1465db05b0c9929", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8d6bd09c1ff31906ed5727ec1465db05b0c9929"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf6d9b9c007da9690796187ed18ad92df11ccf53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf6d9b9c007da9690796187ed18ad92df11ccf53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf6d9b9c007da9690796187ed18ad92df11ccf53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf6d9b9c007da9690796187ed18ad92df11ccf53/comments", "author": null, "committer": null, "parents": [{"sha": "ee791cc34161060a95e45caaa903bbea504f0da2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee791cc34161060a95e45caaa903bbea504f0da2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee791cc34161060a95e45caaa903bbea504f0da2"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "e8a483a4108417956eaf43c5657fd46d9ddc9735", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6d9b9c007da9690796187ed18ad92df11ccf53/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6d9b9c007da9690796187ed18ad92df11ccf53/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=cf6d9b9c007da9690796187ed18ad92df11ccf53", "patch": "@@ -1119,12 +1119,13 @@ build_indirect_ref (ptr, errorstring)\n \tregister tree ref = build1 (INDIRECT_REF,\n \t\t\t\t    TYPE_MAIN_VARIANT (t), pointer);\n \n-\tif (TREE_CODE (t) == VOID_TYPE\n-\t    || (TYPE_SIZE (t) == 0 && TREE_CODE (t) != ARRAY_TYPE))\n+\tif (TYPE_SIZE (t) == 0 && TREE_CODE (t) != ARRAY_TYPE)\n \t  {\n \t    error (\"dereferencing pointer to incomplete type\");\n \t    return error_mark_node;\n \t  }\n+\tif (TREE_CODE (t) == VOID_TYPE)\n+\t  warning (\"dereferencing `void *' pointer\");\n \n \t/* We *must* set TREE_READONLY when dereferencing a pointer to const,\n \t   so that we get the proper error message if the result is used"}]}