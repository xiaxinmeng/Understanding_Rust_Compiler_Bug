{"sha": "003620645c6adf8fb4380846fe11124fc05a2e87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAzNjIwNjQ1YzZhZGY4ZmI0MzgwODQ2ZmUxMTEyNGZjMDVhMmU4Nw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-05-04T22:18:17Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-05-04T22:18:17Z"}, "message": "builtin-attrs.def (ATTR_NOTHROW_NONNULL_1, [...]): Renamed from ATTR_NONNULL_1, ATTR_NONNULL_2 and ATTR_NONNULL_3.\n\ngcc:\n\t* builtin-attrs.def (ATTR_NOTHROW_NONNULL_1,\n\tATTR_NOTHROW_NONNULL_2, ATTR_NOTHROW_NONNULL_3): Renamed from\n\tATTR_NONNULL_1, ATTR_NONNULL_2 and ATTR_NONNULL_3.\n\n\t(ATTR_NOTHROW_NONNULL_1_2, ATTR_NOTHROW_NONNULL_1_4,\n\tATTR_CONST_NOTHROW_NONNULL_1, ATTR_PURE_NOTHROW_NONNULL_1,\n\tATTR_PURE_NOTHROW_NONNULL_1_2, ATTR_MALLOC_NOTHROW_NONNULL_1):\n\tNew.\n\n\t* builtins.def (DEF_EXT_FALLBACK_BUILTIN): Accept ATTRS argument.\n\t(BUILT_IN_BZERO, BUILT_IN_BCOPY, BUILT_IN_BCMP): Update comment\n\n\t(BUILT_IN_INDEX, BUILT_IN_RINDEX, BUILT_IN_MEMCPY,\n\tBUILT_IN_MEMMOVE, BUILT_IN_MEMCMP, BUILT_IN_MEMSET,\n\tBUILT_IN_MEMPCPY, BUILT_IN_STRCAT, BUILT_IN_STRNCAT,\n\tBUILT_IN_STPCPY, BUILT_IN_STRCPY, BUILT_IN_STRNCPY,\n\tBUILT_IN_STRCMP, BUILT_IN_STRNCMP, BUILT_IN_STRLEN,\n\tBUILT_IN_STRSTR, BUILT_IN_STRPBRK, BUILT_IN_STRSPN,\n\tBUILT_IN_STRCSPN, BUILT_IN_STRCHR, BUILT_IN_STRRCHR, BUILT_IN_NAN,\n\tBUILT_IN_NANF, BUILT_IN_NANL, BUILT_IN_NANS, BUILT_IN_NANSF,\n\tBUILT_IN_NANSL, BUILT_IN_PUTS, BUILT_IN_FPUTC, BUILT_IN_FPUTS,\n\tBUILT_IN_FWRITE, BUILT_IN_PUTS_UNLOCKED, BUILT_IN_FPUTC_UNLOCKED,\n\tBUILT_IN_FPUTS_UNLOCKED, BUILT_IN_FWRITE_UNLOCKED,\n\tBUILT_IN_STRDUP): Add \"nonnull\" attribute.\n\ntestsuite:\n\t* gcc.dg/nonnull-3.c: New test.\n\nFrom-SVN: r66468", "tree": {"sha": "10df2a1679aeee49958f47f877d8ad19884d6165", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10df2a1679aeee49958f47f877d8ad19884d6165"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/003620645c6adf8fb4380846fe11124fc05a2e87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/003620645c6adf8fb4380846fe11124fc05a2e87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/003620645c6adf8fb4380846fe11124fc05a2e87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/003620645c6adf8fb4380846fe11124fc05a2e87/comments", "author": null, "committer": null, "parents": [{"sha": "05c30f2224a84ad72acd6f05de973c07fd3665ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05c30f2224a84ad72acd6f05de973c07fd3665ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05c30f2224a84ad72acd6f05de973c07fd3665ca"}], "stats": {"total": 219, "additions": 173, "deletions": 46}, "files": [{"sha": "13f2a54edc1add3665a4305d3ffa9fc5d98c5e43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/003620645c6adf8fb4380846fe11124fc05a2e87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/003620645c6adf8fb4380846fe11124fc05a2e87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=003620645c6adf8fb4380846fe11124fc05a2e87", "patch": "@@ -1,3 +1,30 @@\n+2003-05-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* builtin-attrs.def (ATTR_NOTHROW_NONNULL_1,\n+\tATTR_NOTHROW_NONNULL_2, ATTR_NOTHROW_NONNULL_3): Renamed from\n+\tATTR_NONNULL_1, ATTR_NONNULL_2 and ATTR_NONNULL_3.\n+\n+\t(ATTR_NOTHROW_NONNULL_1_2, ATTR_NOTHROW_NONNULL_1_4,\n+\tATTR_CONST_NOTHROW_NONNULL_1, ATTR_PURE_NOTHROW_NONNULL_1,\n+\tATTR_PURE_NOTHROW_NONNULL_1_2, ATTR_MALLOC_NOTHROW_NONNULL_1):\n+\tNew.\n+\n+\t* builtins.def (DEF_EXT_FALLBACK_BUILTIN): Accept ATTRS argument.\n+\t(BUILT_IN_BZERO, BUILT_IN_BCOPY, BUILT_IN_BCMP): Update comment\n+\n+\t(BUILT_IN_INDEX, BUILT_IN_RINDEX, BUILT_IN_MEMCPY,\n+\tBUILT_IN_MEMMOVE, BUILT_IN_MEMCMP, BUILT_IN_MEMSET,\n+\tBUILT_IN_MEMPCPY, BUILT_IN_STRCAT, BUILT_IN_STRNCAT,\n+\tBUILT_IN_STPCPY, BUILT_IN_STRCPY, BUILT_IN_STRNCPY,\n+\tBUILT_IN_STRCMP, BUILT_IN_STRNCMP, BUILT_IN_STRLEN,\n+\tBUILT_IN_STRSTR, BUILT_IN_STRPBRK, BUILT_IN_STRSPN,\n+\tBUILT_IN_STRCSPN, BUILT_IN_STRCHR, BUILT_IN_STRRCHR, BUILT_IN_NAN,\n+\tBUILT_IN_NANF, BUILT_IN_NANL, BUILT_IN_NANS, BUILT_IN_NANSF,\n+\tBUILT_IN_NANSL, BUILT_IN_PUTS, BUILT_IN_FPUTC, BUILT_IN_FPUTS,\n+\tBUILT_IN_FWRITE, BUILT_IN_PUTS_UNLOCKED, BUILT_IN_FPUTC_UNLOCKED,\n+\tBUILT_IN_FPUTS_UNLOCKED, BUILT_IN_FWRITE_UNLOCKED,\n+\tBUILT_IN_STRDUP): Add \"nonnull\" attribute.\n+\n 2003-05-04  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* expr.c (store_field): Don't clobber TEMP in shift: it might be"}, {"sha": "ea05f49f4f8fdc3155206cf645c5da9a449c952f", "filename": "gcc/builtin-attrs.def", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/003620645c6adf8fb4380846fe11124fc05a2e87/gcc%2Fbuiltin-attrs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/003620645c6adf8fb4380846fe11124fc05a2e87/gcc%2Fbuiltin-attrs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-attrs.def?ref=003620645c6adf8fb4380846fe11124fc05a2e87", "patch": "@@ -102,19 +102,37 @@ DEF_ATTR_TREE_LIST (ATTR_NORETURN_NOTHROW_LIST, ATTR_NORETURN,\t\\\n DEF_ATTR_TREE_LIST (ATTR_MALLOC_NOTHROW_LIST, ATTR_MALLOC,\t\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LIST)\n \n-DEF_ATTR_TREE_LIST (ATTR_NONNULL_1, ATTR_NONNULL, ATTR_LIST_1, \\\n+DEF_ATTR_TREE_LIST (ATTR_NOTHROW_NONNULL_1, ATTR_NONNULL, ATTR_LIST_1, \\\n \t\t\tATTR_NOTHROW_LIST)\n-DEF_ATTR_TREE_LIST (ATTR_NONNULL_2, ATTR_NONNULL, ATTR_LIST_2, \\\n+DEF_ATTR_TREE_LIST (ATTR_NOTHROW_NONNULL_2, ATTR_NONNULL, ATTR_LIST_2, \\\n \t\t\tATTR_NOTHROW_LIST)\n-DEF_ATTR_TREE_LIST (ATTR_NONNULL_3, ATTR_NONNULL, ATTR_LIST_3, \\\n+DEF_ATTR_TREE_LIST (ATTR_NOTHROW_NONNULL_3, ATTR_NONNULL, ATTR_LIST_3, \\\n \t\t\tATTR_NOTHROW_LIST)\n+/* Nothrow functions whose first and second parameters are nonnull pointers. */\n+DEF_ATTR_TREE_LIST (ATTR_NOTHROW_NONNULL_1_2, ATTR_NONNULL, ATTR_LIST_2, \\\n+\t\t\tATTR_NOTHROW_NONNULL_1)\n+/* Nothrow functions whose first and fourth parameters are nonnull pointers. */\n+DEF_ATTR_TREE_LIST (ATTR_NOTHROW_NONNULL_1_4, ATTR_NONNULL, ATTR_LIST_4, \\\n+\t\t\tATTR_NOTHROW_NONNULL_1)\n+/* Nothrow const functions whose first parameter is a nonnull pointer. */\n+DEF_ATTR_TREE_LIST (ATTR_CONST_NOTHROW_NONNULL_1, ATTR_CONST, ATTR_NULL, \\\n+\t\t\tATTR_NOTHROW_NONNULL_1)\n+/* Nothrow pure functions whose first parameter is a nonnull pointer. */\n+DEF_ATTR_TREE_LIST (ATTR_PURE_NOTHROW_NONNULL_1, ATTR_PURE, ATTR_NULL, \\\n+\t\t\tATTR_NOTHROW_NONNULL_1)\n+/* Nothrow pure functions whose first and second parameters are nonnull pointers. */\n+DEF_ATTR_TREE_LIST (ATTR_PURE_NOTHROW_NONNULL_1_2, ATTR_PURE, ATTR_NULL, \\\n+\t\t\tATTR_NOTHROW_NONNULL_1_2)\n+/* Nothrow malloc functions whose first parameter is a nonnull pointer. */\n+DEF_ATTR_TREE_LIST (ATTR_MALLOC_NOTHROW_NONNULL_1, ATTR_MALLOC, ATTR_NULL, \\\n+\t\t\tATTR_NOTHROW_NONNULL_1)\n \n /* Construct a tree for a format attribute.  */\n #define DEF_FORMAT_ATTRIBUTE(TYPE, FA, VALUES)\t\t\t\t \\\n   DEF_ATTR_TREE_LIST (CONCAT4 (ATTR_,TYPE,_,VALUES), ATTR_NULL,\t\t \\\n \t\t      CONCAT2 (ATTR_,TYPE), CONCAT2 (ATTR_LIST_,VALUES)) \\\n   DEF_ATTR_TREE_LIST (CONCAT4 (ATTR_FORMAT_,TYPE,_,VALUES), ATTR_FORMAT, \\\n-\t\t      CONCAT4 (ATTR_,TYPE,_,VALUES), CONCAT2 (ATTR_NONNULL_,FA))\n+\t\t      CONCAT4 (ATTR_,TYPE,_,VALUES), CONCAT2 (ATTR_NOTHROW_NONNULL_,FA))\n DEF_FORMAT_ATTRIBUTE(PRINTF,1,1_0)\n DEF_FORMAT_ATTRIBUTE(PRINTF,1,1_2)\n DEF_FORMAT_ATTRIBUTE(PRINTF,2,2_0)\n@@ -132,7 +150,7 @@ DEF_FORMAT_ATTRIBUTE(STRFMON,3,3_4)\n /* Construct a tree for a format_arg attribute.  */\n #define DEF_FORMAT_ARG_ATTRIBUTE(FA)\t\t\t\t\t\\\n   DEF_ATTR_TREE_LIST (CONCAT2 (ATTR_FORMAT_ARG_,FA), ATTR_FORMAT_ARG,\t\\\n-\t\t      CONCAT2 (ATTR_LIST_,FA), CONCAT2 (ATTR_NONNULL_,FA))\n+\t\t      CONCAT2 (ATTR_LIST_,FA), CONCAT2 (ATTR_NOTHROW_NONNULL_,FA))\n DEF_FORMAT_ARG_ATTRIBUTE(1)\n DEF_FORMAT_ARG_ATTRIBUTE(2)\n #undef DEF_FORMAT_ARG_ATTRIBUTE"}, {"sha": "a45641cf0ae5f5f1467186fb1769321f504e627b", "filename": "gcc/builtins.def", "status": "modified", "additions": 44, "deletions": 41, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/003620645c6adf8fb4380846fe11124fc05a2e87/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/003620645c6adf8fb4380846fe11124fc05a2e87/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=003620645c6adf8fb4380846fe11124fc05a2e87", "patch": "@@ -85,9 +85,9 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    we ignore the version of these builtins that does not begin with\n    __builtin.  */\n #undef DEF_EXT_FALLBACK_BUILTIN\n-#define DEF_EXT_FALLBACK_BUILTIN(ENUM, NAME, TYPE)\t\\\n+#define DEF_EXT_FALLBACK_BUILTIN(ENUM, NAME, TYPE, ATTRS)\t\\\n   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE,\t\\\n-\t       false, true, true, ATTR_NOTHROW_LIST, true)\n+\t       false, true, true, ATTRS, true)\n \n /* A library builtin (like __builtin_strchr) is a builtin equivalent\n    of an ANSI/ISO standard library function.  In addition to the\n@@ -287,8 +287,11 @@ DEF_C99_BUILTIN(BUILT_IN_CIMAGL,\n \t\tATTR_CONST_NOTHROW_LIST)\n \n /* The system prototypes for `bzero', 'bcopy' and `bcmp' functions\n-   have many variations, so don't specify parameters to avoid conflicts.\n-   The expand_* functions check the argument types anyway.  */\n+   have many variations, so don't specify parameters to avoid\n+   conflicts.  The expand_* functions check the argument types anyway.\n+   In addition, these functions have traditionally accepted NULL\n+   pointers when the length parameter is zero, so don't apply\n+   attribute \"nonnull\".  */\n DEF_BUILTIN (BUILT_IN_BZERO,\n \t     \"__builtin_bzero\",\n \t     BUILT_IN_NORMAL,\n@@ -377,89 +380,89 @@ DEF_GCC_BUILTIN(BUILT_IN_PARITYLL,\n DEF_EXT_LIB_BUILTIN(BUILT_IN_INDEX,\n \t\t    \"__builtin_index\",\n \t\t    BT_FN_STRING_CONST_STRING_INT,\n-\t\t    ATTR_PURE_NOTHROW_LIST)\n+\t\t    ATTR_PURE_NOTHROW_NONNULL_1)\n DEF_EXT_LIB_BUILTIN(BUILT_IN_RINDEX,\n \t\t    \"__builtin_rindex\",\n \t\t    BT_FN_STRING_CONST_STRING_INT,\n-\t\t    ATTR_PURE_NOTHROW_LIST)\n+\t\t    ATTR_PURE_NOTHROW_NONNULL_1)\n \n DEF_LIB_BUILTIN(BUILT_IN_MEMCPY,\n \t\t\"__builtin_memcpy\",\n \t\tBT_FN_PTR_PTR_CONST_PTR_SIZE,\n-\t\tATTR_NOTHROW_LIST)\n+\t\tATTR_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_MEMMOVE,\n \t\t\"__builtin_memmove\",\n \t\tBT_FN_PTR_PTR_CONST_PTR_SIZE,\n-\t\tATTR_NOTHROW_LIST)\n+\t\tATTR_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_MEMCMP,\n \t\t\"__builtin_memcmp\",\n \t\tBT_FN_INT_CONST_PTR_CONST_PTR_SIZE,\n-\t\tATTR_PURE_NOTHROW_LIST)\n+\t\tATTR_PURE_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_MEMSET,\n \t\t\"__builtin_memset\",\n \t\tBT_FN_PTR_PTR_INT_SIZE,\n-\t\tATTR_NOTHROW_LIST)\n+\t\tATTR_NOTHROW_NONNULL_1)\n DEF_EXT_LIB_BUILTIN(BUILT_IN_MEMPCPY,\n \t\t\"__builtin_mempcpy\",\n \t\tBT_FN_PTR_PTR_CONST_PTR_SIZE,\n-\t\tATTR_NOTHROW_LIST)\n+\t\tATTR_NOTHROW_NONNULL_1_2)\n \n DEF_LIB_BUILTIN(BUILT_IN_STRCAT,\n \t\t\"__builtin_strcat\",\n \t\tBT_FN_STRING_STRING_CONST_STRING,\n-\t\tATTR_NOTHROW_LIST)\n+\t\tATTR_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_STRNCAT,\n \t\t\"__builtin_strncat\",\n \t\tBT_FN_STRING_STRING_CONST_STRING_SIZE,\n-\t\tATTR_NOTHROW_LIST)\n+\t\tATTR_NOTHROW_NONNULL_1_2)\n DEF_EXT_LIB_BUILTIN(BUILT_IN_STPCPY,\n \t\t\"__builtin_stpcpy\",\n \t\tBT_FN_STRING_STRING_CONST_STRING,\n-\t\tATTR_NOTHROW_LIST)\n+\t\tATTR_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_STRCPY,\n \t\t\"__builtin_strcpy\",\n \t\tBT_FN_STRING_STRING_CONST_STRING,\n-\t\tATTR_NOTHROW_LIST)\n+\t\tATTR_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_STRNCPY,\n \t\t\"__builtin_strncpy\",\n \t\tBT_FN_STRING_STRING_CONST_STRING_SIZE,\n-\t\tATTR_NOTHROW_LIST)\n+\t\tATTR_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_STRCMP,\n \t\t\"__builtin_strcmp\",\n \t\tBT_FN_INT_CONST_STRING_CONST_STRING,\n-\t\tATTR_PURE_NOTHROW_LIST)\n+\t\tATTR_PURE_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_STRNCMP,\n \t\t\"__builtin_strncmp\",\n \t\tBT_FN_INT_CONST_STRING_CONST_STRING_SIZE,\n-\t\tATTR_PURE_NOTHROW_LIST)\n+\t\tATTR_PURE_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_STRLEN,\n \t\t\"__builtin_strlen\",\n \t\tBT_FN_SIZE_CONST_STRING,\n-\t\tATTR_PURE_NOTHROW_LIST)\n+\t\tATTR_PURE_NOTHROW_NONNULL_1)\n DEF_LIB_BUILTIN(BUILT_IN_STRSTR,\n \t\t\"__builtin_strstr\",\n \t\tBT_FN_STRING_CONST_STRING_CONST_STRING,\n-\t\tATTR_PURE_NOTHROW_LIST)\n+\t\tATTR_PURE_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_STRPBRK,\n \t\t\"__builtin_strpbrk\",\n \t\tBT_FN_STRING_CONST_STRING_CONST_STRING,\n-\t\tATTR_PURE_NOTHROW_LIST)\n+\t\tATTR_PURE_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_STRSPN,\n \t\t\"__builtin_strspn\",\n \t\tBT_FN_SIZE_CONST_STRING_CONST_STRING,\n-\t\tATTR_PURE_NOTHROW_LIST)\n+\t\tATTR_PURE_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_STRCSPN,\n \t\t\"__builtin_strcspn\",\n \t\tBT_FN_SIZE_CONST_STRING_CONST_STRING,\n-\t\tATTR_PURE_NOTHROW_LIST)\n+\t\tATTR_PURE_NOTHROW_NONNULL_1_2)\n DEF_LIB_BUILTIN(BUILT_IN_STRCHR,\n \t\t\"__builtin_strchr\",\n \t\tBT_FN_STRING_CONST_STRING_INT,\n-\t\tATTR_PURE_NOTHROW_LIST)\n+\t\tATTR_PURE_NOTHROW_NONNULL_1)\n DEF_LIB_BUILTIN(BUILT_IN_STRRCHR,\n \t\t\"__builtin_strrchr\",\n \t\tBT_FN_STRING_CONST_STRING_INT,\n-\t\tATTR_PURE_NOTHROW_LIST)\n+\t\tATTR_PURE_NOTHROW_NONNULL_1)\n \n DEF_LIB_BUILTIN(BUILT_IN_SQRT,\n \t\t\"__builtin_sqrt\",\n@@ -647,28 +650,28 @@ DEF_GCC_BUILTIN(BUILT_IN_HUGE_VALL,\n DEF_LIB_BUILTIN(BUILT_IN_NAN,\n \t\t\"__builtin_nan\",\n \t\tBT_FN_DOUBLE_CONST_STRING,\n-\t\tATTR_CONST_NOTHROW_LIST)\n+\t\tATTR_CONST_NOTHROW_NONNULL_1)\n DEF_LIB_BUILTIN(BUILT_IN_NANF,\n \t\t\"__builtin_nanf\",\n \t\tBT_FN_FLOAT_CONST_STRING,\n-\t\tATTR_CONST_NOTHROW_LIST)\n+\t\tATTR_CONST_NOTHROW_NONNULL_1)\n DEF_LIB_BUILTIN(BUILT_IN_NANL,\n \t\t\"__builtin_nanl\",\n \t\tBT_FN_LONG_DOUBLE_CONST_STRING,\n-\t\tATTR_CONST_NOTHROW_LIST)\n+\t\tATTR_CONST_NOTHROW_NONNULL_1)\n \n DEF_LIB_BUILTIN(BUILT_IN_NANS,\n \t\t\"__builtin_nans\",\n \t\tBT_FN_DOUBLE_CONST_STRING,\n-\t\tATTR_CONST_NOTHROW_LIST)\n+\t\tATTR_CONST_NOTHROW_NONNULL_1)\n DEF_LIB_BUILTIN(BUILT_IN_NANSF,\n \t\t\"__builtin_nansf\",\n \t\tBT_FN_FLOAT_CONST_STRING,\n-\t\tATTR_CONST_NOTHROW_LIST)\n+\t\tATTR_CONST_NOTHROW_NONNULL_1)\n DEF_LIB_BUILTIN(BUILT_IN_NANSL,\n \t\t\"__builtin_nansl\",\n \t\tBT_FN_LONG_DOUBLE_CONST_STRING,\n-\t\tATTR_CONST_NOTHROW_LIST)\n+\t\tATTR_CONST_NOTHROW_NONNULL_1)\n \n DEF_GCC_BUILTIN(BUILT_IN_SAVEREGS,\n \t\t\"__builtin_saveregs\",\n@@ -744,7 +747,7 @@ DEF_LIB_BUILTIN(BUILT_IN_PUTCHAR,\n DEF_LIB_BUILTIN(BUILT_IN_PUTS,\n \t\t\"__builtin_puts\",\n \t\tBT_FN_INT_CONST_STRING,\n-\t\tATTR_NOTHROW_LIST)\n+\t\tATTR_NOTHROW_NONNULL_1)\n DEF_C99_BUILTIN(BUILT_IN_SNPRINTF,\n \t\t\"__builtin_snprintf\",\n \t\tBT_FN_INT_STRING_SIZE_CONST_STRING_VAR,\n@@ -793,17 +796,17 @@ DEF_LIB_BUILTIN(BUILT_IN_VSPRINTF,\n DEF_FALLBACK_BUILTIN(BUILT_IN_FPUTC,\n \t\t     \"__builtin_fputc\",\n \t\t     BT_FN_INT_INT_PTR,\n-\t\t     ATTR_NOTHROW_LIST)\n+\t\t     ATTR_NOTHROW_NONNULL_2)\n DEF_BUILTIN (BUILT_IN_FPUTS,\n \t     \"__builtin_fputs\",\n \t     BUILT_IN_NORMAL,\n \t     BT_FN_INT_CONST_STRING_PTR,\n \t     BT_FN_INT_VAR,\n-\t     true, true, false, ATTR_NOTHROW_LIST, true)\n+\t     true, true, false, ATTR_NOTHROW_NONNULL_1_2, true)\n DEF_FALLBACK_BUILTIN(BUILT_IN_FWRITE,\n \t\t     \"__builtin_fwrite\",\n \t\t     BT_FN_SIZE_CONST_PTR_SIZE_SIZE_PTR,\n-\t\t      ATTR_NOTHROW_LIST)\n+\t\t      ATTR_NOTHROW_NONNULL_1_4)\n DEF_FRONT_END_LIB_BUILTIN(BUILT_IN_FPRINTF,\n \t\t\t \"__builtin_fprintf\",\n \t\t\t BT_FN_INT_PTR_CONST_STRING_VAR,\n@@ -813,10 +816,10 @@ DEF_FRONT_END_LIB_BUILTIN(BUILT_IN_FPRINTF,\n \n DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_PUTCHAR_UNLOCKED,\n \t\t\t \"__builtin_putchar_unlocked\",\n-\t\t\t BT_FN_INT_INT)\n+\t\t\t BT_FN_INT_INT, ATTR_NOTHROW_LIST)\n DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_PUTS_UNLOCKED,\n \t\t\t \"__builtin_puts_unlocked\",\n-\t\t\t BT_FN_INT_CONST_STRING)\n+\t\t\t BT_FN_INT_CONST_STRING, ATTR_NOTHROW_NONNULL_1)\n DEF_EXT_FRONT_END_LIB_BUILTIN(BUILT_IN_PRINTF_UNLOCKED,\n \t\t\t      \"__builtin_printf_unlocked\",\n \t\t\t      BT_FN_INT_CONST_STRING_VAR,\n@@ -831,16 +834,16 @@ DEF_EXT_FRONT_END_LIB_BUILTIN(BUILT_IN_PRINTF_UNLOCKED,\n \n DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_FPUTC_UNLOCKED,\n \t\t\t \"__builtin_fputc_unlocked\",\n-\t\t\t BT_FN_INT_INT_PTR)\n+\t\t\t BT_FN_INT_INT_PTR, ATTR_NOTHROW_NONNULL_2)\n DEF_BUILTIN (BUILT_IN_FPUTS_UNLOCKED,\n \t     \"__builtin_fputs_unlocked\",\n \t     BUILT_IN_NORMAL,\n \t     BT_FN_INT_CONST_STRING_PTR,\n \t     BT_FN_INT_VAR,\n-\t     true, true, true, ATTR_NOTHROW_LIST, true)\n+\t     true, true, true, ATTR_NOTHROW_NONNULL_1_2, true)\n DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_FWRITE_UNLOCKED,\n \t\t\t \"__builtin_fwrite_unlocked\",\n-\t\t\t BT_FN_SIZE_CONST_PTR_SIZE_SIZE_PTR)\n+\t\t\t BT_FN_SIZE_CONST_PTR_SIZE_SIZE_PTR, ATTR_NOTHROW_NONNULL_1_4)\n DEF_EXT_FRONT_END_LIB_BUILTIN(BUILT_IN_FPRINTF_UNLOCKED,\n \t\t\t      \"__builtin_fprintf_unlocked\",\n \t\t\t      BT_FN_INT_PTR_CONST_STRING_VAR,\n@@ -961,5 +964,5 @@ DEF_LIB_BUILTIN(BUILT_IN_CALLOC,\n DEF_EXT_LIB_BUILTIN(BUILT_IN_STRDUP,\n \t\t    \"__builtin_strdup\",\n \t\t    BT_FN_STRING_CONST_STRING,\n-\t\t    ATTR_MALLOC_NOTHROW_LIST)\n+\t\t    ATTR_MALLOC_NOTHROW_NONNULL_1)\n "}, {"sha": "5f20c5e795e7f61b52fe996aff8c8810966cf668", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/003620645c6adf8fb4380846fe11124fc05a2e87/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/003620645c6adf8fb4380846fe11124fc05a2e87/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=003620645c6adf8fb4380846fe11124fc05a2e87", "patch": "@@ -1,3 +1,7 @@\n+2003-05-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.dg/nonnull-3.c: New test.\n+\n 2003-05-04  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* gcc.dg/cpp/Wtrigraphs.c: Update."}, {"sha": "3b53eaf7b957fb1dee539000a892d87533ef8ea8", "filename": "gcc/testsuite/gcc.dg/nonnull-3.c", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/003620645c6adf8fb4380846fe11124fc05a2e87/gcc%2Ftestsuite%2Fgcc.dg%2Fnonnull-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/003620645c6adf8fb4380846fe11124fc05a2e87/gcc%2Ftestsuite%2Fgcc.dg%2Fnonnull-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnonnull-3.c?ref=003620645c6adf8fb4380846fe11124fc05a2e87", "patch": "@@ -0,0 +1,75 @@\n+/* Test for the \"nonnull\" function attribute on builtins.  Use the\n+   \"__builtin_\" style below so we don't need prototypes.  */\n+/* Origin: Kaveh R. Ghazi <ghazi@caip.rutgers.edu> */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wnonnull\" } */\n+\n+#include <stddef.h>\n+\n+void\n+foo (void *p, char *s)\n+{\n+  __builtin_bzero (NULL, 0);\n+  __builtin_bcopy (NULL, p, 0);\n+  __builtin_bcopy (p, NULL, 0);\n+  __builtin_bcmp (NULL, p, 0);\n+  __builtin_bcmp (p, NULL, 0);\n+  __builtin_index (NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_rindex (NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+\n+  __builtin_memcpy (p, NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_memcpy (NULL, p, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_memmove (p, NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_memmove (NULL, p, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_memcmp (p, NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_memcmp (NULL, p, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_memset (NULL, 0, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_mempcpy (p, NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_mempcpy (NULL, p, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+\n+  __builtin_strcat (NULL, s);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strcat (s, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strncat (NULL, s, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strncat (s, NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_stpcpy (NULL, s);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_stpcpy (s, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strcpy (NULL, s);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strcpy (s, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strncpy (NULL, s, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strncpy (s, NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strcmp (NULL, s);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strcmp (s, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strncmp (NULL, s, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strncmp (s, NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strlen (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strstr (NULL, s);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strstr (s, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strpbrk (NULL, s);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strpbrk (s, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strspn (NULL, s);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strspn (s, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strchr (NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strrchr (NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_strdup (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+\n+  __builtin_nan (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_nanf (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_nanl (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_nans (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_nansf (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_nansl (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+\n+  __builtin_puts (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_fputc (*s, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_fputs (s, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_fputs (NULL, p);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_fwrite (s, 16, 16, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_fwrite (NULL, 16, 16, p);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_puts_unlocked (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_fputc_unlocked (*s, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_fputs_unlocked (s, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_fputs_unlocked (NULL, p);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_fwrite_unlocked (s, 16, 16, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  __builtin_fwrite_unlocked (NULL, 16, 16, p);  /* { dg-warning \"null\" \"null pointer check\" } */\n+\n+}"}]}