{"sha": "54c9c975f182aacae65a925b86b8770e2503b950", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRjOWM5NzVmMTgyYWFjYWU2NWE5MjViODZiODc3MGUyNTAzYjk1MA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-02-12T22:10:09Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-02-12T22:10:09Z"}, "message": "runtime: For c-archive/c-shared, install signal handlers synchronously.\n\n    \n    This is a port of https://golang.org/cl/18150 to the gccgo runtime.\n    \n    The previous behaviour of installing the signal handlers in a separate\n    thread meant that Go initialization raced with non-Go initialization if\n    the non-Go initialization also wanted to install signal handlers.  Make\n    installing signal handlers synchronous so that the process-wide behavior\n    is predictable.\n    \n    Reviewed-on: https://go-review.googlesource.com/19494\n\nFrom-SVN: r233393", "tree": {"sha": "0f1bf2665d8697cd161c1f9d5271e3db262ac73e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f1bf2665d8697cd161c1f9d5271e3db262ac73e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54c9c975f182aacae65a925b86b8770e2503b950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54c9c975f182aacae65a925b86b8770e2503b950", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54c9c975f182aacae65a925b86b8770e2503b950", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54c9c975f182aacae65a925b86b8770e2503b950/comments", "author": null, "committer": null, "parents": [{"sha": "37064e3daf756e60b7725b8fee74ddb6785511ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37064e3daf756e60b7725b8fee74ddb6785511ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37064e3daf756e60b7725b8fee74ddb6785511ac"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "228dfc1360a426e5623550aad921ac171a0df44b", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54c9c975f182aacae65a925b86b8770e2503b950/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54c9c975f182aacae65a925b86b8770e2503b950/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=54c9c975f182aacae65a925b86b8770e2503b950", "patch": "@@ -1,4 +1,4 @@\n-28a9dfbc3cda0bf7fd4f3fb1506c547f6cdf41a5\n+22278c6e8ce3982b09111183bc6addf0184bef1f\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "6884f3a5f56d796271ebe70f16f0f46e018c6094", "filename": "libgo/runtime/go-libmain.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54c9c975f182aacae65a925b86b8770e2503b950/libgo%2Fruntime%2Fgo-libmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54c9c975f182aacae65a925b86b8770e2503b950/libgo%2Fruntime%2Fgo-libmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-libmain.c?ref=54c9c975f182aacae65a925b86b8770e2503b950", "patch": "@@ -59,6 +59,10 @@ initfn (int argc, char **argv, char** env __attribute__ ((unused)))\n   struct args *a;\n   pthread_t tid;\n \n+  runtime_isarchive = true;\n+\n+  runtime_initsig(true);\n+\n   a = (struct args *) malloc (sizeof *a);\n   if (a == NULL)\n     die (\"malloc\", errno);\n@@ -88,8 +92,6 @@ gostart (void *arg)\n {\n   struct args *a = (struct args *) arg;\n \n-  runtime_isarchive = true;\n-\n   if (runtime_isstarted)\n     return NULL;\n   runtime_isstarted = true;"}, {"sha": "9ba199b8caea2f9c9ef95a219728af987dd442fd", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54c9c975f182aacae65a925b86b8770e2503b950/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54c9c975f182aacae65a925b86b8770e2503b950/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=54c9c975f182aacae65a925b86b8770e2503b950", "patch": "@@ -1093,7 +1093,7 @@ runtime_mstart(void* mp)\n \t\t\truntime_newextram();\n \t\t\truntime_needextram = 0;\n \t\t}\n-\t\truntime_initsig();\n+\t\truntime_initsig(false);\n \t}\n \t\n \tif(m->mstartfn)"}, {"sha": "73c46e9117f646a432dc31cd15f3d3d4d21376ec", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54c9c975f182aacae65a925b86b8770e2503b950/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54c9c975f182aacae65a925b86b8770e2503b950/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=54c9c975f182aacae65a925b86b8770e2503b950", "patch": "@@ -550,7 +550,7 @@ void*\truntime_mal(uintptr);\n String\truntime_gostring(const byte*);\n String\truntime_gostringnocopy(const byte*);\n void\truntime_schedinit(void);\n-void\truntime_initsig(void);\n+void\truntime_initsig(bool);\n void\truntime_sigenable(uint32 sig);\n void\truntime_sigdisable(uint32 sig);\n void\truntime_sigignore(uint32 sig);"}, {"sha": "5bee0d2a70605ac0fe9488e30dc34f41b6d50440", "filename": "libgo/runtime/signal_unix.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54c9c975f182aacae65a925b86b8770e2503b950/libgo%2Fruntime%2Fsignal_unix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54c9c975f182aacae65a925b86b8770e2503b950/libgo%2Fruntime%2Fsignal_unix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fsignal_unix.c?ref=54c9c975f182aacae65a925b86b8770e2503b950", "patch": "@@ -13,11 +13,16 @@\n extern SigTab runtime_sigtab[];\n \n void\n-runtime_initsig(void)\n+runtime_initsig(bool preinit)\n {\n \tint32 i;\n \tSigTab *t;\n \n+\t// For c-archive/c-shared this is called by go-libmain.c with\n+\t// preinit == true.\n+\tif(runtime_isarchive && !preinit)\n+\t\treturn;\n+\n \t// First call: basic setup.\n \tfor(i = 0; runtime_sigtab[i].sig != -1; i++) {\n \t\tt = &runtime_sigtab[i];\n@@ -37,6 +42,9 @@ runtime_initsig(void)\n \t\t\t}\n \t\t}\n \n+\t\tif(runtime_isarchive && (t->flags&SigPanic) == 0)\n+\t\t\tcontinue;\n+\n \t\tt->flags |= SigHandling;\n \t\truntime_setsig(i, runtime_sighandler, true);\n \t}"}]}