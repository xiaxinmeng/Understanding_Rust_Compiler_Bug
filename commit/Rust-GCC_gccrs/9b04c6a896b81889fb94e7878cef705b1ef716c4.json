{"sha": "9b04c6a896b81889fb94e7878cef705b1ef716c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIwNGM2YTg5NmI4MTg4OWZiOTRlNzg3OGNlZjcwNWIxZWY3MTZjNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-08T23:55:41Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-08T23:55:41Z"}, "message": "(change_address): If MEMREF isn't changing, return the old one.\n\nFrom-SVN: r13115", "tree": {"sha": "056d3cc366b66adf7ccee3eaaad2cc6172b6ec4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/056d3cc366b66adf7ccee3eaaad2cc6172b6ec4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b04c6a896b81889fb94e7878cef705b1ef716c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b04c6a896b81889fb94e7878cef705b1ef716c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b04c6a896b81889fb94e7878cef705b1ef716c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b04c6a896b81889fb94e7878cef705b1ef716c4/comments", "author": null, "committer": null, "parents": [{"sha": "b61b64100a3be5e98039b4f8dc8cd192a17b0da0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b61b64100a3be5e98039b4f8dc8cd192a17b0da0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b61b64100a3be5e98039b4f8dc8cd192a17b0da0"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "66b5d22696e7c182b61a99f46b65fc63d61f7af4", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b04c6a896b81889fb94e7878cef705b1ef716c4/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b04c6a896b81889fb94e7878cef705b1ef716c4/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=9b04c6a896b81889fb94e7878cef705b1ef716c4", "patch": "@@ -1376,6 +1376,9 @@ change_address (memref, mode, addr)\n   else\n     addr = memory_address (mode, addr);\n \t\n+  if (rtx_equal_p (addr, XEXP (memref, 0)) && mode == GET_MODE (memref))\n+    return memref;\n+\n   new = gen_rtx (MEM, mode, addr);\n   MEM_VOLATILE_P (new) = MEM_VOLATILE_P (memref);\n   RTX_UNCHANGING_P (new) = RTX_UNCHANGING_P (memref);"}]}