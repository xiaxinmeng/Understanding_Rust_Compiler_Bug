{"sha": "bcc150393e16baa1a1ce37b64e2fc5e1f7a38fc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNjMTUwMzkzZTE2YmFhMWExY2UzN2I2NGUyZmM1ZTFmN2EzOGZjMw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-01-01T12:25:33Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-03T09:28:29Z"}, "message": "[Ada] Minor style fixes in Max_Aggregate_Size\n\ngcc/ada/\n\n\t* exp_aggr.adb (Max_Aggregate_Size): Add header boxes for nested\n\troutines; move a local constant after nested subprogram bodies;\n\trefill comment.", "tree": {"sha": "dbbadcd29edaea4bb7e2e3cce8e9bb03c2e7229b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbbadcd29edaea4bb7e2e3cce8e9bb03c2e7229b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcc150393e16baa1a1ce37b64e2fc5e1f7a38fc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcc150393e16baa1a1ce37b64e2fc5e1f7a38fc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcc150393e16baa1a1ce37b64e2fc5e1f7a38fc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcc150393e16baa1a1ce37b64e2fc5e1f7a38fc3/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94f994283846fa3f01d7b6556b59da5509a55a60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f994283846fa3f01d7b6556b59da5509a55a60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94f994283846fa3f01d7b6556b59da5509a55a60"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "2d07abb9ab579cc8c45119678356563fecde9eda", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc150393e16baa1a1ce37b64e2fc5e1f7a38fc3/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc150393e16baa1a1ce37b64e2fc5e1f7a38fc3/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=bcc150393e16baa1a1ce37b64e2fc5e1f7a38fc3", "patch": "@@ -8800,8 +8800,6 @@ package body Exp_Aggr is\n      (N            : Node_Id;\n       Default_Size : Nat := 5000) return Nat\n    is\n-      Typ : constant Entity_Id := Etype (N);\n-\n       function Use_Small_Size (N : Node_Id) return Boolean;\n       --  True if we should return a very small size, which means large\n       --  aggregates will be implemented as a loop when possible (potentially\n@@ -8811,6 +8809,10 @@ package body Exp_Aggr is\n       --  Return the context in which the aggregate appears, not counting\n       --  qualified expressions and similar.\n \n+      ------------------\n+      -- Aggr_Context --\n+      ------------------\n+\n       function Aggr_Context (N : Node_Id) return Node_Id is\n          Result : Node_Id := Parent (N);\n       begin\n@@ -8828,6 +8830,10 @@ package body Exp_Aggr is\n          return Result;\n       end Aggr_Context;\n \n+      --------------------\n+      -- Use_Small_Size --\n+      --------------------\n+\n       function Use_Small_Size (N : Node_Id) return Boolean is\n          C : constant Node_Id := Aggr_Context (N);\n          --  The decision depends on the context in which the aggregate occurs,\n@@ -8858,11 +8864,15 @@ package body Exp_Aggr is\n          end case;\n       end Use_Small_Size;\n \n+      --  Local variables\n+\n+      Typ : constant Entity_Id := Etype (N);\n+\n    --  Start of processing for Max_Aggregate_Size\n \n    begin\n-      --  We use a small limit in CodePeer mode where we favor loops\n-      --  instead of thousands of single assignments (from large aggregates).\n+      --  We use a small limit in CodePeer mode where we favor loops instead of\n+      --  thousands of single assignments (from large aggregates).\n \n       --  We also increase the limit to 2**24 (about 16 million) if\n       --  Restrictions (No_Elaboration_Code) or Restrictions"}]}