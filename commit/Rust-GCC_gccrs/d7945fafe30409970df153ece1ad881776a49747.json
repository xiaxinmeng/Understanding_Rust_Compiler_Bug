{"sha": "d7945fafe30409970df153ece1ad881776a49747", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc5NDVmYWZlMzA0MDk5NzBkZjE1M2VjZTFhZDg4MTc3NmE0OTc0Nw==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2004-08-13T22:17:34Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-08-13T22:17:34Z"}, "message": "InetAddress.java (loopbackAddress): Renamed from localhostAddress.\n\n2004-08-13  Bryce McKinlay  <mckinlay@redhat.com>\n\n\t* java/net/InetAddress.java (loopbackAddress): Renamed from\n\tlocalhostAddress.\n\t(getByName): Return loopback address for null hostname, without\n\tsecurity check. Use lookup(), not getAllByName.\n\t(getAllByName): Return loopback address for null hostname, without\n\tsecurity check.\n\t* java/net/natInetAddressPosix.cc (lookup): Don't perform security\n\tcheck here.\n\nFrom-SVN: r85967", "tree": {"sha": "71045c3b297bbcfcc11626a043b6935f90d3b53f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71045c3b297bbcfcc11626a043b6935f90d3b53f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7945fafe30409970df153ece1ad881776a49747", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7945fafe30409970df153ece1ad881776a49747", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7945fafe30409970df153ece1ad881776a49747", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7945fafe30409970df153ece1ad881776a49747/comments", "author": null, "committer": null, "parents": [{"sha": "1ef02b9de5bc2b05d07e2fa15d5f62b7fa6ddfdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ef02b9de5bc2b05d07e2fa15d5f62b7fa6ddfdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ef02b9de5bc2b05d07e2fa15d5f62b7fa6ddfdd"}], "stats": {"total": 51, "additions": 33, "deletions": 18}, "files": [{"sha": "71938837faa46848ad7f2c90cef5a83fc3eda59d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7945fafe30409970df153ece1ad881776a49747/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7945fafe30409970df153ece1ad881776a49747/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d7945fafe30409970df153ece1ad881776a49747", "patch": "@@ -1,3 +1,14 @@\n+2004-08-13  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* java/net/InetAddress.java (loopbackAddress): Renamed from \n+\tlocalhostAddress.\n+\t(getByName): Return loopback address for null hostname, without\n+\tsecurity check. Use lookup(), not getAllByName.\n+\t(getAllByName): Return loopback address for null hostname, without\n+\tsecurity check.\n+\t* java/net/natInetAddressPosix.cc (lookup): Don't perform security\n+\tcheck here.\n+\n 2004-08-13  Bryce McKinlay  <mckinlay@redhat.com>\n \n \tPR libgcj/17020"}, {"sha": "cf1f3a581fb06be98e12db2da3e71f9e1ea51799", "filename": "libjava/java/net/InetAddress.java", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7945fafe30409970df153ece1ad881776a49747/libjava%2Fjava%2Fnet%2FInetAddress.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7945fafe30409970df153ece1ad881776a49747/libjava%2Fjava%2Fnet%2FInetAddress.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FInetAddress.java?ref=d7945fafe30409970df153ece1ad881776a49747", "patch": "@@ -68,7 +68,10 @@ public class InetAddress implements Serializable\n    */\n   static InetAddress ANY_IF;\n     \n-  private static final byte[] localhostAddress = { 127, 0, 0, 1 };\n+  private static final byte[] loopbackAddress = { 127, 0, 0, 1 };\n+\n+  private static final InetAddress loopback \n+    = new InetAddress (loopbackAddress, \"localhost\");\n \n   private static InetAddress localhost = null;\n \n@@ -564,7 +567,8 @@ private static native InetAddress[] lookup (String hostname,\n    * default.  This method is equivalent to returning the first element in\n    * the InetAddress array returned from GetAllByName.\n    *\n-   * @param hostname The name of the desired host, or null for the local machine.\n+   * @param hostname The name of the desired host, or null for the local \n+   * loopback address.\n    *\n    * @return The address of the host as an InetAddress object.\n    *\n@@ -576,14 +580,15 @@ private static native InetAddress[] lookup (String hostname,\n   public static InetAddress getByName(String hostname)\n     throws UnknownHostException\n   {\n+    // If null or the empty string is supplied, the loopback address\n+    // is returned. Note that this is permitted without a security check.\n+    if (hostname == null || hostname.length() == 0)\n+      return loopback;\n+\n     SecurityManager s = System.getSecurityManager();\n     if (s != null)\n       s.checkConnect(hostname, -1);\n \n-    // Default to current host if necessary\n-    if (hostname == null || hostname.length() == 0)\n-      return getLocalHost();\n-\n     // Assume that the host string is an IP address\n     byte[] address = aton(hostname);\n     if (address != null)\n@@ -608,8 +613,9 @@ else if (address.length == 16)\n       }\n \n     // Try to resolve the host by DNS\n-    InetAddress[] addresses = getAllByName(hostname);\n-    return addresses[0];\n+    InetAddress result = new InetAddress(null, null);\n+    lookup (hostname, result, false);\n+    return result;\n   }\n \n   /**\n@@ -620,7 +626,7 @@ else if (address.length == 16)\n    * hostname of the local machine is supplied by default.\n    *\n    * @param hostname The name of the desired host, or null for the\n-   * local machine.\n+   * local loopback address.\n    *\n    * @return All addresses of the host as an array of InetAddress objects.\n    *\n@@ -632,6 +638,11 @@ else if (address.length == 16)\n   public static InetAddress[] getAllByName(String hostname)\n     throws UnknownHostException\n   {\n+    // If null or the empty string is supplied, the loopback address\n+    // is returned. Note that this is permitted without a security check.\n+    if (hostname == null || hostname.length() == 0)\n+      return new InetAddress[] {loopback};\n+\n     SecurityManager s = System.getSecurityManager();\n     if (s != null)\n       s.checkConnect(hostname, -1);\n@@ -676,7 +687,7 @@ public static InetAddress getLocalHost() throws UnknownHostException\n     // However, if there is a security manager, and the cached result\n     // is other than \"localhost\", we need to check again.\n     if (localhost == null\n-\t|| (s != null && localhost.addr != localhostAddress))\n+\t|| (s != null && ! localhost.isLoopbackAddress()))\n       getLocalHost (s);\n     \n     return localhost;\n@@ -724,7 +735,7 @@ private static synchronized void getLocalHost (SecurityManager s)\n       }\n     \n     if (localhost == null)\n-      localhost = new InetAddress (localhostAddress, \"localhost\");\n+      localhost = new InetAddress (loopbackAddress, \"localhost\");\n   }\n \n   /**"}, {"sha": "9edfae290102354837c3941a3523d92b9ab16cc3", "filename": "libjava/java/net/natInetAddressPosix.cc", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7945fafe30409970df153ece1ad881776a49747/libjava%2Fjava%2Fnet%2FnatInetAddressPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7945fafe30409970df153ece1ad881776a49747/libjava%2Fjava%2Fnet%2FnatInetAddressPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatInetAddressPosix.cc?ref=d7945fafe30409970df153ece1ad881776a49747", "patch": "@@ -229,13 +229,6 @@ java::net::InetAddress::lookup (jstring host, java::net::InetAddress* iaddr,\n     {\n       if (!all)\n         host = JvNewStringUTF (hptr->h_name);\n-      java::lang::SecurityException *ex = checkConnect (host);\n-      if (ex != NULL)\n-\t{\n-\t  if (iaddr == NULL || iaddr->addr == NULL)\n-\t    throw ex;\n-\t  hptr = NULL;\n-\t}\n     }\n   if (hptr == NULL)\n     {"}]}