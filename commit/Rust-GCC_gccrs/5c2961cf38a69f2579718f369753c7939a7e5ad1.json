{"sha": "5c2961cf38a69f2579718f369753c7939a7e5ad1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMyOTYxY2YzOGE2OWYyNTc5NzE4ZjM2OTc1M2M3OTM5YTdlNWFkMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-09-11T12:20:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-09-11T12:20:07Z"}, "message": "re PR c++/58377 (spurious \"may be used uninitialized\" warning with -Og)\n\n2013-09-11  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/58377\n\t* passes.def: Split critical edges before late uninit warning passes.\n\t* tree-cfg.c (pass_split_crit_edges): Implement clone method.\n\n\t* g++.dg/uninit-pred-4.C: New testcase.\n\nFrom-SVN: r202496", "tree": {"sha": "be8cec824a00db79a4fe6fbc29e2397d2ce351a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be8cec824a00db79a4fe6fbc29e2397d2ce351a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c2961cf38a69f2579718f369753c7939a7e5ad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c2961cf38a69f2579718f369753c7939a7e5ad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c2961cf38a69f2579718f369753c7939a7e5ad1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c2961cf38a69f2579718f369753c7939a7e5ad1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "427e6a142188fcfdc0efd4eed41ae717ee233e94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/427e6a142188fcfdc0efd4eed41ae717ee233e94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/427e6a142188fcfdc0efd4eed41ae717ee233e94"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "5e9b2079e375e02ff1568225ccd6ced80db59826", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c2961cf38a69f2579718f369753c7939a7e5ad1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c2961cf38a69f2579718f369753c7939a7e5ad1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c2961cf38a69f2579718f369753c7939a7e5ad1", "patch": "@@ -1,3 +1,9 @@\n+2013-09-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/58377\n+\t* passes.def: Split critical edges before late uninit warning passes.\n+\t* tree-cfg.c (pass_split_crit_edges): Implement clone method.\n+\n 2013-09-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/58385"}, {"sha": "635b4c464e8de49d14c8288cf737c26d3aa930ea", "filename": "gcc/passes.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c2961cf38a69f2579718f369753c7939a7e5ad1/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c2961cf38a69f2579718f369753c7939a7e5ad1/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=5c2961cf38a69f2579718f369753c7939a7e5ad1", "patch": "@@ -249,6 +249,9 @@ along with GCC; see the file COPYING3.  If not see\n \t account for the predicates protecting the set and the use of each\n \t variable.  Using a representation like Gated Single Assignment\n \t may help.  */\n+      /* Split critical edges before late uninit warning to reduce the\n+         number of false positives from it.  */\n+      NEXT_PASS (pass_split_crit_edges);\n       NEXT_PASS (pass_late_warn_uninitialized);\n       NEXT_PASS (pass_dse);\n       NEXT_PASS (pass_forwprop);\n@@ -282,6 +285,9 @@ along with GCC; see the file COPYING3.  If not see\n       /* ???  We do want some kind of loop invariant motion, but we possibly\n          need to adjust LIM to be more friendly towards preserving accurate\n \t debug information here.  */\n+      /* Split critical edges before late uninit warning to reduce the\n+         number of false positives from it.  */\n+      NEXT_PASS (pass_split_crit_edges);\n       NEXT_PASS (pass_late_warn_uninitialized);\n       NEXT_PASS (pass_uncprop);\n       NEXT_PASS (pass_local_pure_const);"}, {"sha": "49e28adb46bce84e9829a6e7982aad779837d9e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c2961cf38a69f2579718f369753c7939a7e5ad1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c2961cf38a69f2579718f369753c7939a7e5ad1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c2961cf38a69f2579718f369753c7939a7e5ad1", "patch": "@@ -1,3 +1,8 @@\n+2013-09-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/58377\n+\t* g++.dg/uninit-pred-4.C: New testcase.\n+\n 2013-09-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/58385"}, {"sha": "94ab13c50d6f147d7c30c516b05da208ff0e48a4", "filename": "gcc/testsuite/g++.dg/uninit-pred-4.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c2961cf38a69f2579718f369753c7939a7e5ad1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Funinit-pred-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c2961cf38a69f2579718f369753c7939a7e5ad1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Funinit-pred-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Funinit-pred-4.C?ref=5c2961cf38a69f2579718f369753c7939a7e5ad1", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wuninitialized -Og\" } */\n+\n+int pop ();\n+int pop_first_bucket;\n+\n+int my_pop ()\n+{\n+  int out;  // { dg-bogus \"uninitialized\" \"uninitialized variable warning\" }\n+\n+  while (pop_first_bucket)\n+    if (pop_first_bucket && (out = pop()))\n+      return out;\n+\n+  return 0;\n+}"}, {"sha": "dfe10016be54e0063316296c9ff2568d03ad03bd", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c2961cf38a69f2579718f369753c7939a7e5ad1/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c2961cf38a69f2579718f369753c7939a7e5ad1/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=5c2961cf38a69f2579718f369753c7939a7e5ad1", "patch": "@@ -7929,6 +7929,7 @@ class pass_split_crit_edges : public gimple_opt_pass\n   /* opt_pass methods: */\n   unsigned int execute () { return split_critical_edges (); }\n \n+  opt_pass * clone () { return new pass_split_crit_edges (ctxt_); }\n }; // class pass_split_crit_edges\n \n } // anon namespace"}]}