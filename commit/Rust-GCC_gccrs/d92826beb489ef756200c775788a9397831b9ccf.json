{"sha": "d92826beb489ef756200c775788a9397831b9ccf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkyODI2YmViNDg5ZWY3NTYyMDBjNzc1Nzg4YTkzOTc4MzFiOWNjZg==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2010-11-17T10:00:27Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2010-11-17T10:00:27Z"}, "message": "re PR tree-optimization/46312 (gcc.dg/vec-scal-opt2.c fails for ARM targets.)\n\n\n        PR tree-optimization/46312\n        * gcc.dg/vect/vect-scal-opt2.c: Rename to...\n        * gcc.dg/vect/vec-scal-opt2.c: ... this. Expect to pass only\n        on targets that support vector shifts with scalar shift\n        argument.\n        Remove dg-options.\n        * gcc.dg/vect/vect-scal-opt.c: Rename to...\n        * gcc.dg/vect/vec-scal-opt.c: ... this, and change likewise.\n        * gcc.dg/vect/vect-scal-opt1.c: Rename to...\n        * gcc.dg/vect/vec-scal-opt1.c: ... this, and change likewise.\n        * gcc.dg/vect/vect.exp: Run vec-scal-* tests with relevant\n        flags.\n        * gcc.dg/vect/vect-114.c: Expect to pass only on targets that\n        support misaligned data accesses.\n        * gcc.dg/vect/pr43432.c, gcc.dg/vect/vect-15.c: Likewise.\n        * gcc.dg/vect/pr43430-2.c: Remove dg-options.\n        * lib/target-supports.exp\n        (check_effective_target_vect_shift_scalar): New.\n\nFrom-SVN: r166860", "tree": {"sha": "9589931b6a60fc0181dbe3bb929c39d068f8c859", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9589931b6a60fc0181dbe3bb929c39d068f8c859"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d92826beb489ef756200c775788a9397831b9ccf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d92826beb489ef756200c775788a9397831b9ccf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d92826beb489ef756200c775788a9397831b9ccf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d92826beb489ef756200c775788a9397831b9ccf/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a677307de8fab7c7a558fb523148698a16cc5727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a677307de8fab7c7a558fb523148698a16cc5727", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a677307de8fab7c7a558fb523148698a16cc5727"}], "stats": {"total": 72, "additions": 58, "deletions": 14}, "files": [{"sha": "d2718dc5bcc9cadb3b74ebcddebf3cebab82d6b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d92826beb489ef756200c775788a9397831b9ccf", "patch": "@@ -1,3 +1,22 @@\n+2010-11-17  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/46312\n+\t* gcc.dg/vect/vect-scal-opt2.c: Rename to...\n+\t* gcc.dg/vect/vec-scal-opt2.c: ... this. Expect to pass only\n+\ton targets that support vector shifts with scalar shift argument.\n+\tRemove dg-options.\n+\t* gcc.dg/vect/vect-scal-opt.c: Rename to...\n+\t* gcc.dg/vect/vec-scal-opt.c: ... this, and change likewise.\n+\t* gcc.dg/vect/vect-scal-opt1.c: Rename to...\n+\t* gcc.dg/vect/vec-scal-opt1.c: ... this, and change likewise.\n+\t* gcc.dg/vect/vect.exp: Run vec-scal-* tests with relevant flags.\n+\t* gcc.dg/vect/vect-114.c: Expect to pass only on targets that\n+\tsupport misaligned data accesses.\n+\t* gcc.dg/vect/pr43432.c, gcc.dg/vect/vect-15.c: Likewise.\n+\t* gcc.dg/vect/pr43430-2.c: Remove dg-options.\n+\t* lib/target-supports.exp\n+\t(check_effective_target_vect_shift_scalar): New.\n+\n 2010-11-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/guality/nop.h: New file."}, {"sha": "16f53dacc66cd71e16e2a78045b52ae8c25029c4", "filename": "gcc/testsuite/gcc.dg/vect/pr43430-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr43430-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr43430-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr43430-2.c?ref=d92826beb489ef756200c775788a9397831b9ccf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_int } */\n-/* { dg-options \"-O3 -fno-vect-cost-model -fdump-tree-vect-details\" } */\n typedef unsigned char uint8_t;\n vsad16_c (void *c, uint8_t * s1, uint8_t * s2, int stride, int h)\n {"}, {"sha": "5f3db7d8235d230fff2b3856f7921bde13dbeb38", "filename": "gcc/testsuite/gcc.dg/vect/pr43432.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr43432.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr43432.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr43432.c?ref=d92826beb489ef756200c775788a9397831b9ccf", "patch": "@@ -10,5 +10,5 @@ int len){\n         dst[i] = src0[i] * src1[-i];\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_perm } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_perm && vect_hw_misalign } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "f5e54e71aa023d5ad29a54640bb96d6d73c90dd7", "filename": "gcc/testsuite/gcc.dg/vect/vec-scal-opt.c", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvec-scal-opt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvec-scal-opt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvec-scal-opt.c?ref=d92826beb489ef756200c775788a9397831b9ccf", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_shift } */\n /* { dg-require-effective-target vect_int } */\n-/* { dg-options \"-O -fdump-tree-veclower\" } */\n \n #define vidx(type, vec, idx) (*((type *) &(vec) + idx))\n #define vector(elcount, type)  \\\n@@ -20,5 +19,5 @@ int main (int argc, char *argv[]) {\n    return vidx(short, r1, 0);\n }\n \n-/* { dg-final { scan-tree-dump-times \">> k.\\[0-9_\\]*\" 1 \"veclower\" } } */\n+/* { dg-final { scan-tree-dump-times \">> k.\\[0-9_\\]*\" 1 \"veclower\" { target vect_shift_scalar } } } */\n /* { dg-final { cleanup-tree-dump \"veclower\" } } */", "previous_filename": "gcc/testsuite/gcc.dg/vect/vect-scal-opt.c"}, {"sha": "0c00c718ef45276c84048c321b6b4b1d7024b309", "filename": "gcc/testsuite/gcc.dg/vect/vec-scal-opt1.c", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvec-scal-opt1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvec-scal-opt1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvec-scal-opt1.c?ref=d92826beb489ef756200c775788a9397831b9ccf", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_shift } */\n /* { dg-require-effective-target vect_int } */\n-/* { dg-options \"-O -fdump-tree-veclower\" } */\n \n #define vidx(type, vec, idx) (*((type *) &(vec) + idx))\n #define vector(elcount, type)  \\\n@@ -18,5 +17,5 @@ int main (int argc, char *argv[]) {\n    return vidx(short, r1, 0);\n }\n \n-/* { dg-final { scan-tree-dump-times \">> 2\" 1 \"veclower\" } } */\n+/* { dg-final { scan-tree-dump-times \">> 2\" 1 \"veclower\" { target vect_shift_scalar } } } */\n /* { dg-final { cleanup-tree-dump \"veclower\" } } */", "previous_filename": "gcc/testsuite/gcc.dg/vect/vect-scal-opt1.c"}, {"sha": "5e79fb5869921e11407d73af766b498d3a6a20c4", "filename": "gcc/testsuite/gcc.dg/vect/vec-scal-opt2.c", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvec-scal-opt2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvec-scal-opt2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvec-scal-opt2.c?ref=d92826beb489ef756200c775788a9397831b9ccf", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_shift } */\n /* { dg-require-effective-target vect_int } */\n-/* { dg-options \"-O -fdump-tree-veclower\" } */\n \n #define vidx(type, vec, idx) (*((type *) &(vec) + idx))\n #define vector(elcount, type)  \\\n@@ -17,5 +16,5 @@ int main (int argc, char *argv[]) {\n    return vidx(short, r1, 0);\n }\n \n-/* { dg-final { scan-tree-dump-times \">> 2\" 1 \"veclower\" } } */\n+/* { dg-final { scan-tree-dump-times \">> 2\" 1 \"veclower\" { target vect_shift_scalar } } } */\n /* { dg-final { cleanup-tree-dump \"veclower\" } } */", "previous_filename": "gcc/testsuite/gcc.dg/vect/vect-scal-opt2.c"}, {"sha": "4bc786278155bae07c5d6e7c5d62836bb241de20", "filename": "gcc/testsuite/gcc.dg/vect/vect-114.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-114.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-114.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-114.c?ref=d92826beb489ef756200c775788a9397831b9ccf", "patch": "@@ -34,7 +34,7 @@ int main (void)\n   return main1 ();\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" { target { ! vect_perm } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target vect_perm } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" { target { ! { vect_perm && vect_hw_misalign } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_perm && vect_hw_misalign } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "ba7599162dba1a614f738d2a41a1a729280e20fc", "filename": "gcc/testsuite/gcc.dg/vect/vect-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-15.c?ref=d92826beb489ef756200c775788a9397831b9ccf", "patch": "@@ -35,5 +35,5 @@ int main (void)\n   return main1 ();\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target vect_perm } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_perm && vect_hw_misalign } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "5160020917b330d3c957c2878796cfccd144e67b", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=d92826beb489ef756200c775788a9397831b9ccf", "patch": "@@ -23,9 +23,6 @@ load_lib gcc-dg.exp\n # Set up flags used for tests that don't specify options.\n set DEFAULT_VECTCFLAGS \"\"\n \n-# These flags are used for all targets.\n-lappend DEFAULT_VECTCFLAGS \"-ftree-vectorize\" \"-fno-vect-cost-model\"\n-\n # If the target system supports vector instructions, the default action\n # for a test is 'run', otherwise it's 'compile'.  Save current default.\n # Executing vector instructions on a system without hardware vector support\n@@ -118,6 +115,12 @@ if  [istarget \"powerpc-*paired*\"]  {\n     return\n }\n \n+global VEC_FLAGS\n+set VEC_FLAGS $DEFAULT_VECTCFLAGS\n+\n+# These flags are used for all targets.\n+lappend DEFAULT_VECTCFLAGS \"-ftree-vectorize\" \"-fno-vect-cost-model\"\n+\n # Initialize `dg'.\n dg-init\n \n@@ -137,6 +140,11 @@ lappend DEFAULT_VECTCFLAGS \"-O2\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/nodump-*.\\[cS\\]]]  \\\n \t\"\" $DEFAULT_VECTCFLAGS\n \n+# \"-O -fdump-tree-veclower\"\n+lappend VEC_FLAGS \"-O\" \"-fdump-tree-veclower\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/vec-scal-*.\\[cS\\]]]  \\\n+        \"\" $VEC_FLAGS\n+\n set VECT_SLP_CFLAGS $DEFAULT_VECTCFLAGS\n \n lappend DEFAULT_VECTCFLAGS \"-fdump-tree-vect-details\" "}, {"sha": "50039e08f4cf3ec2198a8d317f5307c674a7d500", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92826beb489ef756200c775788a9397831b9ccf/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=d92826beb489ef756200c775788a9397831b9ccf", "patch": "@@ -2258,6 +2258,27 @@ proc check_effective_target_vect_shift { } {\n     return $et_vect_shift_saved\n }\n \n+# Return 1 if the target supports hardware vector shift operation with\n+# scalar shift argument.\n+\n+proc check_effective_target_vect_shift_scalar { } {\n+    global et_vect_shift_scalar_saved\n+\n+    if [info exists et_vect_shift_scalar_saved] {\n+        verbose \"check_effective_target_vect_shift_scalar: using cached result\" 2\n+    } else {\n+        set et_vect_shift_scalar_saved 0\n+        if { [istarget x86_64-*-*]\n+             || [istarget i?86-*-*] } {\n+           set et_vect_shift_scalar_saved 1\n+        }\n+    }\n+\n+    verbose \"check_effective_target_vect_shift_scalar: returning $et_vect_shift_scalar_saved\" 2\n+    return $et_vect_shift_scalar_saved\n+}\n+\n+\n # Return 1 if the target supports hardware vectors of long, 0 otherwise.\n #\n # This can change for different subtargets so do not cache the result."}]}