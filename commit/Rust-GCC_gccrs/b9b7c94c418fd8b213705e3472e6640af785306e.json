{"sha": "b9b7c94c418fd8b213705e3472e6640af785306e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjliN2M5NGM0MThmZDhiMjEzNzA1ZTM0NzJlNjY0MGFmNzg1MzA2ZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-04-04T16:45:26Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-04-04T16:45:26Z"}, "message": "Add support for EXTENDED_FLOAT_STUBS\n\nFrom-SVN: r11659", "tree": {"sha": "7fd84d7adf1e64111f4f7de54d28ddf03f1e7219", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fd84d7adf1e64111f4f7de54d28ddf03f1e7219"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9b7c94c418fd8b213705e3472e6640af785306e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9b7c94c418fd8b213705e3472e6640af785306e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9b7c94c418fd8b213705e3472e6640af785306e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9b7c94c418fd8b213705e3472e6640af785306e/comments", "author": null, "committer": null, "parents": [{"sha": "22745c7e7ae516361df2267d38152970712e57b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22745c7e7ae516361df2267d38152970712e57b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22745c7e7ae516361df2267d38152970712e57b6"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "eb160e8afc747dcab2429b9a48eed67a848aa114", "filename": "gcc/config/fp-bit.c", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9b7c94c418fd8b213705e3472e6640af785306e/gcc%2Fconfig%2Ffp-bit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9b7c94c418fd8b213705e3472e6640af785306e/gcc%2Fconfig%2Ffp-bit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffp-bit.c?ref=b9b7c94c418fd8b213705e3472e6640af785306e", "patch": "@@ -62,6 +62,49 @@ Boston, MA 02111-1307, USA.  */\n    SMALL_MACHINE: Useful when operations on QIs and HIs are faster\n      than on an SI */\n \n+/* We don't currently support extended floats (long doubles) on machines\n+   without hardware to deal with them.\n+\n+   These stubs are just to keep the linker from complaining about unresolved\n+   references which can be pulled in from libio & libstdc++, even if the\n+   user isn't using long doubles.  However, they may generate an unresolved\n+   external to abort if abort is not used by the function, and the stubs\n+   are referenced from within libc, since libgcc goes before and after the\n+   system library.  */\n+\n+#ifdef EXTENDED_FLOAT_STUBS\n+__truncxfsf2 (){ abort(); }\n+__extendsfxf2 (){ abort(); }\n+__addxf3 (){ abort(); }\n+__divxf3 (){ abort(); }\n+__eqxf2 (){ abort(); }\n+__extenddfxf2 (){ abort(); }\n+__gtxf2 (){ abort(); }\n+__lexf2 (){ abort(); }\n+__ltxf2 (){ abort(); }\n+__mulxf3 (){ abort(); }\n+__negxf2 (){ abort(); }\n+__nexf2 (){ abort(); }\n+__subxf3 (){ abort(); }\n+__truncxfdf2 (){ abort(); }\n+\n+__trunctfsf2 (){ abort(); }\n+__extendsftf2 (){ abort(); }\n+__addtf3 (){ abort(); }\n+__divtf3 (){ abort(); }\n+__eqtf2 (){ abort(); }\n+__extenddftf2 (){ abort(); }\n+__gttf2 (){ abort(); }\n+__letf2 (){ abort(); }\n+__lttf2 (){ abort(); }\n+__multf3 (){ abort(); }\n+__negtf2 (){ abort(); }\n+__netf2 (){ abort(); }\n+__subtf3 (){ abort(); }\n+__trunctfdf2 (){ abort(); }\n+#else\t/* !EXTENDED_FLOAT_STUBS, rest of file */\n+\n+\n typedef SFtype __attribute__ ((mode (SF)));\n typedef DFtype __attribute__ ((mode (DF)));\n \n@@ -1350,3 +1393,4 @@ df_to_sf (DFtype arg_a)\n }\n \n #endif\n+#endif /* !EXTENDED_FLOAT_STUBS */"}, {"sha": "3ffcf951aeb6a13478c543fd4dfe350a11e5a40d", "filename": "gcc/config/i960/t-960bare", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9b7c94c418fd8b213705e3472e6640af785306e/gcc%2Fconfig%2Fi960%2Ft-960bare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9b7c94c418fd8b213705e3472e6640af785306e/gcc%2Fconfig%2Fi960%2Ft-960bare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Ft-960bare?ref=b9b7c94c418fd8b213705e3472e6640af785306e", "patch": "@@ -1,7 +1,7 @@\n LIBGCC1 =\n CROSS_LIBGCC1 =\n \n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c xp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT_BIT_ORDER_MISMATCH' > dp-bit.c\n@@ -12,6 +12,10 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT_BIT_ORDER_MISMATCH' >> fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n \n+xp-bit.c: $(srcdir)/config/xp-bit.c\n+\techo '#define EXTENDED_FLOAT_STUBS' > xp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> xp-bit.c\n+\n MULTILIB_OPTIONS=mnumerics\n MULTILIB_DIRNAMES=float\n MULTILIB_MATCHES=mnumerics=msb mnumerics=msc mnumerics=mkb mnumerics=mkc mnumerics=mmc mnumerics=mcb mnumerics=mcc"}, {"sha": "b2aa7d466a3654b943229ec7a2255aeb3f846009", "filename": "gcc/config/i960/t-vxworks960", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9b7c94c418fd8b213705e3472e6640af785306e/gcc%2Fconfig%2Fi960%2Ft-vxworks960", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9b7c94c418fd8b213705e3472e6640af785306e/gcc%2Fconfig%2Fi960%2Ft-vxworks960", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Ft-vxworks960?ref=b9b7c94c418fd8b213705e3472e6640af785306e", "patch": "@@ -4,7 +4,7 @@ CROSS_LIBGCC1 =\n # We don't want to put exit in libgcc.a for VxWorks, because VxWorks\n # does not have _exit.\n LIBGCC2_CFLAGS = -O2 $(GCC_CFLAGS) -g1 -Dexit=unused_exit\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c xp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT_BIT_ORDER_MISMATCH' > dp-bit.c\n@@ -15,6 +15,10 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT_BIT_ORDER_MISMATCH' >> fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n \n+xp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define EXTENDED_FLOAT_STUBS' > xp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> xp-bit.c\n+\n MULTILIB_OPTIONS=mnumerics\n MULTILIB_DIRNAMES=float\n MULTILIB_MATCHES=mnumerics=msb mnumerics=msc mnumerics=mkb mnumerics=mkc mnumerics=mmc mnumerics=mcb mnumerics=mcc"}]}