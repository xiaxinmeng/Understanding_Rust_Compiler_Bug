{"sha": "e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZmM2Y1MjZiMTNiN2I1NGE2NGVhZmM2YzhmNjc4MTBlNmYzZjQ5NA==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2015-02-16T03:47:54Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2015-02-16T03:47:54Z"}, "message": "bugreport.texi: Adjust section titles throughout the file to use \"Title Case\".\n\n2015-02-15  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/bugreport.texi: Adjust section titles throughout the file\n\tto use \"Title Case\".\n\t* doc/extend.texi: Likewise.\n\t* doc/gcov.texi: Likewise.\n\t* doc/implement-c.texi: Likewise.\n\t* doc/implement-cxx.texi: Likewise.\n\t* doc/invoke.texi: Likewise.\n\t* doc/objc.texi: Likewise.\n\t* doc/standards.texi: Likewise.\n\t* doc/trouble.texi: Likewise.\n\nFrom-SVN: r220722", "tree": {"sha": "e6de19885f6fefc22cdc0047eec6254429300be0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6de19885f6fefc22cdc0047eec6254429300be0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32b8f2ec59cf6cb374205356059e6719ebd9fa38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32b8f2ec59cf6cb374205356059e6719ebd9fa38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32b8f2ec59cf6cb374205356059e6719ebd9fa38"}], "stats": {"total": 131, "additions": 72, "deletions": 59}, "files": [{"sha": "893f1124c72d73f2564953eac4f733ce2ab17386", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "patch": "@@ -1,3 +1,16 @@\n+2015-02-15  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/bugreport.texi: Adjust section titles throughout the file\n+\tto use \"Title Case\".\n+\t* doc/extend.texi: Likewise.\n+\t* doc/gcov.texi: Likewise.\n+\t* doc/implement-c.texi: Likewise.\n+\t* doc/implement-cxx.texi: Likewise.\n+\t* doc/invoke.texi: Likewise.\n+\t* doc/objc.texi: Likewise.\n+\t* doc/standards.texi: Likewise.\n+\t* doc/trouble.texi: Likewise.\n+\n 2015-02-15  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* cgraph.h (symtab_node::has_aliases_p): Simplify."}, {"sha": "6e02534efd7f4d1991037c0cbecebfa9e926a651", "filename": "gcc/doc/bugreport.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fbugreport.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fbugreport.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fbugreport.texi?ref=e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "patch": "@@ -82,7 +82,7 @@ suggestions for improvement of GCC are welcome in any case.\n @end itemize\n \n @node Bug Reporting\n-@section How and where to Report Bugs\n+@section How and Where to Report Bugs\n @cindex compiler bugs, reporting\n \n Bugs should be reported to the bug database at @value{BUGURL}."}, {"sha": "e1b63696377ef79ec199669c166a44246a4b688a", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "patch": "@@ -845,7 +845,7 @@ the middle operand uses the value already computed without the undesirable\n effects of recomputing it.\n \n @node __int128\n-@section 128-bit integers\n+@section 128-bit Integers\n @cindex @code{__int128} data types\n \n As an extension the integer scalar type @code{__int128} is supported for\n@@ -1548,7 +1548,7 @@ struct foo d[1] = @{ @{ 1, @{ 2, 3, 4 @} @} @};  // @r{Invalid.}\n @end smallexample\n \n @node Empty Structures\n-@section Structures With No Members\n+@section Structures with No Members\n @cindex empty structures\n @cindex zero-size structures\n \n@@ -1786,7 +1786,7 @@ The option @option{-Wpointer-arith} requests a warning if these extensions\n are used.\n \n @node Pointers to Arrays\n-@section Pointers to arrays with qualifiers work as expected\n+@section Pointers to Arrays with Qualifiers Work as Expected\n @cindex pointers to arrays\n @cindex const qualifier\n \n@@ -8154,7 +8154,7 @@ You cannot operate between vectors of different lengths or different\n signedness without a cast.\n \n @node Offsetof\n-@section Offsetof\n+@section Support for @code{offsetof}\n @findex __builtin_offsetof\n \n GCC implements for both C and C++ a syntactic extension to implement\n@@ -8182,7 +8182,7 @@ may be dependent.  In either case, @var{member} may consist of a single\n identifier, or a sequence of member accesses and array references.\n \n @node __sync Builtins\n-@section Legacy __sync Built-in Functions for Atomic Memory Access\n+@section Legacy @code{__sync} Built-in Functions for Atomic Memory Access\n \n The following built-in functions\n are intended to be compatible with those described\n@@ -8322,7 +8322,7 @@ are not prevented from being speculated to before the barrier.\n @end table\n \n @node __atomic Builtins\n-@section Built-in functions for memory model aware atomic operations\n+@section Built-in Functions for Memory Model Aware Atomic Operations\n \n The following built-in functions approximately match the requirements for\n C++11 memory model. Many are similar to the @samp{__sync} prefixed built-in\n@@ -8591,7 +8591,7 @@ compiler may also ignore this parameter.\n @end deftypefn\n \n @node Integer Overflow Builtins\n-@section Built-in functions to perform arithmetics and arithmetic overflow checking.\n+@section Built-in Functions to Perform Arithmetic with Overflow Checking\n \n The following built-in functions allow performing simple arithmetic operations\n together with checking whether the operations overflowed.\n@@ -8650,7 +8650,7 @@ functions above, except they perform multiplication, instead of addition.\n @end deftypefn\n \n @node x86 specific memory model extensions for transactional memory\n-@section x86 specific memory model extensions for transactional memory\n+@section x86-Specific Memory Model Extensions for Transactional Memory\n \n The x86 architecture supports additional memory ordering flags\n to mark lock critical sections for hardware lock elision. \n@@ -8986,7 +8986,7 @@ returns -1.\n @end deftypefn\n \n @node Cilk Plus Builtins\n-@section Cilk Plus C/C++ language extension Built-in Functions.\n+@section Cilk Plus C/C++ Language Extension Built-in Functions\n \n GCC provides support for the following built-in reduction funtions if Cilk Plus\n is enabled. Cilk Plus can be enabled using the @option{-fcilkplus} flag.\n@@ -11178,7 +11178,7 @@ number of an IACC register.  See @pxref{Other Built-in Functions}\n for more details.\n \n @node Directly-mapped Integer Functions\n-@subsubsection Directly-mapped Integer Functions\n+@subsubsection Directly-Mapped Integer Functions\n \n The functions listed below map directly to FR-V I-type instructions.\n \n@@ -11217,7 +11217,7 @@ The functions listed below map directly to FR-V I-type instructions.\n @end multitable\n \n @node Directly-mapped Media Functions\n-@subsubsection Directly-mapped Media Functions\n+@subsubsection Directly-Mapped Media Functions\n \n The functions listed below map directly to FR-V M-type instructions.\n \n@@ -11490,7 +11490,7 @@ The functions listed below map directly to FR-V M-type instructions.\n @end multitable\n \n @node Raw read/write Functions\n-@subsubsection Raw read/write Functions\n+@subsubsection Raw Read/Write Functions\n \n This sections describes built-in functions related to read and write\n instructions to access memory.  These functions generate\n@@ -17255,7 +17255,7 @@ int __builtin_ia32_xtest ()\n @end smallexample\n \n @node x86 transactional memory intrinsics\n-@subsection x86 transaction memory intrinsics\n+@subsection x86 Transactional Memory Intrinsics\n \n Hardware transactional memory intrinsics for x86. These allow to use\n memory transactions with RTM (Restricted Transactional Memory).\n@@ -17946,7 +17946,7 @@ void ignore_vec_dep (int *a, int k, int c, int m)\n \n \n @node Unnamed Fields\n-@section Unnamed struct/union fields within structs/unions\n+@section Unnamed Structure and Union Fields\n @cindex @code{struct}\n @cindex @code{union}\n \n@@ -18287,7 +18287,7 @@ Non-@code{static} members shall not be @code{__thread}.\n @end itemize\n \n @node Binary constants\n-@section Binary constants using the @samp{0b} prefix\n+@section Binary Constants using the @samp{0b} Prefix\n @cindex Binary constants using the @samp{0b} prefix\n \n Integer constants can be written as binary constants, consisting of a\n@@ -18522,7 +18522,7 @@ almost certainly breaks things.\n another way to control placement of these constructs.\n \n @node C++ Interface\n-@section #pragma interface and implementation\n+@section C++ Interface and Implementation Pragmas\n \n @cindex interface and implementation headers, C++\n @cindex C++ interface and implementation headers\n@@ -18757,7 +18757,7 @@ duplication.\n @end enumerate\n \n @node Bound member functions\n-@section Extracting the function pointer from a bound pointer to member function\n+@section Extracting the Function Pointer from a Bound Pointer to Member Function\n @cindex pmf\n @cindex pointer to member function\n @cindex bound pointer to member function"}, {"sha": "dba36e0b972d00362880a28185e4fd3d4d07e359", "filename": "gcc/doc/gcov.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.texi?ref=e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "patch": "@@ -591,7 +591,7 @@ collected at that point to be dumped to @file{.gcda} output files.\n @c man end\n \n @node Gcov Data Files\n-@section Brief description of @command{gcov} data files\n+@section Brief Description of @command{gcov} Data Files\n \n @command{gcov} uses two files for profiling.  The names of these files\n are derived from the original @emph{object} file by substituting the\n@@ -618,7 +618,7 @@ and functions provided in that header file should be used to access the\n coverage files.\n \n @node Cross-profiling\n-@section Data file relocation to support cross-profiling\n+@section Data File Relocation to Support Cross-Profiling\n \n Running the program will cause profile output to be generated.  For each\n source file compiled with @option{-fprofile-arcs}, an accompanying @file{.gcda}"}, {"sha": "333651f76443a9151ab39d6be943b98ec3e20305", "filename": "gcc/doc/implement-c.texi", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fimplement-c.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fimplement-c.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fimplement-c.texi?ref=e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "patch": "@@ -3,7 +3,7 @@\n @c For copying conditions, see the file gcc.texi.\n \n @node C Implementation\n-@chapter C Implementation-defined behavior\n+@chapter C Implementation-Defined Behavior\n @cindex implementation-defined behavior, C language\n \n A conforming implementation of ISO C is required to document its\n@@ -279,7 +279,7 @@ truncated towards zero.\n @end itemize\n \n @node Floating point implementation\n-@section Floating point\n+@section Floating Point\n \n @itemize @bullet\n @item\n@@ -375,7 +375,7 @@ defined by GCC itself.\n @end itemize\n \n @node Arrays and pointers implementation\n-@section Arrays and pointers\n+@section Arrays and Pointers\n \n @itemize @bullet\n @item\n@@ -455,7 +455,7 @@ used to determine if a function has not been inlined and why not.\n @end itemize\n \n @node Structures unions enumerations and bit-fields implementation\n-@section Structures, unions, enumerations, and bit-fields\n+@section Structures, Unions, Enumerations, and Bit-Fields\n \n @itemize @bullet\n @item\n@@ -601,7 +601,7 @@ GCC is only limited by available memory.\n @end itemize\n \n @node Preprocessing directives implementation\n-@section Preprocessing directives\n+@section Preprocessing Directives\n \n @xref{Implementation-defined behavior, , Implementation-defined\n behavior, cpp, The C Preprocessor}, for details of these aspects of\n@@ -665,7 +665,7 @@ respectively, the date and time of translation are not available (C90\n @end itemize\n \n @node Library functions implementation\n-@section Library functions\n+@section Library Functions\n \n The behavior of most of these points are dependent on the implementation\n of the C library, and are not defined by GCC itself.\n@@ -732,7 +732,7 @@ Determined by ABI@.\n @end itemize\n \n @node Locale-specific behavior implementation\n-@section Locale-specific behavior\n+@section Locale-Specific Behavior\n \n The behavior of these points are dependent on the implementation\n of the C library, and are not defined by GCC itself."}, {"sha": "66176e563690a765b4ebf61d728a2a2d9996ec32", "filename": "gcc/doc/implement-cxx.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fimplement-cxx.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fimplement-cxx.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fimplement-cxx.texi?ref=e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "patch": "@@ -3,7 +3,7 @@\n @c For copying conditions, see the file gcc.texi.\n \n @node C++ Implementation\n-@chapter C++ Implementation-defined behavior\n+@chapter C++ Implementation-Defined Behavior\n @cindex implementation-defined behavior, C++ language\n \n A conforming implementation of ISO C++ is required to document its\n@@ -31,7 +31,7 @@ environment); refer to their documentation for details.\n @end menu\n \n @node Conditionally-supported behavior\n-@section Conditionally-supported behavior\n+@section Conditionally-Supported Behavior\n \n @cite{Each implementation shall include documentation that identifies\n all conditionally-supported constructs that it does not support (C++0x\n@@ -49,7 +49,7 @@ arguments of such types.\n @end itemize\n \n @node Exception handling\n-@section Exception handling\n+@section Exception Handling\n \n @itemize @bullet\n @item"}, {"sha": "62bcece309ab47b2f7bb02483b92878b48ca4c42", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "patch": "@@ -11334,7 +11334,7 @@ independent.\n @c man end\n \n @node Spec Files\n-@section Specifying subprocesses and the switches to pass to them\n+@section Specifying Subprocesses and the Switches to Pass to Them\n @cindex Spec Files\n \n @command{gcc} is a driver program.  It performs its job by invoking a\n@@ -12145,7 +12145,7 @@ with @option{-march} or @option{-mtune}, those options take precedence\n over the appropriate part of this option.\n @end table\n \n-@subsubsection @option{-march} and @option{-mcpu} feature modifiers\n+@subsubsection @option{-march} and @option{-mcpu} Feature Modifiers\n @cindex @option{-march} feature modifiers\n @cindex @option{-mcpu} feature modifiers\n Feature modifiers used with @option{-march} and @option{-mcpu} can be one\n@@ -13386,7 +13386,7 @@ Warn about conversions between address spaces in the case where the\n resulting address space is not contained in the incoming address space.\n @end table\n \n-@subsubsection @code{EIND} and Devices with more than 128 Ki Bytes of Flash\n+@subsubsection @code{EIND} and Devices with More Than 128 Ki Bytes of Flash\n @cindex @code{EIND}\n Pointers in the implementation are 16@tie{}bits wide.\n The address of a function or label is represented as word address so"}, {"sha": "5588f67da5ff1ce6d9260d888a5fae4e2cc32c12", "filename": "gcc/doc/objc.texi", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fobjc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fobjc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fobjc.texi?ref=e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "patch": "@@ -5,7 +5,7 @@\n @node Objective-C\n @comment  node-name,  next,  previous,  up\n \n-@chapter GNU Objective-C features\n+@chapter GNU Objective-C Features\n \n This document is meant to describe some of the GNU Objective-C\n features.  It is not intended to teach you Objective-C.  There are\n@@ -26,7 +26,7 @@ several resources on the Internet that present the language.\n \n @c =========================================================================\n @node GNU Objective-C runtime API\n-@section GNU Objective-C runtime API\n+@section GNU Objective-C Runtime API\n \n This section is specific for the GNU Objective-C runtime.  If you are\n using a different runtime, you can skip it.\n@@ -50,7 +50,7 @@ to the GNU Objective-C runtime API to define new classes or methods.\n \n @c =========================================================================\n @node Modern GNU Objective-C runtime API\n-@subsection Modern GNU Objective-C runtime API\n+@subsection Modern GNU Objective-C Runtime API\n \n The GNU Objective-C runtime provides an API which is similar to the\n one provided by the ``Objective-C 2.0'' Apple/NeXT Objective-C\n@@ -109,7 +109,7 @@ the GNU Objective-C runtime API.\n \n @c =========================================================================\n @node Traditional GNU Objective-C runtime API\n-@subsection Traditional GNU Objective-C runtime API\n+@subsection Traditional GNU Objective-C Runtime API\n \n The GNU Objective-C runtime used to provide a different API, which we\n call the ``traditional'' GNU Objective-C runtime API.  Functions\n@@ -124,7 +124,7 @@ available.\n \n @c =========================================================================\n @node Executing code before main\n-@section @code{+load}: Executing code before main\n+@section @code{+load}: Executing Code before @code{main}\n \n This section is specific for the GNU Objective-C runtime.  If you are\n using a different runtime, you can skip it.\n@@ -208,7 +208,7 @@ instead of @code{+initialize}.\n \n \n @node What you can and what you cannot do in +load\n-@subsection What you can and what you cannot do in @code{+load}\n+@subsection What You Can and Cannot Do in @code{+load}\n \n @code{+load} is to be used only as a last resort.  Because it is\n executed very early, most of the Objective-C runtime machinery will\n@@ -279,7 +279,7 @@ above apply to classes defined in bundle.\n \n \n @node Type encoding\n-@section Type encoding\n+@section Type Encoding\n \n This is an advanced section.  Type encodings are used extensively by\n the compiler and by the runtime, but you generally do not need to know\n@@ -487,7 +487,7 @@ as @code{*}, and the @code{const} is lost.\n @end menu\n \n @node Legacy type encoding\n-@subsection Legacy type encoding\n+@subsection Legacy Type Encoding\n \n Unfortunately, historically GCC used to have a number of bugs in its\n encoding code.  The NeXT runtime expects GCC to emit type encodings in\n@@ -518,7 +518,7 @@ bitfields.  It encodes them as @code{b} followed by the size, without\n a bit offset or the underlying field type.\n \n @node @@encode\n-@subsection @@encode\n+@subsection @code{@@encode}\n \n GNU Objective-C supports the @code{@@encode} syntax that allows you to\n create a type encoding from a C/Objective-C type.  For example,\n@@ -530,7 +530,7 @@ is compiled into @code{\"r*\"}, while @code{@@encode(bycopy char *)} is\n invalid and will cause a compilation error.\n \n @node Method signatures\n-@subsection Method signatures\n+@subsection Method Signatures\n \n This section documents the encoding of method types, which is rarely\n needed to use Objective-C.  You should skip it at a first reading; the\n@@ -660,7 +660,7 @@ as argument.\n \n @c =========================================================================\n @node Constant string objects\n-@section Constant string objects\n+@section Constant String Objects\n \n GNU Objective-C provides constant string objects that are generated\n directly by the compiler.  You declare a constant string object by\n@@ -721,7 +721,7 @@ restrictions in doing this.\n \n @c =========================================================================\n @node compatibility_alias\n-@section compatibility_alias\n+@section @code{compatibility_alias}\n \n The keyword @code{@@compatibility_alias} allows you to define a class name\n as equivalent to another class name.  For example:\n@@ -858,7 +858,7 @@ exceptions enabled, that is with the command line option\n \n @c =========================================================================\n @node Fast enumeration\n-@section Fast enumeration\n+@section Fast Enumeration\n \n @menu\n * Using fast enumeration::\n@@ -869,7 +869,7 @@ exceptions enabled, that is with the command line option\n \n @c ================================\n @node Using fast enumeration\n-@subsection Using fast enumeration\n+@subsection Using Fast Enumeration\n \n GNU Objective-C provides support for the fast enumeration syntax:\n \n@@ -909,7 +909,7 @@ provides the implementation of @code{NSArray}, @code{NSString} and\n \n @c ================================\n @node c99-like fast enumeration syntax\n-@subsection c99-like fast enumeration syntax\n+@subsection C99-Like Fast Enumeration Syntax\n \n A c99-like declaration syntax is also allowed:\n \n@@ -943,7 +943,7 @@ syntax in Objective-C.\n \n @c ================================\n @node Fast enumeration details\n-@subsection Fast enumeration details\n+@subsection Fast Enumeration Details\n \n Here is a more technical description with the gory details.  Consider the code\n \n@@ -1006,7 +1006,7 @@ something different, such as raising an exception.\n \n @c ================================\n @node Fast enumeration protocol\n-@subsection Fast enumeration protocol\n+@subsection Fast Enumeration Protocol\n \n If you want your own collection object to be usable with fast\n enumeration, you need to have it implement the method\n@@ -1076,7 +1076,7 @@ to be of type @code{unsigned int} and everything would still work.\n \n @c =========================================================================\n @node Messaging with the GNU Objective-C runtime\n-@section Messaging with the GNU Objective-C runtime\n+@section Messaging with the GNU Objective-C Runtime\n \n This section is specific for the GNU Objective-C runtime.  If you are\n using a different runtime, you can skip it.\n@@ -1107,7 +1107,7 @@ then it calls it.\n \n @c =========================================================================\n @node Dynamically registering methods\n-@subsection Dynamically registering methods\n+@subsection Dynamically Registering Methods\n \n If @code{objc_msg_lookup()} does not find a suitable method\n implementation, because the receiver does not implement the required\n@@ -1153,7 +1153,7 @@ GCC version 4.6.\n \n @c =========================================================================\n @node Forwarding hook\n-@subsection Forwarding hook\n+@subsection Forwarding Hook\n \n The GNU Objective-C runtime provides a hook, called\n @code{__objc_msg_forward2}, which is called by"}, {"sha": "f55e24c33568ad6f9b5a38456974eccaed2f0c5e", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "patch": "@@ -9,7 +9,7 @@ For each language compiled by GCC for which there is a standard, GCC\n attempts to follow one or more versions of that standard, possibly\n with some exceptions, and possibly with some extensions.\n \n-@section C language\n+@section C Language\n @cindex C standard\n @cindex C standards\n @cindex ANSI C standard\n@@ -169,7 +169,7 @@ For references to Technical Corrigenda, Rationale documents and\n information concerning the history of C that is available online, see\n @uref{http://gcc.gnu.org/readings.html}\n \n-@section C++ language\n+@section C++ Language\n \n GCC supports the original ISO C++ standard (1998) and contains\n experimental support for the second ISO C++ standard (2011).\n@@ -208,7 +208,7 @@ may also select an extended version of the C++ language explicitly with\n @option{-std=gnu++11} (for C++11 with GNU extensions).  The default, if\n no C++ language dialect options are given, is @option{-std=gnu++98}.\n \n-@section Objective-C and Objective-C++ languages\n+@section Objective-C and Objective-C++ Languages\n @cindex Objective-C\n @cindex Objective-C++\n \n@@ -275,12 +275,12 @@ The authoritative manual on Objective-C 2.0 is available from Apple:\n For more information concerning the history of Objective-C that is\n available online, see @uref{http://gcc.gnu.org/readings.html}\n \n-@section Go language\n+@section Go Language\n \n As of the GCC 4.7.1 release, GCC supports the Go 1 language standard,\n described at @uref{http://golang.org/doc/go1.html}.\n \n-@section References for other languages\n+@section References for Other Languages\n \n @xref{Top, GNAT Reference Manual, About This Guide, gnat_rm,\n GNAT Reference Manual}, for information on standard"}, {"sha": "f2baff477d57c34daea6e2554aa47c5e897b1d10", "filename": "gcc/doc/trouble.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Ftrouble.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f3f526b13b7b54a64eafc6c8f67810e6f3f494/gcc%2Fdoc%2Ftrouble.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftrouble.texi?ref=e6f3f526b13b7b54a64eafc6c8f67810e6f3f494", "patch": "@@ -676,7 +676,7 @@ symbols any static data members that lack definitions.\n \n \n @node Name lookup\n-@subsection Name lookup, templates, and accessing members of base classes\n+@subsection Name Lookup, Templates, and Accessing Members of Base Classes\n \n @cindex base class members\n @cindex two-stage name lookup"}]}