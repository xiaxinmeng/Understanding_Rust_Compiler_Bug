{"sha": "2731cc566bbf5cd7a3ec87dab2816c72d6c58516", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjczMWNjNTY2YmJmNWNkN2EzZWM4N2RhYjI4MTZjNzJkNmM1ODUxNg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-22T10:43:37Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-22T10:43:37Z"}, "message": "Merge in g77-0.5.22.\n\nFrom-SVN: r18757", "tree": {"sha": "0be9c66017b3b794623f60bffe69c9e5dc2e0bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0be9c66017b3b794623f60bffe69c9e5dc2e0bcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2731cc566bbf5cd7a3ec87dab2816c72d6c58516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2731cc566bbf5cd7a3ec87dab2816c72d6c58516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2731cc566bbf5cd7a3ec87dab2816c72d6c58516", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/comments", "author": null, "committer": null, "parents": [{"sha": "44d2eabcec980711169175cb6bdf5f50a306d5e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d2eabcec980711169175cb6bdf5f50a306d5e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44d2eabcec980711169175cb6bdf5f50a306d5e0"}], "stats": {"total": 119, "additions": 104, "deletions": 15}, "files": [{"sha": "3e890556c43b3829b93a2e0179b03f95e320c3fb", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=2731cc566bbf5cd7a3ec87dab2816c72d6c58516", "patch": "@@ -1,3 +1,8 @@\n+Sat Feb 28 15:32:15 1998  Craig Burley  <burley@gnu.org>\n+\n+\t* libI77/open.c (f_open): Use sizeof(buf) instead of\n+\t256, for the usual reasons.\n+\n Tue Dec 23 22:56:01 1997  Craig Burley  <burley@gnu.org>\n \n \t* libF77/signal_.c (G77_signal_0): Return type is\n@@ -9,6 +14,17 @@ Wed Oct 29 01:01:04 1997  Mumit Khan  <khan@brahma.xraylith.wisc.edu>\n \n \t* configure.in: Set CC to CC_FOR_TARGET when cross-compiling.\n \n+Fri Oct 24 11:15:22 1997  Mumit Khan <khan@brahma.xraylith.wisc.edu>\n+\n+\t* libI77/close.c (f_exit): Reset f__init so that f_clos does not\n+\t(incorrectly) think there is an I/O recursion when program is\n+\tinterrupted.\n+\n+Wed Oct 15 10:06:29 1997  Richard Henderson  <rth@cygnus.com>\n+\n+\t* libI77/fio.h: Include <string.h> if STDC_HEADERS.\n+\t* libU77/chmod_.c: Likewise.\n+\n Tue Sep 30 00:41:39 1997  Craig Burley  <burley@gnu.ai.mit.edu>\n \n \tDo a better job of printing the offending FORMAT string\n@@ -532,6 +548,12 @@ Thu Oct 31 22:27:45 1996  Craig Burley  <burley@gnu.ai.mit.edu>\n \t* libI77/Version.c: Use <stdio.h>, not \"stdio.h\".\n \t* libF77/Version.c: Likewise.\n \n+1997-10-03  Dave Love  <d.love@dl.ac.uk>\n+\n+\t* configure.in: Check for tempnam (best because it obeys TMPDIR).\n+\t* libI77/open.c: Use it.\n+\t* libI77/err.c: New message # 132.\n+\n Wed Aug 28 13:25:29 1996  Dave Love  <d.love@dl.ac.uk>\n \n \t* libI77/rsne.c (x_rsne): Use size_t instead of int."}, {"sha": "e35980d11c16edb63d3aa719f640721e5e90f874", "filename": "libf2c/configure", "status": "modified", "additions": 67, "deletions": 11, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Fconfigure?ref=2731cc566bbf5cd7a3ec87dab2816c72d6c58516", "patch": "@@ -1567,24 +1567,80 @@ fi\n \n \n \n+for ac_func in tempnam\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:1574: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1579 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:1602: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+\n # posix will guarantee the right behaviour for sprintf, else we can't be\n # sure; HEADER_STDC wouldn't be the right check in sunos4, for instance.\n # However, on my sunos4/gcc setup unistd.h leads us wrongly to believe\n # we're posix-conformant, so always do the test.\n echo $ac_n \"checking for ansi/posix sprintf result\"\"... $ac_c\" 1>&6\n-echo \"configure:1576: checking for ansi/posix sprintf result\" >&5\n+echo \"configure:1632: checking for ansi/posix sprintf result\" >&5\n if test \"$cross_compiling\" = yes; then\n   g77_cv_sys_sprintf_ansi=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1581 \"configure\"\n+#line 1637 \"configure\"\n #include \"confdefs.h\"\n   #include <stdio.h>\n     /* does sprintf return the number of chars transferred? */\n     main () {char foo[2]; (sprintf(foo, \"1\") == 1) ? exit(0) : exit(1);}\n \n EOF\n-if { (eval echo configure:1588: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:1644: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n then\n   g77_cv_sys_sprintf_ansi=yes\n else\n@@ -1618,9 +1674,9 @@ fi\n \n # define NON_ANSI_RW_MODES on unix (can't hurt)\n echo $ac_n \"checking NON_ANSI_RW_MODES\"\"... $ac_c\" 1>&6\n-echo \"configure:1622: checking NON_ANSI_RW_MODES\" >&5\n+echo \"configure:1678: checking NON_ANSI_RW_MODES\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 1624 \"configure\"\n+#line 1680 \"configure\"\n #include \"confdefs.h\"\n #ifdef unix\n   yes\n@@ -1661,14 +1717,14 @@ fi\n # (via com.h).  proj.h and com.h are in $srcdir/.., config.h which they need\n # is in ../.. and the config files are in $srcdir/../../config.\n echo $ac_n \"checking f2c integer type\"\"... $ac_c\" 1>&6\n-echo \"configure:1665: checking f2c integer type\" >&5\n+echo \"configure:1721: checking f2c integer type\" >&5\n late_ac_cpp=$ac_cpp\n ac_cpp=\"$late_ac_cpp -I$srcdir/../gcc/f -I../../gcc -I$srcdir/../gcc -I$srcdir/../gcc/config\"\n if eval \"test \\\"`echo '$''{'g77_cv_sys_f2cinteger'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1672 \"configure\"\n+#line 1728 \"configure\"\n #include \"confdefs.h\"\n #include \"proj.h\"\n #define FFECOM_DETERMINE_TYPES 1\n@@ -1691,7 +1747,7 @@ rm -f conftest*\n \n if test \"$g77_cv_sys_f2cinteger\" = \"\"; then\n   cat > conftest.$ac_ext <<EOF\n-#line 1695 \"configure\"\n+#line 1751 \"configure\"\n #include \"confdefs.h\"\n #include \"proj.h\"\n #define FFECOM_DETERMINE_TYPES 1\n@@ -1726,14 +1782,14 @@ ac_cpp=$late_ac_cpp\n \n \n echo $ac_n \"checking f2c long int type\"\"... $ac_c\" 1>&6\n-echo \"configure:1730: checking f2c long int type\" >&5\n+echo \"configure:1786: checking f2c long int type\" >&5\n late_ac_cpp=$ac_cpp\n ac_cpp=\"$late_ac_cpp -I$srcdir/../gcc/f -I../../gcc -I$srcdir/../gcc -I$srcdir/../gcc/config\"\n if eval \"test \\\"`echo '$''{'g77_cv_sys_f2clongint'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1737 \"configure\"\n+#line 1793 \"configure\"\n #include \"confdefs.h\"\n #include \"proj.h\"\n #define FFECOM_DETERMINE_TYPES 1\n@@ -1756,7 +1812,7 @@ rm -f conftest*\n \n if test \"$g77_cv_sys_f2clongint\" = \"\"; then\n   cat > conftest.$ac_ext <<EOF\n-#line 1760 \"configure\"\n+#line 1816 \"configure\"\n #include \"confdefs.h\"\n #include \"proj.h\"\n #define FFECOM_DETERMINE_TYPES 1"}, {"sha": "232b2d43f4018c38e88cf3a16790f19a458f4235", "filename": "libf2c/configure.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Fconfigure.in?ref=2731cc566bbf5cd7a3ec87dab2816c72d6c58516", "patch": "@@ -192,6 +192,8 @@ dnl test $ac_cv_func_symlink = yes && SYMLNK=symlnk_.o\n dnl test $ac_cv_func_lstat = yes && SYMLNK=\"$SYMLNK lstat_.o\"\n dnl AC_SUBST(SYMLNK)\n \n+AC_CHECK_FUNCS(tempnam)\n+\n # posix will guarantee the right behaviour for sprintf, else we can't be\n # sure; HEADER_STDC wouldn't be the right check in sunos4, for instance.\n # However, on my sunos4/gcc setup unistd.h leads us wrongly to believe"}, {"sha": "4f7df49982c1ff8fa2ca82439554b57dd27d06c3", "filename": "libf2c/libF77/Version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2FlibF77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2FlibF77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2FVersion.c?ref=2731cc566bbf5cd7a3ec87dab2816c72d6c58516", "patch": "@@ -3,7 +3,7 @@ static char junk[] = \"\\n@(#)LIBF77 VERSION 19970919\\n\";\n /*\n */\n \n-char __G77_LIBF77_VERSION__[] = \"0.5.21\";\n+char __G77_LIBF77_VERSION__[] = \"0.5.22\";\n \n /*\n 2.00\t11 June 1980.  File version.c added to library."}, {"sha": "6fdf19e4654a48b4028e19b26e7e9432ee42fb52", "filename": "libf2c/libI77/Version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2FlibI77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2FlibI77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2FVersion.c?ref=2731cc566bbf5cd7a3ec87dab2816c72d6c58516", "patch": "@@ -3,7 +3,7 @@ static char junk[] = \"\\n@(#) LIBI77 VERSION pjw,dmg-mods 19970916\\n\";\n /*\n */\n \n-char __G77_LIBI77_VERSION__[] = \"0.5.22-19970930\";\n+char __G77_LIBI77_VERSION__[] = \"0.5.22\";\n \n /*\n 2.01\t$ format added"}, {"sha": "cb40630059da50d90e7bd4f34b2cd7a3ceae87d3", "filename": "libf2c/libI77/err.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2FlibI77%2Ferr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2FlibI77%2Ferr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Ferr.c?ref=2731cc566bbf5cd7a3ec87dab2816c72d6c58516", "patch": "@@ -80,7 +80,8 @@ char *F_err[] =\n \t\"'new' file exists\",\t\t\t\t/* 128 */\n \t\"can't append to file\",\t\t\t\t/* 129 */\n \t\"non-positive record number\",\t\t\t/* 130 */\n-\t\"I/O started while already doing I/O\"\t\t/* 131 */\n+\t\"I/O started while already doing I/O\",\t\t/* 131 */\n+\t\"Temporary file name (TMPDIR?) too long\"        /* 132 */\n };\n #define MAXERR (sizeof(F_err)/sizeof(char *)+100)\n "}, {"sha": "d7e8491df04a8e47090ee1decdb79fe13d19ee62", "filename": "libf2c/libI77/open.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2FlibI77%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2FlibI77%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fopen.c?ref=2731cc566bbf5cd7a3ec87dab2816c72d6c58516", "patch": "@@ -143,12 +143,20 @@ integer f_open(olist *a)\n \t case 's':\n \t case 'S':\n \t\tb->uscrtch=1;\n+#ifdef HAVE_TEMPNAM\t\t/* Allow use of TMPDIR preferentially. */\n+\t\ts = tempnam (0, buf);\n+\t\tif (strlen (s) >= sizeof (buf))\n+\t\t  err (a->oerr, 132, \"open\");\n+\t\t(void) strcpy (buf, s);\n+\t\tfree (s);\n+#else /* ! defined (HAVE_TEMPNAM) */\n #ifdef _POSIX_SOURCE\n \t\ttmpnam(buf);\n #else\n \t\t(void) strcpy(buf,\"tmp.FXXXXXX\");\n \t\t(void) mktemp(buf);\n #endif\n+#endif /* ! defined (HAVE_TEMPNAM) */\n \t\tgoto replace;\n \tcase 'n':\n \tcase 'N':"}, {"sha": "99c58c9231369d92c24342e7b08d37151668622c", "filename": "libf2c/libU77/Version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2FlibU77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2731cc566bbf5cd7a3ec87dab2816c72d6c58516/libf2c%2FlibU77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2FVersion.c?ref=2731cc566bbf5cd7a3ec87dab2816c72d6c58516", "patch": "@@ -1,6 +1,6 @@\n static char junk[] = \"\\n@(#) LIBU77 VERSION 19970919\\n\";\n \n-char __G77_LIBU77_VERSION__[] = \"0.5.22-970919\";\n+char __G77_LIBU77_VERSION__[] = \"0.5.22\";\n \n #include <stdio.h>\n "}]}