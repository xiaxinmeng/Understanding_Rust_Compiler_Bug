{"sha": "8d3586e4e2426a2ae77c082134be67fe036c87a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQzNTg2ZTRlMjQyNmEyYWU3N2MwODIxMzRiZTY3ZmUwMzZjODdhNw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-12-15T03:16:26Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-12-15T03:16:26Z"}, "message": "PR libfortran/pr68867\n\n2015-12-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/pr68867\n\t* io/write.c (set_fnode_default): For kind=16, set the decimal precision\n\tdepending on the platform binary precision, 106 or 113.\n\nFrom-SVN: r231639", "tree": {"sha": "c83931793147529d54140fc2dafed0063dd1a22a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c83931793147529d54140fc2dafed0063dd1a22a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d3586e4e2426a2ae77c082134be67fe036c87a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3586e4e2426a2ae77c082134be67fe036c87a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d3586e4e2426a2ae77c082134be67fe036c87a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3586e4e2426a2ae77c082134be67fe036c87a7/comments", "author": null, "committer": null, "parents": [{"sha": "060eb4c9a45d624ef1e4b945ff6ec5d4bef69187", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/060eb4c9a45d624ef1e4b945ff6ec5d4bef69187", "html_url": "https://github.com/Rust-GCC/gccrs/commit/060eb4c9a45d624ef1e4b945ff6ec5d4bef69187"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "c2a5d8e1bf28d5b9265a5d53baa7d34bfa8c1470", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3586e4e2426a2ae77c082134be67fe036c87a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3586e4e2426a2ae77c082134be67fe036c87a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d3586e4e2426a2ae77c082134be67fe036c87a7", "patch": "@@ -1,3 +1,7 @@\n+2015-12-14svn commit   Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* gfortran.dg/quad_2.f90: Update test.\n+\n 2015-12-14  Steve Ellcey  <sellcey@imgtec.com>\n \n \t* gcc.dg/tree-ssa/ssa-fre-4.c: Remove mips*-*-* target."}, {"sha": "f7a8a469861f8a0e8ba17464c12869d70076f9fb", "filename": "gcc/testsuite/gfortran.dg/quad_2.f90", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3586e4e2426a2ae77c082134be67fe036c87a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fquad_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3586e4e2426a2ae77c082134be67fe036c87a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fquad_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fquad_2.f90?ref=8d3586e4e2426a2ae77c082134be67fe036c87a7", "patch": "@@ -49,18 +49,19 @@ program test_qp\n        if (str4 /= \"1.41421356237309504876\") call abort()\n \n      case (16)\n-       if (str1 /= \"   1.00000000000000000000000000000000000\") call abort()\n-       if (str2 /= \"1.00000000000000000000000000000000000\") call abort()\n-\n        if (digits(1.0_qp) == 113) then\n          ! IEEE 754 binary 128 format\n          ! e.g. libquadmath/__float128 on i686/x86_64/ia64\n+         if (str1 /= \"   1.00000000000000000000000000000000000\") call abort()\n+         if (str2 /= \"1.00000000000000000000000000000000000\") call abort()\n          if (str3 /= \"   1.41421356237309504880168872420969798\") call abort()\n          if (str4 /= \"1.41421356237309504880168872420969798\") call abort()\n        else if (digits(1.0_qp) == 106) then\n          ! IBM binary 128 format\n-         if (str3(1:37) /= \"   1.41421356237309504880168872420969\") call abort()\n-         if (str4(1:34) /= \"1.41421356237309504880168872420969\") call abort()\n+         if (str1 /= \"   1.0000000000000000000000000000000\") call abort()\n+         if (str2 /= \"1.0000000000000000000000000000000\") call abort()\n+         if (str3(1:37) /= \"   1.4142135623730950488016887242097\") call abort()\n+         if (str4(1:34) /= \"1.4142135623730950488016887242097\") call abort()\n        end if\n \n        ! Do a libm run-time test"}, {"sha": "2aca878cd770dcc239b01ad061b198131e00c0f4", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3586e4e2426a2ae77c082134be67fe036c87a7/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3586e4e2426a2ae77c082134be67fe036c87a7/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=8d3586e4e2426a2ae77c082134be67fe036c87a7", "patch": "@@ -1,3 +1,9 @@\n+2015-12-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/pr68867\n+\t* io/write.c (set_fnode_default): For kind=16, set the decimal precision\n+\tdepending on the platform binary precision, 106 or 113.\n+\n 2015-12-05  Juoko Orava <jouko.orava@iki.fi>\n \n \tPR fortran/50201"}, {"sha": "f72b4828aa6d3f8ae6dad209c8533fe89d484080", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3586e4e2426a2ae77c082134be67fe036c87a7/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3586e4e2426a2ae77c082134be67fe036c87a7/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=8d3586e4e2426a2ae77c082134be67fe036c87a7", "patch": "@@ -1405,9 +1405,16 @@ set_fnode_default (st_parameter_dt *dtp, fnode *f, int length)\n       f->u.real.e = 4;\n       break;\n     case 16:\n+      /* Adjust decimal precision depending on binary precision, 106 or 113.  */\n+#if GFC_REAL_16_DIGITS == 113\n       f->u.real.w = 45;\n       f->u.real.d = 36;\n       f->u.real.e = 4;\n+#else\n+      f->u.real.w = 41;\n+      f->u.real.d = 32;\n+      f->u.real.e = 4;\n+#endif\n       break;\n     default:\n       internal_error (&dtp->common, \"bad real kind\");"}]}