{"sha": "e40e64de70990fbc227be23b7a8b7c962eb8dce3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQwZTY0ZGU3MDk5MGZiYzIyN2JlMjNiN2E4YjdjOTYyZWI4ZGNlMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-07-23T15:25:15Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-07-23T15:25:15Z"}, "message": "* gcc.dg/pr36997.c: Adjust dg-message line number.\n\nFrom-SVN: r162467", "tree": {"sha": "d6c19f14fbb776378f76e8f449e2474259825c50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6c19f14fbb776378f76e8f449e2474259825c50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e40e64de70990fbc227be23b7a8b7c962eb8dce3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40e64de70990fbc227be23b7a8b7c962eb8dce3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e40e64de70990fbc227be23b7a8b7c962eb8dce3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40e64de70990fbc227be23b7a8b7c962eb8dce3/comments", "author": null, "committer": null, "parents": [{"sha": "61044492190ca68b74f5e9757584f4c3c0c0654c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61044492190ca68b74f5e9757584f4c3c0c0654c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61044492190ca68b74f5e9757584f4c3c0c0654c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "13461b8a1347b8df0ee3380e211c854f4105efb2", "filename": "gcc/testsuite/gcc.dg/pr36997.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e40e64de70990fbc227be23b7a8b7c962eb8dce3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36997.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e40e64de70990fbc227be23b7a8b7c962eb8dce3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36997.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36997.c?ref=e40e64de70990fbc227be23b7a8b7c962eb8dce3", "patch": "@@ -5,5 +5,5 @@ typedef int __m64 __attribute__ ((__vector_size__ (8), __may_alias__));\n __m64 _mm_add_si64 (__m64 __m1, __m64 __m2)\n {\n     return (__m64) __builtin_ia32_paddq ((long long)__m1, (long long)__m2); /* { dg-error \"incompatible type\" } */\n-    /* { dg-message \"note: expected '__vector.1. long long int' but argument is of type 'long long int'\" \"\" { target *-*-* } 8 } */\n+    /* { dg-message \"note: expected '__vector.1. long long int' but argument is of type 'long long int'\" \"\" { target *-*-* } 7 } */\n }"}]}