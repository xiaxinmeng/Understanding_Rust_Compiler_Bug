{"sha": "5de1a1eb07a702a1a79395f0d956b1bba469138e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRlMWExZWIwN2E3MDJhMWE3OTM5NWYwZDk1NmIxYmJhNDY5MTM4ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2006-09-07T22:47:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-09-07T22:47:34Z"}, "message": "re PR c++/27371 (Does not warn about unused function result (__attribute__((warn_unused_result))))\n\n        PR c++/27371\n        * cvt.c (convert_to_void): Enable previous change.\n\nFrom-SVN: r116765", "tree": {"sha": "ed52eafd1a145fa6d6482fe9a39196817a55344f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed52eafd1a145fa6d6482fe9a39196817a55344f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5de1a1eb07a702a1a79395f0d956b1bba469138e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de1a1eb07a702a1a79395f0d956b1bba469138e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5de1a1eb07a702a1a79395f0d956b1bba469138e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de1a1eb07a702a1a79395f0d956b1bba469138e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05d36da1b4454bd57001b65f286f3bebbb79f9f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05d36da1b4454bd57001b65f286f3bebbb79f9f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05d36da1b4454bd57001b65f286f3bebbb79f9f2"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "546746448629498fca55576ce7172e9b7f3b11cb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de1a1eb07a702a1a79395f0d956b1bba469138e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de1a1eb07a702a1a79395f0d956b1bba469138e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5de1a1eb07a702a1a79395f0d956b1bba469138e", "patch": "@@ -1,5 +1,8 @@\n 2006-09-07  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/27371\n+\t* cvt.c (convert_to_void): Enable previous change.\n+\n \tPR c++/26957\n \t* method.c (use_thunk): Clear DECL_HAS_VALUE_EXPR_P on copied\n \tparms."}, {"sha": "fea5768f8aedfe774814f0e7442e775258cbf02e", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de1a1eb07a702a1a79395f0d956b1bba469138e/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de1a1eb07a702a1a79395f0d956b1bba469138e/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=5de1a1eb07a702a1a79395f0d956b1bba469138e", "patch": "@@ -897,7 +897,7 @@ convert_to_void (tree expr, const char *implicit)\n \t we don't use it and don't need to destroy it.  We'll still\n \t allocate space for it in expand_call or declare_return_variable,\n \t but we don't need to track it through all the tree phases.  */\n-      if (0 && TARGET_EXPR_IMPLICIT_P (expr)\n+      if (TARGET_EXPR_IMPLICIT_P (expr)\n \t  && TYPE_HAS_TRIVIAL_DESTRUCTOR (TREE_TYPE (expr)))\n \t{\n \t  tree init = TARGET_EXPR_INITIAL (expr);"}]}