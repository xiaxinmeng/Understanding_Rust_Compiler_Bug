{"sha": "fd9d37c68ca363503ef5a515c7e409a3b15b43e1", "node_id": "C_kwDOANBUbNoAKGZkOWQzN2M2OGNhMzYzNTAzZWY1YTUxNWM3ZTQwOWEzYjE1YjQzZTE", "commit": {"author": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2021-10-18T09:02:58Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2021-10-18T09:21:36Z"}, "message": "util: Add rust-base62 implementation from rustc", "tree": {"sha": "077e274f574e210a0fbb6bbb7f29669d21ba1a3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/077e274f574e210a0fbb6bbb7f29669d21ba1a3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd9d37c68ca363503ef5a515c7e409a3b15b43e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd9d37c68ca363503ef5a515c7e409a3b15b43e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd9d37c68ca363503ef5a515c7e409a3b15b43e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd9d37c68ca363503ef5a515c7e409a3b15b43e1/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35f6d0ffa6a6688016b65f5265522e17ccb248f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f6d0ffa6a6688016b65f5265522e17ccb248f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f6d0ffa6a6688016b65f5265522e17ccb248f8"}], "stats": {"total": 108, "additions": 85, "deletions": 23}, "files": [{"sha": "57e82995d9badc3be34338a327a3303ed2341b20", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9d37c68ca363503ef5a515c7e409a3b15b43e1/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9d37c68ca363503ef5a515c7e409a3b15b43e1/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=fd9d37c68ca363503ef5a515c7e409a3b15b43e1", "patch": "@@ -88,6 +88,7 @@ GRS_OBJS = \\\n     rust/rust-lint-marklive.o \\\n     rust/rust-hir-type-check-path.o \\\n     rust/rust-compile-intrinsic.o \\\n+    rust/rust-base62.o \\\n     $(END)\n # removed object files from here\n "}, {"sha": "15ac3b1db5fd836add4fd30d2c332f688a5c5ef0", "filename": "gcc/rust/backend/rust-mangle.cc", "status": "modified", "additions": 2, "deletions": 23, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9d37c68ca363503ef5a515c7e409a3b15b43e1/gcc%2Frust%2Fbackend%2Frust-mangle.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9d37c68ca363503ef5a515c7e409a3b15b43e1/gcc%2Frust%2Fbackend%2Frust-mangle.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-mangle.cc?ref=fd9d37c68ca363503ef5a515c7e409a3b15b43e1", "patch": "@@ -1,5 +1,6 @@\n #include \"rust-mangle.h\"\n #include \"fnv-hash.h\"\n+#include \"rust-base62.h\"\n #include <algorithm>\n \n // FIXME: Rename those to legacy_*\n@@ -155,28 +156,6 @@ v0_simple_type_prefix (const TyTy::BaseType *ty)\n   gcc_unreachable ();\n }\n \n-// FIXME: Is this present somewhere in libbiberty already?\n-static std::string\n-v0_base62_integer (uint64_t x)\n-{\n-  const static std::string base_64\n-    = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@$\";\n-  std::string buffer (128, '\\0');\n-  size_t idx = 0;\n-  size_t base = 62;\n-\n-  do\n-    {\n-      buffer[idx] = base_64[(x % base)];\n-      idx++;\n-      x = x / base;\n-    }\n-  while (x != 0);\n-\n-  std::reverse (buffer.begin (), buffer.begin () + idx);\n-  return buffer.substr (0, idx);\n-}\n-\n // Add an underscore-terminated base62 integer to the mangling string.\n // This corresponds to the `<base-62-number>` grammar in the v0 mangling RFC:\n //  - 0 is encoded as \"_\"\n@@ -185,7 +164,7 @@ static void\n v0_add_integer_62 (std::string &mangled, uint64_t x)\n {\n   if (x > 0)\n-    mangled.append (v0_base62_integer (x - 1));\n+    mangled.append (base62_integer (x - 1));\n \n   mangled.append (\"_\");\n }"}, {"sha": "f1e3202182a4590b50e86d33078a2507d0532f06", "filename": "gcc/rust/util/rust-base62.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9d37c68ca363503ef5a515c7e409a3b15b43e1/gcc%2Frust%2Futil%2Frust-base62.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9d37c68ca363503ef5a515c7e409a3b15b43e1/gcc%2Frust%2Futil%2Frust-base62.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-base62.cc?ref=fd9d37c68ca363503ef5a515c7e409a3b15b43e1", "patch": "@@ -0,0 +1,48 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"rust-base62.h\"\n+\n+#include <algorithm>\n+\n+namespace Rust {\n+\n+std::string\n+base62_integer (uint64_t value)\n+{\n+  const static std::string base_64\n+    = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@$\";\n+  std::string buffer (128, '\\0');\n+  size_t idx = 0;\n+  size_t base = 62;\n+\n+  do\n+    {\n+      buffer[idx] = base_64[(value % base)];\n+      idx++;\n+      value = value / base;\n+    }\n+  while (value != 0);\n+\n+  std::reverse (buffer.begin (), buffer.begin () + idx);\n+  return buffer.substr (0, idx);\n+}\n+\n+} // namespace Rust\n+\n+// FIXME: Add unit testing using the selftest framework"}, {"sha": "7a6e3cf2c92623c906282d9be6d671ecaafefbe8", "filename": "gcc/rust/util/rust-base62.h", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9d37c68ca363503ef5a515c7e409a3b15b43e1/gcc%2Frust%2Futil%2Frust-base62.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9d37c68ca363503ef5a515c7e409a3b15b43e1/gcc%2Frust%2Futil%2Frust-base62.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-base62.h?ref=fd9d37c68ca363503ef5a515c7e409a3b15b43e1", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#ifndef RUST_BASE62_H\n+#define RUST_BASE62_H\n+\n+#include <string>\n+\n+namespace Rust {\n+\n+/**\n+ * Get the Base62 representation of an integer\n+ */\n+std::string\n+base62_integer (uint64_t value);\n+\n+} // namespace Rust\n+\n+#endif /* !RUST_BASE62_H */"}]}