{"sha": "2bd58b1bf981a1cbc604bb05ca8ee236622b9772", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJkNThiMWJmOTgxYTFjYmM2MDRiYjA1Y2E4ZWUyMzY2MjJiOTc3Mg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2008-06-09T10:16:15Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-06-09T10:16:15Z"}, "message": "install.texi (*-*-solaris2*): Remove obsolete contents.\n\n\t* doc/install.texi (*-*-solaris2*): Remove obsolete contents.\n\t(sparc-sun-solaris2*): Likewise.\n\nFrom-SVN: r136585", "tree": {"sha": "546c5a5ee9ef7e2da23df56fa360d42b5be2fe43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/546c5a5ee9ef7e2da23df56fa360d42b5be2fe43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bd58b1bf981a1cbc604bb05ca8ee236622b9772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd58b1bf981a1cbc604bb05ca8ee236622b9772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bd58b1bf981a1cbc604bb05ca8ee236622b9772", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd58b1bf981a1cbc604bb05ca8ee236622b9772/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "912cb4420dab339e6f07bb8222c3ea75514a2583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/912cb4420dab339e6f07bb8222c3ea75514a2583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/912cb4420dab339e6f07bb8222c3ea75514a2583"}], "stats": {"total": 49, "additions": 20, "deletions": 29}, "files": [{"sha": "ede88b6aa3ee1fca59e900a71e82346f4bd7a3cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58b1bf981a1cbc604bb05ca8ee236622b9772/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58b1bf981a1cbc604bb05ca8ee236622b9772/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2bd58b1bf981a1cbc604bb05ca8ee236622b9772", "patch": "@@ -1,3 +1,8 @@\n+2008-06-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* doc/install.texi (*-*-solaris2*): Remove obsolete contents.\n+\t(sparc-sun-solaris2*): Likewise.\n+\n 2008-06-09  Arnaud Charlet  <charlet@adacore.com\n \n \t* doc/install.texi: Update requirements to build the Ada compiler."}, {"sha": "fdb8dc959577c67fe2d1141b051bb88e3312c516", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 15, "deletions": 29, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd58b1bf981a1cbc604bb05ca8ee236622b9772/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd58b1bf981a1cbc604bb05ca8ee236622b9772/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=2bd58b1bf981a1cbc604bb05ca8ee236622b9772", "patch": "@@ -3716,11 +3716,10 @@ The build process works more smoothly with the legacy Sun tools so, if you\n have @file{/usr/xpg4/bin} in your @env{PATH}, we recommend that you place\n @file{/usr/bin} before @file{/usr/xpg4/bin} for the duration of the build.\n \n-All releases of GNU binutils prior to 2.11.2 have known bugs on this\n-platform.  We recommend the use of GNU binutils 2.11.2 or later, or the\n-vendor tools (Sun @command{as}, Sun @command{ld}).  Note that your mileage\n-may vary if you use a combination of the GNU tools and the Sun tools: while\n-the combination GNU @command{as} + Sun @command{ld} should reasonably work,\n+We recommend the use of GNU binutils 2.14 or later, or the vendor tools\n+(Sun @command{as}, Sun @command{ld}).  Note that your mileage may vary\n+if you use a combination of the GNU tools and the Sun tools: while the\n+combination GNU @command{as} + Sun @command{ld} should reasonably work,\n the reverse combination Sun @command{as} + GNU @command{ld} is known to\n cause memory corruption at runtime in some cases for C++ programs.\n \n@@ -3731,26 +3730,25 @@ from the CVS repository or applying the patch\n @uref{http://sourceware.org/ml/binutils-cvs/2004-09/msg00036.html} to the\n release.\n \n-We recommend using GNU binutils 2.16 or later in conjunction with GCC 4.x,\n-or the vendor tools (Sun @command{as}, Sun @command{ld}).  However, for\n-Solaris 10 and above, an additional patch is required in order for the GNU\n-linker to be able to cope with a new flavor of shared libraries.  You\n+We recommend the use of GNU binutils 2.16 or later in conjunction with GCC\n+4.x, or the vendor tools (Sun @command{as}, Sun @command{ld}).  However,\n+for Solaris 10 and above, an additional patch is required in order for the\n+GNU linker to be able to cope with a new flavor of shared libraries.  You\n can obtain a working version by checking out the binutils-2_16-branch from\n the CVS repository or applying the patch\n @uref{http://sourceware.org/ml/binutils-cvs/2005-07/msg00122.html} to the\n release.\n \n Sun bug 4296832 turns up when compiling X11 headers with GCC 2.95 or\n-newer: @command{g++} will complain that types are missing.  These headers assume\n-that omitting the type means @code{int}; this assumption worked for C89 but\n-is wrong for C++, and is now wrong for C99 also.\n+newer: @command{g++} will complain that types are missing.  These headers\n+assume that omitting the type means @code{int}; this assumption worked for\n+C89 but is wrong for C++, and is now wrong for C99 also.\n \n @command{g++} accepts such (invalid) constructs with the option\n-@option{-fpermissive}; it\n-will assume that any missing type is @code{int} (as defined by C89).\n+@option{-fpermissive}; it will assume that any missing type is @code{int}\n+(as defined by C89).\n \n-There are patches for Solaris 2.6 (105633-56 or newer for SPARC,\n-106248-42 or newer for Intel), Solaris 7 (108376-21 or newer for SPARC,\n+There are patches for Solaris 7 (108376-21 or newer for SPARC,\n 108377-20 for Intel), and Solaris 8 (108652-24 or newer for SPARC,\n 108653-22 for Intel) that fix this bug.\n \n@@ -3770,23 +3768,11 @@ SPARC, 117172-11 or newer for Intel) that address this problem.\n @end html\n @heading @anchor{sparc-sun-solaris2}sparc-sun-solaris2*\n \n-When GCC is configured to use binutils 2.11.2 or later the binaries\n+When GCC is configured to use binutils 2.14 or later the binaries\n produced are smaller than the ones produced using Sun's native tools;\n this difference is quite significant for binaries containing debugging\n information.\n \n-Sun @command{as} 4.x is broken in that it cannot cope with long symbol names.\n-A typical error message might look similar to the following:\n-\n-@smallexample\n-/usr/ccs/bin/as: \"/var/tmp/ccMsw135.s\", line 11041: error:\n-  can't compute value of an expression involving an external symbol.\n-@end smallexample\n-\n-This is Sun bug 4237974.  This is fixed with patch 108908-02 for Solaris\n-2.6 and has been fixed in later (5.x) versions of the assembler,\n-starting with Solaris 7.\n-\n Starting with Solaris 7, the operating system is capable of executing\n 64-bit SPARC V9 binaries.  GCC 3.1 and later properly supports\n this; the @option{-m64} option enables 64-bit code generation."}]}