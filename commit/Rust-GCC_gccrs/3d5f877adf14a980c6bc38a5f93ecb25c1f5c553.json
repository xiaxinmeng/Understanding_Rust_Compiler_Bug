{"sha": "3d5f877adf14a980c6bc38a5f93ecb25c1f5c553", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q1Zjg3N2FkZjE0YTk4MGM2YmMzOGE1ZjkzZWNiMjVjMWY1YzU1Mw==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2005-12-19T02:35:44Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2005-12-19T02:35:44Z"}, "message": "flow.c (update_life_info, [...]): Fixed latent bug that could happen if update_life_info was called with a blocks...\n\n2005-12-17  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n        * flow.c (update_life_info, count_or_remove_death_notes): Fixed\n\tlatent bug that could happen if update_life_info was called with a\n\tblocks parameter and the call to cleanup_cfg actually deleted one\n\tof those blocks.\n\nFrom-SVN: r108777", "tree": {"sha": "0b4ed2d9a152aff6f7733ec523309ca8eb5951d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b4ed2d9a152aff6f7733ec523309ca8eb5951d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d5f877adf14a980c6bc38a5f93ecb25c1f5c553", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d5f877adf14a980c6bc38a5f93ecb25c1f5c553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d5f877adf14a980c6bc38a5f93ecb25c1f5c553", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d5f877adf14a980c6bc38a5f93ecb25c1f5c553/comments", "author": null, "committer": null, "parents": [{"sha": "fd0bd278031c12e1148fb28b4fd66849cfe61781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0bd278031c12e1148fb28b4fd66849cfe61781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd0bd278031c12e1148fb28b4fd66849cfe61781"}], "stats": {"total": 42, "additions": 29, "deletions": 13}, "files": [{"sha": "20d15eb8d31d6724970a2d047651f9195d147eb3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d5f877adf14a980c6bc38a5f93ecb25c1f5c553/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d5f877adf14a980c6bc38a5f93ecb25c1f5c553/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d5f877adf14a980c6bc38a5f93ecb25c1f5c553", "patch": "@@ -1,3 +1,11 @@\n+2005-12-17  Danny Berlin <dberlin@dberlin.org>\n+\t    Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+        * flow.c (update_life_info, count_or_remove_death_notes): Fixed\n+\tlatent bug that could happen if update_life_info was called with a\n+\tblocks parameter and the call to cleanup_cfg actually deleted one\n+\tof those blocks. \n+\n 2005-12-19  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* tree-ssa-structalias.c (update_alias_info): Remove handling\n@@ -988,7 +996,7 @@\n \t* config/arm/bpabi.h (SUBTARGET_EXTRA_ASM_SPEC): Pass -meabi=gnu for\n \tapcs/atpcs.\n \n-2005-12-11 Rafael \ufffdvila de Esp\ufffdndola <rafael.espindola@gmail.com>\n+2005-12-11 Rafael vila de Espndola <rafael.espindola@gmail.com>\n \n \t* tree-flow.h: Allow compilation with a C++ compiler.\n \t(struct edge_prediction): Prefix all field names  with \"ep_\".\n@@ -1397,18 +1405,18 @@\n \t* coretypes.h (section): Provide dummy definition for target files.\n \t* config/darwin.h: Revert previous change.\n \n-2005-12-07  Rafael \ufffdvila de Esp\ufffdndola  <rafael.espindola@gmail.com>\n+2005-12-07  Rafael vila de Espndola  <rafael.espindola@gmail.com>\n \n \t* doc/sourcebuild.texi (all.build, install-normal): Remove.\n \t* configure.ac: Remove all.build and install-normal from target_list\n \t* configure: Regenerate.\n \t* Makefile.in (install): Don't depend on install-normal.\n \n-2005-12-07  Rafael \ufffdvila de Esp\ufffdndola  <rafael.espindola@gmail.com>\n+2005-12-07  Rafael vila de Espndola  <rafael.espindola@gmail.com>\n \n \t* Makefile.in: Document the use of stamps.\n \n-2005-12-07  Rafael \ufffdvila de Esp\ufffdndola  <rafael.espindola@gmail.com>\n+2005-12-07  Rafael vila de Espndola  <rafael.espindola@gmail.com>\n \n \t* doc/gty.texi: Remove instructions for adding a dependency on s-gtype.\n \t* Makefile.in: Add code to compute some dependencies on s-gtype\n@@ -10991,7 +10999,7 @@\n \t* gcc.c (main): Compare language[0] with '*' when iterating over\n \tthe infiles.\n \n-2005-07-13  Adrian Strae\u00bdtling  <straetling@de.ibm.com>\n+2005-07-13  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* config/s390/s390.c: (s390_cc_modes_compatible): Move before\n \t\"s390_emit_compare\".  Add handling of CCZ1mode.\n@@ -11004,7 +11012,7 @@\n \tUse CCZ1mode instead of CCZmode.\n \t* config/s390/s390-modes.def: Add CCZ1mode.  Comment new mode.\n \n-2005-07-13  Adrian Strae\u00bdtling  <straetling@de.ibm.com>\n+2005-07-13  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* config/s390/s390.md: (\"cmpstrsi\", \"*cmpstr<mode>\"): New\n \tpattern."}, {"sha": "ca2f1e14f6bc1664d8e247276e8a6816f22aa491", "filename": "gcc/flow.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d5f877adf14a980c6bc38a5f93ecb25c1f5c553/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d5f877adf14a980c6bc38a5f93ecb25c1f5c553/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=3d5f877adf14a980c6bc38a5f93ecb25c1f5c553", "patch": "@@ -658,12 +658,16 @@ update_life_info (sbitmap blocks, enum update_life_extent extent,\n       EXECUTE_IF_SET_IN_SBITMAP (blocks, 0, i, sbi)\n \t{\n \t  bb = BASIC_BLOCK (i);\n-\n-\t  COPY_REG_SET (tmp, bb->il.rtl->global_live_at_end);\n-\t  propagate_block (bb, tmp, NULL, NULL, stabilized_prop_flags);\n-\n-\t  if (extent == UPDATE_LIFE_LOCAL)\n-\t    verify_local_live_at_start (tmp, bb);\n+\t  if (bb)\n+\t    {\n+\t      /* The bitmap may be flawed in that one of the basic\n+\t\t blocks may have been deleted before you get here.  */\n+\t      COPY_REG_SET (tmp, bb->il.rtl->global_live_at_end);\n+\t      propagate_block (bb, tmp, NULL, NULL, stabilized_prop_flags);\n+\t      \n+\t      if (extent == UPDATE_LIFE_LOCAL)\n+\t\tverify_local_live_at_start (tmp, bb);\n+\t    }\n \t};\n     }\n   else\n@@ -4456,7 +4460,11 @@ count_or_remove_death_notes (sbitmap blocks, int kill)\n \n       EXECUTE_IF_SET_IN_SBITMAP (blocks, 0, i, sbi)\n \t{\n-\t  count += count_or_remove_death_notes_bb (BASIC_BLOCK (i), kill);\n+\t  basic_block bb = BASIC_BLOCK (i);\n+\t  /* The bitmap may be flawed in that one of the basic blocks\n+\t     may have been deleted before you get here.  */\n+\t  if (bb)\n+\t    count += count_or_remove_death_notes_bb (bb, kill);\n \t};\n     }\n   else"}]}