{"sha": "04886dc0ea22ed6b5acc56ab12e36f24e5d4403f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ4ODZkYzBlYTIyZWQ2YjVhY2M1NmFiMTJlMzZmMjRlNWQ0NDAzZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-08-26T02:37:41Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-08-26T02:37:41Z"}, "message": "alpha.c (alpha_cannot_force_const_mem): New.\n\n        * config/alpha/alpha.c (alpha_cannot_force_const_mem): New.\n        (TARGET_CANNOT_FORCE_CONST_MEM): New.\n\nFrom-SVN: r86602", "tree": {"sha": "4493ffdccbdfc07441d16317b3bc1644026e8918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4493ffdccbdfc07441d16317b3bc1644026e8918"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04886dc0ea22ed6b5acc56ab12e36f24e5d4403f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04886dc0ea22ed6b5acc56ab12e36f24e5d4403f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04886dc0ea22ed6b5acc56ab12e36f24e5d4403f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04886dc0ea22ed6b5acc56ab12e36f24e5d4403f/comments", "author": null, "committer": null, "parents": [{"sha": "4166ef51592d1c1759ce7150988a609aecb0710f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4166ef51592d1c1759ce7150988a609aecb0710f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4166ef51592d1c1759ce7150988a609aecb0710f"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "3dcb83381042d5aa74a158da4439feb7939e8a0a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04886dc0ea22ed6b5acc56ab12e36f24e5d4403f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04886dc0ea22ed6b5acc56ab12e36f24e5d4403f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04886dc0ea22ed6b5acc56ab12e36f24e5d4403f", "patch": "@@ -1,3 +1,8 @@\n+2004-08-25  Richard Henderson  <rth@redhat.com>\n+\n+        * config/alpha/alpha.c (alpha_cannot_force_const_mem): New.\n+        (TARGET_CANNOT_FORCE_CONST_MEM): New.\n+\n 2004-08-25  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* doc/tree-ssa.texi: Document new operand iterator."}, {"sha": "1e2b8dad1d1ecdc9eb4227049d94639794fc1d16", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04886dc0ea22ed6b5acc56ab12e36f24e5d4403f/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04886dc0ea22ed6b5acc56ab12e36f24e5d4403f/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=04886dc0ea22ed6b5acc56ab12e36f24e5d4403f", "patch": "@@ -1180,6 +1180,17 @@ alpha_legitimize_address (rtx x, rtx scratch,\n   }\n }\n \n+/* Primarily this is required for TLS symbols, but given that our move\n+   patterns *ought* to be able to handle any symbol at any time, we\n+   should never be spilling symbolic operands to the constant pool, ever.  */\n+\n+static bool\n+alpha_cannot_force_const_mem (rtx x)\n+{\n+  enum rtx_code code = GET_CODE (x);\n+  return code == SYMBOL_REF || code == LABEL_REF || code == CONST;\n+}\n+\n /* We do not allow indirect calls to be optimized into sibling calls, nor\n    can we allow a call to a function with a different GP to be optimized\n    into a sibcall.  */\n@@ -9357,6 +9368,8 @@ alpha_init_libfuncs (void)\n #define TARGET_FUNCTION_OK_FOR_SIBCALL alpha_function_ok_for_sibcall\n #undef TARGET_CANNOT_COPY_INSN_P\n #define TARGET_CANNOT_COPY_INSN_P alpha_cannot_copy_insn_p\n+#undef TARGET_CANNOT_FORCE_CONST_MEM\n+#define TARGET_CANNOT_FORCE_CONST_MEM alpha_cannot_force_const_mem\n \n #if TARGET_ABI_OSF\n #undef TARGET_ASM_OUTPUT_MI_THUNK"}]}