{"sha": "c6370adf34d4d2be0c1285f8066902c64431272d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYzNzBhZGYzNGQ0ZDJiZTBjMTI4NWY4MDY2OTAyYzY0NDMxMjcyZA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-04-16T22:01:55Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-04-16T22:01:55Z"}, "message": "Remove libchill\n\nFrom-SVN: r52379", "tree": {"sha": "b3ade16023a566afc76c6964e30a9203e57224e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3ade16023a566afc76c6964e30a9203e57224e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6370adf34d4d2be0c1285f8066902c64431272d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6370adf34d4d2be0c1285f8066902c64431272d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6370adf34d4d2be0c1285f8066902c64431272d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6370adf34d4d2be0c1285f8066902c64431272d/comments", "author": null, "committer": null, "parents": [{"sha": "178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/178c3eff52cd705a16548be4ff8878cc2f1a8e3b"}], "stats": {"total": 11897, "additions": 0, "deletions": 11897}, "files": [{"sha": "6186902ae658e29fbb23a6fdf6f94d74f2aaa9e8", "filename": "libchill/ChangeLog", "status": "removed", "additions": 0, "deletions": 865, "changes": 865, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2FChangeLog?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,865 +0,0 @@\n-2002-01-11  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n-\n-\tPR other/5299\n-\t* delaycase.c (__delay_event): Fix spelling error.\n-\t* waitbuffer.c: Same. \n-\n-2000-05-31  Richard Henderson  <rth@cygnus.com>\n-\n-\t* Makefile.in (STROBJS): Get memmove.o from configure.\n-\t* configure.in (RANLIB): Detect and substitute.\n-\t(memmove): Detect and substitute.\n-\t* memmove.c (memmove): Use size_t.\n-\n-2000-05-29  Zack Weinberg  <zack@wolery.cumb.org>\n-\n-\t* concatstr.c, exh.c: Include stdlib.h and string.h.\n-\t* delaycase.c, eqstr.c, memmove.c, printbuffer.c,\n-\tprintevent.c, sendbuffer.c, waitbuffer.c: Include string.h.\n-\n-Mon Apr  3 01:20:50 2000  George France <france@crl.dec.com>\n-\n-\t* basicio.c (PATH_MAX): Always provide a definition.\n-\n-Wed Oct 27 01:13:12 1999  Alan Modra <alan@SPRI.Levels.UniSA.Edu.Au>\n-\n-\t* Makefile.in (config.status): Fix leading whitespace.\n-\t(clean): Remove libchill.a.\n-\n-Thu Sep  2 17:50:47 1999  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* powerset.h (SET_WORD, SET_SHORT, SET_CHAR): Do not redefine based\n-\ton USE_CHAR.\n-\t(USE_CHAR): No longer define.\n-\t* eqps.c ffsetclrps.c flsetclrps.c: Remove !USE_CHARS support.\n-\n-Mon Aug 30 16:42:45 1999  Hans-Peter Nilsson  <hp@axis.se>\n-\n-\t* Makefile.in (chillrt0.o): Depend on chillrt0.c explicitly.\n-\n-Fri Aug  6 23:32:29 1999  Daniel Jacobowitz <drow@drow.them.org>\n-\n-\t* Makefile.in (FLAGS_TO_PASS): Include prefix, exec_prefix,\n-\tlibdir, libsubdir and tooldir.\n-\n-Thu May 20 03:20:59 1999  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* configure.in (AC_EXEEXT): Remove call.\n-\t(compiler_name): Explicitly check with no extension and .exe\n-\textension.\n-\t* configure: Regenerate.\n-\n-Wed Mar 24 22:41:28 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n-\n-\t* configure.in (AC_PREREQ): Update to 2.13.\n-\t(AC_EXEEXT): Call to find possible file extension.\n-\t(compiler_name): Use.\n-\t* configure: Regenerate.\n-\n-1999-01-19 08:10 -0500  Zack Weinberg  <zack@rabi.columbia.edu>\n-\n-\t* Makefile.in: Fix typos in previous change.  \n-\t(rtsdummy.o): Don't depend on gvarargs.h.\n-\n-Mon Jan 18 04:47:34 1999  Jeffrey A Law  (law@cygnus.com)\n-\t\t\t  Hans-Peter Nilsson  <hp@axis.se>\n-\n-\t* Makefile.in: Add many missing dependencies.\n-\n-Sun Jan  3 21:04:53 1999  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\t* readrecord.c: Include <sys/types.h> for off_t.\n-\n-1998-11-26  Manfred Hollstein  <manfred@s-direktnet.de>\n-\n-\t* configure.in (compiler_name): Add check to detect if this\n-\tlanguage's compiler has been built.\n-\t* configure: Regenerate.\n-\n-Mon Nov 23 16:48:39 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n-\n-\t*  configure.in: Use AC_PREREQ(2.12.1).\n-\n-Fri Nov 20 18:48:34 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n-\n-\t* basicio.c (PATH_MAX): Define only to _POSIX_PATH_MAX if that is\n-\tdefined.  Otherwise, try MAXPATHLEN.\n-\n-Thu Oct 22 14:37:35 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n-\n-\t* configure.in: Use AC_CONFIG_AUX_DIR($topsrcdir).\n-\n-1998-09-22  Ben Elliston  <bje@cygnus.com>\n-\n-\t* configure.in: This is GNU CHILL, not GNU Fortran.\n-\n-1998-09-20  Manfred Hollstein  <manfred@s-direktnet.de>\n-\n-\t* Makefile.in: Add dummy targets \"info\", \"install-info\", \"clean-info\"\n-\tand \"dvi\".\n-\n-1998-09-13  David S. Miller  <davem@pierdol.cobaltmicro.com>\n-\n-\t* configure.in: Use 'if test' not brackets.\n-\t* configure: Rebuilt.\n-\t\n-Wed Sep  9 21:32:46 1998  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* Add library exception clause to the copyright notice for all\n-\t .c and .h files.\n-\n-Tue Sep  8 10:41:38 1998  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* rts.h: Update with missing code.\n-\n-Sun Sep  6 01:30:40 1998  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* allgmem.c: Do not include config.h anymore.\n-\t* allmem.c allocate.c andps.c cardps.c cause.c copyps.c: Likewise.\n-\t* diffps.c eqps.c exh.c exhstack.c ffsetclrps.c ffsetps.c: Likewise.\n-\t* flsetclrps.c flsetps.c inbitstr.c inps.c leps.c ltps.c: Likewise.\n-\t* neps.c notps.c orps.c retmem.c rtsdummy.c setbitps.c: Likewise.\n-\t* setbits.c sliceps.c terminate.c unhex.c unhex1.c xorps.c: Likewise.\n-\n-Sat Sep  5 02:09:42 1998  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* Chill runtime moved into toplevel libchill.\n-\t* Makefile.in Revamped due to move.  Add multilib support.\n-\t* configure.in: Similarly.  Use autoconf.\n-\t* powerset.h: Do not depend on BITS_PER_UNIT.\n-\n-Fri Apr 24 16:12:40 1998  Dave Brolley  <brolley@cygnus.com>\n-\n-\t* writerecord.c (sys/types.h): #included to pick up off_t.\n-\n-Tue Nov 26 01:56:03 1996  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* memmove.c (memmove): If nor overlapping use memcpy instead of\n-        byte copy.\n-\n-Tue May 14 21:26:52 1996  Per Bothner  <bothner@deneb.cygnus.com>\n-\n-\t* gestr.c, gtstr.c, lestr.c, nestr.c:  Removed - no longer used.\n-\t* Makefile.in (STROBJS)  Removed gestr.o, gtstr.o, lestr.o, nestr.o.\n-\n-Thu May  9 06:59:23 1996  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* basicio.c (__connect): In case of Same, fix condition for\n-\texception.\n-\n-Thu Feb 29 10:55:01 1996  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* format.c:  Use ANSI-standard float.h, rather than old values.h.\n-\n-Mon Jan 15 06:16:22 1996  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* sendbuffer.c (__send_buffer): Take care of possibly unaligned\n-\tpointers.\n-\n-\t* waitbuffer.c (__wait_buffer): Ditto.\n-\n-Thu Nov 30 03:49:58 1995  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* format.c (inpioctrl): Process NOTCONNECTED.\n-\t(outioctrl): Deto.\n-\t(scanformcont): Fix processing of %% in format string.\n-\n-Mon Nov 27 05:27:14 1995  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* chillrt0.c (main): Pass argc & argv to __RTS_INIT__.\n-\n-Thu Nov 23 05:15:05 1995  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* ioerror.h (io_info_word_t): Make value of first entry compile time\n-\tcomfigurable.\n-\n-Tue Nov  7 22:52:24 1995  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* format.c: Rename ultoa to myultoa cause of conflicting types\n-\ton some systems.\n-\n-Mon Nov  6 03:17:50 1995  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* chillrt0.c: Move definition of chill_stdin, chill_stdout,\n-\tchill_stderr ...\n-\n-\t* chillstdio.c: ... to here.\n-\n-\t* delete.c, eoln.c, existing.c, getusage.c, indexable.c,\n-\tisassociated.c, outoffile.c, readable.c, sequencible.c,\n-\tvariable.c, writeable.c: Modified for new implementation of\n-\tchill file i/o.\n-\n-\t* basicio.c, format.c, getassoc.c, gettextaccess.c, gettextindex.c,\n-\tgettextrecord.c, ioerror.c, readrecord.c, settextaccess.c,\n-\tsettextindex.c, settextrecord.c, writerecord.c: New files to \n-\timplement chill file i/o.\n-\n-\t* allocate.c, terminate.c: New files to implement chill's\n-\tALLOCATE and TERMINATE built-in's.\n-\n-\t* associate.c, checksum.c, connect.c, create.c, disconnect.c,\n-\tdissociate.c, findfile.c, findnextfile.c, fstable.c, getass.c,\n-\tgetdir.c, gettxtacc.c, gettxtidx.c, gettxtrec.c, iostatus.c,\n-\tlowlevelio.c, modify.c, rdformat.c, rdrecord.c, rdstring.c,\n-\trdtext.c, rdunixstd.c, readlen.c, regexp.h, setdir.c, settxtacc.c,\n-\tsettxtidx.c, settxtrec.c, skiprec.c, wrformat.c, wrrecord.c,\n-\twrstring.c, wrtext.c, wrunixstd.c: Removed.\n-\n-Tue Sep 12 04:27:47 1995  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* Makefile.in (Makefile): Add rule for Makefile.\n-\tOBJS depends on ../../cc1 to build a new library when cc1 have\n-\tchanged.\n-\t\n-Mon Jul 31 15:04:04 1995  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* ffsetclrps.c, flsetclrps.c:  Completely different interface,\n-\t* storeoutps.c:  Remove, no longer needed.\n-\t* Makefile.in (PSOBJS):  Take out storeoutps.o.\n-\n-Mon Jun 19 05:23:35 1995  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* exh.c (__cause_exception): New argument. \n-\t(__cause_ex1): New function. This function will get called\n-\tnow by the compiler when an exception should be raised.\n-\n-\t* abstime.c, allgmem.c, allmem.c, checkcycle.c, delaycase.c,\n-\tffsetps.c, flsetps.c, inbitstr.c, sendbuffer.c, waitbuffer.c:\n-\tChange calls to __cause_exception to calls to __cause_ex1.\n-\n-\t* unhex.c (unhandled_exception), \n-\tcause.c (cause_exception): New argument.\n-\n-\t* rts.h: Add prototypes for __delay_this and __continue_that.\n-\n-\t* ffsetclrps.c, flsetclrps.c, inps.c, rtltypes.h, setbitps.c:\n-\tRemove prototype for __cause_exception (not needed).\n-\n-\t* rdstring.c (_readstring), wrstring.c (_writestring): Add argument\n-\tto call to __cause_exception.\n-\n-\t* Makefile.in, unhex1.c: New file. Function __unhandled_ex\n-\tis defined here. This gets called when the compiler doesn't\n-\tfind a handler when causing an exception.\n-\n-Tue Apr 11 16:01:02 1995  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* iomodes.h (__tmp_WIO_union, __tmp_RIO_union):  Make __forbyte\n-\tbe explicitly signed, for the sake of systems where char is unsigned.\n-\n-Wed Mar 22 06:10:18 1995  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* setbitps.c (__setbitpowerset): Change definition of new_value \n-\tto char, cause booleans are represented as 8 bit values by the \n-\tcompiler. Use only least significant bit of new_value.\n-\n-Tue Jan 17 07:32:17 1995  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* inps.c (__inpowerset): Don't do rangecheck. Return 0\n-\tif value not in range.\n-\n-\t* Makefile.in, inbitstr.c (__inbitstring): New file and\n-\tfunction for accessing single elements in a bitstring.\n-\n-Tue Dec  6 02:35:00 1994  Wilfried Moser  <moser@rtl.cygnus.com>\n-\n-\t* rdformat.c (rf_parse_iolist): In case of __IO_set and\n-\t__IO_SetRange process the ignore_case flag.\n-\n-\t* iomodes.h: Change definition of __tmp_RIO_forset and \n-\t__tmp_RIO_forsetrange.\n-\n-Fri Nov  4 12:04:16 1994  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* concatstr.c (__concatstring):  Add support for input strings\n-\tto overlap target.\n-\t* setbits.c (__setbits):  Fix function name passed\n-\tto __cause_exception.\n-\n-Wed Nov  2 05:02:59 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* Makefile.in (TIMEOBJS): Add new files.\n-\n-\t* checkcycle.c (__check_cycle): New file and function for \n-\tCYCLE statement.\n-\n-\t* convdurrtstime.c (__convert_duration_rtstime): New file\n-\tand function for conversion of DURATION (unsigned long) to\n-\tRtsTime format.\n-\n-\t* delaycase.c (__delay_event): Implement processing of\n-\ttimesupervision.\n-\n-\t* remaintime.c (__remaintime): New file and function to \n-\tcalculate the remaining time of a duration (used for \n-\ttimesupervision).\n-\n-\t* rts.h: New definitions and prototypes.\n-\n-\t* sendbuffer.c (__send_buffer): Implement processing of\n-        timesupervision.\n-\n-\t* waitbuffer.c (__wait_buffer): Implement processing of\n-        timesupervision.\n-\n-\t* waituntil.c (__wait_until): Changed due to implementation\n-\tof timesupervision.\n-\n-Thu Oct  6 06:41:02 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* wrformat.c (default_conv): Remove processing of \n-\tPOWERSET's.\n-\n-\t* rdformat.c (rf_parse_iolist): Remove processing of\n-\tPOWERSET's.\n-\n-\t* iomodes.h: Remove definition for POWERSET's.\n-\n-Fri Sep 30 01:52:25 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* rdformat.c (rf_parse_iolist): Fix processing of BITSTRINGs.\n-\n-Mon Sep 26 16:10:47 1994  Per Bothner  (bothner@kalessin.cygnus.com)\n-\n-\t* copyps.c (__pscpy):  Add missing 'const'.\n-\n-\t* wrformat.c (default_conv):  Replace memcpy by explicit loop,\n-\tsince memcpy can get mis-optimized when we have unaligned data.\n-\n-\t* wrformat.c (__write_format):  Don't alloca an extra copy of\n-\tthe format string.\n-\n-Mon Sep 26 08:54:03 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* wrformat.c (default_conv): Remove formating of nonprintable\n-\tcharacters (ESC-sequences wouldn't work).\n-\n-Fri Sep 23 00:48:28 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* copyps.c (__pscpy): Fix masking out unused bits.\n-\n-\t* fileio.h: Fix prototype.\n-\n-Tue Sep 13 04:54:45 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* rdformat.c (__read_format): Remove end-of-input string \n-\tcheck.\n-\n-Thu Sep  8 17:20:07 1994  Per Bothner  (bothner@kalessin.cygnus.com)\n-\n-\t* setbits.c (__setbits):  New function, based on __setpowersetbits,\n-\tbut with 4 instead of 5 parameters.\n-\t* setpsbits.c:  Removed.  No longer used.\n-\t* Makefile (PSOBJS):  Update accordingly.\n-\n-Mon Sep  5 08:03:46 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* queuelength.c (__queue_length): New file and function\n-\tto implement QUEUE_LENGTH built-in.\n-\t* Makefile.in (TASKOBJS): Add queuelength.o.\n-\n-Fri Aug 26 16:27:21 1994  Per Bothner  (bothner@kalessin.cygnus.com)\n-\n-\t* Makefile.in (INCLUDES):  Add  -I../../include.\n-\n-Wed Aug 24 01:12:32 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* sendbuffer.c, waitbuffer.c, delaycase.c, printbuffer.c,\n-\tprintevent.c: Be careful with addresses of data from the\n-\tapplication,they may be unaligned (-fpack).\n-\n-Fri Aug 19 07:16:15 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* wrformat.c (default_conv), rdformat.c (rf_parse_iolist): Be\n-\tcareful with addresses of data from the application, they may \n-\tbe unaligned (-fpack).\n-\n-Fri Aug 12 20:31:47 1994  Per Bothner  (bothner@kalessin.cygnus.com)\n-\n-\t* eqps.c (__eqpowerset):  Calculate number of full words\n-\tas floor, not ceiling of bitslength/SET_WORD_SIZE.\n-\n-Fri Aug  5 17:25:48 1994  Per Bothner  (bothner@kalessin.cygnus.com)\n-\n-\t* eqps.c (__eqpowerset):   Revert Wilfried's fix, and fix\n-\tthe problem in a slightly different way (which is simpler\n-\tand will also work for 0-length bitstrings).\n-\t* neps.c (__nepowerset):  Simplify - just call __eqpowerset.\n-\n-Fri Jul 29 04:06:56 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* neps.c (__nepowerset): Correct processing of powerset\n-\tin case of USE_CHARS defined.\n-\n-Wed Jul 27 05:27:06 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* eqps.c (__eqpowerset): Correct processing of powerset\n-\tin case of USE_CHARS defined.\n-\n-Mon Jun 27 01:17:09 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* iomodes.h: Change layout of __tmp_WIO_list that it is always\n-\tthe same, regardless if compiled with -fpack or not.\n-\n-Tue May 31 04:54:48 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* printbuffer.c, printevent.c, rts.h, sendbuffer.c,\n-\twaitbuffer.c: Finish the implementation of BUFFER's\n-\tand EVENT's.\n-\n-Tue May 10 05:17:43 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* iomodes.h: Change names of __access, __association and \n-\t__text to __access_type, __association_type and\n-\t__text_type. __access is already defined in one of the\n-\tlinux header files.\n-\n-Wed May  4 15:37:22 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* Makefile.in (clean): Add chillrt0.o\n-\t* continue.c (__continue): Implement the function.\n-\t* delaycase.c (__delay_event): Implement the function.\n-\t* printbuffer.c (__print_buffer): Implement the function.\n-\t* printevent.c (__print_event.c): Implement the function.\n-\t* rts.h: Change datatypes used for EVENT's and BUFFER's.\n-\t* sendbuffer.c (__send_buffer): Implement the function.\n-\t  FIXME: not completely done.\n-\t* waitbuffer.c (__wait_buffer): Implement the function.\n-\t  FIXME: not completely done.\n-\n-Thu Apr 28 14:39:06 1994  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* Makefile.in (TASKOBJS): New variable for tasking related\n-\t  objects files.\n-\t* Makefile.in (TIMEOBJS): New object file added.\n-\t* rts.h: Add definitions for BUFFER's and EVENT's.\n-\t* waituntil.c (__wait_until): New file and new function.\n-\t  Implements the AT action.\n-\t* delaycase.c (__delay_event): New file and new function.\n-\t  Implements the DELAY and DELAY CASE action. FIXME: not yet done.\n-\t* continue.c (__continue): New file and new function.\n-\t  Implements the CONTINUE action. FIXME: not yet done.\n-\t* sendbuffer.c (__send_buffer): New file and new function.\n-\t  Implements the SEND buffer action. FIXME: not yet done.\n-\t* waitbuffer.c (__wait_buffer): New file and new function.\n-\t  Implements the RECEIVE buffer CASE action. FIXME: not yet done.\n-\t* printevent.c (__print_event): New file and new function.\n-\t  Prints an event queue. FIXME: not yet done.\n-\t* printbuffer.c (__print_buffer): New file and new function.\n-\t  Prints a buffer queue. FIXME: not yet done.\n-\n-Fri Apr  1 10:59:55 1994  Wilfried Moser  (fs_moser at rcsw47)\n-\n-\t* wrformat.c (default_conv): Change output of characters in the\n-\trange 0 to 31 (control characters now printed as ^C).\n-\n-Fri Apr 15 16:29:21 1994  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)\n-\n-\t* Makefile.in: XTRAFLAGS is no longer need, since -Bdir now\n-\timplies -Idir/include.\n-\t(XTRAFLAGS): Don't define.\n-\t(ALL_CFLAGS): Don't include $(XTRAFLAGS).\n-\n-Thu Apr 14 13:44:31 1994  Wilfried Moser  (moser@phishhead.cygnus.com)\n-\n-\t* Makefile.in (TIMEOBJS): New variable for time related stuff.\n-\t* Makefile.in (OBJS): Add TIMEOBJS.\n-\t* abstime.c (_abstime): New file and new function to handle\n-\tABSTIME builtin.\n-\t* inttime.c (_inttime): New file and new function to handle\n-\tINTTIME builtin.\n-\n-Tue Mar 29 13:11:37 1994  Wilfried Moser  (fs_moser at rcsw1h)\n-\n-\t* Makefile.in (LIBOBJS2): Add new modules rdformat.o rdstring.o\n-\t  rdunixstd.o \n-\t* iomodes.h: Remove unnecessary definitions. Redefine interface to\n-\t  READTEXT/WRITETEXT functions.\n-\t* rdstring.c (_readstring): Rework function.\n-\t* rdformat.c: Rework functionality.\n-\t* rdunixstd.d: New module. This is designed to implement\n-\t   READTEXT (stdin...). \n-\t* wrformat.c (copy_text): Change return value of function. In case\n-\t  of an empty string this function has failed.\n-\t* wrformat.c: Change formating of a NULL pointer to NULL instead\n-\t  of 0.\n-\t* wrformat.c (PUT_CHARS): Change macro according to new return\n-\t  value of function copy_text.\n-\n-Sun Mar 20 21:11:35 1994  Per Bothner  (bothner@kalessin.cygnus.com)\n-\n-\t* powerset.h:  Bitstrings are now allocated in units\n-\tof (unsigned char), rather than words.\n-\t* eqps.c (__eqpowerset):  Optimize slighly for above change.\n-\n-\t* setbitps.c (__setbitpowerset):  Clean up parameter list.\n-\n-Thu Mar 10 11:10:32 1994  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* Makefile.in: Add standard gcc Makefile stuff.  Move\n-\t  chillcrt0 and libchill.a to all.indirect from all target.\n-\n-Tue Mar  1 17:01:32 1994  Wilfried Moser  (fs_moser at rcsw1h)\n-\n-\t* iomodes.h: Add definition for POWERSET's\n-\t* wrunixstd.c: Change the write call to an fprintf cause a system\n-\t  we have doesn't support write.\n-\t* wrformat.c: Add processing of SET's and POWERSET's\n-\n-Sat Jan 29 13:32:52 1994  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* Makefile.in: Add new files copyps.c and concatps.c.\n-\t* copyps.c: New function with functionality from sliceps.c,\n-\t* sliceps.c: Change to call copyps now from here.\n-\t* concatps.c: New function - call copyps from here.\n-\t* powerset.h: Fix CLEAR_BIT_IN_CHAR macro.\n-\n-Wed Jan 26 12:30:48 1994  Mike Stump  (mrs@cygnus.com)\n-\n-\t* Makefile.in: Don't echo ranlib command.\n-\n-Wed Jan 26 12:21:11 1994  Mike Stump  (mrs@cygnus.com)\n-\n-\t* Makefile.in: Make sure cross builds work.  AR, and RANLIB now\n-\t  used properly.  Make sure we can reconfigure if Makefile.in\n-\t  changes.  Use GCC_FOR_TARGET, not CC to compile libchill.a.\n-\n-Fri Jan 21 15:30:31 1994  Per Bothner  (bothner@kalessin.cygnus.com)\n-\n-\t* allgmem.c:  Make prototype K&R-compatible.\n-\n-Sat Jan 15 10:04:08 1994  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* Makefile.in: Remove unused install code.\n-\t  (Install will happen from devo/gcc).  Add\n-\t  rules for cleaning up.\n-\n-Fri Jan 14 21:43:45 1994  Per Bothner  (bothner@kalessin.cygnus.com)\n-\n- \t* chillrt0.c (__init_list):  Renamed to _ch_init_list, to\n-\tavoid a conflict on the Alpha.\n-\n-Tue Jan 25 13:28:15 1994  Wilfried Moser  (fs_moser at rcsw1j)\n-\n-\t* Makefile.in: clean up for cross compilation. Remove a lot of\n-\t  functions (file-io) which are not used at the moment.\n-\t* iomodes.h: clean up the datatypes passed to the writetext\n-\t  functions. \n-\t* unhex.c: Comment out include of gvarargs.h (not needed).\n-\t* rtsdummy.c: Comment out include of gvarargs.h (not needed).\n-\t* wrformat.c: change various procedure arguments according to the\n-\t  new type passed by the compiler. Remove include of fcntl.h and\n-\t  sys/stat.h (not needed).\n-\t* wrformat.c (default_conv): Change formatting of integers in case\n-\t  of %O, %H, %B to unsigned. (PR-4395)\n-\t* wrstring.c: change various procedure arguments according to the\n-\t  new type passed by the compiler. Remove include of fcntl.h and\n-\t  sys/stat.h (not needed).\n-\t* wrtext.c: change various procedure arguments according to the\n-\t  new type passed by the compiler.\n-\t* wrunixstd.c: change various procedure arguments according to the\n-\t  new type passed by the compiler. Remove include of fcntl.h and\n-\t  sys/stat.h (not needed).\n-\t* wrunixstd.c (_writeunixstd): Change the fwrite call to fprintf.\n-\t  This is necessary due to a port to a system which does not\n-\t  support fwrite.\n-\n-Sun Jan  2 14:40:32 1994  Bill Cox  (bill@cygnus.com)\n-\n-\t* Makefile.in: Clean out obsolete .c286 suffix references.\n-\n-Sat Jan  1 16:51:22 1994  Bill Cox  (bill@cygnus.com)\n-\n-\t* Makefile.in: Add dependencies on fileio.h\n-\n-Sat Jan  1 12:31:22 1994  Bill Cox  (bill@cygnus.com)\n-\n-\t* Reorganize the whole directory and the Makefile.  Now you\n-\t  can recompile a single function and not have to recompile\n-\t  a whole file full of them.\n-\t* eqps.c, neps.c: Fix handling of a one-word set. (PR-4077).\n-\n-Thu Dec 16 10:19:00 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* fileio.c (default_conv): Changes to support all basic CHILL types.\n-\t  Standardize function header formats.\n-\n-Tue Dec 14 14:36:27 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* fileio.c (writeunixstd): Call _allocate_memory and\n-\t  _return_memory, so we'll get appropriate exceptions.\t\n-\t* powerset.c: Ensure a space between each macro name and the\n-\t  parameters.\n-\n-Mon Nov 22 10:42:37 1993  Wilfried Moser  (moser@rtl.cygnus.com)\n-\n-\t* Makefile.in: Add functions to LIBFUNCS1\n-\t* chillrt0.c (main): Clear the exception stack.\n-\t* libchill.c (__setexceptionStack, __getexceptionStack): New\n-\t  functions according to allow one exceptionStack per thread.\n-\n-Sat Nov 20 17:45:52 1993  Per Bothner  (bothner@kalessin.cygnus.com)\n-\n-\t* libchill.c (__ch_link_handler, __ch_unlink_handler):  New functions.\n-\n-Fri Nov 19 14:37:12 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* Makefile.in, string.c: Add memmove function (PR-3937).\n-\n-Wed Nov 17 17:07:46 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* fileio.c (_writestring): Add parameters for the source file\n-\t  and line number where it was called, for way better error\n-\t  messages.\n-\t* powerset.c: Make all length and count variables longs.\n-\t  Allows much larger powersets.\n-\n-Mon Nov 15 14:59:47 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* fileio.c (writestring): Changed interface.\n-\t* iomodes.h: New structures for above interface.\n-\t* libchill.c: Delete bunch of powerset-related cruft.\n-          (cause_exception): Empty it out.\n-\t* powerset.c: Call correct exception causer.\n-\t* string.c: Rewrite string comparisons from scratch.  They\n-\t  were bad...\n-\n-Sat Oct 30 14:54:39 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* Makefile.in: Change paths to executables.\n-\n-Thu Oct 28 16:38:34 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* powerset.c (__inpowerset, __setbitpowerset): Correct error checking.\n-\t  These were throwing false exceptions.\n-          (__setpowersetbits): Add check for null output set ptr.\n-\n-Wed Oct 27 16:45:29 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* powerset.c (__diffpowerset): Check for SET_SHORT_SIZE, not\n-\t  SET_CHAR_SIZE twice.\n-          (__ffsetpowerset, __flsetpowerset): Add code for CHAR and SHORT sets.\n-\t* libchill.c (cause_exception): Output a message to stderr, and\n-\t  abort, as a default exception action.\n-\n-Thu Oct 21 16:04:09 1993  Per Bothner  (bothner@kalessin.cygnus.com)\n-\n-\t* fileio.c (__write_format): Add missing increment of fstr.\n-\n-Thu Sep 30 20:11:34 1993  Per Bothner  (bothner@kalessin.cygnus.com)\n-\n-\t* powerset.c (__psslice):  Take length, rather than upper bound.\n-\n-Sun Sep 19 23:14:57 1993  Per Bothner  (bothner@kalessin.cygnus.com)\n-\n-\t* chillrt0.c, fileio.c (_writeunixstd): Change a standard Unix file\n-\tfrom (long*) to (long).  Use fwrite rather than write.\n-\t* fileio.c (PUT_CHARS, PUT_CHAR):  New macros.\n-\t* fileio.c (__write_format):  Use them.\n-\t* fileio.c (__write-format):  Handle \"%/\" format even if\n-\tnot io_ctrl_allowed (by emitting '\\n').\n-\n-Fri Sep 10 12:15:51 1993  Wilfried Moser  (fs_moser at rcsw1j)\n-\n-\t* chillrt0.c: Make stdin, stdout, stderr available to chill\n-\t  programs. This is done by setting the apropriate file handles\n-          to chill_stdin, chill_stdout, chill_stderr.\n-\t* fileio.c: Add a new function (_writeunixstd) to the \n-\t  chill library. This function will be called when the compiler\n-\t  detects a WRITETEXT action to one of the above mentioned\n-\t  file handles.\n-\t* Makefile.in: Add _writeunixstd to LIBFUNCS3.\n-\n-Sat Aug 21 17:17:53 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-        * Makefile.in: Add psset to list of powerset stuff.\n-\t* powerset.c: Standardize (and correct) for loops.  Fix\n-\t  comments.\n-\n-Mon Jul  5 09:48:06 1993  Wilfried Moser  (fs_moser at rcsw1j)\n-\n-\t* rtltypes.h: Change layout of struct __ch_handler. The entry\n-\t  jmp_buf is moved to the end of the structure.\n-\n-Mon Jun 14 12:17:53 1993  david d `zoo' zuhn  (zoo at rtl.cygnus.com)\n-\n-\t* Makefile.in: rename INSTALLDIR to libdir; remove parentdir\n-\tsupport; update definition of INSTALL\n-\n-Thu Jun 10 18:14:41 1993  Wilfried Moser  (moser@deneb.cygnus.com)\n-\n-\t* libchill.c: (vector): This entry was removed. It is no\n-\t  longer neccessary.\n-\t* Makefile.in: Change due to the remove of vector.\n-\n-Wed Jun  9 10:39:25 1993  Wilfried Moser  (moser@deneb.cygnus.com)\n-\n-\t* chillrt0.c (main): Change processing of constructors\n-\t  according to the new design made for tasking.\n-\t* libchill.c (__rts_main_loop, __rts_init): Don't do an\n-\t  abort () there.\n-\n-Mon May 31 08:24:51 1993  Ian Lance Taylor  (ian@cygnus.com)\n-\n-\t* Makefile.in (install): Create directory if necessary.\n-\n-Sun May 30 15:57:05 1993  Per Bothner  (bothner@cygnus.com)\n-\n-\t* powerset.c (__eqpowerset, _newpowerset):  Don't call\n-\tMASK_UNUSED_{CHAR,SHORT}_BITS on input operand\n-\t(which might be in read-only memory).\n-\t* powerset.c (SET_CHAR, SET_SHORT):  Make unsigned.\n-\n-Fri May 21 10:45:07 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-        * Makefile.in, chillrt0.c, fileio.c, libchill.c, \n-\t  powerset.c, rtltypes.h: Wilfried's changes checked\n-\t  in at Cygnus.     \n-\n-Tue May 18 09:21:56 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* powerset.c, Makefile.in: Add psslice routine.\n-\t  Change function name from bitsetpowerset to\n-          setpowersetbits.  Drop build of I/O library\n-          stuff, per Wilfried's request.\n-\n-Tue May 18 07:55:25 1993  Wilfried Moser  (fs_moser at rcsw1j)\n-\n-\t* Makefile.in: clean up directory. Remove chillrt0.c \n-          from libchill.a, this will be linked separately.\n-\t  Remove librmt.a from Makefile, this is application\n-          dependent.\n-\n-Fri May  7 10:45:09 1993  Ian Lance Taylor  (ian@cygnus.com)\n-\n-\t* Makefile.in (tooldir): Define.\n-\t* configure.in: If cross-compilation, install in $(tooldir)/lib\n-\trather than in $(exec_prefix)/lib.\n-\n-Sat May  1 11:43:44 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* Makefile.in: Add store_output to lists.\n-\t* powerset.c: Add char- and short-length set handling\n-          across the board.\n-\n-Thu Apr  8 17:43:33 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* powerset.c (nepowerset): Return TRUE for non-equal comparison.\n-\t* string.c (eqstring, nestring): Call memcmp for the real work.\n-\n-Mon Mar 22 23:22:53 1993  david d `zoo' zuhn  (zoo at cirdan.cygnus.com)\n-\n-\t* Makefile.in: add dvi, check and installcheck targets\n-\n-Fri Mar 12 10:59:31 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* string.c (nestring): Fix return status - was completely bogus.\n-\n-Fri Mar  5 18:34:15 1993  Per Bothner  (bothner@rtl.cygnus.com)\n-\n-\t* powerset.c:  Re-name INT_TYPE_SIZE to SET_WORD_SIZE.\n-\t* powerset.c:  Use SET_WORD instead of (unsigned int).\n-\t* powerset.c (__eqpowerset, __nepowerset):  Fix masking\n-\tof final word to not trash memory.\n-\n-Fri Mar  5 07:55:13 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* Makefile.in, powerset.c (__nepowerset): add psne for powerset\n-          inequality test.\n-        * string.c: fix comment.\n-\n-Sat Feb 20 08:07:21 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* Makefile.in, libchill.c, powerset.c: split out powerset stuff.\n-\t* powerset.c: fix __ffsetpowerset and __flsetpowerset.\n-\n-Fri Feb 19 11:00:10 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* Makefile.in: add psmax and psmin to LIBFUNCS1, so the \n-\t  ffsetpowerset and flsetpowerset functions get into the library.\n-\n-Sat Feb 13 15:43:21 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* Makefile.in, string.c: cleanup\n-\n-Sat Feb 13 13:52:20 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* Makefile.in: Add LIBFUNC4, and loop for it.  Builds\n-\t  string-related runtime functions, adds them to libchill.a.\n-\n-Wed Feb 10 09:45:29 1993  Bill Cox  (bill@rtl.cygnus.com)\n-\n-\t* rtltypes.h: added missing TExceptionDefinition.\n-\n-\t* libchill.c: add GNU comment header, various new powerset\n-\t  support routines.  Change function declarations for K&R\n-\t  compatibility.\n-\t* string.c: added - runtime string routines (relationals and\n-\t  concat).\n-\n-Tue Feb  9 16:17:35 1993  Per Bothner  (bothner@rtl.cygnus.com)\n-\n-\t* libchill.c, rtltypes.h:  Replace exceptions-handling code.\n-\t* fileio.c:  Comment out non-working pseudo-exception-handlers.\n-\n-Fri Feb  5 07:38:39 1993  Fred Fish  (fnf@cygnus.com)\n-\n-\t* Makefile.in (RANLIB_TEST, INSTALL, INSTALL_PROGRAM,\n-\tINSTALL_DATA):  Supply default definitions.\n-\n-Sat Jan 30 13:57:09 1993  Per Bothner  (bothner@rtl.cygnus.com)\n-\n-\t* libchill.c:  Change exception to be plain (char*).\n-\t(This is a simplification, at the cost of needing strcmp's.)\n-\t* Makefile.in:  Move install actions over form ../gcc/Makefile.in.\n-\n-Wed Jan 27 23:22:44 1993  Per Bothner  (bothner@rtl.cygnus.com)\n-\n-\t* libchill.c (__cause_exception):  Exception is (for now)\n-\t(char**), rather than short.\n-\tAlso, add (commented-out) sketch of new exception implementation.\n-\n-Tue Jan 12 21:14:56 1993  Per Bothner  (bothner@cygnus.com)\n-\n-\t* libchill.c:  Re-wrote bitstring/powerset code:  Each chunk is\n-\tnow a (unsigned int), rather than a (char), and bit-order\n-\tdepends on BITS_BIG_ENDIAN, rather than being always\n-\tlitle-endian.  Other improvements here and there.\n-\t* libchill.c (__cardpowerset, __diffpowerset):  Faster code.\n-\t* libchill.c (__setbitinstring):  New routine, to assign\n-\ta single bit in a bitstring/powerset.\n-\t* Makefile.in (LIBFUNCS1):  Add psset for __setbitinstring().\n-\n-Tue Jan 12 00:10:46 1993  david d `zoo' zuhn  (zoo at cirdan.cygnus.com)\n-\n-\t* Makefile.in: compile all files with ALL_CFLAGS instead of CFLAGS,\n-\tdefault ALL_CFLAGS to include CFLAGS,\n-\tdefault XTRAFLAGS which is used to find the C library (like libg++),\n-\tadded dummy install-info target for devo builds,\n-\n-Wed Jan  6 08:03:46 1993  Fred Fish  (fnf@cygnus.com)\n-\n-\t* Makefile.in (libchill.a):  Since libchill.a depends upon\n-\tchillrt0.o, don't remove chillrt0.o after adding to archive.\n-\t* config/mh-sysv4:  Add SVR4 configuration file.\n-\t* Makefile.in (GCC_MAKEFILE):  Define to point to gcc/chill\n-\tcompiler Makefile, which contains the actual makefile fragments\n-\tto do the install, since it knows where gcc/chill is installed.\n-\t* Makefile.in:  Add lines that configure looks for to insert\n-\thost, target, and site specific Makefile fragments.\n-\t* Makefile.in (install):  New target that invokes make on the\n-\tgcc/chill makefile to do the actual install.\n-\t* configure.in (*-*-sysv4):  Use mh-sysv4 as host_makefile_frag.\n-\n-Sun Jan  3 16:47:25 1993  Per Bothner  (bothner@cygnus.com)\n-\n-\t* chillrt0.c:  Comment out for now the non-portable\n-\tkludge for adding build_exceptions to the C++ initialision list.\n-\n-Sat Jan  2 15:51:43 1993  Per Bothner  (bothner@rtl.cygnus.com)\n-\n-\t* New directory.  Moved files from ../gcc/chillrt.\n-\t* configure.in:  New file.\n-\t* Makefile.in:  Modified from old Makefile to fit into standard\n-\tdirectory structure."}, {"sha": "fb03aeec038d833866e4fd45d0e87b998ab2dad8", "filename": "libchill/Makefile.in", "status": "removed", "additions": 0, "deletions": 246, "changes": 246, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2FMakefile.in?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,246 +0,0 @@\n-# Makefile for GNU CHILL compiler runtime library.\n-#   Copyright (C) 1987, 88, 90-94, 1998, 1999 Free Software Foundation, Inc.\n-\n-#This file is part of GNU CC.\n-\n-#GNU CC is free software; you can redistribute it and/or modify\n-#it under the terms of the GNU General Public License as published by\n-#the Free Software Foundation; either version 2, or (at your option)\n-#any later version.\n-\n-#GNU CC is distributed in the hope that it will be useful,\n-#but WITHOUT ANY WARRANTY; without even the implied warranty of\n-#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-#GNU General Public License for more details.\n-\n-#You should have received a copy of the GNU General Public License\n-#along with GNU CC; see the file COPYING.  If not, write to\n-#the Free Software Foundation, 59 Temple Place - Suite 330,\n-#Boston, MA 02111-1307, USA.  */\n-\n-# This was cribbed from the libf2c, libiberty and libstdc++ Makefile.in\n-# files.  Some of this stuff may be unnecessary and worthless.\n-\n-SHELL = /bin/sh\n-\n-#### Start of system configuration section. ####\n-\n-srcdir = @srcdir@\n-VPATH = @srcdir@\n-prefix = @prefix@\n-exec_prefix = @exec_prefix@\n-target_alias = @target_alias@\n-gcc_version = @gcc_version@\n-gcc_version_trigger = @gcc_version_trigger@\n-\n-libdir = $(exec_prefix)/lib\n-libsubdir = $(libdir)/gcc-lib/$(target_alias)/$(gcc_version)\n-\n-# Multilib support variables.\n-MULTISRCTOP =\n-MULTIBUILDTOP =\n-MULTIDIRS =\n-MULTISUBDIR =\n-MULTIDO = true\n-MULTICLEAN = true\n-\n-# Not configured per top-level version, since that doesn't get passed\n-# down at configure time, but overrridden by the top-level install\n-# target.\n-INSTALL = @INSTALL@\n-INSTALL_PROGRAM = @INSTALL_PROGRAM@\n-INSTALL_DATA = @INSTALL_DATA@\n-\n-AR = @AR@\n-AR_FLAGS = rc\n-\n-RANLIB = @RANLIB@\n-\n-CC = @CC@\n-CFLAGS = @CFLAGS@\n-ALL_CFLAGS = -I. -I$(srcdir) $(CPPFLAGS) $(DEFS) $(CFLAGS)\n-\n-.SUFFIXES:\n-.SUFFIXES: .c .o\n-\n-.c.o:\n-\t$(CC) -c $(ALL_CFLAGS) $(INCLUDES) $<\n-\n-# Lists of required functions for each archive.\n-\n-LIBOBJS1 = allgmem.o allmem.o allocate.o cause.o exhstack.o exh.o retmem.o \\\n-\t   unhex.o unhex1.o rtsdummy.o terminate.o\n-\n-IOOBJS = basicio.o chillstdio.o delete.o eoln.o existing.o format.o getassoc.o \\\n-\t gettextaccess.o gettextindex.o gettextrecord.o getusage.o \\\n-\t indexable.o ioerror.o isassociated.o outoffile.o readable.o \\\n-\t readrecord.o sequencible.o settextaccess.o settextindex.o \\\n-\t settextrecord.o variable.o writeable.o writerecord.o\n-\n-PSOBJS = andps.o cardps.o concatps.o copyps.o diffps.o eqps.o ffsetclrps.o \\\n-\tffsetps.o flsetclrps.o flsetps.o inbitstr.o inps.o leps.o ltps.o \\\n-\tneps.o notps.o orps.o setbitps.o setbits.o sliceps.o xorps.o\n-\n-STROBJS = concatstr.o eqstr.o ltstr.o @MEMMOVE_O@\n-\n-TIMEOBJS = abstime.o inttime.o waituntil.o remaintime.o convdurrtstime.o \\\n-\t   checkcycle.o\n-\n-TASKOBJS = continue.o delaycase.o printbuffer.o printevent.o queuelength.o \\\n-\t   sendbuffer.o waitbuffer.o\n-\n-OBJS = $(LIBOBJS1) $(IOOBJS) $(PSOBJS) $(STROBJS) $(TIMEOBJS) $(TASKOBJS)\n-\n-libchill.a: $(OBJS)\n-\t$(AR) $(AR_FLAGS) $@ $(OBJS)\n-\t$(RANLIB) $@\n-\n-allgmem.o: allgmem.c rtltypes.h\n-allmem.o: allmem.c rtltypes.h\n-allocate.o: allocate.c rtltypes.h\n-cause.o: cause.c\n-exhstack.o: exhstack.c rtltypes.h\n-exh.o: exh.c rtltypes.h\n-retmem.o: retmem.c\n-unhex.o: unhex.c\n-unhex1.o: unhex1.c\n-rtsdummy.o: rtsdummy.c rtltypes.h\n-terminate.o: terminate.c rtltypes.h\n-basicio.o: basicio.c fileio.h\n-chillstdio.o: chillstdio.c iomodes.h\n-delete.o: delete.c fileio.h\n-eoln.o: eoln.c fileio.h\n-existing.o: existing.c fileio.h\n-format.o: format.c bitstring.h auxtypes.h iomodes.h format.h fileio.h ioerror.h\n-getassoc.o: getassoc.c fileio.h\n-gettextaccess.o: gettextaccess.c fileio.h\n-gettextindex.o: gettextindex.c fileio.h\n-gettextrecord.o: gettextrecord.c fileio.h\n-getusage.o: getusage.c fileio.h\n-indexable.o: indexable.c fileio.h\n-ioerror.o: ioerror.c\n-isassociated.o: isassociated.c fileio.h\n-outoffile.o: outoffile.c fileio.h\n-readable.o: readable.c fileio.h\n-readrecord.o: readrecord.c fileio.h\n-sequencible.o: sequencible.c fileio.h\n-settextaccess.o: settextaccess.c fileio.h\n-settextindex.o: settextindex.c fileio.h\n-settextrecord.o: settextrecord.c fileio.h\n-variable.o: variable.c fileio.h\n-writeable.o: writeable.c fileio.h\n-writerecord.o: writerecord.c fileio.h\n-andps.o: andps.c powerset.h\n-cardps.o: cardps.c powerset.h\n-concatps.o: concatps.c powerset.h\n-copyps.o: copyps.c powerset.h\n-diffps.o: diffps.c powerset.h\n-eqps.o: eqps.c powerset.h\n-ffsetclrps.o: ffsetclrps.c powerset.h\n-ffsetps.o: ffsetps.c powerset.h\n-flsetclrps.o: flsetclrps.c powerset.h\n-flsetps.o: flsetps.c powerset.h\n-inbitstr.o: inbitstr.c powerset.h\n-inps.o: inps.c powerset.h\n-leps.o: leps.c powerset.h\n-ltps.o: ltps.c powerset.h\n-neps.o: neps.c powerset.h\n-notps.o: notps.c powerset.h\n-orps.o: orps.c powerset.h\n-setbitps.o: setbitps.c powerset.h\n-setbits.o: setbits.c powerset.h\n-sliceps.o: sliceps.c powerset.h\n-xorps.o: xorps.c powerset.h\n-concatstr.o: concatstr.c\n-eqstr.o: eqstr.c\n-ltstr.o: ltstr.c\n-memmove.o: memmove.c\n-abstime.o: abstime.c rtltypes.h\n-inttime.o: inttime.c\n-waituntil.o: waituntil.c rtltypes.h rts.h\n-remaintime.o: remaintime.c rts.h\n-convdurrtstime.o: convdurrtstime.c rts.h\n-checkcycle.o: checkcycle.c rtltypes.h rts.h\n-continue.o: continue.c rtltypes.h rts.h\n-delaycase.o: delaycase.c rtltypes.h rts.h\n-printbuffer.o: printbuffer.c rtltypes.h rts.h\n-printevent.o: printevent.c rtltypes.h rts.h\n-queuelength.o: queuelength.c rtltypes.h rts.h\n-sendbuffer.o: sendbuffer.c rtltypes.h rts.h\n-waitbuffer.o: waitbuffer.c rtltypes.h rts.h\n-\n-$(PSOBJS): $(srcdir)/powerset.h\n-librmt.o: $(srcdir)/rtltypes.h\n-chillrt0.o: chillrt0.c $(srcdir)/rtltypes.h $(srcdir)/iomodes.h $(srcdir)/auxtypes.h\n-$(LIBOBJS1): $(srcdir)/rtltypes.h\n-$(TIMEOBJS): $(srcdir)/rtltypes.h $(srcdir)/rts.h\n-$(TASKOBJS): $(srcdir)/rts.h $(srcdir)/rtltypes.h\n-$(IOOBJS): $(srcdir)/fileio.h $(srcdir)/bitstring.h $(srcdir)/auxtypes.h \\\n-\t   $(srcdir)/iomodes.h $(srcdir)/format.h $(srcdir)/ioerror.h\n-\n-# Flags to pass to a recursive make.\n-FLAGS_TO_PASS = \\\n-\t\"AR=$(AR)\" \\\n-\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n-\t\"CC=$(CC)\" \\\n-\t\"CFLAGS=$(CFLAGS)\" \\\n-\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n-\t\"EXTRA_OFILES=$(EXTRA_OFILES)\" \\\n-\t\"HDEFINES=$(HDEFINES)\" \\\n-\t\"INSTALL=$(INSTALL)\" \\\n-\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n-\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n-\t\"LDFLAGS=$(LDFLAGS)\" \\\n-\t\"LOADLIBES=$(LOADLIBES)\" \\\n-\t\"PICFLAG=$(PICFLAG)\" \\\n-\t\"RANLIB=$(RANLIB)\" \\\n-\t\"SHELL=$(SHELL)\" \\\n-\t\"prefix=$(prefix)\" \\\n-\t\"exec_prefix=$(exec_prefix)\" \\\n-\t\"libdir=$(libdir)\" \\\n-\t\"libsubdir=$(libsubdir)\" \\\n-\t\"tooldir=$(tooldir)\"\n-\n-all: chillrt0.o libchill.a\n-\t@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=all\n-\n-Makefile: Makefile.in config.status\n-\t$(SHELL) config.status\n-\n-config.status: configure\n-\trm -f config.cache\n-\tCONFIG_SITE=no-such-file CC='$(CC)' AR='$(AR)' CFLAGS='$(CFLAGS)' \\\n-\tCPPFLAGS='$(CPPFLAGS)' $(SHELL) config.status --recheck\n-\n-${srcdir}/configure: configure.in\n-\trm -f config.cache\n-\tcd ${srcdir} && autoconf\n-\n-install: all\n-\t$(INSTALL_DATA) libchill.a $(libsubdir)$(MULTISUBDIR)/libchill.a.n\n-\t$(RANLIB) $(libsubdir)$(MULTISUBDIR)/libchill.a.n\n-\tmv $(libsubdir)$(MULTISUBDIR)/libchill.a.n $(libsubdir)$(MULTISUBDIR)/libchill.a\n-\t$(INSTALL_DATA) chillrt0.o $(libsubdir)$(MULTISUBDIR)/chillrt0.o\n-\t@rootme=`pwd`/ ; export rootme ; \\\n-\t$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=install\n-\n-\n-check uninstall install-strip dist installcheck installdirs info install-info clean-info dvi:\n-\n-mostlyclean:\n-\trm -f *.o\n-\t@$(MULTICLEAN) multi-clean DO=mostlyclean\n-\n-clean: mostlyclean\n-\trm -f config.log libchill.a\n-\t@$(MULTICLEAN) multi-clean DO=clean\n-\n-distclean: clean\n-\t@$(MULTICLEAN) multi-clean DO=distclean\n-\trm -f config.cache config.status Makefile configure\n-\n-maintainer-clean realclean: distclean\n-\n-.PHONY: mostlyclean clean distclean maintainer-clean all check uninstall \\\n-\tinstall-strip dist installcheck installdirs \n-"}, {"sha": "bf3d6149110630f706e0ed024e9f6c40d10a8b29", "filename": "libchill/abstime.c", "status": "removed", "additions": 0, "deletions": 139, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fabstime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fabstime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fabstime.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,139 +0,0 @@\n-/* Implement timing-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <time.h>\n-#include \"rtltypes.h\"\n-\n-EXCEPTION (rangefail);\n-\n-#define SECOND_VALID         1\n-#define MINUTE_VALID         2\n-#define HOUR_VALID           4\n-#define DAY_VALID            8\n-#define MONTH_VALID         16\n-#define YEAR_VALID          32\n-\n-extern void __cause_ex1 (char *ex, char *file, int lineno);\n-\n-#define CAUSE_RANGEFAIL     __cause_ex1 (\"rangefail\", filename, lineno)\n-\n-/*\n- * function _abstime\n- *\n- * parameters:\n- *     mask - mask of valid values\n- *     year\n- *     month\n- *     day\n- *     hour\n- *     minute\n- *     second\n- *\n- * returns:\n- *     unsigned long\n- *\n- * exceptions:\n- *     rangefail\n- *\n- * abstract:\n- *     perform the ABSTIME builtin call\n- *\n- */\n-\n-unsigned long\n-_abstime (mask, year, month, day, hour, minute, second,\n-\t  filename, lineno)\n-     int  mask, year, month, day, hour, minute, second;\n-     char *filename;\n-     int  lineno;\n-{\n-  struct tm   *time_str;\n-  time_t      result, current_time;\n-\n-  /* first of all get current time */\n-  if ((current_time = time (0)) == (time_t)-1)\n-    /* FIXME: what excpetion ?? */\n-    CAUSE_RANGEFAIL;\n-\n-  /* if we just have to determine the current time, we are ready.\n-     This is shown by mask == 0. */\n-  if (mask == 0)\n-    return (unsigned long)current_time;\n-\n-  /* convert current time to struct tm */\n-  time_str = localtime (&current_time);\n-\n-  if (mask & YEAR_VALID)\n-    {\n-      if (year < 1900)\n-\tCAUSE_RANGEFAIL;\n-      time_str->tm_year = year - 1900;\n-    }\n-\n-  if (mask & MONTH_VALID)\n-    {\n-      if (month < 1 || month > 12)\n-\tCAUSE_RANGEFAIL;\n-      time_str->tm_mon = month - 1;\n-    }\n-\n-  if (mask & DAY_VALID)\n-    {\n-      if (day < 1 || day > 31)\n-\tCAUSE_RANGEFAIL;\n-      time_str->tm_mday = day;\n-    }\n-\n-  if (mask & HOUR_VALID)\n-    {\n-      if (hour < 0 || hour > 23)\n-\tCAUSE_RANGEFAIL;\n-      time_str->tm_hour = hour;\n-    }\n-\n-  if (mask & MINUTE_VALID)\n-    {\n-      if (minute < 0 || minute > 59)\n-\tCAUSE_RANGEFAIL;\n-      time_str->tm_min = minute;\n-    }\n-\n-  if (mask & SECOND_VALID)\n-    {\n-      if (second < 0 || second > 59)\n-\tCAUSE_RANGEFAIL;\n-      time_str->tm_sec = second;\n-    }\n-\n-  /* do it */\n-  time_str->tm_isdst = -1;\n-  if ((result = mktime (time_str)) == (time_t)-1)\n-    CAUSE_RANGEFAIL;\n-\n-  return (unsigned long)result;\n-}"}, {"sha": "3e80d119ae610164c1228f5914943faeba1a2fa3", "filename": "libchill/allgmem.c", "status": "removed", "additions": 0, "deletions": 68, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fallgmem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fallgmem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fallgmem.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,68 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <stdlib.h>\n-#include \"rtltypes.h\"\n-\n-extern void __cause_ex1 (char *ex, char *filename, int lineno);\n-\n-EXCEPTION (notimplemented);\n-\n-/*\n- * function _allocate_global_memory\n- *\n- * parameters:\n- *  ptr\t\t\tpointer to location where pointer should be written\n- *  size\t\tnumber of bytes to allocate\n- *  filename            source file which issued the call\n- *  linenumber          line number of the call within that file\n- *\n- * returns:\n- *  void\n- *\n- * exceptions:\n- *  spacefail\n- *  protectionfail\n- *  rangefail\n- *\n- * abstract:\n- *  allocate global memory. At the moment we dont know how to realize this,\n- *  therefore cause NotImplemented.\n- *\n-*/\n-\n-void\n-_allocate_global_memory (ptr, size, filename, linenumber)\n-     void **ptr;\n-     int size;\n-     char *filename;\n-     int linenumber;\n-{\n-    __cause_ex1 (\"notimplemented\", filename, linenumber);\n-}\n-"}, {"sha": "c8306482472ee7d6cbff23ee7b4f6b95c123e310", "filename": "libchill/allmem.c", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fallmem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fallmem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fallmem.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,80 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdlib.h>\n-#include \"rtltypes.h\"\n-\n-extern void __cause_ex1 (char *exname, char *file, int lineno);\n-\n-/* define needed exceptions */\n-EXCEPTION (protectionfail);\n-EXCEPTION (rangefail);\n-EXCEPTION (spacefail);\n-\n-/*\n- * function _allocate_memory\n- *\n- * parameters:\n- *  ptr\t\t\tpointer to location where pointer should be written\n- *  size\t\tnumber of bytes to allocate\n- *  filename            source file which issued the call\n- *  linenumber          line number within that source file\n- *\n- * returns:\n- *  void\n- *\n- * exceptions:\n- *  spacefail\n- *  protectionfail\n- *  rangefail\n- *\n- * abstract:\n- *  allocate memory from heap\n- *\n-*/\n-\n-void\n-_allocate_memory (ptr, size, filename, linenumber)\n-     void **ptr;\n-     int size;\n-     char *filename;\n-     int   linenumber;\n-{\n-  void\t*tmp;\n-    \n-  if (!ptr)\n-    __cause_ex1 (\"protectionfail\", filename, linenumber);\n-  if (size < 0)\n-    __cause_ex1 (\"rangefail\", filename, linenumber);\n-  tmp = malloc (size);\n-  if (!tmp)\n-    __cause_ex1 (\"spacefail\", filename, linenumber);\n-  *ptr = tmp;\n-}"}, {"sha": "628381e772a7497b02beb72a06cc2c9472acb574", "filename": "libchill/allocate.c", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fallocate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fallocate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fallocate.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,74 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdlib.h>\n-#include \"rtltypes.h\"\n-\n-extern void __cause_ex1 (char *exname, char *file, int lineno);\n-\n-/* define needed exceptions */\n-EXCEPTION (allocatefail)\n-EXCEPTION (rangefail)\n-\n-/*\n- * function __allocate\n- *\n- * parameters:\n- *  size\t\tnumber of bytes to allocate\n- *  filename            source file which issued the call\n- *  linenumber          line number within that source file\n- *\n- * returns:\n- *  void *\n- *\n- * exceptions:\n- *  allocatefail\n- *  rangefail\n- *\n- * abstract:\n- *  allocate memory from heap\n- *\n-*/\n-\n-void *\n-__allocate (size, filename, linenumber)\n-     int size;\n-     char *filename;\n-     int   linenumber;\n-{\n-  void\t*tmp;\n-    \n-  if (size < 0)\n-    __cause_ex1 (\"rangefail\", filename, linenumber);\n-  tmp = malloc (size);\n-  if (!tmp)\n-    __cause_ex1 (\"allocatefail\", filename, linenumber);\n-  return tmp;\n-}"}, {"sha": "c638a5a6de1aa3fec4f9627bf12a1fcf765ad3da", "filename": "libchill/andps.c", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fandps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fandps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fandps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,83 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __andpowerset\n- *\n- * parameters:\n- *\tout\t\treturn from __andpowerset\n- *\tleft\t\tleft powerset\n- *\tright\t\tright powerset\n- *\tbitlength\tlength of powerset in bits\n- *\n- * returns:\n- *\tvoid\n- *\n- * exceptions:\n- *  none\n- *\n- * abstract:\n- *  and's two powersets\n- *\n- */\n-\n-void\n-__andpowerset (out, left, right, bitlength)\n-     SET_WORD      *out;\n-     SET_WORD      *left;\n-     SET_WORD      *right;\n-     unsigned long  bitlength;\n-{\n-  if (bitlength <= SET_CHAR_SIZE)\n-    {\n-      *((SET_CHAR *)out) = *((SET_CHAR *)left) &\n-                           *((SET_CHAR *)right);\n-      MASK_UNUSED_CHAR_BITS((SET_CHAR *)out, bitlength);\n-    }\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    {\n-      *((SET_SHORT *)out) = *((SET_SHORT *)left) &\n-                            *((SET_SHORT *)right);\n-      MASK_UNUSED_SHORT_BITS((SET_SHORT *)out, bitlength);\n-    }\n-  else\n-    {\n-      unsigned long len = BITS_TO_WORDS (bitlength);\n-      register unsigned long i;\n-    \n-      for (i = 0; i < len; i++)\n-\tout[i] = left[i] & right[i];\n-      MASK_UNUSED_WORD_BITS ((out + len - 1), \n-\t\t\t     bitlength % SET_WORD_SIZE);\n-    }\n-}"}, {"sha": "33bcc36573b72255835a96878a6c8a3278dd2f78", "filename": "libchill/auxtypes.h", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fauxtypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fauxtypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fauxtypes.h?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,53 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#ifndef _auxtypes_h_\n-#define _auxtypes_h_\n-\n-\n-typedef enum { False, True } Boolean;\n-\n-#define VARYING_STRING(strlen) \\\n-  struct { unsigned short len; char body[strlen]; }\n-\n-typedef struct {\n-  unsigned short len;\n-  char           body[1];\n-} VarString; \n-\n-/* Macros for moving an (U)INT and (U)LONG without alignment worries */\n-#define MOV2(tgt,src) \\\n-  *((char*)(tgt)  ) = *((char*)(src)  ), \\\n-  *((char*)(tgt)+1) = *((char*)(src)+1)\n-#define MOV4(tgt,src) \\\n-  *((char*)(tgt)  ) = *((char*)(src)  ), \\\n-  *((char*)(tgt)+1) = *((char*)(src)+1), \\\n-  *((char*)(tgt)+2) = *((char*)(src)+2), \\\n-  *((char*)(tgt)+3) = *((char*)(src)+3)\n-\n-#endif"}, {"sha": "79fd9cbfa93f6112ab072372355d99ad0335ea82", "filename": "libchill/basicio.c", "status": "removed", "additions": 0, "deletions": 483, "changes": 483, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fbasicio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fbasicio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fbasicio.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,483 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-   \n-   This file is part of GNU CC.\n-   \n-   GNU CC is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2, or (at your option)\n-   any later version.\n-   \n-   GNU CC is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-   \n-   You should have received a copy of the GNU General Public License\n-   along with GNU CC; see the file COPYING.  If not, write to\n-   the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <sys/types.h>\n-#include <sys/stat.h>\n-#include <unistd.h>\n-#include <fcntl.h>\n-#include <limits.h>\n-#include <errno.h>\n-\n-#include <string.h>\n-#include <stdlib.h>\n-\n-#include \"fileio.h\"\n-\n-#ifndef PATH_MAX\n-#   ifdef _POSIX_PATH_MAX\n-#       define PATH_MAX _POSIX_PATH_MAX\n-#   else\n-#       ifdef MAXPATHLEN\n-#           define PATH_MAX MAXPATHLEN\n-#       else\n-#           define PATH_MAX 1024\n-#       endif\n-#   endif\n-#endif\n-\n-static\n-void\n-GetSetAttributes( Association_Mode* the_assoc )\n-{\n-  struct stat statbuf;\n-  int retco;\n-\n-  if( (retco = stat( the_assoc->pathname, &statbuf )) )\n-    return;\n-\n-  if( S_ISREG(statbuf.st_mode) )\n-    {\n-      SET_FLAG( the_assoc, IO_EXISTING );\n-      if( !TEST_FLAG( the_assoc, IO_VARIABLE ) )\n-        SET_FLAG( the_assoc, IO_INDEXABLE );\n-    }\n-  else\n-    if( S_ISCHR(statbuf.st_mode) || S_ISFIFO(statbuf.st_mode) )\n-      {\n-\tSET_FLAG( the_assoc, IO_EXISTING );\n-\tCLR_FLAG( the_assoc, IO_INDEXABLE );\n-      }\n-  SET_FLAG( the_assoc, IO_SEQUENCIBLE );\n-\n-  /* FIXME: File size and computation of number of records for outoffile ? */\n-\n-  if( !access( the_assoc->pathname, R_OK ) )\n-    SET_FLAG( the_assoc, IO_READABLE );\n-  if( !access( the_assoc->pathname, W_OK ) )\n-    SET_FLAG( the_assoc, IO_WRITEABLE );\n-}\n-\n-static\n-void \n-makeName( Association_Mode* the_assoc, char* the_path, int the_path_len,\n-\t char* file, int line)\n-{\n-  int namlen;\n-  if( ! the_assoc->pathname && \n-      ! (the_assoc->pathname = (char*)malloc( PATH_MAX )) )\n-    CHILLEXCEPTION( file, line, SPACEFAIL, PATHNAME_ALLOC );\n-\n-  if( the_path[0] != DIRSEP )\n-    {\n-      if( !getcwd( the_assoc->pathname, PATH_MAX ) )\n-\t{\n-\t  the_assoc->syserrno = errno;\n-\t  CHILLEXCEPTION( file, line, ASSOCIATEFAIL, GETCWD_FAILS );\n-\t}\n-      namlen = strlen( the_assoc->pathname );\n-      the_assoc->pathname[namlen++] = DIRSEP;  \n-    }\n-  else\n-    namlen = 0;\n-\n-  strncpy( the_assoc->pathname + namlen, the_path, the_path_len );\n-  the_assoc->pathname[namlen+the_path_len] = '\\0';\n-}\n-\n-/*\n- * ASSOCIATE\n- */\n-/* Caution: returns an Association mode location (!) */\n-Association_Mode*\n-__associate( Association_Mode* the_assoc,\n-\t     char*             the_path,\n-\t     int               the_path_len,\n-\t     char*             the_mode,\n-\t     int               the_mode_len,\n-\t     char*             file,\n-\t     int               line )\n-{\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-\n-  if( TEST_FLAG(the_assoc, IO_ISASSOCIATED) )\n-    CHILLEXCEPTION( file, line, ASSOCIATEFAIL, IS_ASSOCIATED );\n-\n-  /* clear all flags */\n-  the_assoc->flags = 0;\n-\n-  if( ! the_path_len )\n-    CHILLEXCEPTION( file, line, ASSOCIATEFAIL, NO_PATH_NAME );\n-\n-  makeName( the_assoc, the_path, the_path_len, file, line );\n-  GetSetAttributes( the_assoc );\n-\n-  CLR_FLAG( the_assoc, IO_VARIABLE );\n-  if ( the_mode )\n-    {\n-      if( !strncmp( the_mode, \"VARIABLE\", 8 ) )\n-\t{\n-\t  SET_FLAG( the_assoc, IO_VARIABLE );\n-\t  CLR_FLAG( the_assoc, IO_INDEXABLE );\n-\t}\n-      else\n-\tif( strlen( the_mode ) )\n-\t  CHILLEXCEPTION( file, line, ASSOCIATEFAIL, INVALID_ASSOCIATION_MODE );\n-    }\n-\n-  SET_FLAG( the_assoc, IO_ISASSOCIATED );\n-  return the_assoc;\n-}\n-\n-/*\n- *  DISSOCIATE\n- */\n-void\n-__dissociate( Association_Mode* the_assoc, char* file, int line )\n-{\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-\n-  if( !TEST_FLAG( the_assoc, IO_ISASSOCIATED ) )\n-    CHILLEXCEPTION( file, line, NOTASSOCIATED, IS_NOT_ASSOCIATED );\n-\n-  if( the_assoc->access )\n-    __disconnect( the_assoc->access, file, line );\n-\n-  the_assoc->access = NULL;\n-  CLR_FLAG( the_assoc, IO_ISASSOCIATED );\n-\n-  /* free allocated memory */\n-  if (the_assoc->pathname)\n-    {\n-      free (the_assoc->pathname);\n-      the_assoc->pathname = 0;\n-    }\n-  if (the_assoc->bufptr)\n-    {\n-      free (the_assoc->bufptr);\n-      the_assoc->bufptr = 0;\n-    }\n-}\n-\n-/*\n- * CREATE\n- */\n-void __create( Association_Mode* the_assoc, char* file, int line )\n-{\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-\n-  if( !TEST_FLAG( the_assoc, IO_ISASSOCIATED ) )\n-    CHILLEXCEPTION( file, line, NOTASSOCIATED, IS_NOT_ASSOCIATED );\n-\n-  if( TEST_FLAG( the_assoc, IO_EXISTING ) )\n-    CHILLEXCEPTION( file, line, CREATEFAIL, FILE_EXISTING );\n-\n-  if( (the_assoc->handle = open( the_assoc->pathname, O_CREAT+O_TRUNC+O_WRONLY, 0666 ))\n-      == -1 )\n-      CHILLEXCEPTION( file, line, CREATEFAIL, CREATE_FAILS );\n-\n-  the_assoc->usage = ReadWrite;\n-  GetSetAttributes( the_assoc );\n-\n-  close( the_assoc->handle );\n-}\n-\n-/*\n- * MODIFY\n- */\n-void\n-__modify( Association_Mode* the_assoc,\n-\t  char*             the_path,\n-\t  int               the_path_len,\n-\t  char*             the_mode,\n-\t  int               the_mode_len,\n-\t  char*             file,\n-\t  int               line )\n-{\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-\n-  if( !TEST_FLAG( the_assoc, IO_ISASSOCIATED ) )\n-    CHILLEXCEPTION( file, line, NOTASSOCIATED, IS_NOT_ASSOCIATED );\n-\n-  if( the_path_len )\n-    {\n-      char* oldname;\n-\n-      if( ! (oldname = (char*)malloc( PATH_MAX )) )\n-\tCHILLEXCEPTION( file, line, SPACEFAIL, PATHNAME_ALLOC );\n-      strcpy( oldname, the_assoc->pathname );\n-\n-      makeName( the_assoc, the_path, the_path_len, file, line );\n-\n-      if( rename( oldname, the_assoc->pathname ) )\n-\t{\n-\t  free( oldname );\n-\t  CHILLEXCEPTION( file, line, MODIFYFAIL, RENAME_FAILS );\n-\t}\n-      free( oldname );\n-    }\n-  else\n-    {\n-      /* FIXME: other options? */\n-    }\n-}\n-\n-static\n-/*** char* DirMode[] = { \"rb\", \"r+b\", \"r+b\" }; ***/\n-int DirMode[] = { O_RDONLY, O_RDWR, O_RDWR };\n-\n-static\n-/*** char* SeqMode [] = { \"rb\", \"r+b\", \"r+b\" }; ***/\n-int SeqMode[] = { O_RDONLY, O_RDWR, O_RDWR };\n-\n-/*\n- * CONNECT\n- */\n-void\n-__connect( void*             the_transfer,\n-\t   Association_Mode* the_assoc,\n-\t   Usage_Mode        the_usage,\n-\t   Where_Mode        the_where,\n-\t   Boolean           with_index,\n-\t   signed long       the_index,\n-\t   char*             file,\n-\t   int               line )\n-{\n-  Access_Mode*  the_access;\n-  off_t         filepos;\n-  off_t         savepos;\n-  char          dummy;\n-  unsigned long nbytes;\n-  int           oflag;\n-\n-  if( !the_transfer )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ACCESS );\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-\n-  if( TEST_FLAG((Text_Mode*)the_transfer, IO_TEXTLOCATION ))\n-    {\n-      if( ! ((Text_Mode*)the_transfer)->access_sub )\n-\tCHILLEXCEPTION( file, line, EMPTY, NO_ACCESS_SUBLOCATION );\n-      the_access = ((Text_Mode*)the_transfer)->access_sub;\n-      SET_FLAG( the_access, IO_TEXTIO );\n-    }\n-  else\n-    {\n-      the_access = (Access_Mode*)the_transfer;\n-      CLR_FLAG( the_access, IO_TEXTIO );\n-    }\n-\n-  /* FIXME: This should be an (implementation-dependent) static check\n-     if( with_index && the_access->rectype > Fixed )\n-     CHILLEXCEPTION( file, line, CONNECTFAIL, IMPL_RESTRICTION );\n-     */\n-\n-  if( ! TEST_FLAG(the_assoc, IO_ISASSOCIATED) )\n-    CHILLEXCEPTION( file, line, NOTASSOCIATED, IS_NOT_ASSOCIATED );\n-\n-  if( ! TEST_FLAG( the_assoc, IO_EXISTING ) )\n-    CHILLEXCEPTION( file, line, CONNECTFAIL, NOT_EXISTING );\n-\n-  if( ! TEST_FLAG( the_assoc, IO_READABLE ) &&\n-      ( the_usage = ReadOnly || the_usage == ReadWrite ) )    \n-    CHILLEXCEPTION( file, line, CONNECTFAIL, NOT_READABLE );\n-\n-  if( ! TEST_FLAG( the_assoc, IO_WRITEABLE ) &&\n-      ( the_usage = WriteOnly || the_usage == ReadWrite ) )    \n-    CHILLEXCEPTION( file, line, CONNECTFAIL, NOT_WRITEABLE );\n-\n-  if( ! TEST_FLAG( the_assoc, IO_INDEXABLE ) \n-      && TEST_FLAG( the_access, IO_INDEXED ) )\n-    CHILLEXCEPTION( file, line, CONNECTFAIL, NOT_INDEXABLE );\n-\n-  if( ! TEST_FLAG( the_assoc, IO_SEQUENCIBLE ) \n-      && ! TEST_FLAG( the_access, IO_INDEXED ) )\n-    CHILLEXCEPTION( file, line, CONNECTFAIL, NOT_SEQUENCIBLE );\n-\n-  if( the_where == Same && the_assoc->access == NULL )\n-    CHILLEXCEPTION( file, line, CONNECTFAIL, NO_CURRENT_POS );\n-\n-  /* This dynamic condition is not checked for text connections. */\n-  if( ! TEST_FLAG( the_access, IO_TEXTIO ) )\n-    if( ! TEST_FLAG( the_assoc, IO_VARIABLE ) \n-\t&& the_access->rectype > Fixed \n-\t&& ( the_usage == WriteOnly || the_usage == ReadWrite ) )\n-      CHILLEXCEPTION( file, line, CONNECTFAIL, NOT_VARIABLE );\n- \n-  if( TEST_FLAG( the_assoc, IO_VARIABLE )\n-      && the_access->rectype == Fixed \n-      && ( the_usage == ReadOnly || the_usage == ReadWrite ) )\n-    CHILLEXCEPTION( file, line, CONNECTFAIL, NOT_FIXED );\n- \n-  if( ! TEST_FLAG( the_access, IO_INDEXED ) && the_usage == ReadWrite )\n-    CHILLEXCEPTION( file, line, CONNECTFAIL, NOT_INDEXED );\n-\n-  /* Access location may be connected to a different association. */\n-  if( the_access->association && the_access->association != the_assoc )\n-    __disconnect( the_access, file, line );\n-\n-  /* Is the association location already connected? */\n-  if( the_assoc->access )\n-    {\n-      /* save position just in case we need it for the_where == Same */\n-      if( (savepos = lseek( the_assoc->handle, 0L, SEEK_CUR )) == -1L )\n-\tCHILLEXCEPTION( file, line, CONNECTFAIL, LSEEK_FAILS );\n-\n-      /* text: read correction, flush buffer */\n-      if( the_assoc->bufptr ){\n-\tsavepos -= the_assoc->bufptr->len - the_assoc->bufptr->cur;\n-\tthe_assoc->bufptr->len = the_assoc->bufptr->cur = 0;\n-      }\n-\n-      /* implicit disconnect */\n-      __disconnect( the_assoc->access, file, line );\n-    }\n-\n-  the_assoc->usage = the_usage;\n-  CLR_FLAG( the_access, IO_OUTOFFILE );\n- \n-  if( TEST_FLAG( the_access, IO_INDEXED ) )\n-    {\n-      if( (the_assoc->handle = open( the_assoc->pathname, DirMode[the_usage] )) == -1 )\n-\tCHILLEXCEPTION( file, line, CONNECTFAIL, OPEN_FAILS );\n-\n-      /* Set base index. */\n-      switch( the_where )\n-\t{\n-\tcase First: \n-\t  filepos = 0;\n-\t  break;\n-\tcase Same: \n-\t  filepos = savepos;\n-\t  break;\n-\tcase Last: \n-\t  if( lseek( the_assoc->handle, 0L, SEEK_END ) == -1L )\n-\t    CHILLEXCEPTION( file, line, CONNECTFAIL, LSEEK_FAILS );\n-\t  filepos = lseek( the_assoc->handle, 0L, SEEK_CUR );\n-\t  break;\n-\t}\n-\n-      /* Set current index */\n-      if( with_index )\n-\t{\n-\t  if( the_index < the_access->lowindex\n-\t      || the_access->highindex < the_index )\n-\t    CHILLEXCEPTION( file, line, RANGEFAIL, BAD_INDEX );\n-\t  filepos += (the_index - the_access->lowindex) * the_access->reclength;\n-\t}\n-      if( lseek( the_assoc->handle, filepos, SEEK_SET ) == -1L )\n-\tCHILLEXCEPTION( file, line, CONNECTFAIL, LSEEK_FAILS );\n-      the_access->base = filepos;\n-    }\n-  else\n-    {\n-      /* for association to text for reading: allocate buffer */\n-      if( TEST_FLAG((Text_Mode*)the_transfer, IO_TEXTLOCATION ) &&\n-\t  the_usage == ReadOnly &&\n-\t  !the_assoc->bufptr )\n-\t{\n-\t  if( ! (the_assoc->bufptr = (readbuf_t*)malloc( sizeof(readbuf_t) )) )\n-\t    CHILLEXCEPTION( file, line, CONNECTFAIL, BUFFER_ALLOC ); \n-\t  memset (the_assoc->bufptr, 0, sizeof (readbuf_t));\n-\t}\n-      if( (the_assoc->handle = open( the_assoc->pathname, SeqMode[the_usage] )) == -1 )\n-\tCHILLEXCEPTION( file, line, CONNECTFAIL, OPEN_FAILS );\n-\n-      /* Set base index. */\n-      switch( the_where )\n-\t{\n-\tcase First: \n-\t  filepos = 0;\n-\t  break;\n-\tcase Same: \n-\t  filepos = savepos;\n-\t  break;\n-\tcase Last:\n-\t  if( lseek( the_assoc->handle, 0L, SEEK_END ) == -1L )\n-\t    CHILLEXCEPTION( file, line, CONNECTFAIL, LSEEK_FAILS );\n-\t  filepos = lseek( the_assoc->handle, 0L, SEEK_CUR );\n-\t  break;\n-\t}\n-\n-      /* file truncation for sequential, Write Only */\n-      /***************************** FIXME: cannot truncate at Same\n-\tif( the_usage == WriteOnly )\n-\t{\n-\tif( fseek( the_assoc->file_ptr, filepos, SEEK_SET ) == -1L )\n-        CHILLEXCEPTION( file, line, CONNECTFAIL, FSEEK_FAILS );\n-\tfclose( the_assoc->file_ptr );\n-\tif( !(the_assoc->file_ptr = fopen( the_assoc->pathname, \"ab\" )) )\n-        CHILLEXCEPTION( file, line, CONNECTFAIL, OPEN_FAILS );\n-\t}\n-\telse\n-\t***************************/\n-      if( (filepos = lseek( the_assoc->handle, filepos, SEEK_SET )) == -1L )\n-\tCHILLEXCEPTION( file, line, CONNECTFAIL, LSEEK_FAILS );\n-    }\n-\n-  the_access->association = the_assoc;\n-  the_assoc->access = the_access;\n-  /* for text: set carriage control default */\n-  if( TEST_FLAG((Text_Mode*)the_transfer, IO_TEXTLOCATION ) ){\n-    the_assoc->ctl_pre  = '\\0';\n-    the_assoc->ctl_post = '\\n';\n-  }\n-}\n-\n-void\n-__disconnect( void* the_transfer, char* file, int line )\n-{\n-  Access_Mode* the_access;\n-\n-  if( !the_transfer )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ACCESS );\n-\n-  if( TEST_FLAG((Text_Mode*)the_transfer, IO_TEXTLOCATION ))\n-    {\n-      the_access = ((Text_Mode*)the_transfer)->access_sub;\n-      CLR_FLAG( the_access, IO_TEXTIO );\n-    }\n-  else\n-    the_access = (Access_Mode*)the_transfer;\n-\n-  if( !the_access->association )\n-    CHILLEXCEPTION( file, line, NOTCONNECTED, IS_NOT_CONNECTED );\n-\n-  close( the_access->association->handle );\n-  /* FIXME: check result */\n-\n-  if( the_access->store_loc )\n-    free( the_access->store_loc );\n-  the_access->store_loc           = NULL;\n-  the_access->association->access = NULL;\n-  the_access->association         = NULL;\n-}"}, {"sha": "6870277d0b13069468a1e3aec4358379b78d6794", "filename": "libchill/bitstring.h", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fbitstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fbitstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fbitstring.h?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,37 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#ifndef _bitstring_h_\n-#define _bitstring_h_\n-\n-int __inpowerset( int i, char* string, int strlen, int dummy );\n-void __setbitpowerset (char *powerset, unsigned long bitlength,\n-\t\t       long minval, long bitno, char newval,\n-\t\t       char *filename, int lineno);\n-\t\t       \n-#endif"}, {"sha": "c3de8c921da4c6dbe7fa50e7ac30ac807c194017", "filename": "libchill/cardps.c", "status": "removed", "additions": 0, "deletions": 106, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fcardps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fcardps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fcardps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,106 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-\n-/*\n- * function __cardpowerset\n- *\n- * parameters:\n- *\tps\t\tpowerset\n- *\tbitlength\tlength of powerset\n- *\n- * returns:\n- *\tlong\t\tnumber of set bits\n- *\n- * exceptions:\n- *  none\n- *\n- * abstract:\n- *  returns the number of set bit's in a powerset\n- *\n- */\n-\n-/* bit_count[I] is number of '1' bits in I. */\n-static\n-const unsigned char __four_bit_count[16] = {\n-    0, 1, 1, 2,\n-    1, 2, 2, 3,\n-    1, 2, 2, 3,\n-    2, 3, 3, 4 };\n-\n-long\n-__cardpowerset (ps, bitlength)\n-     SET_WORD      *ps;\n-     unsigned long  bitlength;\n-{\n-  unsigned long\tcount = 0;\n-  if (bitlength <= SET_CHAR_SIZE)\n-    {\n-      register SET_CHAR\tc = *((SET_CHAR *)ps);\n-      /* count 4 bits at a time. */\n-      while (c > 0)\n-\t{\n-\t  count += __four_bit_count[c & 15];\n-\t  c >>= 4;\n-\t}\n-      return count;\n-    }\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    {\n-      register SET_SHORT c = *((SET_SHORT *)ps);\n-      /* count 4 bits at a time. */\n-      while (c > 0)\n-\t{\n-\t  count += __four_bit_count[c & 15];\n-\t  c >>= 4;\n-\t}\n-      return count;\n-    }\n-  else\n-    {\n-      register SET_WORD\t*p = ps;\n-      SET_WORD *endp = p + BITS_TO_WORDS(bitlength);\n-    \n-      while (p < endp)\n-\t{\n-\t  register SET_WORD c = *p++;\n-\t  /* count 4 bits at a time. */\n-\t  while (c > 0)\n-\t    {\n-\t      count += __four_bit_count[c & 15];\n-\t      c >>= 4;\n-\t    }\n-\t}\n-      return (count);\n-    }\n-}"}, {"sha": "544f0f94a5e227c28ccdf82df0ae2b5bc3158295", "filename": "libchill/cause.c", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fcause.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fcause.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fcause.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,54 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-/*\n- * function cause_exception\n- *\n- * parameters:\n- *  exname\t\texception name\n- *  file\t\tfile name\n- *  lineno\t\tline number\n- *   user_arg\t\tuser specified argument\n- *\n- * returns:\n- *  void\n- *\n- * abstract:\n- *  dummy for ChillLib but may be overwritten by the user\n- *\n- */\n-void\n-cause_exception (exname, file, lineno, user_arg)\n-     char *exname;\n-     char *file;\n-     int lineno;\n-     int user_arg;\n-{\n-}"}, {"sha": "992a05acbd65ea52cb1ea451d56628564a1da78b", "filename": "libchill/checkcycle.c", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fcheckcycle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fcheckcycle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fcheckcycle.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,73 +0,0 @@\n-/* Implement timing-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"rtltypes.h\"\n-#include \"rts.h\"\n-\n-EXCEPTION (cyclefail);\n-\n-/*\n- * function __check_cycle\n- *\n- * parameters:\n- *      t         pointer to initial time\n- *      dur       duration\n- *      filename  filename of call\n- *      lineno    linenumber of call\n- *\n- * returns:\n- *      void\n- *\n- * exceptions:\n- *      cyclefail\n- *\n- * abstract:\n- *      Function checks if cycle is possible (there is time left) and wait the\n- *      remaining time.\n- *\n- */\n-\n-extern int __remaintime (RtsTime *since, unsigned long dur, RtsTime *remain);\n-extern int __cause_ex1 (char *ex, char *file, int lineno);\n-    \n-void\n-__check_cycle (t, dur, fname, lineno)\n-    RtsTime       *t;\n-    unsigned long  dur;\n-    char          *fname;\n-    int            lineno;\n-{\n-  RtsTime remain;\n-  \n-  if (__remaintime (t, dur, &remain) != 0)\n-    /* no time left -- cause exception */\n-    __cause_ex1 (\"cyclefail\", fname, lineno);\n-  \n-  /* delay the process */\n-  __delay_this (wait_wait, &remain, fname, lineno);\n-}"}, {"sha": "3c25be2d3ebd28e68c14f7019446a5dfa7fb4fbe", "filename": "libchill/chillrt0.c", "status": "removed", "additions": 0, "deletions": 155, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fchillrt0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fchillrt0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fchillrt0.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,155 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <errno.h>\n-#include <string.h>\n-\n-#include \"rtltypes.h\"\n-#include \"iomodes.h\"\n-\f\n-/* type definitions */\n-typedef void (*init_ptr) ();\n-typedef void (*rts_init_ptr) (int *argc, char *argv []);\n-\n-typedef struct INIT_LIST\n-{\n-  init_ptr             code;\n-  struct INIT_LIST     *forward;\n-} InitList;\n-\n-InitList    *_ch_init_list = 0;\n-\n-/* force linker to get correct RTS functions */\n-extern rts_init_ptr\t__RTS_INIT__;\n-extern init_ptr\t\t__RTS_MAIN_LOOP__;\n-extern init_ptr\t\t__RTS_FETCH_NUMBERS__;\n-extern init_ptr\t\t__RTS_FETCH_NAMES__;\n-static init_ptr\t\t*rts_dummies[4] = \n-{\n-  &__RTS_INIT__,\n-  &__RTS_MAIN_LOOP__,\n-  &__RTS_FETCH_NUMBERS__,\n-  &__RTS_FETCH_NAMES__,\n-};\n-\n-/* chill argc and argv */\n-int\t\t\tchill_argc = 0;\n-TVaryingCharType\t**chill_argv = NULL;\n-\n-/* the program name for debugging purpose */\n-char \t\t\t*progname = 0;\n-\f\n-extern void *__xmalloc_ ();\n-\n-/*\n- * function __xrealloc_\n- *\n- * parameter:\n- *   ptr\t\tpointer to reallocate\n- *   size\t\tnew number of bytes\n- *\n- * returns:\n- *  void*\n- *\n- * abstract:\n- *  This is the general reallocation routine for libchill\n- *\n- */\n-\n-void *\n-__xrealloc_ (ptr, size)\n-void *ptr;\n-int size;\n-{\n-  void\t*tmp = realloc (ptr, size);\n-  \n-  if (!tmp)\n-    {\n-      fprintf (stderr, \"ChillLib: Out of heap space.\\n\");\n-      fflush (stderr);\n-      exit (ENOMEM);\n-    }\n-  return (tmp);\n-} /* __xrealloc_ */\n-\f\n-static void\n-setup_argc_argv (argc, argv)\n-int argc;\n-char *argv[];\n-{\n-  int\t\ti;\n-  \n-  chill_argv = __xmalloc_ ((argc + 1) * sizeof (TVaryingCharType *));\n-  for (i = 0; i < argc; i++)\n-    {\n-      chill_argv[i] = __xmalloc_ (sizeof (TVaryingCharType) + strlen (argv[i]) + 1);\n-      chill_argv[i]->len = strlen (argv[i]);\n-      strcpy (chill_argv[i]->body, argv[i]);\n-    }\n-  chill_argv[chill_argc = argc] = NULL;\n-  \n-  if ((progname = strrchr (argv[0], '/')) == 0)\n-    progname = argv[0];\n-  else\n-    progname++;\n-  \n-} /* setup_argc_argv */\n-\n-extern void __setexceptionStack ();\n-\n-/*--------- main entry for each CHILL - program ----------*/\n-int\n-main (argc, argv)\n-     int argc;\n-     char *argv [];\n-{\n-  /* call look up for tasking */\n-  (*__RTS_INIT__) (&argc, argv);\n-\n-  /* setup argc and argv */\n-  setup_argc_argv (argc, argv);\n-\n-  /* clear exception stack */\n-  __setexceptionStack (0);\n-\n-  /* now call code at module level */\n-  while (_ch_init_list)\n-    {\n-      if (_ch_init_list->code)\n-\t(*(_ch_init_list->code)) ();\n-      _ch_init_list = _ch_init_list->forward;\n-    }\n-\n-  /* if we have rts linked, something will be done, else just return */\n-  (*__RTS_MAIN_LOOP__) ();\n-  \n-  return (0);\n-  \n-} /* main */"}, {"sha": "d12c809625e689aeb2a44f4f1f6639b4b989c1c4", "filename": "libchill/chillstdio.c", "status": "removed", "additions": 0, "deletions": 218, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fchillstdio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fchillstdio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fchillstdio.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,218 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <errno.h>\n-#include <string.h>\n-\n-#include \"iomodes.h\"\n-\n-/* predefined associations, accesses, and text for stdin, stdout, stderr */\n-/* stdin */\n-#define STDIO_TEXT_LENGTH 1024\n-#define STDIN_TEXT_LENGTH STDIO_TEXT_LENGTH\n-\n-static Access_Mode stdin_access;\n-\n-#ifndef STDIN_FILENO\n-#define STDIN_FILENO 0\n-#endif\n-\n-static\n-Association_Mode stdin_association =\n-{\n-  IO_EXISTING | IO_READABLE | IO_SEQUENCIBLE | IO_ISASSOCIATED,\n-  NULL,\n-  &stdin_access,\n-  STDIN_FILENO,\n-  NULL,\n-  0,\n-  ReadOnly\n-};\n-\n-static Access_Mode stdin_access = \n-{\n-  IO_TEXTIO,\n-  STDIN_TEXT_LENGTH + 2,\n-  0,\n-  0,\n-  &stdin_association,\n-  0,\n-  NULL,\n-  VaryingChars\n-};\n-\n-static\n-VARYING_STRING(STDIN_TEXT_LENGTH) stdin_text_record;\n-\n-Text_Mode chill_stdin =\n-{\n-  IO_TEXTLOCATION,\n-  (VarString *)&stdin_text_record,\n-  &stdin_access,\n-  0\n-};\n-\n-/* stdout */\n-#define STDOUT_TEXT_LENGTH STDIO_TEXT_LENGTH\n-#ifndef STDOUT_FILENO\n-#define STDOUT_FILENO 1\n-#endif\n-\n-static Access_Mode stdout_access;\n-\n-static\n-Association_Mode stdout_association =\n-{\n-  IO_EXISTING | IO_WRITEABLE | IO_SEQUENCIBLE | IO_ISASSOCIATED,\n-  NULL,\n-  &stdout_access,\n-  STDOUT_FILENO,\n-  NULL,\n-  0,\n-  WriteOnly\n-};\n-\n-static Access_Mode stdout_access = \n-{\n-  IO_TEXTIO,\n-  STDOUT_TEXT_LENGTH + 2,\n-  0,\n-  0,\n-  &stdout_association,\n-  0,\n-  NULL,\n-  VaryingChars\n-};\n-\n-static\n-VARYING_STRING(STDOUT_TEXT_LENGTH) stdout_text_record;\n-\n-Text_Mode chill_stdout =\n-{\n-  IO_TEXTLOCATION,\n-  (VarString *)&stdout_text_record,\n-  &stdout_access,\n-  0\n-};\n-\n-/* stderr */\n-#define STDERR_TEXT_LENGTH STDIO_TEXT_LENGTH\n-#ifndef STDERR_FILENO\n-#define STDERR_FILENO 2\n-#endif\n-\n-static Access_Mode stderr_access;\n-\n-static\n-Association_Mode stderr_association =\n-{\n-  IO_EXISTING | IO_WRITEABLE | IO_SEQUENCIBLE | IO_ISASSOCIATED,\n-  NULL,\n-  &stderr_access,\n-  STDERR_FILENO,\n-  NULL,\n-  0,\n-  WriteOnly\n-};\n-\n-static Access_Mode stderr_access = \n-{\n-  IO_TEXTIO,\n-  STDERR_TEXT_LENGTH + 2,\n-  0,\n-  0,\n-  &stderr_association,\n-  0,\n-  NULL,\n-  VaryingChars\n-};\n-\n-static\n-VARYING_STRING(STDIN_TEXT_LENGTH) stderr_text_record;\n-\n-Text_Mode chill_stderr =\n-{\n-  IO_TEXTLOCATION,\n-  (VarString *)&stderr_text_record,\n-  &stderr_access,\n-  0\n-};\n-\n-/*\n- * function __xmalloc_\n- *\n- * parameter:\n- *   size\t\tnumber of bytes to allocate\n- *\n- * returns:\n- *  void*\n- *\n- * abstract:\n- *  This is the general allocation routine for libchill\n- *\n- */\n-\n-void *\n-__xmalloc_ (size)\n-int size;\n-{\n-  void\t*tmp = malloc (size);\n-  \n-  if (!tmp)\n-    {\n-      fprintf (stderr, \"ChillLib: Out of heap space.\\n\");\n-      fflush (stderr);\n-      exit (ENOMEM);\n-    }\n-  return (tmp);\n-} /* __xmalloc_ */\n-\n-static char *\n-newstring (char *str)\n-{\n-  char *tmp = __xmalloc_ (strlen (str) + 1);\n-  strcpy (tmp, str);\n-  return tmp;\n-}\n-\n-static void setup_stdinout (void) __attribute__((constructor));\n-\n-static void\n-setup_stdinout ()\n-{\n-  /* allocate the names */\n-  stdin_association.pathname = newstring (\"stdin\");\n-  stdout_association.pathname = newstring (\"stdout\");\n-  stderr_association.pathname = newstring (\"stderr\");\n-\n-  /* stdin needs a readbuffer */\n-  stdin_association.bufptr = __xmalloc_ (sizeof (readbuf_t));\n-  memset (stdin_association.bufptr, 0, sizeof (readbuf_t));\n-}"}, {"sha": "f350f2b5363abad64b455dba47497b894ed76792", "filename": "libchill/concatps.c", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fconcatps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fconcatps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fconcatps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,101 +0,0 @@\n-/* Implement powerset-related runtime actions for CHILL.\n-   Copyright (C) 1992, 93, 1994 Free Software Foundation, Inc.\n-   Author: Bill Cox\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include \"powerset.h\"\n-\n-extern void cause_exception (char *exname, char *file, int lineno);\n-\n-/*\n- * function __concatps\n- *\n- * parameters:\n- *     OUT      - pointer to output PS\n- *     LEFT     - pointer to left PS\n- *     LEFTLEN  - length of left PS in bits\n- *     RIGHT    - pointer to right PS\n- *     RIGHTLEN - length of right PS in bits\n- *\n- * returns:\n- *     void\n- *\n- * exceptions:\n- *     none\n- *\n- * abstract:\n- *     concatenates two powersets into the output powerset.\n- *\n- */\n-\n-extern void\n-__pscpy (SET_WORD      *dps,\n-\t unsigned long  dbl,\n-\t unsigned long  doffset,\n-\t SET_WORD      *sps,\n-\t unsigned long  sbl,\n-\t unsigned long  start,\n-\t unsigned long  length);\n-\n-void\n-__concatps (out, left, leftlen, right, rightlen)\n-     SET_WORD      *out;\n-     SET_WORD      *left;\n-     unsigned long  leftlen;\n-     SET_WORD      *right;\n-     unsigned long  rightlen;\n-{\n-  /* allocated sizes for each set involved */\n-  unsigned long outall, leftall, rightall;\n-\n-  if (!out)\n-    {\n-      /* FIXME: cause an exception */\n-    }\n-  else if (leftlen == 0 || !left)\n-    {\n-      if (rightlen == 0 || !right)\n-\treturn;               /* no work to do */\n-      __pscpy (out, rightlen, (unsigned long)0,\n-\t       right, rightlen, (unsigned long)0, rightlen);\n-    }\n-  else if (rightlen == 0 || !right)\n-    {\n-      if (leftlen == 0 || !left)\n-\treturn;               /* no work to do */\n-      __pscpy (out, leftlen, (unsigned long)0,\n-\t       left, leftlen, (unsigned long)0, leftlen);\n-    }\n-  /* copy the left powerset into bits 0..leftlen - 1 */\n-  __pscpy (out, leftlen + rightlen, (unsigned long)0,\n-\t   left, leftlen, (unsigned long)0, leftlen);\n-\n-  /* copy the right powerset into bits leftlen..leftlen+rightlen-1 */\n-  __pscpy (out, leftlen + rightlen, leftlen,\n-\t   right, rightlen, (unsigned long)0, rightlen);\n-}"}, {"sha": "866d3307ef570b03a946ce8e713fda290c8a1a36", "filename": "libchill/concatstr.c", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fconcatstr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fconcatstr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fconcatstr.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,80 +0,0 @@\n-/* Implement string-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993,2000 Free Software Foundation, Inc.\n-   Author: Bill Cox\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <stdlib.h>\n-#include <string.h>\n-\n-#define MIN(a, b)  ((a) < (b) ? (a) : (b))\n-\n-extern void cause_exception (char *exname, char *file, int lineno);\n-\n-/*\n- * function __concatstring \n- *\n- * parameters:\n- *     OUT  - pointer to output string\n- *     S1   - pointer to left string\n- *     LEN1 - length of left string\n- *     S2   - pointer to right string\n- *     LEN2 - length of right string\n- *\n- * returns:\n- *     pointer to OUT string\n- *\n- * exceptions:\n- *     none\n- *\n- * abstract:\n- *     concatenates two character strings into the output string\n- *\n- */\n-\n-char *\n-__concatstring (out, s1, len1, s2, len2)\n-     char *out, *s1;\n-     int   len1;\n-     char *s2;\n-     int   len2;\n-{\n-  if (out)\n-    {\n-      if (s2 /* Check for overlap between s2 and out. */\n-\t  && ((s2 >= out && s2 < (out + len1 + len2))\n-\t      || (s2 + len2 > out && s2 <= out + len1)))\n-\t{\n-\t  char *tmp = alloca (len2);\n-\t  memcpy (tmp, s2, len2);\n-\t  s2 = tmp;\n-\t}\n-      if (s1)\n-\tmemmove (out, s1, len1);\n-      if (s2)\n-\tmemcpy (&out[len1], s2, len2);\n-    }\n-  return out;\n-}"}, {"sha": "cd08ba1f776139f3e0965156c3f3ded05b3a9d22", "filename": "libchill/configure.in", "status": "removed", "additions": 0, "deletions": 162, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fconfigure.in?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,162 +0,0 @@\n-# Process this file with autoconf to produce a configure script.\n-#   Copyright (C) 1995, 1997, 1998, 1999 Free Software Foundation, Inc.\n-#   Contributed by Dave Love (d.love@dl.ac.uk).\n-#\n-#This file is part of GNU CC.\n-#\n-#GNU CHILL is free software; you can redistribute it and/or modify\n-#it under the terms of the GNU General Public License as published by\n-#the Free Software Foundation; either version 2, or (at your option)\n-#any later version.\n-#\n-#GNU CHILL is distributed in the hope that it will be useful,\n-#but WITHOUT ANY WARRANTY; without even the implied warranty of\n-#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-#GNU General Public License for more details.\n-#\n-#You should have received a copy of the GNU General Public License\n-#along with GNU CHILL; see the file COPYING.  If not, write to\n-#the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-#02111-1307, USA.\n-\n-AC_PREREQ(2.13)\n-AC_INIT(chillrt0.c)\n-\n-if test \"${srcdir}\" = \".\" ; then\n-  if test \"${with_target_subdir}\" != \".\" ; then\n-    topsrcdir=${with_multisrctop}../..\n-  else\n-    topsrcdir=${with_multisrctop}..\n-  fi\n-else\n-  topsrcdir=${srcdir}/..\n-fi\n-dnl This is needed for a multilibbed build in the source tree so\n-dnl that install-sh and config.sub get found.\n-AC_CONFIG_AUX_DIR($topsrcdir)\n-\n-# If the language specific compiler does not exist, but the \"gcc\" directory \n-# does, we do not build anything. Note, $r is set by the top-level Makefile.\n-# Note that when we look for the compiler, we search both with and without\n-# extension to handle cross and canadian cross builds. \n-compiler_name=cc1chill\n-rm -f skip-this-dir\n-AC_MSG_CHECKING(if compiler $compiler_name has been built)\n-AC_CACHE_VAL(chill_cv_compiler_exists,\n-[chill_cv_compiler_exists=yes\n-if test -n \"$r\"; then\n-  if test -d \"$r\"/gcc; then\n-    if test -f \"$r\"/gcc/$compiler_name \\\n-       || test -f \"$r\"/gcc/$compiler_name.exe; then\n-      true\n-    else\n-      chill_cv_compiler_exists=no\n-      echo \"rm -f config.cache config.log multilib.out\" > skip-this-dir\n-    fi\n-  fi\n-fi\n-])\n-AC_MSG_RESULT($chill_cv_compiler_exists)\n-if test x$chill_cv_compiler_exists = xno\n-then\n-  rm -f Makefile conftest* confdefs* core\n-  exit 0\n-fi\n-\n-dnl Checks for programs.\n-# For chill we'll set CC to point at the built gcc, but this will get it into\n-# the makefiles\n-AC_PROG_CC\n-\n-test \"$AR\" || AR=ar\n-AC_SUBST(AR)\n-if test \"$RANLIB\"; then :\n-  AC_SUBST(RANLIB)\n-else\n-  AC_PROG_RANLIB\n-fi\n-AC_PROG_MAKE_SET\n-\n-dnl Checks for libraries.\n-\n-dnl Checks for header files.\n-# Sanity check for the cross-compilation case:\n-AC_CHECK_HEADER(stdio.h,:,\n-  [AC_MSG_ERROR([Can't find stdio.h.\n-You must have a usable C system for the target already installed, at least\n-including headers and, preferably, the library, before you can configure\n-the Chill runtime system.  If necessary, install gcc now with \\`LANGUAGES=c',\n-then the target library, then build with \\`LANGUAGES=chill'.])])\n-\n-AC_HEADER_STDC\n-\n-AC_MSG_CHECKING(for posix)\n-AC_CACHE_VAL(chill_cv_header_posix,\n-  AC_EGREP_CPP(yes,\n-  [#include <sys/types.h>\n-#include <unistd.h>\n-#ifdef _POSIX_VERSION\n-  yes\n-#endif\n-], \n-  chill_cv_header_posix=yes,\n-  chill_cv_header_posix=no))\n-AC_MSG_RESULT($chill_cv_header_posix)\n-\n-# We can rely on the GNU library being posix-ish.  I guess checking the \n-# header isn't actually like checking the functions, though...\n-AC_MSG_CHECKING(for GNU library)\n-AC_CACHE_VAL(chill_cv_lib_gnu,\n-  AC_EGREP_CPP(yes,\n-    [#include <stdio.h>\n-#ifdef __GNU_LIBRARY__\n-  yes\n-#endif\n-], \n-  chill_cv_lib_gnu=yes, chill_cv_lib_gnu=no))\n-AC_MSG_RESULT($chill_cv_lib_gnu)\n-\n-dnl Checks for library functions.\n-AC_TYPE_SIGNAL\n-# we'll get atexit by default\n-if test $ac_cv_header_stdc != yes; then\n-AC_CHECK_FUNC(atexit,\n-  AC_DEFINE(onexit,atexit),dnl just in case\n-  [AC_DEFINE(NO_ONEXIT)\n-  AC_CHECK_FUNC(onexit,,\n-    [AC_CHECK_FUNC(on_exit,\n-     AC_DEFINE(onexit,on_exit),)])])\n-else true\n-fi\n-AC_CHECK_FUNC(memmove,\n-  MEMMOVE_O='',\n-  MEMMOVE_O=memmove.o)\n-AC_SUBST(MEMMOVE_O)\n-\n-# We need multilib support, but only if configuring for the target.\n-AC_OUTPUT(Makefile,\n-[test -z \"$CONFIG_HEADERS\" || echo timestamp > stamp-h\n-if test -n \"$CONFIG_FILES\"; then\n-  if test -n \"${with_target_subdir}\"; then\n-    # FIXME: We shouldn't need to set ac_file\n-    ac_file=Makefile\n-    . ${topsrcdir}/config-ml.in\n-  fi\n-fi],\n-srcdir=${srcdir}\n-host=${host}\n-target=${target}\n-with_target_subdir=${with_target_subdir}\n-with_multisubdir=${with_multisubdir}\n-ac_configure_args=\"--enable-multilib ${ac_configure_args}\"\n-CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n-topsrcdir=${topsrcdir}\n-)\n-\n-\n-\n-dnl Local Variables:\n-dnl comment-start: \"dnl \"\n-dnl comment-end: \"\"\n-dnl comment-start-skip: \"\\\\bdnl\\\\b\\\\s *\"\n-dnl End:"}, {"sha": "f2048f17ae777f80a7f91eb174cb067179ebee7b", "filename": "libchill/continue.c", "status": "removed", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fcontinue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fcontinue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fcontinue.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,91 +0,0 @@\n-/* Implement tasking-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"rtltypes.h\"\n-#include \"rts.h\"\n-\n-/*\n- * function __continue\n- *\n- * parameters:\n- *     evaddr     pointer to Eventlocation\n- *     filename   source file name where function gets called\n- *     lineno     linenumber in source file\n- *\n- * returns:\n- *     void\n- *\n- * exceptions:\n- *     none\n- *\n- * abstract:\n- *     implement the CHILL CONTINUE action.\n- */\n-\n-void\n-__continue (evaddr, filename, lineno)\n-     Event_Queue   **evaddr;\n-     char           *filename;\n-     int             lineno;\n-{\n-  Event_Queue  *ev = *evaddr;\n-  Event_Queue  *wrk;\n-\n-  if (ev == 0)\n-    /* nothing to do */\n-    return;\n-\n-  /* search for 1st one is not already continued */\n-  while (ev && ev->is_continued)\n-    ev = ev->forward;\n-  if (!ev)\n-    /* all have been continued in that queue, do nothing */\n-    return;\n-\n-  wrk = ev->startlist;\n-  while (wrk)\n-    {\n-      Event_Queue     *tmp = (Event_Queue *)wrk->listhead;\n-      \n-      while (tmp->forward != wrk)\n-\ttmp = tmp->forward;\n-      tmp->forward = wrk->forward;\n-      wrk = wrk->chain;\n-    }\n-\n-  /* so far so good, continue this one */\n-  ev->is_continued = 1;\n-  ev->who_continued = THIS;\n-\n-  /* tell the runtime system to activate the process */\n-  __continue_that (ev->this, ev->priority, filename, lineno);\n-}\n-\n-/* force function print_event to be linked */\n-extern void __print_event ();\n-static EntryPoint pev = __print_event;"}, {"sha": "5a1d338016880d3e0f324453cba1cb5fa341bde0", "filename": "libchill/convdurrtstime.c", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fconvdurrtstime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fconvdurrtstime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fconvdurrtstime.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,60 +0,0 @@\n-/* Implement timing-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"rts.h\"\n-\n-/*\n- * function __convert_duration_rtstime\n- *\n- * parameters:\n- *      dur     the duration value\n- *      t       pointer to the duration value converted to RtsTime\n- *\n- * returns:\n- *      void\n- *\n- * exceptions:\n- *      none\n- *\n- * abstract:\n- *      converts a duration value (unsigned long in millisecs) to RtsTime\n- *      format.\n- *\n- */\n-\n-void\n-__convert_duration_rtstime (dur, t)\n-     unsigned long  dur;\n-     RtsTime       *t;\n-{\n-  unsigned long tmp;\n-    \n-  t->secs = dur / 1000;\n-  tmp = dur - (t->secs * 1000);\n-  t->nanosecs = tmp * 1000000;\n-}"}, {"sha": "6b7a4a193564c828b10fd250434e6da3d2ff2581", "filename": "libchill/copyps.c", "status": "removed", "additions": 0, "deletions": 118, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fcopyps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fcopyps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fcopyps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,118 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __powerset_copy\n- *    This is more general than __psslice, since it\n- *    can be told where in the destination powerset (DOFFSET\n- *    parameter) to start storing the slice.\n- *\n- * parameters:\n- *      dps             dest powerset\n- *      dbl             destination bit length\n- *      doffset         offset bit number (zero origin)\n- *\tsps\t\tsourcepowerset\n- *\tsbl     \tsource powerset length in bits\n- *      start           starting bit number\n- *      end             ending bit number\n- *\n- * exceptions:\n- *  none\n- *\n- * abstract:\n- *  Extract into a powerset a slice of another powerset.\n- *\n- */\n-void\n-__pscpy (dps, dbl, doffset, sps, sbl, start, length)\n-     SET_WORD      *dps;\n-     unsigned long  dbl;\n-     unsigned long  doffset;\n-     const SET_WORD*sps;\n-     unsigned long  sbl;\n-     unsigned long  start;\n-     unsigned long  length;\n-{\n-  unsigned long end = start + length - 1;\n-  unsigned long src, dst;\n-\n-  /* assert end >= start;\n-     assert end - start + 1 <= dbl;\n-     assert \"the sets don't overlap in memory\" */\n-\n-  /* assert doffset >= 0 and < dbl */\n-\n-  for (src = start, dst = doffset; src <= end; src++, dst++)\n-    {\n-      char tmp;\n-\n-      if (sbl <= SET_CHAR_SIZE)                /* fetch a bit */\n-\ttmp = GET_BIT_IN_CHAR (*((SET_CHAR *)sps), src);\n-      else if (sbl <= SET_SHORT_SIZE)\n-\ttmp = GET_BIT_IN_SHORT (*((SET_SHORT *)sps), src);\n-      else\n-\ttmp = GET_BIT_IN_WORD (sps[src / SET_WORD_SIZE], src % SET_WORD_SIZE);\n-\n-      if (tmp & 1)\n-\t{\n-\t  if (dbl <= SET_CHAR_SIZE)            /* store a 1-bit */\n-\t    SET_BIT_IN_CHAR (*((SET_CHAR *)dps), dst);\n-\t  else if (dbl <= SET_SHORT_SIZE)\n-\t    SET_BIT_IN_SHORT (*((SET_SHORT *)dps), dst);\n-\t  else\n-\t    SET_BIT_IN_WORD (dps[dst / SET_WORD_SIZE], dst % SET_WORD_SIZE);\n-\t}\n-      else\n-\t{\n-\t  if (dbl <= SET_CHAR_SIZE)            /* store a 0-bit */\n-\t    CLEAR_BIT_IN_CHAR (*((SET_CHAR *)dps), dst);\n-\t  else if (dbl <= SET_SHORT_SIZE)\n-\t    CLEAR_BIT_IN_SHORT (*((SET_SHORT *)dps), dst);\n-\t  else\n-\t    CLEAR_BIT_IN_WORD (dps[dst / SET_WORD_SIZE], dst % SET_WORD_SIZE);\n-\t}\n-    }\n-  if (dbl <= SET_CHAR_SIZE)         /* clear unused bits in output bitstring */\n-    {\n-      MASK_UNUSED_CHAR_BITS ((SET_CHAR *)dps, dbl);\n-    }\n-  else if (dbl <= SET_SHORT_SIZE)\n-    {\n-      MASK_UNUSED_SHORT_BITS ((SET_SHORT *)dps, dbl);\n-    }\n-  else\n-    {\n-      MASK_UNUSED_WORD_BITS ((SET_WORD *)(dps + (dbl/SET_WORD_SIZE)), \n-\t\t\t     dbl % SET_WORD_SIZE);\n-    }\n-}"}, {"sha": "b12d272d10a77cfc74f6b69973b4d4bdfcd82bb8", "filename": "libchill/delaycase.c", "status": "removed", "additions": 0, "deletions": 229, "changes": 229, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fdelaycase.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fdelaycase.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fdelaycase.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,229 +0,0 @@\n-/* Implement tasking-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <string.h>\n-#include \"rtltypes.h\"\n-#include \"rts.h\"\n-\n-extern void __cause_ex1 (char *ex, char *file, int lineno);\n-\n-EXCEPTION (delayfail);\n-#define CAUSE_DELAYFAIL     __cause_ex1 (\"delayfail\", filename, lineno)\n-\n-EXCEPTION (notyetimplemented);\n-#define CAUSE_NOTIMPLEMENTED   __cause_ex1 (\"notyetimplemeyed\", filename, lineno)\n-\n-/*\n- * function __delay_event\n- *\n- * parameters:\n- *     ev_got      pointer to location where to write the event got.\n- *     nevents     number of events in list\n- *     evptrs      array of event descriptors\n- *     priority    specified priority\n- *     insloc      pointer to resulting instance location\n- *     to          timeout value\n- *     filename    filename of caller\n- *     lineno      linenumber of caller\n- *\n- * returns:\n- *     int         0 .. success\n- *                 1 .. timed out\n- *\n- * exceptions:\n- *     delayfail\n- *\n- * abstract:\n- *     implement the CHILL DELAY and DELAY CASE actions.\n- *\n- */\n-\n-int\n-__delay_event (ev_got, nevents, evptrs, priority, to, insloc, filename, lineno)\n-     void         **ev_got;\n-     int            nevents;\n-     Event_Descr   *evptrs;\n-     int            priority;\n-     void          *to;\n-     INSTANCE      *insloc;\n-     char          *filename;\n-     int            lineno;\n-{\n-  int             i, already_done = 0;\n-  Event_Queue    *start_list = 0;\n-  Event_Queue   **retval = 0;\n-  Event_Queue    *wrk;\n-  int\t\t  timed_out = 0;\n-  \n-  /* check if all specified event queues have enough space left\n-     to perform the delay */\n-  for (i = 0; i < nevents; i++)\n-    {\n-      Event_Queue  *e;\n-      unsigned long cnt = 0;\n-      int j, have_done = 0;\n-\n-      if (evptrs[i].maxqueuelength == 0)\n-\tCAUSE_DELAYFAIL;\n-      else if (evptrs[i].maxqueuelength == (unsigned long)-1L)\n-\t/* infinite length */\n-\tcontinue;\n-\n-      /* check if we already have processed this one, that means, this\n-         event is mentioned more than once */\n-      for (j = 0; j < i; j++)\n-        {\n-          if (evptrs[i].ev == evptrs[j].ev)\n-\t    {\n-              have_done = 1;\n-              break;\n-\t    }\n-        }\n-      if (have_done)\n-\tcontinue;\n-      \n-      memcpy (&e, evptrs[i].ev, sizeof (Event_Queue *));\n-      while (e)\n-\t{\n-\t  cnt++;\n-\t  e = e->forward;\n-\t}\n-      if (cnt >= evptrs[i].maxqueuelength)\n-\tCAUSE_DELAYFAIL;\n-    }\n-\n-  for (i = 0; i < nevents; i++)\n-    {\n-      /* queue that stuff on each event */\n-      Event_Queue      *wrk;\n-      Event_Queue      *ev;\n-      Event_Queue      *prev_queue_entry = 0;\n-      Event_Queue      *prev_list_entry;\n-      int               j, have_done = 0;\n-      \n-      /* check for this event already processed */\n-      for (j = 0; j < i; j++)\n-\t{\n-          if (evptrs[i].ev == evptrs[j].ev)\n-\t    {\n-              have_done = 1;\n-              break;\n-\t    }\n-\t}\n-      if (have_done)\n-\tcontinue;\n-\n-      memcpy (&ev, &evptrs[i].ev, sizeof (Event_Queue *));\n-      MALLOC (wrk, sizeof (Event_Queue));\n-      memset (wrk, 0, sizeof (Event_Queue));\n-\n-      wrk->priority = priority;\n-      wrk->this = THIS;\n-      wrk->listhead = evptrs[i].ev;\n-\n-      /* search for the place to queue this entry in */\n-      while (ev->forward != 0 && ev->priority >= priority)\n-\t{\n-\t  prev_queue_entry = ev;\n-\t  ev = ev->forward;\n-\t}\n-\n-      /* ready to put entry into queue */\n-      if (ev->forward == 0 || prev_queue_entry == 0)\n-\t{\n-\t  /* beginning or end of the list */\n-\t  wrk->forward = ev->forward;\n-\t  ev->forward = wrk;\n-\t}\n-      else\n-\t{\n-\t  /* this is somewhere in the middle */\n-\t  wrk->forward = prev_queue_entry->forward;\n-\t  prev_queue_entry->forward = wrk;\n-\t}\n-\n-      /* queue it into list */\n-      wrk->startlist = start_list;\n-      if (! start_list)\n-\t{\n-\t  /* we are the first in the list */\n-\t  start_list = wrk;\n-\t  prev_list_entry = wrk;\n-\t  wrk->startlist = start_list;\n-\t}\n-      else\n-\t{\n-\t  prev_list_entry->chain = wrk;\n-\t  prev_list_entry = wrk;\n-\t}\n-    }\n-\n-  /* tell runtime system to delay that process */\n-  timed_out = __delay_this (wait_event_delay, to, filename, lineno);\n-  if (timed_out)\n-    {\n-      /* we have to remove the entries from the queue's */\n-      wrk = start_list;\n-      while (wrk)\n-        {\n-\t  Event_Queue *tmp = (Event_Queue *)wrk->listhead;\n-\t  \n-\t  while (tmp->forward != wrk)\n-\t    tmp = tmp->forward;\n-\t  tmp->forward = wrk->forward;\n-\t  wrk = wrk->chain;\n-        }\n-    }\n-  \n-  wrk = start_list;\n-  while (wrk)\n-    {\n-      Event_Queue  *tmp;\n-\n-      if (wrk->is_continued && ! already_done)\n-\t{\n-\t  already_done = 1;\n-\t  retval = wrk->listhead;\n-\t  if (insloc && !timed_out)\n-\t    {\n-\t      insloc->ptype = wrk->who_continued.ptype;\n-\t      insloc->pcopy = wrk->who_continued.pcopy;\n-\t    }\n-\t}\n-      tmp = wrk->chain;\n-      FREE (wrk);\n-      wrk = tmp;\n-    }\n-  if (!timed_out && ev_got)\n-    *ev_got = (void *)retval;\n-  return timed_out;\n-}\n-\n-/* force function print_event to be linked */\n-extern void __print_event ();\n-static EntryPoint pev = __print_event;"}, {"sha": "eca04dd4e8f9c468b47525a7110f2e923250d2bf", "filename": "libchill/delete.c", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fdelete.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fdelete.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fdelete.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,50 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-   \n-   This file is part of GNU CC.\n-   \n-   GNU CC is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2, or (at your option)\n-   any later version.\n-   \n-   GNU CC is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-   \n-   You should have received a copy of the GNU General Public License\n-   along with GNU CC; see the file COPYING.  If not, write to\n-   the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <unistd.h>\n-\n-#include \"fileio.h\"\n-\n-void __delete( Association_Mode* the_assoc, char* file, int line )\n-{\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-\n-  if( !TEST_FLAG( the_assoc, IO_ISASSOCIATED ) )\n-    CHILLEXCEPTION( file, line, NOTASSOCIATED, IS_NOT_ASSOCIATED );\n-\n-  /* forced dissociate */\n-  if( the_assoc->access )\n-    __disconnect( the_assoc->access, file, line );\n-\n-  /* delete */\n-  if( unlink( the_assoc->pathname ) )\n-    CHILLEXCEPTION( file, line, DELETEFAIL, DELETE_FAILS );\n-\n-  CLR_FLAG( the_assoc, IO_EXISTING );\n-}"}, {"sha": "67027abd847868e451a9c266ca220e8bc5324ab1", "filename": "libchill/diffps.c", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fdiffps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fdiffps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fdiffps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,81 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __diffpowerset\n- *\n- * parameters:\n- *     out\t\tresult of __diffpowerset\n- *\tleft\t\tpowerset\n- *\tright\t\tpowerset\n- *\tbitlength\tlength of powerset\n- *\n- * returns:\n- *\tvoid\n- *\n- * exceptions:\n- *  none\n- *\n- * abstract:\n- *  makes a difference of 2 powersets (out = left - right)\n- *\n- */\n-void\n-__diffpowerset (out, left, right, bitlength)\n-     SET_WORD      *out;\n-     SET_WORD      *left;\n-     SET_WORD      *right;\n-     unsigned long  bitlength;\n-{\n-  if (bitlength <= SET_CHAR_SIZE)\n-    {\n-      *((SET_CHAR *)out) = *((SET_CHAR *)left) & ~\n-                           *((SET_CHAR *)right);\n-      MASK_UNUSED_CHAR_BITS ((SET_CHAR *)out, bitlength);\n-    }\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    {\n-      *((SET_SHORT *)out) = *((SET_SHORT *)left) & ~\n-                            *((SET_SHORT *)right);\n-      MASK_UNUSED_SHORT_BITS ((SET_SHORT *)out, bitlength);\n-    }\n-  else\n-    {\n-      unsigned long len = BITS_TO_WORDS(bitlength);\n-      register unsigned long i;\n-    \n-      for (i = 0; i < len; i++)\n-\tout[i] = left[i] & ~right[i];\n-      MASK_UNUSED_WORD_BITS ((out + len - 1), bitlength % SET_WORD_SIZE);\n-    }\n-}"}, {"sha": "6c881bb74edf66f5d9e1c1d97438d14f172bf24e", "filename": "libchill/eoln.c", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Feoln.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Feoln.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Feoln.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,38 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-Boolean\n-__eoln( Text_Mode* the_text, char* file, int line )\n-{\n-  if( !the_text )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_TEXT );\n-\n-  return the_text->actual_index == the_text->access_sub->reclength - 2;\n-}"}, {"sha": "e0e00db3cc2b77eca3493b33a7a9e5059e8d22b6", "filename": "libchill/eqps.c", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Feqps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Feqps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Feqps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,74 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __eqpowerset\n- *\n- * parameters:\n- *\tleft\t\tleft powerset\n- *\tright\t\tright powerset\n- *\tbitlength\tlength of powerset in bits\n- *\n- * returns:\n- *    1 if powersets are equal, bit for bit\n- *\n- * exceptions:\n- *  none\n- *\n- * abstract:\n- *  compares two powersets for equality\n- *\n- */\n-int\n-__eqpowerset (left, right, bitlength)\n-     SET_WORD *left;\n-     SET_WORD *right;\n-     unsigned long bitlength;\n-{\n-    {\n-      SET_WORD c;\n-      register unsigned long i;\n-      unsigned long len = bitlength / SET_WORD_SIZE;\n-\n-      for (i = 0; i < len; i++) /* a word-oriented memcmp */\n-\tif (left[i] != right[i])\n-\t  return 0;\n-      /* do the last (possibly partial) word */\n-      bitlength %= SET_WORD_SIZE;\n-      if (bitlength == 0)\n-\treturn 1;\n-      c = left[i] ^ right[i];\n-      MASK_UNUSED_WORD_BITS (&c, bitlength);\n-      return (c == 0) ? 1 : 0;\n-    }\n-}"}, {"sha": "9261572a1f006fd35b36c9d1c701e2b15dc9bd15", "filename": "libchill/eqstr.c", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Feqstr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Feqstr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Feqstr.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,64 +0,0 @@\n-/* Implement string-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Bill Cox\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <string.h>\n-\n-extern void cause_exception (char *exname, char *file, int lineno);\n-\n-/*\n- * function __eqstring\n- *\n- * parameters:\n- *     S1 - pointer to left string\n- *     LEN1 - length of left string\n- *     S2 - pointer to right string\n- *     LEN2 - length of right string\n- *\n- * returns:\n- *     1 if strings equal, 0 if not\n- *\n- * exceptions:\n- *     none\n- *\n- * abstract:\n- *     compares two character strings for equality\n- *\n- */\n-\n-int\n-__eqstring (s1, len1, s2, len2)\n-     char *s1;\n-     int len1;\n-     char *s2;\n-     int len2;\n-{\n-  if (len1 != len2)\n-    return 0;\n-\n-  return ! memcmp (s1, s2, len1);\n-}"}, {"sha": "8845d4336d562a45b2617fd1c367601e9c6e4ab0", "filename": "libchill/exh.c", "status": "removed", "additions": 0, "deletions": 162, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fexh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fexh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fexh.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,162 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <string.h>\n-#include <setjmp.h>\n-#include \"rtltypes.h\"\n-\n-extern void cause_exception (char *exname, char *file, int lineno, int user_arg);\n-extern void unhandled_exception (char *exname, char *file, int lineno, int user_arg);\n-\n-/* An action with a handler:\n-\tBODY ON (e1, e2): H12; (e3): H3; ELSE HE; END;\n-   is translated into:\n-\n-    struct __ch_handler __tmp;\n-    static struct __ch_handler_excepts _H[4] =\n-      {\n-        { <<e1>>, 1 },\n-        { <<e2>>, 1 },\n-        { <<e3>>, 2 },\n-        { __ch_else_except, 3 },\n-      };\n-    __ch_link_handler(&__tmp);\n-    __tmp.handlers = _H;\n-    switch (setmp(&__tmp.jbuf))\n-      {\t\n-      case 0:  BODY; __ch_unlink_handler(&__tmp); break;\n-      case 1:  H12; break;\n-      case 2:  H3; break;\n-      case 3:  HE; break;\n-      }\n-*/\n-\n-/* this part contains all neccessary functions to handle exceptions in CHILL */\n-\n-/* These two trivial function aren't inlines, to allow for\n-   more flexibility (e.g. a per-thread exception stack). */\n-\n-extern void __setexceptionStack (TExceptionHandlerStack *new);\n-extern TExceptionHandlerStack * __getexceptionStack (void);\n-\n-void\n-__ch_link_handler (handler)\n-     struct __ch_handler *handler;\n-{\n-  handler->prev = __getexceptionStack ();\n-  __setexceptionStack (handler);\n-}\n-\n- void\n-__ch_unlink_handler (handler)\n-     struct __ch_handler *handler;\n-{\n-  __setexceptionStack (handler->prev);\n-}\n-\n-/*\n- * function __cause_exception\n- *\n- * parameters:\n- *  exnum\t\tname string of exception to raise\n- *  file\t\tfilename of CAUSE statement\n- *  lineno\t\tlinenumber of CAUSE statement\n- *  user_arg\t\tuser specified argument\n- *\n- * returns:\n- *  never\t\tleave function with longjmp or abort\n- *\n- * abstract:\n- *  search exceptionstack for last handler of caused exception,\n- *  call userdefined function to signal exception,\n- *  jump to handler with longjmp or call unhandled_exception\n- *\n- */\n-\n-void\n-__cause_exception  (ex, file, lineno, user_arg)\n-     char *ex;\n-     char *file;\n-     int  lineno;\n-     int user_arg;\n-{\n-  register struct __ch_handler *handler = __getexceptionStack();\n-\n-  /* call user defined cause function */\n-  cause_exception (ex, file, lineno, user_arg);\n-  \n-  for ( ; handler != NULL; handler = handler->prev)\n-    {\n-      register struct __ch_handled_excepts *list = handler->handlers;\n-      for ( ; list->code != 0; list++ )\n-\t{\n-\t  if (list->ex == __ch_else_except || EX_EQ(list->ex, ex)) /* found */\n-\t    {\n-\t      __setexceptionStack (handler->prev);\n-\t      longjmp(handler->jbuf, list->code);\t  \n-\t    }\n-\t}\n-    }\n-\n-  /* no handler found -- call unhandled_exception */\n-  unhandled_exception (ex, file, lineno, user_arg);\n-  abort ();\n-}\n-\n-/*\n- * function __cause_ex1\n- *\n- * parameters:\n- *  exnum\t\tname string of exception to raise\n- *  file\t\tfilename of CAUSE statement\n- *  lineno\t\tlinenumber of CAUSE statement\n- *\n- * returns:\n- *  never\t\tleave function with longjmp or abort\n- *\n- * abstract:\n- *  This is the function the compiler generated code calls.\n- *  Search exceptionstack for last handler of caused exception,\n- *  call userdefined function to signal exception,\n- *  jump to handler with longjmp or call unhandled_exception\n- *\n- */\n-\n-void\n-__cause_ex1  (ex, file, lineno)\n-     char *ex;\n-     char *file;\n-     int  lineno;\n-{\n-  __cause_exception (ex, file, lineno, 0);\n-}"}, {"sha": "fe8ad2905f8177e91ec5bc26ecfca9d03bc89879", "filename": "libchill/exhstack.c", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fexhstack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fexhstack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fexhstack.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,47 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <setjmp.h>\n-#include \"rtltypes.h\"\n-\n-typedef void (*init_ptr) ();\n-typedef int * tasking_ptr;\n-\n-static TExceptionHandlerStack\t*__exceptionStack;\n-\n-TExceptionHandlerStack * __getexceptionStack ()\n-{\n-  return __exceptionStack;\n-}\n-\n-void __setexceptionStack (TExceptionHandlerStack *new)\n-{\n-  __exceptionStack = new;\n-}"}, {"sha": "186b77ca36f84a82d44967c33b72c864d313d44a", "filename": "libchill/existing.c", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fexisting.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fexisting.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fexisting.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,39 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-Boolean\n-__existing( Association_Mode* the_assoc, char* file, int line )\n-{\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-  if( !TEST_FLAG(the_assoc, IO_ISASSOCIATED) )\n-    CHILLEXCEPTION( file, line, NOTASSOCIATED, IS_NOT_ASSOCIATED );\n-  return TEST_FLAG(the_assoc, IO_EXISTING ) ? True : False;\n-}"}, {"sha": "a5c202c7b93f9734ddbf4421c8ef5aa613e22392", "filename": "libchill/ffsetclrps.c", "status": "removed", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fffsetclrps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fffsetclrps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fffsetclrps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,92 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __ffsetclrpowerset\n- *\n- * parameters:\n- *\tps\t\tpowerset\n- *\tbitlength\tlength of powerset\n- *\n- * returns:\n- *\tint\t\t-1 .. nothing found\n- *\t\t\t>=0 .. index of first true bit found\n- * exceptions:\n- *  none\n- */\n-\n-int\n-__ffsetclrpowerset (ps, bitlength, first_bit)\n-     SET_WORD      *ps;\n-     unsigned long  bitlength;\n-     int first_bit;\n-{\n-  register int bitno;\n-\n-  if (first_bit >= bitlength)\n-    return -1;\n-\n-    {\n-      unsigned int words_to_skip = (unsigned) first_bit / SET_WORD_SIZE;\n-      unsigned long cnt = words_to_skip * SET_WORD_SIZE;\n-      SET_WORD\t*p = ps + words_to_skip;\n-      SET_WORD\t*endp = ps + BITS_TO_WORDS(bitlength);\n-      SET_WORD\tc;\n-      first_bit = (unsigned) first_bit % (unsigned) SET_WORD_SIZE;\n-\n-      c = *p++;\n-      if (c)\n-\t{\n-\t  for (bitno = first_bit; bitno < SET_WORD_SIZE; bitno++)\n-\t    if (GET_BIT_IN_WORD(c, bitno))\n-\t      goto found;\n-\t}\n-      cnt += SET_WORD_SIZE;\n-\n-      while (p < endp)\n-\t{\n-\t  if ((c = *p++))\n-\t    {\n-\t      /* found a bit set .. calculate which */\n-\t      for (bitno = 0; bitno < SET_WORD_SIZE; bitno++)\n-\t\tif (GET_BIT_IN_WORD(c, bitno))\n-\t\t  goto found;\n-\t    }\n-\t  cnt += SET_WORD_SIZE;\n-\t}\n-      return -1;\n-    found:\n-      bitno += cnt;\n-      return bitno >= bitlength ? -1 : bitno;\n-    }\n-}"}, {"sha": "e506db41a9dcae9baa66a8b5c9c9b832b84b075c", "filename": "libchill/ffsetps.c", "status": "removed", "additions": 0, "deletions": 116, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fffsetps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fffsetps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fffsetps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,116 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-extern void __cause_ex1 (char *exname, char *file, int lineno);\n-\n-/*\n- * function __ffsetpowerset\n- *\n- * parameters:\n- *\tps\t\tpowerset\n- *\tbitlength\tlength of powerset\n- *      minval          set low bound\n- *      filename        caller's file name\n- *      lineno          caller's line number\n- *\n- * returns:\n- *\tint\t\tenum value of lowest member of powerset\n- *\n- * exceptions:\n- *      \"empty\" if the set is empty\n- *\n- * abstract:\n- *  Find first bit set in a powerset and return the corresponding value.\n- *\n- */\n-long\n-__ffsetpowerset (ps, bitlength, minval, filename, lineno)\n-     SET_WORD      *ps;\n-     unsigned long  bitlength;\n-     long           minval;\n-     char          *filename;\n-     int            lineno;\n-{\n-  unsigned long bitno;\n-\n-  if (bitlength <= SET_CHAR_SIZE)\n-    {\n-      SET_CHAR cset = *((SET_CHAR *)ps);\n-      if (cset != 0)\n-\t{\n-\t  /* found a bit set .. calculate which */\n-\t  for (bitno = 0; bitno < SET_CHAR_SIZE; bitno++)\n-\t    if (GET_BIT_IN_CHAR (cset, bitno))\n-\t      break;\n-\t  /* return its index */\n-\t  return bitno + minval;\n-\t}\n-    }\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    {\n-      SET_SHORT sset = *((SET_SHORT *)ps);\n-      if (sset != 0)\n-\t{\n-\t  /* found a bit set .. calculate which */\n-\t  for (bitno = 0; bitno < SET_SHORT_SIZE; bitno++)\n-\t    if (GET_BIT_IN_SHORT (sset, bitno))\n-\t      break;\n-\t  /* return its index */\n-\t  return bitno + minval;\n-\t}\n-    }\n-  else /* set composed of array of one or more WORDs */\n-    {\n-      SET_WORD *p    = ps;\n-      SET_WORD *endp = ps + BITS_TO_WORDS(bitlength);\n-      unsigned long    cnt;\n-      \n-      /* FIXME: bitorder problems? */\n-      for (cnt = 0; p < endp; p++, cnt += SET_WORD_SIZE)\n-\t{\n-\t  SET_WORD c = *p;\n-\n-\t  if (c)\n-\t    {\n-\t      /* found a bit set .. calculate which */\n-\t      for (bitno = 0; bitno < SET_WORD_SIZE; bitno++)\n-\t\tif (GET_BIT_IN_WORD (c, bitno))\n-\t\t  break;\n-\t      /* return its index */\n-\t      return cnt + bitno + minval;\n-\t    }\n-\t}\n-    }\n-  /* no bits found - raise exception */\n-  __cause_ex1 (\"empty\", filename, lineno);\n-}"}, {"sha": "7d0c1d099011875a73012834f067883487be2daa", "filename": "libchill/fileio.h", "status": "removed", "additions": 0, "deletions": 161, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Ffileio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Ffileio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Ffileio.h?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,161 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#ifndef _fileio_h_\n-#define _fileio_h_\n-\n-#include <stdio.h>\n-\n-#include \"auxtypes.h\"\n-#include \"ioerror.h\"\n-#include \"iomodes.h\"\n-\n-#define DIRSEP '/'\n-\n-#define TEST_FLAG(Xloc,Flag) (((Xloc)->flags) & (Flag))\n-#define SET_FLAG(Xloc,Flag)  (Xloc)->flags |= (Flag)\n-#define CLR_FLAG(Xloc,Flag)  (Xloc)->flags = ((Xloc)->flags & ~(Flag))\n-\n-Boolean\n-__isassociated( Association_Mode* the_assoc, char* file, int line );\n-\n-Boolean\n-__existing( Association_Mode* the_assoc, char* file, int line );\n-\n-Boolean\n-__readable( Association_Mode* the_assoc, char* file, int line );\n-\n-Boolean\n-__writeable( Association_Mode* the_assoc, char* file, int line );\n-\n-Boolean\n-__indexable( Association_Mode* the_assoc, char* file, int line );\n-\n-Boolean\n-__sequencible( Association_Mode* the_assoc, char* file, int line );\n-\n-Boolean\n-__variable( Association_Mode* the_assoc, char* file, int line );\n-\n-typedef signed long int Index_t;\n-\n-Association_Mode*\n-__associate( Association_Mode* the_assoc,\n-             char*             the_path,\n-             int               the_path_len,\n-             char*             the_mode,\n-             int               the_mode_len,\n-             char*             file,\n-             int               line );\n-\n-void\n-__dissociate( Association_Mode* the_assoc, char* file, int line );\n-\n-void\n-__create( Association_Mode* the_assoc, char* file, int line );\n-\n-void\n-__delete( Association_Mode* the_assoc, char* file, int line );\n-\n-void\n-__modify( Association_Mode* the_assoc,\n-          char*             the_path,\n-          int               the_path_len,\n-          char*             the_mode,\n-          int               the_mode_len,\n-          char*             file,\n-          int               line );\n-\n-void\n-__connect( void*             the_transfer, \n-           Association_Mode* the_assoc,\n-           Usage_Mode        the_usage,\n-           Where_Mode        the_where,\n-           Boolean           with_index,\n-           signed long       the_index,\n-           char*             file,\n-           int               line );\n-\n-void\n-__disconnect( void* the_transfer, char* file, int line );\n-\n-Association_Mode*\n-__getassociation( void* the_transfer, char* file, int line );\n-\n-Usage_Mode\n-__getusage( void* the_transfer, char* file, int line );\n-\n-Boolean\n-__outoffile( void* the_transfer, char* file, int line );\n-\n-void*\n-__readrecord( Access_Mode*  the_access,\n-              signed long   the_index,\n-              char*         the_buf_addr,\n-              char*         file,\n-              int           line );\n-\n-void\n-__writerecord( Access_Mode*  the_access,\n-               signed long   the_index,\n-               char*         the_val_addr,\n-               unsigned long the_val_len,\n-               char*         file,\n-               int           line );\n-\n-VarString*\n-__gettextrecord( Text_Mode* the_text, char* file, int line );\n-\n-unsigned long\n-__gettextindex( Text_Mode* the_text, char* file, int line );\n-\n-Access_Mode*\n-__gettextaccess( Text_Mode* the_text, char* file, int line );\n-\n-Boolean\n-__eoln( Text_Mode* the_text, char* file, int line );\n-\n-void\n-__settextrecord( Text_Mode* the_text,\n-                 VarString* the_text_rec,\n-                 char*      file,\n-                 int        line );\n-\n-void\n-__settextindex( Text_Mode*  the_text,\n-                signed long the_text_index, \n-                char*       file,\n-                int         line );\n-\n-void\n-__settextaccess( Text_Mode*   the_text,\n-                 Access_Mode* the_access,\n-                 char*        file,\n-                 int          line );\n-\n-#endif"}, {"sha": "fe86c0c9abfc68a4fc7dc7df3b513c15c6fbc0d6", "filename": "libchill/flsetclrps.c", "status": "removed", "additions": 0, "deletions": 89, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fflsetclrps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fflsetclrps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fflsetclrps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,89 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __flsetclrpowerset\n- *\n- * parameters:\n- *\tps\t\tpowerset\n- *\tbitlength\tlength of powerset\n- *\n- * returns:\n- *\tint\t\t-1 .. nothing found\n- *\t\t\t>= 0 .. index of last set bit\n- * exceptions:\n- *  none\n- *\n- * abstract:\n- *  Find last bit set in a powerset and return the corresponding value\n- *  in *out and clear this bit. Return 0 for no more found, else 1.\n- *\n- */\n-int\n-__flsetclrpowerset (ps, bitlength, first_bit)\n-     SET_WORD      *ps;\n-     unsigned long  bitlength;\n-     int first_bit;\n-{\n-  register int bitno;\n-\n-    {\n-      SET_WORD *p, c;\n-      bitno = bitlength - 1;\n-      if (bitno < first_bit)\n-\treturn -1;\n-      p = &ps[(unsigned) bitno / SET_WORD_SIZE];\n-      c = *p;\n-      if (((unsigned) bitlength % SET_WORD_SIZE) != 0)\n-\tMASK_UNUSED_WORD_BITS(&c, (unsigned) bitlength % SET_WORD_SIZE);\n-      if (c)\n-\tgoto found;\n-      else\n-\tbitno -= ((unsigned) bitno % SET_WORD_SIZE) + 1;\n-      while (bitno >= first_bit)\n-\t{\n-\t  c = *--p;\n-\t  if (c)\n-\t    goto found;\n-\t  bitno -= SET_WORD_SIZE;\n-\t}\n-      return -1;\n-    found:\n-      for (; bitno >= first_bit; bitno--)\n-\t{\n-\t  if (GET_BIT_IN_WORD (c, (unsigned) bitno % SET_WORD_SIZE))\n-\t    return bitno;\n-\t}\n-      return -1;\n-    }\n-}"}, {"sha": "95a0b3bad68fe60bc05a15e42b3afa8c6e8a534d", "filename": "libchill/flsetps.c", "status": "removed", "additions": 0, "deletions": 114, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fflsetps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fflsetps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fflsetps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,114 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-extern void __cause_ex1 (char *exname, char *file, int lineno);\n-\n-/*\n- * function __flsetpowerset\n- *\n- * parameters:\n- *\tps\t\tpowerset\n- *\tbitlength\tlength of powerset\n- *      minval          set low bound\n- *      filename        caller's file name\n- *      lineno          caller's line number\n- *\n- * returns:\n- *\tint\t\tlargest enumeration value\n- * exceptions:\n- *      \"empty\"         if set is empty\n- *\n- * abstract:\n- *  Find last bit set in a powerset and return the corresponding value.\n- *\n- */\n-long\n-__flsetpowerset (ps, bitlength, minval, filename, lineno)\n-     SET_WORD      *ps;\n-     unsigned long  bitlength;\n-     long           minval;\n-     char          *filename;\n-     int            lineno;\n-{\n-  unsigned long bitno;\n-\n-  if (bitlength <= SET_CHAR_SIZE)\n-    {\n-      SET_CHAR cset = *((SET_CHAR *)ps);\n-      if (cset != 0)\n-\t{\n-\t  /* found a bit set .. calculate which */\n-\t  for (bitno = SET_CHAR_SIZE; bitno >= 1; bitno--)\n-\t    if (GET_BIT_IN_CHAR (cset, bitno - 1))\n-\t      break;\n-\t  /* return its index */\n-\t  return bitno + minval - 1;\n-\t}\n-    }\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    {\n-      SET_SHORT sset = *((SET_SHORT *)ps);\n-      if (sset != 0)\n-\t{\n-\t  /* found a bit set .. calculate which */\n-\t  for (bitno = SET_SHORT_SIZE; bitno >= 1; bitno--)\n-\t    if (GET_BIT_IN_SHORT (sset, bitno - 1))\n-\t      break;\n-\t  /* return its index */\n-\t  return bitno + minval - 1;\n-\t}\n-    }\n-  else /* set composed of array of one or more WORDs */\n-    {\n-      SET_WORD\t*endp = ps;\n-      SET_WORD\t*p = ps + BITS_TO_WORDS(bitlength) - 1;\n-      unsigned long cnt;\n-      \n-      /* FIXME: bitorder problems? */\n-      for (cnt = ((bitlength - 1) / SET_WORD_SIZE) * SET_WORD_SIZE;\n-\t   p >= endp; p--, cnt -= SET_WORD_SIZE)\n-\t{\n-\t  SET_WORD c = *p;\n-\t  if (c)\n-\t    {\n-\t      /* found a bit set .. calculate which */\n-\t      for (bitno = SET_WORD_SIZE; bitno >= 1; bitno--)\n-\t\tif (GET_BIT_IN_WORD (c, bitno - 1))\n-\t\t  break;\n-\t      return cnt + bitno + minval - 1;\n-\t    }\n-\t}\n-    }\n-  /* no bits found - raise exception */\n-  __cause_ex1 (\"empty\", filename, lineno);\n-}"}, {"sha": "da05e5edb7eab6640c1d20640ce0a758b97c836c", "filename": "libchill/format.c", "status": "removed", "additions": 0, "deletions": 2194, "changes": 2194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fformat.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,2194 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <limits.h>\n-#include <string.h>\n-#include <ctype.h>\n-#include <setjmp.h>\n-#include <float.h>\n-#include <math.h>\n-#include <stdlib.h>\n-#if _TEXTIO_DEBUG_\n-#include <stdio.h>\n-#endif\n-\n-#include \"bitstring.h\"\n-#include \"auxtypes.h\"\n-#include \"iomodes.h\"\n-#include \"format.h\"\n-#include \"fileio.h\"\n-#include \"ioerror.h\"\n-\n-#define CH_BYTE_MIN   0xffffff80L\n-#define CH_BYTE_MAX   0x0000007fL\n-#define CH_UBYTE_MAX  0x000000ffUL\n-#define CH_INT_MIN    0xffff8000L\n-#define CH_INT_MAX    0x00007fffL\n-#define CH_UINT_MAX   0x0000ffffUL\n-#define CH_LONG_MIN   0x80000000L\n-#define CH_LONG_MAX   0x7fffffffL\n-#define CH_ULONG_MAX  0xffffffffUL\n-\n-#ifndef M_LN2\n-#define M_LN2   0.69314718055994530942\n-#endif\n-#ifndef M_LN10\n-#define M_LN10          2.30258509299404568402\n-#endif\n-\n-#define DMANTDIGS  (1 + (int)(DBL_MANT_DIG * M_LN2 / M_LN10))\n-#define FMANTDIGS  (1 + (int)(FLT_MANT_DIG * M_LN2 / M_LN10))\n-\n-/* float register length */\n-#define MAXPREC 40\n-\n-#define LET 0x0001\n-#define BIN 0x0002\n-#define DEC 0x0004\n-#define OCT 0x0008\n-#define HEX 0x0010\n-#define USC 0x0020\n-#define BIL 0x0040\n-#define SPC 0x0080\n-#define SCS 0x0100\n-#define IOC 0x0200\n-#define EDC 0x0400\n-#define CVC 0x0800\n-\n-#define isDEC(c)  ( chartab[(c)] & DEC )\n-#define isCVC(c)  ( chartab[(c)] & CVC )\n-#define isEDC(c)  ( chartab[(c)] & EDC )\n-#define isIOC(c)  ( chartab[(c)] & IOC )\n-#define isUSC(c)\n-#define isXXX(c,XXX)  ( chartab[(c)] & XXX )\n-\n-/*\n- *  local definitions\n- */\n-\n-static\n-short int chartab[256] = {\n-  0, 0, 0, 0, 0, 0, 0, 0, \n-  0, SPC, SPC, SPC, SPC, SPC, 0, 0, \n-\n-  0, 0, 0, 0, 0, 0, 0, 0, \n-  0, 0, 0, 0, 0, 0, 0, 0, \n-\n-  SPC, IOC, 0, 0, 0, 0, 0, 0, \n-  SCS, SCS, SCS, SCS+IOC, SCS, SCS+IOC, SCS, SCS+IOC, \n-  BIN+OCT+DEC+HEX, BIN+OCT+DEC+HEX, OCT+DEC+HEX, OCT+DEC+HEX, OCT+DEC+HEX,\n-     OCT+DEC+HEX, OCT+DEC+HEX, OCT+DEC+HEX, \n-  DEC+HEX, DEC+HEX, SCS, SCS, SCS+EDC, SCS+IOC, SCS+EDC, IOC, \n-\n-  0, LET+HEX+BIL, LET+HEX+BIL+CVC, LET+HEX+BIL+CVC, LET+HEX+BIL, LET+HEX, \n-     LET+HEX+CVC, LET, \n-  LET+BIL+CVC, LET, LET, LET, LET, LET, LET, LET+CVC, \n-\n-  LET, LET, LET, LET, LET+EDC, LET, LET, LET,\n-  LET+EDC, LET, LET, SCS, 0, SCS, 0, USC, \n-\n-  0, LET+HEX, LET+HEX, LET+HEX, LET+HEX, LET+HEX, LET+HEX, LET, \n-  LET, LET, LET, LET, LET, LET, LET, LET, \n-\n-  LET, LET, LET, LET, LET, LET, LET, LET,\n-  LET, LET, LET, 0, 0, 0, 0, 0 \n-};\n-\n-typedef enum {\n-  FormatText, FirstPercent, RepFact, ConvClause, EditClause, ClauseEnd,\n-  AfterWidth, FractWidth, FractWidthCont, ExpoWidth, ExpoWidthCont, \n-  ClauseWidth, CatchPadding, LastPercent\n-} fcsstate_t;\n-\n-#define CONVERSIONCODES \"CHOBF\"\n-typedef enum {\n-  DefaultConv, HexConv, OctalConv, BinaryConv, ScientConv\n-} convcode_t;\n-\n-static\n-short int base[4] = { 10, 16, 8, 2 };\n-\n-static\n-short int dset[4] = { DEC, HEX, OCT, BIN };\n-\n-#define EDITCODES \"X<>T\"\n-typedef enum {\n-  SpaceSkip, SkipLeft, SkipRight, Tabulation\n-} editcode_t;\n-\n-#define IOCODES \"/+-?!=\"\n-typedef enum {\n-  NextRecord, NextPage, CurrentLine, Prompt, Emit, EndPage\n-} iocode_t;\n-\n-typedef enum { \n-  ConvAct, EditAct, IOAct\n-} acttype_t;\n-\n-typedef enum {\n-  NormalEnd, EndAtParen, TextFailEnd \n-} formatexit_t;\n-\n-static\n-double ep_1[10] = {\n-  1e0, 1e1, 1e2, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9 };\n-static\n-double ep_10[10] = {\n-  1e0, 1e10, 1e20, 1e30, 1e40, 1e50, 1e60, 1e70, 1e80, 1e90 };\n-static\n-double ep_100 = 1e100;\n-\n-/* float register */\n-static\n-unsigned char floatdig[MAXPREC];\n-\n-/*\n- *  global io variables\n- */\n-\n-static Text_Mode*      textptr = NULL;\n-static VarString*      textrecptr;\n-\n-static int             actual_index;\n-static int             maximum_index;\n-static int             iolist_index;\n-\n-static __tmp_IO_list*  iolistptr;\n-static int             iolistlen;\n-static char*           iostrptr;\n-static int             iostrlen;\n-\n-\n-static convcode_t     convcode;\n-static editcode_t     editcode;\n-static iocode_t       iocode;\n-static unsigned long  repetition;\n-static Boolean        leftadjust;\n-static Boolean        overflowev;\n-static Boolean        dynamicwid;\n-static Boolean        paddingdef;\n-static char           paddingchar;\n-static Boolean        fractiondef;\n-static unsigned long  fractionwidth;\n-static Boolean        exponentdef;\n-static unsigned long  exponentwidth;\n-static unsigned long  clausewidth;\n-static signed long    textindex;\n-  \n-static\n-__tmp_IO_enum_table_type bool_tab[] = \n-   { { 0, \"FALSE\" }, \n-     { 1, \"TRUE\"  },\n-     { 0 , NULL   }  };\n-\n-/*\n- * case insensitive compare: s1 is zero delimited, s2 has n chars\n- */\n-static\n-int casncmp( const char* s1, const char* s2, int n )\n-{\n-  int res = 0;\n-  while( n-- )\n-  {\n-    if( (res = toupper(*s1++) - toupper(*s2++)) ) \n-      return res;\n-  }\n-  return *s1;\n-}\n-\n-/*\n- * skip spaces with blank equal to tab\n- */\n-static\n-int skip_space( int limit )\n-{\n-  int skipped = 0;\n-  while( actual_index < limit &&\n-         (iostrptr[actual_index] == ' ' || iostrptr[actual_index] == '\\t' ) )\n-  {\n-    actual_index++;\n-    skipped++;\n-  }\n-  return skipped;\n-}\n-\n-/*\n- * skip leading pad characters\n- */\n-static\n-int skip_pad( int limit )\n-{\n-  int skipped = 0;\n-  while( actual_index < limit && iostrptr[actual_index] == paddingchar )\n-  {\n-    actual_index++;\n-    skipped++;\n-  }\n-#if _TEXTIO_DEBUG_\n-  printf( \"skipping '%c' until %d: %d\\n\", paddingchar, limit, skipped );\n-#endif\n-  return skipped;\n-}\n-\n-/*\n- * backup trailing pad characters\n- */\n-static\n-int piks_pad( int start, int limit )\n-{\n-  int skipped = 0;\n-  while( start >/***=*/ limit && iostrptr[--start] == paddingchar )\n-  {\n-    skipped++;\n-  }\n-#if _TEXTIO_DEBUG_\n-  printf( \"piksing '%c' from %d until %d: %d\\n\", \n-          paddingchar, start, limit, skipped );\n-#endif\n-  return skipped;\n-}\n-\n-/*\n- * parse an integer\n- */\n-static\n-int parse_int( int limit, int SET, int base, \n-               unsigned long* valptr, int* signptr )\n-{\n-  int           parsed = actual_index;\n-  Boolean       digits = False;\n-  unsigned long value  = 0;\n-  char          curr;\n-  int           dig;\n-\n-  if( actual_index >= limit )\n-    IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_INT );\n-  *signptr = +1;\n-  if( iostrptr[actual_index] == '+' )\n-    actual_index++;\n-  else\n-    if( iostrptr[actual_index] == '-' )\n-    {  *signptr = -1;\n-       actual_index++;\n-    }\n-\n-  for( ; actual_index < limit; actual_index++ )\n-  {\n-    curr = iostrptr[actual_index];\n-    if( curr == '_' ) continue;\n-    if( isXXX(curr,SET) )\n-    {\n-      digits = True;\n-      dig = curr <= '9' ? curr - '0' : toupper(curr) - 'A' + 10;\n-      if( value > (ULONG_MAX - dig)/base )\n-        IOEXCEPTION( TEXTFAIL, INT_VAL_OVERFLOW );\n-      value = value*base + dig;\n-      continue;\n-    }\n-    break;\n-  }\n-  if( !digits )\n-    IOEXCEPTION( TEXTFAIL, NO_DIGITS_FOR_INT );\n-\n-  *valptr = value;\n-#if _TEXTIO_DEBUG_\n-  printf( \"parsing for int until %d, base %d: %u\\n\", limit, base, value );\n-#endif\n-  return actual_index - parsed;\n-}\n-\n-static\n-double\n-make_float( int dexp, int sign )\n-{\n-  double value = atof( floatdig );\n-#if _TEXTIO_DEBUG_\n-  printf( \" value = %25.20e, dexp = %d\\n\", value, dexp );\n-#endif\n-  while( dexp >= 100 )\n-    value *= ep_100, dexp -= 100;\n-  if( dexp >= 10 )\n-    value *= ep_10[dexp/10], dexp %= 10;\n-  if( dexp > 0 )\n-    value *= ep_1[dexp];\n-\n-  while( dexp <= -100 )\n-    value /= ep_100, dexp += 100;\n-  if( dexp <= -10 )\n-    value /= ep_10[-dexp/10], dexp %= 10;\n-  if( dexp < 0 )\n-    value /= ep_1[-dexp];\n-\n-  return  sign ? -value : value;\n-}\n-\n-/* %C -> fixed point   [+|-]<digit>+[.<digit>*]  */\n-static\n-int parse_fixedpoint( int limit, double* valptr )\n-{\n-  int           parsed = actual_index;\n-  Boolean       digits = False;\n-  int           sdig = 0;\n-  double        value;\n-  char          curr;\n-  int           sign = False;\n-  int           expo = 0;\n-\n-  if( actual_index >= limit )\n-    IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_FLOAT );\n-  if( iostrptr[actual_index] == '+' )\n-    actual_index++;\n-  else\n-    if( iostrptr[actual_index] == '-' )\n-    {\n-       sign = True;\n-       actual_index++;\n-    }\n-\n-  floatdig[0] = '.';\n-  for( ; actual_index < limit; actual_index++ )\n-  {\n-    curr = iostrptr[actual_index];\n-    if( ! isDEC(curr) )\n-      break;\n-    digits = True;\n-    if( sdig < MAXPREC - 1 )\n-    {\n-      if( sdig || curr != '0' )\n-      {\n-        floatdig[++sdig] = curr;\n-        expo++;\n-      }\n-    }\n-    else\n-      if( sdig )\n-        expo++;\n-  }\n-  if( digits && curr == '.' )\n-  { \n-    actual_index++;\n-    for( ; actual_index < limit; actual_index++ )\n-    {\n-      curr = iostrptr[actual_index];\n-      if( !isDEC(curr) )\n-        break;\n-      if( sdig < MAXPREC - 1 )\n-      {\n-        if( sdig || curr != '0' )\n-          floatdig[++sdig] = curr;\n-        else\n-          expo--;\n-      }\n-    }\n-  }\n-  floatdig[++sdig] = '\\0';\n-\n-  if( !digits )\n-    IOEXCEPTION( TEXTFAIL, NO_DIGITS_FOR_FLOAT );\n-\n-  *valptr = make_float( expo, sign);\n-  return actual_index - parsed;\n-}\n-\n-\n-typedef enum {\n-  s_sign, s_dig, s_period, s_fraca, s_fracb, s_expo, s_exposign, \n-  s_expoa, s_expob }\n-scient_t;\n-\n-/* %C -> scientific   [+|-]<digit>[.<digit>*]E[=|-]<digit>+  */\n-static\n-int parse_scientific( int limit, double* valptr, double dmin, double dmax )\n-{\n-  int           parsed = actual_index;\n-  int           sdig = 0;\n-  char          curr;\n-  double        value;\n-  int           sign = False;\n-  int           expo = 0;           \n-  int           expo_sign = +1;\n-\n-  scient_t      state = s_sign;  \n-\n-  if( actual_index >= limit )\n-    IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_FLOAT );\n-\n-  floatdig[0] = '.';\n-  for( ; actual_index < limit; actual_index++ )\n-  {\n-    curr = iostrptr[actual_index];\n-    switch( state )\n-    {\n-    case s_sign:\n-      if( iostrptr[actual_index] == '+' )\n-      {\n-        state = s_dig;\n-        break;\n-      }\n-      if( iostrptr[actual_index] == '-' )\n-      {\n-        sign = True;\n-        state = s_dig;\n-        break;\n-      }\n-      /* fall through - no break */\n-    case s_dig:\n-      if( isDEC(curr) && curr > '0' )\n-      {\n-        floatdig[++sdig] = curr;\n-        state = s_period;\n-        break;\n-      }\n-      IOEXCEPTION( TEXTFAIL, NO_DIGITS_FOR_FLOAT );\n-    case s_period:\n-      if( curr == '.' )\n-      {\n-        state = s_fraca;\n-        break;\n-      }\n-      if( curr == 'E' )\n-      {\n-        state = s_exposign;\n-        break;\n-      }\n-      IOEXCEPTION( TEXTFAIL, NO_EXPONENT );\n-    case s_fraca:\n-      if( isDEC(curr) )\n-      {\n-        floatdig[++sdig] = curr;\n-        state = s_fracb;\n-        break;\n-      }\n-      IOEXCEPTION( TEXTFAIL, NO_DIGITS_FOR_FLOAT );\n-    case s_fracb:\n-      if( isDEC(curr) )\n-      {\n-        if( sdig < MAXPREC - 1 )\n-          floatdig[++sdig] = curr;\n-        break;\n-      }\n-      if( curr == 'E' )\n-      {\n-        state = s_exposign;\n-        break;\n-      }\n-      IOEXCEPTION( TEXTFAIL, NO_EXPONENT );\n-    case s_exposign:\n-      if( iostrptr[actual_index] == '+' )\n-      {\n-        state = s_expoa;\n-        break;\n-      }\n-      if( iostrptr[actual_index] == '-' )\n-      {\n-        expo_sign = -1;\n-        state = s_expoa;\n-        break;\n-      }\n-    case s_expoa:\n-      if( isDEC(curr) )\n-      {\n-        expo = curr - '0';\n-        state = s_expob;\n-        break;\n-      }\n-      IOEXCEPTION( TEXTFAIL, NO_EXPONENT );\n-    case s_expob:\n-      expo = expo*10 + (curr - '0');\n-      if( expo > 1000 )\n-        IOEXCEPTION( TEXTFAIL, REAL_OVERFLOW );\n-    }\n-  }\n-  if( state != s_expob ) \n-    IOEXCEPTION( TEXTFAIL, NO_EXPONENT );\n-\n-  expo *= expo_sign;\n-  expo++;\n-\n-  floatdig[++sdig] = '\\0';\n-\n-  *valptr = make_float( expo, sign );\n-  return actual_index - parsed;\n-}\n-\n-\n-static\n-int parse_set( int limit, __tmp_IO_enum_table_type* tabptr, \n-               unsigned long* valptr )\n-{\n-  int    parsed = actual_index;\n-  char   curr;\n-  __tmp_IO_enum_table_type* etptr;\n-\n-  if( actual_index >= limit )\n-    IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_SET );\n-\n-  curr = iostrptr[actual_index];\n-  if( isXXX(curr,LET+USC) )\n-    actual_index++;\n-  else\n-    IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_SET );\n-\n-  for( ; actual_index < limit; actual_index++ )\n-  {    \n-    if( ! isXXX(iostrptr[actual_index],LET+DEC+USC) )\n-      break;\n-  }\n-\n-  if( tabptr )\n-     while( tabptr->name )\n-     {\n-       if( !casncmp( tabptr->name, &iostrptr[parsed], actual_index-parsed ) )\n-       {\n-         *valptr = tabptr->value;\n-#if _TEXTIO_DEBUG_\n-         printf( \"parsing set value until %d: %u\\n\", limit, tabptr->value );\n-#endif\n-         return actual_index - parsed;         \n-       }\n-       tabptr++;\n-     }\n-  IOEXCEPTION( TEXTFAIL, SET_CONVERSION_ERROR ); \n-}\n-\n-static\n-int parse_bit( int limit, char* bitptr )\n-{\n-  int parsed = actual_index;\n-  int i = 0;\n-  char curr;\n-\n-  if( actual_index >= limit )\n-    IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_BOOLS );\n-\n-  for( ; actual_index < limit; actual_index++ )\n-  {\n-    curr = iostrptr[actual_index] - '0';\n-    if( curr == 0 || curr == 1 )\n-      /* __setbitinset( i++, bitptr, limit, curr ); */\n-      __setbitpowerset (bitptr, limit, 0, i++, curr, __FILE__, __LINE__);\n-    else\n-      break;\n-  }\n-  return actual_index - parsed;\n-}\n-\n-static\n-char* myultoa( unsigned long ul, char* buf, int base )\n-{\n-  char*         res = buf;\n-  unsigned long h = ul/base;\n-  unsigned long q = 1;\n-\n-  while( h >= q ) q *= base;\n-  while( q > 0 )\n-  {\n-    *buf++ = \"0123456789ABCDEF\"[ul/q];\n-    ul %= q;\n-    q /= base;\n-  }\n-  *buf++ = '\\0';\n-  return res;\n-}\n-\n-/*\n- *  convert a bit string from src, bit offset up to len\n- */\n-static\n-char* bitput( char* dst, char* src, int offset, int len )\n-{\n-  char* res = dst;\n-  int i;\n-  for( i = offset; i < len; i++ )\n-  {\n-    *dst++ = __inpowerset( i, src, len, 0 ) ? '1' : '0';\n-  }\n-  return res;\n-}\n-\n-/*\n- * dround: round decimal register *digptr starting at digit mdigs,\n- *         on carry advance begin of digit sequence and bump exponent\n- */ \n-static\n-char*\n-dround( char* digptr, int mdigs, int* deptr )\n-{\n-  int carry;\n-#if _TEXTIO_DEBUG_\n-  printf( \"Rounding from %d\\n\", mdigs );\n-#endif\n-  if( digptr[mdigs] >= 5 )\n-  {\n-    carry = 1;\n-    while( carry )\n-    {\n-      digptr[--mdigs]++;\n-      if( digptr[mdigs] >= 10 )\n-        digptr[mdigs] = 0;\n-      else\n-        carry = 0;\n-    }\n-  }\n-  if( mdigs < 0 )\n-  {\n-    digptr[--mdigs] = 1;\n-    (*deptr)++;\n-    return digptr - 1;\n-  }\n-  else\n-    return digptr;\n-}\n-\n-/*\n- * mydtoa: convert val with a precision of mantdigs to a decimal fraction\n- *         first digit is at **fstdiptr, decimal exponent is at *deptr\n- */\n-static\n-char*\n-mydtoa( double val, int mantdigs, int* deptr, int* sgnptr )\n-{\n-  double m;\n-  int be;\n-  int de = -1;\n-  int fstdig = 0;\n-  int idig; \n-  char* digptr = floatdig+2;\n-\n-  floatdig[0] = floatdig[1] = 0;\n-\n-  if( val < 0 ) \n-    *sgnptr = -1, val = fabs( val );\n-  else\n-    *sgnptr = +1;\n-\n-  /* split the value */\n-  m = frexp( val, &be ) * 10.0;\n-\n-  /* 5.0 <= m < 10.0 */\n-  while( be > 0 )\n-  {\n-    de++; be--; m /= 5.0;\n-    if( m < 1.0 )\n-      m *= 10.0, de--;\n-  }\n-  while( be < 0 )\n-  {\n-    de--; be++; m *= 5.0;\n-    if( m >= 10.0 )\n-      m /= 10.0, de++;\n-  }\n-\n-  for( idig = 0; idig < mantdigs; idig++ )\n-  {\n-    digptr[idig] = (int)m;\n-    m = (m - digptr[idig])*10.0;\n-  }\n-  digptr[idig] = (int)m;\n-\n-  *deptr = de;\n-  return dround( digptr, mantdigs, deptr );\n-}\n-\n-#define PUT(c) \\\n-  { if( ifst <= ++iprt && iprt <= ilst ) *dst++ = c; }\n-\n-static\n-char*\n-fixput( char* dst, char* src, \n-        int ifst, int ilst, \n-        int sign, int fst, int lst, \n-        int nid, int nfd )\n-{\n-  char* dstsav = dst;\n-  int idig;\n-  int iprt = 0;\n-\n-  if( sign < 0 )\n-    PUT( '-' );\n-  for( idig = nid; idig >= -nfd; idig-- )\n-  {\n-    if (idig == -1)\n-      PUT( '.' );\n-    PUT( idig > fst || lst >= idig ? '0': '0' + *src++ );\n-  }\n-  return dstsav;\n-}\n-\n-static\n-char*\n-sciput( char* dst, char* src, char* expbeg,\n-        int ifst, int ilst, \n-        int sign, int de, int expwid )\n-{\n-  char* dstsav = dst;\n-  int iprt = 0;\n-  int nfd = fractionwidth;\n-  int explen = strlen( expbeg );\n-\n-  if( sign < 0 )\n-    PUT( '-' );\n-  PUT( '0' + *src++ );\n-  PUT( '.' );\n-\n-  while( nfd-- )\n-    PUT( '0' + *src++ );\n-  PUT( 'E' );\n-  PUT( de >= 0 ? '+' : '-' );\n-  while( expwid > explen )\n-  {\n-    PUT( '0' );\n-    expwid--;\n-  }\n-  while( explen-- )\n-    PUT( *expbeg++ );\n-  return dstsav;\n-}\n-\n-/*\n- *  handle dynamic field width\n- */ \n-static\n-get_field_width( void )\n-{\n-  unsigned long  width;\n-  unsigned long  ulongval;\n-           long  longval;\n-  __tmp_IO_list  io;\n-   \n-\n-  if( ++iolist_index > iolistlen )\n-    IOEXCEPTION( TEXTFAIL, IOLIST_EXHAUSTED );  \n-\n-  io = *iolistptr++;\n-\n-  /* must be integer, >= 0 */\n-  switch( io.__descr )\n-  {\n-  case __IO_ByteVal:\n-    longval = io.__t.__valbyte; \n-    goto signed_fieldwidth;\n-  case __IO_UByteVal:\n-    width = io.__t.__valubyte; \n-    goto unsigned_fieldwidth;\n-  case __IO_IntVal:\n-    longval = io.__t.__valint; \n-    goto signed_fieldwidth;\n-  case __IO_UIntVal:\n-    width = io.__t.__valuint; \n-    goto unsigned_fieldwidth;\n-  case __IO_LongVal:\n-    longval = io.__t.__vallong; \n-    goto signed_fieldwidth;\n-  case __IO_ULongVal:\n-    width = io.__t.__valulong; \n-    goto unsigned_fieldwidth;\n-  case __IO_ByteLoc:\n-    longval = *(signed char*)io.__t.__locint; \n-    goto signed_fieldwidth;\n-  case __IO_UByteLoc:\n-    width = *(unsigned char*)io.__t.__locint; \n-    goto unsigned_fieldwidth;\n-  case __IO_IntLoc:\n-    longval = *(signed short*)io.__t.__locint; \n-    goto signed_fieldwidth;\n-  case __IO_UIntLoc:\n-    width = *(unsigned short*)io.__t.__locint; \n-    goto unsigned_fieldwidth;\n-  case __IO_LongLoc:\n-    longval = *(signed long*) io.__t.__locint; \n-    goto signed_fieldwidth;\n-  case __IO_ULongLoc:\n-    width = *(unsigned long*)io.__t.__locint; \n-    goto unsigned_fieldwidth;\n-  default:\n-    IOEXCEPTION( TEXTFAIL, NON_INT_FIELD_WIDTH );\n-  }\n-\n-signed_fieldwidth: ;\n-  if( longval < 0 )\n-    IOEXCEPTION( TEXTFAIL, NEGATIVE_FIELD_WIDTH );\n-  width = longval;\n-\n-unsigned_fieldwidth: ;\n-  return width;\n-}\n-\n-\n-static\n-void inpconv( void )\n-{\n-  __tmp_IO_list  io;\n-  int            width;\n-  int            limit;\n-  int            skiplim;\n-  int            skipped;\n-  int            bypass;\n-  int            parsed;\n-  Boolean        fixedchars;\n-  int            fixedlen;\n-  unsigned char  curr;\n-  double         dval;\n-  float          fval;\n-\n-  __tmp_IO_long  lval;\n-  int            sign;\n-  unsigned long  umin;\n-  unsigned long  umax;\n-    signed long  smin;\n-    signed long  smax;\n-  int            ilen;\n-  short unsigned slen;\n-  __tmp_IO_enum_table_type* settabptr; \n-\n-  while( repetition-- )\n-  {\n-    if( ++iolist_index > iolistlen )\n-      IOEXCEPTION( TEXTFAIL, IOLIST_EXHAUSTED );  \n-\n-    io = *iolistptr++;\n-\n-    if( dynamicwid )\n-      width = get_field_width();\n-    else\n-      width = clausewidth;\n-\n-    bypass = skipped = 0;\n-    if( width )\n-    {\n-      if( actual_index + width > iostrlen )\n-        IOEXCEPTION( TEXTFAIL, NOT_ENOUGH_CHARS );\n-\n-      switch(io.__descr)\n-      {\n-      case __IO_CharLoc:\n-      case __IO_CharRangeLoc:\n-        fixedchars = True;\n-        fixedlen = 1;\n-        break;\n-      case __IO_CharStrLoc:\n-        fixedchars = True;\n-        fixedlen = io.__t.__loccharstring.string_length;\n-        break;\n-      default:\n-        fixedchars = False;\n-        break;\n-      }\n-         \n-      if( leftadjust )\n-      {\n-        skiplim = fixedchars ? actual_index + fixedlen\n-                             : actual_index;\n-        bypass = skipped = piks_pad( actual_index + width, skiplim );\n-      }\n-      else\n-      {\n-        skiplim = fixedchars ? actual_index + width - fixedlen\n-                             : actual_index + width;\n-        skipped = skip_pad( skiplim );\n-      }\n-      width -= skipped;\n-      limit = actual_index + width;\n-    }\n-    else\n-    { /* free format */\n-      if( paddingdef || !( io.__descr == __IO_CharLoc ||\n-                           io.__descr == __IO_CharRangeLoc || \n-                           io.__descr == __IO_CharStrLoc ||\n-                           io.__descr == __IO_CharVaryingLoc ) )\n-        if( paddingchar == ' ' || paddingchar == '\\t' )\n-          skip_space( iostrlen );\n-        else\n-          skip_pad( iostrlen );\n-      limit = iostrlen;\n-    }\n-\n-    switch( io.__descr )\n-    {\n-    case __IO_ByteLoc:\n-      ilen = 1;\n-      smin = CH_BYTE_MIN;\n-      smax = CH_BYTE_MAX;\n-      goto parse_signed_int;\n-    case __IO_UByteLoc:\n-      ilen = 1;\n-      umin = 0;\n-      umax = CH_UBYTE_MAX;\n-      goto parse_unsigned_int;\n-    case __IO_IntLoc:\n-      ilen = 2;\n-      smin = CH_INT_MIN;\n-      smax = CH_INT_MAX;\n-      goto parse_signed_int;\n-    case __IO_UIntLoc:\n-      ilen = 2;\n-      umin = 0;\n-      umax = CH_UINT_MAX;\n-      goto parse_unsigned_int;\n-    case __IO_LongLoc:\n-      ilen = 4;\n-      smin = CH_LONG_MIN;\n-      smax = CH_LONG_MAX;\n-      goto parse_signed_int;\n-    case __IO_ULongLoc:\n-      ilen = 4;\n-      umin = 0;\n-      umax = CH_ULONG_MAX;\n-      goto parse_unsigned_int;\n-\n-    case __IO_ByteRangeLoc:\n-      ilen = 1;\n-      smin = io.__t.__locintrange.lower.slong;\n-      smax = io.__t.__locintrange.upper.slong;\n-      goto parse_signed_int;\n-    case __IO_UByteRangeLoc:\n-      ilen = 1;\n-      umin = io.__t.__locintrange.lower.ulong;\n-      umax = io.__t.__locintrange.upper.ulong;\n-      goto parse_unsigned_int;\n-    case __IO_IntRangeLoc:\n-      ilen = 2;\n-      smin = io.__t.__locintrange.lower.slong;\n-      smax = io.__t.__locintrange.upper.slong;\n-      goto parse_signed_int;\n-    case __IO_UIntRangeLoc:\n-      ilen = 2;\n-      umin = io.__t.__locintrange.lower.ulong;\n-      umax = io.__t.__locintrange.upper.ulong;\n-      goto parse_unsigned_int;\n-    case __IO_LongRangeLoc:\n-      ilen = 4;\n-      smin = io.__t.__locintrange.lower.slong;\n-      smax = io.__t.__locintrange.upper.slong;\n-      goto parse_signed_int;\n-    case __IO_ULongRangeLoc:\n-      ilen = 4;\n-      umin = io.__t.__locintrange.lower.ulong;\n-      umax = io.__t.__locintrange.upper.ulong;\n-      goto parse_unsigned_int;\n-\n-    case __IO_BoolLoc:\n-      ilen = 1;\n-      umin = 0;\n-      umax = 1;\n-      settabptr = bool_tab;\n-      goto parse_set;\n-    case __IO_BoolRangeLoc:\n-      ilen = 1;\n-      umin = io.__t.__locboolrange.lower;\n-      umax = io.__t.__locboolrange.upper;\n-      settabptr = bool_tab;\n-      goto parse_set;\n-\n-    case __IO_SetLoc:\n-      ilen = io.__t.__locsetrange.length;\n-      settabptr = io.__t.__locsetrange.name_table;\n-      umin = 0;\n-      umax = CH_ULONG_MAX;\n-      goto parse_set;\n-    case __IO_SetRangeLoc:\n-      ilen = io.__t.__locsetrange.length;\n-      settabptr = io.__t.__locsetrange.name_table;\n-      umin = io.__t.__locsetrange.lower;\n-      umax = io.__t.__locsetrange.upper;\n-      goto parse_set;\n-\n-    case __IO_CharLoc:\n-      umin = 0;\n-      umax = 0xff;\n-      goto parse_char;\n-    case __IO_CharRangeLoc:\n-      umin = io.__t.__loccharrange.lower;\n-      umax = io.__t.__loccharrange.upper;\n-      goto parse_char;\n-\n-    case __IO_CharVaryingLoc:\n-      if( convcode != DefaultConv )\n-        IOEXCEPTION( TEXTFAIL, CONVCODE_MODE_MISFIT );\n-      slen = io.__t.__loccharstring.string_length;\n-      if( (parsed = limit - actual_index) < slen )\n-        slen = parsed;\n-      else\n-        parsed = slen;  \n-      memcpy( io.__t.__loccharstring.string + 2, \n-              &iostrptr[actual_index], parsed );\n-      MOV2(io.__t.__loccharstring.string,&slen);\n-      actual_index += parsed;\n-      goto check_field_complete;\n-\n-\n-    case __IO_CharStrLoc:\n-      if( convcode != DefaultConv )\n-        IOEXCEPTION( TEXTFAIL, CONVCODE_MODE_MISFIT );\n-      if( actual_index + io.__t.__loccharstring.string_length > limit )\n-        IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_CHARS );\n-      memcpy( io.__t.__loccharstring.string,\n-              &iostrptr[actual_index],\n-              parsed = io.__t.__loccharstring.string_length );\n-      actual_index += parsed;\n-      goto check_field_complete;\n-\n-    case __IO_BitStrLoc:\n-      if( convcode != DefaultConv )\n-        IOEXCEPTION( TEXTFAIL, CONVCODE_MODE_MISFIT );\n-      parsed = parse_bit( limit, io.__t.__loccharstring.string );\n-      if( parsed < io.__t.__loccharstring.string_length )\n-        IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_BOOLS );\n-      goto check_field_complete;\n-\n-    case __IO_LongRealLoc:\n-    case __IO_RealLoc:\n-      switch( convcode )\n-      {\n-      case ScientConv:\n-        parse_scientific( limit, &dval, DBL_MIN, DBL_MAX );\n-        break;\n-      case DefaultConv:\n-        parse_fixedpoint( limit, &dval );\n-        break;\n-      default:\n-        IOEXCEPTION( TEXTFAIL, CONVCODE_MODE_MISFIT );\n-      }\n-      if( io.__descr == __IO_LongRealLoc )\n-        memcpy( io.__t.__loclongreal, &dval, sizeof(double) );\n-      else\n-      {\n-        fval = (float)dval;\n-        MOV4(io.__t.__locreal,&fval);\n-      }\n-      goto check_field_complete;\n-    default:\n-      IOEXCEPTION( TEXTFAIL, INVALID_IO_LIST );\n-    }\n-\n-\n-parse_signed_int: ;\n-    if( convcode == ScientConv )\n-      IOEXCEPTION( TEXTFAIL, CONVCODE_MODE_MISFIT );\n-    parsed = parse_int( limit, dset[convcode], base[convcode], \n-                        &lval.ulong, &sign );\n-    if( sign < 0 )\n-    {\n-      if( lval.ulong > (unsigned long)CH_LONG_MIN )\n-        IOEXCEPTION( TEXTFAIL, INTEGER_RANGE_ERROR );\n-      lval.slong = -lval.ulong;\n-    }\n-    else\n-    {\n-      /* not needed: lval.slong = lval.ulong; */\n-      /* Hack: sign extension for bin/oct/dec if no sign present */\n-      if( convcode != DefaultConv && lval.ulong & (1 << (ilen*8-1)) )\n-      {\n-        if( ilen < 4 )\n-          lval.ulong |= 0xFFFFFFFF << ilen*8;\n-      }\n-      else\n-        if( lval.ulong > (unsigned long)CH_LONG_MAX )\n-          IOEXCEPTION( TEXTFAIL, INTEGER_RANGE_ERROR );\n-    }\n-    if( lval.slong < smin || smax < lval.slong )\n-      IOEXCEPTION( TEXTFAIL, INTEGER_RANGE_ERROR );\n-    goto store_int;\n-\n-parse_unsigned_int: ;\n-    if( convcode == ScientConv )\n-      IOEXCEPTION( TEXTFAIL, CONVCODE_MODE_MISFIT );\n-    parsed = parse_int( limit, dset[convcode], base[convcode],\n-                        &lval.ulong, &sign );\n-    if( sign < 0 ||  lval.ulong < umin || umax < lval.ulong )\n-      IOEXCEPTION( TEXTFAIL, INTEGER_RANGE_ERROR );\n-    goto store_int;\n-\n-parse_set: ;\n-    if( convcode != DefaultConv )\n-      IOEXCEPTION( TEXTFAIL, CONVCODE_MODE_MISFIT );\n-    parsed = parse_set( limit, settabptr, &lval.ulong );\n-    if( lval.ulong < umin || umax < lval.ulong )\n-      IOEXCEPTION( TEXTFAIL, SET_RANGE_ERROR );\n-    goto store_int;\n-\n-store_int: ;\n-    switch( ilen )\n-    {\n-    case 1:\n-      *(unsigned char*)io.__t.__locint = lval.ulong;\n-      break;\n-    case 2:\n-      slen = lval.ulong;\n-      MOV2(io.__t.__locint,&slen);\n-      break;\n-    case 4:\n-      MOV4(io.__t.__locint,&lval.ulong);\n-      break;\n-    default:\n-      IOEXCEPTION( TEXTFAIL, INTERNAL_ERROR );\n-    }\n-    goto check_field_complete;\n-\n-parse_char: ;\n-    if( convcode != DefaultConv )\n-      IOEXCEPTION( TEXTFAIL, CONVCODE_MODE_MISFIT );\n-    if( actual_index >= limit )\n-      IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_CHARS );\n-    curr = iostrptr[actual_index++];\n-    parsed = 1;\n-    if( curr < umin || umax < curr )\n-      IOEXCEPTION( TEXTFAIL, CHAR_RANGE_ERROR );\n-    *io.__t.__locchar = curr;\n-    goto check_field_complete;\n-\n-check_field_complete: ;\n-    actual_index += bypass;    \n-    if( width > parsed )\n-      IOEXCEPTION( TEXTFAIL, INVALID_CHAR );\n-  }\n-}\n-\n-static\n-void inpedit( void )\n-{\n-  int           nchars;\n-\n-  if( dynamicwid ) \n-    clausewidth = get_field_width();\n-\n-  switch( editcode )\n-  { \n-  case SpaceSkip:\n-    nchars = repetition*clausewidth;\n-    if( actual_index + nchars > iostrlen )\n-      IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_EDIT );\n-    for( ; nchars ; nchars-- )\n-      if( iostrptr[actual_index++] != ' ' )\n-        IOEXCEPTION( TEXTFAIL, NO_SPACE_TO_SKIP );\n-    break; \n-\n-  case SkipLeft:\n-    nchars = repetition*clausewidth;\n-    if( (actual_index -= nchars) < 0 )\n-      IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_EDIT );\n-    break;\n-\n-  case SkipRight:\n-    nchars = repetition*clausewidth;\n-    if( (actual_index += nchars) > iostrlen )\n-      IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_EDIT );\n-    break;\n-  \n-  case Tabulation:\n-    if( (actual_index = clausewidth) > iostrlen )\n-      IOEXCEPTION( TEXTFAIL, TEXT_LOC_OVERFLOW );\n-    break;\n-  }\n-}\n-\n-static\n-void outconv( void )\n-{\n-  unsigned long             width;\n-  char                      itembuf[33]; \n-  unsigned long             ulongval;\n-           long             longval;\n-  __tmp_IO_list             io;\n-  __tmp_IO_enum_table_type* etptr;\n-  char*                     itembeg;\n-  unsigned long             itemlen;\n-  double                    doubleval;\n-  int                       de;\n-  int                       sign;\n-  int                       mantdigs;\n-  int                       nid;\n-  int                       nfd;\n-  char*                     expbeg;\n-  int                       explen;\n-  unsigned int              expwid;\n-\n-  while( repetition-- )\n-  {\n-    if( ++iolist_index > iolistlen )\n-      IOEXCEPTION( TEXTFAIL, IOLIST_EXHAUSTED );  \n-\n-    io = *iolistptr++;\n-    width =  dynamicwid ? get_field_width() : clausewidth;\n-\n-    switch( convcode )\n-    {\n-    case DefaultConv:\n-      switch( io.__descr )\n-      {\n-      case __IO_ByteVal:\n-        longval = io.__t.__valbyte; \n-        goto signed_conversion;\n-      case __IO_UByteVal:\n-        ulongval = io.__t.__valubyte; \n-        goto unsigned_conversion;\n-      case __IO_IntVal:\n-        longval = io.__t.__valint; \n-        goto signed_conversion;\n-      case __IO_UIntVal:\n-        ulongval = io.__t.__valuint; \n-        goto unsigned_conversion;\n-      case __IO_LongVal:\n-        longval = io.__t.__vallong; \n-        goto signed_conversion;\n-      case __IO_ULongVal:\n-        ulongval = io.__t.__valulong; \n-        goto unsigned_conversion;\n-\n-      case __IO_BoolVal:\n-        switch( io.__t.__valbool )\n-        {\n-        case 0:\n-          itembeg = \"FALSE\";\n-          itemlen = 5;\n-          goto move_item;\n-        case 1:\n-          itembeg = \"TRUE\";\n-          itemlen = 4;\n-          goto move_item;\n-        default:\n-          IOEXCEPTION( TEXTFAIL, BOOL_CONVERSION_ERROR );\n-        }\n- \n-      case __IO_CharVal:\n-        itembeg = &io.__t.__valchar;\n-        itemlen = 1;\n-        goto move_item;\n-  \n-      case __IO_SetVal:\n-        /* locate name string using set mode name table */\n-        itembeg = 0;\n-        \n-        if( (etptr = io.__t.__valset.name_table) )\n-          while( etptr->name )\n-\t  {\n-            if( etptr->value == io.__t.__valset.value )\n-\t    {\n-              itembeg = etptr->name;\n-              itemlen = strlen( itembeg );\n-              goto move_item;\n-            }\n-            etptr++;\n-          }\n-       IOEXCEPTION( TEXTFAIL, SET_CONVERSION_ERROR ); \n-\n-      case __IO_CharVaryingLoc:\n-        {\n-          unsigned short l;\n-          itembeg = (char*)io.__t.__loccharstring.string;\n-          MOV2(&l,itembeg);\n-          itembeg += 2;\n-          itemlen = l;\n-          goto move_item;\n-        }\n-\n-      case __IO_CharStrLoc:\n-        itembeg = io.__t.__loccharstring.string;\n-        itemlen = io.__t.__loccharstring.string_length;\n-        goto move_item;\n-\n-      case __IO_BitStrLoc:\n-        itemlen = io.__t.__loccharstring.string_length;\n-        itembeg = io.__t.__loccharstring.string;\n-\n-        if( !width )\n-          width = itemlen;\n-\n-        /* check remaining space */\n-        if( actual_index + width > iostrlen )\n-          IOEXCEPTION( TEXTFAIL, TEXT_LOC_OVERFLOW );\n-\n-        if( itemlen == width )\n-          bitput( iostrptr + actual_index, itembeg, 0, itemlen );\n-        else\n-          if( itemlen < width )\n-            if( leftadjust )\n-              memset( bitput( iostrptr + actual_index, itembeg, 0, itemlen )\n-                      + itemlen,\n-                      paddingchar, width - itemlen );\n-            else\n-              bitput( memset( iostrptr + actual_index, \n-                              paddingchar, width - itemlen )\n-                      + width - itemlen,\n-                      itembeg, itemlen - width, itemlen );\n-          else\n-            if( overflowev )\n-              memset( iostrptr + actual_index, '*', width );\n-            else\n-              if( leftadjust )\n-                bitput( iostrptr + actual_index, itembeg, 0, width );\n-              else\n-                bitput( iostrptr + actual_index, itembeg, \n-                        itemlen - width, itemlen );\n-        goto adjust_index;\n-\n-      case __IO_RealVal:\n-        doubleval = io.__t.__valreal;\n-        mantdigs = FMANTDIGS;\n-        goto fixed_point_conversion;\n-      case __IO_LongRealVal:\n-        doubleval = io.__t.__vallongreal;\n-        mantdigs = DBL_DIG;\n-        goto fixed_point_conversion;\n-        break;\n-\n-      default:\n-        IOEXCEPTION( TEXTFAIL, INVALID_IO_LIST );\n-      }\n-\n-    case HexConv:\n-    case OctalConv:\n-    case BinaryConv:\n-      switch( io.__descr )\n-      {\n-      case __IO_ByteVal:\n-      case __IO_UByteVal:\n-        ulongval = io.__t.__valubyte; \n-        break;\n-      case __IO_IntVal:\n-      case __IO_UIntVal:\n-        ulongval = io.__t.__valuint; \n-        break;\n-      case __IO_LongVal:\n-      case __IO_ULongVal:\n-        ulongval = io.__t.__valulong; \n-        break;\n-      default:\n-        IOEXCEPTION( TEXTFAIL, CONVCODE_MODE_MISFIT );\n-      }\n-      itembeg = myultoa( ulongval, itembuf, base[convcode] );\n-      itemlen = strlen( itembeg );\n-      goto move_item;\n-  \n-    case ScientConv:\n-      switch( io.__descr )\n-      {\n-      case __IO_RealVal:\n-        doubleval = io.__t.__valreal;\n-        mantdigs = FMANTDIGS;\n-        if( !fractiondef )\n-          fractionwidth = FMANTDIGS - 1;\n-        goto scientific_conversion;\n-      case __IO_LongRealVal:\n-        doubleval = io.__t.__vallongreal;\n-        mantdigs = DBL_DIG;\n-        if( !fractiondef )\n-          fractionwidth = DBL_DIG - 1;\n-        goto scientific_conversion;\n-        break;\n-      default:\n-        IOEXCEPTION( TEXTFAIL, CONVCODE_MODE_MISFIT );\n-      }\n-    }\n-\n-fixed_point_conversion: ;\n-    itembeg = mydtoa( doubleval, mantdigs, &de, &sign );\n-    if( fractiondef && de >= -fractionwidth - 1\n-        && -fractionwidth > de - mantdigs )\n-      itembeg = dround( itembeg, de + fractionwidth + 1, &de );\n-\n-    nid = de >= 0 ? de : 0;\n-    nfd = fractiondef ? fractionwidth \n-                      : ( de + 1 - mantdigs > 0 ? 0 : mantdigs - de - 1 );\n-    itemlen = ( sign < 0 ? 1 : 0 ) + 2 + nid + nfd;\n-#if _TEXTIO_DEBUG_\n-printf( \"fixed item length %d\\n\", itemlen );\n-#endif\n-    if( !width )\n-      width = itemlen;\n-#if _TEXTIO_DEBUG_\n-printf( \"fixed item width %d\\n\", width );\n-#endif\n-    /* check remaining space */\n-    if( actual_index + width > iostrlen )\n-      IOEXCEPTION( TEXTFAIL, TEXT_LOC_OVERFLOW );\n-\n-    if( itemlen == width )\n-      fixput( iostrptr + actual_index, itembeg, \n-              1, itemlen, sign, de, de - mantdigs, nid, nfd );\n-    else\n-      if( itemlen < width )\n-        if( leftadjust )\n-          memset( fixput( iostrptr + actual_index, itembeg, \n-                          1, itemlen, sign, de, de - mantdigs, nid, nfd )\n-                  + itemlen,\n-                  paddingchar, width - itemlen );\n-        else\n-          fixput( memset( iostrptr + actual_index, \n-                          paddingchar, width - itemlen )\n-                  + width - itemlen,\n-                  itembeg, 1, itemlen, sign, de, de - mantdigs, nid, nfd );\n-      else\n-        if( overflowev )\n-          memset( iostrptr + actual_index, '*', width );\n-        else\n-          if( leftadjust )\n-            fixput( iostrptr + actual_index, itembeg, \n-                    1, width, sign, de, de - mantdigs, nid, nfd );\n-          else\n-            fixput( iostrptr + actual_index, itembeg, \n-                    itemlen - width + 1, itemlen,\n-                    sign, de, de - mantdigs, nid, nfd );\n-    goto adjust_index;\n-\n-scientific_conversion: ;\n-    itembeg = mydtoa( doubleval, mantdigs, &de, &sign );\n-\n-    if( fractiondef && fractionwidth < mantdigs )\n-      itembeg = dround( itembeg, fractionwidth + 1, &de );\n-\n-    expbeg = myultoa( abs(de), itembuf, 10 );\n-    explen = strlen( expbeg );\n-\n-    expwid = explen > exponentwidth ? explen : exponentwidth;\n-    itemlen = ( sign < 0 ? 1 : 0 ) + 2 + fractionwidth + 2 + expwid;\n-#if _TEXTIO_DEBUG_\n-printf( \"floating item length %d, fraction %d, exponent %d\\n\", \n-        itemlen, fractionwidth, expwid );\n-#endif\n-    if( width == 0 )\n-      width = itemlen;\n-#if _TEXTIO_DEBUG_\n-printf( \"floating item width %d\\n\", width );\n-#endif\n-    /* check remaining space */\n-    if( actual_index + width > iostrlen )\n-      IOEXCEPTION( TEXTFAIL, TEXT_LOC_OVERFLOW );\n-\n-    if( itemlen == width )\n-      sciput( iostrptr + actual_index, itembeg, expbeg, \n-              1, itemlen, sign, de, expwid );\n-    else\n-      if( itemlen < width )\n-        if( leftadjust )\n-          memset( sciput( iostrptr + actual_index, itembeg, expbeg,\n-                          1, itemlen, sign, de, expwid )\n-                  + itemlen,\n-                  paddingchar, width - itemlen );\n-        else\n-          sciput( memset( iostrptr + actual_index, \n-                          paddingchar, width - itemlen )\n-                  + width - itemlen,\n-                  itembeg, expbeg, 1, itemlen, sign, de, expwid );\n-      else\n-        if( overflowev )\n-          memset( iostrptr + actual_index, '*', width );\n-        else\n-          if( leftadjust )\n-            sciput( iostrptr + actual_index, itembeg, expbeg,\n-                    1, width, sign, de, expwid );\n-          else\n-            sciput( iostrptr + actual_index, itembeg, expbeg,\n-                    itemlen - width + 1, itemlen,\n-                    sign, de, expwid );\n-    goto adjust_index;\n-\n-signed_conversion: ;   \n-    if( longval >= 0 )\n-      itembeg = myultoa( longval, itembuf, 10 );\n-    else\n-    {\n-      itembuf[0] = '-';\n-      myultoa( -longval, itembuf+1, 10 );\n-      itembeg = itembuf;\n-    }  \n-    itemlen = strlen( itembeg );\n-    goto move_item;\n-\n-unsigned_conversion: ;\n-    itembeg = myultoa( ulongval, itembuf, 10 );\n-    itemlen = strlen( itembeg );\n-    goto move_item;\n-\n-move_item: ;\n-    if( !width )\n-      width = itemlen;\n-\n-    /* check remaining space */\n-    if( actual_index + width > iostrlen )\n-      IOEXCEPTION( TEXTFAIL, TEXT_LOC_OVERFLOW );\n-\n-    /* move item, filling or truncating or overflow-evidencing */\n-    if( itemlen == width )\n-      memcpy( iostrptr + actual_index, itembeg, itemlen );\n-    else\n-      if( itemlen < width )\n-        if( leftadjust )\n-          memset( memcpy( iostrptr + actual_index, itembeg, itemlen )\n-                  + itemlen,\n-                  paddingchar, width - itemlen );\n-        else\n-          memcpy( memset( iostrptr + actual_index, \n-                          paddingchar, width - itemlen )\n-                  + width - itemlen,\n-                  itembeg, itemlen );\n-      else\n-        if( overflowev )\n-          memset( iostrptr + actual_index, '*', width );\n-        else\n-          if( leftadjust )\n-            memcpy( iostrptr + actual_index, itembeg, width );\n-          else\n-            memcpy( iostrptr + actual_index, \n-                    itembeg + itemlen - width, width );\n-\n-  /*\n-   *  adjust.\n-   */\n-adjust_index: ;\n-  actual_index += width;\n-  if( actual_index > maximum_index )\n-    maximum_index = actual_index;\n-  }\n-}\n-\n-static\n-void outedit( void )\n-{\n-  int nchars;\n-\n-  if( dynamicwid )\n-    clausewidth = get_field_width();\n-  switch( editcode )\n-  { \n-  case SpaceSkip:\n-    nchars = repetition*clausewidth;\n-    if( actual_index + nchars > iostrlen )\n-      IOEXCEPTION( TEXTFAIL, TEXT_LOC_OVERFLOW );\n-    memset( iostrptr + actual_index, ' ', nchars );\n-    actual_index += nchars;\n-    if( actual_index > maximum_index )\n-      maximum_index = actual_index;\n-    break;\n-\n-  case SkipLeft:\n-    nchars = repetition*clausewidth;\n-    if(  actual_index - nchars < 0 )\n-      IOEXCEPTION( TEXTFAIL, TEXT_LOC_OVERFLOW );\n-    actual_index -= nchars;\n-    break;\n-\n-  case SkipRight:\n-    nchars = repetition*clausewidth;\n-    if( actual_index + nchars > iostrlen )\n-      IOEXCEPTION( TEXTFAIL, TEXT_LOC_OVERFLOW );\n-    actual_index += nchars;\n-    if( actual_index > maximum_index )\n-    {\n-      memset( iostrptr + maximum_index, ' ', actual_index - maximum_index );\n-      maximum_index = actual_index;\n-    }\n-    break;\n-  \n-  case Tabulation:\n-    if( clausewidth >= iostrlen )\n-      IOEXCEPTION( TEXTFAIL, TEXT_LOC_OVERFLOW );\n-    actual_index = clausewidth;\n-    if( actual_index > maximum_index )\n-    {\n-      memset( iostrptr + maximum_index, ' ', actual_index - maximum_index );\n-      maximum_index = actual_index;\n-    }  \n-    break;\n-  }\n-}\n-\n-\n-static\n-void inpioctrl( void )\n-{\n-  unsigned short hlen;\n-  if( !textptr )\n-    IOEXCEPTION( TEXTFAIL, IO_CONTROL_NOT_VALID );\n-  if( iocode != EndPage )\n-  {\n-    jmp_buf ioerror;\n-    unsigned long info;\n-\n-    if (textptr->access_sub->association)\n-      {\n-\tif( (info = setjmp( ioerror )) )\n-\t  IOEXCEPTION( info>>16, info & 0xffff );    \n-\twhile( repetition-- )\n-\t  {\n-\t    __readrecord( textptr->access_sub, textindex,\n-\t\t\t (char*)textptr->text_record, \n-\t\t\t __FILE__, __LINE__ );\n-\t    actual_index = 0;\n-\t    MOV2(&hlen,&textptr->text_record->len);\n-\t    iostrlen = hlen;\n-\t  }\n-      }\n-    else\n-      IOEXCEPTION (NOTCONNECTED, IS_NOT_CONNECTED);\n-  }\n-}\n-\n-/* specify pre/post in the order \"/+-?!\" */\n-static\n-char* pre_char =  \"\\0\\f\\0\\r\\0\"; /* Z.200: \"\\n\\f\\0\\n\\0\" */\n-static\n-char* post_char = \"\\n\\n\\r\\0\\0\"; /* Z.200: \"\\r\\r\\r\\0\\0\" */\n-\n-static\n-void outioctrl( void )\n-{\n-  Association_Mode* assoc;\n-  unsigned short hlen;\n-  if( !textptr )\n-    IOEXCEPTION( TEXTFAIL, IO_CONTROL_NOT_VALID );\n-  if( (assoc = textptr->access_sub->association) )\n-  {\n-    jmp_buf ioerror;\n-    unsigned long info;\n-    if( (info = setjmp( ioerror )) )\n-      IOEXCEPTION( info>>16, info & 0xffff );    \n-\n-    while( repetition-- )\n-    {\n-      if( iocode != EndPage )\n-      {\n-        if( TEST_FLAG( assoc, IO_FIRSTLINE ) )\n-        {\n-          CLR_FLAG( assoc, IO_FIRSTLINE );\n-          assoc->ctl_pre = '\\0';\n-        }\n-        else\n-        {\n-          if( TEST_FLAG( assoc, IO_FORCE_PAGE ) )\n-          {\n-            CLR_FLAG( assoc, IO_FORCE_PAGE );\n-            assoc->ctl_pre = '\\f';\n-\t  }\n-          else\n-            assoc->ctl_pre = pre_char[iocode];\n-        }\n-        assoc->ctl_post = post_char[iocode];\n-        hlen = actual_index;\n-        MOV2(&textptr->text_record->len,&hlen);\n-        __writerecord( textptr->access_sub, textindex,\n-                       (char*)textptr->text_record,\n-                       textptr->text_record->len,\n-                       __FILE__, __LINE__ );\n-        hlen = actual_index = 0;\n-        MOV2(&textptr->text_record->len,&hlen);\n-      }\n-      else if( !TEST_FLAG( textptr, IO_FIRSTLINE ) )\n-\tSET_FLAG( textptr, IO_FORCE_PAGE );\n-      assoc->ctl_pre = assoc->ctl_post = '\\0';\n-    }\n-  }\n-  else\n-    IOEXCEPTION (NOTCONNECTED, IS_NOT_CONNECTED);\n-}\n-\n-static\n-void (**actionptr)( void );\n-static\n-void (*readactions[])( void ) = { inpconv, inpedit, inpioctrl };\n-static\n-void (*writeactions[])( void ) = { outconv, outedit, outioctrl };\n-\n-\n-static\n-void emitstr( char* begtxt, char* endtxt )\n-{  \n-  char c;\n-  int  nchars = endtxt - begtxt;\n-  if( actual_index + nchars > iostrlen )\n-      IOEXCEPTION( TEXTFAIL, TEXT_LOC_OVERFLOW );\n-  memcpy( iostrptr + actual_index, begtxt, nchars );\n-  actual_index += nchars;\n-  if( actual_index > maximum_index )\n-    maximum_index = actual_index;\n-}\n-\n-static\n-void scanstr( char* begtxt, char* endtxt )\n-{  \n-  int  nchars = endtxt - begtxt;\n-  if( actual_index + nchars > iostrlen )\n-    IOEXCEPTION( TEXTFAIL, NO_CHARS_FOR_TEXT );\n-  if( strncmp( iostrptr + actual_index, begtxt, nchars ) )\n-    IOEXCEPTION( TEXTFAIL, FORMAT_TEXT_MISMATCH );\n-  actual_index += nchars;\n-}\n-\n-void (*ftextptr) ( char*, char* );\n-\n-static\n-formatexit_t scanformcont( char* fcs, int len,\n-                           char** fcsptr, int* lenptr )\n-{\n-  char          curr; \n-  fcsstate_t    state  = FormatText;\n-  unsigned long buf;\n-  int           dig;\n-  acttype_t     action;\n-  char*         begtxt = fcs;\n-\n-  while( len-- )\n-  {\n-    curr = *fcs++;\n-    switch( state )\n-    {\n-    case FormatText: \n-      if( curr == '%' )\n-      {\n-        ftextptr( begtxt, fcs-1 );\n-        state = FirstPercent;\n-      }\n-      break;\n-\n-after_first_percent: ;\n-    case FirstPercent: \n-      if( curr == '%' )\n-      {\n-        state = FormatText;\n-        begtxt = fcs - 1;\n-        break;\n-      }\n-      if( curr == ')' )\n-      {\n-        *lenptr = len;\n-        *fcsptr = fcs;\n-        return EndAtParen;\n-      }\n-      if( isDEC(curr) )\n-      {\n-        state = RepFact;\n-        repetition = curr - '0';\n-        break;\n-      }\n-\n-      repetition = 1; \n-\n-test_for_control_codes: ;\n-      if( isCVC(curr) )\n-      {\n-        state = ConvClause;\n-        action = ConvAct;\n-        convcode = strchr( CONVERSIONCODES, curr ) - CONVERSIONCODES;\n-        leftadjust = False;\n-        overflowev = False;\n-        dynamicwid = False;\n-        paddingdef = False;\n-        paddingchar = ' ';\n-        fractiondef = False;\n-        /* fractionwidth = 0; default depends on mode ! */\n-        exponentdef = False;\n-        exponentwidth = 3;\n-        clausewidth = 0;        \n-        break;        \n-      }\n-      if( isEDC(curr) )\n-      {\n-        state = EditClause;\n-        action = EditAct;\n-        editcode = strchr( EDITCODES, curr ) - EDITCODES;\n-        dynamicwid = False;\n-        clausewidth = editcode == Tabulation ? 0 : 1;        \n-        break;        \n-      }\n-      if( isIOC(curr) )\n-      {\n-        state = ClauseEnd;\n-        action = IOAct;\n-        iocode = strchr( IOCODES, curr ) - IOCODES;\n-        break;        \n-      }\n-      if( curr == '(' )\n-      {\n-        unsigned long times = repetition;\n-        int  cntlen;\n-        char* cntfcs;         \n-        while( times-- )\n-        {        \n-          if( scanformcont( fcs, len, &cntfcs, &cntlen ) != EndAtParen )\n-            IOEXCEPTION( TEXTFAIL, UNMATCHED_OPENING_PAREN );\n-        }\n-        fcs = cntfcs;\n-        len = cntlen;\n-        state  = FormatText;\n-        begtxt = fcs;\n-        break;\n-      }\n-      IOEXCEPTION( TEXTFAIL, BAD_FORMAT_SPEC_CHAR );\n-\n-    case RepFact:\n-      if( isDEC(curr) )\n-      {\n-        dig = curr - '0';\n-        if( repetition > (ULONG_MAX - dig)/10 )\n-          IOEXCEPTION( TEXTFAIL, REPFAC_OVERFLOW );\n-        repetition = repetition*10 + dig;\n-        break;\n-      }\n-      goto test_for_control_codes;\n-\n-    case ConvClause:\n-      if( isDEC(curr) )\n-      {\n-        state = ClauseWidth;\n-        clausewidth = curr - '0';\n-        break;\n-      }\n-      if( curr == 'L' )  \n-      {\n-        if( leftadjust ) \n-          IOEXCEPTION( TEXTFAIL, DUPLICATE_QUALIFIER );\n-        leftadjust = True;\n-        break;\n-      }\n-      if( curr == 'E' )\n-      {\n-        if( overflowev ) \n-          IOEXCEPTION( TEXTFAIL, DUPLICATE_QUALIFIER );\n-        overflowev = True;\n-        break;\n-      }\n-      if( curr == 'P' )\n-      {\n-        if( paddingdef ) \n-          IOEXCEPTION( TEXTFAIL, DUPLICATE_QUALIFIER );\n-        paddingdef = True;\n-        state = CatchPadding;\n-        break;\n-      }\n-\n-test_for_variable_width: ;\n-      if( curr == 'V' )\n-      {\n-        dynamicwid = True;\n-        state = AfterWidth;\n-        break;\n-      }\n-      goto test_for_fraction_width;\n-\n-    case ClauseWidth:\n-      if( isDEC(curr) )\n-      {\n-        dig = curr - '0';\n-        if( clausewidth > (ULONG_MAX - dig)/10 )\n-          IOEXCEPTION( TEXTFAIL, CLAUSE_WIDTH_OVERFLOW );\n-        clausewidth = clausewidth*10 + dig;\n-        break;\n-      }\n-      /* fall through */\n-\n-test_for_fraction_width: ;\n-    case AfterWidth:\n-      if( curr == '.' )\n-      {\n-        if( convcode != DefaultConv && convcode != ScientConv )\n-          IOEXCEPTION( TEXTFAIL, NO_FRACTION );\n-        fractiondef = True;\n-        state = FractWidth;\n-        break;\n-      }\n-      goto test_for_exponent_width;\n-\n-    case FractWidth:\n-      if( isDEC( curr ) )\n-      {\n-        state = FractWidthCont;\n-        fractionwidth = curr - '0';\n-        break;\n-      }\n-      else\n-        IOEXCEPTION( TEXTFAIL, NO_FRACTION_WIDTH );\n-\n-    case FractWidthCont:\n-      if( isDEC( curr ) )\n-      {\n-        dig = curr - '0';\n-        if( fractionwidth > (ULONG_MAX - dig)/10 )\n-          IOEXCEPTION( TEXTFAIL, FRACTION_WIDTH_OVERFLOW );\n-        fractionwidth = fractionwidth*10 + dig;\n-        break;\n-      }\n-             \n-test_for_exponent_width: ;\n-      if( curr == ':' )\n-      {\n-        if( convcode != ScientConv )\n-          IOEXCEPTION( TEXTFAIL, NO_EXPONENT );\n-        exponentdef = True;\n-        state = ExpoWidth;\n-        break;\n-      }\n-      goto test_for_final_percent;\n-\n-    case ExpoWidth:\n-      if( isDEC( curr ) )\n-      {\n-        state = ExpoWidthCont;\n-        exponentwidth = curr - '0';\n-        break;\n-      }\n-      else\n-        IOEXCEPTION( TEXTFAIL, NO_EXPONENT_WIDTH );\n-\n-    case ExpoWidthCont:\n-      if( isDEC( curr ) )\n-      {\n-        dig = curr - '0';\n-        if( exponentwidth > (ULONG_MAX - dig)/10 )\n-          IOEXCEPTION( TEXTFAIL, EXPONENT_WIDTH_OVERFLOW );\n-        exponentwidth = exponentwidth*10 + dig;\n-        break;\n-      }\n-      /* fall through  */\n-\n-test_for_final_percent: ;\n-    case ClauseEnd:\n-      if( curr == '%' )\n-      {\n-        state = LastPercent;\n-        break;\n-      }\n- \n-  do_the_action: ;\n-      actionptr[action]();\n-      state = FormatText;\n-      begtxt = fcs - 1;\n-      break;\n-\n-    case CatchPadding:\n-      paddingchar = curr;\n-      state = ConvClause;\n-      break;\n-\n-    case EditClause:\n-      if( isDEC(curr) )\n-      {\n-        state = ClauseWidth;\n-        clausewidth = curr - '0';\n-        break;\n-      }\n-      goto test_for_variable_width; \n-\n-    case LastPercent:\n-      actionptr[action]();\n-      if( curr == '.' )\n-      {\n-        state = FormatText;\n-        begtxt = fcs;\n-        break;\n-      }\n-      goto after_first_percent;\n-\n-    default:\n-      IOEXCEPTION( TEXTFAIL, INTERNAL_ERROR );\n-    }\n-  }\n-  switch( state )\n-  {\n-  case FormatText:\n-    ftextptr( begtxt, fcs );\n-    break;\n-  case FirstPercent: \n-  case LastPercent:\n-  case RepFact:\n-  case FractWidth:\n-  case ExpoWidth:\n-    IOEXCEPTION( TEXTFAIL, BAD_FORMAT_SPEC_CHAR );\n-  case CatchPadding:\n-    IOEXCEPTION( TEXTFAIL, NO_PAD_CHAR );\n-  default:\n-    actionptr[action]();\n-  }\n-\n-  *lenptr = len;\n-  *fcsptr = fcs;\n-  return NormalEnd;\n-}\n-\n-static\n-void\n-__read_format (char*           fmtptr,\n-               int             fmtlen,\n-               __tmp_IO_list*  ioptr,\n-               int             iolen,\n-               void*           inpptr,\n-               int             inplen )\n-{\n-  formatexit_t res;\n-  unsigned short l;\n-\n-  iostrptr = (char*)inpptr;\n-  iostrlen = inplen;\n-\n-  /* initialisation */\n-  iolist_index = 0;\n-  iolistptr    = ioptr; \n-  iolistlen    = iolen;\n-  \n-  actionptr = readactions;\n-  ftextptr = scanstr;\n-     \n-  if( (res = scanformcont( fmtptr, fmtlen, &fmtptr, &fmtlen )) == EndAtParen )\n-    IOEXCEPTION( TEXTFAIL, UNMATCHED_CLOSING_PAREN );\n-\n-  if( iolist_index != iolen )\n-    IOEXCEPTION( TEXTFAIL, EXCESS_IOLIST_ELEMENTS );\n-\n-  return;\n-}\n-\n-void\n-__readtext_f( Text_Mode*      the_text_loc,\n-              signed long     the_index,\n-              char*           fmtptr,\n-              int             fmtlen,\n-              __tmp_IO_list*  ioptr,\n-              int             iolen,\n-              char*           file,\n-              int             line )\n-{\n-  unsigned long info;\n-\n-  if( (info = setjmp( __io_exception )) )\n-    CHILLEXCEPTION( file, line, info>>16, info & 0xffff );\n-\n-  textptr       = the_text_loc;\n-  textrecptr    = textptr->text_record;\n-  actual_index  = textptr->actual_index;\n-  textindex     = the_index;\n-\n-  __read_format ( fmtptr, fmtlen, ioptr, iolen,\n-                  (char*)textrecptr + 2, textptr->text_record->len );\n-  textptr->actual_index = actual_index;\n-}\n-\n-void\n-__readtext_s( void*           string_ptr,\n-              int             string_len,\n-              char*           fmtptr,\n-              int             fmtlen,\n-              __tmp_IO_list*  ioptr,\n-              int             iolen,\n-              char*           file,\n-              int             line )\n-{\n-  int info;\n-\n-  if( (info = setjmp( __io_exception )) )\n-    CHILLEXCEPTION( file, line, info>>16, info & 0xffff );\n-\n-  textptr      = NULL;\n-  actual_index = 0;\n-\n-  __read_format ( fmtptr, fmtlen,  ioptr, iolen, string_ptr, string_len );\n-}\n-\n-static\n-void\n-__write_format (char*           fmtptr,\n-                int             fmtlen,\n-                __tmp_IO_list*  ioptr,\n-                int             iolen,\n-                void*           outptr,\n-                int             outlen )\n-{\n-  formatexit_t res;\n-  unsigned short l;\n-\n-  /* initialisation */\n-  maximum_index = actual_index;\n-  iolist_index = 0;\n-  \n-  actionptr = writeactions;\n-  ftextptr  = emitstr;\n-  iolistptr = ioptr; \n-  iolistlen = iolen;\n-  iostrptr  = (char *)outptr + 2;\n-  iostrlen  = outlen;\n-\n-  if( (res = scanformcont( fmtptr, fmtlen, &fmtptr, &fmtlen )) == EndAtParen )\n-    IOEXCEPTION( TEXTFAIL, UNMATCHED_CLOSING_PAREN );\n-\n-  if( iolist_index != iolen )\n-    IOEXCEPTION( TEXTFAIL, EXCESS_IOLIST_ELEMENTS );\n-\n-  /* set length of output string */\n-#if _TEXTIO_DEBUG_\n-  printf( \"maximum index = %d\\n\", maximum_index );\n-#endif\n-  l = maximum_index;\n-  MOV2(outptr,&l);\n-  return;\n-}\n-\n-void\n-__writetext_f( Text_Mode*      the_text_loc,\n-               signed long     the_index,\n-               char*           fmtptr,\n-               int             fmtlen,\n-               __tmp_IO_list*  ioptr,\n-               int             iolen,\n-               char*           file,\n-               int             line )\n-{\n-  int info;\n-\n-  if( (info = setjmp( __io_exception )) )\n-    CHILLEXCEPTION( file, line, info>>16, info & 0xffff );\n-\n-  textptr       = the_text_loc;\n-  textrecptr    = the_text_loc->text_record;\n-  textindex     = the_index;\n-  iolistptr     = ioptr; \n-  iolistlen     = iolen;\n-\n-  actual_index = textptr->actual_index;\n-  __write_format ( fmtptr, fmtlen, ioptr, iolen,\n-                   textrecptr, textptr->access_sub->reclength - 2 );\n-  textptr->actual_index = actual_index;\n-}\n-\n-void\n-__writetext_s( void*           string_ptr,\n-               int             string_len,\n-               char*           fmtptr,\n-               int             fmtlen,\n-               __tmp_IO_list*  ioptr,\n-               int             iolen,\n-               char*           file,\n-               int             line )\n-{\n-  int info;\n-\n-  if( (info = setjmp( __io_exception )) )\n-    CHILLEXCEPTION( file, line, info>>16, info & 0xffff );\n-\n-  textptr      = NULL;\n-  actual_index = 0;\n-\n-  __write_format ( fmtptr, fmtlen, ioptr, iolen, string_ptr, string_len );\n-}"}, {"sha": "d70cfaa79b7a7232d1f9520df5c9dc731501a343", "filename": "libchill/format.h", "status": "removed", "additions": 0, "deletions": 79, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fformat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fformat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fformat.h?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,79 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#ifndef _format_h_\n-#define _format_h_\n-\n-#include \"iomodes.h\"\n-#include \"fileio.h\"\n-\n-extern Text_Mode __stdin_text;\n-extern Text_Mode __stdout_text;\n-extern Text_Mode __stderr_text;\n-\n-void\n-__readtext_f( Text_Mode*      TextLoc,\n-              signed long     Index,\n-              char*           fmtptr,\n-              int             fmtlen,\n-              __tmp_IO_list*  ioptr,\n-              int             iolen,\n-              char*           file,\n-              int             line );\n-\n-void\n-__readtext_s( void*           string_ptr,\n-              int             string_len,\n-              char*           fmtptr,\n-              int             fmtlen,\n-              __tmp_IO_list*  ioptr,\n-              int             iolen,\n-              char*           file,\n-              int             line );\n-\n-void\n-__writetext_f( Text_Mode*      Text_Loc,\n-               signed long     Index,\n-               char*           fmtptr,\n-               int             fmtlen,\n-               __tmp_IO_list*  ioptr,\n-               int             iolen,\n-               char*           file,\n-               int             line );\n-\n-void\n-__writetext_s( void*           string_ptr,\n-               int             string_len,\n-               char*           fmtptr,\n-               int             fmtlen,\n-               __tmp_IO_list*  ioptr,\n-               int             iolen,\n-               char*           file,\n-               int             line );\n-\n-#endif _format_h_"}, {"sha": "47ee5154f5c457bf3041fed94b3a1dbf7fdab576", "filename": "libchill/getassoc.c", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fgetassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fgetassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fgetassoc.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,45 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-Association_Mode*\n-__getassociation( void* the_transfer, char* file, int line )\n-{\n-  Access_Mode* the_access;\n-\n-  if( !the_transfer )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ACCESS );\n-\n-  if( TEST_FLAG((Text_Mode*)the_transfer, IO_TEXTLOCATION ))\n-    the_access = ((Text_Mode*)the_transfer)->access_sub;\n-  else\n-    the_access = (Access_Mode*)the_transfer;\n-\n-  return the_access->association;\n-}"}, {"sha": "7094e2bcae44b5c39c3fb52ac3a2070c56e462d7", "filename": "libchill/gettextaccess.c", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fgettextaccess.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fgettextaccess.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fgettextaccess.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,39 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-Access_Mode*\n-__gettextaccess( Text_Mode* the_text, char* file, int line )\n-{\n-  if( !the_text )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_TEXT );\n-\n-  return the_text->access_sub;\n-}\n-"}, {"sha": "f6f442b9c360326fb4491e2c2c9962d1cd6ed7ec", "filename": "libchill/gettextindex.c", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fgettextindex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fgettextindex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fgettextindex.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,38 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-unsigned long\n-__gettextindex( Text_Mode* the_text, char* file, int line )\n-{\n-  if( !the_text )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_TEXT );\n-\n-  return the_text->actual_index;\n-}"}, {"sha": "00c9af7e4dc4f737b7334a8c865a477bf73b0e1e", "filename": "libchill/gettextrecord.c", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fgettextrecord.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fgettextrecord.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fgettextrecord.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,38 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-VarString*\n-__gettextrecord( Text_Mode* the_text, char* file, int line )\n-{\n-  if( !the_text )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_TEXT );\n-\n-  return the_text->text_record;\n-}"}, {"sha": "f1feb5c8e8dd042b08e005ca7dba6857814613ec", "filename": "libchill/getusage.c", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fgetusage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fgetusage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fgetusage.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,48 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-Usage_Mode\n-__getusage( void* the_transfer, char* file, int line )\n-{\n-  Access_Mode* the_access;\n-\n-  if( !the_transfer )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ACCESS );\n-\n-  if( TEST_FLAG((Text_Mode*)the_transfer, IO_TEXTLOCATION ))\n-    the_access = ((Text_Mode*)the_transfer)->access_sub;\n-  else\n-    the_access = (Access_Mode*)the_transfer;\n-\n-  if( !the_access->association )\n-    CHILLEXCEPTION( file, line, NOTCONNECTED, IS_NOT_CONNECTED );\n-  return the_access->association->usage;\n-}\n-"}, {"sha": "2d776ac4f354dcdcf6932f2468db40c7a21b2fa7", "filename": "libchill/inbitstr.c", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Finbitstr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Finbitstr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Finbitstr.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,81 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-extern void __cause_ex1 (char *exname, char *file, int lineno);\n-\n-/*\n- * function __inbitstring\n- *\n- * parameters:\n- *\tbitno\t\tbit number within set\n- *\tpowerset\tthe powerset\n- *\tbitlength\tlength of powerset in bits\n- *      minval          number of lowest bit stored\n- *\tfname\t\tfilename of caller\n- *\tlineno\t\tlinenumber of caller\n- *\n- * returns:\n- *\tint\t\t1 .. found\n- *\t\t\t0 .. not found\n- *\n- * exceptions:\n- *  rangefail\n- *\n- * abstract:\n- *  checks if a given value is included in a bitstring\n- *\n- */\n-int\n-__inbitstring (bitno, powerset, bitlength, minval, fname, lineno)\n-     unsigned long  bitno;\n-     SET_WORD      *powerset;\n-     unsigned long  bitlength;\n-     long           minval;\n-     char          *fname;\n-     int            lineno;\n-    \n-{\n-  if (powerset == NULL\n-      || bitno < minval \n-      || (bitno - minval) >= bitlength)\n-    __cause_ex1 (\"rangefail\", fname, lineno);\n-\n-  bitno -= minval;\n-  if (bitlength <= SET_CHAR_SIZE)\n-    return GET_BIT_IN_CHAR (*((SET_CHAR *)powerset), bitno);\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    return GET_BIT_IN_SHORT (*((SET_SHORT *)powerset), bitno);\n-  else\n-    return GET_BIT_IN_WORD (powerset[bitno / SET_WORD_SIZE],\n-\t\t\t    bitno % SET_WORD_SIZE);\n-}"}, {"sha": "20cd7100f8218f6e19545266a0451e030becf8ab", "filename": "libchill/indexable.c", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Findexable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Findexable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Findexable.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,39 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-Boolean\n-__indexable( Association_Mode* the_assoc, char* file, int line )\n-{\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-  if( !TEST_FLAG(the_assoc, IO_ISASSOCIATED) )\n-    CHILLEXCEPTION( file, line, NOTASSOCIATED, IS_NOT_ASSOCIATED );\n-  return TEST_FLAG(the_assoc, IO_INDEXABLE) ? True : False;\n-}"}, {"sha": "d412b23d9407ca4b3d6b3d2a43abdd6237e84b05", "filename": "libchill/inps.c", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Finps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Finps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Finps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,72 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __inpowerset\n- *\n- * parameters:\n- *\tbitno\t\tbit number within set\n- *\tpowerset\tthe powerset\n- *\tbitlength\tlength of powerset in bits\n- *      minval          number of lowest bit stored\n- *\n- * returns:\n- *\tint\t\t1 .. found\n- *\t\t\t0 .. not found\n- *\n- * exceptions:\n- *  rangefail\n- *\n- * abstract:\n- *  checks if a given value is included in a powerset\n- *\n- */\n-int\n-__inpowerset (bitno, powerset, bitlength, minval)\n-     unsigned long  bitno;\n-     SET_WORD      *powerset;\n-     unsigned long  bitlength;\n-     long           minval;\n-{\n-  if (bitno < minval || (bitno - minval) >= bitlength)\n-    return 0;\n-    \n-  bitno -= minval;\n-  if (bitlength <= SET_CHAR_SIZE)\n-    return GET_BIT_IN_CHAR (*((SET_CHAR *)powerset), bitno);\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    return GET_BIT_IN_SHORT (*((SET_SHORT *)powerset), bitno);\n-  else\n-    return GET_BIT_IN_WORD (powerset[bitno / SET_WORD_SIZE],\n-\t\t\t    bitno % SET_WORD_SIZE);\n-}"}, {"sha": "7cd10f52d0bb3430068d3fbbd35d8f80c742b210", "filename": "libchill/inttime.c", "status": "removed", "additions": 0, "deletions": 93, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Finttime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Finttime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Finttime.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,93 +0,0 @@\n-/* Implement timing-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <time.h>\n-\n-typedef struct\n-{\n-  void          *p;\n-  unsigned long len;\n-} Descr;\n-\n-typedef Descr   **Toutlist;\n-\n-#define ASSIGN_VALUE(OUT,VAL)          \\\n-do                                     \\\n-{                                      \\\n-  if (OUT)                             \\\n-    switch (OUT->len)                  \\\n-      {                                \\\n-      case 1:                          \\\n-\t*(char *)((OUT)->p) = VAL;     \\\n-\tbreak;                         \\\n-      case 2:                          \\\n-\t*(short *)((OUT)->p) = VAL;    \\\n-\tbreak;                         \\\n-      case 4:                          \\\n-\t*(int *)((OUT)->p) = VAL;      \\\n-\tbreak;                         \\\n-      }                                \\\n-} while (0)\n-\n-\n-/*\n- * function _inttime\n- *\n- * parameters:\n- *     t    time_t\n- *     list the pointers to the results\n- *\n- * returns:\n- *     void\n- *\n- * exceptions:\n- *     none\n- *\n- * abstract:\n- *     perform the INTTIME builtin call\n- *\n- */\n-\n-void\n-_inttime (timer, outlist)\n-     time_t   timer;\n-     Toutlist outlist;\n-{\n-  struct tm  *time_str;\n-\n-  /* get struct tm from time_t */\n-  time_str = localtime (&timer);\n-\n-  /* assign the values */\n-  ASSIGN_VALUE (outlist[0], time_str->tm_year + 1900);\n-  ASSIGN_VALUE (outlist[1], time_str->tm_mon + 1);\n-  ASSIGN_VALUE (outlist[2], time_str->tm_mday);\n-  ASSIGN_VALUE (outlist[3], time_str->tm_hour);\n-  ASSIGN_VALUE (outlist[4], time_str->tm_min);\n-  ASSIGN_VALUE (outlist[5], time_str->tm_sec);\n-}"}, {"sha": "7c9257d16ec2c09c07fa8640048c70c7bb0426bb", "filename": "libchill/ioerror.c", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fioerror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fioerror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fioerror.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,53 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <setjmp.h>\n-\n-/* define names of IO-exceptions */\n-\n-char * __IO_exception_names[] =\n-{\n-  \"UNUSED\",\n-  \"notassociated\",\n-  \"associatefail\",\n-  \"createfail\",\n-  \"deletefail\",\n-  \"modifyfail\",\n-  \"connectfail\",\n-  \"notconnected\",\n-  \"empty\",\n-  \"rangefail\",\n-  \"spacefail\",\n-  \"readfail\",\n-  \"writefail\",\n-  \"textfail\",\n-};\n-\n-jmp_buf __io_exception;\n-\n-jmp_buf __rw_exception;"}, {"sha": "4084217342462d0ddd2b38be68bb466711066730", "filename": "libchill/ioerror.h", "status": "removed", "additions": 0, "deletions": 169, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fioerror.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fioerror.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fioerror.h?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,169 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#ifndef _ioerror_h_\n-#define _ioerror_h_\n-\n-#include <setjmp.h>\n-\n-/* Note: numbers must be in the same order as\n-   strings in ioerror.c */\n-typedef enum \n-{ NOTASSOCIATED = 1,\n-  ASSOCIATEFAIL,\n-  CREATEFAIL, \n-  DELETEFAIL,\n-  MODIFYFAIL,\n-  CONNECTFAIL,\n-  NOTCONNECTED,\n-  EMPTY,\n-  RANGEFAIL,\n-  SPACEFAIL,\n-  READFAIL,\n-  WRITEFAIL,\n-  TEXTFAIL\n-} io_exceptions_t;\n-\n-#ifndef FIRST_IO_ERROR_NUMBER\n-#define FIRST_IO_ERROR_NUMBER 0\n-#endif\n-\n-typedef enum {\n-  FIRST_AND_UNUSED = FIRST_IO_ERROR_NUMBER,\n-  INTERNAL_ERROR,\n-  INVALID_IO_LIST,\n-  REPFAC_OVERFLOW,\n-  CLAUSE_WIDTH_OVERFLOW,\n-  UNMATCHED_CLOSING_PAREN,\n-  UNMATCHED_OPENING_PAREN,\n-  BAD_FORMAT_SPEC_CHAR,\n-  NO_PAD_CHAR,\n-  IO_CONTROL_NOT_VALID,\n-  DUPLICATE_QUALIFIER,\n-  NO_FRACTION_WIDTH,\n-  NO_EXPONENT_WIDTH,\n-  FRACTION_WIDTH_OVERFLOW,\n-  EXPONENT_WIDTH_OVERFLOW,\n-  NO_FRACTION,\n-  NO_EXPONENT,\n-  NEGATIVE_FIELD_WIDTH,\n-  TEXT_LOC_OVERFLOW,\n-  IOLIST_EXHAUSTED,\n-  CONVCODE_MODE_MISFIT,\n-  SET_CONVERSION_ERROR,\n-  BOOL_CONVERSION_ERROR,\n-  NON_INT_FIELD_WIDTH,\n-  EXCESS_IOLIST_ELEMENTS,\n-  NOT_ENOUGH_CHARS,\n-  NO_CHARS_FOR_INT,\n-  NO_CHARS_FOR_FLOAT,\n-  NO_EXPONENT_VAL,\n-  INT_VAL_OVERFLOW,\n-  REAL_OVERFLOW,\n-  NO_DIGITS_FOR_INT,\n-  NO_DIGITS_FOR_FLOAT,\n-  NO_CHARS_FOR_SET,\n-  NO_CHARS_FOR_CHAR,\n-  NO_CHARS_FOR_BOOLS,\n-  NO_CHARS_FOR_CHARS,\n-  NO_CHARS_FOR_TEXT,\n-  NO_CHARS_FOR_EDIT,\n-  NO_SPACE_TO_SKIP,\n-  FORMAT_TEXT_MISMATCH,\n-  INTEGER_RANGE_ERROR,\n-  SET_RANGE_ERROR,\n-  CHAR_RANGE_ERROR,\n-  INVALID_CHAR,\n-/* end of formatting errors */\n-  NULL_ASSOCIATION,\n-  NULL_ACCESS,\n-  NULL_TEXT,\n-  IS_NOT_ASSOCIATED,\n-  IS_ASSOCIATED,\n-  GETCWD_FAILS,\n-  INVALID_ASSOCIATION_MODE,\n-  FILE_EXISTING,\n-  CREATE_FAILS,\n-  DELETE_FAILS,\n-  RENAME_FAILS,\n-  IMPL_RESTRICTION,\n-  NOT_EXISTING,\n-  NOT_READABLE,\n-  NOT_WRITEABLE,\n-  NOT_INDEXABLE,\n-  NOT_SEQUENCIBLE,\n-  NO_CURRENT_POS,\n-  NOT_VARIABLE,\n-  NOT_FIXED,\n-  NOT_INDEXED, \n-  LENGTH_CHANGE,\n-  LSEEK_FAILS,\n-  BUFFER_ALLOC,\n-  OPEN_FAILS,\n-  NO_ACCESS_SUBLOCATION, \n-  BAD_INDEX,\n-  IS_NOT_CONNECTED,\n-  NO_PATH_NAME,\n-  PATHNAME_ALLOC,\n-  BAD_USAGE,\n-  OUT_OF_FILE,\n-  NULL_STORE_LOC,\n-  STORE_LOC_ALLOC,\n-  OS_IO_ERROR,\n-  RECORD_TOO_LONG,\n-  RECORD_TOO_SHORT,\n-  BAD_TEXTINDEX,\n-  NULL_TEXTREC\n-} io_info_word_t;\n-\n-\n-extern\n-char* io_info_text [];\n-\n-extern\n-char* exc_text [];\n- \n-extern \n-jmp_buf __io_exception;\n-\n-extern \n-jmp_buf __rw_exception;\n-\n-void __cause_exception (char *ex, char* f, int line, int info);\n-extern char * __IO_exception_names[];\n-\n-#define IOEXCEPTION(EXC,INFO) \\\n-    longjmp( __io_exception, (EXC<<16) + INFO )\n-\n-#define RWEXCEPTION(EXC,INFO) \\\n-    longjmp( __rw_exception, (EXC<<16) + INFO )\n-\n-#define CHILLEXCEPTION(FILE,LINE,EXC,INFO) \\\n-    __cause_exception (__IO_exception_names[EXC], FILE, LINE, INFO);\n-\n-#endif"}, {"sha": "05927e3c102383de8dada422fb7770d5455f3117", "filename": "libchill/iomodes.h", "status": "removed", "additions": 0, "deletions": 259, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fiomodes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fiomodes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fiomodes.h?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,259 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#ifndef _iomodes_h_\n-#define _iomodes_h_\n-\n-#include \"auxtypes.h\"\n-\n-typedef enum { ReadOnly, WriteOnly, ReadWrite\n-} Usage_Mode;\n-\n-typedef enum { First, Same, Last\n-} Where_Mode;\n-\n-typedef enum { None, Fixed, VaryingChars\n-} Record_t;\n-\n-/* association flags */\n-#define IO_ISASSOCIATED 0x00000001\n-#define IO_EXISTING     0x00000002\n-#define IO_READABLE     0x00000004\n-#define IO_WRITEABLE    0x00000008\n-#define IO_INDEXABLE    0x00000010\n-#define IO_SEQUENCIBLE  0x00000020\n-#define IO_VARIABLE     0x00000040\n-#define IO_FIRSTLINE    0x00000100\n-#define IO_FORCE_PAGE   0x00000200\n-\n-struct Access_Mode;\n-\n-#define READBUFLEN 512\n-typedef struct\n-{\n-  unsigned long len;\n-  unsigned long cur;\n-  char buf[READBUFLEN];\n-} readbuf_t;\n-\n-typedef struct Association_Mode {\n-  unsigned long       flags;      /* INIT = 0 */\n-  char*               pathname;\n-  struct Access_Mode* access;\n-  int                 handle;\n-  readbuf_t*          bufptr;\n-  long                syserrno;\n-  char                usage;\n-  char                ctl_pre;\n-  char                ctl_post;\n-} Association_Mode;\n-\n-/*\n-   rectype   indexed   max. reclength    act. reclength\n-   ---------------------------------------------------\n-   None        T/F        0\n-   Fixed       T/F     SIZE(recmode)  =  SIZE(recmode)\n-   Varying       F     SIZE(recmode) >=  length\n-*/\n-\n-/* access/text flags */\n-#define IO_TEXTLOCATION 0x80000000\n-#define IO_INDEXED      0x00000001\n-#define IO_TEXTIO       0x00000002\n-#define IO_OUTOFFILE    0x00010000\n-\n-typedef struct Access_Mode {\n-  unsigned long     flags;     /* INIT */   \n-  unsigned long     reclength; /* INIT */\n-  signed long       lowindex;  /* INIT */\n-  signed long       highindex; /* INIT */\n-  Association_Mode* association;\n-  unsigned long     base;\n-  char*             store_loc;\n-  Record_t          rectype;   /* INIT */\n-} Access_Mode;\n-\n-typedef struct Text_Mode {\n-  unsigned long flags;         /* INIT */\n-  VarString*    text_record;   /* INIT */\n-  Access_Mode*  access_sub;    /* INIT */\n-  unsigned long actual_index;\n-} Text_Mode;\n-\n-typedef enum\n-{\n-    __IO_UNUSED,\n-\n-    __IO_ByteVal,\n-    __IO_UByteVal,\n-    __IO_IntVal,\n-    __IO_UIntVal,\n-    __IO_LongVal,\n-    __IO_ULongVal,\n-\n-    __IO_ByteLoc,\n-    __IO_UByteLoc,\n-    __IO_IntLoc,\n-    __IO_UIntLoc,\n-    __IO_LongLoc,\n-    __IO_ULongLoc,\n-\n-    __IO_ByteRangeLoc,\n-    __IO_UByteRangeLoc,\n-    __IO_IntRangeLoc,\n-    __IO_UIntRangeLoc,\n-    __IO_LongRangeLoc,\n-    __IO_ULongRangeLoc,\n-\n-    __IO_BoolVal,\n-    __IO_BoolLoc,\n-    __IO_BoolRangeLoc,\n-\n-    __IO_SetVal,\n-    __IO_SetLoc,\n-    __IO_SetRangeLoc,\n-\n-    __IO_CharVal,\n-    __IO_CharLoc,\n-    __IO_CharRangeLoc,\n-\n-    __IO_CharStrLoc,\n-\n-    __IO_CharVaryingLoc,\n-\n-    __IO_BitStrLoc,\n-\n-    __IO_RealVal,\n-    __IO_RealLoc,\n-    __IO_LongRealVal,\n-    __IO_LongRealLoc\n-} __tmp_IO_enum;\n-\n-typedef struct\n-{\n-    long        value;\n-    char*       name;\n-} __tmp_IO_enum_table_type;\n-\n-typedef struct\n-{\n-    long                      value;\n-    __tmp_IO_enum_table_type* name_table;\n-} __tmp_WIO_set;\n-\n-typedef struct\n-{\n-    char*       ptr;\n-    long        lower;\n-    long        upper;\n-} __tmp_IO_charrange;\n-\n-typedef union\n-{\n-      signed long  slong;\n-    unsigned long  ulong;\n-}  __tmp_IO_long;\n-\n-typedef struct\n-{\n-    void*         ptr;\n-    __tmp_IO_long lower;\n-    __tmp_IO_long upper;\n-} __tmp_IO_intrange;\n-\n-typedef struct\n-{\n-    void*           ptr;\n-    unsigned long   lower;\n-    unsigned long   upper;\n-} __tmp_RIO_boolrange;\n-\n-typedef struct\n-{\n-    void*                     ptr;\n-    long                      length;\n-    __tmp_IO_enum_table_type* name_table;\n-} __tmp_RIO_set;\n-\n-typedef struct\n-{\n-    void*                      ptr;\n-    long                       length;\n-    __tmp_IO_enum_table_type*  name_table;\n-    unsigned long              lower;\n-    unsigned long              upper;\n-} __tmp_RIO_setrange;\n-\n-typedef struct\n-{\n-    char*       string;\n-    long        string_length;\n-} __tmp_IO_charstring;\n-\n-typedef union\n-{\n-    char                     __valbyte;\n-    unsigned char            __valubyte;\n-    short                    __valint;\n-    unsigned short           __valuint;\n-    long                     __vallong;\n-    unsigned long            __valulong;\n-    void*                    __locint;\n-    __tmp_IO_intrange        __locintrange;\n-\n-    unsigned char            __valbool;\n-    unsigned char*           __locbool;\n-    __tmp_RIO_boolrange      __locboolrange;\n-\n-    __tmp_WIO_set            __valset;\n-    __tmp_RIO_set            __locset;\n-    __tmp_RIO_setrange       __locsetrange;\n-\n-    unsigned char            __valchar;\n-    unsigned char*           __locchar;\n-    __tmp_IO_charrange       __loccharrange;\n-\n-    __tmp_IO_charstring      __loccharstring;\n-\n-    float                    __valreal;\n-    float*                   __locreal;\n-    double                   __vallongreal;\n-    double*                  __loclongreal;\n-} __tmp_IO_union;\n-\n-/*\n- * CAUTION: The longest variant of __tmp_IO_union is 5 words long.\n- * Together with __descr this caters for double alignment where required.\n- */\n-typedef struct\n-{\n-    __tmp_IO_union    __t;\n-    __tmp_IO_enum     __descr;\n-} __tmp_IO_list;\n-\n-#endif"}, {"sha": "0df0fa87c26be3bdf8b5be2a8ba69e6e0ed686cf", "filename": "libchill/isassociated.c", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fisassociated.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fisassociated.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fisassociated.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,37 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-Boolean\n-__isassociated( Association_Mode* the_assoc, char* file, int line )\n-{\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-  return TEST_FLAG(the_assoc, IO_ISASSOCIATED) ? True : False;\n-}"}, {"sha": "cbe499ab58d0705ca4e7854ff06b0af121d769b6", "filename": "libchill/leps.c", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fleps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fleps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fleps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,83 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __lepowerset\n- *\n- * parameters:\n- *\tleft\t\tpowerset\n- *\tright\t\tpowerset\n- *\tbitlength\tlength of powerset\n- *\n- * returns:\n- *\tint\t\t1 .. left is included in right\n- *\t\t\t0 .. not\n- *\n- * abstract:\n- *  check if one powerset is included in another\n- *\n- */\n-int\n-__lepowerset (left, right, bitlength)\n-     SET_WORD      *left;\n-     SET_WORD      *right;\n-     unsigned long  bitlength;\n-{\n-  if (bitlength <= SET_CHAR_SIZE)\n-    {\n-      if ((*((SET_CHAR *)left) & *((SET_CHAR *)right))\n-\t  != *((SET_CHAR *)left))\n-\treturn 0;\n-      return 1;\n-    }\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    {\n-      if ((*((SET_SHORT *)left) & *((SET_SHORT *)right))\n-\t  != *((SET_SHORT *)left))\n-\treturn 0;\n-      return 1;\n-    }\n-  else\n-    {\n-      SET_WORD *endp = left + BITS_TO_WORDS(bitlength);\n-    \n-      while (left < endp)\n-\t{\n-\t  if ((*right & *left) != *left)\n-\t    return 0;\n-\t  left++;\n-\t  right++;\n-\t}\n-      return 1;\n-    }\n-}"}, {"sha": "c08c884d6c0744256671a2e80c375e8db28d0d12", "filename": "libchill/ltps.c", "status": "removed", "additions": 0, "deletions": 93, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fltps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fltps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fltps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,93 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __ltpowerset\n- *\n- * parameters:\n- *\tleft\t\tpowerset\n- *\tright\t\tpowerset\n- *\tbitlength\tlength of powerset\n- *\n- * returns:\n- *\tint\t\t1 .. left is proper subset of right\n- *                           (excludes case where left == right)\n- *\t\t\t0 .. not\n- *\n- * abstract:\n- *  check if one powerset is included in another\n- *\n- */\n-int\n-__ltpowerset (left, right, bitlength)\n-     SET_WORD      *left;\n-     SET_WORD      *right;\n-     unsigned long  bitlength;\n-{\n-  if (bitlength <= SET_CHAR_SIZE)\n-    {\n-      if ((*((SET_CHAR *)left) & *((SET_CHAR *)right))\n-\t  != *((SET_CHAR *)left))\n-\treturn 0;\n-      if (*((SET_CHAR *)left) != *((SET_CHAR *)right))\n-\treturn 1;\n-      return 0;\n-    }\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    {\n-      if ((*((SET_SHORT *)left) & *((SET_SHORT *)right))\n-\t  != *((SET_SHORT *)left))\n-\treturn 0;\n-      if (*((SET_SHORT *)left) != *((SET_SHORT *)right))\n-\treturn 1;\n-      return 0;\n-    }\n-  else\n-    {\n-      SET_WORD\t*endp = left + BITS_TO_WORDS(bitlength);\n-      int all_equal = 1;              /* assume all bits are equal */\n-    \n-      while (left < endp)\n-\t{\n-\t  if ((*right & *left) != *left)\n-\t    return 0;\n-\t  if (*left != *right)\n-\t    all_equal = 0;\n-\t  left++;\n-\t  right++;\n-\t}\n-      if (left == endp && all_equal)    /* exclude TRUE return for == case */\n-\treturn 0;\n-      return 1;\n-    }\n-}"}, {"sha": "7ddcfda5c3c93cda72715e25b99aad9f4b2acf01", "filename": "libchill/ltstr.c", "status": "removed", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fltstr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fltstr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fltstr.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,65 +0,0 @@\n-/* Implement string-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Bill Cox\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <string.h>\n-\n-#define MIN(a, b)  ((a) < (b) ? (a) : (b))\n-\n-/*\n- * function __ltstring\n- *\n- * parameters:\n- *     S1 - pointer to left string\n- *     LEN1 - length of left string\n- *     S2 - pointer to right string\n- *     LEN2 - length of right string\n- *\n- * returns:\n- *     1 if left string is a proper subset of the right string, 0 otherwise\n- *\n- * exceptions:\n- *     none\n- *\n- * abstract:\n- *     compares two character strings for subset relationship\n- *\n- */\n-\n-int __ltstring (s1, len1, s2, len2)\n-     char *s1;\n-     int len1;\n-     char *s2;\n-     int len2;\n-{\n-  int i;\n-\n-  i = memcmp (s1, s2, MIN (len1, len2));\n-  if (i)\n-    return (i < 0);\n-  return (len1 < len2);\n-}"}, {"sha": "a995481fb01ecb0b0ec1226cd48fc3c1b96aa287", "filename": "libchill/memmove.c", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fmemmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fmemmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fmemmove.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,75 +0,0 @@\n-/* Implement string-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Bill Cox\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#ifdef __STDC__\n-#include <stddef.h>\n-#else\n-#define size_t unsigned long\n-#endif\n-\n-\n-/*\n- * function memmove\n- *\n- * parameters:\n- *     S1 - pointer to destination string\n- *     S2 - pointer to source string\n- *     LEN - length of string\n- *\n- * returns:\n- *     pointer to destination string\n- *\n- * exceptions:\n- *     none\n- *\n- * abstract:\n- *     copies a string safely, where the source and dest areas may overlap.\n- *\n- */\n-\n-void *\n-memmove (s1, s2, n)\n-     void *s1;\n-     const void *s2;\n-     size_t n;\n-{\n-  char *sc1 = s1;\n-  const char *sc2 = s2;\n-\n-  if (sc2 < sc1 && (sc1 < sc2 + n))\n-    for (sc1 += n, sc2 += n; 0 < n; --n)\n-      *--sc1 = *--sc2;\n-  else\n-#if 0\n-    for (; 0 < n; --n)\n-      *sc1++ = *sc2++;\n-#else\n-    memcpy (sc1, sc2, n);\n-#endif\n-  return s1;\n-}"}, {"sha": "40147bd97bfd11c8aff51aa03c2f53f55aa1ffae", "filename": "libchill/neps.c", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fneps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fneps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fneps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,59 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __nepowerset\n- *\n- * parameters:\n- *\tleft\t\tleft powerset\n- *\tright\t\tright powerset\n- *\tbitlength\tlength of powerset in bits\n- *\n- * returns:\n- *    1 if powersets are not equal, bit for bit\n- *\n- * exceptions:\n- *  none\n- *\n- * abstract:\n- *  compares two powersets for inequality\n- *\n- */\n-int\n-__nepowerset (left, right, bitlength)\n-     SET_WORD *left;\n-     SET_WORD *right;\n-     unsigned long bitlength;\n-{\n-  return ! __eqpowerset (left, right, bitlength);\n-}"}, {"sha": "849d32eeba8806a1a93fef948f2014b2e32e61a3", "filename": "libchill/notps.c", "status": "removed", "additions": 0, "deletions": 88, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fnotps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fnotps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fnotps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,88 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __notpowerset\n- *\n- * parameters:\n- *\tout\t\toutput powerset\n- *\tleft\t\tinput powerset\n- *\tbitlength\tlength of powerset in bits\n- *\n- * returns:\n- *\tvoid\n- *\n- * exceptions:\n- *  none\n- *\n- * abstract:\n- *\n- */\n-\n-void\n-__notpowerset (out, left, bitlength)\n-     SET_WORD      *out;\n-     SET_WORD      *left;\n-     unsigned long  bitlength;\n-{\n-  if (bitlength <= SET_CHAR_SIZE)\n-    {\n-      *((SET_CHAR *)out) = ~ (*((SET_CHAR *)left));\n-#if 0\n-      SET_CHAR tmp;\n-      tmp = *((SET_CHAR *)left);\n-      tmp = ~ tmp;\n-      *((SET_CHAR *)out) = tmp;\n-\n-      MASK_UNUSED_CHAR_BITS((SET_CHAR *)out, bitlength);\n-      *((SET_CHAR *)out) = ~ *((SET_CHAR *)left);\n-      MASK_UNUSED_CHAR_BITS((SET_CHAR *)out, bitlength);\n-      *((SET_CHAR *)out) = (~(0)) ^  (*((SET_CHAR *)left));\n-      MASK_UNUSED_CHAR_BITS((SET_CHAR *)out, bitlength);\n-#endif\n-    }\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    {\n-      *((SET_SHORT *)out) = ~  (*((SET_SHORT *)left));\n-      MASK_UNUSED_SHORT_BITS((SET_SHORT *)out, bitlength);\n-    }\n-  else\n-    {\n-      unsigned long len = BITS_TO_WORDS(bitlength);\n-      register unsigned long i;\n-    \n-      for (i = 0; i < len; i++)\n-\tout[i] = ~ left[i];\n-      MASK_UNUSED_WORD_BITS((out + len - 1), bitlength % SET_WORD_SIZE);\n-    }\n-}"}, {"sha": "3731bdfb1c0ececa6fb78cfa549836f29065dfa5", "filename": "libchill/orps.c", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Forps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Forps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Forps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,82 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __orpowerset\n- *\n- * parameters:\n- *\tout\t\treturn from __orpowerset\n- *\tleft\t\tleft powerset\n- *\tright\t\tright powerset\n- *\tbitlength\tlength of powerset in bits\n- *\n- * returns:\n- *\tvoid\n- *\n- * exceptions:\n- *  none\n- *\n- * abstract:\n- *  or's two powersets.\n- *\n- */\n-\n-void\n-__orpowerset (out, left, right, bitlength)\n-     SET_WORD      *out;\n-     SET_WORD      *left;\n-     SET_WORD      *right;\n-     unsigned long  bitlength;\n-{\n-  if (bitlength <= SET_CHAR_SIZE)\n-    {\n-      *((SET_CHAR *)out) = *((SET_CHAR *)left) |\n-                           *((SET_CHAR *)right);\n-      MASK_UNUSED_CHAR_BITS((SET_CHAR *)out, bitlength);\n-    }\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    {\n-      *((SET_SHORT *)out) = *((SET_SHORT *)left) |\n-                            *((SET_SHORT *)right);\n-      MASK_UNUSED_SHORT_BITS((SET_SHORT *)out, bitlength);\n-    }\n-  else\n-    {\n-      register unsigned long i;\n-      unsigned long len = BITS_TO_WORDS(bitlength);\n-    \n-      for (i = 0; i < len; i++)\n-\tout[i] = left[i] | right[i];\n-      MASK_UNUSED_WORD_BITS ((out + len - 1), bitlength % SET_WORD_SIZE);\n-    }\n-}"}, {"sha": "6a50a7f67c83e47d20ae0e204ddea6e556e83777", "filename": "libchill/outoffile.c", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Foutoffile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Foutoffile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Foutoffile.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,48 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-Boolean\n-__outoffile( void* the_transfer, char* file, int line )\n-{\n-  Access_Mode* the_access;\n-\n-  if( !the_transfer )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ACCESS );\n-\n-  if( TEST_FLAG((Text_Mode*)the_transfer, IO_TEXTLOCATION ))\n-    the_access = ((Text_Mode*)the_transfer)->access_sub;\n-  else\n-    the_access = (Access_Mode*)the_transfer;\n-\n-  if( !the_access->association )\n-    CHILLEXCEPTION( file, line, NOTCONNECTED, IS_NOT_CONNECTED );\n-\n-  return TEST_FLAG( the_access, IO_OUTOFFILE ) ? True : False;\n-}"}, {"sha": "e40303a2eeb1fc9c5403fd044d19e74074ce95b5", "filename": "libchill/powerset.h", "status": "removed", "additions": 0, "deletions": 106, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fpowerset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fpowerset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fpowerset.h?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,106 +0,0 @@\n-/* Common macros for POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#ifndef _POWERSET_H\n-#define _POWERSET_H\n-\n-/* Do not set these to anything other than character types without fixing\n-   their uses in andps.c and other files which implement bit sets operations.\n-\n-   The uses in those files will violate ANSI/ISO C aliasing rules as they\n-   are currently written.  */\n-#define SET_WORD unsigned char\n-#define SET_CHAR  unsigned char\n-#define SET_SHORT unsigned char\n-\n-#define SET_WORD_SIZE (sizeof (char) * sizeof (SET_WORD))\n-#define SET_SHORT_SIZE (sizeof (char) * sizeof (SET_SHORT))\n-#define SET_CHAR_SIZE sizeof (char)\n-\n-/* Powersets and bit strings are stored as arrays of SET_WORD.\n-   if they are a word or longer.  Powersets and bit strings whic\n-   fit in a byte or short are stored that way by the compiler.\n-\n-   The order of the bits follows native bit order:\n-   If BITS_BIG_ENDIAN, bit 0 is the most significant bit (i.e. 0x80..00);\n-   otherwise, bit 0 is the least significant bit (i.e. 0x1).\n-\n-   MASK_UNUSED_BITS masks out unused bits in powersets and bitstrings.\n-   GET_BIT_IN_WORD(W,B) yields 1 (or 0) if the B'th bit if W is set (cleared).\n-*/\n-\n-#if BITS_BIG_ENDIAN\n-#define GET_BIT_IN_WORD(w,b) (((w) >> (SET_WORD_SIZE - 1 - (b))) & 1)\n-#define GET_BIT_IN_SHORT(w,b) (((w) >> (SET_SHORT_SIZE - 1 - (b))) & 1)\n-#define GET_BIT_IN_CHAR(w,b) (((w) >> (SET_CHAR_SIZE - 1 - (b))) & 1)\n-\n-#define SET_BIT_IN_WORD(w,b) ((w) |= 1 << ((SET_WORD_SIZE) - 1 - (b)))\n-#define SET_BIT_IN_SHORT(w,b) ((w) |= 1 << ((SET_SHORT_SIZE) - 1 - (b)))\n-#define SET_BIT_IN_CHAR(w,b) ((w) |= 1 << ((SET_CHAR_SIZE) - 1 - (b)))\n-\n-#define CLEAR_BIT_IN_WORD(w,b) ((w) &= ~(1 << ((SET_WORD_SIZE) - 1 - (b))))\n-#define CLEAR_BIT_IN_SHORT(w,b) ((w) &= ~(1 << ((SET_SHORT_SIZE) - 1 - (b))))\n-#define CLEAR_BIT_IN_CHAR(w,b) ((w) &= ~(1 << ((SET_CHAR_SIZE) - 1 - (b))))\n-#define MASK_UNUSED_WORD_BITS(p,b)\t\t   \\\n-{ if (b) *(p) &= (~0) << (SET_WORD_SIZE - (b)); }\n-#define MASK_UNUSED_SHORT_BITS(p,b)\t\t   \\\n-{ if (b) *(p) &= (~0) << (SET_SHORT_SIZE - (b)); }\n-#define MASK_UNUSED_CHAR_BITS(p,b)                 \\\n-{ if (b) *(p) &= (~0) << (SET_CHAR_SIZE - (b)); }\n-\n-#else /* !BITS_BIG_ENDIAN */\n-\n-#define GET_BIT_IN_WORD(w,b) (((w) >> (b)) & 1)\n-#define GET_BIT_IN_SHORT(w,b) GET_BIT_IN_WORD(w,b)\n-#define GET_BIT_IN_CHAR(w,b) GET_BIT_IN_WORD(w,b)\n-\n-#define SET_BIT_IN_WORD(w,b) ((w) |= 1 << (b))\n-#define SET_BIT_IN_SHORT(w,b) SET_BIT_IN_WORD(w,b)\n-#define SET_BIT_IN_CHAR(w,b) SET_BIT_IN_WORD(w,b)\n-\n-#define CLEAR_BIT_IN_WORD(w,b) ((w) &= ~(1 << (b)))\n-#define CLEAR_BIT_IN_SHORT(w,b) CLEAR_BIT_IN_WORD(w,b)\n-#define CLEAR_BIT_IN_CHAR(w,b) CLEAR_BIT_IN_WORD(w,b)\n-\n-#define MASK_UNUSED_WORD_BITS(p,b)  \\\n-{ if (b) *(p) &= ~((~0) << (b)); }\n-#define MASK_UNUSED_SHORT_BITS(p,b) MASK_UNUSED_WORD_BITS(p,b)\n-#define MASK_UNUSED_CHAR_BITS(p,b) MASK_UNUSED_WORD_BITS(p,b)\n-\n-#endif\n-\n-\n-/* Number of words needed for a bitstring/powerset of size BITLENGTH.\n-   This definition handles the (BITLENGTH==0) by yielding 0. */\n-\n-#define BITS_TO_WORDS(BITLENGTH) \\\n-  (((BITLENGTH) + (SET_WORD_SIZE-1)) / SET_WORD_SIZE)\n-#define BITS_TO_CHARS(BITLENGTH) \\\n-  (((BITLENGTH) + (SET_CHAR_SIZE-1)) / SET_CHAR_SIZE)\n-\n-#endif"}, {"sha": "a46cb5d5ef0061988c0baa2d3c19fe045d56109b", "filename": "libchill/printbuffer.c", "status": "removed", "additions": 0, "deletions": 125, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fprintbuffer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fprintbuffer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fprintbuffer.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,125 +0,0 @@\n-/* Implement tasking-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <stdio.h>\n-#include <string.h>\n-#include \"rtltypes.h\"\n-#include \"rts.h\"\n-\n-typedef char *(*fetch_names) (int number);\n-extern fetch_names\t__RTS_FETCH_NAMES__;\n-\n-/*\n- * function print_instance\n- *\n- */\n-\n-static char *print_instance (ins)\n-     INSTANCE ins;\n-{\n-  static char  buf[256];\n-  char *f;\n-\n-  if (!__RTS_FETCH_NAMES__)\n-    f = 0;\n-  else\n-    f = (*__RTS_FETCH_NAMES__) (ins.ptype);\n-  if (!f)\n-    sprintf (buf, \"[%u;%u]\", ins.ptype, ins.pcopy);\n-  else\n-    sprintf (buf, \"[%s;%u]\", f, ins.pcopy);\n-  return buf;\n-}\n-\n-/*\n- * function __print_buffer\n- *\n- * parameters:\n- *     buffer      buffer location\n- *\n- * returns:\n- *     void\n- *\n- * exceptions:\n- *     none\n- *\n- * abstract:\n- *     Function is used for debugging purposes only to print a\n- *     buffer queue\n- */\n-\n-void\n-__print_buffer (buffer, name)\n-     Buffer_Queue   **buffer;\n-     char            *name;\n-{\n-  Buffer_Queue      *bq;\n-  int                bsqcnt = 0, bwqcnt = 0;\n-  Buffer_Send_Queue *bsq;\n-  Buffer_Wait_Queue *bwq;\n-\n-  if (name)\n-    printf (\"Buffer %s:\\n\", name);\n-  else\n-    printf (\"Buffer at address H'%X:\\n\", buffer);\n-\n-  memcpy (&bq, buffer, sizeof (Buffer_Queue *));\n-  if (bq == 0)\n-    {\n-      printf (\"EMPTY\\n\");\n-      return;\n-    }\n-\n-  bsq = bq->sendqueue;\n-  if (bsq != 0)\n-      printf (\"Send Queue:\\n\");\n-  while (bsq)\n-    {\n-      printf (\" %3d: \", ++bsqcnt);\n-      printf (\"Process %s, \", print_instance (bsq->this));\n-      printf (\"Priority %d\", bsq->priority);\n-      if (bsq->is_delayed)\n-\tprintf (\", Delayed\");\n-      printf (\"\\n\");\n-      bsq = bsq->forward;\n-    }\n-  bwq = bq->waitqueue;\n-  if (bwq != 0)\n-      printf (\"Wait Queue:\\n\");\n-  while (bwq)\n-    {\n-      printf (\" %3d: \", ++bwqcnt);\n-      printf (\"Process %s, \", print_instance (bwq->this));\n-      if (bwq->is_sent)\n-\tprintf (\", Send by %s\", print_instance (bwq->who_sent));\n-      printf (\"\\n\");\n-      bwq = bwq->forward;\n-    }\n-  if (bsqcnt == 0 && bwqcnt == 0)\n-    printf (\"EMPTY\\n\");\n-}"}, {"sha": "88c4bc0acc734685f02f3ddccac5254262255de9", "filename": "libchill/printevent.c", "status": "removed", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fprintevent.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fprintevent.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fprintevent.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,102 +0,0 @@\n-/* Implement tasking-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <stdio.h>\n-#include <string.h>\n-#include \"rtltypes.h\"\n-#include \"rts.h\"\n-\n-typedef char *(*fetch_names) (int number);\n-extern fetch_names\t__RTS_FETCH_NAMES__;\n-\n-/*\n- * function print_instance\n- *\n- */\n-\n-static char *print_instance (ins)\n-     INSTANCE ins;\n-{\n-  static char  buf[256];\n-  char *f;\n-\n-  if (!__RTS_FETCH_NAMES__)\n-    f = 0;\n-  else\n-    f = (*__RTS_FETCH_NAMES__) (ins.ptype);\n-  if (!f)\n-    sprintf (buf, \"[%u;%u]\", ins.ptype, ins.pcopy);\n-  else\n-    sprintf (buf, \"[%s;%u]\", f, ins.pcopy);\n-  return buf;\n-}\n-\n-/*\n- * function __print_event\n- *\n- * parameters:\n- *     event      event location\n- *\n- * returns:\n- *     void\n- *\n- * exceptions:\n- *     none\n- *\n- * abstract:\n- *     Function is used for debugging purposes only to print an\n- *     event queue\n- */\n-\n-void\n-__print_event (evaddr, name)\n-     Event_Queue   **evaddr;\n-     char           *name;\n-{\n-  Event_Queue    *ev;\n-  int            cnt = 0;\n-\n-  if (name)\n-    printf (\"Event %s:\\n\", name);\n-  else\n-    printf (\"Event at address H'%X:\\n\", evaddr);\n-\n-  memcpy (&ev, evaddr, sizeof (Event_Queue *));\n-  while (ev)\n-    {\n-      printf (\" %3d: \", ++cnt);\n-      printf (\"Process %s, \", print_instance (ev->this));\n-      printf (\"Priority %d\", ev->priority);\n-      if (ev->is_continued)\n-\tprintf (\" ,Continued by %s\", print_instance (ev->who_continued));\n-      printf (\"\\n\");\n-      ev = ev->forward;\n-    }\n-  if (!cnt)\n-    printf (\"EMPTY\\n\");\n-}"}, {"sha": "777d50389d5e302804a04c8d578c20340faebc98", "filename": "libchill/queuelength.c", "status": "removed", "additions": 0, "deletions": 87, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fqueuelength.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fqueuelength.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fqueuelength.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,87 +0,0 @@\n-/* Implement tasking-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"rtltypes.h\"\n-#include \"rts.h\"\n-\n-/*\n- * function __queue_length\n- *\n- * parameters:\n- *     buf_ev      Buffer or event location\n- *     is_event    0 .. buf_ev is a buffer location\n- *                 1 .. buf_ev is an event location\n- *\n- * returns:\n- *     int         number of delayed processeson an event location\n- *                 or number of send delayed processes on a buffer\n- *\n- * exceptions:\n- *     none\n- *\n- * abstract:\n- *     implements the QUEUE_LENGTH built-in.\n- *\n- */\n-\n-int\n-__queue_length (buf_ev, is_event)\n-     void  *buf_ev;\n-     int    is_event;\n-{\n-  int            retval = 0;\n-  \n-  /* if buf_ev == 0 then we don't have anything */\n-  if (buf_ev == 0)\n-    return 0;\n-\n-  if (is_event)\n-    {\n-      /* process an event queue */\n-      Event_Queue   *ev = buf_ev;\n-\n-      while (ev)\n-\t{\n-\t  retval++;\n-\t  ev = ev->forward;\n-\t}\n-    }\n-  else\n-    {\n-      /* process a buffer queue */\n-      Buffer_Queue *bq = buf_ev;\n-      Buffer_Send_Queue *bsq = bq->sendqueue;\n-\n-      while (bsq)\n-\t{\n-\t  retval++;\n-\t  bsq = bsq->forward;\n-\t}\n-    }\n-  return retval;\n-}"}, {"sha": "0b3b3d3858b557ca60147cdef36ddf54ef9ea423", "filename": "libchill/readable.c", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Freadable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Freadable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Freadable.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,40 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-Boolean\n-__readable( Association_Mode* the_assoc, char* file, int line )\n-{\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-  if( !TEST_FLAG(the_assoc, IO_ISASSOCIATED) )\n-    CHILLEXCEPTION( file, line, NOTASSOCIATED, IS_NOT_ASSOCIATED );\n-  return TEST_FLAG(the_assoc, IO_READABLE) ? True : False;\n-}\n-"}, {"sha": "f462883972b5a654f00422fddee23b2751238802", "filename": "libchill/readrecord.c", "status": "removed", "additions": 0, "deletions": 217, "changes": 217, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Freadrecord.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Freadrecord.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Freadrecord.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,217 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992, 1993, 1998 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <setjmp.h>\n-#include <stdlib.h>\n-#include <errno.h>\n-#include <sys/types.h>\n-#include <unistd.h>\n-\n-#include \"fileio.h\"\n-\n-#ifdef EOF\n-#undef EOF\n-#endif\n-#define EOF -1\n-\n-static\n-Boolean\n-doRead( Access_Mode* the_access, void* buf, size_t nbyte )\n-{\n-  size_t nread;\n-\n-  nread = read( the_access->association->handle, buf, nbyte );\n-  if( nread == nbyte )\n-  {\n-    CLR_FLAG( the_access, IO_OUTOFFILE );\n-    return True;\n-  }\n-  if( nread == 0 )\n-  {\n-    SET_FLAG( the_access, IO_OUTOFFILE );\n-    return False;\n-  }\n-  the_access->association->syserrno = errno;\n-  RWEXCEPTION( READFAIL, OS_IO_ERROR );\n-  /* no return */\n-}\n-\n-static\n-int bgetc( int handle, readbuf_t* rbptr )\n-{\n-  if( rbptr->cur >= rbptr->len )\n-    {\n-      rbptr->len = read( handle, rbptr->buf, READBUFLEN );\n-      if( rbptr->len == 0 )\n-\treturn EOF;\n-      rbptr->cur = 0;\n-    }\n-  return rbptr->buf[rbptr->cur++];\n-}\n-\n-static\n-void bungetc( readbuf_t* rbptr, int c )\n-{\n-  rbptr->buf[--rbptr->cur] = c;\n-}\n-\n-void*\n-__readrecord( Access_Mode*  the_access,\n-              signed long   the_index,\n-              char*         the_buf_addr,\n-              char*         file,\n-              int           line )\n-{\n-  unsigned long  info;\n-  char*          actaddr;\n-  unsigned short actlen;\n-  off_t          filepos;\n-  unsigned short reclen;\n-  unsigned long  readlen;\n-\n-  if( !the_access )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ACCESS );\n-\n-  if( !the_access->association )\n-    CHILLEXCEPTION( file, line, NOTCONNECTED, IS_NOT_CONNECTED );\n-\n-  /* Usage must not be WriteOnly */\n-  if( the_access->association->usage == WriteOnly )\n-    CHILLEXCEPTION( file, line, READFAIL, BAD_USAGE );\n-\n-  /* OUTOFFILE must not be True when connected for sequential read */\n-  if( !TEST_FLAG( the_access, IO_INDEXED )\n-      && TEST_FLAG( the_access, IO_OUTOFFILE ) )\n-    CHILLEXCEPTION( file, line, READFAIL, OUT_OF_FILE );\n-\n-  /*\n-   *  Positioning\n-   */\n-  if( TEST_FLAG( the_access, IO_INDEXED ) )\n-  {\n-    /* index expression must be within bounds of index mode */\n-    if( the_index < the_access->lowindex\n-        || the_access->highindex < the_index ) \n-      CHILLEXCEPTION( file, line, RANGEFAIL, BAD_INDEX );\n-\n-    filepos = the_access->base + \n-              (the_index - the_access->lowindex) * the_access->reclength;\n-\n-    if( lseek( the_access->association->handle, filepos, SEEK_SET ) == -1L )\n-      CHILLEXCEPTION( file, line, READFAIL, LSEEK_FAILS );\n-  }\n-\n-  /* establish store loc */\n-  if( !(actaddr = the_buf_addr ))\n-  {\n-    /* if not yet allocated, do it now */\n-    if (!the_access->store_loc)\n-      if( !(the_access->store_loc = (char*)malloc( the_access->reclength ) ) )\n-\tCHILLEXCEPTION( file, line, SPACEFAIL, STORE_LOC_ALLOC );\n-    actaddr = the_access->store_loc;\n-  }\n-  actlen  = the_access->reclength;\n-\n-  if( (info = setjmp( __rw_exception )) )\n-    CHILLEXCEPTION( file, line, info>>16, info & 0xffff );\n-\n-  if( TEST_FLAG( the_access, IO_TEXTIO ) )\n-  {\n-    readlen = actlen - 2;\n-    if( TEST_FLAG( the_access, IO_INDEXED ) )\n-    {\n-      if( ! doRead( the_access, &reclen, sizeof(reclen) ) )\n-        return NULL;\n-      if( reclen > readlen )\n-        CHILLEXCEPTION( file, line, RANGEFAIL, RECORD_TOO_LONG );\n-      if( ! doRead( the_access, actaddr + 2, reclen ) )\n-        CHILLEXCEPTION( file, line, READFAIL, RECORD_TOO_SHORT );\n-    }\n-    else\n-    { \n-      Association_Mode *assoc = the_access->association;\n-      int              handle = assoc->handle;\n-      readbuf_t*       rbuf   = assoc->bufptr;\n-      char* cptr = actaddr+2;\n-      int   curr;\n-\n-      reclen = 0;\n-      while( readlen-- )\n-      {\n-        curr = bgetc( handle, rbuf );\n-        if( curr == '\\n' )\n-          goto end_of_line;\n-        if( curr == EOF )\n-\t{\n-          if( !reclen )\n-            SET_FLAG( the_access, IO_OUTOFFILE );\n-          goto end_of_line;\n-\t}\n-        *cptr++ = curr;\n-        reclen++;\n-      }\n-      if( (curr = bgetc( handle, rbuf )) != '\\n' )\n-\t{\n-\t  bungetc( rbuf, curr );\n-\t  CHILLEXCEPTION( file, line, RANGEFAIL, RECORD_TOO_LONG );\n-\t}\n-end_of_line: ;\n-    }\n-    MOV2(actaddr,&reclen);\n-  }\n-  else\n-  {\n-    switch( the_access->rectype )\n-    {\n-    case Fixed:\n-      if( ! doRead( the_access, actaddr, actlen ) )\n-        return NULL;\n-      break;\n-    case VaryingChars:\n-      if( TEST_FLAG( the_access->association, IO_VARIABLE ) )\n-      {\n-        if( ! doRead( the_access, &reclen, sizeof(reclen) ) )\n-          return NULL;\n-        if( reclen > actlen - 2 )\n-          CHILLEXCEPTION( file, line, RANGEFAIL, RECORD_TOO_LONG );\n-        readlen = TEST_FLAG( the_access, IO_INDEXED ) ? actlen - 2 : reclen;\n-        if( ! doRead( the_access, actaddr + 2, readlen ) )\n-          CHILLEXCEPTION( file, line, READFAIL, RECORD_TOO_SHORT );\n-      }\n-      else\n-      {\n-        if( ! doRead( the_access, actaddr + 2, reclen = actlen - 2 ) )\n-          CHILLEXCEPTION( file, line, READFAIL, RECORD_TOO_SHORT );\n-      }\n-      MOV2(actaddr,&reclen);\n-      break;\n-    }\n-  }\n-\n-  return actaddr;\n-}"}, {"sha": "5d87e8c7af3fb0c7067eb00e335fdfd0f952e706", "filename": "libchill/remaintime.c", "status": "removed", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fremaintime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fremaintime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fremaintime.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,91 +0,0 @@\n-/* Implement timing-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-   \n-   This file is part of GNU CC.\n-   \n-   GNU CC is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2, or (at your option)\n-   any later version.\n-   \n-   GNU CC is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-   \n-   You should have received a copy of the GNU General Public License\n-   along with GNU CC; see the file COPYING.  If not, write to\n-   the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"rts.h\"\n-\n-/*\n- * function __remaintime\n- *\n- * parameters:\n- *      since   pointer to the  initial RtsTime\n- *      dur     the duration value\n- *      t       pointer to the remaining RtsTime\n- *\n- * returns:\n- *      int     0 .. there is a remaining time\n- *              1 .. there is no remaining time\n- *\n- * exceptions:\n- *      none\n- *\n- * abstract:\n- *      This function writes to t the remaining duration value in RtsTime format\n- *      from a given start (since) and the current RtsTime.\n- *\n- */\n-\n-extern void __convert_duration_rtstime (unsigned long dur, RtsTime *t);\n-\n-int\n-  __remaintime (since, dur, t)\n-RtsTime       *since;\n-unsigned long  dur;\n-RtsTime       *t;\n-{\n-  RtsTime now, dur_in_rtstime, tmp, diff;\n-  \n-  __rtstime (&now);\n-  __convert_duration_rtstime (dur, &dur_in_rtstime);\n-  \n-  tmp.secs = since->secs;\n-  tmp.nanosecs = since->nanosecs;\n-  \n-  /* calculate the difference of absolute times */\n-  if (tmp.nanosecs > now.nanosecs)\n-    {\n-      tmp.secs--;\n-      tmp.nanosecs += 1000000000;\n-    }\n-  diff.secs = now.secs - tmp.secs;\n-  diff.nanosecs = now.nanosecs - tmp.nanosecs;\n-  \n-  /* substract diff from duration */\n-  if (diff.nanosecs > dur_in_rtstime.nanosecs)\n-    {\n-      dur_in_rtstime.secs--;\n-      dur_in_rtstime.nanosecs += 1000000000;\n-    }\n-  \n-  t->secs = dur_in_rtstime.secs - diff.secs;\n-  t->nanosecs = dur_in_rtstime.nanosecs - diff.nanosecs;\n-  \n-  if (t->secs > dur_in_rtstime.secs)\n-    return 1;\n-  else\n-    return 0;\n-}"}, {"sha": "810a71ad8ea8af075366cee3562e7476e051c574", "filename": "libchill/retmem.c", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fretmem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fretmem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fretmem.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,59 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdlib.h>\n-\n-/*\n- * function _return_memory\n- *\n- * parameter:\n- *  ptr\t\t\tpointer to memory to free\n- *  filename            source file which issued the call\n- *  linenumber          line number of the call within that file\n- *\n- * returns:\n- *  void\n- *\n- * exceptions:\n- *  none\n- *\n- * abstract:\n- *  free memory previously allocated by _allocate_(global_)memory\n- *\n-*/\n-\n-void\n-_return_memory (ptr, filename, linenumber)\n-     void *ptr;\n-     char *filename;\n-     int linenumber;\n-{\n-    free (ptr);\n-}"}, {"sha": "7175785440c5ca3df9f2b3933b0898aa57d93fdf", "filename": "libchill/rtltypes.h", "status": "removed", "additions": 0, "deletions": 89, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Frtltypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Frtltypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Frtltypes.h?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,89 +0,0 @@\n-/* Implement timing-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#ifndef __rtltypes_h__\n-#define __rtltypes_h__\n-\n-#include <setjmp.h>\n-\n-/* Add prototype support.  */\n-#ifndef PROTO\n-#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n-#define PROTO(ARGS) ARGS\n-#else\n-#define PROTO(ARGS) ()\n-#endif\n-#endif\n-\n-/* argc, argv */\n-typedef struct\n-{\n-    unsigned short\tlen;\n-    char\t\tbody[0];\n-} TVaryingCharType;\n-\n-#ifndef __CHILL_LIB__\n-extern TVaryingCharType\t**chill_argv;\n-extern int\t\tchill_argc;\n-#endif\n-\n-/* definitions for exceptions */\n-typedef struct\n-{\n-    char\t*exname;\n-    short\texnumber;\n-} TExceptionDefinition;\n-\n-#if 1\n-typedef char *__ch_exception;\n-#define EX_EQ(e1, e2) (strcmp(e1, e2)==0)\n-#else\n-typedef void *__ch_exception;\n-#define EX_EQ(e1, e2) (e1 == e2)\n-#endif\n-#define __ch_else_except ((__ch_exception)0)\n-\n-struct __ch_handled_excepts\n-{\n-  /* List is ended by a code==0, or ex==__ch_else_except (ELSE handler). */\n-  __ch_exception ex;\n-  int code; /* Positive number indicating ordinal in handler list. */\n-};\n-\n-/* definitions for exception handlers */\n-typedef struct  __ch_handler\n-{\n-  struct __ch_handler *prev;\n-  struct __ch_handled_excepts *handlers;\n-  jmp_buf jbuf;\n-} TExceptionHandlerStack;\n-\n-/* exceptions */\n-#define EXCEPTION(x)\t/* nothing */\n-\n-#endif /* __rtltypes_h__ */"}, {"sha": "fd1878c6cfda14117747fadaabf16e9d04cc7bbf", "filename": "libchill/rts.c", "status": "removed", "additions": 0, "deletions": 663, "changes": 663, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Frts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Frts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Frts.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,663 +0,0 @@\n-/* GNU CHILL compiler regression test file\n- Copyright (C) 1992, 1993 Free Software Foundation, Inc.\n- \n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <stdio.h>\n-#include <string.h>\n-#include <stdlib.h>\n-#include <setjmp.h>\n-#include <signal.h>\n-\n-#include \"rts.h\"\n-\n-\n-/* some allocation/reallocation functions */\n-\n-static void *\n-xmalloc (size)\n-     int size;\n-{\n-  void *tmp = malloc (size);\n-\n-  if (!tmp)\n-    {\n-      fprintf (stderr, \"Out of heap space.\\n\");\n-      exit (1);\n-    }\n-  return (tmp);\n-}\n-\n-static void *\n-xrealloc (ptr, size)\n-     void *ptr;\n-     int size;\n-{\n-  void *tmp = realloc (ptr, size);\n-\n-  if (!tmp)\n-    {\n-      fprintf (stderr, \"Out of heap space.\\n\");\n-      exit (1);\n-    }\n-  return (tmp);\n-}\n-\n-/* the necessary data */\n-#define MAX_NUMBER 100\n-typedef char UsedValues[MAX_NUMBER];\n-\n-#define MAX_COPIES 100\n-\n-#define MAX_PER_ITEM 20\n-typedef struct TASKINGSTRUCTLIST\n-{\n-  struct TASKINGSTRUCTLIST *forward;\n-  int    num;\n-  TaskingStruct *data[MAX_PER_ITEM];\n-  char copies[MAX_COPIES];\n-  jmp_buf where;\n-} TaskingStructList;\n-\n-static TaskingStructList *task_array[LAST_AND_UNUSED];\n-static UsedValues used_values[LAST_AND_UNUSED];\n-\n-static short\n-get_next_free_number (vals)\n-     UsedValues vals;\n-{\n-  short  i;\n-  for (i = 1; i < MAX_NUMBER; i++)\n-    {\n-      if (!vals[i])\n-\t{\n-\t  vals[i] = 1;\n-\t  return (i);\n-\t}\n-    }\n-  fprintf (stderr, \"There are no more free numbers.\\n\");\n-  exit (1);\n-}\n-\n-/* function search for the next available copy number */\n-static short\n-get_next_copy_number (p)\n-     TaskingStructList *p;\n-{\n-  short i;\n-\n-  for (i = 0; i < MAX_COPIES; i++)\n-    {\n-      if (!p->copies[i])\n-\t{\n-\t  p->copies[i] = 1;\n-\t  return (i);\n-\t}\n-    }\n-  fprintf (stderr, \"No more copies available for \\\"%s\\\".\\n\",\n-\t   p->data[0]->name);\n-  exit (1);\n-}\n-\n-/* function registers a tasking entry from a module and assign\n-   a value to the type */\n-\n-void\n-__register_tasking (t)\n-     TaskingStruct *t;\n-{\n-  TaskingStructList *p;\n-\n-  /* check first if a value was provided and if it is in range */\n-  if (t->value_defined && *t->value >= MAX_NUMBER)\n-    {\n-      fprintf (stderr, \"Value %d out of range.\\n\", *t->value);\n-      exit (1);\n-    }\n-\n-  /* look for item defined */\n-  p = task_array[t->type];\n-  while (p)\n-    {\n-      if (!strcmp (p->data[0]->name, t->name))\n-\t/* have found it */\n-\tbreak;\n-      p = p->forward;\n-    }\n-\n-  if (!p)\n-    {\n-      TaskingStructList *wrk = (TaskingStructList *)&task_array[t->type];\n-\n-      /* this is a new one -- allocate space */\n-      p = xmalloc (sizeof (TaskingStructList));\n-      memset (p->copies, 0, sizeof (p->copies));\n-      p->forward = 0;\n-      p->num = 1;\n-      p->data[0] = t;\n-\n-      /* queue it in */\n-      while (wrk->forward)\n-\twrk = wrk->forward;\n-      wrk->forward = p;\n-    }\n-  else\n-    {\n-      if (p->num >= MAX_PER_ITEM)\n-\t{\n-\t  fprintf (stderr, \"Too many registrations of \\\"%s\\\".\\n\", t->name);\n-\t  exit (1);\n-\t}\n-      p->data[p->num++] = t;\n-    }\n-}\n-\f\n-/* define all the entries for the runtime system. They will be\n-   needed by chillrt0.o */\n-\n-typedef char *(*fetch_names) ();\n-typedef int (*fetch_numbers) ();\n-\n-static char tmp_for_fetch_name[100];\n-\n-char *\n-__fetch_name (number)\n-     int number;\n-{\n-  TaskingStructList *p = task_array[Process];\n-\n-  while (p)\n-    {\n-      if (*(p->data[0]->value) == number)\n-\treturn (p->data[0]->name);\n-      p = p->forward;\n-    }\n-  sprintf (tmp_for_fetch_name, \"%d\", number);\n-  return (tmp_for_fetch_name);\n-}\n-fetch_names\t__RTS_FETCH_NAMES__ = __fetch_name;\n-\n-static int \n-__fetch_number (name)\n-     char *name;\n-{\n-  TaskingStructList *p = task_array[Process];\n-\n-  while (p)\n-    {\n-      if (!strcmp (p->data[0]->name, name))\n-\treturn (*(p->data[0]->value));\n-      p = p->forward;\n-    }\n-  return (-1);\n-}\n-fetch_numbers\t__RTS_FETCH_NUMBERS__ = __fetch_number;\n-\n-\n-/* here we go to check all registered items */\n-static void\n- __rts_init ()\n-{\n-  int i;\n-  TaskingStructList *p;\n-\n-  for (i = Process; i <= Event; i++)\n-    {\n-      p = task_array[i];\n-      while (p)\n-\t{\n-\t  TaskingStruct *t = 0;\n-\t  int j;\n-\t  short val;\n-\n-\t  for (j = 0; j < p->num; j++)\n-\t    {\n-\t      if (p->data[j]->value_defined)\n-\t\t{\n-\t\t  if (t)\n-\t\t    {\n-\t\t      if (*(t->value) != *(p->data[j]->value))\n-\t\t\t{\n-\t\t\t  fprintf (stderr, \"Different values (%d & %d) for \\\"%s\\\".\",\n-\t\t\t\t   *(t->value), *(p->data[j]->value), t->name);\n-\t\t\t  exit (1);\n-\t\t\t}\n-\t\t    }\n-\t\t  else\n-\t\t    t = p->data[j];\n-\t\t}\n-\t    }\n-\n-\t  if (t)\n-\t    {\n-\n-\t      val = *(t->value);\n-\n-\t      if (used_values[t->type][val])\n-\t\t{\n-\t\t  fprintf (stderr, \"Value %d for \\\"%s\\\" is already used.\\n\",\n-\t\t\t   val, t->name);\n-\t\t  exit (1);\n-\t        }\n-\t      used_values[t->type][val] = 1;\n-\t    }\n-\t  else\n-\t    {\n-\t      /* we have to create a new value */\n-\t      val = get_next_free_number (used_values[p->data[0]->type]);\n-\t    }\n-\t      \n-\t  for (j = 0; j < p->num; j++)\n-\t    {\n-\t      p->data[j]->value_defined = 1;\n-\t      *(p->data[j]->value) = val;\n-\t    }\n-\n-\t  p = p->forward;\n-\t}\n-    }\n-}\n-EntryPoint\t__RTS_INIT__ = __rts_init;\n-\f\n-/* define the start process queue */\n-typedef struct STARTENTRY\n-{\n-  struct STARTENTRY *forward;\n-  INSTANCE whoami;\n-  EntryPoint entry;\n-  void *data;\n-  int datalen;\n-} StartEntry;\n-\n-static StartEntry *start_queue = 0;\n-static StartEntry *current_process = 0;\n-\n-/* the jump buffer for the main loop */\n-static jmp_buf jump_buffer;\n-static int jump_buffer_initialized = 0;\n-\n-/* look for entries in start_queue and start the process */\n-static void\n-__rts_main_loop ()\n-{\n-  StartEntry *s;\n-\n-  while (1)\n-    {\n-      if (setjmp (jump_buffer) == 0)\n-\t{\n-\t  jump_buffer_initialized = 1;\n-\t  s = start_queue;\n-\t  while (s)\n-\t    {\n-\t      current_process = s;\n-\t      start_queue = s->forward;\n-\t      \n-\t      /* call the process */\n-\t      (*s->entry) (s->data);\n-\t      s = start_queue;\n-\t    }\n-\t  /* when queue empty we have finished */\n-\t  return;\n-\t}\n-      else\n-\t{\n-\t  /* stop executed */\n-\t  if (current_process->data)\n-\t    free (current_process->data);\n-\t  free (current_process);\n-\t  current_process = 0;\n-\t}\n-    }\n-}\n-EntryPoint\t__RTS_MAIN_LOOP__ = __rts_main_loop;\n-\n-\n-void\n-__start_process (ptype, pcopy, arg_size, args, ins)\n-     short ptype;\n-     short pcopy;\n-     int arg_size;\n-     void *args;\n-     INSTANCE *ins;\n-{\n-  TaskingStructList *p = task_array[Process];\n-  EntryPoint pc = 0;\n-  int i;\n-  short this_copy = pcopy;\n-  StartEntry *s, *wrk;\n-\n-  /* search for the process */\n-  while (p)\n-    {\n-      if (*(p->data[0]->value) == ptype)\n-\tbreak;\n-      p = p->forward;\n-    }\n-  if (!p)\n-    {\n-      fprintf (stderr, \"Cannot find a process with type %d.\\n\", ptype);\n-      exit (1);\n-    }\n-  \n-  /* search for the entry point */\n-  for (i = 0; i < p->num; i++)\n-    {\n-      if (p->data[i]->entry)\n-\t{\n-\t  pc = p->data[i]->entry;\n-\t  break;\n-\t}\n-    }\n-  if (!pc)\n-    {\n-      fprintf (stderr, \"Process \\\"%s\\\" doesn't have an entry point.\\n\",\n-\t       p->data[0]->name);\n-      exit (1);\n-    }\n-\n-  /* check the copy */\n-  if (pcopy >= MAX_COPIES)\n-    {\n-      fprintf (stderr, \"Copy number (%d) out of range.\\n\", pcopy);\n-      exit (1);\n-    }\n-  if (pcopy == -1)\n-    {\n-      /* search for a copy number */\n-      this_copy = get_next_copy_number (p);\n-    }\n-  else\n-    {\n-      if (p->copies[pcopy])\n-\t{\n-\t  /* FIXME: should be exception 'startfail' */\n-\t  fprintf (stderr, \"Copy number %d already in use for \\\"%s\\\".\\n\",\n-\t\t   pcopy, p->data[0]->name);\n-\t  exit (1);\n-\t}\n-      p->copies[this_copy = pcopy] = 1;\n-    }\n-\n-  /* ready to build start_queue entry */\n-  s = xmalloc (sizeof (StartEntry));\n-  s->forward = 0;\n-  s->whoami.pcopy = this_copy;\n-  s->whoami.ptype = ptype;\n-  s->entry = pc;\n-  s->datalen = arg_size;\n-  if (args)\n-    {\n-      s->data = xmalloc (arg_size);\n-      memcpy (s->data, args, arg_size);\n-    }\n-  else\n-    s->data = 0;\n-\n-  /* queue that stuff in */\n-  wrk = (StartEntry *)&start_queue;\n-  while (wrk->forward)\n-    wrk = wrk->forward;\n-  wrk->forward = s;\n-\n-  /* if we have a pointer to ins -- set it */\n-  if (ins)\n-    {\n-      ins->ptype = ptype;\n-      ins->pcopy = this_copy;\n-    }\n-}\n-\f\n-void\n-__stop_process ()\n-{\n-  if (!jump_buffer_initialized)\n-    {\n-      fprintf (stderr, \"STOP called before START.\\n\");\n-      exit (1);\n-    }\n-  longjmp (jump_buffer, 1);\n-}\n-\n-\n-/* function returns INSTANCE of current process */\n-INSTANCE\n-__whoami ()\n-{\n-  INSTANCE whoami;\n-  if (current_process)\n-    whoami = current_process->whoami;\n-  else\n-    {\n-      whoami.ptype = 0;\n-      whoami.pcopy = 0;\n-    }\n-  return (whoami);\n-}\n-\n-typedef struct\n-{\n-  short *sc;\n-  int    data_len;\n-  void  *data;\n-} SignalDescr;\n-\n-typedef struct SIGNALQUEUE\n-{\n-  struct SIGNALQUEUE *forward;\n-  short    sc;\n-  int      data_len;\n-  void    *data;\n-  INSTANCE to;\n-  INSTANCE from;\n-} SignalQueue;\n-\n-/* define the signal queue */\n-static SignalQueue *msg_queue = 0;\n-\f\n-/* send a signal */\n-void\n-__send_signal (s, to, prio, with_len, with)\n-     SignalDescr *s;\n-     INSTANCE     to;\n-     int          prio;\n-     int          with_len;\n-     void        *with;\n-{\n-  SignalQueue *wrk = (SignalQueue *)&msg_queue;\n-  SignalQueue *p;\n-  TaskingStructList *t = task_array[Process];\n-\n-  /* search for process is defined and running */\n-  while (t)\n-    {\n-      if (*(t->data[0]->value) == to.ptype)\n-\tbreak;\n-      t = t->forward;\n-    }\n-  if (!t || !t->copies[to.pcopy])\n-    {\n-      fprintf (stderr, \"Can't find instance [%d,%d].\\n\",\n-\t       to.ptype, to.pcopy);\n-      exit (1);\n-    }\n-\n-  /* go to the end of the msg_queue */\n-  while (wrk->forward)\n-    wrk = wrk->forward;\n-\n-  p = xmalloc (sizeof (SignalQueue));\n-  p->sc = *(s->sc);\n-  if (p->data_len = s->data_len)\n-    {\n-      p->data = xmalloc (s->data_len);\n-      memcpy (p->data, s->data, s->data_len);\n-    }\n-  else\n-    p->data = 0;\n-  p->to = to;\n-  p->from = __whoami ();\n-  p->forward = 0;\n-  wrk->forward = p;\n-}\n-\f\n-void\n-start_signal_timeout (i, s, j)\n-     int i;\n-     SignalDescr *s;\n-     int j;\n-{\n-  __send_signal (s, __whoami (), 0, 0, 0);\n-}\n-\n-\n-/* receive a signal */\n-int\n-__wait_signal_timed (sig_got, nsigs, sigptr, datap,\n-\t\t     datalen, ins, else_branche,\n-\t\t     to, filename, lineno)\n-     short    *sig_got;\n-     int       nsigs;\n-     short    *sigptr[];\n-     void     *datap;\n-     int       datalen;\n-     INSTANCE *ins;\n-     int       else_branche;\n-     void     *to; \n-     char     *filename;\n-     int       lineno; \n-{\n-  INSTANCE me = __whoami ();\n-  SignalQueue *wrk, *p = msg_queue;\n-  int i;\n-  short sc;\n-\n-  /* search for a signal to `me' */\n-  wrk = (SignalQueue *)&msg_queue;\n-\n-  while (p)\n-    {\n-      if (p->to.ptype == me.ptype\n-\t  && p->to.pcopy == me.pcopy)\n-\tbreak;\n-      wrk = p;\n-      p = p->forward;\n-    }\n-\n-  if (!p)\n-    {\n-      fprintf (stderr, \"No signal for [%d,%d].\\n\",\n-\t       me.ptype, me.pcopy);\n-      exit (1);\n-    }\n-\n-  /* queue the message out */\n-  wrk->forward = p->forward;\n-\n-  /* now look for signal in list */\n-  for (i = 0; i < nsigs; i++)\n-    if (*(sigptr[i]) == p->sc)\n-      break;\n-\n-  if (i >= nsigs && ! else_branche)\n-    /* signal not in list and no ELSE in code */\n-    __cause_exception (\"signalfail\", __FILE__, __LINE__);\n-\n-  if (i >= nsigs)\n-    {\n-      /* signal not in list */\n-      sc = p->sc;\n-      if (ins)\n-\t*ins = p->from;\n-      if (p->data)\n-\tfree (p->data);\n-      free (p);\n-      *sig_got = sc;\n-      return (0);\n-    }\n-\n-  /* we have found a signal in the list */\n-  if (p->data_len)\n-    {\n-      if (datalen >= p->data_len\n-\t  && datap)\n-\tmemcpy (datap, p->data, p->data_len);\n-      else\n-\t__cause_exception (\"spacefail\", __FILE__, __LINE__);\n-    }\n-\n-  sc = p->sc;\n-  if (ins)\n-    *ins = p->from;\n-  if (p->data)\n-    free (p->data);\n-  free (p);\n-  *sig_got = sc;\n-  return (0);\n-}\n-\f\n-/* wait a certain amount of seconds */\n-int\n-__sleep_till (abstime, reltime, fname, lineno)\n-     time_t abstime;\n-     int    reltime;\n-     char  *fname;\n-     int    lineno;\n-{\n-  sleep (reltime);\n-  return 0;\n-}\n-\f\n-/* set up an alarm */\n-static int timeout_flag = 0;\n-\n-static void alarm_handler ()\n-{\n-  timeout_flag = 1;\n-}\n-\n-int *\n-__define_timeout (howlong, filename, lineno)\n-     unsigned long howlong;  /* comes in millisecs */\n-     char         *filename;\n-     int           lineno;\n-{\n-  unsigned int  prev_alarm_value;\n-\n-  signal (SIGALRM, alarm_handler);\n-  prev_alarm_value = alarm ((unsigned int)(howlong / 1000));\n-  return &timeout_flag;\n-}\n-\f\n-/* wait till timeout expires */\n-void\n-__wait_timeout (toid, filename, lineno)\n-     volatile int    *toid;\n-     char   *filename;\n-     int     lineno;\n-{\n-  while (! *toid) ;\n-  *toid = 0;\n-}"}, {"sha": "3a9a26cb2ac9df76118116dcf33c60edad995472", "filename": "libchill/rts.h", "status": "removed", "additions": 0, "deletions": 159, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Frts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Frts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Frts.h?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,159 +0,0 @@\n-/* GNU CHILL compiler regression test file\n- Copyright (C) 1992, 1993 Free Software Foundation, Inc.\n- \n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#ifndef __rts_h_\n-#define __rts_h_\n-\n-typedef enum\n-{\n-  UNUSED,\n-  Process,\n-  Signal,\n-  Buffer,\n-  Event,\n-  Synonym,\n-  Exception,\n-  LAST_AND_UNUSED,\n-} TaskingEnum;\n-\n-typedef void (*EntryPoint) ();\n-\n-typedef struct\n-{\n-  char       *name;\n-  short      *value;\n-  int         value_defined;\n-  EntryPoint  entry;\n-  unsigned char /*TaskingEnum*/ type;\n-} TaskingStruct;\n-\n-/* how an INSTANCE is implemented */\n-typedef struct\n-{\n-  short ptype;\n-  short pcopy;\n-} INSTANCE;\n-\n-/* interface to underlaying os */\n-typedef enum\n-{\n-  wait_wait,\n-  wait_buffer_send,\n-  wait_buffer_receive,\n-  wait_buffer_free,\n-  wait_event_delay,\n-  wait_event_free,\n-} Delay_Reason;\n-\n-extern INSTANCE __whoami ();\n-extern void *__xmalloc_ ();\n-\n-#define THIS  __whoami()\n-/* for easier changing to something different,\n-   i.e. allocate_memory */\n-#define MALLOC(ADDR,SIZE)  ADDR = __xmalloc_(SIZE)\n-#define FREE(ADDR)         free (ADDR)\n-\n-/* definitions for EVENTS */\n-typedef struct EVENTQUEUE\n-{\n-  struct EVENTQUEUE    *forward;       /* next in the list */\n-  struct EVENTQUEUE   **listhead;      /* pointer to EVENT location */\n-  int                   priority;      /* prio for DELAY or DELAY CASE */\n-  INSTANCE              this;          /* specify the instance is delayed */\n-  struct EVENTQUEUE    *startlist;     /* start of the list */\n-  struct EVENTQUEUE    *chain;         /* list of all events in an DELAY CASE */\n-  int                   is_continued;  /* indicates a continue action on that event */\n-  INSTANCE              who_continued; /* indicates who continued */\n-} Event_Queue;\n-\n-typedef struct\n-{\n-  Event_Queue     **ev;\n-  unsigned long     maxqueuelength;\n-} Event_Descr;\n-\n-/* definitions for BUFFERS */\n-struct BUFFERQUEUE;\n-\n-typedef struct BUFFER_WAIT_QUEUE\n-{\n-  struct BUFFER_WAIT_QUEUE   *forward;\n-  struct BUFFERQUEUE        **bufferaddr;\n-  INSTANCE                    this;\n-  struct BUFFER_WAIT_QUEUE   *startlist;\n-  struct BUFFER_WAIT_QUEUE   *chain;\n-  int                         is_sent;\n-  INSTANCE                    who_sent;     /* instance which have\n-\t\t\t\t\t       send a buffer */\n-  unsigned long               datalen;\n-  void                       *dataptr;\n-} Buffer_Wait_Queue;\n-\n-typedef struct BUFFER_SEND_QUEUE\n-{\n-  struct BUFFER_SEND_QUEUE   *forward;\n-  int                         priority;\n-  INSTANCE                    this;\n-  int                         is_delayed;\n-  unsigned long               datalen;\n-  void                       *dataptr;\n-} Buffer_Send_Queue;\n-\n-typedef struct BUFFERQUEUE\n-{\n-  Buffer_Wait_Queue    *waitqueue;\n-  unsigned long         waitqueuelength;\n-  Buffer_Send_Queue    *sendqueue;\n-  unsigned long         sendqueuelength;\n-} Buffer_Queue;\n-\n-typedef struct\n-{\n-  Buffer_Queue    **buf;\n-  unsigned long     maxqueuelength;\n-} Buffer_Descr;\n-\n-/* descriptor for data */\n-typedef struct\n-{\n-  void         *ptr;\n-  int           length;\n-} Data_Descr;\n-\n-/* time format runtime delivers */\n-typedef struct\n-{\n-    unsigned long\tsecs;\n-    unsigned long\tnanosecs;\n-} RtsTime;\n-\n-extern void __rtstime (RtsTime *t);\n-extern int __delay_this (Delay_Reason reason, RtsTime *t, char *file, int lineno);\n-extern void __continue_that (INSTANCE ins, int prio, char *file, int lineno);\n-\n-#endif /* __rts_h_ */"}, {"sha": "c49de58984400f257d87a99e418edc8f7c07d4a5", "filename": "libchill/rtsdummy.c", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Frtsdummy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Frtsdummy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Frtsdummy.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,72 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <setjmp.h>\n-/*#include \"gvarargs.h\"\tGcc source and runtime libs use gvarargs.h */\n-\n-#include \"rtltypes.h\"\n-\n-typedef void (*init_ptr) ();\n-typedef int * tasking_ptr;\n-\n-/* Dummy functions for rts access. When we come here we have an error. */\n-\n-typedef char *(*fetch_names) (int number);\n-typedef int (*fetch_numbers) (char *name);\n-\n-static void __rts_main_loop ()\n-{\n-  /* do nothing in case of no run time system */\n-}\n-init_ptr\t__RTS_MAIN_LOOP__ = __rts_main_loop;\n-\n-static void __rts_init ()\n-{\n-  /* do nothing in case of no run time system */\n-}\n-init_ptr\t__RTS_INIT__ = __rts_init;\n-\n-static char *__fetch_name (int number)\n-{\n-    fprintf (stderr, \"ChillLib: fetch_name: no runtime system library linked.\\n\");\n-    fflush (stderr);\n-    abort ();\n-}\n-fetch_names\t__RTS_FETCH_NAMES__ = __fetch_name;\n-\n-static int __fetch_number (char *name)\n-{\n-    fprintf (stderr, \"ChillLib: fetch_number: no runtime system library linked.\\n\");\n-    fflush (stderr);\n-    abort ();\n-}\n-fetch_numbers\t__RTS_FETCH_NUMBERS__ = __fetch_number;"}, {"sha": "7ca229c81bea2bff9ce99a5db68d04865cb4c16c", "filename": "libchill/sendbuffer.c", "status": "removed", "additions": 0, "deletions": 184, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsendbuffer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsendbuffer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fsendbuffer.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,184 +0,0 @@\n-/* Implement tasking-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <string.h>\n-#include \"rtltypes.h\"\n-#include \"rts.h\"\n-\n-EXCEPTION (sendfail);\n-\n-extern void __cause_ex1 (char *ex, char *file, int lineno);\n-\n-#define CAUSE_SENDFAIL  __cause_ex1 (\"sendfail\", filename, lineno)\n-\n-/*\n- * function __send_buffer\n- *\n- * parameters:\n- *     buffer     pointer to buffer descriptor\n- *     data       pointer to data descriptor\n- *     prio       priority for send action\n- *     timeout\t  pointer to timeout value\n- *     filename   source file name where function gets called\n- *     lineno     linenumber in source file\n- *\n- * returns:\n- *     int\t  0 .. success\n- *                1 .. timeout\n- *\n- * exceptions:\n- *     sendfail\n- *\n- * abstract:\n- *     implement the CHILL SEND buffer action.\n- */\n-\n-int\n-__send_buffer (buffer, data, prio, timeout, filename, lineno)\n-     Buffer_Descr    *buffer;\n-     Data_Descr      *data;\n-     int              prio;\n-     void            *timeout;\n-     char            *filename;\n-     int              lineno;\n-{\n-  Buffer_Queue        *bq;\n-  Buffer_Send_Queue   *bsq, *bsq_entry, *prev_bsq_entry;\n-  int                  cnt = 0;\n-  int\t\t       retval = 0;\n-  \n-  /* if we don't have anything queued on that buffer,\n-     set up the structure */\n-  memcpy (&bq, buffer->buf, sizeof (Buffer_Queue *));\n-  if (bq == 0)\n-    {\n-      MALLOC (bq, sizeof (Buffer_Queue));\n-      memset (bq, 0, sizeof (Buffer_Queue));\n-      memcpy (buffer->buf, &bq, sizeof (Buffer_Queue *));\n-    }\n-\n-  /* look if there is a process delayed on that buffer */\n-  if (bq->waitqueue != 0)\n-    {\n-\tBuffer_Wait_Queue\t*listentry;\n-\t\n-\t/* there is already a processes waiting for that buffer,\n-\t   check datalength and copy the data in */\n-\tif (bq->waitqueue->datalen < data->length)\n-\t    CAUSE_SENDFAIL;\n-\tmemcpy (bq->waitqueue->dataptr, data->ptr, data->length);\n-\t\n-\t/* set up the entry */\n-\tbq->waitqueue->is_sent = 1;\n-\tbq->waitqueue->who_sent = THIS;\n-\n-\t/* continue waiting process */\n-\t__continue_that (bq->waitqueue->this, prio, filename, lineno);\n-\t\n-\t/* now dequeue all entries of this list */\n-\tlistentry = bq->waitqueue->startlist;\n-\twhile (listentry != 0)\n-\t{\n-\t    Buffer_Wait_Queue\t*tmp, *prev_entry, *bwq;\n-\t    Buffer_Queue\t*bq;\n-\n-\t    tmp = listentry->chain;\n-\t    memcpy (&bq, listentry->bufferaddr, sizeof (Buffer_Queue *));\n-\t    prev_entry = (Buffer_Wait_Queue *)&bq->waitqueue;\n-\t    bwq = bq->waitqueue;\n-\n-\t    while (bwq != listentry)\n-\t    {\n-\t\tprev_entry = bwq;\n-\t\tbwq = bwq->forward;\n-\t    }\n-\t    /* dequeue it */\n-\t    prev_entry->forward = bwq->forward;\n-\t    bq->waitqueuelength--;\n-\t    listentry = tmp;\n-\t}\n-\t\n-\t/* all done */\n-\treturn 0;\n-    }\n-\n-  /* nothing in waitqueue, set up an entry for sendqueue.\n-     Note: we allocate here space for the data too, to reduce\n-     calls to malloc and let the dataptr point just behind\n-     the Buffer_Send_Queue structure. */\n-  MALLOC (bsq_entry, sizeof (Buffer_Send_Queue) + data->length);\n-  memset (bsq_entry, 0, sizeof (Buffer_Send_Queue));\n-\n-  bsq_entry->priority = prio;\n-  bsq_entry->this = THIS;\n-  bsq_entry->datalen = data->length;\n-  bsq_entry->dataptr = bsq_entry + 1;\n-  memcpy (bsq_entry->dataptr, data->ptr, data->length);\n-\n-  /* add entry to sendqueue */\n-  prev_bsq_entry = (Buffer_Send_Queue *)&bq->sendqueue;\n-  bsq = bq->sendqueue;\n-\n-  while (bsq != 0 && bsq->priority >= prio)\n-    {\n-      prev_bsq_entry = bsq;\n-      bsq = bsq->forward;\n-    }\n-  if (bsq == 0)\n-    {\n-      /* beginning or end of the list */\n-      prev_bsq_entry->forward = bsq_entry;\n-    }\n-  else\n-    {\n-      /* somewhere in the middle */\n-      bsq_entry->forward = prev_bsq_entry->forward;\n-      prev_bsq_entry->forward = bsq_entry;\n-    }\n-\n-  if (buffer->maxqueuelength != (unsigned long)-1L &&\n-      bq->sendqueuelength >= buffer->maxqueuelength)\n-    {\n-      /* we have to delay this process */\n-      bsq_entry->is_delayed = 1;\n-      retval = __delay_this (wait_buffer_send, timeout, filename, lineno);\n-      if (retval)\n-        {\n-\t  prev_bsq_entry->forward = bsq_entry->forward;\n-\t  FREE (bsq_entry);\n-        }\n-    }\n-  else\n-    /* just say that there is one more entry in the queue */\n-    bq->sendqueuelength++;\n-  return retval;\n-}\n-\n-/* force function __print_buffer to be linked */\n-extern void __print_buffer ();\n-static EntryPoint pev = __print_buffer;"}, {"sha": "c8bdb5738344c71fd8b859c8fc7bcbe064304151", "filename": "libchill/sequencible.c", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsequencible.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsequencible.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fsequencible.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,40 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-Boolean\n-__sequencible( Association_Mode* the_assoc, char* file, int line )\n-{\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-  if( !TEST_FLAG(the_assoc, IO_ISASSOCIATED) )\n-    CHILLEXCEPTION( file, line, NOTASSOCIATED, IS_NOT_ASSOCIATED );\n-  return TEST_FLAG(the_assoc, IO_SEQUENCIBLE) ? True : False;\n-}\n-"}, {"sha": "859c9a2714ca78c233c70c4f82a1b32e61224ae8", "filename": "libchill/setbitps.c", "status": "removed", "additions": 0, "deletions": 96, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsetbitps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsetbitps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fsetbitps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,96 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-extern void __cause_ex1 (char *exname, char *file, int lineno);\n-\n-/*\n- * function __setbitpowerset\n- *\n- * parameters:\n- *\tset\t\tdestination set\n- *\tbitlength\tlength of powerset in bits\n- *      minval          lowest valid set value\n- *      bitno           bit number within set\n- *      new_value       zero or one - (new bit value)\n- *\n- * returns:\n- *\tint\t\t1 .. found\n- *\t\t\t0 .. not found\n- *\n- * exceptions:\n- *  rangefail\n- *\n- * abstract:\n- *  checks if a given value is included in a powerset\n- *\n- */\n-void\n-__setbitpowerset (powerset, bitlength, minval, bitno, new_value, filename, lineno)\n-     SET_WORD      *powerset;\n-     unsigned long  bitlength;\n-     long           minval;\n-     long\t    bitno;\n-     char\t    new_value; /* booleans are represented as 8 bit value */\n-     char *\t    filename;\n-     int\t    lineno;\n-{\n-  if (powerset == NULL\n-      || bitno < minval \n-      || (bitno - minval) >= bitlength)\n-    __cause_ex1 (\"rangefail\", filename, lineno);\n-\n-  bitno -= minval;\n-  if (bitlength <= SET_CHAR_SIZE)\n-    {\n-      if (new_value & 1)\n-\tSET_BIT_IN_CHAR (*((SET_CHAR *)powerset), bitno);\n-      else\n-\tCLEAR_BIT_IN_CHAR (*((SET_CHAR *)powerset), bitno);\n-    }\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    {\n-      if (new_value & 1)\n-\tSET_BIT_IN_SHORT (*((SET_SHORT *)powerset), bitno);\n-      else\n-\tCLEAR_BIT_IN_SHORT (*((SET_SHORT *)powerset), bitno);\n-    }\n-  else\n-    {\n-      powerset += (bitno/SET_WORD_SIZE);\n-      bitno %= SET_WORD_SIZE;\n-      if (new_value & 1)\n-\tSET_BIT_IN_WORD (*powerset, bitno);\n-      else\n-\tCLEAR_BIT_IN_WORD (*powerset, bitno);\n-    }\n-}"}, {"sha": "ffade2655795a3f98ac39551df771f4b576c883d", "filename": "libchill/setbits.c", "status": "removed", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsetbits.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsetbits.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fsetbits.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,92 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-extern void __cause_ex1 (char *exname, char *file, int lineno);\n-\n-/*\n- * function __setbits\n- *\n- * parameters:\n- *\tout\t\tresult\n- *      bitlength       length of bitstring in bits\n- *\tstartbit\tstarting bitnumber\n- *\tendbit\t\tending bitnumber\n- *\n- * returns:\n- *\tvoid\n- *\n- * exceptions:\n- *   rangefail\n- *\n- * abstract:\n- *  set all bits from starting bitnumber to ending bitnumber\n- *  in a powerset\n- *\n- */\n-void\n-__setbits (out, bitlength, startbit, endbit)\n-     SET_WORD      *out;\n-     unsigned long  bitlength;\n-     long  startbit;\n-     long  endbit;\n-{\n-  unsigned long i;\n-  \n-  if (out == NULL\n-      || startbit < 0\n-      || startbit >= bitlength \n-      || endbit < 0\n-      || endbit >= bitlength \n-      || endbit < startbit)\n-    __cause_ex1 (\"rangefail\", \"__setbits\", __LINE__);\n-  \n-  if (bitlength <= SET_CHAR_SIZE)\n-    for (i = startbit; i <= endbit; i++)\n-      SET_BIT_IN_CHAR (*((SET_CHAR *)out), i);\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    for (i = startbit; i <= endbit; i++)\n-      SET_BIT_IN_SHORT (*((SET_SHORT *)out), i);\n-  else\n-    {\n-      SET_WORD\t*p;\n-      unsigned long       bitnr;\n-      \n-      /* FIXME - this is inefficient! */\n-      for (i = startbit; i <= endbit; i++)\n-\t{\n-\t  p = out + (i / SET_WORD_SIZE);\n-\t  bitnr = i % SET_WORD_SIZE;\n-\t  SET_BIT_IN_WORD (*p, bitnr);\n-\t}\n-    }\n-} "}, {"sha": "99c6b57553e98cd80d0afb74ba3be14a5a5c4e1d", "filename": "libchill/settextaccess.c", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsettextaccess.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsettextaccess.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fsettextaccess.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,47 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-void\n-__settextaccess( Text_Mode*   the_text,\n-                 Access_Mode* the_access,\n-                 char*        file,\n-                 int          line )\n-{\n-  if( !the_text )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_TEXT );\n-\n-  if( !the_access )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ACCESS );  \n-\n-  CLR_FLAG( the_text->access_sub, IO_TEXTIO );\n-\n-  the_text->access_sub = the_access;\n-  SET_FLAG( the_access, IO_TEXTIO );\n-}"}, {"sha": "bf0388ad201701ff921e0b957fe2ff6a522f53eb", "filename": "libchill/settextindex.c", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsettextindex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsettextindex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fsettextindex.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,46 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-void\n-__settextindex( Text_Mode*  the_text,\n-                signed long the_text_index, \n-                char*       file,\n-                int         line )\n-{\n-  if( !the_text )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_TEXT );\n-\n-  if( the_text_index < 0 \n-      || the_text->access_sub->reclength - 2 < the_text_index )\n-    CHILLEXCEPTION( file, line, TEXTFAIL, BAD_TEXTINDEX );\n-  \n-  the_text->actual_index = the_text_index;\n-}\n-"}, {"sha": "bd03af3f16f10488f863a1d41da9feee8486b7ac", "filename": "libchill/settextrecord.c", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsettextrecord.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsettextrecord.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fsettextrecord.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,45 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-void\n-__settextrecord( Text_Mode* the_text,\n-                 VarString* the_text_rec,\n-                 char*      file,\n-                 int        line )\n-{\n-  if( !the_text )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_TEXT );\n-\n-  if( !the_text_rec )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_TEXTREC );  \n-\n-  the_text->text_record = the_text_rec;\n-}\n-"}, {"sha": "39b54c046fec761f9fb6f960dfde0580f2ea6899", "filename": "libchill/sliceps.c", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsliceps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fsliceps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fsliceps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,72 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __powerset_slice\n- *\n- * parameters:\n- *      dps             dest powerset\n- *      dbl             destination bit length\n- *\tsps\t\tsourcepowerset\n- *\tsbl     \tsource powerset length in bits\n- *      start           starting bit number\n- *      end             ending bit number\n- *\n- * exceptions:\n- *  none\n- *\n- * abstract:\n- *  Extract into a powerset a slice of another powerset.\n- *\n- */\n-extern void\n-__pscpy (SET_WORD      *dps,\n-\t unsigned long  dbl,\n-\t unsigned long  doffset,\n-\t SET_WORD      *sps,\n-\t unsigned long  sbl,\n-\t unsigned long  start,\n-\t unsigned long  length);\n-\n-void\n-__psslice (dps, dbl, sps, sbl, start, length)\n-     SET_WORD      *dps;\n-     unsigned long  dbl;\n-     SET_WORD      *sps;\n-     unsigned long  sbl;\n-     unsigned long  start;\n-     unsigned long  length;\n-{\n-  /* simply supply a zero destination offset and copy the slice */\n-  __pscpy (dps, dbl, (unsigned long)0, sps, sbl, start, length);\n-}"}, {"sha": "c2da4038802b7526ac1e036546fd7e9e7d1a73f1", "filename": "libchill/terminate.c", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fterminate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fterminate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fterminate.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,67 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdlib.h>\n-#include \"rtltypes.h\"\n-\n-extern void __cause_ex1 (char *exname, char *file, int lineno);\n-\n-/* define needed exceptions */\n-EXCEPTION (empty)\n-\n-/*\n- * function __terminate\n- *\n- * parameter:\n- *  ptr\t\t\tpointer to memory to free\n- *  filename            source file which issued the call\n- *  linenumber          line number of the call within that file\n- *\n- * returns:\n- *  void\n- *\n- * exceptions:\n- *  empty\n- *\n- * abstract:\n- *  free memory previously allocated by __allocate.\n- *\n-*/\n-\n-void\n-__terminate (ptr, filename, linenumber)\n-     void *ptr;\n-     char *filename;\n-     int linenumber;\n-{\n-  if (! ptr)\n-    __cause_ex1 (\"empty\", filename, linenumber);\n-  free (ptr);\n-}"}, {"sha": "1a7a34408c18a2be70d84a1bb998c9c3cf36c8ea", "filename": "libchill/unhex.c", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Funhex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Funhex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Funhex.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,64 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <setjmp.h>\n-\n-/*\n- * function unhandled_exception\n- *\n- * parameter:\n- *  exname\t\tname of exception\n- *  file\t\tfilename\n- *  lineno\t\tline number\n- *  user_arg\t\tuser specified argument\n- *\n- * returns:\n- *  never\n- *\n- * abstract:\n- *  print an error message about unhandled exception and call abort\n- *\n- */\n-\n-void\n-unhandled_exception (exname, file, lineno, user_arg)\n-     char *exname;\n-     char *file;\n-     int lineno;\n-     int user_arg;\n-{\n-  sleep (1); /* give previous output a chance to finish */\n-  fprintf (stderr, \"ChillLib: unhandled exception `%s' in file %s at line %d\\n\",\n-\t   exname, file, lineno);\n-  fflush (stderr);\n-  abort ();\n-} /* unhandled_exception */"}, {"sha": "cae20c5e2587db49adc8b2464d14394cf38ff64b", "filename": "libchill/unhex1.c", "status": "removed", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Funhex1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Funhex1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Funhex1.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,65 +0,0 @@\n-/* Implement runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <setjmp.h>\n-\n-extern void cause_exception (char *ex, char *file, int lineno, int arg);\n-extern void unhandled_exception (char *ex, char *file, int lineno, int arg);\n-\n-/*\n- * function __unhandled_ex\n- *\n- * parameter:\n- *  exname\t\tname of exception\n- *  file\t\tfilename\n- *  lineno\t\tline number\n- *\n- * returns:\n- *  never\n- *\n- * abstract:\n- *  This function gets called by compiler generated code when an unhandled\n- *  exception occures.\n- *  First cause_exception gets called (which may be user defined) and\n- *  then the standard unhandled exception routine gets called.\n- *\n- */\n-\n-void\n-__unhandled_ex (exname, file, lineno)\n-     char *exname;\n-     char *file;\n-     int lineno;\n-{\n-    cause_exception (exname, file, lineno, 0);\n-    unhandled_exception (exname, file, lineno, 0);\n-} /* unhandled_exception */"}, {"sha": "996118e865396a7a80c591ec7ecfc8ba30ce85b6", "filename": "libchill/variable.c", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fvariable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fvariable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fvariable.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,39 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-Boolean\n-__variable( Association_Mode* the_assoc, char* file, int line )\n-{\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-  if( !TEST_FLAG(the_assoc, IO_ISASSOCIATED) )\n-    CHILLEXCEPTION( file, line, NOTASSOCIATED, IS_NOT_ASSOCIATED );\n-  return TEST_FLAG( the_assoc, IO_VARIABLE ) ? True : False;\n-}"}, {"sha": "2d967d93e4861d8b123fc3d2a7e5f0f033e9fb4c", "filename": "libchill/waitbuffer.c", "status": "removed", "additions": 0, "deletions": 306, "changes": 306, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fwaitbuffer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fwaitbuffer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fwaitbuffer.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,306 +0,0 @@\n-/* Implement tasking-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <string.h>\n-#include \"rtltypes.h\"\n-#include \"rts.h\"\n-\n-extern void __cause_ex1 (char *ex, char *file, int lineno);\n-\n-EXCEPTION (bufferinconsistency)\n-#define CAUSE_BUFFINCONS  __cause_ex1 (\"bufferinconsistency\", filename, lineno)\n-EXCEPTION (spacefail);\n-#define CAUSE_SPACEFAIL   __cause_ex1 (\"spacefail\", filename, lineno)\n-    \n-/*\n- * function __wait_buffer\n- *\n- * parameters:\n- *     buf_got\t   pointer to location for writing the received buffer address\n- *     nbuf        number of buffers in RECEIVE CASE\n- *     bufptr      array of pointers to buffer descriptor\n- *     datap       pointer where to store data\n- *     datalen     length of data\n- *     ins         pointer to instance location or 0\n- *     else_clause else specified or not\n- *     to_loc      pointer to timesupervision value\n- *     filename    source file name where function gets called\n- *     lineno      linenumber in source file\n- *\n- * returns:\n- *     int\t   0 .. success\n- *                 1 .. timed out\n- *\n- * exceptions:\n- *     bufferinconsistency  if something's wrong in the buffer queue's\n- *     spacefail            out of heap space of datalength of receiver\n- *                          less than data avilable.\n- *\n- * abstract:\n- *     implement the CHILL RECEIVE buffer CASE action.\n- */\n-\n-int\n-__wait_buffer (buf_got, nbuf, bufptr, datap, datalen, ins,\n-               else_clause, to, filename, lineno)\n-     void           **buf_got;\n-     int              nbuf;\n-     Buffer_Descr    *bufptr[];\n-     void            *datap;\n-     int              datalen;\n-     INSTANCE        *ins;\n-     int              else_clause;\n-     void            *to;\n-     char            *filename;\n-     int              lineno;\n-{\n-  int i;\n-  Buffer_Wait_Queue     *start_list;\n-  Buffer_Queue         **retval;\n-  Buffer_Queue         **highprio;\n-  int                    timed_out;\n-  \n-  /* look if there is a buffer already sent */\n-  highprio = 0;\n-  for (i = 0; i < nbuf; i++)\n-    {\n-      Buffer_Queue      *bq;\n-\n-      memcpy (&bq, bufptr[i]->buf, sizeof (Buffer_Queue *));\n-      if (bq != 0 && bq->sendqueue != 0)\n-        {\n-          if (highprio != 0)\n-            {\n-              Buffer_Queue      *bsq = *highprio;\n-              \n-              if (bq->sendqueue->priority > bsq->sendqueue->priority)\n-                highprio = bufptr[i]->buf;\n-            }\n-          else\n-            highprio = bufptr[i]->buf;\n-        }\n-    }\n-  \n-  if (highprio != 0)\n-    {\n-      Buffer_Queue      *bq;\n-\n-      memcpy (&bq, highprio, sizeof (Buffer_Queue *));\n-      if (bq != 0 && bq->sendqueue != 0)\n-        {\n-          Buffer_Send_Queue *bsq = bq->sendqueue;\n-          Buffer_Send_Queue *tmp;\n-\n-          /* check data length */\n-          if (datalen < bsq->datalen)\n-            /* something's totaly wrong. Raise exception */\n-            CAUSE_SPACEFAIL;\n-\n-          /* copy data out */\n-          memcpy (datap, bsq->dataptr, bsq->datalen);\n-\n-          /* update instance, if present */\n-          if (ins != 0)\n-            memcpy (ins, &bsq->this, sizeof (INSTANCE));\n-\n-          /* dequeue entry */\n-          tmp = bsq;\n-          bq->sendqueue = tmp->forward;\n-\n-          if (tmp->is_delayed)\n-            {\n-              /* there is an instance delayed on a send,\n-                 continue it. */\n-              __continue_that (tmp->this, tmp->priority, filename, lineno);\n-              FREE (tmp);\n-\n-              /* return the buffer we have received from */\n-\t      *buf_got = (void *)highprio;\n-              return 0;\n-            }\n-\n-          /* just decrease sendqueue length */\n-          bq->sendqueuelength--;\n-\n-          FREE (tmp);\n-\n-          /* as we got an entry free, we should continue\n-             an INSTANCE which is delayed on a send at this\n-             buffer */\n-          bsq = bq->sendqueue;\n-          while (bsq != 0)\n-            {\n-              if (bsq->is_delayed)\n-                {\n-                  bq->sendqueuelength++;\n-                  bsq->is_delayed = 0;\n-                  __continue_that (bsq->this, bsq->priority, filename, lineno);\n-                  break;\n-                }\n-              bsq = bsq->forward;\n-            }\n-          /* return the buffer we have received from */\n-          *buf_got = (void *)highprio;\n-\t  return 0;\n-        }\n-      }\n-\n-  /* if we come here, there is no buffer already sent */\n-  if (else_clause != 0)\n-    {\n-      /* in that case we return immediately */\n-      *buf_got = 0;\n-      return 0;\n-    }\n-  \n-  /* now we have to queue ourself to the wait queue(s) */\n-  start_list = 0;\n-  for (i = 0; i < nbuf; i++)\n-    {\n-      Buffer_Queue      *bq;\n-      Buffer_Wait_Queue *wrk;\n-      Buffer_Wait_Queue *bwq;\n-      Buffer_Wait_Queue *prev_queue_entry = 0;\n-      Buffer_Wait_Queue *prev_list_entry;\n-      int                j, have_done = 0;\n-      \n-      for (j = 0; j < i; j++)\n-        {\n-          if (bufptr[i]->buf == bufptr[j]->buf)\n-            {\n-              have_done = 1;\n-              break;\n-            }\n-        }\n-      if (have_done)\n-        continue;\n-      \n-      memcpy (&bq, bufptr[i]->buf, sizeof (Buffer_Queue *));\n-      if (bq == 0)\n-        {\n-          MALLOC (bq, sizeof (Buffer_Queue));\n-          memset (bq, 0, sizeof (Buffer_Queue));\n-          /* *(bufptr[i]->buf) = bq; may be unaligned */\n-\t  memcpy (bufptr[i]->buf, &bq, sizeof (Buffer_Queue *));\n-        }\n-      MALLOC (wrk, sizeof (Buffer_Wait_Queue));\n-      memset (wrk, 0, sizeof (Buffer_Wait_Queue));\n-      bwq = (Buffer_Wait_Queue *)&bq->waitqueue;\n-      \n-      wrk->this = THIS;\n-      wrk->datalen = datalen;\n-      wrk->dataptr = datap;\n-      wrk->bufferaddr = bufptr[i]->buf;\n-\n-      /* queue it at the end of buffer wait queue */\n-      while (bwq->forward != 0)\n-          bwq = bwq->forward;\n-      wrk->forward = bwq->forward;\n-      bwq->forward = wrk;\n-      \n-      /* queue it into list */\n-      wrk->startlist = start_list;\n-      if (! start_list)\n-        {\n-          start_list = wrk;\n-          prev_list_entry = wrk;\n-          wrk->startlist = start_list;\n-        }\n-      else\n-        {\n-          prev_list_entry->chain = wrk;\n-          prev_list_entry = wrk;\n-        }\n-      \n-      /* increment wait queue count */\n-      bq->waitqueuelength++;\n-    }\n-\n-  /* tell runtime system to delay this process */\n-  timed_out = __delay_this (wait_buffer_receive, to, filename, lineno);\n-  if (timed_out)\n-    {\n-      /* remove all entries from buffer queues */\n-      Buffer_Wait_Queue *listentry = start_list;\n-      \n-      while (listentry != 0)\n-        {\n-\t  Buffer_Queue *bq = *(listentry->bufferaddr);\n-\t  Buffer_Wait_Queue *prev_entry = (Buffer_Wait_Queue *)&bq->waitqueue;\n-\t  Buffer_Wait_Queue *bwq = bq->waitqueue;\n-\t  \n-\t  while (bwq != listentry)\n-\t    {\n-\t      prev_entry = bwq;\n-\t      bwq = bwq->forward;\n-\t    }\n-\t  /* dequeue it */\n-\t  prev_entry->forward = bwq->forward;\n-\t  bq->waitqueuelength--;\n-\t  listentry = listentry->chain;\n-        }\n-    }\n-  \n-  /* someone has continued us, find which buffer got ready */\n-  retval = 0;\n-\n-  while (start_list != 0)\n-    {\n-      Buffer_Wait_Queue *tmp = start_list->chain;\n-      \n-      if (start_list->is_sent)\n-        {\n-          /* this one has been sent */\n-          /* save return value */\n-          if (retval == 0)\n-              retval = start_list->bufferaddr;\n-          else\n-              /* more than one has been sent, that's wrong */\n-              CAUSE_BUFFINCONS;\n-          \n-          /* update instance, if present */\n-          if (ins != 0)\n-            memcpy (ins, &start_list->who_sent, sizeof (INSTANCE));\n-        }\n-      FREE (start_list);\n-      start_list = tmp;\n-    }\n-\n-  /* now check if there was really a buffer got */\n-  if (retval == 0 && !timed_out)\n-    /* something's totally wrong, raise an exception  */\n-    CAUSE_BUFFINCONS;\n-\n-  if (!timed_out)\n-    *buf_got = (void *)retval;\n-  return timed_out;\n-}\n-\n-/* force function __print_buffer to be linked */\n-extern void __print_buffer ();\n-static EntryPoint pev = __print_buffer;"}, {"sha": "2245a81809adcde9a485fd8c093e08edc4f3b5b5", "filename": "libchill/waituntil.c", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fwaituntil.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fwaituntil.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fwaituntil.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,82 +0,0 @@\n-/* Implement timing-related runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"rtltypes.h\"\n-#include \"rts.h\"\n-\n-EXCEPTION (timerfail);\n-\n-/*\n- * function __wait_until\n- *\n- * parameters:\n- *     abstime   absolute time value\n- *     filename\n- *     linenumber\n- *\n- * returns:\n- *     int   0 on success, 1 on failure\n- *\n- * exceptions:\n- *     timerfail\n- *\n- * abstract:\n- *     check for given argument is valid, calculate how long to wait in\n- *     seconds and call os to do it.\n- *\n- */\n-\n-int\n-__wait_until (abstime, filename, linenumber)\n-     unsigned long  abstime;\n-     char          *filename;\n-     int            linenumber;\n-{\n-  RtsTime\tnow, delta, abs_rtstime;\n-    \n-  /* get current time */\n-  __rtstime (&now);\n-    \n-  abs_rtstime.secs = abstime;\n-  abs_rtstime.nanosecs = 0;\n-  \n-  if (abs_rtstime.nanosecs < now.nanosecs)\n-    {\n-      abs_rtstime.secs--;\n-      abs_rtstime.nanosecs += 1000000000;\n-    }\n-  \n-  delta.secs = abs_rtstime.secs - now.secs;\n-  delta.nanosecs = abs_rtstime.nanosecs - now.nanosecs;\n-  \n-  if (delta.secs > abs_rtstime.secs)\n-    /* cannot wait into past */\n-    return 1;\n-  \n-  return __delay_this (wait_wait, &delta, filename, linenumber) == 1 ? 0 : 1;\n-}"}, {"sha": "9278ed1ec1a2a331e2542ec8cfcc161fc0c94242", "filename": "libchill/writeable.c", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fwriteable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fwriteable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fwriteable.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,39 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"fileio.h\"\n-\n-Boolean\n-__writeable( Association_Mode* the_assoc, char* file, int line )\n-{\n-  if( !the_assoc )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ASSOCIATION );\n-  if( !TEST_FLAG(the_assoc, IO_ISASSOCIATED) )\n-    CHILLEXCEPTION( file, line, NOTASSOCIATED, IS_NOT_ASSOCIATED );\n-  return TEST_FLAG(the_assoc, IO_WRITEABLE) ? True : False;\n-}"}, {"sha": "887bb3d4989f39c5da4c6db48b751b9a99ad2341", "filename": "libchill/writerecord.c", "status": "removed", "additions": 0, "deletions": 141, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fwriterecord.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fwriterecord.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fwriterecord.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,141 +0,0 @@\n-/* Implement Input/Output runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <setjmp.h>\n-#include <errno.h>\n-#include <string.h>\n-#include <unistd.h>\n-#include <sys/types.h>\n-\n-#include \"fileio.h\"\n-\n-static\n-void\n-doWrite( Access_Mode* the_access, void* buf, size_t nbyte )\n-{\n-  size_t nwrit;\n-\n-  nwrit = write( the_access->association->handle, buf, nbyte );\n-\n-  if( nwrit < nbyte )\n-  {\n-    the_access->association->syserrno = errno;\n-    RWEXCEPTION( WRITEFAIL, OS_IO_ERROR );\n-  }\n-}\n-\n-\n-void\n-__writerecord( Access_Mode*  the_access,\n-               signed long   the_index,\n-               char*         the_val_addr,\n-               unsigned long the_val_len,\n-               char*         file,\n-               int           line )\n-\n-{\n-  Association_Mode* the_assoc;\n-  unsigned long  info;\n-  char*          actaddr;\n-  unsigned short actlen;\n-  off_t          filepos;\n-\n-  if( !the_access )\n-    CHILLEXCEPTION( file, line, EMPTY, NULL_ACCESS );\n-\n-  if( !(the_assoc = the_access->association) )\n-    CHILLEXCEPTION( file, line, NOTCONNECTED, IS_NOT_CONNECTED );\n-\n-  /* Usage must no be ReadOnly */\n-  if( the_assoc->usage == ReadOnly )\n-    CHILLEXCEPTION( file, line, WRITEFAIL, BAD_USAGE );\n-\n-  /*\n-   *  Positioning\n-   */\n-  if( TEST_FLAG( the_access, IO_INDEXED ) )\n-  {\n-    /* index expression must be within bounds of index mode */\n-    if( the_index < the_access->lowindex\n-        || the_access->highindex < the_index )\n-      CHILLEXCEPTION( file, line, RANGEFAIL, BAD_INDEX );\n-    filepos = the_access->base + \n-              (the_index - the_access->lowindex) * the_access->reclength;\n-\n-    if( lseek( the_assoc->handle, filepos, SEEK_SET ) == -1L )\n-      CHILLEXCEPTION( file, line, WRITEFAIL, LSEEK_FAILS );\n-  }\n-\n-  if( (info = setjmp( __rw_exception )) )\n-    CHILLEXCEPTION( file, line, info>>16, info & 0xffff );\n-\n-  if( TEST_FLAG( the_access, IO_TEXTIO ) )\n-  {\n-    if( TEST_FLAG( the_access, IO_INDEXED ) )\n-    {\n-      int nspace = the_access->reclength - the_val_len;\n-      memset( the_val_addr + 2 + the_val_len, ' ', nspace );\n-      actlen = the_access->reclength - 2;\n-      MOV2(the_val_addr,&actlen);\n-      doWrite( the_access, the_val_addr, the_access->reclength );\n-    }\n-    else\n-    { \n-      if( the_assoc->ctl_pre )\n-\twrite( the_assoc->handle, &the_assoc->ctl_pre, 1 );\n-      MOV2(&actlen,the_val_addr);\n-      write( the_assoc->handle, the_val_addr + 2, actlen );\n-      if( the_assoc->ctl_post )\n-\twrite( the_assoc->handle, &the_assoc->ctl_post, 1 );\n-      the_assoc->ctl_pre  = '\\0';\n-      the_assoc->ctl_post = '\\n';\n-    }\n-  }\n-  else\n-  {\n-    switch( the_access->rectype )\n-    {\n-    case Fixed:\n-      if( TEST_FLAG( the_assoc, IO_VARIABLE ) )\n-      {\n-        actlen = the_access->reclength;\n-        doWrite( the_access, &actlen, sizeof(actlen) );\n-      }\n-      doWrite( the_access, the_val_addr, the_val_len );\n-      break;\n-    case VaryingChars:\n-      MOV2(&actlen,the_val_addr);\n-      if( actlen > the_access->reclength - 2 )\n-        CHILLEXCEPTION( file, line, RANGEFAIL, RECORD_TOO_LONG );\n-      actlen = TEST_FLAG( the_access, IO_INDEXED ) \n-               ? the_access->reclength : actlen + 2;\n-      doWrite( the_access, the_val_addr, actlen );\n-      break;\n-    }\n-  }\n-}"}, {"sha": "83f972071f1c0a1d6137ece325e71e9b2549e0f3", "filename": "libchill/xorps.c", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fxorps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178c3eff52cd705a16548be4ff8878cc2f1a8e3b/libchill%2Fxorps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libchill%2Fxorps.c?ref=178c3eff52cd705a16548be4ff8878cc2f1a8e3b", "patch": "@@ -1,83 +0,0 @@\n-/* Implement POWERSET runtime actions for CHILL.\n-   Copyright (C) 1992,1993 Free Software Foundation, Inc.\n-   Author: Wilfried Moser, et al\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define __CHILL_LIB__\n-\n-#include <stdio.h>\n-#include \"powerset.h\"\n-\n-/*\n- * function __xorpowerset\n- *\n- * parameters:\n- *\tout\t\treturn from __xorpowerset\n- *\tleft\t\tleft powerset\n- *\tright\t\tright powerset\n- *\tbitlength\tlength of powerset in bits\n- *\n- * returns:\n- *\tvoid\n- *\n- * exceptions:\n- *  none\n- *\n- * abstract:\n- *  xor's 2 powersets\n- *\n- */\n-\n-void\n-__xorpowerset (out, left, right, bitlength)\n-     SET_WORD      *out;\n-     SET_WORD      *left;\n-     SET_WORD      *right;\n-     unsigned long  bitlength;\n-{\n-  if (bitlength <= SET_CHAR_SIZE)\n-    {\n-      *((SET_CHAR *)out) = *((SET_CHAR *)left) ^\n-                           *((SET_CHAR *)right);\n-      MASK_UNUSED_CHAR_BITS((SET_CHAR *)out, bitlength);\n-    }\n-  else if (bitlength <= SET_SHORT_SIZE)\n-    {\n-      *((SET_SHORT *)out) = *((SET_SHORT *)left) ^\n-                            *((SET_SHORT *)right);\n-      MASK_UNUSED_SHORT_BITS((SET_SHORT *)out, bitlength);\n-    }\n-  else\n-    {\n-      unsigned long len = BITS_TO_WORDS(bitlength);\n-      register unsigned long i;\n-\n-      for (i = 0; i < len; i++)\n-\tout[i] = left[i] ^ right[i];\n-      MASK_UNUSED_WORD_BITS ((out + len - 1), \n-\t\t\t     bitlength % SET_WORD_SIZE);\n-    }\n-}"}]}