{"sha": "45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "node_id": "C_kwDOANBUbNoAKDQ1YmE2YmYyOGI3NWVlMzM5MWRmODNmYmZiMTA2MGE1MGRjNjNkM2E", "commit": {"author": {"name": "David Seifert", "email": "soap@gentoo.org", "date": "2022-02-03T14:47:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-03T15:10:18Z"}, "message": "make `-Werror` optional in libatomic/libbacktrace/libgomp/libitm/libsanitizer\n\n* `-Werror` can cause issues when a more recent version of GCC compiles\n  an older version:\n  - https://bugs.gentoo.org/229059\n  - https://bugs.gentoo.org/475350\n  - https://bugs.gentoo.org/667104\n\nlibatomic/ChangeLog:\n\n\t* configure.ac: Support --disable-werror.\n\t* configure: Regenerate.\n\nlibbacktrace/ChangeLog:\n\n\t* configure.ac: Support --disable-werror.\n\t* configure: Regenerate.\n\nlibgomp/ChangeLog:\n\n\t* configure.ac: Support --disable-werror.\n\t* configure: Regenerate.\n\nlibitm/ChangeLog:\n\n\t* configure.ac: Support --disable-werror.\n\t* configure: Regenerate.\n\nlibsanitizer/ChangeLog:\n\n\t* configure.ac: Support --disable-werror.\n\t* aclocal.m4: Include also ../config/warnings.m4.\n\t* libbacktrace/Makefile.am (WARN_FLAGS): Remove.\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.\n\t* asan/Makefile.in: Regenerate.\n\t* hwasan/Makefile.in: Regenerate.\n\t* interception/Makefile.in: Regenerate.\n\t* libbacktrace/Makefile.in: Regenerate.\n\t* lsan/Makefile.in: Regenerate.\n\t* sanitizer_common/Makefile.in: Regenerate.\n\t* tsan/Makefile.in: Regenerate.\n\t* ubsan/Makefile.in: Regenerate.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>", "tree": {"sha": "486d5ac3c903b1c6f1ea43c0841e3773d72e8b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/486d5ac3c903b1c6f1ea43c0841e3773d72e8b55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/comments", "author": {"login": "SoapGentoo", "id": 16636962, "node_id": "MDQ6VXNlcjE2NjM2OTYy", "avatar_url": "https://avatars.githubusercontent.com/u/16636962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SoapGentoo", "html_url": "https://github.com/SoapGentoo", "followers_url": "https://api.github.com/users/SoapGentoo/followers", "following_url": "https://api.github.com/users/SoapGentoo/following{/other_user}", "gists_url": "https://api.github.com/users/SoapGentoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/SoapGentoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SoapGentoo/subscriptions", "organizations_url": "https://api.github.com/users/SoapGentoo/orgs", "repos_url": "https://api.github.com/users/SoapGentoo/repos", "events_url": "https://api.github.com/users/SoapGentoo/events{/privacy}", "received_events_url": "https://api.github.com/users/SoapGentoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d5c7584fd6e72bfdbede86cef5ff04ae35f9744", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d5c7584fd6e72bfdbede86cef5ff04ae35f9744", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d5c7584fd6e72bfdbede86cef5ff04ae35f9744"}], "stats": {"total": 226, "additions": 183, "deletions": 43}, "files": [{"sha": "92853dd8a4585def324be9bea0fa71849c733031", "filename": "libatomic/configure", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libatomic%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libatomic%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -805,6 +805,7 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_symvers\n+enable_werror\n enable_cet\n with_gcc_major_version_only\n '\n@@ -1456,6 +1457,7 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-symvers=STYLE  enables symbol versioning of the shared library\n                           [default=yes]\n+  --disable-werror        disable building with -Werror\n   --enable-cet            enable Intel CET in target libraries [default=auto]\n \n Optional Packages:\n@@ -11380,7 +11382,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11383 \"configure\"\n+#line 11385 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11486,7 +11488,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11489 \"configure\"\n+#line 11491 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15565,9 +15567,17 @@ $as_echo \"$as_me: not updating unwritable cache $cache_file\" >&6;}\n fi\n rm -f confcache\n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror;\n+fi\n+\n # Add -Wall -Werror if we are using GCC.\n-if test \"x$GCC\" = \"xyes\"; then\n-  XCFLAGS=\"$XCFLAGS -Wall -Werror\"\n+if test \"x$GCC\" = \"xyes\"; then :\n+  XCFLAGS=\"$XCFLAGS -Wall\"\n+fi\n+if test \"x$enable_werror\" != \"xno\" && test \"x$GCC\" = \"xyes\"; then :\n+  XCFLAGS=\"$XCFLAGS -Werror\"\n fi\n \n # Add CET specific flags if CET is enabled"}, {"sha": "5563551aaae9fbcf7141f3617170db1f9ede84e4", "filename": "libatomic/configure.ac", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libatomic%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libatomic%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure.ac?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -251,10 +251,13 @@ LIBAT_ENABLE_SYMVERS\n CFLAGS=\"$save_CFLAGS\"\n AC_CACHE_SAVE\n \n+AC_ARG_ENABLE([werror],\n+  [AS_HELP_STRING([--disable-werror], [disable building with -Werror])])\n # Add -Wall -Werror if we are using GCC.\n-if test \"x$GCC\" = \"xyes\"; then\n-  XCFLAGS=\"$XCFLAGS -Wall -Werror\"\n-fi\n+AS_IF([test \"x$GCC\" = \"xyes\"],\n+  [XCFLAGS=\"$XCFLAGS -Wall\"])\n+AS_IF([test \"x$enable_werror\" != \"xno\" && test \"x$GCC\" = \"xyes\"],\n+  [XCFLAGS=\"$XCFLAGS -Werror\"])\n \n # Add CET specific flags if CET is enabled\n GCC_CET_FLAGS(CET_FLAGS)"}, {"sha": "17f470a4becb918ca13ef136dde401806ae9fcea", "filename": "libbacktrace/configure", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -801,6 +801,7 @@ with_gnu_ld\n enable_libtool_lock\n enable_largefile\n enable_cet\n+enable_werror\n with_system_libunwind\n enable_host_shared\n '\n@@ -1448,6 +1449,7 @@ Optional Features:\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n   --disable-largefile     omit support for large files\n   --enable-cet            enable Intel CET in target libraries [default=auto]\n+  --disable-werror        disable building with -Werror\n   --enable-host-shared    build host code as shared libraries\n   --enable-cet            enable Intel CET in host libraries [default=auto]\n \n@@ -11509,7 +11511,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11512 \"configure\"\n+#line 11514 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11615,7 +11617,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11618 \"configure\"\n+#line 11620 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12300,10 +12302,14 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-if test -n \"${with_target_subdir}\"; then\n-  WARN_FLAGS=\"$WARN_FLAGS -Werror\"\n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror;\n fi\n \n+if test \"x$enable_werror\" != \"xno\" && test -n \"${with_target_subdir}\"; then :\n+  WARN_FLAGS=\"$WARN_FLAGS -Werror\"\n+fi\n \n \n if test -n \"${with_target_subdir}\"; then"}, {"sha": "597c9705db8098c54e15b9c37bf8d9feec3a0c18", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -145,10 +145,10 @@ ACX_PROG_CC_WARNING_OPTS([-W -Wall -Wwrite-strings -Wstrict-prototypes \\\n \t\t\t  -Wmissing-format-attribute -Wcast-qual],\n \t\t\t  [WARN_FLAGS])\n \n-if test -n \"${with_target_subdir}\"; then\n-  WARN_FLAGS=\"$WARN_FLAGS -Werror\"\n-fi\n-\n+AC_ARG_ENABLE([werror],\n+  [AS_HELP_STRING([--disable-werror], [disable building with -Werror])])\n+AS_IF([test \"x$enable_werror\" != \"xno\" && test -n \"${with_target_subdir}\"],\n+  [WARN_FLAGS=\"$WARN_FLAGS -Werror\"])\n AC_SUBST(WARN_FLAGS)\n \n if test -n \"${with_target_subdir}\"; then"}, {"sha": "309e17dd91fd20b748ee32d572ca306031591911", "filename": "libgo/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -1496,7 +1496,7 @@ Optional Features:\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n-  --enable-werror         turns on -Werror [default=yes]\n+  --disable-werror        disable building with -Werror\n   --enable-version-specific-runtime-libs\n                           Specify that runtime libraries should be installed\n                           in a compiler-specific directory\n@@ -13834,7 +13834,7 @@ if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror;\n fi\n \n-if test \"x$enable_werror\" != \"xno\"; then\n+if test \"x$enable_werror\" != \"xno\" && test \"x$GCC\" = \"xyes\"; then :\n   WERROR=\"-Werror\"\n fi\n "}, {"sha": "8691d5b0ac1395cf8be810f42c3236c09767c402", "filename": "libgo/configure.ac", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -62,11 +62,10 @@ AC_PROG_AWK\n WARN_FLAGS='-Wall -Wextra -Wwrite-strings -Wcast-qual'\n AC_SUBST(WARN_FLAGS)\n \n-AC_ARG_ENABLE(werror, [AS_HELP_STRING([--enable-werror],\n-                                      [turns on -Werror @<:@default=yes@:>@])])\n-if test \"x$enable_werror\" != \"xno\"; then\n-  WERROR=\"-Werror\"\n-fi\n+AC_ARG_ENABLE([werror],\n+  [AS_HELP_STRING([--disable-werror], [disable building with -Werror])])\n+AS_IF([test \"x$enable_werror\" != \"xno\" && test \"x$GCC\" = \"xyes\"],\n+  [WERROR=\"-Werror\"])\n AC_SUBST(WERROR)\n \n glibgo_toolexecdir=no"}, {"sha": "a73a6d4400368dced71dca9f8a015a186cd63951", "filename": "libgomp/configure", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -825,6 +825,7 @@ enable_silent_rules\n enable_multilib\n with_toolexeclibdir\n enable_dependency_tracking\n+enable_werror\n enable_shared\n enable_static\n with_pic\n@@ -1486,6 +1487,7 @@ Optional Features:\n                           do not reject slow dependency extractors\n   --disable-dependency-tracking\n                           speeds up one-time build\n+  --disable-werror        disable building with -Werror\n   --enable-shared[=PKGS]  build shared libraries [default=yes]\n   --enable-static[=PKGS]  build static libraries [default=yes]\n   --enable-fast-install[=PKGS]\n@@ -4611,9 +4613,17 @@ fi\n # in both places for now and restore CFLAGS at the end of config.\n save_CFLAGS=\"$CFLAGS\"\n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror;\n+fi\n+\n # Add -Wall -Werror if we are using GCC.\n-if test \"x$GCC\" = \"xyes\"; then\n-  XCFLAGS=\"$XCFLAGS -Wall -Werror\"\n+if test \"x$GCC\" = \"xyes\"; then :\n+  XCFLAGS=\"$XCFLAGS -Wall\"\n+fi\n+if test \"x$enable_werror\" != \"xno\" && test \"x$GCC\" = \"xyes\"; then :\n+  XCFLAGS=\"$XCFLAGS -Werror\"\n fi\n \n # Find other programs we need.\n@@ -11421,7 +11431,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11424 \"configure\"\n+#line 11434 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11527,7 +11537,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11530 \"configure\"\n+#line 11540 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "a9b1f3973f7b64b8a3e7ba2e2b4abe4f62f35bcf", "filename": "libgomp/configure.ac", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libgomp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libgomp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.ac?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -121,10 +121,13 @@ AC_SUBST(CFLAGS)\n # in both places for now and restore CFLAGS at the end of config.\n save_CFLAGS=\"$CFLAGS\"\n \n+AC_ARG_ENABLE([werror],\n+  [AS_HELP_STRING([--disable-werror], [disable building with -Werror])])\n # Add -Wall -Werror if we are using GCC.\n-if test \"x$GCC\" = \"xyes\"; then\n-  XCFLAGS=\"$XCFLAGS -Wall -Werror\"\n-fi\n+AS_IF([test \"x$GCC\" = \"xyes\"],\n+  [XCFLAGS=\"$XCFLAGS -Wall\"])\n+AS_IF([test \"x$enable_werror\" != \"xno\" && test \"x$GCC\" = \"xyes\"],\n+  [XCFLAGS=\"$XCFLAGS -Werror\"])\n \n # Find other programs we need.\n AC_CHECK_TOOL(AR, ar)"}, {"sha": "18fc2d3a10a782a104ed0c7f0595410b0f43fbdf", "filename": "libitm/configure", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -814,6 +814,7 @@ enable_maintainer_mode\n enable_linux_futex\n enable_tls\n enable_symvers\n+enable_werror\n enable_cet\n with_gcc_major_version_only\n '\n@@ -1468,6 +1469,7 @@ Optional Features:\n   --enable-tls            Use thread-local storage [default=yes]\n   --enable-symvers=STYLE  enables symbol versioning of the shared library\n                           [default=yes]\n+  --disable-werror        disable building with -Werror\n   --enable-cet            enable Intel CET in target libraries [default=auto]\n \n Optional Packages:\n@@ -12056,7 +12058,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12059 \"configure\"\n+#line 12061 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12162,7 +12164,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12165 \"configure\"\n+#line 12167 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17847,9 +17849,17 @@ $as_echo \"$as_me: not updating unwritable cache $cache_file\" >&6;}\n fi\n rm -f confcache\n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror;\n+fi\n+\n # Add -Wall -Werror if we are using GCC.\n-if test \"x$GCC\" = \"xyes\"; then\n-  XCFLAGS=\"$XCFLAGS -Wall -Werror\"\n+if test \"x$GCC\" = \"xyes\"; then :\n+  XCFLAGS=\"$XCFLAGS -Wall\"\n+fi\n+if test \"x$enable_werror\" != \"xno\" && test \"x$GCC\" = \"xyes\"; then :\n+  XCFLAGS=\"$XCFLAGS -Werror\"\n fi\n \n XCFLAGS=\"$XCFLAGS $XPCFLAGS\""}, {"sha": "78a682376d943753f4cfb23ef7328467a5ed1ba1", "filename": "libitm/configure.ac", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libitm%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libitm%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.ac?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -261,10 +261,13 @@ GCC_CHECK_ELF_STYLE_WEAKREF\n CFLAGS=\"$save_CFLAGS\"\n AC_CACHE_SAVE\n \n+AC_ARG_ENABLE([werror],\n+  [AS_HELP_STRING([--disable-werror], [disable building with -Werror])])\n # Add -Wall -Werror if we are using GCC.\n-if test \"x$GCC\" = \"xyes\"; then\n-  XCFLAGS=\"$XCFLAGS -Wall -Werror\"\n-fi\n+AS_IF([test \"x$GCC\" = \"xyes\"],\n+  [XCFLAGS=\"$XCFLAGS -Wall\"])\n+AS_IF([test \"x$enable_werror\" != \"xno\" && test \"x$GCC\" = \"xyes\"],\n+  [XCFLAGS=\"$XCFLAGS -Werror\"])\n \n XCFLAGS=\"$XCFLAGS $XPCFLAGS\"\n "}, {"sha": "aab88deb6e8610f13ec53eff2c4ff20c66723794", "filename": "libsanitizer/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.in?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -108,6 +108,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n+\t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n@@ -290,6 +291,7 @@ STRIP = @STRIP@\n TSAN_TARGET_DEPENDENT_OBJECTS = @TSAN_TARGET_DEPENDENT_OBJECTS@\n VERSION = @VERSION@\n VIEW_FILE = @VIEW_FILE@\n+WARN_FLAGS = @WARN_FLAGS@\n abs_builddir = @abs_builddir@\n abs_srcdir = @abs_srcdir@\n abs_top_builddir = @abs_top_builddir@"}, {"sha": "6aa15694eba07b20bdd32bd1a87d9d2dbe54d327", "filename": "libsanitizer/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Faclocal.m4?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -1195,6 +1195,7 @@ m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n m4_include([../config/stdint.m4])\n m4_include([../config/toolexeclibdir.m4])\n+m4_include([../config/warnings.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])\n m4_include([../ltversion.m4])"}, {"sha": "2476fbc5a2624c2e9e9ebfcdc2be8728fc2d5ac6", "filename": "libsanitizer/asan/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Fasan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Fasan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.in?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -103,6 +103,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n+\t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n@@ -344,6 +345,7 @@ STRIP = @STRIP@\n TSAN_TARGET_DEPENDENT_OBJECTS = @TSAN_TARGET_DEPENDENT_OBJECTS@\n VERSION = @VERSION@\n VIEW_FILE = @VIEW_FILE@\n+WARN_FLAGS = @WARN_FLAGS@\n abs_builddir = @abs_builddir@\n abs_srcdir = @abs_srcdir@\n abs_top_builddir = @abs_top_builddir@"}, {"sha": "771b135573a8b031eafc70a52b63a84120c8866e", "filename": "libsanitizer/configure", "status": "modified", "additions": 74, "deletions": 2, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -639,6 +639,7 @@ EXTRA_CXXFLAGS\n EXTRA_CFLAGS\n EXTRA_ASFLAGS\n get_gcc_base_ver\n+WARN_FLAGS\n SANITIZER_COMMON_TARGET_DEPENDENT_OBJECTS\n TSAN_TARGET_DEPENDENT_OBJECTS\n LIBBACKTRACE_SUPPORTED_FALSE\n@@ -816,6 +817,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+enable_werror\n with_gcc_major_version_only\n enable_cet\n '\n@@ -1469,6 +1471,7 @@ Optional Features:\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n+  --disable-werror        disable building with -Werror\n   --enable-cet            enable Intel CET in target libraries [default=auto]\n \n Optional Packages:\n@@ -12356,7 +12359,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12359 \"configure\"\n+#line 12362 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12462,7 +12465,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12465 \"configure\"\n+#line 12468 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16827,6 +16830,75 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror;\n+fi\n+\n+\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+WARN_FLAGS=\n+save_CFLAGS=\"$CFLAGS\"\n+for real_option in -Wextra -Wall -Wwrite-strings \\\n+                          -Wmissing-format-attribute -Wcast-qual; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr x$real_option : 'x-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n+  as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n+$as_echo_n \"checking whether $CC supports $option... \" >&6; }\n+if eval \\${$as_acx_Woption+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  CFLAGS=\"$option\"\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  eval \"$as_acx_Woption=yes\"\n+else\n+  eval \"$as_acx_Woption=no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+fi\n+eval ac_res=\\$$as_acx_Woption\n+\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n+$as_echo \"$ac_res\" >&6; }\n+  if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n+  WARN_FLAGS=\"$WARN_FLAGS${WARN_FLAGS:+ }$real_option\"\n+fi\n+  done\n+CFLAGS=\"$save_CFLAGS\"\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+if test \"x$enable_werror\" != \"xno\"; then :\n+  WARN_FLAGS=\"$WARN_FLAGS -Werror\"\n+fi\n+\n+\n # Determine what GCC version number to use in filesystem paths.\n \n   get_gcc_base_ver=\"cat\""}, {"sha": "7f1ef3979c4cb03c3505573574ccb2c7c93caffa", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -400,6 +400,16 @@ fi\n AC_SUBST([TSAN_TARGET_DEPENDENT_OBJECTS])\n AC_SUBST([SANITIZER_COMMON_TARGET_DEPENDENT_OBJECTS])\n \n+AC_ARG_ENABLE([werror],\n+  [AS_HELP_STRING([--disable-werror], [disable building with -Werror])])\n+\n+ACX_PROG_CC_WARNING_OPTS([-Wextra -Wall -Wwrite-strings \\\n+                          -Wmissing-format-attribute -Wcast-qual],\n+                          [WARN_FLAGS])\n+AS_IF([test \"x$enable_werror\" != \"xno\"],\n+  [WARN_FLAGS=\"$WARN_FLAGS -Werror\"])\n+AC_SUBST([WARN_FLAGS])\n+\n # Determine what GCC version number to use in filesystem paths.\n GCC_BASE_VER\n "}, {"sha": "67553f3979dad9658b274fa1b99896fc839c841e", "filename": "libsanitizer/hwasan/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Fhwasan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Fhwasan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fhwasan%2FMakefile.in?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -101,6 +101,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n+\t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n@@ -332,6 +333,7 @@ STRIP = @STRIP@\n TSAN_TARGET_DEPENDENT_OBJECTS = @TSAN_TARGET_DEPENDENT_OBJECTS@\n VERSION = @VERSION@\n VIEW_FILE = @VIEW_FILE@\n+WARN_FLAGS = @WARN_FLAGS@\n abs_builddir = @abs_builddir@\n abs_srcdir = @abs_srcdir@\n abs_top_builddir = @abs_top_builddir@"}, {"sha": "bce788aeea7d604c5fb90baf28cb4a8352de6da8", "filename": "libsanitizer/interception/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Finterception%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Finterception%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Finterception%2FMakefile.in?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -99,6 +99,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n+\t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n@@ -262,6 +263,7 @@ STRIP = @STRIP@\n TSAN_TARGET_DEPENDENT_OBJECTS = @TSAN_TARGET_DEPENDENT_OBJECTS@\n VERSION = @VERSION@\n VIEW_FILE = @VIEW_FILE@\n+WARN_FLAGS = @WARN_FLAGS@\n abs_builddir = @abs_builddir@\n abs_srcdir = @abs_srcdir@\n abs_top_builddir = @abs_top_builddir@"}, {"sha": "0cf8d2104c06ce328a4fd93219943454373a601d", "filename": "libsanitizer/libbacktrace/Makefile.am", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Flibbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Flibbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flibbacktrace%2FMakefile.am?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -34,8 +34,6 @@ ACLOCAL_AMFLAGS = -I ../.. -I ../../config\n AM_CPPFLAGS = -I $(top_srcdir)/../include -I $(top_srcdir)/../libgcc \\\n \t-I ../../libgcc -I .. -I $(top_srcdir) -I $(top_srcdir)/../libbacktrace\n \n-WARN_FLAGS = -W -Wall -Wwrite-strings -Wmissing-format-attribute \\\n-\t     -Wcast-qual -Werror\n C_WARN_FLAGS = $(WARN_FLAGS) -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition\n CXX_WARN_FLAGS = $(WARN_FLAGS) -Wno-unused-parameter\n AM_CFLAGS = $(C_WARN_FLAGS)"}, {"sha": "ece4f11a855e5b40986a3678a07d6704db567396", "filename": "libsanitizer/libbacktrace/Makefile.in", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Flibbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Flibbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flibbacktrace%2FMakefile.in?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -130,6 +130,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n+\t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n@@ -312,6 +313,7 @@ STRIP = @STRIP@\n TSAN_TARGET_DEPENDENT_OBJECTS = @TSAN_TARGET_DEPENDENT_OBJECTS@\n VERSION = @VERSION@\n VIEW_FILE = @VIEW_FILE@\n+WARN_FLAGS = @WARN_FLAGS@\n abs_builddir = @abs_builddir@\n abs_srcdir = @abs_srcdir@\n abs_top_builddir = @abs_top_builddir@\n@@ -385,9 +387,6 @@ ACLOCAL_AMFLAGS = -I ../.. -I ../../config\n AM_CPPFLAGS = -I $(top_srcdir)/../include -I $(top_srcdir)/../libgcc \\\n \t-I ../../libgcc -I .. -I $(top_srcdir) -I $(top_srcdir)/../libbacktrace\n \n-WARN_FLAGS = -W -Wall -Wwrite-strings -Wmissing-format-attribute \\\n-\t     -Wcast-qual -Werror\n-\n C_WARN_FLAGS = $(WARN_FLAGS) -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition\n CXX_WARN_FLAGS = $(WARN_FLAGS) -Wno-unused-parameter\n AM_CFLAGS = $(C_WARN_FLAGS) $(EXTRA_CFLAGS)"}, {"sha": "857f244cd86be2abc177346dbfcac06dde06a2dc", "filename": "libsanitizer/lsan/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Flsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Flsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flsan%2FMakefile.in?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -101,6 +101,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n+\t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n@@ -307,6 +308,7 @@ STRIP = @STRIP@\n TSAN_TARGET_DEPENDENT_OBJECTS = @TSAN_TARGET_DEPENDENT_OBJECTS@\n VERSION = @VERSION@\n VIEW_FILE = @VIEW_FILE@\n+WARN_FLAGS = @WARN_FLAGS@\n abs_builddir = @abs_builddir@\n abs_srcdir = @abs_srcdir@\n abs_top_builddir = @abs_top_builddir@"}, {"sha": "c4b009fed8370669f513ae3e9a31ad9f0ac2838d", "filename": "libsanitizer/sanitizer_common/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Fsanitizer_common%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Fsanitizer_common%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2FMakefile.in?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -105,6 +105,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n+\t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n@@ -299,6 +300,7 @@ STRIP = @STRIP@\n TSAN_TARGET_DEPENDENT_OBJECTS = @TSAN_TARGET_DEPENDENT_OBJECTS@\n VERSION = @VERSION@\n VIEW_FILE = @VIEW_FILE@\n+WARN_FLAGS = @WARN_FLAGS@\n abs_builddir = @abs_builddir@\n abs_srcdir = @abs_srcdir@\n abs_top_builddir = @abs_top_builddir@"}, {"sha": "538d2e8eb68beb27dbb36cf7558fc3359b4f9808", "filename": "libsanitizer/tsan/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Ftsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Ftsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.in?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -102,6 +102,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n+\t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n@@ -336,6 +337,7 @@ STRIP = @STRIP@\n TSAN_TARGET_DEPENDENT_OBJECTS = @TSAN_TARGET_DEPENDENT_OBJECTS@\n VERSION = @VERSION@\n VIEW_FILE = @VIEW_FILE@\n+WARN_FLAGS = @WARN_FLAGS@\n abs_builddir = @abs_builddir@\n abs_srcdir = @abs_srcdir@\n abs_top_builddir = @abs_top_builddir@"}, {"sha": "497e03386961b1a4027ccffacf3c848fd50d56e2", "filename": "libsanitizer/ubsan/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Fubsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ba6bf28b75ee3391df83fbfb1060a50dc63d3a/libsanitizer%2Fubsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fubsan%2FMakefile.in?ref=45ba6bf28b75ee3391df83fbfb1060a50dc63d3a", "patch": "@@ -101,6 +101,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n+\t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n@@ -301,6 +302,7 @@ STRIP = @STRIP@\n TSAN_TARGET_DEPENDENT_OBJECTS = @TSAN_TARGET_DEPENDENT_OBJECTS@\n VERSION = @VERSION@\n VIEW_FILE = @VIEW_FILE@\n+WARN_FLAGS = @WARN_FLAGS@\n abs_builddir = @abs_builddir@\n abs_srcdir = @abs_srcdir@\n abs_top_builddir = @abs_top_builddir@"}]}