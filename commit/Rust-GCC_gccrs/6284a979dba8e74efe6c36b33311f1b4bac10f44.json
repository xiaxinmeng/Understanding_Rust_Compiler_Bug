{"sha": "6284a979dba8e74efe6c36b33311f1b4bac10f44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI4NGE5NzlkYmE4ZTc0ZWZlNmMzNmIzMzMxMWYxYjRiYWMxMGY0NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-02-25T14:09:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-02-25T14:09:18Z"}, "message": "re PR c++/68049 (template instantiation involving may_alias defines symbol twice)\n\n\tPR c++/68049\n\t* tree.c (strip_typedefs): Use DECL_ORIGINAL_TYPE.\n\nFrom-SVN: r233715", "tree": {"sha": "5e690eac2f746a80a13c47a2de8bad6c4205c448", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e690eac2f746a80a13c47a2de8bad6c4205c448"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6284a979dba8e74efe6c36b33311f1b4bac10f44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6284a979dba8e74efe6c36b33311f1b4bac10f44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6284a979dba8e74efe6c36b33311f1b4bac10f44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6284a979dba8e74efe6c36b33311f1b4bac10f44/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "798e2a8ed800a05e24f8969dc236bc4b7b2af163", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/798e2a8ed800a05e24f8969dc236bc4b7b2af163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/798e2a8ed800a05e24f8969dc236bc4b7b2af163"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "eb5cfe6b5664ee41d6251450deeb611d6164537d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6284a979dba8e74efe6c36b33311f1b4bac10f44/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6284a979dba8e74efe6c36b33311f1b4bac10f44/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6284a979dba8e74efe6c36b33311f1b4bac10f44", "patch": "@@ -1,3 +1,8 @@\n+2016-02-25  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/68049\n+\t* tree.c (strip_typedefs): Use DECL_ORIGINAL_TYPE.\n+\n 2016-02-25  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/69736"}, {"sha": "ac38ce3fe11652b822745b126215d9e0e338c7d9", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6284a979dba8e74efe6c36b33311f1b4bac10f44/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6284a979dba8e74efe6c36b33311f1b4bac10f44/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=6284a979dba8e74efe6c36b33311f1b4bac10f44", "patch": "@@ -1447,7 +1447,15 @@ strip_typedefs (tree t, bool *remove_attributes)\n     }\n \n   if (!result)\n-      result = TYPE_MAIN_VARIANT (t);\n+    {\n+      if (typedef_variant_p (t))\n+\t/* Explicitly get the underlying type, as TYPE_MAIN_VARIANT doesn't\n+\t   strip typedefs with attributes.  */\n+\tresult = TYPE_MAIN_VARIANT (DECL_ORIGINAL_TYPE (TYPE_NAME (t)));\n+      else\n+\tresult = TYPE_MAIN_VARIANT (t);\n+    }\n+  gcc_assert (!typedef_variant_p (result));\n   if (TYPE_USER_ALIGN (t) != TYPE_USER_ALIGN (result)\n       || TYPE_ALIGN (t) != TYPE_ALIGN (result))\n     {"}, {"sha": "ba6091b6d722d79589fd3ddbc0389262428b941a", "filename": "gcc/testsuite/g++.dg/ext/attribute-may-alias-3.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6284a979dba8e74efe6c36b33311f1b4bac10f44/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-may-alias-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6284a979dba8e74efe6c36b33311f1b4bac10f44/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-may-alias-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-may-alias-3.C?ref=6284a979dba8e74efe6c36b33311f1b4bac10f44", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/68049\n+// { dg-do compile { target c++11 } }\n+\n+template <typename T> struct Bar\n+{\n+    using type = T;\n+};\n+template <typename T> struct Foo\n+{\n+    typedef typename Bar<T>::type alias_type [[gnu::may_alias]];\n+\n+    alias_type operator()() { return {}; }\n+};\n+\n+template <typename T> void print(T) {}\n+\n+int main()\n+{\n+    print(Foo<int>()());\n+    print(0);\n+    return 0;\n+}"}]}