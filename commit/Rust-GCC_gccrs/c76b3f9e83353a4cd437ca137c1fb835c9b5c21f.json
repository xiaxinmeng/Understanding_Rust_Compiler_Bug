{"sha": "c76b3f9e83353a4cd437ca137c1fb835c9b5c21f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc2YjNmOWU4MzM1M2E0Y2Q0MzdjYTEzN2MxZmI4MzVjOWI1YzIxZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-26T15:13:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-26T15:18:07Z"}, "message": "tree-optimization/97953 - fix bougs range recorded by EVRP\n\nEVRP records some ranges from asserts into SSA_NAME_RANGE_INFO\nbut fails to assert that the condition the range is derived from\nis always true after the SSA names definition.  The patch implements\nthe simplest post-dominance check, basic-block equality.\n\n2020-11-26  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/97953\n\t* gimple-ssa-evrp-analyze.c\n\t(evrp_range_analyzer::record_ranges_from_incoming_edge): Make\n\tsure the condition post-dominates the SSA definition before\n\trecording into SSA_NAME_RANGE_INFO.\n\n\t* gcc.dg/pr97953.c: New testcase.", "tree": {"sha": "307b34cd670b366a27dfb9eded7bc6c87902715f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/307b34cd670b366a27dfb9eded7bc6c87902715f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c76b3f9e83353a4cd437ca137c1fb835c9b5c21f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76b3f9e83353a4cd437ca137c1fb835c9b5c21f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c76b3f9e83353a4cd437ca137c1fb835c9b5c21f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76b3f9e83353a4cd437ca137c1fb835c9b5c21f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c197b83e12b634b65a449d8a7375a18f350708e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c197b83e12b634b65a449d8a7375a18f350708e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c197b83e12b634b65a449d8a7375a18f350708e"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "b998e0b6594863ee8d8dc15aa9b6b90350407354", "filename": "gcc/gimple-ssa-evrp-analyze.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76b3f9e83353a4cd437ca137c1fb835c9b5c21f/gcc%2Fgimple-ssa-evrp-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76b3f9e83353a4cd437ca137c1fb835c9b5c21f/gcc%2Fgimple-ssa-evrp-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-evrp-analyze.c?ref=c76b3f9e83353a4cd437ca137c1fb835c9b5c21f", "patch": "@@ -218,7 +218,11 @@ evrp_range_analyzer::record_ranges_from_incoming_edge (basic_block bb)\n \t      push_value_range (vrs[i].first, vrs[i].second);\n \t      if (is_fallthru\n \t\t  && m_update_global_ranges\n-\t\t  && all_uses_feed_or_dominated_by_stmt (vrs[i].first, stmt))\n+\t\t  && all_uses_feed_or_dominated_by_stmt (vrs[i].first, stmt)\n+\t\t  /* The condition must post-dominate the definition point.  */\n+\t\t  && (SSA_NAME_IS_DEFAULT_DEF (vrs[i].first)\n+\t\t      || (gimple_bb (SSA_NAME_DEF_STMT (vrs[i].first))\n+\t\t\t  == pred_e->src)))\n \t\t{\n \t\t  set_ssa_range_info (vrs[i].first, vrs[i].second);\n \t\t  maybe_set_nonzero_bits (pred_e, vrs[i].first);"}, {"sha": "6219619d67b07a8777068ad86e27426c76f279d6", "filename": "gcc/testsuite/gcc.dg/pr97953.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76b3f9e83353a4cd437ca137c1fb835c9b5c21f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97953.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76b3f9e83353a4cd437ca137c1fb835c9b5c21f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97953.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97953.c?ref=c76b3f9e83353a4cd437ca137c1fb835c9b5c21f", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-tree-fre\" } */\n+\n+int __attribute__((noipa))\n+foo (int flag, int *p)\n+{\n+  int val = *p;\n+  if (flag)\n+    {\n+      if (val != 1)\n+        __builtin_unreachable ();\n+      return 0;\n+    }\n+  int val2 = *p;\n+  return val2 == 2;\n+}\n+\n+int main()\n+{\n+  int i = 2;\n+  if (foo (0, &i) != 1)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}