{"sha": "12f78d8bed049278229b24c9f0b7f97468fee5c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJmNzhkOGJlZDA0OTI3ODIyOWIyNGM5ZjBiN2Y5NzQ2OGZlZTVjNQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2019-08-16T09:32:36Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2019-08-16T09:32:36Z"}, "message": "[gensupport] PR 91255: Do not error out immediately on set_attr_alternative with define_subst\n\nI'm trying to add a define_subst use in the arm backend but am getting many build errors complaining about:\n`set_attr_alternative' is unsupported by `define_subst'\n\nLooking at the gensupport.c code it iterates over all define_insns and errors if any of them have set_attr_alternative.\n\nThe usecase I'm targetting doesn't involve patterns with set_attr_alternative, so I would like to make the define_subst handling\nmore robust to only error out if the define_subst is actually attempted on a set_attr_alternative.\n\nThis patch produces the error only if the set_attr_alternative attr matches the subst name.\nThis allows a build of the arm backend with a define_subst usage to succeed.\n\n\tPR other/91255\n\t* gensupport.c (has_subst_attribute): Error out on set_attr_alternative\n\tonly if subst_name matches curr_attr string.\n\nFrom-SVN: r274564", "tree": {"sha": "b2d40fc7495f193d4f6800727eff5701adb04315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2d40fc7495f193d4f6800727eff5701adb04315"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12f78d8bed049278229b24c9f0b7f97468fee5c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12f78d8bed049278229b24c9f0b7f97468fee5c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12f78d8bed049278229b24c9f0b7f97468fee5c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12f78d8bed049278229b24c9f0b7f97468fee5c5/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc19f80ceb27cc3d31d259ebecaad12005acfd7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc19f80ceb27cc3d31d259ebecaad12005acfd7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc19f80ceb27cc3d31d259ebecaad12005acfd7e"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "6bd5e9b370ba8b9bf6adf15289a6475a124bee1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12f78d8bed049278229b24c9f0b7f97468fee5c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12f78d8bed049278229b24c9f0b7f97468fee5c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12f78d8bed049278229b24c9f0b7f97468fee5c5", "patch": "@@ -1,3 +1,9 @@\n+2019-08-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR other/91255\n+\t* gensupport.c (has_subst_attribute): Error out on set_attr_alternative\n+\tonly if subst_name matches curr_attr string.\n+\n 2019-08-16  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-forwprop.c (simplify_builtin_call): Do not remove"}, {"sha": "c64f683bc5c77aa993b201cc22db0b6fc7dedf58", "filename": "gcc/gensupport.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12f78d8bed049278229b24c9f0b7f97468fee5c5/gcc%2Fgensupport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12f78d8bed049278229b24c9f0b7f97468fee5c5/gcc%2Fgensupport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.c?ref=12f78d8bed049278229b24c9f0b7f97468fee5c5", "patch": "@@ -788,9 +788,10 @@ has_subst_attribute (class queue_elem *elem, class queue_elem *subst_elem)\n \t  return false;\n \n \tcase SET_ATTR_ALTERNATIVE:\n-\t  error_at (elem->loc,\n-\t\t    \"%s: `set_attr_alternative' is unsupported by \"\n-\t\t    \"`define_subst'\", XSTR (elem->data, 0));\n+\t  if (strcmp (XSTR (cur_attr, 0), subst_name) == 0)\n+\t    error_at (elem->loc,\n+\t\t      \"%s: `set_attr_alternative' is unsupported by \"\n+\t\t      \"`define_subst'\", XSTR (elem->data, 0));\n \t  return false;\n \n "}]}