{"sha": "4a8c52e0487bb8afe279f041ac113ed4e2895ddb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE4YzUyZTA0ODdiYjhhZmUyNzlmMDQxYWMxMTNlZDRlMjg5NWRkYg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@issan.informatik.uni-dortmund.de", "date": "1998-07-13T22:33:07Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-07-13T22:33:07Z"}, "message": "* m68k.c (output_scc_di): Use cmpw #0 only for address registers.\n\nFrom-SVN: r21119", "tree": {"sha": "1565266485a8a63fdde52c94c3cb105dec94546f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1565266485a8a63fdde52c94c3cb105dec94546f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a8c52e0487bb8afe279f041ac113ed4e2895ddb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a8c52e0487bb8afe279f041ac113ed4e2895ddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a8c52e0487bb8afe279f041ac113ed4e2895ddb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a8c52e0487bb8afe279f041ac113ed4e2895ddb/comments", "author": null, "committer": null, "parents": [{"sha": "4280146803b2daf0df4c47eaf07fc73094fd47be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4280146803b2daf0df4c47eaf07fc73094fd47be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4280146803b2daf0df4c47eaf07fc73094fd47be"}], "stats": {"total": 49, "additions": 33, "deletions": 16}, "files": [{"sha": "1a86cbe3acbd3bbd0b1b4b92306b1faf97756432", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a8c52e0487bb8afe279f041ac113ed4e2895ddb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a8c52e0487bb8afe279f041ac113ed4e2895ddb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a8c52e0487bb8afe279f041ac113ed4e2895ddb", "patch": "@@ -1,3 +1,7 @@\n+Mon Jul 13 23:31:04 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* m68k.c (output_scc_di): Use cmpw #0 only for address registers.\n+\n Mon Jul 13 23:26:43 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* tree.h (tree_common): Note front-end dependencies on layout of"}, {"sha": "64bbe4a12984910d66d03fec5337551ce542ea33", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 29, "deletions": 16, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a8c52e0487bb8afe279f041ac113ed4e2895ddb/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a8c52e0487bb8afe279f041ac113ed4e2895ddb/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=4a8c52e0487bb8afe279f041ac113ed4e2895ddb", "patch": "@@ -1046,39 +1046,52 @@ output_scc_di(op, operand1, operand2, dest)\n     }\n   loperands[4] = gen_label_rtx();\n   if (operand2 != const0_rtx)\n+    {\n #ifdef MOTOROLA\n #ifdef SGS_CMP_ORDER\n-    output_asm_insn (\"cmp%.l %0,%2\\n\\tjbne %l4\\n\\tcmp%.l %1,%3\", loperands);\n+      output_asm_insn (\"cmp%.l %0,%2\\n\\tjbne %l4\\n\\tcmp%.l %1,%3\", loperands);\n #else\n-    output_asm_insn (\"cmp%.l %2,%0\\n\\tjbne %l4\\n\\tcmp%.l %3,%1\", loperands);\n+      output_asm_insn (\"cmp%.l %2,%0\\n\\tjbne %l4\\n\\tcmp%.l %3,%1\", loperands);\n #endif\n #else\n #ifdef SGS_CMP_ORDER\n-    output_asm_insn (\"cmp%.l %0,%2\\n\\tjne %l4\\n\\tcmp%.l %1,%3\", loperands);\n+      output_asm_insn (\"cmp%.l %0,%2\\n\\tjne %l4\\n\\tcmp%.l %1,%3\", loperands);\n #else\n-    output_asm_insn (\"cmp%.l %2,%0\\n\\tjne %l4\\n\\tcmp%.l %3,%1\", loperands);\n+      output_asm_insn (\"cmp%.l %2,%0\\n\\tjne %l4\\n\\tcmp%.l %3,%1\", loperands);\n #endif\n #endif\n-  else if (TARGET_68020 || TARGET_5200)\n-#ifdef MOTOROLA\n-    output_asm_insn (\"tst%.l %0\\n\\tjbne %l4\\n\\ttst%.l %1\", loperands);\n-#else\n-    output_asm_insn (\"tst%.l %0\\n\\tjne %l4\\n\\ttst%.l %1\", loperands);\n-#endif\n+    }\n   else\n-#ifdef MOTOROLA\n+    {\n+      if (TARGET_68020 || TARGET_5200 || ! ADDRESS_REG_P (loperands[0]))\n+\toutput_asm_insn (\"tst%.l %0\", loperands);\n+      else\n+\t{\n #ifdef SGS_CMP_ORDER\n-    output_asm_insn (\"cmp%.w %0,%#0\\n\\tjbne %l4\\n\\tcmp%.w %1,%#0\", loperands);\n+\t  output_asm_insn (\"cmp%.w %0,%#0\", loperands);\n #else\n-    output_asm_insn (\"cmp%.w %#0,%0\\n\\tjbne %l4\\n\\tcmp%.w %#0,%1\", loperands);\n+\t  output_asm_insn (\"cmp%.w %#0,%0\", loperands);\n #endif\n+\t}\n+\n+#ifdef MOTOROLA\n+      output_asm_insn (\"jbne %l4\", loperands);\n #else\n+      output_asm_insn (\"jne %l4\", loperands);\n+#endif\n+\n+      if (TARGET_68020 || TARGET_5200 || ! ADDRESS_REG_P (loperands[1]))\n+\toutput_asm_insn (\"tst%.l %1\", loperands);\n+      else\n+\t{\n #ifdef SGS_CMP_ORDER\n-    output_asm_insn (\"cmp%.w %0,%#0\\n\\tjne %l4\\n\\tcmp%.w %1,%#0\", loperands);\n+\t  output_asm_insn (\"cmp%.w %1,%#0\", loperands);\n #else\n-    output_asm_insn (\"cmp%.w %#0,%0\\n\\tjne %l4\\n\\tcmp%.w %#0,%1\", loperands);\n-#endif\n+\t  output_asm_insn (\"cmp%.w %#0,%1\", loperands);\n #endif\n+\t}\n+    }\n+\n   loperands[5] = dest;\n   \n   switch (op_code)"}]}