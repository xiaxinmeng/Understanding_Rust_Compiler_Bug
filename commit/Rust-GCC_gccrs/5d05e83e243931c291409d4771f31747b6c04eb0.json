{"sha": "5d05e83e243931c291409d4771f31747b6c04eb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQwNWU4M2UyNDM5MzFjMjkxNDA5ZDQ3NzFmMzE3NDdiNmMwNGViMA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-05-27T19:37:43Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-05-27T19:37:43Z"}, "message": "PR other/100463 - many errors using GTY and hash_map\n\ngcc/ChangeLog:\n\t* ggc.h (gt_ggc_mx): Add overloads for all integers.\n\t(gt_pch_nx):  Same.\n\t* hash-map.h (class hash_map): Add pch_nx_helper overloads for all\n\tintegers.\n\t(hash_map::operator==): New function.", "tree": {"sha": "730b0c4d942154148dec0e15258d278d1d751a58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/730b0c4d942154148dec0e15258d278d1d751a58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d05e83e243931c291409d4771f31747b6c04eb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d05e83e243931c291409d4771f31747b6c04eb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d05e83e243931c291409d4771f31747b6c04eb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d05e83e243931c291409d4771f31747b6c04eb0/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc3fdf0f2196e805a3a43ccb73595c33673670f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc3fdf0f2196e805a3a43ccb73595c33673670f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc3fdf0f2196e805a3a43ccb73595c33673670f3"}], "stats": {"total": 81, "additions": 50, "deletions": 31}, "files": [{"sha": "92884717f5c72435f6febcb06f926b7a7261e569", "filename": "gcc/ggc.h", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d05e83e243931c291409d4771f31747b6c04eb0/gcc%2Fggc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d05e83e243931c291409d4771f31747b6c04eb0/gcc%2Fggc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc.h?ref=5d05e83e243931c291409d4771f31747b6c04eb0", "patch": "@@ -332,19 +332,30 @@ gt_pch_nx (const char *)\n {\n }\n \n-inline void\n-gt_ggc_mx (int)\n-{\n-}\n-\n-inline void\n-gt_pch_nx (int)\n-{\n-}\n-\n-inline void\n-gt_pch_nx (unsigned int)\n-{\n-}\n+inline void gt_pch_nx (bool) { }\n+inline void gt_pch_nx (char) { }\n+inline void gt_pch_nx (signed char) { }\n+inline void gt_pch_nx (unsigned char) { }\n+inline void gt_pch_nx (short) { }\n+inline void gt_pch_nx (unsigned short) { }\n+inline void gt_pch_nx (int) { }\n+inline void gt_pch_nx (unsigned int) { }\n+inline void gt_pch_nx (long int) { }\n+inline void gt_pch_nx (unsigned long int) { }\n+inline void gt_pch_nx (long long int) { }\n+inline void gt_pch_nx (unsigned long long int) { }\n+\n+inline void gt_ggc_mx (bool) { }\n+inline void gt_ggc_mx (char) { }\n+inline void gt_ggc_mx (signed char) { }\n+inline void gt_ggc_mx (unsigned char) { }\n+inline void gt_ggc_mx (short) { }\n+inline void gt_ggc_mx (unsigned short) { }\n+inline void gt_ggc_mx (int) { }\n+inline void gt_ggc_mx (unsigned int) { }\n+inline void gt_ggc_mx (long int) { }\n+inline void gt_ggc_mx (unsigned long int) { }\n+inline void gt_ggc_mx (long long int) { }\n+inline void gt_ggc_mx (unsigned long long int) { }\n \n #endif"}, {"sha": "dd039f10343567556d73e5077d97a0e175081c25", "filename": "gcc/hash-map.h", "status": "modified", "additions": 25, "deletions": 17, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d05e83e243931c291409d4771f31747b6c04eb0/gcc%2Fhash-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d05e83e243931c291409d4771f31747b6c04eb0/gcc%2Fhash-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-map.h?ref=5d05e83e243931c291409d4771f31747b6c04eb0", "patch": "@@ -107,27 +107,31 @@ class GTY((user)) hash_map\n \t  gt_pch_nx (&x, op, cookie);\n \t}\n \n-    static void\n-      pch_nx_helper (int, gt_pointer_operator, void *)\n-\t{\n-\t}\n-\n-    static void\n-      pch_nx_helper (unsigned int, gt_pointer_operator, void *)\n-\t{\n-\t}\n-\n-    static void\n-      pch_nx_helper (bool, gt_pointer_operator, void *)\n-\t{\n-\t}\n-\n     template<typename T>\n       static void\n       pch_nx_helper (T *&x, gt_pointer_operator op, void *cookie)\n \t{\n \t  op (&x, cookie);\n \t}\n+\n+    /* The overloads below should match those in ggc.h.  */\n+#define DEFINE_PCH_HELPER(T)\t\t\t\\\n+    static void pch_nx_helper (T, gt_pointer_operator, void *) { }\n+\n+    DEFINE_PCH_HELPER (bool);\n+    DEFINE_PCH_HELPER (char);\n+    DEFINE_PCH_HELPER (signed char);\n+    DEFINE_PCH_HELPER (unsigned char);\n+    DEFINE_PCH_HELPER (short);\n+    DEFINE_PCH_HELPER (unsigned short);\n+    DEFINE_PCH_HELPER (int);\n+    DEFINE_PCH_HELPER (unsigned int);\n+    DEFINE_PCH_HELPER (long);\n+    DEFINE_PCH_HELPER (unsigned long);\n+    DEFINE_PCH_HELPER (long long);\n+    DEFINE_PCH_HELPER (unsigned long long);\n+\n+#undef DEFINE_PCH_HELPER\n   };\n \n public:\n@@ -273,8 +277,12 @@ class GTY((user)) hash_map\n       return reference_pair (e.m_key, e.m_value);\n     }\n \n-    bool\n-    operator != (const iterator &other) const\n+    bool operator== (const iterator &other) const\n+    {\n+      return m_iter == other.m_iter;\n+    }\n+\n+    bool operator != (const iterator &other) const\n     {\n       return m_iter != other.m_iter;\n     }"}]}