{"sha": "57416708a748d64486037509248f4a35e2d033cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc0MTY3MDhhNzQ4ZDY0NDg2MDM3NTA5MjQ4ZjRhMzVlMmQwMzNjYw==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2010-10-22T12:48:15Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2010-10-22T12:48:15Z"}, "message": "re PR tree-optimization/46126 (Revision 165777 failed to build 254.gap in SPEC CPU 2K)\n\n\n\tPR tree-optimization/46126\n\t* tree-vect-stmts.c (vect_analyze_stmt): Pass NODE to\n\tvectorizable_shift in case of basic block vectorization.\n\nFrom-SVN: r165825", "tree": {"sha": "c4e84e0f8706775d381154dc45a9893b74ac8bd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4e84e0f8706775d381154dc45a9893b74ac8bd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57416708a748d64486037509248f4a35e2d033cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57416708a748d64486037509248f4a35e2d033cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57416708a748d64486037509248f4a35e2d033cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57416708a748d64486037509248f4a35e2d033cc/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3020190e3e5014c78439d3f96abe1819b95f8fdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3020190e3e5014c78439d3f96abe1819b95f8fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3020190e3e5014c78439d3f96abe1819b95f8fdd"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "4f9fc0433e453fbc0dd62d10db4a3de6a0151440", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57416708a748d64486037509248f4a35e2d033cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57416708a748d64486037509248f4a35e2d033cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57416708a748d64486037509248f4a35e2d033cc", "patch": "@@ -1,3 +1,9 @@\n+2010-10-22  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/46126\n+\t* tree-vect-stmts.c (vect_analyze_stmt): Pass NODE to\n+\tvectorizable_shift in case of basic block vectorization.\n+\n 2010-10-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* target.h (enum opt_levels, struct default_options): New."}, {"sha": "1ca8a4aa8c7a70c04a7a19642309670a6796d92e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57416708a748d64486037509248f4a35e2d033cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57416708a748d64486037509248f4a35e2d033cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57416708a748d64486037509248f4a35e2d033cc", "patch": "@@ -1,3 +1,8 @@\n+2010-10-22  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/46126\n+\t* gcc.dg/vect/pr46126.c: New.\n+\n 2010-10-21  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tBased on the CFString implementation in FSF apple/trunk branch."}, {"sha": "6eb178aab2e8451f8999fd5f267f3ac4d8c793d2", "filename": "gcc/testsuite/gcc.dg/vect/pr46126.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57416708a748d64486037509248f4a35e2d033cc/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr46126.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57416708a748d64486037509248f4a35e2d033cc/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr46126.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr46126.c?ref=57416708a748d64486037509248f4a35e2d033cc", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+\n+typedef struct TypHeader {\n+     struct TypHeader * * ptr;\n+     unsigned char type;\n+ } * TypHandle;\n+ extern TypHandle (* EvTab[81]) ( TypHandle hd );\n+ TypHandle FunApplyRel ( TypHandle hdCall )\n+ {\n+     TypHandle hdApp;\n+     TypHandle * ptApp;\n+     long lp;\n+     long lc;\n+     hdApp = ((long)(((TypHandle*)((hdCall)->ptr))[1])&1 ?\n+(((TypHandle*)((hdCall)->ptr))[1]) : (*\n+EvTab[(((long)(((TypHandle*)((hdCall)->ptr))[1]) & 1) ? 1 :\n+((((TypHandle*)((hdCall)->ptr))[1])->type))])((((TypHandle*)((hdCall)->ptr))[1])));\n+     ptApp = ((TypHandle*)((hdApp)->ptr));\n+     ptApp[1] = ((TypHandle) (((long)(lp) << 2) + 1));\n+     ptApp[2] = ((TypHandle) (((long)(lc) << 2) + 1));\n+ }\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "01fd5cfd14a2eff55b6c706a395ab5a484dc4a9d", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57416708a748d64486037509248f4a35e2d033cc/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57416708a748d64486037509248f4a35e2d033cc/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=57416708a748d64486037509248f4a35e2d033cc", "patch": "@@ -4663,7 +4663,7 @@ vect_analyze_stmt (gimple stmt, bool *need_to_vectorize, slp_tree node)\n     else\n       {\n         if (bb_vinfo)\n-          ok = (vectorizable_shift (stmt, NULL, NULL, NULL)\n+          ok = (vectorizable_shift (stmt, NULL, NULL, node)\n                 || vectorizable_operation (stmt, NULL, NULL, node)\n                 || vectorizable_assignment (stmt, NULL, NULL, node)\n                 || vectorizable_load (stmt, NULL, NULL, node, NULL)"}]}