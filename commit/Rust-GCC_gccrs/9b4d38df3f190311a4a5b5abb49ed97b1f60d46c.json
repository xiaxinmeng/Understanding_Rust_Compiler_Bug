{"sha": "9b4d38df3f190311a4a5b5abb49ed97b1f60d46c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI0ZDM4ZGYzZjE5MDMxMWE0YTViNWFiYjQ5ZWQ5N2IxZjYwZDQ2Yw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-04-20T12:09:41Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-04-20T12:09:41Z"}, "message": "Fix spacing in symtab_node::dump_references.\n\n\t* symtab.c (symtab_node::dump_references): Add space after\n\tone entry.\n\t(symtab_node::dump_referring): Likewise.", "tree": {"sha": "17aa7dd91899c310445d7846a39f4f1ce15544c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17aa7dd91899c310445d7846a39f4f1ce15544c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b4d38df3f190311a4a5b5abb49ed97b1f60d46c", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl6dkQUACgkQTcGC3A+n\nN4XSuAf/dzrwqF3o0UC5+aI8DDJnQWM8otnR6xWO7gaW7kryP386wxHI2aHz0f7Z\ntnKLAwf/T2kwdIl2N5U/7b+VMCuy6GWJtNiJAmqlFuNsv5Xyw+IV/vWpZXOViKUI\nqQWfZdYFJaLhtHBiI9LrhihlQuMLQShDGOsexV2y7sFEzebHPGsbS3NvXTkG4Hkw\n/j07E12OKFnln9ec4tPlY4XpEg5duPJLiEsGJSgYRCZOW2zck2ViewluAzM44ILI\nCGgWvl+nHp0cuxQ7xqcId9EpPpxEcBOeF7Wk8zhlUsRHeTTGUD7CXWJNdlDd4/Ct\ncTFVnnvqsiRnN60ZpcUjqrBIrmiLIw==\n=f6DS\n-----END PGP SIGNATURE-----", "payload": "tree 17aa7dd91899c310445d7846a39f4f1ce15544c2\nparent 38acc41d6d761b635123eefa93743b9139debbae\nauthor Martin Liska <mliska@suse.cz> 1587384581 +0200\ncommitter Martin Liska <mliska@suse.cz> 1587384581 +0200\n\nFix spacing in symtab_node::dump_references.\n\n\t* symtab.c (symtab_node::dump_references): Add space after\n\tone entry.\n\t(symtab_node::dump_referring): Likewise.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b4d38df3f190311a4a5b5abb49ed97b1f60d46c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b4d38df3f190311a4a5b5abb49ed97b1f60d46c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b4d38df3f190311a4a5b5abb49ed97b1f60d46c/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38acc41d6d761b635123eefa93743b9139debbae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38acc41d6d761b635123eefa93743b9139debbae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38acc41d6d761b635123eefa93743b9139debbae"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "405037efbedc60dfa5dbbd322808f3140d49222b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b4d38df3f190311a4a5b5abb49ed97b1f60d46c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b4d38df3f190311a4a5b5abb49ed97b1f60d46c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b4d38df3f190311a4a5b5abb49ed97b1f60d46c", "patch": "@@ -1,3 +1,9 @@\n+2020-04-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* symtab.c (symtab_node::dump_references): Add space after\n+\tone entry.\n+\t(symtab_node::dump_referring): Likewise.\n+\n 2020-04-18  Jeff Law  <law@redhat.com>\n \n \tPR debug/94439"}, {"sha": "0e852d4c24d4d315d8f41f389490c358ab465c55", "filename": "gcc/symtab.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b4d38df3f190311a4a5b5abb49ed97b1f60d46c/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b4d38df3f190311a4a5b5abb49ed97b1f60d46c/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=9b4d38df3f190311a4a5b5abb49ed97b1f60d46c", "patch": "@@ -800,11 +800,10 @@ symtab_node::dump_references (FILE *file)\n   int i;\n   for (i = 0; iterate_reference (i, ref); i++)\n     {\n-      fprintf (file, \"%s (%s)\",\n-\t       ref->referred->dump_asm_name (),\n-\t       ipa_ref_use_name [ref->use]);\n+      fprintf (file, \"%s (%s) \", ref->referred->dump_asm_name (),\n+\t       ipa_ref_use_name[ref->use]);\n       if (ref->speculative)\n-\tfprintf (file, \" (speculative)\");\n+\tfprintf (file, \"(speculative) \");\n     }\n   fprintf (file, \"\\n\");\n }\n@@ -818,11 +817,10 @@ symtab_node::dump_referring (FILE *file)\n   int i;\n   for (i = 0; iterate_referring(i, ref); i++)\n     {\n-      fprintf (file, \"%s (%s)\",\n-\t       ref->referring->dump_asm_name (),\n-\t       ipa_ref_use_name [ref->use]);\n+      fprintf (file, \"%s (%s) \", ref->referring->dump_asm_name (),\n+\t       ipa_ref_use_name[ref->use]);\n       if (ref->speculative)\n-\tfprintf (file, \" (speculative)\");\n+\tfprintf (file, \"(speculative) \");\n     }\n   fprintf (file, \"\\n\");\n }"}]}