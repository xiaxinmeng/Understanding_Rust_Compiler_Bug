{"sha": "7b3a4df550bc564ae51876283610f1470703854c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IzYTRkZjU1MGJjNTY0YWU1MTg3NjI4MzYxMGYxNDcwNzAzODU0Yw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-05-25T23:08:57Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-05-25T23:08:57Z"}, "message": "config.gcc (all gnu and linux): Use t-slibgcc-elf-ver with t-linux.\n\n        * config.gcc (all gnu and linux): Use t-slibgcc-elf-ver with t-linux.\n        (i386-*-solaris2): Use t-slibgcc-elf-ver or t-slibgcc-sld.\n        (sparc*-*-solaris2): Likewise.\n        * config/t-linux: Remove shared libgcc macros.\n        * config/t-slibgcc-elf-ver: Move from sparc/t-slibgcc.\n        * config/t-slibgcc-sld: Move from sparc/t-slibgcc-sld.\n\nFrom-SVN: r42602", "tree": {"sha": "8530c383af7c77aec7c70cd3ec9b6efb3b02c867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8530c383af7c77aec7c70cd3ec9b6efb3b02c867"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b3a4df550bc564ae51876283610f1470703854c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3a4df550bc564ae51876283610f1470703854c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b3a4df550bc564ae51876283610f1470703854c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3a4df550bc564ae51876283610f1470703854c/comments", "author": null, "committer": null, "parents": [{"sha": "57db2f4df60de3b9c9e6d3320e8704f382a08a5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57db2f4df60de3b9c9e6d3320e8704f382a08a5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57db2f4df60de3b9c9e6d3320e8704f382a08a5b"}], "stats": {"total": 82, "additions": 43, "deletions": 39}, "files": [{"sha": "5890bacdc81634d1aa1470fc5045ec7f2dfc5321", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b3a4df550bc564ae51876283610f1470703854c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b3a4df550bc564ae51876283610f1470703854c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b3a4df550bc564ae51876283610f1470703854c", "patch": "@@ -1,3 +1,12 @@\n+2001-05-25  Richard Henderson  <rth@redhat.com>\n+\n+\t* config.gcc (all gnu and linux): Use t-slibgcc-elf-ver with t-linux.\n+\t(i386-*-solaris2): Use t-slibgcc-elf-ver or t-slibgcc-sld.\n+\t(sparc*-*-solaris2): Likewise.\n+\t* config/t-linux: Remove shared libgcc macros.\n+\t* config/t-slibgcc-elf-ver: Move from sparc/t-slibgcc.\n+\t* config/t-slibgcc-sld: Move from sparc/t-slibgcc-sld.\n+\n 2001-05-25  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* config.gcc (*-*-freebsd*): Report bad configuration."}, {"sha": "69764552ab8891722421e25eaed3f5ae0078c236", "filename": "gcc/config.gcc", "status": "modified", "additions": 28, "deletions": 23, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b3a4df550bc564ae51876283610f1470703854c/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b3a4df550bc564ae51876283610f1470703854c/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=7b3a4df550bc564ae51876283610f1470703854c", "patch": "@@ -274,7 +274,7 @@ case $machine in\n \t# These details are the same as for Linux.\n \txmake_file=x-linux\n \t# But here we need a little extra magic.\n-\ttmake_file=\"t-linux t-gnu\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux t-gnu\"\n \tcase $machine in\n \ti[34567]86-*-*)\n \t\ttm_file=\"${cpu_type}/${cpu_type}.h i386/att.h linux.h i386/linux.h gnu.h ${tm_file}\"\n@@ -430,7 +430,7 @@ alpha*-*-linux*ecoff*)\n alpha*-*-linux*libc1*)\n \ttm_file=\"${tm_file} alpha/elf.h alpha/linux.h alpha/linux-elf.h\"\n \ttarget_cpu_default=\"MASK_GAS\"\n-\ttmake_file=\"t-linux t-linux-gnulibc1 alpha/t-alpha alpha/t-crtbe alpha/t-ieee\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux t-linux-gnulibc1 alpha/t-alpha alpha/t-crtbe alpha/t-ieee\"\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n \tgas=yes gnu_ld=yes\n \tif test x$enable_threads = xyes; then\n@@ -440,7 +440,7 @@ alpha*-*-linux*libc1*)\n alpha*-*-linux*)\n \ttm_file=\"${tm_file} alpha/elf.h alpha/linux.h alpha/linux-elf.h\"\n \ttarget_cpu_default=\"MASK_GAS\"\n-\ttmake_file=\"t-linux alpha/t-crtbe alpha/t-alpha alpha/t-ieee\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux alpha/t-crtbe alpha/t-alpha alpha/t-ieee\"\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n \tgas=yes gnu_ld=yes\n \tif test x$enable_threads = xyes; then\n@@ -573,7 +573,7 @@ arm*-*-netbsd*)\n arm*-*-linux*)\t\t\t# ARM GNU/Linux with ELF\n \txmake_file=x-linux\n \ttm_file=\"arm/linux-elf.h\"\n-\ttmake_file=\"t-linux arm/t-linux\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux arm/t-linux\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tgnu_ld=yes\n \tcase x${enable_threads} in\n@@ -688,7 +688,7 @@ hppa*-*-linux* | parisc*-*-linux*)\n \ttarget_cpu_default=\"MASK_PA_11\"\n \ttm_file=\"${tm_file} linux.h pa/pa-linux.h \\\n \t\t pa/pa32-regs.h pa/pa32-linux.h\"\n-\ttmake_file=pa/t-linux\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux pa/t-linux\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tgas=yes gnu_ld=yes\n \tif test x$enable_threads = xyes; then\n@@ -920,7 +920,7 @@ i370-*-mvs*)\n i370-*-linux*)\n \txmake_file=x-linux\n \ttm_file=\"i370/linux.h ${tm_file}\"\n-\ttmake_file=t-linux\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux\"\n \t# broken_install=yes\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \t# extra_parts=\"crtbegin.o crtend.o\"\n@@ -1101,7 +1101,7 @@ i[34567]86-*-linux*libc1)\t# Intel 80386's running GNU/Linux\n \t\t\t\t# GNU/Linux C library 5\n \txmake_file=x-linux\t\n \ttm_file=\"i386/i386.h i386/att.h linux.h i386/linux.h\"\n-\ttmake_file=\"t-linux t-linux-gnulibc1 i386/t-crtstuff\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux t-linux-gnulibc1 i386/t-crtstuff\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tgnu_ld=yes\n \tfloat_format=i386\n@@ -1114,7 +1114,7 @@ i[34567]86-*-linux*)\t# Intel 80386's running GNU/Linux\n \t\t\t# aka GNU/Linux C library 6\n \txmake_file=x-linux\n \ttm_file=\"i386/i386.h i386/att.h linux.h i386/linux.h\"\n-\ttmake_file=\"t-linux i386/t-crtstuff\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux i386/t-crtstuff\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tgnu_ld=yes\n \tfloat_format=i386\n@@ -1220,6 +1220,11 @@ i[34567]86-*-solaris2*)\n \t\ttm_file=\"i386/sol2gas.h ${tm_file}\"\n \tfi\n \ttmake_file=i386/t-sol2\n+\tif test x$gnu_ld = xyes; then\n+\t\ttmake_file=\"$tmake_file t-slibgcc-elf-ver\"\n+\telse\n+\t\ttmake_file=\"$tmake_file t-slibgcc-sld\"\n+\tfi\n \textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n \txmake_file=x-svr4\n \tif test x${enable_threads} = x; then\n@@ -1479,7 +1484,7 @@ ia64*-*-elf*)\n \t;;\n ia64*-*-linux*)\n \ttm_file=ia64/linux.h\n-\ttmake_file=\"t-linux ia64/t-ia64 ia64/t-glibc\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux ia64/t-ia64 ia64/t-glibc\"\n \ttarget_cpu_default=\"MASK_GNU_AS|MASK_GNU_LD\"\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n@@ -1883,7 +1888,7 @@ m68k-*-linux*libc1)\t\t# Motorola m68k's running GNU/Linux\n \t\t\t\t# GNU/Linux C library 5\n \txmake_file=x-linux\n \ttm_file=m68k/linux.h\n-\ttmake_file=\"t-linux t-linux-gnulibc1 m68k/t-linux\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux t-linux-gnulibc1 m68k/t-linux\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \textra_headers=math-68881.h\n \tfloat_format=m68k\n@@ -1894,7 +1899,7 @@ m68k-*-linux*)\t\t# Motorola m68k's running GNU/Linux\n \t\t\t\t# aka the GNU/Linux C library 6.\n \txmake_file=x-linux\n \ttm_file=m68k/linux.h\n-\ttmake_file=\"t-linux m68k/t-linux\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux m68k/t-linux\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \textra_headers=math-68881.h\n \tfloat_format=m68k\n@@ -2186,7 +2191,7 @@ mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n \t       mips*el-*)  tm_file=\"elfos.h mips/elfl.h mips/linux.h\" ;;\n \t       *)\t  tm_file=\"elfos.h mips/elf.h mips/linux.h\" ;;\n \tesac\n-\ttmake_file=t-linux\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tgnu_ld=yes\n \tgas=yes\n@@ -2622,7 +2627,7 @@ powerpc-*-rtems*)\n powerpc-*-linux*libc1)\n \ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/linux.h\"\n \tout_file=rs6000/rs6000.c\n-\ttmake_file=\"rs6000/t-ppcos t-linux t-linux-gnulibc1 rs6000/t-ppccomm\"\n+\ttmake_file=\"rs6000/t-ppcos t-slibgcc-elf-ver t-linux t-linux-gnulibc1 rs6000/t-ppccomm\"\n \txmake_file=x-linux\n \textra_headers=ppc-asm.h\n \tif test x$enable_threads = xyes; then\n@@ -2632,7 +2637,7 @@ powerpc-*-linux*libc1)\n powerpc-*-linux*)\n \ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/linux.h\"\n \tout_file=rs6000/rs6000.c\n-\ttmake_file=\"rs6000/t-ppcos t-linux rs6000/t-ppccomm\"\n+\ttmake_file=\"rs6000/t-ppcos t-slibgcc-elf-ver t-linux rs6000/t-ppccomm\"\n \txmake_file=x-linux\n \textra_headers=ppc-asm.h\n \tif test x$enable_threads = xyes; then\n@@ -2834,15 +2839,15 @@ sparc-*-linux*aout*)\t\t# Sparc's running GNU/Linux, a.out\n sparc-*-linux*libc1*)\t# Sparc's running GNU/Linux, libc5\n \txmake_file=x-linux\n \ttm_file=sparc/linux.h\n-\ttmake_file=\"t-linux t-linux-gnulibc1\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux t-linux-gnulibc1\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tgnu_ld=yes\n \tfloat_format=sparc\n \t;;\n sparc-*-linux*)\t\t# Sparc's running GNU/Linux, libc6\n \txmake_file=x-linux\n \ttm_file=sparc/linux.h\n-\ttmake_file=\"t-linux\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tgnu_ld=yes\n \tif test x$enable_threads = xyes; then\n@@ -2886,9 +2891,9 @@ sparcv9-*-solaris2*)\n \txm_defines=POSIX\n \ttmake_file=\"sparc/t-sol2 sparc/t-sol2-64\"\n \tif test x$gnu_ld = xyes; then\n-\t\ttmake_file=\"$tmake_file sparc/t-slibgcc\"\n+\t\ttmake_file=\"$tmake_file t-slibgcc-elf-ver\"\n \telse\n-\t\ttmake_file=\"$tmake_file sparc/t-slibgcc-sld\"\n+\t\ttmake_file=\"$tmake_file t-slibgcc-sld\"\n \tfi\n \textra_parts=\"crt1.o crti.o crtn.o gcrt1.o crtbegin.o crtend.o\"\n \tfloat_format=none\n@@ -2911,9 +2916,9 @@ sparc-hal-solaris2*)\n         tm_file=\"sparc/sol2.h sparc/hal.h\"\n         tmake_file=\"sparc/t-halos sparc/t-sol2\"\n \tif test x$gnu_ld = xyes; then\n-\t\ttmake_file=\"$tmake_file sparc/t-slibgcc\"\n+\t\ttmake_file=\"$tmake_file t-slibgcc-elf-ver\"\n \telse\n-\t\ttmake_file=\"$tmake_file sparc/t-slibgcc-sld\"\n+\t\ttmake_file=\"$tmake_file t-slibgcc-sld\"\n \tfi\n         extra_parts=\"crt1.o crti.o crtn.o gmon.o crtbegin.o crtend.o\"\n         case $machine in\n@@ -2936,9 +2941,9 @@ sparc-*-solaris2*)\n \txm_defines=POSIX\n \ttmake_file=sparc/t-sol2\n \tif test x$gnu_ld = xyes; then\n-\t\ttmake_file=\"$tmake_file sparc/t-slibgcc\"\n+\t\ttmake_file=\"$tmake_file t-slibgcc-elf-ver\"\n \telse\n-\t\ttmake_file=\"$tmake_file sparc/t-slibgcc-sld\"\n+\t\ttmake_file=\"$tmake_file t-slibgcc-sld\"\n \tfi\n \textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n # At the moment, 32-to-64 cross compilation doesn't work.\n@@ -3037,7 +3042,7 @@ sparc64-*-elf*)\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n sparc64-*-linux*)\t\t# 64-bit Sparc's running GNU/Linux\n-\ttmake_file=\"t-linux sparc/t-linux64\"\n+\ttmake_file=\"t-slibgcc-elf-ver t-linux sparc/t-linux64\"\n \ttm_file=sparc/linux64.h\n \txmake_file=x-linux\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\""}, {"sha": "06283bd65b7c05ae2c0b060130b9ffb2b706b08a", "filename": "gcc/config/t-linux", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b3a4df550bc564ae51876283610f1470703854c/gcc%2Fconfig%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b3a4df550bc564ae51876283610f1470703854c/gcc%2Fconfig%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-linux?ref=7b3a4df550bc564ae51876283610f1470703854c", "patch": "@@ -5,18 +5,7 @@ STMP_FIXPROTO =\n CRTSTUFF_T_CFLAGS_S = -fPIC\n # Compile libgcc2.a with pic.\n TARGET_LIBGCC2_CFLAGS = -fPIC\n-# Build a shared libgcc library.\n-SHLIB_EXT = .so\n-SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-\t-Wl,--soname=@shlib_base_name@.so.0 \\\n-\t-Wl,--version-script=@shlib_map_file@ \\\n-\t-o @shlib_base_name@.so @multilib_flags@ @shlib_objs@ -lc && \\\n-\trm -f @shlib_base_name@.so.0 && \\\n-\t$(LN_S) @shlib_base_name@.so @shlib_base_name@.so.0\n-# $(slibdir) double quoted to protect it from expansion while building\n-# libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = $(INSTALL_DATA) @shlib_base_name@.so $$(slibdir)/@shlib_base_name@.so.0; \\\n-\trm -f $$(slibdir)/@shlib_base_name@.so; \\\n-\t$(LN_S) @shlib_base_name@.so.0 $$(slibdir)/@shlib_base_name@.so\n-SHLIB_MKMAP = $(srcdir)/mkmap-symver.awk\n-SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver $(srcdir)/config/libgcc-glibc.ver\n+\n+# Override t-slibgcc-elf-ver to export some libgcc symbols with\n+# the symbol versions that glibc used.\n+SHLIB_MAPFILES += $(srcdir)/config/libgcc-glibc.ver"}, {"sha": "88506d9e325fc4210152d502645cc83ee8fb44f6", "filename": "gcc/config/t-slibgcc-elf-ver", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b3a4df550bc564ae51876283610f1470703854c/gcc%2Fconfig%2Ft-slibgcc-elf-ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b3a4df550bc564ae51876283610f1470703854c/gcc%2Fconfig%2Ft-slibgcc-elf-ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-elf-ver?ref=7b3a4df550bc564ae51876283610f1470703854c", "patch": "@@ -1,4 +1,5 @@\n-# Build a shared libgcc library with the GNU linker.\n+# Build a shared libgcc library for ELF with symbol versioning\n+# with the GNU linker.\n \n SHLIB_EXT = .so\n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\", "previous_filename": "gcc/config/sparc/t-slibgcc"}, {"sha": "50107229e5016f82149908dcdaf51820675eeb12", "filename": "gcc/config/t-slibgcc-sld", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b3a4df550bc564ae51876283610f1470703854c/gcc%2Fconfig%2Ft-slibgcc-sld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b3a4df550bc564ae51876283610f1470703854c/gcc%2Fconfig%2Ft-slibgcc-sld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-sld?ref=7b3a4df550bc564ae51876283610f1470703854c", "previous_filename": "gcc/config/sparc/t-slibgcc-sld"}]}