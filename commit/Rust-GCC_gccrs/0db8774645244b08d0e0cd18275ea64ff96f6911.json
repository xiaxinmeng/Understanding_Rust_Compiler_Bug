{"sha": "0db8774645244b08d0e0cd18275ea64ff96f6911", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRiODc3NDY0NTI0NGIwOGQwZTBjZDE4Mjc1ZWE2NGZmOTZmNjkxMQ==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T20:18:59Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:22Z"}, "message": "Remove unused and add FIXME\n\nWe need to ensure in type resolution pass we fix up the ordering for\na struct initilization and give defaults to missing fields.", "tree": {"sha": "470f3d8a8641dcff2baf1efaeaf8446043dca9d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/470f3d8a8641dcff2baf1efaeaf8446043dca9d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0db8774645244b08d0e0cd18275ea64ff96f6911", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db8774645244b08d0e0cd18275ea64ff96f6911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0db8774645244b08d0e0cd18275ea64ff96f6911", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db8774645244b08d0e0cd18275ea64ff96f6911/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7cf2f7789dccbb1d8aac6222b2b1c0f4d5f18f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7cf2f7789dccbb1d8aac6222b2b1c0f4d5f18f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7cf2f7789dccbb1d8aac6222b2b1c0f4d5f18f6"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "9179b0c9d7470ca3bfebef59d01b9854f8912984", "filename": "gcc/rust/analysis/rust-type-resolution.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db8774645244b08d0e0cd18275ea64ff96f6911/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db8774645244b08d0e0cd18275ea64ff96f6911/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc?ref=0db8774645244b08d0e0cd18275ea64ff96f6911", "patch": "@@ -516,6 +516,10 @@ TypeResolution::visit (AST::StructExprStructFields &expr)\n \t}\n     }\n \n+  // need to correct the ordering with the respect to the struct definition and\n+  // ensure we handle missing values and give them defaults\n+  // FIXME\n+\n   // setup a path in type\n   AST::PathIdentSegment seg (expr.get_struct_name ().as_string ());\n   auto typePath = ::std::unique_ptr<AST::TypePathSegment> ("}, {"sha": "0b632b72be1992f20b2ffcfa1fab2b22b1c84593", "filename": "gcc/rust/backend/rust-compile.cc", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db8774645244b08d0e0cd18275ea64ff96f6911/gcc%2Frust%2Fbackend%2Frust-compile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db8774645244b08d0e0cd18275ea64ff96f6911/gcc%2Frust%2Fbackend%2Frust-compile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile.cc?ref=0db8774645244b08d0e0cd18275ea64ff96f6911", "patch": "@@ -533,24 +533,6 @@ Compilation::visit (AST::StructExprFieldIdentifier &field)\n void\n Compilation::visit (AST::StructExprFieldIdentifierValue &field)\n {\n-  AST::StructStruct *decl = structBuffer.back ();\n-  size_t index = 0;\n-  bool found = false;\n-  for (auto &df : decl->fields)\n-    {\n-      if (field.field_name.compare (df.field_name) == 0)\n-\t{\n-\t  found = true;\n-\t  break;\n-\t}\n-    }\n-  if (!found)\n-    {\n-      rust_fatal_error (field.value->get_locus_slow (),\n-\t\t\t\"failed to lookup field index\");\n-      return;\n-    }\n-\n   Bexpression *value = NULL;\n   VISIT_POP (field.value->get_locus_slow (), field.value.get (), value, exprs);\n   if (value == NULL)"}]}