{"sha": "5b4acce124adcc148231f4200cf655d13cb65112", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI0YWNjZTEyNGFkY2MxNDgyMzFmNDIwMGNmNjU1ZDEzY2I2NTExMg==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2004-01-03T08:25:38Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2004-01-03T08:25:38Z"}, "message": "parser.c (cp_parser_template_argument): Don't call make_unbound_class_template directly.\n\n\t* parser.c (cp_parser_template_argument): Don't call\n\tmake_unbound_class_template directly.\n\t(cp_parser_lookup_name): Don't extract TEMPLATE_DECL from\n\tUNBOUND_CLASS_TEMPLATE tree node.\n\nFrom-SVN: r75356", "tree": {"sha": "5f5b26285a9f3f37c9b1b709da5e00945f4158cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f5b26285a9f3f37c9b1b709da5e00945f4158cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b4acce124adcc148231f4200cf655d13cb65112", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b4acce124adcc148231f4200cf655d13cb65112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b4acce124adcc148231f4200cf655d13cb65112", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b4acce124adcc148231f4200cf655d13cb65112/comments", "author": null, "committer": null, "parents": [{"sha": "86d7b5621f2487c9db19469d6af4bda61268099f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d7b5621f2487c9db19469d6af4bda61268099f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86d7b5621f2487c9db19469d6af4bda61268099f"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "897f8461d78c80cb24847c701d43779990dbaedc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4acce124adcc148231f4200cf655d13cb65112/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4acce124adcc148231f4200cf655d13cb65112/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5b4acce124adcc148231f4200cf655d13cb65112", "patch": "@@ -1,3 +1,11 @@\n+2004-01-03  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/13094\n+\t* parser.c (cp_parser_template_argument): Don't call\n+\tmake_unbound_class_template directly.\n+\t(cp_parser_lookup_name): Don't extract TEMPLATE_DECL from\n+\tUNBOUND_CLASS_TEMPLATE tree node.\n+\n 2004-01-02  Richard Sandiford  <rsandifo@redhat.com>\n \n \tPR target/12729"}, {"sha": "e62288c051eac3fa24be0cd85962dc856bc7597a", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4acce124adcc148231f4200cf655d13cb65112/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4acce124adcc148231f4200cf655d13cb65112/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=5b4acce124adcc148231f4200cf655d13cb65112", "patch": "@@ -8169,12 +8169,13 @@ cp_parser_template_argument (cp_parser* parser)\n   if (!cp_parser_error_occurred (parser))\n     {\n       /* Figure out what is being referred to.  */\n-      argument = cp_parser_lookup_name_simple (parser, argument);\n-      if (template_p)\n-\targument = make_unbound_class_template (TREE_OPERAND (argument, 0),\n-\t\t\t\t\t\tTREE_OPERAND (argument, 1),\n-\t\t\t\t\t\ttf_error);\n-      else if (TREE_CODE (argument) != TEMPLATE_DECL)\n+      argument = cp_parser_lookup_name (parser, argument,\n+\t\t\t\t\t/*is_type=*/false,\n+\t\t\t\t\t/*is_template=*/template_p,\n+\t\t\t\t\t/*is_namespace=*/false,\n+\t\t\t\t\t/*check_dependency=*/true);\n+      if (TREE_CODE (argument) != TEMPLATE_DECL\n+\t  && TREE_CODE (argument) != UNBOUND_CLASS_TEMPLATE)\n \tcp_parser_error (parser, \"expected template-name\");\n     }\n   if (cp_parser_parse_definitely (parser))\n@@ -13347,9 +13348,9 @@ cp_parser_lookup_name (cp_parser *parser, tree name,\n \t\t\t\t\t\t  name,\n \t\t\t\t\t\t  /*complain=*/1));\n \t  else if (is_template)\n-\t    decl = TYPE_NAME (make_unbound_class_template (parser->scope,\n-\t\t\t\t\t\t\t   name,\n-\t\t\t\t\t\t\t   /*complain=*/1));\n+\t    decl = make_unbound_class_template (parser->scope,\n+\t\t\t\t\t\tname,\n+\t\t\t\t\t\t/*complain=*/1);\n \t  else\n \t    decl = build_nt (SCOPE_REF, parser->scope, name);\n \t}\n@@ -13428,6 +13429,7 @@ cp_parser_lookup_name (cp_parser *parser, tree name,\n   my_friendly_assert (DECL_P (decl) \n \t\t      || TREE_CODE (decl) == OVERLOAD\n \t\t      || TREE_CODE (decl) == SCOPE_REF\n+\t\t      || TREE_CODE (decl) == UNBOUND_CLASS_TEMPLATE\n \t\t      || BASELINK_P (decl),\n \t\t      20000619);\n "}]}