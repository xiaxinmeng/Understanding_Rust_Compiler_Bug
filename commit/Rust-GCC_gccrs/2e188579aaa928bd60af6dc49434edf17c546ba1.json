{"sha": "2e188579aaa928bd60af6dc49434edf17c546ba1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUxODg1NzlhYWE5MjhiZDYwYWY2ZGM0OTQzNGVkZjE3YzU0NmJhMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-11-24T16:53:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-15T11:41:54Z"}, "message": "[Ada] Crash on unnesting unnamed blocks\n\ngcc/ada/\n\n\t* exp_ch7.adb (Reset_Scopes_To_Block_Elab_Proc): Do not crash on\n\ta block with no Identifier. Code cleanups.", "tree": {"sha": "c699517e9f453253c6fa4b9a6829ce8af94989e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c699517e9f453253c6fa4b9a6829ce8af94989e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e188579aaa928bd60af6dc49434edf17c546ba1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e188579aaa928bd60af6dc49434edf17c546ba1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e188579aaa928bd60af6dc49434edf17c546ba1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e188579aaa928bd60af6dc49434edf17c546ba1/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2304663888042a75a07851833519842a953cecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2304663888042a75a07851833519842a953cecb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2304663888042a75a07851833519842a953cecb"}], "stats": {"total": 49, "additions": 19, "deletions": 30}, "files": [{"sha": "64de40c6a04dfa787c215bbb534f11f73e8f9e5a", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 19, "deletions": 30, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e188579aaa928bd60af6dc49434edf17c546ba1/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e188579aaa928bd60af6dc49434edf17c546ba1/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=2e188579aaa928bd60af6dc49434edf17c546ba1", "patch": "@@ -4132,20 +4132,23 @@ package body Exp_Ch7 is\n       procedure Reset_Scopes_To_Block_Elab_Proc (L : List_Id) is\n          Id   : Entity_Id;\n          Stat : Node_Id;\n+         Node : Node_Id;\n \n       begin\n          Stat := First (L);\n          while Present (Stat) loop\n             case Nkind (Stat) is\n                when N_Block_Statement =>\n-                  Id := Entity (Identifier (Stat));\n+                  if Present (Identifier (Stat)) then\n+                     Id := Entity (Identifier (Stat));\n \n-                  --  The Scope of this block needs to be reset to the new\n-                  --  procedure if the block contains nested subprograms.\n+                     --  The Scope of this block needs to be reset to the new\n+                     --  procedure if the block contains nested subprograms.\n \n-                  if Present (Id) and then Contains_Subprogram (Id) then\n-                     Set_Block_Elab_Proc;\n-                     Set_Scope (Id, Block_Elab_Proc);\n+                     if Present (Id) and then Contains_Subprogram (Id) then\n+                        Set_Block_Elab_Proc;\n+                        Set_Scope (Id, Block_Elab_Proc);\n+                     end if;\n                   end if;\n \n                when N_Loop_Statement =>\n@@ -4168,34 +4171,20 @@ package body Exp_Ch7 is\n \n                when N_If_Statement =>\n                   Reset_Scopes_To_Block_Elab_Proc (Then_Statements (Stat));\n-\n                   Reset_Scopes_To_Block_Elab_Proc (Else_Statements (Stat));\n \n-                  declare\n-                     Elif : Node_Id;\n-\n-                  begin\n-                     Elif := First (Elsif_Parts (Stat));\n-                     while Present (Elif) loop\n-                        Reset_Scopes_To_Block_Elab_Proc\n-                          (Then_Statements (Elif));\n-\n-                        Next (Elif);\n-                     end loop;\n-                  end;\n+                  Node := First (Elsif_Parts (Stat));\n+                  while Present (Node) loop\n+                     Reset_Scopes_To_Block_Elab_Proc (Then_Statements (Node));\n+                     Next (Node);\n+                  end loop;\n \n                when N_Case_Statement =>\n-                  declare\n-                     Alt : Node_Id;\n-\n-                  begin\n-                     Alt := First (Alternatives (Stat));\n-                     while Present (Alt) loop\n-                        Reset_Scopes_To_Block_Elab_Proc (Statements (Alt));\n-\n-                        Next (Alt);\n-                     end loop;\n-                  end;\n+                  Node := First (Alternatives (Stat));\n+                  while Present (Node) loop\n+                     Reset_Scopes_To_Block_Elab_Proc (Statements (Node));\n+                     Next (Node);\n+                  end loop;\n \n                --  Reset the Scope of a subprogram occurring at the top level\n "}]}