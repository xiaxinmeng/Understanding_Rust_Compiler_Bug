{"sha": "f1860ba97c381a17281e33a895bbad4f5006d43b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE4NjBiYTk3YzM4MWExNzI4MWUzM2E4OTViYmFkNGY1MDA2ZDQzYg==", "commit": {"author": {"name": "Maxim Ostapenko", "email": "m.ostapenko@samsung.com", "date": "2017-01-30T16:06:15Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2017-01-30T16:06:15Z"}, "message": "re PR lto/79061 ([LTO][ASAN] LTO plus ASAN fails with \"AddressSanitizer: initialization-order-fiasco\")\n\n\tPR lto/79061\n\t* asan.c (get_translation_unit_decl): Remove function.\n\t(asan_add_global): Force has_dynamic_init to zero in LTO mode.\n\nFrom-SVN: r245033", "tree": {"sha": "43be8d004c6d57d30f8e3cd49a3302ffc5cffb7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43be8d004c6d57d30f8e3cd49a3302ffc5cffb7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1860ba97c381a17281e33a895bbad4f5006d43b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1860ba97c381a17281e33a895bbad4f5006d43b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1860ba97c381a17281e33a895bbad4f5006d43b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1860ba97c381a17281e33a895bbad4f5006d43b/comments", "author": null, "committer": null, "parents": [{"sha": "37731134c71cc81ed8245d583e1fbbfab879fa5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37731134c71cc81ed8245d583e1fbbfab879fa5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37731134c71cc81ed8245d583e1fbbfab879fa5f"}], "stats": {"total": 37, "additions": 12, "deletions": 25}, "files": [{"sha": "00b8a99ad47efee6966ebe8816de7b23fc9afbfa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1860ba97c381a17281e33a895bbad4f5006d43b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1860ba97c381a17281e33a895bbad4f5006d43b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1860ba97c381a17281e33a895bbad4f5006d43b", "patch": "@@ -1,3 +1,9 @@\n+2017-01-30  Maxim Ostapenko  <m.ostapenko@samsung.com>\n+\n+\tPR lto/79061\n+\t* asan.c (get_translation_unit_decl): Remove function.\n+\t(asan_add_global): Force has_dynamic_init to zero in LTO mode.\n+\n 2017-01-30  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/79259"}, {"sha": "6cdd59b7ea7da25f015433cf9044a2c70ba4b7e1", "filename": "gcc/asan.c", "status": "modified", "additions": 6, "deletions": 25, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1860ba97c381a17281e33a895bbad4f5006d43b/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1860ba97c381a17281e33a895bbad4f5006d43b/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=f1860ba97c381a17281e33a895bbad4f5006d43b", "patch": "@@ -2373,22 +2373,6 @@ asan_needs_odr_indicator_p (tree decl)\n \t  && TREE_PUBLIC (decl));\n }\n \n-/* For given DECL return its corresponding TRANSLATION_UNIT_DECL.  */\n-\n-static const_tree\n-get_translation_unit_decl (tree decl)\n-{\n-  const_tree context = decl;\n-  while (context && TREE_CODE (context) != TRANSLATION_UNIT_DECL)\n-    {\n-      if (TREE_CODE (context) == BLOCK)\n-\tcontext = BLOCK_SUPERCONTEXT (context);\n-      else\n-\tcontext = get_containing_scope (context);\n-    }\n-  return context;\n-}\n-\n /* Append description of a single global DECL into vector V.\n    TYPE is __asan_global struct type as returned by asan_global_struct.  */\n \n@@ -2408,14 +2392,7 @@ asan_add_global (tree decl, tree type, vec<constructor_elt, va_gc> *v)\n     pp_string (&asan_pp, \"<unknown>\");\n   str_cst = asan_pp_string (&asan_pp);\n \n-  const char *filename = main_input_filename;\n-  if (in_lto_p)\n-    {\n-      const_tree translation_unit_decl = get_translation_unit_decl (decl);\n-      if (translation_unit_decl && DECL_NAME (translation_unit_decl) != NULL)\n-\tfilename = IDENTIFIER_POINTER (DECL_NAME (translation_unit_decl));\n-    }\n-  pp_string (&module_name_pp, filename);\n+  pp_string (&module_name_pp, main_input_filename);\n   module_name_cst = asan_pp_string (&module_name_pp);\n \n   if (asan_needs_local_alias (decl))\n@@ -2451,7 +2428,11 @@ asan_add_global (tree decl, tree type, vec<constructor_elt, va_gc> *v)\n   CONSTRUCTOR_APPEND_ELT (vinner, NULL_TREE,\n \t\t\t  fold_convert (const_ptr_type_node, module_name_cst));\n   varpool_node *vnode = varpool_node::get (decl);\n-  int has_dynamic_init = vnode ? vnode->dynamically_initialized : 0;\n+  int has_dynamic_init = 0;\n+  /* FIXME: Enable initialization order fiasco detection in LTO mode once\n+     proper fix for PR 79061 will be applied.  */\n+  if (!in_lto_p)\n+    has_dynamic_init = vnode ? vnode->dynamically_initialized : 0;\n   CONSTRUCTOR_APPEND_ELT (vinner, NULL_TREE,\n \t\t\t  build_int_cst (uptr, has_dynamic_init));\n   tree locptr = NULL_TREE;"}]}