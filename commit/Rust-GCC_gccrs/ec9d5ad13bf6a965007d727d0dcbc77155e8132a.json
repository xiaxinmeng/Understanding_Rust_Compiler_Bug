{"sha": "ec9d5ad13bf6a965007d727d0dcbc77155e8132a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM5ZDVhZDEzYmY2YTk2NTAwN2Q3MjdkMGRjYmM3NzE1NWU4MTMyYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-10-03T15:51:33Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-10-03T15:51:33Z"}, "message": "configure.ac (strict_warn): Merge -Wmissing-format-attribute and -Woverloaded-virtual checks for warning...\n\n\t* configure.ac (strict_warn): Merge -Wmissing-format-attribute and\n\t-Woverloaded-virtual checks for warning options.\n\t* configure: Regenerate.\n\nFrom-SVN: r240721", "tree": {"sha": "933ceedf807240a06914b8946a85612aa12009ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/933ceedf807240a06914b8946a85612aa12009ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec9d5ad13bf6a965007d727d0dcbc77155e8132a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec9d5ad13bf6a965007d727d0dcbc77155e8132a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec9d5ad13bf6a965007d727d0dcbc77155e8132a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec9d5ad13bf6a965007d727d0dcbc77155e8132a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e347987da8d37eb2f1d41f1a8d3eda10e0e8e376", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e347987da8d37eb2f1d41f1a8d3eda10e0e8e376", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e347987da8d37eb2f1d41f1a8d3eda10e0e8e376"}], "stats": {"total": 76, "additions": 13, "deletions": 63}, "files": [{"sha": "7f4e311087fbfb875c11eda22082b3363fbc859f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec9d5ad13bf6a965007d727d0dcbc77155e8132a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec9d5ad13bf6a965007d727d0dcbc77155e8132a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec9d5ad13bf6a965007d727d0dcbc77155e8132a", "patch": "@@ -1,3 +1,9 @@\n+2016-10-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* configure.ac (strict_warn): Merge -Wmissing-format-attribute and\n+\t-Woverloaded-virtual checks for warning options.\n+\t* configure: Regenerate.\n+\n 2016-10-03  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR preprocessor/77699"}, {"sha": "80fc5c71a0e4e90b25f88588487047910d4c7ce3", "filename": "gcc/configure", "status": "modified", "additions": 3, "deletions": 59, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec9d5ad13bf6a965007d727d0dcbc77155e8132a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec9d5ad13bf6a965007d727d0dcbc77155e8132a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=ec9d5ad13bf6a965007d727d0dcbc77155e8132a", "patch": "@@ -6758,63 +6758,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n strict_warn=\n save_CXXFLAGS=\"$CXXFLAGS\"\n-for real_option in -Wmissing-format-attribute; do\n-  # Do the check with the no- prefix removed since gcc silently\n-  # accepts any -Wno-* option on purpose\n-  case $real_option in\n-    -Wno-*) option=-W`expr x$real_option : 'x-Wno-\\(.*\\)'` ;;\n-    *) option=$real_option ;;\n-  esac\n-  as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports $option\" >&5\n-$as_echo_n \"checking whether $CXX supports $option... \" >&6; }\n-if { as_var=$as_acx_Woption; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  CXXFLAGS=\"$option\"\n-    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-int\n-main ()\n-{\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_cxx_try_compile \"$LINENO\"; then :\n-  eval \"$as_acx_Woption=yes\"\n-else\n-  eval \"$as_acx_Woption=no\"\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\n-fi\n-eval ac_res=\\$$as_acx_Woption\n-\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n-$as_echo \"$ac_res\" >&6; }\n-  if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  strict_warn=\"$strict_warn${strict_warn:+ }$real_option\"\n-fi\n-  done\n-CXXFLAGS=\"$save_CXXFLAGS\"\n-ac_ext=cpp\n-ac_cpp='$CXXCPP $CPPFLAGS'\n-ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n-\n-\n-ac_ext=cpp\n-ac_cpp='$CXXCPP $CPPFLAGS'\n-ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n-\n-save_CXXFLAGS=\"$CXXFLAGS\"\n-for real_option in -Woverloaded-virtual; do\n+for real_option in -Wmissing-format-attribute -Woverloaded-virtual; do\n   # Do the check with the no- prefix removed since gcc silently\n   # accepts any -Wno-* option on purpose\n   case $real_option in\n@@ -18479,7 +18423,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18482 \"configure\"\n+#line 18426 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18585,7 +18529,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18588 \"configure\"\n+#line 18532 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "338956f644a2701b6bfe177c9a67a177aa558448", "filename": "gcc/configure.ac", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec9d5ad13bf6a965007d727d0dcbc77155e8132a/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec9d5ad13bf6a965007d727d0dcbc77155e8132a/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=ec9d5ad13bf6a965007d727d0dcbc77155e8132a", "patch": "@@ -476,14 +476,14 @@ AC_ARG_ENABLE(build-format-warnings,\n AS_IF([test $enable_build_format_warnings = no],\n       [wf_opt=-Wno-format],[wf_opt=])\n ACX_PROG_CXX_WARNING_OPTS(\n-\tm4_quote(m4_do([-W -Wall -Wno-narrowing -Wwrite-strings -Wcast-qual $wf_opt])), [loose_warn])\n+\tm4_quote(m4_do([-W -Wall -Wno-narrowing -Wwrite-strings ],\n+\t\t       [-Wcast-qual $wf_opt])), [loose_warn])\n ACX_PROG_CC_WARNING_OPTS(\n \tm4_quote(m4_do([-Wstrict-prototypes -Wmissing-prototypes])),\n \t[c_loose_warn])\n ACX_PROG_CXX_WARNING_OPTS(\n-\tm4_quote(m4_do([-Wmissing-format-attribute])), [strict_warn])\n-ACX_PROG_CXX_WARNING_OPTS(\n-\tm4_quote(m4_do([-Woverloaded-virtual])), [strict_warn])\n+\tm4_quote(m4_do([-Wmissing-format-attribute ],\n+\t\t       [-Woverloaded-virtual])), [strict_warn])\n ACX_PROG_CC_WARNING_OPTS(\n \tm4_quote(m4_do([-Wold-style-definition -Wc++-compat])), [c_strict_warn])\n ACX_PROG_CXX_WARNING_ALMOST_PEDANTIC("}]}