{"sha": "0cb8d27cd3ab2935184bd54c917c980a60f11565", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNiOGQyN2NkM2FiMjkzNTE4NGJkNTRjOTE3Yzk4MGE2MGYxMTU2NQ==", "commit": {"author": {"name": "Vasiliy Fofanov", "email": "fofanov@adacore.com", "date": "2007-06-06T10:15:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:15:55Z"}, "message": "2007-04-20  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* s-osprim-vms.ads, s-osprim-vms.adb\n\t(Initialize) New procedure. Noop on VMS, added for interface\n\tcommonality.\n\nFrom-SVN: r125369", "tree": {"sha": "e8834769c122a46f5c2f47e940b9a22423bff82e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8834769c122a46f5c2f47e940b9a22423bff82e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cb8d27cd3ab2935184bd54c917c980a60f11565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb8d27cd3ab2935184bd54c917c980a60f11565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cb8d27cd3ab2935184bd54c917c980a60f11565", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb8d27cd3ab2935184bd54c917c980a60f11565/comments", "author": {"login": "t-14", "id": 18482303, "node_id": "MDQ6VXNlcjE4NDgyMzAz", "avatar_url": "https://avatars.githubusercontent.com/u/18482303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-14", "html_url": "https://github.com/t-14", "followers_url": "https://api.github.com/users/t-14/followers", "following_url": "https://api.github.com/users/t-14/following{/other_user}", "gists_url": "https://api.github.com/users/t-14/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-14/subscriptions", "organizations_url": "https://api.github.com/users/t-14/orgs", "repos_url": "https://api.github.com/users/t-14/repos", "events_url": "https://api.github.com/users/t-14/events{/privacy}", "received_events_url": "https://api.github.com/users/t-14/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df862408038ca7025bc3e758b693e4824c3b912b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df862408038ca7025bc3e758b693e4824c3b912b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df862408038ca7025bc3e758b693e4824c3b912b"}], "stats": {"total": 64, "additions": 39, "deletions": 25}, "files": [{"sha": "8a9430e1d38a1a7f82f97f918b0ce151d8c38ec3", "filename": "gcc/ada/s-osprim-vms.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb8d27cd3ab2935184bd54c917c980a60f11565/gcc%2Fada%2Fs-osprim-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb8d27cd3ab2935184bd54c917c980a60f11565/gcc%2Fada%2Fs-osprim-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-vms.adb?ref=0cb8d27cd3ab2935184bd54c917c980a60f11565", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2006 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -152,6 +152,15 @@ package body System.OS_Primitives is\n       return To_Duration (OS_Clock, Absolute_Calendar);\n    end Clock;\n \n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize is\n+   begin\n+      null;\n+   end Initialize;\n+\n    ---------------------\n    -- Monotonic_Clock --\n    ---------------------"}, {"sha": "d81ea3783aa51aa288973c26ff22248cba98e7af", "filename": "gcc/ada/s-osprim-vms.ads", "status": "modified", "additions": 29, "deletions": 24, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb8d27cd3ab2935184bd54c917c980a60f11565/gcc%2Fada%2Fs-osprim-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb8d27cd3ab2935184bd54c917c980a60f11565/gcc%2Fada%2Fs-osprim-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-vms.ads?ref=0cb8d27cd3ab2935184bd54c917c980a60f11565", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1998-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,12 +27,12 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n --  This package provides low level primitives used to implement clock and\n---  delays in non tasking applications on Alpha/VMS\n+--  delays in non tasking applications on Alpha/VMS.\n \n --  The choice of the real clock/delay implementation (depending on whether\n --  tasking is involved or not) is done via soft links (see s-soflin.ads)\n@@ -52,48 +52,53 @@ package System.OS_Primitives is\n    Max_Sensible_Delay : constant Duration :=\n                           Duration'Min (183 * 24 * 60 * 60.0,\n                                         Duration'Last);\n-   --  Max of half a year delay, needed to prevent exceptions for large\n-   --  delay values. It seems unlikely that any test will notice this\n-   --  restriction, except in the case of applications setting the clock at\n-   --  at run time (see s-tastim.adb). Also note that a larger value might\n-   --  cause problems (e.g overflow, or more likely OS limitation in the\n-   --  primitives used). In the case where half a year is too long (which\n-   --  occurs in high integrity mode with 32-bit words, and possibly on\n-   --  some specific ports of GNAT), Duration'Last is used instead.\n+   --  Max of half a year delay, needed to prevent exceptions for large delay\n+   --  values. It seems unlikely that any test will notice this restriction,\n+   --  except in the case of applications setting the clock at run time (see\n+   --  s-tastim.adb). Also note that a larger value might cause problems (e.g\n+   --  overflow, or more likely OS limitation in the primitives used). In the\n+   --  case where half a year is too long (which occurs in high integrity mode\n+   --  with 32-bit words, and possibly on some specific ports of GNAT),\n+   --  Duration'Last is used instead.\n+\n+   procedure Initialize;\n+   --  Initialize global settings related to this package. This procedure\n+   --  should be called before any other subprograms in this package. Note\n+   --  that this procedure can be called several times.\n \n    function OS_Clock return OS_Time;\n    --  Returns \"absolute\" time, represented as an offset\n    --  relative to \"the Epoch\", which is Nov 17, 1858 on VMS.\n \n    function Clock return Duration;\n    pragma Inline (Clock);\n-   --  Returns \"absolute\" time, represented as an offset\n-   --  relative to \"the Epoch\", which is Jan 1, 1970 on unixes.\n-   --  This implementation is affected by system's clock changes.\n+   --  Returns \"absolute\" time, represented as an offset relative to \"the\n+   --  Epoch\", which is Jan 1, 1970 00:00:00 UTC on UNIX systems. This\n+   --  implementation is affected by system's clock changes.\n \n    function Monotonic_Clock return Duration;\n    pragma Inline (Monotonic_Clock);\n-   --  Returns \"absolute\" time, represented as an offset\n-   --  relative to \"the Epoch\", which is Jan 1, 1970.\n-   --  This clock implementation is immune to the system's clock changes.\n+   --  Returns \"absolute\" time, represented as an offset relative to \"the Unix\n+   --  Epoch\", which is Jan 1, 1970 00:00:00 UTC. This clock implementation is\n+   --  immune to the system's clock changes.\n \n    Relative          : constant := 0;\n    Absolute_Calendar : constant := 1;\n    Absolute_RT       : constant := 2;\n-   --  Values for Mode call below. Note that the compiler (exp_ch9.adb)\n-   --  relies on these values. So any change here must be reflected in\n-   --  corresponding changes in the compiler.\n+   --  Values for Mode call below. Note that the compiler (exp_ch9.adb) relies\n+   --  on these values. So any change here must be reflected in corresponding\n+   --  changes in the compiler.\n \n    procedure Timed_Delay (Time : Duration; Mode : Integer);\n-   --  Implements the semantics of the delay statement when no tasking is\n-   --  used in the application.\n+   --  Implements the semantics of the delay statement when no tasking is used\n+   --  in the application.\n    --\n    --    Mode is one of the three values above\n    --\n    --    Time is a relative or absolute duration value, depending on Mode.\n    --\n-   --  Note that currently Ada.Real_Time always uses the tasking run time, so\n-   --  this procedure should never be called with Mode set to Absolute_RT.\n+   --  Note that currently Ada.Real_Time always uses the tasking run time,\n+   --  so this procedure should never be called with Mode set to Absolute_RT.\n    --  This may change in future or bare board implementations.\n \n    function To_Duration (T : OS_Time; Mode : Integer) return Duration;"}]}