{"sha": "ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRmODdjZmFmYTZjNjgxM2E3YWE2ZTU2YzFmNGRkMTg1MTFmOTI1ZA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-05-10T07:50:00Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-05-10T07:50:00Z"}, "message": "2003-05-10  Michael Koch  <konqueror@gmx.de>\n\n\t* java/nio/CharBuffer.java\n\t(offset): Make it package-private.\n\t(backing_buffer): Likewise.\n\t* java/nio/DoubleBuffer.java\n\t(offset): Make it package-private.\n\t(backing_buffer): Likewise.\n\t(put): Reformatted.\n\t* java/nio/FloatBuffer.java\n\t(offset): Make it package-private.\n\t(backing_buffer): Likewise.\n\t* java/nio/IntBuffer.java\n\t(offset): Make it package-private.\n\t(backing_buffer): Likewise.\n\t* java/nio/LongBuffer.java\n\t(offset): Make it package-private.\n\t(backing_buffer): Likewise.\n\t* java/nio/ShortBuffer.java\n\t(offset): Make it package-private.\n\t(backing_buffer): Likewise.\n\nFrom-SVN: r66657", "tree": {"sha": "e49046064cc8d8e2d5dc9a7e830aa630505942a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e49046064cc8d8e2d5dc9a7e830aa630505942a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/comments", "author": null, "committer": null, "parents": [{"sha": "c363e02d01469e52bd72efe3c1a1407b4d51de68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c363e02d01469e52bd72efe3c1a1407b4d51de68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c363e02d01469e52bd72efe3c1a1407b4d51de68"}], "stats": {"total": 48, "additions": 35, "deletions": 13}, "files": [{"sha": "97b7ad0283617fa2e1ce3b1a56b8f5a1ad74f9c3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d", "patch": "@@ -1,3 +1,25 @@\n+2003-05-10  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/nio/CharBuffer.java\n+\t(offset): Make it package-private.\n+\t(backing_buffer): Likewise.\n+\t* java/nio/DoubleBuffer.java\n+\t(offset): Make it package-private.\n+\t(backing_buffer): Likewise.\n+\t(put): Reformatted.\n+\t* java/nio/FloatBuffer.java\n+\t(offset): Make it package-private.\n+\t(backing_buffer): Likewise.\n+\t* java/nio/IntBuffer.java\n+\t(offset): Make it package-private.\n+\t(backing_buffer): Likewise.\n+\t* java/nio/LongBuffer.java\n+\t(offset): Make it package-private.\n+\t(backing_buffer): Likewise.\n+\t* java/nio/ShortBuffer.java\n+\t(offset): Make it package-private.\n+\t(backing_buffer): Likewise.\n+\n 2003-05-10  Michael Koch  <konqueror@gmx.de>\n \n \t* java/nio/CharBuffer.java"}, {"sha": "2158af0160fac1871800013dcf7290a00d6336a3", "filename": "libjava/java/nio/CharBuffer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2Fjava%2Fnio%2FCharBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2Fjava%2Fnio%2FCharBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FCharBuffer.java?ref=ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d", "patch": "@@ -45,8 +45,8 @@\n public abstract class CharBuffer extends Buffer\n   implements Comparable, CharSequence\n {\n-  protected int array_offset = 0;\n-  protected char [] backing_buffer;\n+  int array_offset = 0;\n+  char[] backing_buffer;\n   \n   /**\n    * Allocates a new <code>CharBuffer</code> object with a given capacity."}, {"sha": "ef39ac10048540cb8e19da9870a0e7ee3da7c541", "filename": "libjava/java/nio/DoubleBuffer.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2Fjava%2Fnio%2FDoubleBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2Fjava%2Fnio%2FDoubleBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FDoubleBuffer.java?ref=ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d", "patch": "@@ -41,8 +41,8 @@\n \n public abstract class DoubleBuffer extends Buffer implements Comparable\n {\n-  protected double [] backing_buffer;\n-  protected int array_offset;\n+  int array_offset;\n+  double[] backing_buffer;\n \n   public static DoubleBuffer allocateDirect(int capacity)\n   {\n@@ -108,7 +108,7 @@ public DoubleBuffer put (DoubleBuffer src)\n   public DoubleBuffer put (double[] src, int offset, int length)\n   {\n     for (int i = offset; i < offset + length; i++)\n-      put(src[i]);\n+      put (src [i]);\n \n     return this;\n   }"}, {"sha": "81feb456e154aa4b2f75e0d56fbdc020783831a3", "filename": "libjava/java/nio/FloatBuffer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2Fjava%2Fnio%2FFloatBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2Fjava%2Fnio%2FFloatBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FFloatBuffer.java?ref=ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d", "patch": "@@ -41,8 +41,8 @@\n \n public abstract class FloatBuffer extends Buffer implements Comparable\n {\n-  protected float [] backing_buffer;\n-  protected int array_offset;\n+  int array_offset;\n+  float[] backing_buffer;\n \n   public static FloatBuffer allocateDirect(int capacity)\n   {"}, {"sha": "295ad6a1d8b9f7735ff4e14871c03490cf4836d2", "filename": "libjava/java/nio/IntBuffer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2Fjava%2Fnio%2FIntBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2Fjava%2Fnio%2FIntBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FIntBuffer.java?ref=ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d", "patch": "@@ -41,8 +41,8 @@\n \n public abstract class IntBuffer extends Buffer implements Comparable\n {\n-  protected int [] backing_buffer;\n-  protected int array_offset;\n+  int array_offset;\n+  int[] backing_buffer;\n \n   public static IntBuffer allocateDirect(int capacity)\n   {"}, {"sha": "35978544832a82f49fe881b03532b90e443c80e7", "filename": "libjava/java/nio/LongBuffer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2Fjava%2Fnio%2FLongBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2Fjava%2Fnio%2FLongBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FLongBuffer.java?ref=ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d", "patch": "@@ -41,8 +41,8 @@\n \n public abstract class LongBuffer extends Buffer implements Comparable\n {\n-  protected long [] backing_buffer;\n-  protected int array_offset;\n+  int array_offset;\n+  long[] backing_buffer;\n \n   public static LongBuffer allocateDirect(int capacity)\n   {"}, {"sha": "5e449f8308da398ebc0b9919eee06e8680834a1f", "filename": "libjava/java/nio/ShortBuffer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2Fjava%2Fnio%2FShortBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d/libjava%2Fjava%2Fnio%2FShortBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FShortBuffer.java?ref=ddf87cfafa6c6813a7aa6e56c1f4dd18511f925d", "patch": "@@ -41,8 +41,8 @@\n \n public abstract class ShortBuffer extends Buffer implements Comparable\n {\n-  protected short [] backing_buffer;\n-  protected int array_offset;\n+  int array_offset;\n+  short[] backing_buffer;\n \n   public static ShortBuffer allocateDirect(int capacity)\n   {"}]}