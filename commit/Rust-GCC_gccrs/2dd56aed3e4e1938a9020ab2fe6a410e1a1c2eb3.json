{"sha": "2dd56aed3e4e1938a9020ab2fe6a410e1a1c2eb3", "node_id": "C_kwDOANBUbNoAKDJkZDU2YWVkM2U0ZTE5MzhhOTAyMGFiMmZlNmE0MTBlMWExYzJlYjM", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-11-23T22:35:31Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-11-23T22:36:03Z"}, "message": "Issue -Waddress also for reference members [PR96507].\n\nResolves:\nPR c++/96507 - missing -Waddress for member references\n\ngcc/cp/ChangeLog:\n\n\tPR c++/96507\n\t* typeck.c (warn_for_null_address): Handle reference members.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/96507\n\t* g++.dg/warn/Waddress-8.C: New test.", "tree": {"sha": "4371702e64925754d28d313697752ba71010170d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4371702e64925754d28d313697752ba71010170d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2dd56aed3e4e1938a9020ab2fe6a410e1a1c2eb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dd56aed3e4e1938a9020ab2fe6a410e1a1c2eb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dd56aed3e4e1938a9020ab2fe6a410e1a1c2eb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dd56aed3e4e1938a9020ab2fe6a410e1a1c2eb3/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30ba058f77eedfaf7a0582f5d42aff949710bce4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ba058f77eedfaf7a0582f5d42aff949710bce4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30ba058f77eedfaf7a0582f5d42aff949710bce4"}], "stats": {"total": 90, "additions": 89, "deletions": 1}, "files": [{"sha": "872e944dc2e3ce601b004fa963a8e27426fba857", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dd56aed3e4e1938a9020ab2fe6a410e1a1c2eb3/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dd56aed3e4e1938a9020ab2fe6a410e1a1c2eb3/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=2dd56aed3e4e1938a9020ab2fe6a410e1a1c2eb3", "patch": "@@ -4677,10 +4677,13 @@ warn_for_null_address (location_t location, tree op, tsubst_flags_t complain)\n       return;\n     }\n   else if (CONVERT_EXPR_P (op)\n-      && TYPE_REF_P (TREE_TYPE (TREE_OPERAND (op, 0))))\n+\t   && TYPE_REF_P (TREE_TYPE (TREE_OPERAND (op, 0))))\n     {\n       STRIP_NOPS (op);\n \n+      if (TREE_CODE (op) == COMPONENT_REF)\n+\top = TREE_OPERAND (op, 1);\n+\n       if (DECL_P (op))\n \twarned = warning_at (location, OPT_Waddress,\n \t\t\t     \"the compiler can assume that the address of \""}, {"sha": "797102d6be4ce84ced0151784e9fcfbe8cccea29", "filename": "gcc/testsuite/g++.dg/warn/Waddress-8.C", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dd56aed3e4e1938a9020ab2fe6a410e1a1c2eb3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWaddress-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dd56aed3e4e1938a9020ab2fe6a410e1a1c2eb3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWaddress-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWaddress-8.C?ref=2dd56aed3e4e1938a9020ab2fe6a410e1a1c2eb3", "patch": "@@ -0,0 +1,85 @@\n+/* PR c++/96507 - missing -Waddress for member references\n+   { dg-do compile }\n+   { dg-options \"-Wall\" } */\n+\n+typedef void F ();\n+\n+extern F &efr;\n+extern int &eir;\n+\n+bool warn_ext_rfun ()\n+{\n+  return &efr != 0;           // { dg-warning \"-Waddress\" }\n+}\n+\n+bool warn_ext_rvar ()\n+{\n+  return &eir != 0;           // { dg-warning \"-Waddress\" }\n+}\n+\n+\n+bool warn_parm_rfun (F &rf)\n+{\n+  return &rf != 0;            // { dg-warning \"-Waddress\" }\n+}\n+\n+bool warn_parm_rvar (int &ir)\n+{\n+  return &ir != 0;            // { dg-warning \"-Waddress\" }\n+}\n+\n+// Comparing the address of a reference argument to null also triggers\n+// a -Wnonnull-compare (that seems like a bug, hence PR 103363).\n+// { dg-prune-output \"-Wnonnull-compare\" }\n+\n+\n+struct S\n+{\n+  F &fr;\n+  int &ir;\n+};\n+\n+extern S es, esa[];\n+\n+bool warn_ext_mem_rfun ()\n+{\n+  return &es.fr != 0;         // { dg-warning \"-Waddress\" }\n+}\n+\n+bool warn_ext_mem_rvar ()\n+{\n+  return &es.ir != 0;         // { dg-warning \"-Waddress\" }\n+}\n+\n+\n+bool warn_ext_arr_mem_rfun (int i)\n+{\n+  return &esa[i].fr != 0;     // { dg-warning \"-Waddress\" }\n+}\n+\n+bool warn_ext_arr_mem_rvar (int i)\n+{\n+  return &esa[i].ir != 0;     // { dg-warning \"-Waddress\" }\n+}\n+\n+\n+bool warn_parm_mem_rfun (S &s)\n+{\n+  return &s.fr != 0;          // { dg-warning \"-Waddress\" }\n+}\n+\n+bool warn_parm_mem_rvar (S &s)\n+{\n+  return &s.ir != 0;          // { dg-warning \"-Waddress\" }\n+}\n+\n+\n+bool warn_parm_arr_mem_rfun (S sa[], int i)\n+{\n+  return &sa[i].fr != 0;      // { dg-warning \"-Waddress\" }\n+}\n+\n+bool warn_parm_arr_mem_rvar (S sa[], int i)\n+{\n+  return &sa[i].ir != 0;      // { dg-warning \"-Waddress\" }\n+}"}]}