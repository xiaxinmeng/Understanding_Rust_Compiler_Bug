{"sha": "a8ab21e5e6bd37732a16f1764d2ab723e9ddd104", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThhYjIxZTVlNmJkMzc3MzJhMTZmMTc2NGQyYWI3MjNlOWRkZDEwNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-07-13T13:01:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-07-13T13:01:06Z"}, "message": "re PR target/53907 (gcc  uses unaligned load when aligned load was requested)\n\n2012-07-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/53907\n\t* tree-ssa-forwprop.c (associate_pointerplus): New function.\n\t(ssa_forward_propagate_and_combine): Call it.\n\n\t* gcc.target/i386/pr53907.c: New testcase.\n\nFrom-SVN: r189462", "tree": {"sha": "e9e2cb5a1464a5ffa41a29537b01eba96cc0b689", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9e2cb5a1464a5ffa41a29537b01eba96cc0b689"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8ab21e5e6bd37732a16f1764d2ab723e9ddd104", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8ab21e5e6bd37732a16f1764d2ab723e9ddd104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8ab21e5e6bd37732a16f1764d2ab723e9ddd104", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8ab21e5e6bd37732a16f1764d2ab723e9ddd104/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e8f808b30e83bb6bfa8ff0984fb13b136b3bd4a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8f808b30e83bb6bfa8ff0984fb13b136b3bd4a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8f808b30e83bb6bfa8ff0984fb13b136b3bd4a1"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "74dac1cb911e7e213bdc265fc5bc5dcec4ecd522", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8ab21e5e6bd37732a16f1764d2ab723e9ddd104/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8ab21e5e6bd37732a16f1764d2ab723e9ddd104/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8ab21e5e6bd37732a16f1764d2ab723e9ddd104", "patch": "@@ -1,3 +1,9 @@\n+2012-07-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53907\n+\t* tree-ssa-forwprop.c (associate_pointerplus): New function.\n+\t(ssa_forward_propagate_and_combine): Call it.\n+\n 2012-07-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/53922"}, {"sha": "9e6e3b4b5f1b7a1a645b71a872776fa9457859cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8ab21e5e6bd37732a16f1764d2ab723e9ddd104/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8ab21e5e6bd37732a16f1764d2ab723e9ddd104/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a8ab21e5e6bd37732a16f1764d2ab723e9ddd104", "patch": "@@ -1,3 +1,8 @@\n+2012-07-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53907\n+\t* gcc.target/i386/pr53907.c: New testcase.\n+\n 2012-07-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/53922"}, {"sha": "8de8f0de9850a412cf1f8589883e8b54f4f0efe5", "filename": "gcc/testsuite/gcc.target/i386/pr53907.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8ab21e5e6bd37732a16f1764d2ab723e9ddd104/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53907.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8ab21e5e6bd37732a16f1764d2ab723e9ddd104/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53907.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53907.c?ref=a8ab21e5e6bd37732a16f1764d2ab723e9ddd104", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -msse2\" } */\n+\n+#include <emmintrin.h>\n+\n+__m128i x(char *s)\n+{\n+  __m128i sz,z,mvec;\n+  s-=((unsigned long) s)%16;\n+  sz=_mm_load_si128((__m128i *)s);\n+  return sz;\n+}\n+\n+/* { dg-final { scan-assembler \"movdqa\" } } */"}, {"sha": "60d537704172aa2af28c67bd1f866236aad4522f", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8ab21e5e6bd37732a16f1764d2ab723e9ddd104/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8ab21e5e6bd37732a16f1764d2ab723e9ddd104/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=a8ab21e5e6bd37732a16f1764d2ab723e9ddd104", "patch": "@@ -2474,6 +2474,59 @@ associate_plusminus (gimple_stmt_iterator *gsi)\n   return false;\n }\n \n+/* Associate operands of a POINTER_PLUS_EXPR assignmen at *GSI.  Returns\n+   true if anything changed, false otherwise.  */\n+\n+static bool\n+associate_pointerplus (gimple_stmt_iterator *gsi)\n+{\n+  gimple stmt = gsi_stmt (*gsi);\n+  gimple def_stmt;\n+  tree ptr, rhs, algn;\n+\n+  /* Pattern match\n+       tem = (sizetype) ptr;\n+       tem = tem & algn;\n+       tem = -tem;\n+       ... = ptr p+ tem;\n+     and produce the simpler and easier to analyze with respect to alignment\n+       ... = ptr & ~algn;  */\n+  ptr = gimple_assign_rhs1 (stmt);\n+  rhs = gimple_assign_rhs2 (stmt);\n+  if (TREE_CODE (rhs) != SSA_NAME)\n+    return false;\n+  def_stmt = SSA_NAME_DEF_STMT (rhs);\n+  if (!is_gimple_assign (def_stmt)\n+      || gimple_assign_rhs_code (def_stmt) != NEGATE_EXPR)\n+    return false;\n+  rhs = gimple_assign_rhs1 (def_stmt);\n+  if (TREE_CODE (rhs) != SSA_NAME)\n+    return false;\n+  def_stmt = SSA_NAME_DEF_STMT (rhs);\n+  if (!is_gimple_assign (def_stmt)\n+      || gimple_assign_rhs_code (def_stmt) != BIT_AND_EXPR)\n+    return false;\n+  rhs = gimple_assign_rhs1 (def_stmt);\n+  algn = gimple_assign_rhs2 (def_stmt);\n+  if (TREE_CODE (rhs) != SSA_NAME\n+      || TREE_CODE (algn) != INTEGER_CST)\n+    return false;\n+  def_stmt = SSA_NAME_DEF_STMT (rhs);\n+  if (!is_gimple_assign (def_stmt)\n+      || !CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (def_stmt)))\n+    return false;\n+  if (gimple_assign_rhs1 (def_stmt) != ptr)\n+    return false;\n+\n+  algn = double_int_to_tree (TREE_TYPE (ptr),\n+\t\t\t     double_int_not (tree_to_double_int (algn)));\n+  gimple_assign_set_rhs_with_ops (gsi, BIT_AND_EXPR, ptr, algn);\n+  fold_stmt_inplace (gsi);\n+  update_stmt (stmt);\n+\n+  return true;\n+}\n+\n /* Combine two conversions in a row for the second conversion at *GSI.\n    Returns 1 if there were any changes made, 2 if cfg-cleanup needs to\n    run.  Else it returns 0.  */\n@@ -2815,6 +2868,8 @@ ssa_forward_propagate_and_combine (void)\n \t\telse if (code == PLUS_EXPR\n \t\t\t || code == MINUS_EXPR)\n \t\t  changed = associate_plusminus (&gsi);\n+\t\telse if (code == POINTER_PLUS_EXPR)\n+\t\t  changed = associate_pointerplus (&gsi);\n \t\telse if (CONVERT_EXPR_CODE_P (code)\n \t\t\t || code == FLOAT_EXPR\n \t\t\t || code == FIX_TRUNC_EXPR)"}]}