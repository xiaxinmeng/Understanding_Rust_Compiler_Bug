{"sha": "d56e7acd6325f983f5a675c187bc465ea628502e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU2ZTdhY2Q2MzI1Zjk4M2Y1YTY3NWMxODdiYzQ2NWVhNjI4NTAyZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T09:42:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T09:42:59Z"}, "message": "[multiple changes]\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\t* bcheck.adb, gnatlink.adb, make.adb, makeutl.adb, osint.adb,\n\tosint.ads, prj-ext.adb, sem_case.adb: Minor reformatting\n\t* g-alleve.adb: Minor code reorganization (use conditional expressions)\n\n2009-11-30  Matthew Heaney  <heaney@adacore.com>\n\n\t* a-crbtgo.adb (Delete_Fixup): Changed always-true predicates to\n\tassertions.\n\n2009-11-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* a-tasatt.adb, s-crtl.ads, s-taprop-dummy.adb (System.CRTL.malloc32,\n\tSystem.CRTL.realloc32): Remove VMS-specific routines.\n\t(Ada.Task_Attributes.Reference): Remove unreachable code.\n\t(System.Task_Primitives.Operations.Initialize, dummy version):\n\tUse plain Program_Error rather than call to\n\tSystem.Error_Reporting.Shutdown.\n\nFrom-SVN: r154762", "tree": {"sha": "fc80c363bc049b80c70eb9361b7ed4757c282f27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc80c363bc049b80c70eb9361b7ed4757c282f27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d56e7acd6325f983f5a675c187bc465ea628502e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d56e7acd6325f983f5a675c187bc465ea628502e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d56e7acd6325f983f5a675c187bc465ea628502e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d56e7acd6325f983f5a675c187bc465ea628502e/comments", "author": null, "committer": null, "parents": [{"sha": "f1b20d2758a7cf6d92fabd50fc71bc8fedba7da2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b20d2758a7cf6d92fabd50fc71bc8fedba7da2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b20d2758a7cf6d92fabd50fc71bc8fedba7da2"}], "stats": {"total": 394, "additions": 220, "deletions": 174}, "files": [{"sha": "7bbbc065809f663b41895a8601147f5270eb44d4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d56e7acd6325f983f5a675c187bc465ea628502e", "patch": "@@ -1,3 +1,23 @@\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* bcheck.adb, gnatlink.adb, make.adb, makeutl.adb, osint.adb,\n+\tosint.ads, prj-ext.adb, sem_case.adb: Minor reformatting\n+\t* g-alleve.adb: Minor code reorganization (use conditional expressions)\n+\n+2009-11-30  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-crbtgo.adb (Delete_Fixup): Changed always-true predicates to\n+\tassertions.\n+\n+2009-11-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* a-tasatt.adb, s-crtl.ads, s-taprop-dummy.adb (System.CRTL.malloc32,\n+\tSystem.CRTL.realloc32): Remove VMS-specific routines.\n+\t(Ada.Task_Attributes.Reference): Remove unreachable code.\n+\t(System.Task_Primitives.Operations.Initialize, dummy version):\n+\tUse plain Program_Error rather than call to\n+\tSystem.Error_Reporting.Shutdown.\n+\n 2009-11-30  Thomas Quinot  <quinot@adacore.com>\n \n \t* s-oscons-tmplt.c, xoscons.adb: Add new constants in preparation for"}, {"sha": "cd14b90491d2f866dbe0db5ea0986bfc10173091", "filename": "gcc/ada/a-crbtgo.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fa-crbtgo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fa-crbtgo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbtgo.adb?ref=d56e7acd6325f983f5a675c187bc465ea628502e", "patch": "@@ -171,10 +171,8 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n                if Right (W) = null\n                  or else Color (Right (W)) = Black\n                then\n-                  if Left (W) /= null then\n-                     Set_Color (Left (W), Black);\n-                  end if;\n-\n+                  pragma Assert (Left (W) /= null);\n+                  Set_Color (Left (W), Black);\n                   Set_Color (W, Red);\n                   Right_Rotate (Tree, W);\n                   W := Right (Parent (X));\n@@ -208,10 +206,8 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n \n             else\n                if Left (W) = null or else Color (Left (W)) = Black then\n-                  if Right (W) /= null then\n-                     Set_Color (Right (W), Black);\n-                  end if;\n-\n+                  pragma Assert (Right (W) /= null);\n+                  Set_Color (Right (W), Black);\n                   Set_Color (W, Red);\n                   Left_Rotate (Tree, W);\n                   W := Left (Parent (X));"}, {"sha": "084ce199dda3c6af7a595f30eca0b7732a545ea5", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=d56e7acd6325f983f5a675c187bc465ea628502e", "patch": "@@ -191,6 +191,7 @@ package body Bcheck is\n                else\n                   ALI_Path_Id :=\n                     Osint.Full_Lib_File_Name (ALIs.Table (A).Afile);\n+\n                   if Osint.Is_Readonly_Library (ALI_Path_Id) then\n                      if Tolerate_Consistency_Errors then\n                         Error_Msg (\"?{ should be recompiled\");"}, {"sha": "0e4618f3d64c755b0da71c7f9161b21213feafbd", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=d56e7acd6325f983f5a675c187bc465ea628502e", "patch": "@@ -2148,11 +2148,10 @@ begin\n \n             if Linker_Path = Gcc_Path and then VM_Target = No_VM then\n \n-               --  For systems where the default is to link statically\n-               --  with libgcc, if gcc is not called with\n-               --  -shared-libgcc, call it with -static-libgcc, as\n-               --  there are some platforms where one of these two\n-               --  switches is compulsory to link.\n+               --  For systems where the default is to link statically with\n+               --  libgcc, if gcc is not called with -shared-libgcc, call it\n+               --  with -static-libgcc, as there are some platforms where one\n+               --  of these two switches is compulsory to link.\n \n                if Shared_Libgcc_Default = 'T'\n                  and then not Shared_Libgcc_Seen"}, {"sha": "89a4ad54f05ab0682afa4684352d00ec69445335", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 107, "deletions": 102, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=d56e7acd6325f983f5a675c187bc465ea628502e", "patch": "@@ -2453,14 +2453,12 @@ package body Make is\n       procedure Await_Compile\n         (Data  : out Compilation_Data;\n          OK    : out Boolean);\n-      --  Awaits that an outstanding compilation process terminates. When\n-      --  it does set Data to the information registered for the corresponding\n-      --  call to Add_Process.\n-      --  Note that this time stamp can be used to check whether the\n-      --  compilation did generate an object file. OK is set to True if the\n-      --  compilation succeeded.\n-      --  Data could be No_Compilation_Data if there was no compilation to wait\n-      --  for.\n+      --  Awaits that an outstanding compilation process terminates. When it\n+      --  does set Data to the information registered for the corresponding\n+      --  call to Add_Process. Note that this time stamp can be used to check\n+      --  whether the compilation did generate an object file. OK is set to\n+      --  True if the compilation succeeded. Data could be No_Compilation_Data\n+      --  if there was no compilation to wait for.\n \n       function Bad_Compilation_Count return Natural;\n       --  Returns the number of compilation failures\n@@ -2474,9 +2472,9 @@ package body Make is\n          Source_Index     : Int;\n          Pid              : out Process_Id;\n          Process_Created  : out Boolean);\n-      --  Collect arguments from project file (if any) and compile.\n-      --  If no compilation was attempted, Processed_Created is set to False,\n-      --  and the value of Pid is unknown.\n+      --  Collect arguments from project file (if any) and compile. If no\n+      --  compilation was attempted, Processed_Created is set to False, and the\n+      --  value of Pid is unknown.\n \n       function Compile\n         (Project      : Project_Id;\n@@ -2579,18 +2577,18 @@ package body Make is\n       -------------------\n \n       procedure Await_Compile\n-        (Data  : out Compilation_Data;\n-         OK    : out Boolean)\n+        (Data : out Compilation_Data;\n+         OK   : out Boolean)\n       is\n-         Pid     : Process_Id;\n-         Project : Project_Id;\n+         Pid       : Process_Id;\n+         Project   : Project_Id;\n          Comp_Data : Project_Compilation_Access;\n \n       begin\n          pragma Assert (Outstanding_Compiles > 0);\n \n-         Data  := No_Compilation_Data;\n-         OK    := False;\n+         Data := No_Compilation_Data;\n+         OK   := False;\n \n          --  The loop here is a work-around for a problem on VMS; in some\n          --  circumstances (shared library and several executables, for\n@@ -2614,13 +2612,14 @@ package body Make is\n                   --  file name for reuse by a subsequent compilation.\n \n                   if Running_Compile (J).Mapping_File /= No_Mapping_File then\n-                     Comp_Data := Project_Compilation_Htable.Get\n-                       (Project_Compilation, Project);\n+                     Comp_Data :=\n+                       Project_Compilation_Htable.Get\n+                         (Project_Compilation, Project);\n                      Comp_Data.Last_Free_Indices :=\n                        Comp_Data.Last_Free_Indices + 1;\n                      Comp_Data.Free_Mapping_File_Indices\n                        (Comp_Data.Last_Free_Indices) :=\n-                       Running_Compile (J).Mapping_File;\n+                         Running_Compile (J).Mapping_File;\n                   end if;\n \n                   --  To actually remove this Pid and related info from\n@@ -2629,7 +2628,6 @@ package body Make is\n \n                   if J = Outstanding_Compiles then\n                      null;\n-\n                   else\n                      Running_Compile (J) :=\n                        Running_Compile (Outstanding_Compiles);\n@@ -2643,6 +2641,8 @@ package body Make is\n             --  This child process was not one of our compilation processes;\n             --  just ignore it for now.\n \n+            --  Why is this commented out code sitting here???\n+\n             --  raise Program_Error;\n          end loop;\n       end Await_Compile;\n@@ -3001,6 +3001,7 @@ package body Make is\n          Uname        : Unit_Name_Type;\n          Unit_Name    : Name_Id;\n          Uid          : Prj.Unit_Index;\n+\n       begin\n          while Good_ALI_Present loop\n             ALI          := Get_Next_Good_ALI;\n@@ -3015,24 +3016,23 @@ package body Make is\n                Main_Unit := ALIs.Table (ALI).Main_Program /= None;\n             end if;\n \n-            --  The following adds the standard library (s-stalib) to the\n-            --  list of files to be handled by gnatmake: this file and any\n-            --  files it depends on are always included in every bind,\n-            --  even if they are not in the explicit dependency list.\n-            --  Of course, it is not added if Suppress_Standard_Library\n-            --  is True.\n+            --  The following adds the standard library (s-stalib) to the list\n+            --  of files to be handled by gnatmake: this file and any files it\n+            --  depends on are always included in every bind, even if they are\n+            --  not in the explicit dependency list. Of course, it is not added\n+            --  if Suppress_Standard_Library is True.\n \n-            --  However, to avoid annoying output about s-stalib.ali being\n-            --  read only, when \"-v\" is used, we add the standard library\n-            --  only when \"-a\" is used.\n+            --  However, to avoid annoying output about s-stalib.ali being read\n+            --  only, when \"-v\" is used, we add the standard library only when\n+            --  \"-a\" is used.\n \n             if Need_To_Check_Standard_Library then\n                Check_Standard_Library;\n             end if;\n \n-            --  Now insert in the Q the unmarked source files (i.e. those\n-            --  which have never been inserted in the Q and hence never\n-            --  considered). Only do that if Unique_Compile is False.\n+            --  Now insert in the Q the unmarked source files (i.e. those which\n+            --  have never been inserted in the Q and hence never considered).\n+            --  Only do that if Unique_Compile is False.\n \n             if not Unique_Compile then\n                for J in\n@@ -3044,9 +3044,8 @@ package body Make is\n                      Sfile := Withs.Table (K).Sfile;\n                      Uname := Withs.Table (K).Uname;\n \n-                     --  If project files are used, find the proper source\n-                     --  to compile, in case Sfile is the spec, but there\n-                     --  is a body.\n+                     --  If project files are used, find the proper source to\n+                     --  compile in case Sfile is the spec but there is a body.\n \n                      if Main_Project /= No_Project then\n                         Get_Name_String (Uname);\n@@ -3163,8 +3162,9 @@ package body Make is\n       --------------------------------\n \n       function Must_Exit_Because_Of_Error return Boolean is\n-         Data        : Compilation_Data;\n-         Success     : Boolean;\n+         Data    : Compilation_Data;\n+         Success : Boolean;\n+\n       begin\n          if Bad_Compilation_Count > 0 and then not Keep_Going then\n             while Outstanding_Compiles > 0 loop\n@@ -3212,29 +3212,29 @@ package body Make is\n       function Start_Compile_If_Possible\n         (Args : Argument_List) return Boolean\n       is\n-         In_Lib_Dir       : Boolean;\n-         Need_To_Compile  : Boolean;\n-         Pid              : Process_Id;\n-         Process_Created  : Boolean;\n+         In_Lib_Dir      : Boolean;\n+         Need_To_Compile : Boolean;\n+         Pid             : Process_Id;\n+         Process_Created : Boolean;\n \n          Source_File      : File_Name_Type;\n          Full_Source_File : File_Name_Type;\n          Source_File_Attr : aliased File_Attributes;\n          --  The full name of the source file and its attributes (size, ...)\n \n-         Source_Unit      : Unit_Name_Type;\n-         Source_Index     : Int;\n+         Source_Unit  : Unit_Name_Type;\n+         Source_Index : Int;\n          --  Index of the current unit in the current source file\n \n-         Lib_File         : File_Name_Type;\n-         Full_Lib_File    : File_Name_Type;\n-         Lib_File_Attr    : aliased File_Attributes;\n-         Read_Only        : Boolean := False;\n-         ALI              : ALI_Id;\n+         Lib_File      : File_Name_Type;\n+         Full_Lib_File : File_Name_Type;\n+         Lib_File_Attr : aliased File_Attributes;\n+         Read_Only     : Boolean := False;\n+         ALI           : ALI_Id;\n          --  The ALI file and its attributes (size, stamp, ...)\n \n-         Obj_File         : File_Name_Type;\n-         Obj_Stamp        : Time_Stamp_Type;\n+         Obj_File  : File_Name_Type;\n+         Obj_Stamp : Time_Stamp_Type;\n          --  The object file\n \n       begin\n@@ -3252,8 +3252,7 @@ package body Make is\n                Lib_File => Full_Lib_File,\n                Attr     => Lib_File_Attr);\n \n-            --  If this source has already been compiled, the executable is\n-            --  obsolete.\n+            --  If source has already been compiled, executable is obsolete\n \n             if Is_In_Obsoleted (Source_File) then\n                Executable_Obsolete := True;\n@@ -3359,7 +3358,8 @@ package body Make is\n                   end if;\n \n                   if not Need_To_Compile then\n-                     --  The ALI file is up-to-date. Record its Id\n+\n+                     --  The ALI file is up-to-date; record its Id\n \n                      Record_Good_ALI (ALI);\n \n@@ -3368,15 +3368,15 @@ package body Make is\n \n                      if First_Compiled_File = No_File\n                        and then (Most_Recent_Obj_File = No_File\n-                                 or else Obj_Stamp > Most_Recent_Obj_Stamp)\n+                                  or else Obj_Stamp > Most_Recent_Obj_Stamp)\n                      then\n                         Most_Recent_Obj_File  := Obj_File;\n                         Most_Recent_Obj_Stamp := Obj_Stamp;\n                      end if;\n \n                   else\n-                     --  Check that switch -x has been used if a source\n-                     --  outside of project files need to be compiled.\n+                     --  Check that switch -x has been used if a source outside\n+                     --  of project files need to be compiled.\n \n                      if Main_Project /= No_Project\n                        and then Arguments_Project = No_Project\n@@ -3396,6 +3396,7 @@ package body Make is\n                         Most_Recent_Obj_File := No_File;\n \n                         if Do_Not_Execute then\n+\n                            --  Exit the main loop\n \n                            return True;\n@@ -3408,11 +3409,13 @@ package body Make is\n \n                      if In_Place_Mode then\n                         if Full_Lib_File = No_File then\n+\n                            --  If the library file was not found, then save\n                            --  the library file near the source file.\n \n-                           Lib_File := Osint.Lib_File_Name\n-                             (Full_Source_File, Source_Index);\n+                           Lib_File :=\n+                             Osint.Lib_File_Name\n+                               (Full_Source_File, Source_Index);\n                            Full_Lib_File := Lib_File;\n \n                         else\n@@ -3441,6 +3444,7 @@ package body Make is\n                      --  being the same to find the resulting ALI file.\n \n                      if not In_Place_Mode then\n+\n                         --  Compute the expected location of the ALI file. This\n                         --  can be from several places:\n                         --    -i => in place mode. In such a case,\n@@ -3456,6 +3460,7 @@ package body Make is\n                            Add_Str_To_Name_Buffer (Object_Directory_Path.all);\n                            Add_Str_To_Name_Buffer (Get_Name_String (Lib_File));\n                            Full_Lib_File := Name_Find;\n+\n                         else\n                            if Project_Of_Current_Object_Directory /=\n                              No_Project\n@@ -3466,6 +3471,7 @@ package body Make is\n                               Add_Str_To_Name_Buffer\n                                 (Get_Name_String (Lib_File));\n                               Full_Lib_File := Name_Find;\n+\n                            else\n                               Full_Lib_File := Lib_File;\n                            end if;\n@@ -3475,21 +3481,20 @@ package body Make is\n \n                      Lib_File_Attr := Unknown_Attributes;\n \n-                     --  Make sure we could successfully start\n-                     --  the Compilation.\n+                     --  Make sure we could successfully start the Compilation\n \n                      if Process_Created then\n                         if Pid = Invalid_Pid then\n                            Record_Failure (Full_Source_File, Source_Unit);\n                         else\n                            Add_Process\n-                             (Pid              => Pid,\n-                              Sfile            => Full_Source_File,\n-                              Afile            => Lib_File,\n-                              Uname            => Source_Unit,\n-                              Mfile            => Mfile,\n-                              Full_Lib_File    => Full_Lib_File,\n-                              Lib_File_Attr    => Lib_File_Attr);\n+                             (Pid           => Pid,\n+                              Sfile         => Full_Source_File,\n+                              Afile         => Lib_File,\n+                              Uname         => Source_Unit,\n+                              Mfile         => Mfile,\n+                              Full_Lib_File => Full_Lib_File,\n+                              Lib_File_Attr => Lib_File_Attr);\n                         end if;\n                      end if;\n                   end if;\n@@ -3504,16 +3509,16 @@ package body Make is\n       -----------------------------\n \n       procedure Wait_For_Available_Slot is\n-         Compilation_OK   : Boolean;\n-         Text             : Text_Buffer_Ptr;\n-         ALI              : ALI_Id;\n-         Data             : Compilation_Data;\n+         Compilation_OK : Boolean;\n+         Text           : Text_Buffer_Ptr;\n+         ALI            : ALI_Id;\n+         Data           : Compilation_Data;\n \n       begin\n          if Outstanding_Compiles = Max_Process\n            or else (Empty_Q\n-                    and then not Good_ALI_Present\n-                    and then Outstanding_Compiles > 0)\n+                     and then not Good_ALI_Present\n+                     and then Outstanding_Compiles > 0)\n          then\n             Await_Compile (Data, Compilation_OK);\n \n@@ -3536,26 +3541,28 @@ package body Make is\n \n                   Check_Object_Consistency :=\n                     Check_Object_Consistency\n-                    and Compilation_OK\n-                    and (Output_Is_Object or Do_Bind_Step);\n+                      and Compilation_OK\n+                      and (Output_Is_Object or Do_Bind_Step);\n \n-                  Text := Read_Library_Info_From_Full\n-                    (Data.Full_Lib_File, Data.Lib_File_Attr'Access);\n+                  Text :=\n+                    Read_Library_Info_From_Full\n+                      (Data.Full_Lib_File, Data.Lib_File_Attr'Access);\n \n                   --  Restore Check_Object_Consistency to its initial value\n \n                   Check_Object_Consistency := Saved_Object_Consistency;\n                end;\n \n-               --  If an ALI file was generated by this compilation, scan\n-               --  the ALI file and record it.\n+               --  If an ALI file was generated by this compilation, scan the\n+               --  ALI file and record it.\n \n                --  If the scan fails, a previous ali file is inconsistent with\n                --  the unit just compiled.\n \n                if Text /= null then\n-                  ALI := Scan_ALI\n-                    (Data.Lib_File, Text, Ignore_ED => False, Err => True);\n+                  ALI :=\n+                    Scan_ALI\n+                      (Data.Lib_File, Text, Ignore_ED => False, Err => True);\n \n                   if ALI = No_ALI_Id then\n \n@@ -3616,11 +3623,11 @@ package body Make is\n       end if;\n \n       --  The following two flags affect the behavior of ALI.Set_Source_Table.\n-      --  We set Check_Source_Files to True to ensure that source file\n-      --  time stamps are checked, and we set All_Sources to False to\n-      --  avoid checking the presence of the source files listed in the\n-      --  source dependency section of an ali file (which would be a mistake\n-      --  since the ali file may be obsolete).\n+      --  We set Check_Source_Files to True to ensure that source file time\n+      --  stamps are checked, and we set All_Sources to False to avoid checking\n+      --  the presence of the source files listed in the source dependency\n+      --  section of an ali file (which would be a mistake since the ali file\n+      --  may be obsolete).\n \n       Check_Source_Files := True;\n       All_Sources        := False;\n@@ -4357,8 +4364,7 @@ package body Make is\n                      --  Otherwise, if there is a spec, put it in the mapping\n \n                   elsif Unit.File_Names (Spec) /= No_Source\n-                    and then Unit.File_Names (Spec).Project /=\n-                    No_Project\n+                    and then Unit.File_Names (Spec).Project /= No_Project\n                   then\n                      Get_Name_String (Unit.Name);\n                      Add_Str_To_Name_Buffer (\"%s\");\n@@ -4576,9 +4582,9 @@ package body Make is\n             end if;\n \n          --  If no mains have been specified on the command line, and we are\n-         --  using a project file, we either find the main(s) in attribute\n-         --  Main of the main project, or we put all the sources of the project\n-         --  file as mains.\n+         --  using a project file, we either find the main(s) in attribute Main\n+         --  of the main project, or we put all the sources of the project file\n+         --  as mains.\n \n          else\n             if Main_Index /= 0 then\n@@ -4626,19 +4632,18 @@ package body Make is\n                   end if;\n \n                else\n-                  --  The attribute Main is not an empty list.\n-                  --  Put all the main subprograms in the list as if they were\n-                  --  specified on the command line. However, if attribute\n-                  --  Languages includes a language other than Ada, only\n-                  --  include the Ada mains; if there is no Ada main, compile\n-                  --  all the sources of the project.\n+                  --  The attribute Main is not an empty list. Put all the main\n+                  --  subprograms in the list as if they were specified on the\n+                  --  command line. However, if attribute Languages includes a\n+                  --  language other than Ada, only include the Ada mains; if\n+                  --  there is no Ada main, compile all sources of the project.\n \n                   declare\n                      Languages : constant Variable_Value :=\n                                    Prj.Util.Value_Of\n-                                    (Name_Languages,\n-                                     Main_Project.Decl.Attributes,\n-                                     Project_Tree);\n+                                     (Name_Languages,\n+                                      Main_Project.Decl.Attributes,\n+                                      Project_Tree);\n \n                      Current : String_List_Id;\n                      Element : String_Element;\n@@ -4652,7 +4657,6 @@ package body Make is\n \n                      if not Languages.Default then\n                         Current := Languages.Values;\n-\n                         Look_For_Foreign :\n                         while Current /= Nil_String loop\n                            Element := Project_Tree.String_Elements.\n@@ -7698,6 +7702,7 @@ package body Make is\n \n             declare\n                Norm : constant String := Normalize_Pathname (Argv);\n+\n             begin\n                if Norm (Norm'Last) = Directory_Separator then\n                   Object_Directory_Path := new String'(Norm);"}, {"sha": "e9891219328bacae09d22d29b39d281a3bebb208", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=d56e7acd6325f983f5a675c187bc465ea628502e", "patch": "@@ -329,8 +329,8 @@ package body Makeutl is\n          end if;\n \n          return Normalize_Pathname\n-           (Exec (Exec'First .. Path_Last - 4),\n-            Resolve_Links => Opt.Follow_Links_For_Dirs)\n+                  (Exec (Exec'First .. Path_Last - 4),\n+                   Resolve_Links => Opt.Follow_Links_For_Dirs)\n            & Directory_Separator;\n       end Get_Install_Dir;\n "}, {"sha": "ae04481ff20538fe126dd0b7da818ed48df37709", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 39, "deletions": 25, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=d56e7acd6325f983f5a675c187bc465ea628502e", "patch": "@@ -80,8 +80,8 @@ package body Osint is\n    --  Appends Suffix to Name and returns the new name\n \n    function OS_Time_To_GNAT_Time (T : OS_Time) return Time_Stamp_Type;\n-   --  Convert OS format time to GNAT format time stamp.\n-   --  Returns Empty_Time_Stamp if T is Invalid_Time\n+   --  Convert OS format time to GNAT format time stamp. If T is Invalid_Time,\n+   --  then returns Empty_Time_Stamp.\n \n    function Executable_Prefix return String_Ptr;\n    --  Returns the name of the root directory where the executable is stored.\n@@ -91,8 +91,8 @@ package body Osint is\n    --  \"/foo/bar/\". Return \"\" if location is not recognized as described above.\n \n    function Update_Path (Path : String_Ptr) return String_Ptr;\n-   --  Update the specified path to replace the prefix with the location\n-   --  where GNAT is installed. See the file prefix.c in GCC for details.\n+   --  Update the specified path to replace the prefix with the location where\n+   --  GNAT is installed. See the file prefix.c in GCC for details.\n \n    procedure Locate_File\n      (N     : File_Name_Type;\n@@ -106,9 +106,11 @@ package body Osint is\n    --  if T = Source, Dir is an index into the Src_Search_Directories table.\n    --  Returns the File_Name_Type of the full file name if file found, or\n    --  No_File if not found.\n+   --\n    --  On exit, Found is set to the file that was found, and Attr to a cache of\n    --  its attributes (at least those that have been computed so far). Reusing\n    --  the cache will save some system calls.\n+   --\n    --  Attr is always reset in this call to Unknown_Attributes, even in case of\n    --  failure\n \n@@ -239,8 +241,9 @@ package body Osint is\n       File : File_Name_Type;\n       Attr : aliased File_Attributes;\n    end record;\n+\n    No_File_Info_Cache : constant File_Info_Cache :=\n-     (No_File, Unknown_Attributes);\n+                          (No_File, Unknown_Attributes);\n \n    package File_Name_Hash_Table is new GNAT.HTable.Simple_HTable (\n      Header_Num => File_Hash_Num,\n@@ -584,13 +587,13 @@ package body Osint is\n \n       declare\n          Norm : String_Ptr := Normalize_Directory_Name (Dir);\n-      begin\n \n+      begin\n          --  Do nothing if the directory is already in the list. This saves\n          --  system calls and avoid unneeded work\n \n          for D in Lib_Search_Directories.First ..\n-           Lib_Search_Directories.Last\n+                  Lib_Search_Directories.Last\n          loop\n             if Lib_Search_Directories.Table (D).all = Norm.all then\n                Free (Norm);\n@@ -1002,10 +1005,13 @@ package body Osint is\n    -----------------\n \n    function File_Length\n-     (Name : C_File_Name; Attr : access File_Attributes) return Long_Integer\n+     (Name : C_File_Name;\n+      Attr : access File_Attributes) return Long_Integer\n    is\n       function Internal\n-        (F : Integer; N : C_File_Name; A : System.Address) return Long_Integer;\n+        (F : Integer;\n+         N : C_File_Name;\n+         A : System.Address) return Long_Integer;\n       pragma Import (C, Internal, \"__gnat_file_length_attr\");\n    begin\n       return Internal (-1, Name, Attr.all'Address);\n@@ -1016,7 +1022,8 @@ package body Osint is\n    ---------------------\n \n    function File_Time_Stamp\n-     (Name : C_File_Name; Attr : access File_Attributes) return OS_Time\n+     (Name : C_File_Name;\n+      Attr : access File_Attributes) return OS_Time\n    is\n       function Internal (N : C_File_Name; A : System.Address) return OS_Time;\n       pragma Import (C, Internal, \"__gnat_file_time_name_attr\");\n@@ -1036,13 +1043,13 @@ package body Osint is\n \n       Get_Name_String (Name);\n \n-      --  File_Time_Stamp will always return Invalid_Time if the file does not\n-      --  exist, and OS_Time_To_GNAT_Time will convert this value to\n-      --  Empty_Time_Stamp. Therefore we do not need to first test whether the\n-      --  file actually exists, which saves a system call.\n+      --  File_Time_Stamp will always return Invalid_Time if the file does\n+      --  not exist, and OS_Time_To_GNAT_Time will convert this value to\n+      --  Empty_Time_Stamp. Therefore we do not need to first test whether\n+      --  the file actually exists, which saves a system call.\n \n       return OS_Time_To_GNAT_Time\n-        (File_Time_Stamp (Name_Buffer (1 .. Name_Len)));\n+               (File_Time_Stamp (Name_Buffer (1 .. Name_Len)));\n    end File_Stamp;\n \n    function File_Stamp (Name : Path_Name_Type) return Time_Stamp_Type is\n@@ -1084,9 +1091,9 @@ package body Osint is\n \n       begin\n          --  If we are looking for a config file, look only in the current\n-         --  directory, i.e. return input argument unchanged. Also look\n-         --  only in the current directory if we are looking for a .dg\n-         --  file (happens in -gnatD mode).\n+         --  directory, i.e. return input argument unchanged. Also look only in\n+         --  the curren directory if we are looking for a .dg file (happens in\n+         --  -gnatD mode).\n \n          if T = Config\n            or else (Debug_Generated_Code\n@@ -2392,10 +2399,13 @@ package body Osint is\n \n       if Opt.Check_Object_Consistency then\n          --  On most systems, this does not result in an extra system call\n-         Current_Full_Lib_Stamp := OS_Time_To_GNAT_Time\n-           (File_Time_Stamp (Name_Buffer'Address, Lib_File_Attr));\n+\n+         Current_Full_Lib_Stamp :=\n+           OS_Time_To_GNAT_Time\n+             (File_Time_Stamp (Name_Buffer'Address, Lib_File_Attr));\n \n          --  ??? One system call here\n+\n          Current_Full_Obj_Stamp := File_Stamp (Current_Full_Obj_Name);\n \n          if Current_Full_Obj_Stamp (1) = ' ' then\n@@ -2710,6 +2720,7 @@ package body Osint is\n    is\n       File : File_Name_Type;\n       Attr : aliased File_Attributes;\n+\n    begin\n       if not File_Cache_Enabled then\n          Find_File (N, T, File, Attr'Access);\n@@ -2722,8 +2733,9 @@ package body Osint is\n       else\n          Get_Name_String (File);\n          Name_Buffer (Name_Len + 1) := ASCII.NUL;\n-         return OS_Time_To_GNAT_Time\n-           (File_Time_Stamp (Name_Buffer'Address, Attr'Access));\n+         return\n+           OS_Time_To_GNAT_Time\n+             (File_Time_Stamp (Name_Buffer'Address, Attr'Access));\n       end if;\n    end Smart_File_Stamp;\n \n@@ -2757,8 +2769,10 @@ package body Osint is\n    begin\n       if not File_Cache_Enabled then\n          Find_File (N, T, Info.File, Info.Attr'Access);\n+\n       else\n          Info := File_Name_Hash_Table.Get (N);\n+\n          if Info.File = No_File then\n             Find_File (N, T, Info.File, Info.Attr'Access);\n             File_Name_Hash_Table.Set (N, Info);\n@@ -2801,8 +2815,7 @@ package body Osint is\n \n          if Is_Directory_Separator (Name_Buffer (J)) then\n \n-            --  Return the part of Name that follows this last directory\n-            --  separator.\n+            --  Return part of Name that follows this last directory separator\n \n             Name_Buffer (1 .. Name_Len - J) := Name_Buffer (J + 1 .. Name_Len);\n             Name_Len := Name_Len - J;\n@@ -2849,7 +2862,7 @@ package body Osint is\n          Prefix_Flag : Integer) return Address;\n       pragma Import (C, To_Canonical_Dir_Spec, \"__gnat_to_canonical_dir_spec\");\n \n-      C_Host_Dir      : String (1 .. Host_Dir'Length + 1);\n+      C_Host_Dir         : String (1 .. Host_Dir'Length + 1);\n       Canonical_Dir_Addr : Address;\n       Canonical_Dir_Len  : Integer;\n \n@@ -2862,6 +2875,7 @@ package body Osint is\n       else\n          Canonical_Dir_Addr := To_Canonical_Dir_Spec (C_Host_Dir'Address, 0);\n       end if;\n+\n       Canonical_Dir_Len := C_String_Length (Canonical_Dir_Addr);\n \n       if Canonical_Dir_Len = 0 then"}, {"sha": "2fa256107ad6766c673272ab089d22d02934ce3e", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 35, "deletions": 25, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=d56e7acd6325f983f5a675c187bc465ea628502e", "patch": "@@ -30,8 +30,8 @@ with Namet; use Namet;\n with Types; use Types;\n \n with System.Storage_Elements;\n-with System.OS_Lib; use System.OS_Lib;\n-with System;        use System;\n+with System.OS_Lib;           use System.OS_Lib;\n+with System;                  use System;\n \n pragma Elaborate_All (System.OS_Lib);\n --  For the call to function Get_Target_Object_Suffix in the private part\n@@ -234,10 +234,12 @@ package Osint is\n    ---------------------\n    -- File attributes --\n    ---------------------\n+\n    --  The following subprograms offer services similar to those found in\n    --  System.OS_Lib, but with the ability to extra multiple information from\n    --  a single system call, depending on the system. This can result in fewer\n    --  system calls when reused.\n+\n    --  In all these subprograms, the requested value is either read from the\n    --  File_Attributes parameter (resulting in no system call), or computed\n    --  from the disk and then cached in the File_Attributes parameter (possibly\n@@ -249,27 +251,35 @@ package Osint is\n    --  This must be initialized to Unknown_Attributes prior to the first call.\n \n    function Is_Directory\n-     (Name : C_File_Name; Attr : access File_Attributes) return Boolean;\n+     (Name : C_File_Name;\n+      Attr : access File_Attributes) return Boolean;\n    function Is_Regular_File\n-     (Name : C_File_Name; Attr : access File_Attributes) return Boolean;\n+     (Name : C_File_Name;\n+      Attr : access File_Attributes) return Boolean;\n    function Is_Symbolic_Link\n-     (Name : C_File_Name; Attr : access File_Attributes) return Boolean;\n+     (Name : C_File_Name;\n+      Attr : access File_Attributes) return Boolean;\n    --  Return the type of the file,\n \n    function File_Length\n-     (Name : C_File_Name; Attr : access File_Attributes) return Long_Integer;\n+     (Name : C_File_Name;\n+      Attr : access File_Attributes) return Long_Integer;\n    --  Return the length (number of bytes) of the file\n \n    function File_Time_Stamp\n-     (Name : C_File_Name; Attr : access File_Attributes) return OS_Time;\n+     (Name : C_File_Name;\n+      Attr : access File_Attributes) return OS_Time;\n    --  Return the time stamp of the file\n \n    function Is_Readable_File\n-     (Name : C_File_Name; Attr : access File_Attributes) return Boolean;\n+     (Name : C_File_Name;\n+      Attr : access File_Attributes) return Boolean;\n    function Is_Executable_File\n-     (Name : C_File_Name; Attr : access File_Attributes) return Boolean;\n+     (Name : C_File_Name;\n+      Attr : access File_Attributes) return Boolean;\n    function Is_Writable_File\n-     (Name : C_File_Name; Attr : access File_Attributes) return Boolean;\n+     (Name : C_File_Name;\n+      Attr : access File_Attributes) return Boolean;\n    --  Return the access rights for the file\n \n    -------------------------\n@@ -436,6 +446,7 @@ package Osint is\n    --  The source file directory lookup penalty is incurred every single time\n    --  the routines are called unless you have previously called\n    --  Source_File_Data (Cache => True). See below.\n+   --\n    --  The procedural version also returns some file attributes for the ALI\n    --  file (to save on system calls later on).\n \n@@ -468,11 +479,11 @@ package Osint is\n    -- Representation of Library Information --\n    -------------------------------------------\n \n-   --  Associated with each compiled source file is library information,\n-   --  a string of bytes whose exact format is described in the body of\n-   --  Lib.Writ. Compiling a source file generates this library information\n-   --  for the compiled unit, and access the library information for units\n-   --  that were compiled previously on which the unit being compiled depends.\n+   --  Associated with each compiled source file is library information, a\n+   --  string of bytes whose exact format is described in the body of Lib.Writ.\n+   --  Compiling a source file generates this library information for the\n+   --  compiled unit, and access the library information for units that were\n+   --  compiled previously on which the unit being compiled depends.\n \n    --  How this information is stored is up to the implementation of this\n    --  package. At the interface level, this information is simply associated\n@@ -524,15 +535,14 @@ package Osint is\n    --  include any directory information. The implementation is responsible\n    --  for searching for the file in appropriate directories.\n    --\n-   --  If Opt.Check_Object_Consistency is set to True then this routine\n-   --  checks whether the object file corresponding to the Lib_File is\n-   --  consistent with it. The object file is inconsistent if the object\n-   --  does not exist or if it has an older time stamp than Lib_File.\n-   --  This check is not performed when the Lib_File is \"locked\" (i.e.\n-   --  read/only) because in this case the object file may be buried\n-   --  in a library. In case of inconsistencies Read_Library_Info\n-   --  behaves as if it did not find Lib_File (namely if Fatal_Err is\n-   --  False, null is returned).\n+   --  If Opt.Check_Object_Consistency is set to True then this routine checks\n+   --  whether the object file corresponding to the Lib_File is consistent with\n+   --  it. The object file is inconsistent if the object does not exist or if\n+   --  it has an older time stamp than Lib_File. This check is not performed\n+   --  when the Lib_File is \"locked\" (i.e. read/only) because in this case the\n+   --  object file may be buried in a library. In case of inconsistencies\n+   --  Read_Library_Info behaves as if it did not find Lib_File (namely if\n+   --  Fatal_Err is False, null is returned).\n \n    function Read_Library_Info_From_Full\n      (Full_Lib_File : File_Name_Type;\n@@ -726,7 +736,7 @@ private\n \n    type File_Attributes is\n      array (1 .. File_Attributes_Size)\n-     of System.Storage_Elements.Storage_Element;\n+       of System.Storage_Elements.Storage_Element;\n    for File_Attributes'Alignment use Standard'Maximum_Alignment;\n \n    Unknown_Attributes : constant File_Attributes := (others => 0);"}, {"sha": "fe6216f82fafcb7bdfc1134026f2aec8684bb807", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=d56e7acd6325f983f5a675c187bc465ea628502e", "patch": "@@ -213,9 +213,9 @@ package body Prj.Ext is\n \n             declare\n                New_Dir : constant String :=\n-                 Normalize_Pathname\n-                   (Name_Buffer (First .. Last),\n-                    Resolve_Links => Opt.Follow_Links_For_Dirs);\n+                           Normalize_Pathname\n+                             (Name_Buffer (First .. Last),\n+                              Resolve_Links => Opt.Follow_Links_For_Dirs);\n \n             begin\n                --  If the absolute path was resolved and is different from"}, {"sha": "da260f35c4ac89a080280b9d2a427e0976512cac", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56e7acd6325f983f5a675c187bc465ea628502e/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=d56e7acd6325f983f5a675c187bc465ea628502e", "patch": "@@ -239,8 +239,9 @@ package body Sem_Case is\n                     \" alternatives must cover base type\", Expr, Expr);\n \n             else\n-               Error_Msg_N (\"subtype of expression is not static,\" &\n-                \" alternatives must cover base type!\", Expr);\n+               Error_Msg_N\n+                 (\"subtype of expression is not static,\"\n+                  & \" alternatives must cover base type!\", Expr);\n             end if;\n \n          --  Otherwise the expression is not static, even if the bounds of the\n@@ -249,8 +250,8 @@ package body Sem_Case is\n \n          elsif not Is_Entity_Name (Expr) then\n             Error_Msg_N\n-              (\"subtype of expression is not static, \" &\n-                \"alternatives must cover base type!\", Expr);\n+              (\"subtype of expression is not static, \"\n+               & \"alternatives must cover base type!\", Expr);\n          end if;\n       end Explain_Non_Static_Bound;\n "}]}