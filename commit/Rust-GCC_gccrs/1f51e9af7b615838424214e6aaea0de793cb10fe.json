{"sha": "1f51e9af7b615838424214e6aaea0de793cb10fe", "node_id": "C_kwDOANBUbNoAKDFmNTFlOWFmN2I2MTU4Mzg0MjQyMTRlNmFhZWEwZGU3OTNjYjEwZmU", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-05T15:38:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-05T15:47:30Z"}, "message": "libstdc++: Ensure std::span and std::string_view are trivially copyable (P2251R1)\n\nThe recently approved P2251R1 paper requires these types to be trivially\ncopyable. They always have been in libstdc++, but add tests to check it.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/21_strings/basic_string_view/requirements/trivially_copyable.cc:\n\tNew test.\n\t* testsuite/23_containers/span/trivially_copyable.cc: New test.", "tree": {"sha": "50c7b34732f51685137eb20f9f060f93f52dcf15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50c7b34732f51685137eb20f9f060f93f52dcf15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f51e9af7b615838424214e6aaea0de793cb10fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f51e9af7b615838424214e6aaea0de793cb10fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f51e9af7b615838424214e6aaea0de793cb10fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f51e9af7b615838424214e6aaea0de793cb10fe/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "370374c4d91d83fb69d4b70dd4e48103114a903d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370374c4d91d83fb69d4b70dd4e48103114a903d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/370374c4d91d83fb69d4b70dd4e48103114a903d"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "3f2589c61d8b5041a7fa6d6c3062bce6a374548f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/requirements/trivially_copyable.cc", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f51e9af7b615838424214e6aaea0de793cb10fe/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Frequirements%2Ftrivially_copyable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f51e9af7b615838424214e6aaea0de793cb10fe/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Frequirements%2Ftrivially_copyable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Frequirements%2Ftrivially_copyable.cc?ref=1f51e9af7b615838424214e6aaea0de793cb10fe", "patch": "@@ -0,0 +1,11 @@\n+// { dg-do compile { target c++17 } }\n+\n+// http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2251r1.pdf\n+\n+#include <string_view>\n+\n+static_assert( std::is_trivially_copyable_v<std::string_view> );\n+static_assert( std::is_trivially_copyable_v<std::wstring_view> );\n+\n+struct traits : std::char_traits<char> { };\n+static_assert( std::is_trivially_copyable_v<std::basic_string_view<char, traits>> );"}, {"sha": "e37482935550e5316a5cd07e729db795973e43b1", "filename": "libstdc++-v3/testsuite/23_containers/span/trivially_copyable.cc", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f51e9af7b615838424214e6aaea0de793cb10fe/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ftrivially_copyable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f51e9af7b615838424214e6aaea0de793cb10fe/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ftrivially_copyable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ftrivially_copyable.cc?ref=1f51e9af7b615838424214e6aaea0de793cb10fe", "patch": "@@ -0,0 +1,13 @@\n+// { dg-options \"-std=gnu++20\" }\n+// { dg-do compile { target c++20 } }\n+\n+// http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2251r1.pdf\n+\n+#include <span>\n+\n+static_assert( std::is_trivially_copyable_v<std::span<int>> );\n+static_assert( std::is_trivially_copyable_v<std::span<int, 42>> );\n+\n+struct NonTrivial { NonTrivial(); NonTrivial(const NonTrivial&); };\n+static_assert( std::is_trivially_copyable_v<std::span<NonTrivial>> );\n+static_assert( std::is_trivially_copyable_v<std::span<NonTrivial, 99>> );"}]}