{"sha": "4ac3d9940723c5fbfadfec01ce011f0d26ca7d82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFjM2Q5OTQwNzIzYzVmYmZhZGZlYzAxY2UwMTFmMGQyNmNhN2Q4Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-07-13T11:06:24Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-07-13T11:06:24Z"}, "message": "tree.h (TYPE_NEEDS_CONSTRUCTING): New macro.\n\nWed Jul 13 03:30:36 1994  Jason Merrill  (jason@deneb.cygnus.com)\n\n        * tree.h (TYPE_NEEDS_CONSTRUCTING): New macro.\n        (tree_type): Add needs_constructing_flag.\n        * function.c (assign_parms): If TYPE_NEEDS_CONSTRUCTING, pass by\n        invisible reference.\n        * calls.c (expand_call): Ditto.\n\nFrom-SVN: r7758", "tree": {"sha": "19118b383753d9b6a0648d09b2be1639de926e11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19118b383753d9b6a0648d09b2be1639de926e11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ac3d9940723c5fbfadfec01ce011f0d26ca7d82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac3d9940723c5fbfadfec01ce011f0d26ca7d82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac3d9940723c5fbfadfec01ce011f0d26ca7d82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac3d9940723c5fbfadfec01ce011f0d26ca7d82/comments", "author": null, "committer": null, "parents": [{"sha": "ccccb5276489b12554c8fbcaca49c0d988b3e8f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccccb5276489b12554c8fbcaca49c0d988b3e8f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccccb5276489b12554c8fbcaca49c0d988b3e8f8"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "f0350795bb1042b1ad82204a32ce316a8aa9c45a", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac3d9940723c5fbfadfec01ce011f0d26ca7d82/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac3d9940723c5fbfadfec01ce011f0d26ca7d82/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=4ac3d9940723c5fbfadfec01ce011f0d26ca7d82", "patch": "@@ -996,6 +996,7 @@ expand_call (exp, target, ignore)\n       /* See if this argument should be passed by invisible reference.  */\n       if ((TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST\n \t   && contains_placeholder_p (TYPE_SIZE (type)))\n+\t  || TYPE_NEEDS_CONSTRUCTING (type)\n #ifdef FUNCTION_ARG_PASS_BY_REFERENCE\n \t  || FUNCTION_ARG_PASS_BY_REFERENCE (args_so_far, TYPE_MODE (type),\n \t\t\t\t\t     type, argpos < n_named_args)"}, {"sha": "9f3339613c79ca993307b2bd394f3cf55cefe47f", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac3d9940723c5fbfadfec01ce011f0d26ca7d82/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac3d9940723c5fbfadfec01ce011f0d26ca7d82/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=4ac3d9940723c5fbfadfec01ce011f0d26ca7d82", "patch": "@@ -3157,6 +3157,7 @@ assign_parms (fndecl, second_time)\n \n       if ((TREE_CODE (TYPE_SIZE (passed_type)) != INTEGER_CST\n \t   && contains_placeholder_p (TYPE_SIZE (passed_type)))\n+\t  || TYPE_NEEDS_CONSTRUCTING (passed_type)\n #ifdef FUNCTION_ARG_PASS_BY_REFERENCE\n \t  || FUNCTION_ARG_PASS_BY_REFERENCE (args_so_far, passed_mode,\n \t\t\t\t\t      passed_type, ! last_named)"}, {"sha": "dbe5ff9cf5cadd8d1c1dc6a9a90238a5d182e0fc", "filename": "gcc/tree.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac3d9940723c5fbfadfec01ce011f0d26ca7d82/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac3d9940723c5fbfadfec01ce011f0d26ca7d82/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=4ac3d9940723c5fbfadfec01ce011f0d26ca7d82", "patch": "@@ -615,6 +615,10 @@ struct tree_block\n    If set in a SET_TYPE, indicates a bitstring type. */\n #define TYPE_STRING_FLAG(NODE) ((NODE)->type.string_flag)\n \n+/* Indicates that objects of this type must be initialized by calling a\n+   function when they are created.  */\n+#define TYPE_NEEDS_CONSTRUCTING(NODE) ((NODE)->type.needs_constructing_flag)\n+\n struct tree_type\n {\n   char common[sizeof (struct tree_common)];\n@@ -632,14 +636,15 @@ struct tree_type\n \n   unsigned string_flag : 1;\n   unsigned no_force_blk_flag : 1;\n+  unsigned needs_constructing_flag : 1;\n   unsigned lang_flag_0 : 1;\n   unsigned lang_flag_1 : 1;\n   unsigned lang_flag_2 : 1;\n   unsigned lang_flag_3 : 1;\n   unsigned lang_flag_4 : 1;\n   unsigned lang_flag_5 : 1;\n   unsigned lang_flag_6 : 1;\n-  /* room for 7 more bits */\n+  /* room for 6 more bits */\n \n   unsigned int align;\n   union tree_node *pointer_to;"}]}