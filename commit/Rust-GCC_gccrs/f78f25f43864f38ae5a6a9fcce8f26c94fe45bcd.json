{"sha": "f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc4ZjI1ZjQzODY0ZjM4YWU1YTZhOWZjY2U4ZjI2Yzk0ZmU0NWJjZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-04T14:59:37Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-04T14:59:37Z"}, "message": "libstdc++: Add feature test macro for heterogeneous lookup in unordered containers\n\nAlso update the C++20 status docs.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* doc/xml/manual/status_cxx2020.xml:\n\t* doc/html/*: Regenerate.\n\t* include/bits/hashtable.h (__cpp_lib_generic_unordered_lookup):\n\tDefine.\n\t* include/std/version (__cpp_lib_generic_unordered_lookup):\n\tDefine.\n\t* testsuite/23_containers/unordered_map/operations/1.cc: Check\n\tfeature test macro.\n\t* testsuite/23_containers/unordered_set/operations/1.cc:\n\tLikewise.", "tree": {"sha": "7546d834d06dc0567bd6ce1b8119ebd890999895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7546d834d06dc0567bd6ce1b8119ebd890999895"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad3f0ad4bafe377072a53ded468fd9948e659f46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad3f0ad4bafe377072a53ded468fd9948e659f46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad3f0ad4bafe377072a53ded468fd9948e659f46"}], "stats": {"total": 50, "additions": 39, "deletions": 11}, "files": [{"sha": "75ac9e7d9b08777031602b158a4c59d4b4a379f6", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd", "patch": "@@ -1364,10 +1364,10 @@\n       </td><td align=\"center\"> 10.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_jthread &gt;= 201907L</code> </td></tr><tr><td align=\"left\"> Rename <code class=\"code\">condition_variable_any</code> interruptible wait methods </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1869r1.html\" target=\"_top\">\n         P1869R1 </a>\n-      </td><td align=\"center\"> 10.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_jthread &gt;= 201911L</code> </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Atomic waiting and notifying, std::semaphore, std::latch and std::barrier </td><td align=\"left\">\n+      </td><td align=\"center\"> 10.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_jthread &gt;= 201911L</code> </td></tr><tr><td align=\"left\"> Atomic waiting and notifying, std::semaphore, std::latch and std::barrier </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1135r6.html\" target=\"_top\">\n         P1135R6 </a>\n-      </td><td align=\"center\"> </td><td align=\"left\">\n+      </td><td align=\"center\"> 11.1 </td><td align=\"left\">\n         <div class=\"informaltable\"><table class=\"informaltable\" border=\"0\"><colgroup><col /></colgroup><tbody><tr><td> <code class=\"code\">__cpp_lib_atomic_lock_free_type_aliases &gt;= 201907L</code> </td></tr><tr><td> <code class=\"code\">__cpp_lib_atomic_flag_test &gt;= 201907L</code> </td></tr><tr><td> <code class=\"code\">__cpp_lib_atomic_wait &gt;= 201907L</code> </td></tr><tr><td> <code class=\"code\">__cpp_lib_semaphore &gt;= 201907L</code> </td></tr><tr><td> <code class=\"code\">__cpp_lib_latch &gt;= 201907L</code> </td></tr><tr><td> <code class=\"code\">__cpp_lib_barrier &gt;= 201907L</code> </td></tr></tbody></table></div>\n       </td></tr><tr><td align=\"left\"> Fixing Atomic Initialization </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0883r2.pdf\" target=\"_top\">\n@@ -1479,10 +1479,13 @@\n       </td><td align=\"center\"> 9.1 </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">  Comparing Unordered Containers </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0809r0.pdf\" target=\"_top\">\n         P0809R0 </a>\n-      </td><td align=\"center\"> </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">  Heterogeneous lookup for unordered containers </td><td align=\"left\">\n+      </td><td align=\"center\"> </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">  Heterogeneous lookup for unordered containers </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0919r3.html\" target=\"_top\">\n         P0919R3 </a>\n-      </td><td align=\"center\"> </td><td align=\"left\"> <code class=\"code\">__cpp_lib_generic_unordered_lookup &gt;= 201811</code> </td></tr><tr><td align=\"left\">  Adopt Consistent Container Erasure from Library Fundamentals 2 for C++20 </td><td align=\"left\">\n+      </td><td align=\"center\"> 11.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_generic_unordered_lookup &gt;= 201811</code> </td></tr><tr><td align=\"left\"> Refinement Proposal for P0919 </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1690r1.html\" target=\"_top\">\n+        P1690R1 </a>\n+      </td><td align=\"center\"> 11.1 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">  Adopt Consistent Container Erasure from Library Fundamentals 2 for C++20 </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1209r0.html\" target=\"_top\">\n         P1209R0 </a>\n       </td><td align=\"center\"> 9.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_erase_if &gt;= 201811L</code> </td></tr><tr><td align=\"left\">  Improving the Return Value of Erase-Like Algorithms </td><td align=\"left\">"}, {"sha": "ca12d8023f173e4c07ea05c20234f5d46f51dac2", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2020.xml", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml?ref=f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd", "patch": "@@ -429,13 +429,12 @@ or any notes about the implementation.\n     </row>\n \n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry> Atomic waiting and notifying, std::semaphore, std::latch and std::barrier </entry>\n       <entry>\n         <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1135r6.html\">\n         P1135R6 </link>\n       </entry>\n-      <entry align=\"center\"> </entry>\n+      <entry align=\"center\"> 11.1 </entry>\n       <entry>\n         <informaltable colsep=\"0\" rowsep=\"0\" rowheader=\"norowheader\" frame=\"none\"><tgroup cols=\"1\"><tbody>\n         <row><entry> <code>__cpp_lib_atomic_lock_free_type_aliases &gt;= 201907L</code> </entry></row>\n@@ -803,16 +802,25 @@ or any notes about the implementation.\n     </row>\n \n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>  Heterogeneous lookup for unordered containers </entry>\n       <entry>\n         <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0919r3.html\">\n         P0919R3 </link>\n       </entry>\n-      <entry align=\"center\"> </entry>\n+      <entry align=\"center\"> 11.1 </entry>\n       <entry> <code>__cpp_lib_generic_unordered_lookup &gt;= 201811</code> </entry>\n     </row>\n \n+    <row>\n+      <entry> Refinement Proposal for P0919 </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1690r1.html\">\n+        P1690R1 </link>\n+      </entry>\n+      <entry align=\"center\"> 11.1 </entry>\n+      <entry/>\n+    </row>\n+\n     <row>\n       <entry>  Adopt Consistent Container Erasure from Library Fundamentals 2 for C++20 </entry>\n       <entry>"}, {"sha": "dfc2a2a7800bef76cc4f33a46b19be99ca8e7583", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd", "patch": "@@ -735,7 +735,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       std::pair<const_iterator, const_iterator>\n       equal_range(const key_type& __k) const;\n \n-#if __cplusplus > 201702L\n+#if __cplusplus >= 202002L\n+#define __cpp_lib_generic_unordered_lookup 201811L\n+\n       template<typename _Kt,\n \t       typename = __has_is_transparent_t<_Hash, _Kt>,\n \t       typename = __has_is_transparent_t<_Equal, _Kt>>\n@@ -765,7 +767,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       typename = __has_is_transparent_t<_Equal, _Kt>>\n \tpair<const_iterator, const_iterator>\n \t_M_equal_range_tr(const _Kt& __k) const;\n-#endif\n+#endif // C++20\n \n     private:\n       // Bucket index computation helpers."}, {"sha": "8d0b2b95f348bcd180c5409541b7bddcf7430306", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd", "patch": "@@ -169,7 +169,7 @@\n #define __cpp_lib_variant 201606L\n #endif\n \n-#if __cplusplus > 201703L\n+#if __cplusplus >= 202002L\n // c++20\n #define __cpp_lib_atomic_flag_test 201907L\n #define __cpp_lib_atomic_float 201711L\n@@ -225,6 +225,7 @@\n #define __cpp_lib_constexpr_tuple 201811L\n #define __cpp_lib_constexpr_utility 201811L\n #define __cpp_lib_erase_if 202002L\n+#define __cpp_lib_generic_unordered_lookup 201811L\n #define __cpp_lib_interpolate 201902L\n #ifdef _GLIBCXX_HAS_GTHREADS\n # define __cpp_lib_jthread 201911L"}, {"sha": "f310a8a55eda03f89e36b344307ceb0bdb5d7111", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/operations/1.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Foperations%2F1.cc?ref=f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd", "patch": "@@ -18,6 +18,13 @@\n // { dg-do run { target c++20 } }\n \n #include <unordered_map>\n+\n+#ifndef __cpp_lib_generic_unordered_lookup\n+# error \"Feature-test macro for generic lookup missing in <unordered_map>\"\n+#elif __cpp_lib_generic_unordered_lookup < 201811L\n+# error \"Feature-test macro for generic lookup has wrong value in <unordered_map>\"\n+#endif\n+\n #include <testsuite_hooks.h>\n \n struct Equal"}, {"sha": "66826dc33ecda57aba267a075018d2604aa2faae", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/operations/1.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Foperations%2F1.cc?ref=f78f25f43864f38ae5a6a9fcce8f26c94fe45bcd", "patch": "@@ -18,6 +18,13 @@\n // { dg-do run { target c++20 } }\n \n #include <unordered_set>\n+\n+#ifndef __cpp_lib_generic_unordered_lookup\n+# error \"Feature-test macro for generic lookup missing in <unordered_set>\"\n+#elif __cpp_lib_generic_unordered_lookup < 201811L\n+# error \"Feature-test macro for generic lookup has wrong value in <unordered_set>\"\n+#endif\n+\n #include <testsuite_hooks.h>\n \n struct Equal"}]}