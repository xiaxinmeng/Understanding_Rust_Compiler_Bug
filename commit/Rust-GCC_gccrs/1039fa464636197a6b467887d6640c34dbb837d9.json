{"sha": "1039fa464636197a6b467887d6640c34dbb837d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAzOWZhNDY0NjM2MTk3YTZiNDY3ODg3ZDY2NDBjMzRkYmI4MzdkOQ==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-09-18T10:43:20Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-09-18T10:43:20Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r2152", "tree": {"sha": "0cfd106b4f7c076a7cb808c452a05a6ebebb25d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cfd106b4f7c076a7cb808c452a05a6ebebb25d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1039fa464636197a6b467887d6640c34dbb837d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1039fa464636197a6b467887d6640c34dbb837d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1039fa464636197a6b467887d6640c34dbb837d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1039fa464636197a6b467887d6640c34dbb837d9/comments", "author": null, "committer": null, "parents": [{"sha": "454e03485bd33d7b1b15d0db4506dcad016eeca7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/454e03485bd33d7b1b15d0db4506dcad016eeca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/454e03485bd33d7b1b15d0db4506dcad016eeca7"}], "stats": {"total": 62, "additions": 50, "deletions": 12}, "files": [{"sha": "923748fc103c6f8c8f012e6dd474f09f87205bdf", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 50, "deletions": 12, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1039fa464636197a6b467887d6640c34dbb837d9/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1039fa464636197a6b467887d6640c34dbb837d9/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=1039fa464636197a6b467887d6640c34dbb837d9", "patch": "@@ -83,13 +83,16 @@ enum m88k_instruction {\n \n extern char *m88k_pound_sign;\n extern char *m88k_short_data;\n+extern char *m88k_version;\n+extern char m88k_volatile_code;\n \n extern int m88k_gp_threshold;\n extern int m88k_prologue_done;\n extern int m88k_function_number;\n extern int m88k_fp_offset;\n extern int m88k_stack_size;\n extern int m88k_case_index;\n+extern int m88k_version_0300;\n \n extern struct rtx_def *m88k_compare_reg;\n extern struct rtx_def *m88k_compare_op0;\n@@ -206,9 +209,9 @@ extern char * reg_names[];\n /* Print subsidiary information on the compiler version in use.\n    Redefined in m88kv4.h, and m88kluna.h.  */\n #define VERSION_INFO1\t\"88open OCS/BCS, \"\n-#define VERSION_INFO2\t\"09/01/92\"\n+#define VERSION_INFO2\t\"09/18/92\"\n #define VERSION_STRING\tversion_string\n-#define\tTM_SCCS_ID\t\"@(#)m88k.h\t2.2.7.7 09/01/92 17:32:13\"\n+#define\tTM_SCCS_ID\t\"@(#)m88k.h\t2.2.12.2 09/18/92 06:21:09\"\n \n /* Run-time compilation parameters selecting different hardware subsets.  */\n \n@@ -223,7 +226,6 @@ extern char * reg_names[];\n #define MASK_OCS_DEBUG_INFO\t0x00000004 /* Emit .tdesc info */\n #define MASK_OCS_FRAME_POSITION\t0x00000008 /* Debug frame = CFA, not r30 */\n #define MASK_SVR4\t\t0x00000010 /* Target is AT&T System V.4 */\n-#define MASK_VERSION_0300\t0x00000020 /* Use version 03.00 syntax */\n #define MASK_NO_UNDERSCORES\t0x00000040 /* Don't emit a leading `_' */\n #define MASK_BIG_PIC\t\t0x00000080 /* PIC with large got-rel's -fPIC */\n #define MASK_TRAP_LARGE_SHIFT\t0x00000100 /* Trap if shift not <= 31 */\n@@ -233,10 +235,13 @@ extern char * reg_names[];\n #define MASK_IDENTIFY_REVISION\t0x00001000 /* Emit ident, with GCC rev */\n #define MASK_WARN_PASS_STRUCT\t0x00002000 /* Warn about passed structs */\n #define MASK_OPTIMIZE_ARG_AREA\t0x00004000 /* Save stack space */\n+#define MASK_SERIALIZE_VOLATILE 0x00008000 /* Serialize volatile refs */\n+#define MASK_NO_SERIALIZE_VOLATILE 0x00010000 /* Don't serialize */\n \n #define MASK_88000 (MASK_88100 | MASK_88110)\n #define MASK_EITHER_LARGE_SHIFT\t(MASK_TRAP_LARGE_SHIFT | \\\n \t\t\t\t MASK_HANDLE_LARGE_SHIFT)\n+#define MASK_SERIALIZE (MASK_SERIALIZE_VOLATILE | MASK_NO_SERIALIZE_VOLATILE)\n \n #define TARGET_88100   \t\t ((target_flags & MASK_88000) == MASK_88100)\n #define TARGET_88110\t\t ((target_flags & MASK_88000) == MASK_88110)\n@@ -245,7 +250,6 @@ extern char * reg_names[];\n #define TARGET_OCS_DEBUG_INFO\t  (target_flags & MASK_OCS_DEBUG_INFO)\n #define TARGET_OCS_FRAME_POSITION (target_flags & MASK_OCS_FRAME_POSITION)\n #define TARGET_SVR4\t\t  (target_flags & MASK_SVR4)\n-#define TARGET_VERSION_0300\t  (target_flags & MASK_VERSION_0300)\n #define TARGET_NO_UNDERSCORES\t  (target_flags & MASK_NO_UNDERSCORES)\n #define TARGET_BIG_PIC\t\t  (target_flags & MASK_BIG_PIC)\n #define TARGET_TRAP_LARGE_SHIFT   (target_flags & MASK_TRAP_LARGE_SHIFT)\n@@ -255,6 +259,7 @@ extern char * reg_names[];\n #define TARGET_IDENTIFY_REVISION  (target_flags & MASK_IDENTIFY_REVISION)\n #define TARGET_WARN_PASS_STRUCT   (target_flags & MASK_WARN_PASS_STRUCT)\n #define TARGET_OPTIMIZE_ARG_AREA  (target_flags & MASK_OPTIMIZE_ARG_AREA)\n+#define TARGET_SERIALIZE_VOLATILE (target_flags & MASK_SERIALIZE_VOLATILE)\n \n #define TARGET_EITHER_LARGE_SHIFT (target_flags & MASK_EITHER_LARGE_SHIFT)\n \n@@ -273,7 +278,6 @@ extern char * reg_names[];\n     { \"no-ocs-frame-position\",\t\t-MASK_OCS_FRAME_POSITION }, \\\n     { \"svr4\",\t\t\t         MASK_SVR4 }, \\\n     { \"svr3\",\t\t\t        -MASK_SVR4 }, \\\n-    { \"version-03.00\",\t\t         MASK_VERSION_0300 }, \\\n     { \"no-underscores\",\t\t\t MASK_NO_UNDERSCORES }, \\\n     { \"big-pic\",\t\t\t MASK_BIG_PIC }, \\\n     { \"trap-large-shift\",\t\t MASK_TRAP_LARGE_SHIFT }, \\\n@@ -285,6 +289,8 @@ extern char * reg_names[];\n     { \"warn-passed-structs\",\t\t MASK_WARN_PASS_STRUCT }, \\\n     { \"optimize-arg-area\",\t\t MASK_OPTIMIZE_ARG_AREA }, \\\n     { \"no-optimize-arg-area\",\t\t-MASK_OPTIMIZE_ARG_AREA }, \\\n+    { \"serialize-volatile\",\t\t MASK_SERIALIZE_VOLATILE }, \\\n+    { \"no-serialize-volatile\",\t\t MASK_NO_SERIALIZE_VOLATILE }, \\\n     SUBTARGET_SWITCHES \\\n     /* Default switches */ \\\n     { \"\",\t\t\t\t TARGET_DEFAULT }, \\\n@@ -295,7 +301,8 @@ extern char * reg_names[];\n \n /* Macro to define table for command options with values.  */\n \n-#define TARGET_OPTIONS { { \"short-data-\", &m88k_short_data } }\n+#define TARGET_OPTIONS { { \"short-data-\", &m88k_short_data }, \\\n+\t\t\t { \"version-\", &m88k_version } }\n \n /* Do any checking or such that is needed after processing the -m switches.  */\n \n@@ -309,19 +316,36 @@ extern char * reg_names[];\n     m88k_cpu = (TARGET_88000 ? CPU_M88000\t\t\t\t     \\\n \t\t: (TARGET_88100 ? CPU_M88100 : CPU_M88110));\t\t     \\\n \t\t\t\t\t\t\t\t\t     \\\n+    if (! TARGET_88100 && (target_flags & MASK_SERIALIZE) == 0)\t\t     \\\n+      target_flags |= MASK_SERIALIZE_VOLATILE;\t\t\t\t     \\\n+\t\t\t\t\t\t\t\t\t     \\\n+    if ((target_flags & MASK_NO_SERIALIZE_VOLATILE) != 0)\t\t     \\\n+      target_flags &= ~MASK_SERIALIZE_VOLATILE;\t\t\t\t     \\\n+\t\t\t\t\t\t\t\t\t     \\\n     if (TARGET_BIG_PIC)\t\t\t\t\t\t\t     \\\n       flag_pic = 2;\t\t\t\t\t\t\t     \\\n \t\t\t\t\t\t\t\t\t     \\\n     if ((target_flags & MASK_EITHER_LARGE_SHIFT) == MASK_EITHER_LARGE_SHIFT) \\\n       error (\"-mtrap-large-shift and -mhandle-large-shift are incompatible\");\\\n \t\t\t\t\t\t\t\t\t     \\\n+    m88k_version_0300 = (m88k_version != 0\t\t\t\t     \\\n+\t\t\t && strcmp (m88k_version, \"03.00\") >= 0);\t     \\\n+\t\t\t\t\t\t\t\t\t     \\\n     if (VERSION_0300_SYNTAX)\t\t\t\t\t\t     \\\n       {\t\t\t\t\t\t\t\t\t     \\\n \tfor (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\t\t\t     \\\n \t  reg_names[i]--;\t\t\t\t\t\t     \\\n \tm88k_pound_sign = \"#\";\t\t\t\t\t\t     \\\n+\tif (m88k_version == 0)\t\t\t\t\t\t     \\\n+\t  m88k_version = \"03.00\";\t\t        \t\t     \\\n+\telse if (strcmp (m88k_version, \"03.00\") < 0)\t\t\t     \\\n+\t  error (\"Specified assembler version (%s) is less that 03.00\",\t     \\\n+\t\t m88k_version);\t\t\t\t\t\t     \\\n       }\t\t\t\t\t\t\t\t\t     \\\n \t\t\t\t\t\t\t\t\t     \\\n+    m88k_version_0300 = (m88k_version != 0\t\t\t\t     \\\n+\t\t\t && strcmp (m88k_version, \"03.00\") >= 0);\t     \\\n+\t\t\t\t\t\t\t\t\t     \\\n     if (m88k_short_data)\t\t\t\t\t\t     \\\n       {\t\t\t\t\t\t\t\t\t     \\\n \tchar *p = m88k_short_data;\t\t\t\t\t     \\\n@@ -1482,11 +1506,23 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n    so give the MEM rtx word mode.  */\n #define FUNCTION_MODE SImode\n \n-/* A barrier will be aligned so account for the possible expansion.  */\n-#define ADJUST_INSN_LENGTH(INSN, LENGTH)\t\\\n-  if (GET_CODE (INSN) == BARRIER)\t\t\\\n+/* A barrier will be aligned so account for the possible expansion.  A\n+   volatile memory reference may be preceeded by a serializing instruction.  */\n+#define ADJUST_INSN_LENGTH(RTX, LENGTH)\t\t\t\t\t\\\n+  if (GET_CODE (RTX) == BARRIER\t\t\t\t\t\t\\\n+      || (TARGET_SERIALIZE_VOLATILE\t\t\t\t\t\\\n+\t  && GET_CODE (RTX) == INSN\t\t\t\t\t\\\n+\t  && GET_CODE (PATTERN (RTX)) == SET\t\t\t\t\\\n+\t  && ((GET_CODE (SET_SRC (PATTERN (RTX))) == MEM\t\t\\\n+\t       && MEM_VOLATILE_P (SET_SRC (PATTERN (RTX))))\t\t\\\n+\t      || (GET_CODE (SET_DEST (PATTERN (RTX))) == MEM\t\t\\\n+\t\t  && MEM_VOLATILE_P (SET_DEST (PATTERN (RTX)))))))\t\\\n     LENGTH += 1;\n \n+/* Track the state of the last volatile memory reference.  Clear the\n+   state with CC_STATUS_INIT for now.  */\n+#define CC_STATUS_INIT m88k_volatile_code = '\\0'\n+\n /* Compute the cost of computing a constant rtl expression RTX\n    whose rtx-code is CODE.  The body of this macro is a portion\n    of a switch statement.  If the code is computed here,\n@@ -1699,8 +1735,8 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n \n #define ASM_FIRST_LINE(FILE)\t\t\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n-    if (VERSION_0300_SYNTAX)\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t%s\\t \\\"03.00\\\"\\n\", VERSION_ASM_OP);\t\t\\\n+    if (m88k_version)\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t%s\\t \\\"%s\\\"\\n\", VERSION_ASM_OP, m88k_version);\t\\\n   } while (0)\n \n /* Override svr[34].h.  */\n@@ -2315,7 +2351,8 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n #define INIT_SECTION_FUNCTION\n #define FINI_SECTION_FUNCTION\n \n-#elif defined(USING_SVR3_H)\n+#else\n+#if defined(USING_SVR3_H)\n \n #define EXTRA_SECTIONS in_const, in_tdesc, in_sdata, in_ctors, in_dtors, \\\n \t\t       in_init, in_fini\n@@ -2335,6 +2372,7 @@ const_section ()\t\t\t\t\t\t\t\\\n #define INIT_SECTION_FUNCTION\n #define FINI_SECTION_FUNCTION\n \n+#endif /* USING_SVR3_H */\n #endif /* USING_SVR4_H */\n \n #undef\tEXTRA_SECTION_FUNCTIONS"}]}