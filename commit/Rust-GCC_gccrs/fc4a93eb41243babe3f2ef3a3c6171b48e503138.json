{"sha": "fc4a93eb41243babe3f2ef3a3c6171b48e503138", "node_id": "C_kwDOANBUbNoAKGZjNGE5M2ViNDEyNDNiYWJlM2YyZWYzYTNjNjE3MWI0OGU1MDMxMzg", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@adacore.com", "date": "2021-04-08T18:03:19Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2021-12-13T18:03:26Z"}, "message": "Rework VXWORKS_LINK_SPEC for shared objects support\n\nSplit LINK_SPEC as BASE_LINK_SPEC + EXTRA_LINK_SPEC,\nwith an overridable LINK_OS component that cpu ports may\nredefine.\n\nLeverage the latter on powerpc for VxWorks 7, where we incorporate\nour specific bits in the linux os configuration as the system compiler\nis now very close to a standard linux one.\n\nThe split allows supporting shared objects (shared libs and\nnon-static rtps) on recent versions of VxWorks while retaining\ncompatibility with older VxWorks targets which could link with\nshared libraries but not build them.\n\n2021-12-07  Doug Rupp  <rupp@adacore.com>\n\t    Olivier Hainque  <hainque@adacore.com>\n\ngcc/\n\t* config/vxworks.h (VXWORKS_LINK_OS_SPEC): New spec.\n\t(VXWORKS_BASE_LINK_SPEC): New spec, using the former.\n\t(VXWORKS_EXTRA_LINK_SPEC): New spec for old and new VxWorks.\n\t(VXWORKS_LINK_SPEC): Combo of BASE and EXTRA specs.\n\t* config/rs6000/vxworks.h (VXWORKS_LINK_OS_SPEC): Empty.\n\t(LINK_OS_EXTRA_SPEC32): Use VXWORKS_LINK_SPEC.\n\t(LINK_OS_EXTRA_SPEC64): Likewise.", "tree": {"sha": "f54ff6c731e8ca60d78b354bb08f6c6ba000a7ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f54ff6c731e8ca60d78b354bb08f6c6ba000a7ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc4a93eb41243babe3f2ef3a3c6171b48e503138", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc4a93eb41243babe3f2ef3a3c6171b48e503138", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc4a93eb41243babe3f2ef3a3c6171b48e503138", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc4a93eb41243babe3f2ef3a3c6171b48e503138/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04577ac0843d7a4961d992e678db3e4a85275825", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04577ac0843d7a4961d992e678db3e4a85275825", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04577ac0843d7a4961d992e678db3e4a85275825"}], "stats": {"total": 48, "additions": 31, "deletions": 17}, "files": [{"sha": "d2d65855656e1963a0ccf7d9e2721cf931d0c54d", "filename": "gcc/config/rs6000/vxworks.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc4a93eb41243babe3f2ef3a3c6171b48e503138/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc4a93eb41243babe3f2ef3a3c6171b48e503138/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworks.h?ref=fc4a93eb41243babe3f2ef3a3c6171b48e503138", "patch": "@@ -252,15 +252,18 @@ along with GCC; see the file COPYING3.  If not see\n #undef DOT_SYMBOLS\n #define DOT_SYMBOLS 0\n \n-#undef LINK_OS_VXWORKS_SPEC\n-#define LINK_OS_VXWORKS_SPEC \\\n-  \" %{!mrtp:-r} %{mrtp:-q -static} %{!Xbind-lazy:-z now}\"\n+/* For link specs, we leverage the linux configuration bits through\n+   LINK_OS_EXTRA_SPEC32/64 and need to cancel the default %(link_os)\n+   expansion in VXWORKS_LINK_SPEC.  */\n+\n+#undef VXWORKS_LINK_OS_SPEC\n+#define VXWORKS_LINK_OS_SPEC \"\"\n \n #undef LINK_OS_EXTRA_SPEC32\n-#define LINK_OS_EXTRA_SPEC32 LINK_OS_VXWORKS_SPEC \" \" VXWORKS_RELAX_LINK_SPEC\n+#define LINK_OS_EXTRA_SPEC32 VXWORKS_LINK_SPEC \" \" VXWORKS_RELAX_LINK_SPEC\n \n #undef LINK_OS_EXTRA_SPEC64\n-#define LINK_OS_EXTRA_SPEC64 LINK_OS_VXWORKS_SPEC\n+#define LINK_OS_EXTRA_SPEC64 VXWORKS_LINK_SPEC\n \n /* linux64.h enables this, not supported in vxWorks.  */\n #undef TARGET_FLOAT128_ENABLE_TYPE"}, {"sha": "88bffc4522bce816fde14d493d4a7fad0df1bd42", "filename": "gcc/config/vxworks.h", "status": "modified", "additions": 23, "deletions": 12, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc4a93eb41243babe3f2ef3a3c6171b48e503138/gcc%2Fconfig%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc4a93eb41243babe3f2ef3a3c6171b48e503138/gcc%2Fconfig%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.h?ref=fc4a93eb41243babe3f2ef3a3c6171b48e503138", "patch": "@@ -132,8 +132,7 @@ along with GCC; see the file COPYING3.  If not see\n #define VXWORKS_NET_LIBS_RTP \"-lnet -ldsi\"\n #endif\n \n-#define VXWORKS_BASE_LIBS_RTP \\\n-  \"-lc -lgcc %{!shared:%{!non-static:-lc_internal}}\"\n+#define VXWORKS_BASE_LIBS_RTP \"-lc -lgcc %{!shared:-lc_internal}\"\n \n #define VXWORKS_EXTRA_LIBS_RTP\n \n@@ -179,24 +178,36 @@ along with GCC; see the file COPYING3.  If not see\n \t\t  \" TLS_SYM \"                                              \\\n \t\t  --start-group \" VXWORKS_LIBS_RTP \" --end-group}}\"\n \n-/* The no-op spec for \"-shared\" below is present because otherwise GCC\n-   will treat it as an unrecognized option.  */\n-#undef VXWORKS_LINK_SPEC\n-#define VXWORKS_LINK_SPEC\t\t\t\t\\\n+#if TARGET_VXWORKS7\n+#define VXWORKS_EXTRA_LINK_SPEC \"\"\n+#else\n+/* Older VxWorks RTPs can only link with shared libs, and\n+   need special switches --force-dynamic --export-dynamic. */\n+#define VXWORKS_EXTRA_LINK_SPEC\t\t\t\t\\\n+\"%{mrtp:%{!shared:%{non-static:--force-dynamic --export-dynamic}}}\"\n+#endif\n+\n+/* A default link_os expansion for RTPs, that cpu ports may override.  */\n+#undef VXWORKS_LINK_OS_SPEC\n+#define VXWORKS_LINK_OS_SPEC \"%(link_os)\"\n+\n+/* The -B and -X switches are for DIAB based linking. */\n+#undef VXWORKS_BASE_LINK_SPEC\n+#define VXWORKS_BASE_LINK_SPEC\t\t\t\t\\\n \"%{!mrtp:-r}\t\t\t\t\t\t\\\n- %{!shared:\t\t\t\t\t\t\\\n-   %{mrtp:-q %{h*}\t\t\t\t\t\\\n-          %{R*} %{!T*: %(link_start) }\t\t\t\\\n-          %(link_os)}}\t\t\t\t\t\\\n  %{v:-V}\t\t\t\t\t\t\\\n  %{shared:-shared}\t\t\t\t\t\\\n  %{Bstatic:-Bstatic}\t\t\t\t\t\\\n  %{Bdynamic:-Bdynamic}\t\t\t\t\t\\\n  %{!Xbind-lazy:-z now}\t\t\t\t\t\\\n  %{Xbind-now:%{Xbind-lazy:\t\t\t\t\\\n    %e-Xbind-now and -Xbind-lazy are incompatible}}\t\\\n- %{mrtp:%{!shared:%{!non-static:-static}\t\t\\\n- \t\t  %{non-static:--force-dynamic --export-dynamic}}}\"\n+ %{mrtp:-q %{!shared:%{!non-static:-static}}            \\\n+        %{h*} %{R*} %{!T*: %(link_start)}\"              \\\n+        VXWORKS_LINK_OS_SPEC \"}\"\n+\n+#undef VXWORKS_LINK_SPEC\n+#define VXWORKS_LINK_SPEC VXWORKS_BASE_LINK_SPEC \" \" VXWORKS_EXTRA_LINK_SPEC\n \n #undef VXWORKS_LIBGCC_SPEC\n #if defined(ENABLE_SHARED_LIBGCC)"}]}