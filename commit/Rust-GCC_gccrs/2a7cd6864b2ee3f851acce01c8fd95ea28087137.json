{"sha": "2a7cd6864b2ee3f851acce01c8fd95ea28087137", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE3Y2Q2ODY0YjJlZTNmODUxYWNjZTAxYzhmZDk1ZWEyODA4NzEzNw==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2004-09-29T21:23:35Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2004-09-29T21:23:35Z"}, "message": "tree-flow.h (struct bb_ann_d): Remove num_preds member.\n\n\t* tree-flow.h (struct bb_ann_d): Remove num_preds member.\n\t* tree-into-ssa.c (rewrite_into_ssa): Don't set it.\n\t(rewrite_ssa_into_ssa): Likewise.\n\t* tree-phinodes.c (create_phi_node): Access the number of\n\tpredecessor edges using EDGE_COUNT() and not num_preds.\n\nCo-Authored-By: Andrew Pinski <pinskia@physics.uc.edu>\nCo-Authored-By: Steven Bosscher <stevenb@suse.de>\n\nFrom-SVN: r88308", "tree": {"sha": "686caa606abc0cc169ce57c7911125aa93f2bb68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/686caa606abc0cc169ce57c7911125aa93f2bb68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a7cd6864b2ee3f851acce01c8fd95ea28087137", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7cd6864b2ee3f851acce01c8fd95ea28087137", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a7cd6864b2ee3f851acce01c8fd95ea28087137", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7cd6864b2ee3f851acce01c8fd95ea28087137/comments", "author": null, "committer": null, "parents": [{"sha": "983de0da66b96b4f16808b60ebbc51cf6cc81917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/983de0da66b96b4f16808b60ebbc51cf6cc81917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/983de0da66b96b4f16808b60ebbc51cf6cc81917"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "92d557b73de9d36f27beb104f49bbb63a169adb3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7cd6864b2ee3f851acce01c8fd95ea28087137/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7cd6864b2ee3f851acce01c8fd95ea28087137/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a7cd6864b2ee3f851acce01c8fd95ea28087137", "patch": "@@ -1,3 +1,11 @@\n+2004-09-30  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* tree-flow.h (struct bb_ann_d): Remove num_preds member.\n+\t* tree-into-ssa.c (rewrite_into_ssa): Don't set it.\n+\t(rewrite_ssa_into_ssa): Likewise.\n+\t* tree-phinodes.c (create_phi_node): Access the number of\n+\tpredecessor edges using EDGE_COUNT() and not num_preds.\n+\n 2004-09-29  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \tPR c/7425\n@@ -257,7 +265,7 @@\n \tProperly mask the immediate field of the 'unimp' instruction.\n \t(call_symbolic_struct_value_sp32): Likewise.\n \n-2004-09-24  Ben Elliston  <bje@au.ibm.com>\n+2004-09-28  Ben Elliston  <bje@au.ibm.com>\n \t    Steven Bosscher  <stevenb@suse.de>\n \t    Andrew Pinski  <pinskia@physics.uc.edu>\n "}, {"sha": "96a2e10f1cfa2ad4d94775ff7d6e95a480d9674a", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7cd6864b2ee3f851acce01c8fd95ea28087137/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7cd6864b2ee3f851acce01c8fd95ea28087137/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=2a7cd6864b2ee3f851acce01c8fd95ea28087137", "patch": "@@ -342,10 +342,6 @@ struct bb_ann_d GTY(())\n   /* Chain of PHI nodes for this block.  */\n   tree phi_nodes;\n \n-  /* Number of predecessors for this block.  This is only valid during\n-     SSA rewriting.  It is not maintained after conversion into SSA form.  */\n-  int num_preds;\n-\n   /* Nonzero if this block is forwardable during cfg cleanups.  This is also\n      used to detect loops during cfg cleanups.  */\n   unsigned forwardable: 1;"}, {"sha": "841938db1a91065b0141f4590b70a29446fb8fe1", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7cd6864b2ee3f851acce01c8fd95ea28087137/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7cd6864b2ee3f851acce01c8fd95ea28087137/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=2a7cd6864b2ee3f851acce01c8fd95ea28087137", "patch": "@@ -1450,10 +1450,7 @@ rewrite_into_ssa (bool all)\n      can save significant time during PHI insertion for large graphs.  */\n   dfs = (bitmap *) xmalloc (last_basic_block * sizeof (bitmap *));\n   FOR_EACH_BB (bb)\n-    {\n-      bb_ann (bb)->num_preds = EDGE_COUNT (bb->preds);\n-      dfs[bb->index] = BITMAP_XMALLOC ();\n-    }\n+    dfs[bb->index] = BITMAP_XMALLOC ();\n \n   for (i = 0; i < num_referenced_vars; i++)\n     set_current_def (referenced_var (i), NULL_TREE);\n@@ -1579,10 +1576,7 @@ rewrite_ssa_into_ssa (void)\n      can save significant time during PHI insertion for large graphs.  */\n   dfs = (bitmap *) xmalloc (last_basic_block * sizeof (bitmap *));\n   FOR_EACH_BB (bb)\n-    {\n-      bb_ann (bb)->num_preds = EDGE_COUNT (bb->preds);\n-      dfs[bb->index] = BITMAP_XMALLOC ();\n-    }\n+    dfs[bb->index] = BITMAP_XMALLOC ();\n \n   /* Ensure that the dominance information is OK.  */\n   calculate_dominance_info (CDI_DOMINATORS);"}, {"sha": "6dc5c7692ded5c8f51a89b21036e627c0bfe7e43", "filename": "gcc/tree-phinodes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7cd6864b2ee3f851acce01c8fd95ea28087137/gcc%2Ftree-phinodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7cd6864b2ee3f851acce01c8fd95ea28087137/gcc%2Ftree-phinodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-phinodes.c?ref=2a7cd6864b2ee3f851acce01c8fd95ea28087137", "patch": "@@ -291,7 +291,7 @@ create_phi_node (tree var, basic_block bb)\n {\n   tree phi;\n \n-  phi = make_phi_node (var, bb_ann (bb)->num_preds);\n+  phi = make_phi_node (var, EDGE_COUNT (bb->preds));\n \n   /* This is a new phi node, so note that is has not yet been\n      rewritten.  */"}]}