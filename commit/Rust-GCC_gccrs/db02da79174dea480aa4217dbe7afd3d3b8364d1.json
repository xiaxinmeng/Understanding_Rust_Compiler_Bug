{"sha": "db02da79174dea480aa4217dbe7afd3d3b8364d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIwMmRhNzkxNzRkZWE0ODBhYTQyMTdkYmU3YWZkM2QzYjgzNjRkMQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2007-01-19T19:35:22Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2007-01-19T19:35:22Z"}, "message": "common.opt (fsigned-zeros): New command line option.\n\n\n\t* common.opt (fsigned-zeros): New command line option.\n\t* flags.h (HONOR_SIGNED_ZEROS): Control via flag_signed_zeros instead\n\tof flag_unsafe_math_optimizations.\n\t* opts.c (set_fast_math_flags): The -ffast-math command line option\n\timplies -fno-signed-zeros.\n\t(fast_math_flags_set_p): Likewise.\n\n\t* doc/invoke.texi: Document new -fno-signed-zeros option, and update\n\tthe documentation of -ffast-math appropriately.  Wrap long lines.\n\n\t* gcc.dg/pr30172-1.c: Specify the -fno-signed-zeros command line\n\toption instead of -funsafe-math-optimizations.\n\nFrom-SVN: r120978", "tree": {"sha": "e158e5c13ab326a2c00f9dd76f5137fb2f592973", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e158e5c13ab326a2c00f9dd76f5137fb2f592973"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db02da79174dea480aa4217dbe7afd3d3b8364d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db02da79174dea480aa4217dbe7afd3d3b8364d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db02da79174dea480aa4217dbe7afd3d3b8364d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db02da79174dea480aa4217dbe7afd3d3b8364d1/comments", "author": null, "committer": null, "parents": [{"sha": "d88c64564e9c9c57bea4c6ce15fd400f589f9de3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d88c64564e9c9c57bea4c6ce15fd400f589f9de3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d88c64564e9c9c57bea4c6ce15fd400f589f9de3"}], "stats": {"total": 50, "additions": 42, "deletions": 8}, "files": [{"sha": "78513d25ecb188e8fa95cabbb0a33952f1d0b3e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db02da79174dea480aa4217dbe7afd3d3b8364d1", "patch": "@@ -1,3 +1,15 @@\n+2007-01-19  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* common.opt (fsigned-zeros): New command line option.\n+\t* flags.h (HONOR_SIGNED_ZEROS): Control via flag_signed_zeros instead\n+\tof flag_unsafe_math_optimizations.\n+\t* opts.c (set_fast_math_flags): The -ffast-math command line option\n+\timplies -fno-signed-zeros.\n+\t(fast_math_flags_set_p): Likewise.\n+\n+\t* doc/invoke.texi: Document new -fno-signed-zeros option, and update\n+\tthe documentation of -ffast-math appropriately.  Wrap long lines.\n+\n 2007-01-19  Steve Ellcey  <sje@cup.hp.com>\n \n \t* system.h (ASM_MAKE_LABEL_LINKONCE): Poison."}, {"sha": "dfcda946aa2198f9333c79f79bdb22ac8576a4f7", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=db02da79174dea480aa4217dbe7afd3d3b8364d1", "patch": "@@ -845,6 +845,10 @@ fsignaling-nans\n Common Report Var(flag_signaling_nans)\n Disable optimizations observable by IEEE signaling NaNs\n \n+fsigned-zeros\n+Common Report Var(flag_signed_zeros) Init(1)\n+Disable floating point optimizations that ignore the IEEE signedness of zero\n+\n fsingle-precision-constant\n Common Report Var(flag_single_precision_constant)\n Convert floating point constants to single precision constants"}, {"sha": "5337288a676dbf69d96a3a61b9d7e185a0b73615", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=db02da79174dea480aa4217dbe7afd3d3b8364d1", "patch": "@@ -323,7 +323,8 @@ Objective-C and Objective-C++ Dialects}.\n -fno-default-inline  -fno-defer-pop -fmove-loop-invariants @gol\n -fno-function-cse  -fno-guess-branch-probability @gol\n -fno-inline  -fno-math-errno  -fno-peephole  -fno-peephole2 @gol\n--funsafe-math-optimizations  -funsafe-loop-optimizations  -ffinite-math-only @gol\n+-funsafe-math-optimizations  -funsafe-loop-optimizations @gol\n+-ffinite-math-only  -fno-signed-zeros @gol\n -fno-toplevel-reorder -fno-trapping-math  -fno-zero-initialized-in-bss @gol\n -fomit-frame-pointer  -foptimize-register-move @gol\n -foptimize-sibling-calls  -fprefetch-loop-arrays @gol\n@@ -5631,8 +5632,8 @@ them to store all pertinent intermediate computations into variables.\n @opindex ffast-math\n Sets @option{-fno-math-errno}, @option{-funsafe-math-optimizations}, @*\n @option{-fno-trapping-math}, @option{-ffinite-math-only},\n-@option{-fno-rounding-math}, @option{-fno-signaling-nans}\n-and @option{fcx-limited-range}.\n+@option{-fno-rounding-math}, @option{-fno-signaling-nans},\n+@option{-fno-signed-zeros} and @option{fcx-limited-range}.\n \n This option causes the preprocessor macro @code{__FAST_MATH__} to be defined.\n \n@@ -5655,9 +5656,9 @@ math functions.\n \n The default is @option{-fmath-errno}.\n \n-On Darwin systems, the math library never sets @code{errno}.  There is therefore\n-no reason for the compiler to consider the possibility that it might,\n-and @option{-fno-math-errno} is the default.\n+On Darwin systems, the math library never sets @code{errno}.  There is\n+therefore no reason for the compiler to consider the possibility that\n+it might, and @option{-fno-math-errno} is the default.\n \n @item -funsafe-math-optimizations\n @opindex funsafe-math-optimizations\n@@ -5685,6 +5686,16 @@ an exact implementation of IEEE or ISO rules/specifications.\n \n The default is @option{-fno-finite-math-only}.\n \n+@item -fno-signed-zeros\n+@opindex fno-signed-zeros\n+Allow optimizations for floating point arithmetic that ignore the\n+signedness of zero.  IEEE arithmetic specifies the behavior of\n+distinct +0.0 and -0.0 values, which then prohibits simplification\n+of expressions such as x+0.0 or 0.0*x (even with @option{-ffinte-math-only}).\n+This option implies that the sign of a zero result isn't significant.\n+\n+The default is @option{-fsigned-zeros}.\n+\n @item -fno-trapping-math\n @opindex fno-trapping-math\n Compile code assuming that floating-point operations cannot generate"}, {"sha": "ce9d6d7bb907cbfb3c808c747af29dc8f01b6f50", "filename": "gcc/flags.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=db02da79174dea480aa4217dbe7afd3d3b8364d1", "patch": "@@ -281,7 +281,7 @@ extern const char *flag_random_seed;\n /* Like HONOR_NANS, but true if the given mode distinguishes between\n    positive and negative zero, and the sign of zero is important.  */\n #define HONOR_SIGNED_ZEROS(MODE) \\\n-  (MODE_HAS_SIGNED_ZEROS (MODE) && !flag_unsafe_math_optimizations)\n+  (MODE_HAS_SIGNED_ZEROS (MODE) && flag_signed_zeros)\n \n /* Like HONOR_NANS, but true if given mode supports sign-dependent rounding,\n    and the rounding mode is important.  */"}, {"sha": "6720af1332a213d90579728e8830d7ce92872d72", "filename": "gcc/opts.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=db02da79174dea480aa4217dbe7afd3d3b8364d1", "patch": "@@ -1076,6 +1076,7 @@ set_fast_math_flags (int set)\n   flag_trapping_math = !set;\n   flag_unsafe_math_optimizations = set;\n   flag_finite_math_only = set;\n+  flag_signed_zeros = !set;\n   flag_errno_math = !set;\n   if (set)\n     {\n@@ -1092,6 +1093,7 @@ fast_math_flags_set_p (void)\n   return (!flag_trapping_math\n \t  && flag_unsafe_math_optimizations\n \t  && flag_finite_math_only\n+\t  && !flag_signed_zeros\n \t  && !flag_errno_math);\n }\n "}, {"sha": "326a76ab8fffefc9ae8146563a81668e3d608b17", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=db02da79174dea480aa4217dbe7afd3d3b8364d1", "patch": "@@ -1,3 +1,8 @@\n+2007-01-19  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* gcc.dg/pr30172-1.c: Specify the -fno-signed-zeros command line\n+\toption instead of -funsafe-math-optimizations.\n+\n 2007-01-19  Tomas Bily  <tbily@suse.cz>\n \n \tgcc.dg/tree-prof/indir-call-prof.c: New."}, {"sha": "4e029b5fba6d8b578fb4aba4c3ec5e06f2c1a9a4", "filename": "gcc/testsuite/gcc.dg/pr30172-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30172-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db02da79174dea480aa4217dbe7afd3d3b8364d1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30172-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30172-1.c?ref=db02da79174dea480aa4217dbe7afd3d3b8364d1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-funsafe-math-optimizations -ffinite-math-only -fdump-tree-gimple\" } */\n+/* { dg-options \"-fno-signed-zeros -ffinite-math-only -fdump-tree-gimple\" } */\n \n _Complex double test1 (double x) { return x + 1.i; }\n _Complex double test2 (double x) { return 1 + x * 1.i; }"}]}