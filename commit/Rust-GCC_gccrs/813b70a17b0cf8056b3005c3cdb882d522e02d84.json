{"sha": "813b70a17b0cf8056b3005c3cdb882d522e02d84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEzYjcwYTE3YjBjZjgwNTZiMzAwNWMzY2RiODgyZDUyMmUwMmQ4NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-12-14T11:18:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-14T11:18:30Z"}, "message": "re PR tree-optimization/92930 (GCC incorrectly optimizes away __builtin_apply() calls)\n\n\tPR tree-optimization/92930\n\t* ipa-pure-const.c (special_builtin_state): Don't handle\n\tBUILT_IN_APPLY.  Formatting fixes.\n\t(check_call): Formatting fixes.\n\n\t* gcc.dg/tree-ssa/pr92930.c: New test.\n\nFrom-SVN: r279394", "tree": {"sha": "37d01f0b397988d737fc3e26b8d910095621a90c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37d01f0b397988d737fc3e26b8d910095621a90c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/813b70a17b0cf8056b3005c3cdb882d522e02d84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813b70a17b0cf8056b3005c3cdb882d522e02d84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/813b70a17b0cf8056b3005c3cdb882d522e02d84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813b70a17b0cf8056b3005c3cdb882d522e02d84/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e62faf211557e6b469df749cc9612b6289f4f7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e62faf211557e6b469df749cc9612b6289f4f7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e62faf211557e6b469df749cc9612b6289f4f7e"}], "stats": {"total": 87, "additions": 59, "deletions": 28}, "files": [{"sha": "e0ac204d0e3559d0e9d24a683bc6b6a2d94a615e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813b70a17b0cf8056b3005c3cdb882d522e02d84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813b70a17b0cf8056b3005c3cdb882d522e02d84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=813b70a17b0cf8056b3005c3cdb882d522e02d84", "patch": "@@ -1,3 +1,10 @@\n+2019-12-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/92930\n+\t* ipa-pure-const.c (special_builtin_state): Don't handle\n+\tBUILT_IN_APPLY.  Formatting fixes.\n+\t(check_call): Formatting fixes.\n+\n 2019-12-14  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/darwin.h (DARWIN_EXTRA_SPECS): Add new"}, {"sha": "58ab668009a283de146f2b4954fcab5960adcd6f", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813b70a17b0cf8056b3005c3cdb882d522e02d84/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813b70a17b0cf8056b3005c3cdb882d522e02d84/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=813b70a17b0cf8056b3005c3cdb882d522e02d84", "patch": "@@ -511,35 +511,34 @@ worse_state (enum pure_const_state_e *state, bool *looping,\n    but function using them is.  */\n static bool\n special_builtin_state (enum pure_const_state_e *state, bool *looping,\n-\t\t\ttree callee)\n+\t\t       tree callee)\n {\n   if (DECL_BUILT_IN_CLASS (callee) == BUILT_IN_NORMAL)\n     switch (DECL_FUNCTION_CODE (callee))\n       {\n-\tcase BUILT_IN_RETURN:\n-\tcase BUILT_IN_UNREACHABLE:\n-\tCASE_BUILT_IN_ALLOCA:\n-\tcase BUILT_IN_STACK_SAVE:\n-\tcase BUILT_IN_STACK_RESTORE:\n-\tcase BUILT_IN_EH_POINTER:\n-\tcase BUILT_IN_EH_FILTER:\n-\tcase BUILT_IN_UNWIND_RESUME:\n-\tcase BUILT_IN_CXA_END_CLEANUP:\n-\tcase BUILT_IN_EH_COPY_VALUES:\n-\tcase BUILT_IN_FRAME_ADDRESS:\n-\tcase BUILT_IN_APPLY:\n-\tcase BUILT_IN_APPLY_ARGS:\n-\tcase BUILT_IN_ASAN_BEFORE_DYNAMIC_INIT:\n-\tcase BUILT_IN_ASAN_AFTER_DYNAMIC_INIT:\n-\t  *looping = false;\n-\t  *state = IPA_CONST;\n-\t  return true;\n-\tcase BUILT_IN_PREFETCH:\n-\t  *looping = true;\n-\t  *state = IPA_CONST;\n-\t  return true;\n-\tdefault:\n-\t  break;\n+      case BUILT_IN_RETURN:\n+      case BUILT_IN_UNREACHABLE:\n+      CASE_BUILT_IN_ALLOCA:\n+      case BUILT_IN_STACK_SAVE:\n+      case BUILT_IN_STACK_RESTORE:\n+      case BUILT_IN_EH_POINTER:\n+      case BUILT_IN_EH_FILTER:\n+      case BUILT_IN_UNWIND_RESUME:\n+      case BUILT_IN_CXA_END_CLEANUP:\n+      case BUILT_IN_EH_COPY_VALUES:\n+      case BUILT_IN_FRAME_ADDRESS:\n+      case BUILT_IN_APPLY_ARGS:\n+      case BUILT_IN_ASAN_BEFORE_DYNAMIC_INIT:\n+      case BUILT_IN_ASAN_AFTER_DYNAMIC_INIT:\n+\t*looping = false;\n+\t*state = IPA_CONST;\n+\treturn true;\n+      case BUILT_IN_PREFETCH:\n+\t*looping = true;\n+\t*state = IPA_CONST;\n+\treturn true;\n+      default:\n+\tbreak;\n       }\n   return false;\n }\n@@ -624,9 +623,10 @@ check_call (funct_state local, gcall *call, bool ipa)\n \t  case BUILT_IN_LONGJMP:\n \t  case BUILT_IN_NONLOCAL_GOTO:\n \t    if (dump_file)\n-\t      fprintf (dump_file, \"    longjmp and nonlocal goto is not const/pure\\n\");\n+\t      fprintf (dump_file,\n+\t\t       \"    longjmp and nonlocal goto is not const/pure\\n\");\n \t    local->pure_const_state = IPA_NEITHER;\n-            local->looping = true;\n+\t    local->looping = true;\n \t    break;\n \t  default:\n \t    break;\n@@ -1532,7 +1532,7 @@ propagate_pure_const (void)\n \t\t    }\n \t\t}\n \t      else if (special_builtin_state (&edge_state, &edge_looping,\n-\t\t\t\t\t       y->decl))\n+\t\t\t\t\t      y->decl))\n \t\t;\n \t      else\n \t\tstate_from_flags (&edge_state, &edge_looping,"}, {"sha": "da0d3abe350f2871338ca90d0a75130a771c3d04", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813b70a17b0cf8056b3005c3cdb882d522e02d84/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813b70a17b0cf8056b3005c3cdb882d522e02d84/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=813b70a17b0cf8056b3005c3cdb882d522e02d84", "patch": "@@ -1,3 +1,8 @@\n+2019-12-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/92930\n+\t* gcc.dg/tree-ssa/pr92930.c: New test.\n+\n 2019-12-13  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/91582"}, {"sha": "67e604b6c5060313b7ea65d10efc8d4806b10cdb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr92930.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813b70a17b0cf8056b3005c3cdb882d522e02d84/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr92930.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813b70a17b0cf8056b3005c3cdb882d522e02d84/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr92930.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr92930.c?ref=813b70a17b0cf8056b3005c3cdb882d522e02d84", "patch": "@@ -0,0 +1,19 @@\n+/* PR tree-optimization/92930 */\n+/* { dg-do compile { target untyped_assembly } } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump \"__builtin_apply \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"__builtin_apply_args\" \"optimized\" } } */\n+\n+void foo (int a, int b, int c, int d, int e, int f, int g);\n+\n+static void bar (int a, ...)\n+{\n+  __builtin_apply (foo, __builtin_apply_args (), 20);\n+}\n+\n+int\n+main ()\n+{\n+  bar (1024, 1025, 1026, 1027, 1028, 1029, 1030);\n+  return 0;\n+}"}]}