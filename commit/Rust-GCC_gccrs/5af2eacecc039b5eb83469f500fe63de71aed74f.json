{"sha": "5af2eacecc039b5eb83469f500fe63de71aed74f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFmMmVhY2VjYzAzOWI1ZWI4MzQ2OWY1MDBmZTYzZGU3MWFlZDc0Zg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-07-22T18:12:35Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-07-22T18:12:35Z"}, "message": "[multiple changes]\n\n2009-07-22  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/40796\n\t* trans-decl.c (generate_local_decl): Unreferenced result\n\tvariables with allocatable components should be treated like\n\tINTENT_OUT dummy variables.\n\n2009-07-21  Richard Guenther  <rguenther@suse.de>\n\n\tPR fortran/40726\n\tChange attribution to Richi.\n\nFrom-SVN: r149952", "tree": {"sha": "cebb6b4ee23a448c5442969b7a027f7ac44bd887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cebb6b4ee23a448c5442969b7a027f7ac44bd887"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5af2eacecc039b5eb83469f500fe63de71aed74f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af2eacecc039b5eb83469f500fe63de71aed74f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5af2eacecc039b5eb83469f500fe63de71aed74f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af2eacecc039b5eb83469f500fe63de71aed74f/comments", "author": null, "committer": null, "parents": [{"sha": "61ed639283acd896af48d40727b01f5d516008cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61ed639283acd896af48d40727b01f5d516008cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61ed639283acd896af48d40727b01f5d516008cf"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "0cdf188527a2a2bcbf63bbe9b39677966af01513", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af2eacecc039b5eb83469f500fe63de71aed74f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af2eacecc039b5eb83469f500fe63de71aed74f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5af2eacecc039b5eb83469f500fe63de71aed74f", "patch": "@@ -1,3 +1,10 @@\n+2009-07-22  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/40796\n+\t* trans-decl.c (generate_local_decl): Unreferenced result\n+\tvariables with allocatable components should be treated like\n+\tINTENT_OUT dummy variables.\n+\n 2009-07-22  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* trans.h (gfc_set_decl_assembler_name): New prototype.\n@@ -8,7 +15,7 @@\n \t* trans-common.c (build_common_decl): Use\n \tgfc_set_decl_assembler_name instead of SET_DECL_ASSEMBLER_NAME.\n \n-2009-07-21  Paul Thomas  <pault@gcc.gnu.org>\n+2009-07-21  Richard Guenther  <rguenther@suse.de>\n \n \tPR fortran/40726\n \t* trans-decl.c (gfc_get_extern_function_decl): Do not set"}, {"sha": "b70d0bd235eb7ff0bad02894610acddeef83f092", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af2eacecc039b5eb83469f500fe63de71aed74f/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af2eacecc039b5eb83469f500fe63de71aed74f/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=5af2eacecc039b5eb83469f500fe63de71aed74f", "patch": "@@ -3702,19 +3702,20 @@ generate_local_decl (gfc_symbol * sym)\n \t  gfc_get_symbol_decl (sym);\n \t}\n \n-      /* INTENT(out) dummy arguments with allocatable components are reset\n-\t by default and need to be set referenced to generate the code for\n-\t automatic lengths.  */\n-      if (sym->attr.dummy && !sym->attr.referenced\n+      /* INTENT(out) dummy arguments and result variables with allocatable\n+\t components are reset by default and need to be set referenced to\n+\t generate the code for nullification and automatic lengths.  */\n+      if (!sym->attr.referenced\n \t    && sym->ts.type == BT_DERIVED\n \t    && sym->ts.derived->attr.alloc_comp\n-\t    && sym->attr.intent == INTENT_OUT)\n+\t    && ((sym->attr.dummy && sym->attr.intent == INTENT_OUT)\n+\t\t  ||\n+\t\t(sym->attr.result && sym != sym->result)))\n \t{\n \t  sym->attr.referenced = 1;\n \t  gfc_get_symbol_decl (sym);\n \t}\n \n-\n       /* Check for dependencies in the array specification and string\n \tlength, adding the necessary declarations to the function.  We\n \tmark the symbol now, as well as in traverse_ns, to prevent"}]}