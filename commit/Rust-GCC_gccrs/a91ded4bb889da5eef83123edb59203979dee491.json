{"sha": "a91ded4bb889da5eef83123edb59203979dee491", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkxZGVkNGJiODg5ZGE1ZWVmODMxMjNlZGI1OTIwMzk3OWRlZTQ5MQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-04-30T21:42:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-04-30T21:42:24Z"}, "message": "re PR tree-optimization/32921 (Revision 126326 causes 12% slowdown)\n\n2008-04-30  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/32921\n\t* tree-ssa-loop-im.c (mem_refs_may_alias_p): Disambiguate with TBAA.\n\nFrom-SVN: r134838", "tree": {"sha": "068cab532d908429dd98af8fb423e99df7e9ae99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/068cab532d908429dd98af8fb423e99df7e9ae99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a91ded4bb889da5eef83123edb59203979dee491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a91ded4bb889da5eef83123edb59203979dee491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a91ded4bb889da5eef83123edb59203979dee491", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a91ded4bb889da5eef83123edb59203979dee491/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d75900af9b5083a20dd2615a093f532043976618", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d75900af9b5083a20dd2615a093f532043976618", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d75900af9b5083a20dd2615a093f532043976618"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "ffd78f4e1f656bb93a23fbc8da092089dc00f325", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a91ded4bb889da5eef83123edb59203979dee491/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a91ded4bb889da5eef83123edb59203979dee491/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a91ded4bb889da5eef83123edb59203979dee491", "patch": "@@ -1,3 +1,8 @@\n+2008-04-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/32921\n+\t* tree-ssa-loop-im.c (mem_refs_may_alias_p): Disambiguate with TBAA.\n+\n 2008-04-30  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* config/arm/arm.c (arm_unwind_emit): Use"}, {"sha": "c896abb8ba706d51086bcd28f571517d67928860", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a91ded4bb889da5eef83123edb59203979dee491/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a91ded4bb889da5eef83123edb59203979dee491/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=a91ded4bb889da5eef83123edb59203979dee491", "patch": "@@ -1640,6 +1640,8 @@ mem_refs_may_alias_p (tree mem1, tree mem2, struct pointer_map_t **ttae_cache)\n \t  && SSA_VAR_P (mem1)\n \t  && !AGGREGATE_TYPE_P (TREE_TYPE (mem1)))\n \treturn false;\n+      if (!alias_sets_conflict_p (get_alias_set (mem1), get_alias_set (mem2)))\n+\treturn false;\n     }\n \n   /* The expansion of addresses may be a bit expensive, thus we only do"}]}