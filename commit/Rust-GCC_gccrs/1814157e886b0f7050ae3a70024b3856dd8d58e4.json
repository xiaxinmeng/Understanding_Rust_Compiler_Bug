{"sha": "1814157e886b0f7050ae3a70024b3856dd8d58e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxNDE1N2U4ODZiMGY3MDUwYWUzYTcwMDI0YjM4NTZkZDhkNThlNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-08-06T23:17:05Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-08-06T23:17:05Z"}, "message": "acinclude.m4 ([GLIBCXX_CHECK_STDIO_MACROS]): New, checks for common values of EOF, SEEK_CUR, SEEK_END.\n\n2008-08-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* acinclude.m4 ([GLIBCXX_CHECK_STDIO_MACROS]): New, checks for\n\tcommon values of EOF, SEEK_CUR, SEEK_END.\n\t* configure.ac: Use it.\n\t* include/bits/ios_base.h: Likewise.\n\t* include/bits/char_traits.h: Likewise.\n\t* config/locale/gnu/ctype_members.cc: Include <cstdio>.\n\t* config/locale/generic/ctype_members.cc: Likewise.\n\t* testsuite/27_io/ios_base/cons/assign_neg.cc: Adjust dg-error lines.\n\t* testsuite/27_io/ios_base/cons/copy_neg.cc: Likewise.\n\t* configure: Regenerate.\n\t* config.h.in: Likewise.\n\nFrom-SVN: r138829", "tree": {"sha": "9d9804b41425a71698dfd86740014f83625f4996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d9804b41425a71698dfd86740014f83625f4996"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1814157e886b0f7050ae3a70024b3856dd8d58e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1814157e886b0f7050ae3a70024b3856dd8d58e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1814157e886b0f7050ae3a70024b3856dd8d58e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1814157e886b0f7050ae3a70024b3856dd8d58e4/comments", "author": null, "committer": null, "parents": [{"sha": "865a3a421ada308194ab5960e4931fa09c3c68ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/865a3a421ada308194ab5960e4931fa09c3c68ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/865a3a421ada308194ab5960e4931fa09c3c68ad"}], "stats": {"total": 155, "additions": 143, "deletions": 12}, "files": [{"sha": "2a4e4adfa3144691a79788d2e4b6fbf10c55bcdc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1814157e886b0f7050ae3a70024b3856dd8d58e4", "patch": "@@ -1,4 +1,18 @@\n-008-08-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+2008-08-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* acinclude.m4 ([GLIBCXX_CHECK_STDIO_MACROS]): New, checks for\n+\tcommon values of EOF, SEEK_CUR, SEEK_END.\n+\t* configure.ac: Use it.\n+\t* include/bits/ios_base.h: Likewise.\n+\t* include/bits/char_traits.h: Likewise.\n+\t* config/locale/gnu/ctype_members.cc: Include <cstdio>.\n+\t* config/locale/generic/ctype_members.cc: Likewise.\n+\t* testsuite/27_io/ios_base/cons/assign_neg.cc: Adjust dg-error lines.\n+\t* testsuite/27_io/ios_base/cons/copy_neg.cc: Likewise.\n+\t* configure: Regenerate.\n+\t* config.h.in: Likewise.\n+\n+2008-08-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* acinclude.m4 ([GLIBCXX_CHECK_INT64_T]): Also check whether int64_t\n \tis actually a typedef to long or long long."}, {"sha": "3197682df8ff4749b4e47a3b4d4cc6407e667d25", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=1814157e886b0f7050ae3a70024b3856dd8d58e4", "patch": "@@ -1460,6 +1460,29 @@ AC_DEFUN([GLIBCXX_CHECK_RANDOM_TR1], [\n \n ])\n \n+dnl\n+dnl Check whether EOF, SEEK_CUR, and SEEK_END have the most common values:\n+dnl in that case including <cstdio> in some C++ headers can be avoided.\n+dnl\n+AC_DEFUN([GLIBCXX_CHECK_STDIO_MACROS], [\n+\n+  AC_MSG_CHECKING([for EOF == -1, SEEK_CUR == 1, SEEK_END == 2])\n+  AC_CACHE_VAL(glibcxx_cv_stdio_macros, [\n+  AC_TRY_COMPILE([#include <stdio.h>],\n+                 [#if ((EOF != -1) || (SEEK_CUR != 1) || (SEEK_END != 2))\n+\t            unusual values...\n+\t          #endif\n+\t         ], [glibcxx_cv_stdio_macros=yes],\n+\t\t    [glibcxx_cv_stdio_macros=no])\n+  ])\n+  AC_MSG_RESULT($glibcxx_cv_stdio_macros)\n+  if test x\"$glibcxx_cv_stdio_macros\" = x\"yes\"; then\n+    AC_DEFINE(_GLIBCXX_STDIO_MACROS, 1,\n+              [Define if EOF == -1, SEEK_CUR == 1, SEEK_END == 2.])\n+  fi\n+\n+])\n+\n dnl\n dnl Check whether macros, etc are present for <system_error>\n dnl"}, {"sha": "b4cb3f3b5c7ae7b4bf7e3c03e16faf7e9e827a60", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=1814157e886b0f7050ae3a70024b3856dd8d58e4", "patch": "@@ -767,6 +767,9 @@\n /* Define if the compiler is configured for setjmp/longjmp exceptions. */\n #undef _GLIBCXX_SJLJ_EXCEPTIONS\n \n+/* Define if EOF == -1, SEEK_CUR == 1, SEEK_END == 2. */\n+#undef _GLIBCXX_STDIO_MACROS\n+\n /* Define to use symbol versioning in the shared library. */\n #undef _GLIBCXX_SYMVER\n "}, {"sha": "6b4fbd7ea7d9edffcefc62d55cd400cc45e4a3ea", "filename": "libstdc++-v3/config/locale/generic/ctype_members.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fctype_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fctype_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fctype_members.cc?ref=1814157e886b0f7050ae3a70024b3856dd8d58e4", "patch": "@@ -1,6 +1,6 @@\n // std::ctype implementation details, generic version -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -37,6 +37,7 @@\n #include <locale>\n #include <cstdlib>\n #include <cstring>\n+#include <cstdio>\n \n _GLIBCXX_BEGIN_NAMESPACE(std)\n "}, {"sha": "9e517605914266551f62a9c3a1d323d0bcbddcbd", "filename": "libstdc++-v3/config/locale/gnu/ctype_members.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc?ref=1814157e886b0f7050ae3a70024b3856dd8d58e4", "patch": "@@ -1,6 +1,6 @@\n // std::ctype implementation details, GNU version -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -35,6 +35,7 @@\n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n #include <locale>\n+#include <cstdio>\n #include <bits/c++locale_internal.h>\n \n _GLIBCXX_BEGIN_NAMESPACE(std)"}, {"sha": "fd776092e1f9548aac066dc594d36215e83d6acb", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=1814157e886b0f7050ae3a70024b3856dd8d58e4", "patch": "@@ -41812,6 +41812,78 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n+  #\n+\n+\n+  echo \"$as_me:$LINENO: checking for EOF == -1, SEEK_CUR == 1, SEEK_END == 2\" >&5\n+echo $ECHO_N \"checking for EOF == -1, SEEK_CUR == 1, SEEK_END == 2... $ECHO_C\" >&6\n+  if test \"${glibcxx_cv_stdio_macros+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <stdio.h>\n+int\n+main ()\n+{\n+#if ((EOF != -1) || (SEEK_CUR != 1) || (SEEK_END != 2))\n+\t            unusual values...\n+\t          #endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  glibcxx_cv_stdio_macros=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+glibcxx_cv_stdio_macros=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+fi\n+\n+  echo \"$as_me:$LINENO: result: $glibcxx_cv_stdio_macros\" >&5\n+echo \"${ECHO_T}$glibcxx_cv_stdio_macros\" >&6\n+  if test x\"$glibcxx_cv_stdio_macros\" = x\"yes\"; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define _GLIBCXX_STDIO_MACROS 1\n+_ACEOF\n+\n+  fi\n+\n+\n+\n   # For TLS support.\n \n    # Check whether --enable-tls or --disable-tls was given."}, {"sha": "6f530b3faa4fb2dfbd43d6ce1c59bf7d28e895ac", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=1814157e886b0f7050ae3a70024b3856dd8d58e4", "patch": "@@ -167,6 +167,9 @@ if $GLIBCXX_IS_NATIVE; then\n   # For gettimeofday support.\n   GLIBCXX_CHECK_GETTIMEOFDAY\n \n+  #\n+  GLIBCXX_CHECK_STDIO_MACROS\n+\n   # For TLS support.\n   GCC_CHECK_TLS\n "}, {"sha": "85e4167758e16acb02d09ff3d66635e7facc0952", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=1814157e886b0f7050ae3a70024b3856dd8d58e4", "patch": "@@ -1,7 +1,7 @@\n // Character Traits for use by standard string and iostream -*- C++ -*-\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007\n+// 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -45,9 +45,15 @@\n \n #include <bits/stl_algobase.h>  // std::copy, std::fill_n\n #include <bits/postypes.h>      // For streampos\n-#include <cstdio>               // For EOF\n #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.\n \n+#ifndef _GLIBCXX_STDIO_MACROS\n+# include <cstdio>              // For EOF\n+# define _CHAR_TRAITS_EOF EOF\n+#else\n+# define _CHAR_TRAITS_EOF (-1)\n+#endif\n+\n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n   /**\n@@ -138,7 +144,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n       static int_type\n       eof()\n-      { return static_cast<int_type>(EOF); }\n+      { return static_cast<int_type>(_CHAR_TRAITS_EOF); }\n \n       static int_type\n       not_eof(const int_type& __c)\n@@ -292,7 +298,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       { return __c1 == __c2; }\n \n       static int_type\n-      eof() { return static_cast<int_type>(EOF); }\n+      eof() { return static_cast<int_type>(_CHAR_TRAITS_EOF); }\n \n       static int_type\n       not_eof(const int_type& __c)"}, {"sha": "8b55028c537cfc776af4cada4c7772775bc09a78", "filename": "libstdc++-v3/include/bits/ios_base.h", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h?ref=1814157e886b0f7050ae3a70024b3856dd8d58e4", "patch": "@@ -46,7 +46,15 @@\n #include <ext/atomicity.h>\n #include <bits/localefwd.h>\n #include <bits/locale_classes.h>\n-#include <cstdio>  // For SEEK_CUR, SEEK_END\n+\n+#ifndef _GLIBCXX_STDIO_MACROS\n+# include <cstdio>   // For SEEK_CUR, SEEK_END\n+# define _IOS_BASE_SEEK_CUR SEEK_CUR\n+# define _IOS_BASE_SEEK_END SEEK_END\n+#else\n+# define _IOS_BASE_SEEK_CUR 1\n+# define _IOS_BASE_SEEK_END 2\n+#endif\n \n _GLIBCXX_BEGIN_NAMESPACE(std)\n \n@@ -186,8 +194,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   enum _Ios_Seekdir \n     { \n       _S_beg = 0,\n-      _S_cur = SEEK_CUR,\n-      _S_end = SEEK_END,\n+      _S_cur = _IOS_BASE_SEEK_CUR,\n+      _S_end = _IOS_BASE_SEEK_END,\n       _S_ios_seekdir_end = 1L << 16 \n     };\n "}, {"sha": "7df9d46334361f7b4aca4b3cf8e73d61fa2f2c24", "filename": "libstdc++-v3/testsuite/27_io/ios_base/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc?ref=1814157e886b0f7050ae3a70024b3856dd8d58e4", "patch": "@@ -43,5 +43,5 @@ void test01()\n }\n // { dg-error \"synthesized\" \"\" { target *-*-* } 42 } \n // { dg-error \"within this context\" \"\" { target *-*-* } 35 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 786 } \n+// { dg-error \"is private\" \"\" { target *-*-* } 794 } \n // { dg-error \"operator=\" \"\" { target *-*-* } 0 } "}, {"sha": "8f17ac6b884d9b3d3ae52a66940a8d27ca00f6b7", "filename": "libstdc++-v3/testsuite/27_io/ios_base/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1814157e886b0f7050ae3a70024b3856dd8d58e4/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc?ref=1814157e886b0f7050ae3a70024b3856dd8d58e4", "patch": "@@ -43,5 +43,5 @@ void test02()\n }\n // { dg-error \"within this context\" \"\" { target *-*-* } 36 } \n // { dg-error \"synthesized\" \"\" { target *-*-* } 42 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 783 } \n+// { dg-error \"is private\" \"\" { target *-*-* } 791 } \n // { dg-error \"copy constructor\" \"\" { target *-*-* } 0 } "}]}