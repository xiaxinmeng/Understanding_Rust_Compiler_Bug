{"sha": "48b960eb9f089fad51688ed5b01f4b83bd860fdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhiOTYwZWI5ZjA4OWZhZDUxNjg4ZWQ1YjAxZjRiODNiZDg2MGZkZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-10-28T19:42:06Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-10-28T19:42:06Z"}, "message": "* ChangeLog: Fix whitespace.\n\nFrom-SVN: r254200", "tree": {"sha": "43dba69b49ec9e0f96ba5c7f1c1c97d15ba7dd16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43dba69b49ec9e0f96ba5c7f1c1c97d15ba7dd16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48b960eb9f089fad51688ed5b01f4b83bd860fdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b960eb9f089fad51688ed5b01f4b83bd860fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48b960eb9f089fad51688ed5b01f4b83bd860fdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b960eb9f089fad51688ed5b01f4b83bd860fdd/comments", "author": null, "committer": null, "parents": [{"sha": "a3cbda1b7caeb74630f09dc7e01bd59f30085f00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3cbda1b7caeb74630f09dc7e01bd59f30085f00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3cbda1b7caeb74630f09dc7e01bd59f30085f00"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "b2e27831df813decc91cd9b44a1226b9b4d0cd38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b960eb9f089fad51688ed5b01f4b83bd860fdd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b960eb9f089fad51688ed5b01f4b83bd860fdd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48b960eb9f089fad51688ed5b01f4b83bd860fdd", "patch": "@@ -223,7 +223,7 @@\n \t* config/nios2/constraints.md (\"S\"): Match r0rel_constant_p too.\n \t* config/nios2/nios2-protos.h (r0rel_constant_p): Declare.\n \t* config/nios2/nios2.c: (nios2_r0rel_sec_regex): New.\n-\t(nios2_option_overide): Initialize it.  Don't allow R0-relative \n+\t(nios2_option_overide): Initialize it.  Don't allow R0-relative\n \taddressing with PIC.\n \t(nios2_rtx_costs): Handle r0rel_constant_p like gprel_constant_p.\n \t(nios2_symbolic_constant_p): Likewise.\n@@ -242,7 +242,7 @@\n \n \t* config/nios2/nios2.c: Include xregex.h.\n \t(nios2_gprel_sec_regex): New.\n-\t(nios2_option_overide): Initialize it.  Don't allow GP-relative \n+\t(nios2_option_overide): Initialize it.  Don't allow GP-relative\n \taddressing with PIC.\n \t(nios2_small_section_name_p): Check for regex match.\n \t* config/nios2/nios2.opt (mgprel-sec=): New option.\n@@ -403,8 +403,8 @@\n 2017-10-26  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR target/81800\n-\t* config/aarch64/aarch64.md (lrint<GPF:mode><GPI:mode>2): Add flag_trapping_math\n-\tand flag_fp_int_builtin_inexact.\n+\t* config/aarch64/aarch64.md (lrint<GPF:mode><GPI:mode>2):\n+\tAdd flag_trapping_math and flag_fp_int_builtin_inexact.\n \n 2017-10-25  Palmer Dabbelt  <palmer@dabbelt.com>\n \n@@ -1733,8 +1733,8 @@\n \t(__builtin_ia32_reducesd, __builtin_ia32_reducess): Remove.\n \t* config/i386/sse.md (reduces<mode>): Renamed to ...\n \t(reduces<mode><mask_scalar_name>): ... this.\n-\t(vreduce<ssescalarmodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}): Changed\n-\tto ...\n+\t(vreduce<ssescalarmodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}):\n+\tChanged to ...\n \t(vreduce<ssescalarmodesuffix>\\t{%3, %2, %1, %0<mask_scalar_operand4>|\n \t%0<mask_scalar_operand4>, %1, %2, %3}): ... this.\n \n@@ -1784,7 +1784,8 @@\n \n 2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n \n-\t* config/aarch64/arm_neon.h (vdot_u32, vdotq_u32, vdot_s32, vdotq_s32): New.\n+\t* config/aarch64/arm_neon.h (vdot_u32, vdotq_u32, vdot_s32, vdotq_s32):\n+\tNew.\n \t(vdot_lane_u32, vdot_laneq_u32, vdotq_lane_u32, vdotq_laneq_u32): New.\n \t(vdot_lane_s32, vdot_laneq_s32, vdotq_lane_s32, vdotq_laneq_s32): New.\n \n@@ -1806,17 +1807,21 @@\n \n \t* config/aarch64/aarch64.h (AARCH64_FL_DOTPROD): New.\n \t(AARCH64_ISA_DOTPROD, TARGET_DOTPROD): New.\n-\t* config/aarch64/aarch64-c.c (aarch64_update_cpp_builtins): Add TARGET_DOTPROD.\n+\t* config/aarch64/aarch64-c.c (aarch64_update_cpp_builtins):\n+\tAdd TARGET_DOTPROD.\n \t* config/aarch64/aarch64-option-extensions.def (dotprod): New.\n-\t* config/aarch64/aarch64-cores.def (cortex-a55, cortex-a75): Enable TARGET_DOTPROD.\n+\t* config/aarch64/aarch64-cores.def (cortex-a55, cortex-a75):\n+\tEnable TARGET_DOTPROD.\n \t(cortex-a75.cortex-a55): Likewise.\n \t* doc/invoke.texi (aarch64-feature-modifiers): Document dotprod.\n \n 2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n \n \t* config/arm/arm-builtins.c (arm_unsigned_uternop_qualifiers): New.\n-\t(UTERNOP_QUALIFIERS, arm_umac_lane_qualifiers, UMAC_LANE_QUALIFIERS): New.\n-\t* config/arm/arm_neon_builtins.def (sdot, udot, sdot_lane, udot_lane): new.\n+\t(UTERNOP_QUALIFIERS, arm_umac_lane_qualifiers, UMAC_LANE_QUALIFIERS):\n+\tNew.\n+\t* config/arm/arm_neon_builtins.def (sdot, udot, sdot_lane, udot_lane):\n+\tNew.\n \t* config/arm/iterators.md (DOTPROD, VSI2QI, vsi2qi): New.\n \t(UNSPEC_DOT_S, UNSPEC_DOT_U, opsuffix): New.\n \t* config/arm/neon.md (neon_<sup>dot<vsi2qi>): New."}]}