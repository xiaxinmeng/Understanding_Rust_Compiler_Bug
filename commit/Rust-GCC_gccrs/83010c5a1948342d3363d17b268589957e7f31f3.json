{"sha": "83010c5a1948342d3363d17b268589957e7f31f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMwMTBjNWExOTQ4MzQyZDMzNjNkMTdiMjY4NTg5OTU3ZTdmMzFmMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-08-30T12:13:37Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-08-30T12:13:37Z"}, "message": "fortran-torture.exp (fortran-torture-execute): Honor additional_flags set by alternate driver.\n\n        * lib/fortran-torture.exp (fortran-torture-execute): Honor\n        additional_flags set by alternate driver.\n        (ieee-options): New procedure.\n        * gfortran.fortran-torture/execute/intrinsic_fraction_exponent.x: New.\n        * gfortran.fortran-torture/execute/intrinsic_nearest.x: New.\n        * gfortran.fortran-torture/execute/intrinsic_set_exponent.x: New.\n        * gfortran.fortran-torture/execute/nan_inf_fmt.x: New.\n\nFrom-SVN: r86761", "tree": {"sha": "35565a50c1fd801a06a6873a781d2001a276838b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35565a50c1fd801a06a6873a781d2001a276838b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83010c5a1948342d3363d17b268589957e7f31f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83010c5a1948342d3363d17b268589957e7f31f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83010c5a1948342d3363d17b268589957e7f31f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83010c5a1948342d3363d17b268589957e7f31f3/comments", "author": null, "committer": null, "parents": [{"sha": "f25605acef7d9246e7e9e11a5826cdce854ccd00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f25605acef7d9246e7e9e11a5826cdce854ccd00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f25605acef7d9246e7e9e11a5826cdce854ccd00"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "175c078f02462e8e710725e92a5821600f6f3a06", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83010c5a1948342d3363d17b268589957e7f31f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83010c5a1948342d3363d17b268589957e7f31f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=83010c5a1948342d3363d17b268589957e7f31f3", "patch": "@@ -1,3 +1,13 @@\n+2004-08-30  Richard Henderson  <rth@redhat.com>\n+\n+\t* lib/fortran-torture.exp (fortran-torture-execute): Honor\n+\tadditional_flags set by alternate driver.\n+\t(ieee-options): New procedure.\n+\t* gfortran.fortran-torture/execute/intrinsic_fraction_exponent.x: New.\n+\t* gfortran.fortran-torture/execute/intrinsic_nearest.x: New.\n+\t* gfortran.fortran-torture/execute/intrinsic_set_exponent.x: New.\n+\t* gfortran.fortran-torture/execute/nan_inf_fmt.x: New.\n+\n 2004-08-30  Richard Henderson  <rth@redhat.com>\n \n \t* lib/f-torture.exp: Remove."}, {"sha": "be755d0359621d6965bab6bdc84f402c59112c5a", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_fraction_exponent.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83010c5a1948342d3363d17b268589957e7f31f3/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_fraction_exponent.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83010c5a1948342d3363d17b268589957e7f31f3/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_fraction_exponent.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_fraction_exponent.x?ref=83010c5a1948342d3363d17b268589957e7f31f3", "patch": "@@ -0,0 +1,2 @@\n+lappend additional_flags [ieee-options]\n+return 0"}, {"sha": "be755d0359621d6965bab6bdc84f402c59112c5a", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_nearest.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83010c5a1948342d3363d17b268589957e7f31f3/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_nearest.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83010c5a1948342d3363d17b268589957e7f31f3/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_nearest.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_nearest.x?ref=83010c5a1948342d3363d17b268589957e7f31f3", "patch": "@@ -0,0 +1,2 @@\n+lappend additional_flags [ieee-options]\n+return 0"}, {"sha": "be755d0359621d6965bab6bdc84f402c59112c5a", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_set_exponent.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83010c5a1948342d3363d17b268589957e7f31f3/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_set_exponent.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83010c5a1948342d3363d17b268589957e7f31f3/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_set_exponent.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_set_exponent.x?ref=83010c5a1948342d3363d17b268589957e7f31f3", "patch": "@@ -0,0 +1,2 @@\n+lappend additional_flags [ieee-options]\n+return 0"}, {"sha": "be755d0359621d6965bab6bdc84f402c59112c5a", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/nan_inf_fmt.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83010c5a1948342d3363d17b268589957e7f31f3/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fnan_inf_fmt.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83010c5a1948342d3363d17b268589957e7f31f3/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fnan_inf_fmt.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fnan_inf_fmt.x?ref=83010c5a1948342d3363d17b268589957e7f31f3", "patch": "@@ -0,0 +1,2 @@\n+lappend additional_flags [ieee-options]\n+return 0"}, {"sha": "dae028139dd02aaffb0c67329671c70d3c7840a1", "filename": "gcc/testsuite/lib/fortran-torture.exp", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83010c5a1948342d3363d17b268589957e7f31f3/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83010c5a1948342d3363d17b268589957e7f31f3/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp?ref=83010c5a1948342d3363d17b268589957e7f31f3", "patch": "@@ -139,6 +139,7 @@ proc fortran-torture-execute { src } {\n     global TORTURE_OPTIONS\n \n     # Check for alternate driver.\n+    set additional_flags \"\";\n     if [file exists [file rootname $src].x] {\n \tverbose \"Using alternate driver [file rootname [file tail $src]].x\" 2\n \tset done_p 0\n@@ -184,6 +185,9 @@ proc fortran-torture-execute { src } {\n \n \tset options \"\"\n \tlappend options \"additional_flags=-w $option\"\n+\tif { $additional_flags != \"\" } {\n+\t    lappend options \"additional_flags=$additional_flags\";\n+\t}\n \tset comp_output [gfortran_target_compile \"$src\" \"$executable\" executable $options];\n \n \t# See if we got something bad.\n@@ -341,3 +345,21 @@ proc fortran-torture { args } {\n     }\n }\n \n+#\n+# ieee-options -- return options necessary for 100% ieee conformance.\n+#\n+proc ieee-options { } {\n+    # Ensure that excess precision does not cause problems.\n+    if [istarget \"i?86-*-*\"] then {\n+      return \"-ffloat-store\"\n+    }\n+    if [istarget \"m68k-*-*\"] then {\n+      return \"-ffloat-store\"\n+    }\n+                                                                                \n+    # Enable full IEEE compliance mode.\n+    if { [istarget \"alpha*-*-*\"]\n+         || [istarget \"sh*-*-*\"] } then {\n+      return \"-mieee\"\n+    }\n+}"}]}