{"sha": "5a4916beb895932ff9a68716f36fb47b4d059c49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE0OTE2YmViODk1OTMyZmY5YTY4NzE2ZjM2ZmI0N2I0ZDA1OWM0OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-06-06T09:47:17Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-06-06T09:47:17Z"}, "message": "* gcc-interface/trans.c (process_type): Beef up comment.\n\nFrom-SVN: r237126", "tree": {"sha": "ad7cc2881c92cf5aa479e9c34e8fb97bd39e6dff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad7cc2881c92cf5aa479e9c34e8fb97bd39e6dff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a4916beb895932ff9a68716f36fb47b4d059c49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4916beb895932ff9a68716f36fb47b4d059c49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a4916beb895932ff9a68716f36fb47b4d059c49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4916beb895932ff9a68716f36fb47b4d059c49/comments", "author": null, "committer": null, "parents": [{"sha": "62801a777ae288d0b01792ec8f85cded7b6d9df3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62801a777ae288d0b01792ec8f85cded7b6d9df3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62801a777ae288d0b01792ec8f85cded7b6d9df3"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "115d7079ee81761c758b8ac9321db51ca823faf1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4916beb895932ff9a68716f36fb47b4d059c49/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4916beb895932ff9a68716f36fb47b4d059c49/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5a4916beb895932ff9a68716f36fb47b4d059c49", "patch": "@@ -1,3 +1,7 @@\n+2016-06-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (process_type): Beef up comment.\n+\n 2016-06-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils2.c (build_call_alloc_dealloc): Do not substitute"}, {"sha": "c08be5454ae08809690d619f98e88ea4bcbdf68c", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4916beb895932ff9a68716f36fb47b4d059c49/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4916beb895932ff9a68716f36fb47b4d059c49/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=5a4916beb895932ff9a68716f36fb47b4d059c49", "patch": "@@ -9512,7 +9512,9 @@ process_type (Entity_Id gnat_entity)\n \n   /* If we saved away a dummy type for this node, it means that this made the\n      type that corresponds to the full type of an incomplete type.  Clear that\n-     type for now and then update the type in the pointers below.  */\n+     type for now and then update the type in the pointers below.  But, if the\n+     saved type is not dummy, it very likely means that we have a use before\n+     declaration for the type in the tree, what we really cannot handle.  */\n   if (gnu_old)\n     {\n       gcc_assert (TREE_CODE (gnu_old) == TYPE_DECL"}]}