{"sha": "5526a514c907d8c890a699df19b7ba9c2aa8c6ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUyNmE1MTRjOTA3ZDhjODkwYTY5OWRmMTliN2JhOWMyYWE4YzZhYg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-01-18T00:56:25Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-01-18T00:56:25Z"}, "message": "MessageFormat.java (scanString): Changed how quoting is handled.\n\n\t* java/text/MessageFormat.java (scanString): Changed how quoting\n\tis handled.\n\t(scanFormatElement): Likewise.\n\nFrom-SVN: r93804", "tree": {"sha": "91d52e97716fe3f8ba5e3ccdaaea8eafb88d5765", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91d52e97716fe3f8ba5e3ccdaaea8eafb88d5765"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5526a514c907d8c890a699df19b7ba9c2aa8c6ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5526a514c907d8c890a699df19b7ba9c2aa8c6ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5526a514c907d8c890a699df19b7ba9c2aa8c6ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5526a514c907d8c890a699df19b7ba9c2aa8c6ab/comments", "author": null, "committer": null, "parents": [{"sha": "e5cd33211701352d83422ef6c6b915cbc4ee3cd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5cd33211701352d83422ef6c6b915cbc4ee3cd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5cd33211701352d83422ef6c6b915cbc4ee3cd4"}], "stats": {"total": 58, "additions": 38, "deletions": 20}, "files": [{"sha": "1eb49d7289d8ac2de959eb296b84b61de3c34be0", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5526a514c907d8c890a699df19b7ba9c2aa8c6ab/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5526a514c907d8c890a699df19b7ba9c2aa8c6ab/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=5526a514c907d8c890a699df19b7ba9c2aa8c6ab", "patch": "@@ -1,3 +1,9 @@\n+2005-01-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/text/MessageFormat.java (scanString): Changed how quoting\n+\tis handled.\n+\t(scanFormatElement): Likewise.\n+\n 2004-12-07  Mark Wielaard  <mark@klomp.org>\n \n \t* java/text/MessageFormat.java (scanFormat): Chain thrown exception."}, {"sha": "6a031bc72543568520e69daf38f37eed7bf97b5a", "filename": "libjava/java/text/MessageFormat.java", "status": "modified", "additions": 32, "deletions": 20, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5526a514c907d8c890a699df19b7ba9c2aa8c6ab/libjava%2Fjava%2Ftext%2FMessageFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5526a514c907d8c890a699df19b7ba9c2aa8c6ab/libjava%2Fjava%2Ftext%2FMessageFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FMessageFormat.java?ref=5526a514c907d8c890a699df19b7ba9c2aa8c6ab", "patch": "@@ -1,5 +1,5 @@\n /* MessageFormat.java - Localized message formatting.\n-   Copyright (C) 1999, 2001, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2001, 2002, 2004, 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -193,27 +193,36 @@ private static int scanString(String pat, int index, StringBuffer buffer)\n   {\n     int max = pat.length();\n     buffer.setLength(0);\n+    boolean quoted = false;\n     for (; index < max; ++index)\n       {\n \tchar c = pat.charAt(index);\n-\tif (c == '\\'' && index + 2 < max && pat.charAt(index + 2) == '\\'')\n+\tif (quoted)\n \t  {\n-\t    buffer.append(pat.charAt(index + 1));\n-\t    index += 2;\n+\t    // In a quoted context, a single quote ends the quoting.\n+\t    if (c == '\\'')\n+\t      quoted = false;\n+\t    else\n+\t      buffer.append(c);\n \t  }\n-\telse if (c == '\\'' && index + 1 < max\n-\t\t && pat.charAt(index + 1) == '\\'')\n+\t// Check for '', which is a single quote.\n+\telse if (c == '\\'' && index + 1 < max && pat.charAt(index + 1) == '\\'')\n \t  {\n \t    buffer.append(c);\n \t    ++index;\n \t  }\n+\telse if (c == '\\'')\n+\t  {\n+\t    // Start quoting.\n+\t    quoted = true;\n+\t  }\n \telse if (c == '{')\n \t  break;\n-\telse if (c == '}')\n-\t  throw new IllegalArgumentException(\"Found '}' without '{'\");\n \telse\n \t  buffer.append(c);\n       }\n+    // Note that we explicitly allow an unterminated quote.  This is\n+    // done for compatibility.\n     return index;\n   }\n \n@@ -225,39 +234,42 @@ private static int scanFormatElement(String pat, int index,\n     int max = pat.length();\n     buffer.setLength(0);\n     int brace_depth = 1;\n+    boolean quoted = false;\n \n     for (; index < max; ++index)\n       {\n \tchar c = pat.charAt(index);\n-\tif (c == '\\'' && index + 2 < max && pat.charAt(index + 2) == '\\'')\n+\t// First see if we should turn off quoting.\n+\tif (quoted)\n \t  {\n-\t    buffer.append(c);\n-\t    buffer.append(pat.charAt(index + 1));\n-\t    buffer.append(c);\n-\t    index += 2;\n+\t    if (c == '\\'')\n+\t      quoted = false;\n+\t    // In both cases we fall through to inserting the\n+\t    // character here.\n \t  }\n+\t// See if we have just a plain quote to insert.\n \telse if (c == '\\'' && index + 1 < max\n \t\t && pat.charAt(index + 1) == '\\'')\n \t  {\n \t    buffer.append(c);\n \t    ++index;\n \t  }\n+\t// See if quoting should turn on.\n+\telse if (c == '\\'')\n+\t  quoted = true;\n \telse if (c == '{')\n-\t  {\n-\t    buffer.append(c);\n-\t    ++brace_depth;\n-\t  }\n+\t  ++brace_depth;\n \telse if (c == '}')\n \t  {\n \t    if (--brace_depth == 0)\n \t      break;\n-\t    buffer.append(c);\n \t  }\n \t// Check for TERM after braces, because TERM might be `}'.\n \telse if (c == term)\n \t  break;\n-\telse\n-\t  buffer.append(c);\n+\t// All characters, including opening and closing quotes, are\n+\t// inserted here.\n+\tbuffer.append(c);\n       }\n     return index;\n   }"}]}