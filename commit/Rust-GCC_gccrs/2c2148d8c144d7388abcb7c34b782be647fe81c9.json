{"sha": "2c2148d8c144d7388abcb7c34b782be647fe81c9", "node_id": "C_kwDOANBUbNoAKDJjMjE0OGQ4YzE0NGQ3Mzg4YWJjYjdjMzRiNzgyYmU2NDdmZTgxYzk", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-11-17T18:51:33Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-11-17T18:52:29Z"}, "message": "Handle folded nonconstant array bounds [PR101702]\n\nPR c/101702 - ICE: in handle_argspec_attribute, at c-family/c-attribs.c:3623\n\ngcc/c/ChangeLog:\n\n\tPR c/101702\n\t* c-decl.c (get_parm_array_spec): Strip casts earlier and fold array\n\tbounds before deciding if they're constant.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/101702\n\t* gcc.dg/Warray-parameter-11.c: New test.", "tree": {"sha": "ecea694a9449cb48b399d7a3d92eb62e406a223b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecea694a9449cb48b399d7a3d92eb62e406a223b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c2148d8c144d7388abcb7c34b782be647fe81c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c2148d8c144d7388abcb7c34b782be647fe81c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c2148d8c144d7388abcb7c34b782be647fe81c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c2148d8c144d7388abcb7c34b782be647fe81c9/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3a9082d7acc3ef443de6f14a16e7063d92844b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a9082d7acc3ef443de6f14a16e7063d92844b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3a9082d7acc3ef443de6f14a16e7063d92844b1"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "63d806a84c9d2d619611a24390ebe95ed3d208bf", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c2148d8c144d7388abcb7c34b782be647fe81c9/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c2148d8c144d7388abcb7c34b782be647fe81c9/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=2c2148d8c144d7388abcb7c34b782be647fe81c9", "patch": "@@ -5866,6 +5866,12 @@ get_parm_array_spec (const struct c_parm *parm, tree attrs)\n       if (pd->u.array.static_p)\n \tspec += 's';\n \n+      if (!INTEGRAL_TYPE_P (TREE_TYPE (nelts)))\n+\t/* Avoid invalid NELTS.  */\n+\treturn attrs;\n+\n+      STRIP_NOPS (nelts);\n+      nelts = c_fully_fold (nelts, false, nullptr);\n       if (TREE_CODE (nelts) == INTEGER_CST)\n \t{\n \t  /* Skip all constant bounds except the most significant one.\n@@ -5883,13 +5889,9 @@ get_parm_array_spec (const struct c_parm *parm, tree attrs)\n \t  spec += buf;\n \t  break;\n \t}\n-      else if (!INTEGRAL_TYPE_P (TREE_TYPE (nelts)))\n-\t/* Avoid invalid NELTS.  */\n-\treturn attrs;\n \n       /* Each variable VLA bound is represented by a dollar sign.  */\n       spec += \"$\";\n-      STRIP_NOPS (nelts);\n       vbchain = tree_cons (NULL_TREE, nelts, vbchain);\n     }\n "}, {"sha": "8ca1b55bd28c8cf8ab7ab480c6479556cb4226ed", "filename": "gcc/testsuite/gcc.dg/Warray-parameter-11.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c2148d8c144d7388abcb7c34b782be647fe81c9/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-parameter-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c2148d8c144d7388abcb7c34b782be647fe81c9/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-parameter-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-parameter-11.c?ref=2c2148d8c144d7388abcb7c34b782be647fe81c9", "patch": "@@ -0,0 +1,24 @@\n+/* PR c/101702 - ICE on invalid function redeclaration\n+   { dg-do compile }\n+   { dg-options \"-Wall\" } */\n+\n+typedef __INTPTR_TYPE__ intptr_t;\n+\n+#define copysign(x, y) __builtin_copysign (x, y)\n+\n+void f0 (double[!copysign (~2, 3)]);\n+\n+void f1 (double[!copysign (~2, 3)]);\n+void f1 (double[1]);                    // { dg-warning \"-Warray-parameter\" }\n+\n+void f2 (int[(int)+1.0]);\n+void f2 (int[(int)+1.1]);\n+\n+/* Also verify that equivalent expressions don't needlessly cause false\n+   positives or negatives.  */\n+struct S { int a[1]; };\n+extern struct S *sp;\n+\n+void f3 (int[(intptr_t)((char*)sp->a - (char*)sp)]);\n+void f3 (int[(intptr_t)((char*)&sp->a[0] - (char*)sp)]);\n+void f3 (int[(intptr_t)((char*)&sp->a[1] - (char*)sp)]);   // { dg-warning \"-Warray-parameter\" }"}]}