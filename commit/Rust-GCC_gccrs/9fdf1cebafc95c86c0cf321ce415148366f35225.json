{"sha": "9fdf1cebafc95c86c0cf321ce415148366f35225", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZkZjFjZWJhZmM5NWM4NmMwY2YzMjFjZTQxNTE0ODM2NmYzNTIyNQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-05-30T09:56:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-15T13:42:42Z"}, "message": "[Ada] Fix slices and qualified expressions being effectively volatile\n\ngcc/ada/\n\n\t* exp_ch5.adb (Expand_Assign_Array): Use short-circuit operator\n\t(style).\n\t* sem_res.adb (Resolve_Indexed_Component): Fix style in comment.\n\t* sem_util.adb (Is_Effectively_Volatile_Object): Handle slices\n\tjust like indexed components; handle qualified expressions and\n\ttype conversions lie in Is_OK_Volatile_Context.\n\t(Is_OK_Volatile_Context): Handle qualified expressions just like\n\ttype conversions.", "tree": {"sha": "52876d4ad1db7283d071812dc3b1d870cd10ad46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52876d4ad1db7283d071812dc3b1d870cd10ad46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fdf1cebafc95c86c0cf321ce415148366f35225", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fdf1cebafc95c86c0cf321ce415148366f35225", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fdf1cebafc95c86c0cf321ce415148366f35225", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fdf1cebafc95c86c0cf321ce415148366f35225/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98e663f5979ad0686d7ed79a3c8ff7445f5fab18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e663f5979ad0686d7ed79a3c8ff7445f5fab18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98e663f5979ad0686d7ed79a3c8ff7445f5fab18"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "afd3bca50141b841cc92db728b4aad060cdf153e", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdf1cebafc95c86c0cf321ce415148366f35225/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdf1cebafc95c86c0cf321ce415148366f35225/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=9fdf1cebafc95c86c0cf321ce415148366f35225", "patch": "@@ -1521,7 +1521,7 @@ package body Exp_Ch5 is\n       --  be assigned.\n \n       elsif Possible_Bit_Aligned_Component (Lhs)\n-              or\n+              or else\n             Possible_Bit_Aligned_Component (Rhs)\n       then\n          null;"}, {"sha": "8b2f23c63404d1a5f2d25a20f4d00dd495774a08", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdf1cebafc95c86c0cf321ce415148366f35225/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdf1cebafc95c86c0cf321ce415148366f35225/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=9fdf1cebafc95c86c0cf321ce415148366f35225", "patch": "@@ -9155,7 +9155,7 @@ package body Sem_Res is\n          Array_Type := Implicitly_Designated_Type (Array_Type);\n       end if;\n \n-      --  If name was overloaded, set component type correctly now\n+      --  If name was overloaded, set component type correctly now.\n       --  If a misplaced call to an entry family (which has no index types)\n       --  return. Error will be diagnosed from calling context.\n "}, {"sha": "93447cc0844ea70c17b0f8c3663badebc3de00ee", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fdf1cebafc95c86c0cf321ce415148366f35225/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fdf1cebafc95c86c0cf321ce415148366f35225/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=9fdf1cebafc95c86c0cf321ce415148366f35225", "patch": "@@ -15676,7 +15676,7 @@ package body Sem_Util is\n          return Is_Object (Entity (N))\n            and then Is_Effectively_Volatile (Entity (N));\n \n-      elsif Nkind (N) = N_Indexed_Component then\n+      elsif Nkind_In (N, N_Indexed_Component, N_Slice) then\n          return Is_Effectively_Volatile_Object (Prefix (N));\n \n       elsif Nkind (N) = N_Selected_Component then\n@@ -15685,6 +15685,12 @@ package body Sem_Util is\n              or else\n            Is_Effectively_Volatile_Object (Selector_Name (N));\n \n+      elsif Nkind_In (N, N_Qualified_Expression,\n+                         N_Unchecked_Type_Conversion,\n+                         N_Type_Conversion)\n+      then\n+         return Is_Effectively_Volatile_Object (Expression (N));\n+\n       else\n          return False;\n       end if;\n@@ -17497,7 +17503,8 @@ package body Sem_Util is\n       --  The volatile object appears as the expression of a type conversion\n       --  occurring in a non-interfering context.\n \n-      elsif Nkind_In (Context, N_Type_Conversion,\n+      elsif Nkind_In (Context, N_Qualified_Expression,\n+                               N_Type_Conversion,\n                                N_Unchecked_Type_Conversion)\n         and then Expression (Context) = Obj_Ref\n         and then Is_OK_Volatile_Context"}]}