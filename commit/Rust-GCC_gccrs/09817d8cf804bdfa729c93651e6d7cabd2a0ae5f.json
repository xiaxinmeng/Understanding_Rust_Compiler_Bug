{"sha": "09817d8cf804bdfa729c93651e6d7cabd2a0ae5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk4MTdkOGNmODA0YmRmYTcyOWM5MzY1MWU2ZDdjYWJkMmEwYWU1Zg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-04-18T22:25:17Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-04-18T22:25:17Z"}, "message": "(sys/lc_core.h): Fix OSF1/4.x namespace pollution.\n\nFrom-SVN: r13932", "tree": {"sha": "f52ec59e35efd5013854afeae55d977e359cb118", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f52ec59e35efd5013854afeae55d977e359cb118"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09817d8cf804bdfa729c93651e6d7cabd2a0ae5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09817d8cf804bdfa729c93651e6d7cabd2a0ae5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09817d8cf804bdfa729c93651e6d7cabd2a0ae5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09817d8cf804bdfa729c93651e6d7cabd2a0ae5f/comments", "author": null, "committer": null, "parents": [{"sha": "732b08f1e9ed6a48f34d1d31562314d59f2d284e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/732b08f1e9ed6a48f34d1d31562314d59f2d284e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/732b08f1e9ed6a48f34d1d31562314d59f2d284e"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "cdb25b20d28c16e92d18d83136139514e766ef9a", "filename": "gcc/fixincludes", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09817d8cf804bdfa729c93651e6d7cabd2a0ae5f/gcc%2Ffixincludes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09817d8cf804bdfa729c93651e6d7cabd2a0ae5f/gcc%2Ffixincludes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixincludes?ref=09817d8cf804bdfa729c93651e6d7cabd2a0ae5f", "patch": "@@ -2809,6 +2809,57 @@ if [ -r ${LIB}/$file ]; then\n   fi\n fi\n \n+# sys/lc_core.h on some versions of OSF1/4.x pollutes the namespace by\n+# defining regex.h related types.  This causes libg++ build and usage failures.\n+# Fixing this correctly requires checking and modifying 3 files.\n+for file in reg_types.h regex.h sys/lc_core.h; do\n+  if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n+    cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n+    chmod +w ${LIB}/$file 2>/dev/null\n+    chmod a+r ${LIB}/$file 2>/dev/null\n+  fi\n+done\n+if [ -r ${LIB}/reg_types.h ]; then\n+  if egrep '} regex_t;' ${LIB}/reg_types.h >/dev/null 2>&1; then\n+    if [ -r ${LIB}/sys/lc_core.h ]; then\n+      if egrep ' regex_t ' ${LIB}/sys/lc_core.h >/dev/null 2>&1; then\n+        if [ -r ${LIB}/regex.h ]; then\n+\t  if egrep '__regex_t' ${LIB}/regex.h >/dev/null 2>&1; then\n+\t    true;\n+\t  else\n+\t    echo Fixing reg_types.h, regex.h, sys/lc_core.h\n+\t    for file in reg_types.h sys/lc_core.h; do\n+\t      sed -e 's/regex_t/__regex_t/g' \\\n+\t        -e 's/regoff_t/__regoff_t/g' \\\n+\t\t-e 's/regmatch_t/__regmatch_t/g' \\\n+\t\t${LIB}/$file > ${LIB}/${file}.sed\n+\t      rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n+\t    done\n+\t    sed -e '/#include <reg_types.h>/a\\\n+typedef __regex_t\tregex_t;\\\n+typedef __regoff_t\tregoff_t;\\\n+typedef __regmatch_t\tregmatch_t;\\\n+' \\\n+\t      ${LIB}/regex.h > ${LIB}/regex.h.sed\n+\t    rm -f ${LIB}/regex.h; mv ${LIB}/regex.h.sed ${LIB}/regex.h\n+\t  fi\n+\tfi\n+      fi\n+    fi\n+  fi\n+fi\n+for file in reg_types.h regex.h sys/lc_core.h; do\n+  if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n+    rm -f ${LIB}/$file\n+  else\n+    # Find any include directives that use \"file\".\n+    for include in `egrep '^[       ]*#[    ]*include[      ]*\"[^/]' ${LIB}/$file | sed -e 's/^[    ]*#[    ]*include[      ]*\"\\([^\"]*\\)\".*$/\\1/'`; do\n+      dir=`echo $file | sed -e s'|/[^/]*$||'`\n+      required=\"$required ${INPUT} $dir/$include ${LIB}/$dir/$include\"\n+    done\n+  fi\n+done\n+\n # This loop does not appear to do anything, because it uses file\n # rather than $file when setting target.  It also appears to be\n # unnecessary, since the main loop processes symbolic links."}]}