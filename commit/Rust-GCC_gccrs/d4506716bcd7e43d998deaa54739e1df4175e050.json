{"sha": "d4506716bcd7e43d998deaa54739e1df4175e050", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ1MDY3MTZiY2Q3ZTQzZDk5OGRlYWE1NDczOWUxZGY0MTc1ZTA1MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-09-19T08:42:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-26T08:59:12Z"}, "message": "[Ada] Another small edition to documentation of Ada.Text_IO.Fixed_IO\n\ngcc/ada/\n\n\t* libgnat/a-tifiio.adb: Move around documentaton paragraph.", "tree": {"sha": "e3a69f9acde64cce583558470191eb83a81c80cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3a69f9acde64cce583558470191eb83a81c80cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4506716bcd7e43d998deaa54739e1df4175e050", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4506716bcd7e43d998deaa54739e1df4175e050", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4506716bcd7e43d998deaa54739e1df4175e050", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4506716bcd7e43d998deaa54739e1df4175e050/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acd4ef9df257ce400c5eabfa9ab92a1b3196e090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd4ef9df257ce400c5eabfa9ab92a1b3196e090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd4ef9df257ce400c5eabfa9ab92a1b3196e090"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "f6777f672988f51d6dc9781030187a00305d654d", "filename": "gcc/ada/libgnat/a-tifiio.adb", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4506716bcd7e43d998deaa54739e1df4175e050/gcc%2Fada%2Flibgnat%2Fa-tifiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4506716bcd7e43d998deaa54739e1df4175e050/gcc%2Fada%2Flibgnat%2Fa-tifiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tifiio.adb?ref=d4506716bcd7e43d998deaa54739e1df4175e050", "patch": "@@ -140,21 +140,6 @@\n --  solution. The downside however may be a too limited set of acceptable\n --  fixed point types.\n \n---  Extra Precision\n---  ---------------\n-\n---  Using a scaled divide which truncates and returns a remainder R,\n---  another E trailing digits can be calculated by computing the value\n---  (R * (10.0**E)) / Z using another scaled divide. This procedure\n---  can be repeated to compute an arbitrary number of digits in linear\n---  time and storage. The last scaled divide should be rounded, with\n---  a possible carry propagating to the more significant digits, to\n---  ensure correct rounding of the unit in the last place.\n-\n---  An extension of this technique is to limit the value of Q to 9 decimal\n---  digits, since 32-bit integers can be much more efficient than 64-bit\n---  integers to output.\n-\n with Interfaces;                        use Interfaces;\n with System.Arith_64;                   use System.Arith_64;\n with System.Img_Real;                   use System.Img_Real;\n@@ -260,6 +245,20 @@ package body Ada.Text_IO.Fixed_IO is\n    --  in the denominator for the extra decimal scaling required, so case (3)\n    --  will not overflow.\n \n+   --  Extra Precision\n+\n+   --  Using a scaled divide which truncates and returns a remainder R,\n+   --  another E trailing digits can be calculated by computing the value\n+   --  (R * (10.0**E)) / Z using another scaled divide. This procedure\n+   --  can be repeated to compute an arbitrary number of digits in linear\n+   --  time and storage. The last scaled divide should be rounded, with\n+   --  a possible carry propagating to the more significant digits, to\n+   --  ensure correct rounding of the unit in the last place.\n+\n+   --  A variant of this technique is to limit the value of Q to 9 decimal\n+   --  digits, since 32-bit integers can be much more efficient than 64-bit\n+   --  integers to output.\n+\n    pragma Assert (System.Fine_Delta >= 2.0**(-63));\n    pragma Assert (Num'Small in 2.0**(-80) .. 2.0**80);\n    pragma Assert (Num'Fore <= 37);"}]}