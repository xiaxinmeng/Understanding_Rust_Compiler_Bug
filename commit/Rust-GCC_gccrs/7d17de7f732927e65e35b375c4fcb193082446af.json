{"sha": "7d17de7f732927e65e35b375c4fcb193082446af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QxN2RlN2Y3MzI5MjdlNjVlMzViMzc1YzRmY2IxOTMwODI0NDZhZg==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2015-06-23T19:51:02Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2015-06-23T19:51:02Z"}, "message": "array: Include <array>.\n\n2015-06-23  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* include/debug/array: Include <array>. Add version namespace when\n\tspecializing tuple interface to array. Add specialization for\n\t__is_tuple_like_impl.\n\t* include/profile/array: Likewise.\n\t* include/std/array: Include <utility>. Add specialization for\n\t__is_tuple_like_impl.\n\t* include/std/tuple\n\t(__is_tuple_like_impl<>, __is_tuple_like_impl<pair>): Move...\n\t* include/std/utility: ... here. Include <type_traits>.\n\t* testsuite/23_containers/array/tuple_interface/get_debug_neg.cc: Adjust\n\tdg-error line number.\n\t* testsuite/23_containers/array/tuple_interface/\n\ttuple_element_debug_neg.cc: Likewise.\n\nFrom-SVN: r224857", "tree": {"sha": "77923caf4451a4a86c16523c0a78d15127fb32c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77923caf4451a4a86c16523c0a78d15127fb32c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d17de7f732927e65e35b375c4fcb193082446af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d17de7f732927e65e35b375c4fcb193082446af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d17de7f732927e65e35b375c4fcb193082446af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d17de7f732927e65e35b375c4fcb193082446af/comments", "author": null, "committer": null, "parents": [{"sha": "0fa16060ed17132d27f7884fd7a8c7bee4aa29b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa16060ed17132d27f7884fd7a8c7bee4aa29b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fa16060ed17132d27f7884fd7a8c7bee4aa29b4"}], "stats": {"total": 79, "additions": 58, "deletions": 21}, "files": [{"sha": "ea6dc8833ebb8a1536e105d4abf4e1ef0cb140d5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7d17de7f732927e65e35b375c4fcb193082446af", "patch": "@@ -1,3 +1,19 @@\n+2015-06-23  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/debug/array: Include <array>. Add version namespace when\n+\tspecializing tuple interface to array. Add specialization for\n+\t__is_tuple_like_impl.\n+\t* include/profile/array: Likewise.\n+\t* include/std/array: Include <utility>. Add specialization for\n+\t__is_tuple_like_impl.\n+\t* include/std/tuple\n+\t(__is_tuple_like_impl<>, __is_tuple_like_impl<pair>): Move...\n+\t* include/std/utility: ... here. Include <type_traits>.\n+\t* testsuite/23_containers/array/tuple_interface/get_debug_neg.cc: Adjust\n+\tdg-error line number.\n+\t* testsuite/23_containers/array/tuple_interface/\n+\ttuple_element_debug_neg.cc: Likewise.\n+\n 2015-06-22  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/26_numerics/complex/value_operations/1.cc: Use"}, {"sha": "a1c7d408beee73798ed9a9d1458994bb01806d4d", "filename": "libstdc++-v3/include/debug/array", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Farray?ref=7d17de7f732927e65e35b375c4fcb193082446af", "patch": "@@ -31,6 +31,8 @@\n \n #pragma GCC system_header\n \n+#include <array>\n+\n #include <debug/formatter.h>\n #include <debug/macros.h>\n \n@@ -292,20 +294,27 @@ namespace __debug\n     }\n } // namespace __debug\n \n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // Tuple interface to class template array.\n \n   /// tuple_size\n   template<typename _Tp, std::size_t _Nm>\n-    struct tuple_size<__debug::array<_Tp, _Nm>>\n+    struct tuple_size<std::__debug::array<_Tp, _Nm>>\n     : public integral_constant<std::size_t, _Nm> { };\n \n   /// tuple_element\n   template<std::size_t _Int, typename _Tp, std::size_t _Nm>\n-    struct tuple_element<_Int, __debug::array<_Tp, _Nm>>\n+    struct tuple_element<_Int, std::__debug::array<_Tp, _Nm>>\n     {\n       static_assert(_Int < _Nm, \"index is out of bounds\");\n       typedef _Tp type;\n     };\n+\n+  template<typename _Tp, std::size_t _Nm>\n+    struct __is_tuple_like_impl<std::__debug::array<_Tp, _Nm>> : true_type\n+    { };\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n \n #endif // _GLIBCXX_DEBUG_ARRAY"}, {"sha": "687c0525357473020ba07b49885563c8e99ef702", "filename": "libstdc++-v3/include/profile/array", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Farray?ref=7d17de7f732927e65e35b375c4fcb193082446af", "patch": "@@ -31,6 +31,8 @@\n \n #pragma GCC system_header\n \n+#include <array>\n+\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n namespace __profile\n@@ -253,20 +255,27 @@ namespace __profile\n     }\n } // namespace __profile\n \n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // Tuple interface to class template array.\n \n   /// tuple_size\n   template<typename _Tp, std::size_t _Nm>\n-    struct tuple_size<__profile::array<_Tp, _Nm>>\n+    struct tuple_size<std::__profile::array<_Tp, _Nm>>\n     : public integral_constant<std::size_t, _Nm> { };\n \n   /// tuple_element\n   template<std::size_t _Int, typename _Tp, std::size_t _Nm>\n-    struct tuple_element<_Int, __profile::array<_Tp, _Nm>>\n+    struct tuple_element<_Int, std::__profile::array<_Tp, _Nm>>\n     {\n       static_assert(_Int < _Nm, \"index is out of bounds\");\n       typedef _Tp type;\n     };\n+\n+  template<typename _Tp, std::size_t _Nm>\n+    struct __is_tuple_like_impl<std::__profile::array<_Tp, _Nm>> : true_type\n+    { };\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n \n #endif // _GLIBCXX_PROFILE_ARRAY"}, {"sha": "d1b5e6db3472186de5d639285b59bf374407e594", "filename": "libstdc++-v3/include/std/array", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray?ref=7d17de7f732927e65e35b375c4fcb193082446af", "patch": "@@ -35,6 +35,7 @@\n # include <bits/c++0x_warning.h>\n #else\n \n+#include <utility>\n #include <stdexcept>\n #include <bits/stl_algobase.h>\n #include <bits/range_access.h>\n@@ -331,6 +332,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef _Tp type;\n     };\n \n+  template<typename _Tp, std::size_t _Nm>\n+    struct __is_tuple_like_impl<_GLIBCXX_STD_C::array<_Tp, _Nm>> : true_type\n+    { };\n+\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n "}, {"sha": "0504012cbd19a6107f143e849b3a1f331246a6af", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=7d17de7f732927e65e35b375c4fcb193082446af", "patch": "@@ -976,22 +976,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     forward_as_tuple(_Elements&&... __args) noexcept\n     { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }\n \n-  template<typename>\n-    struct __is_tuple_like_impl : false_type\n-    { };\n-\n   template<typename... _Tps>\n     struct __is_tuple_like_impl<tuple<_Tps...>> : true_type\n     { };\n \n-  template<typename _T1, typename _T2>\n-    struct __is_tuple_like_impl<pair<_T1, _T2>> : true_type\n-    { };\n-\n-  template<typename _Tp, std::size_t _Nm>\n-    struct __is_tuple_like_impl<_GLIBCXX_STD_C::array<_Tp, _Nm>> : true_type\n-    { };\n-\n   // Internal type trait that allows us to sfinae-protect tuple_cat.\n   template<typename _Tp>\n     struct __is_tuple_like"}, {"sha": "89b68522ddf0b8399c328fe7da5948158f701bf9", "filename": "libstdc++-v3/include/std/utility", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility?ref=7d17de7f732927e65e35b375c4fcb193082446af", "patch": "@@ -71,6 +71,7 @@\n \n #if __cplusplus >= 201103L\n \n+#include <type_traits>\n #include <bits/move.h>\n #include <initializer_list>\n \n@@ -84,7 +85,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<std::size_t _Int, class _Tp>\n     class tuple_element;\n \n-   // Various functions which give std::pair a tuple-like interface.\n+  template<typename>\n+    struct __is_tuple_like_impl : false_type\n+    { };\n+\n+  // Various functions which give std::pair a tuple-like interface.\n+\n+  /// Partial specialization for std::pair\n+  template<typename _T1, typename _T2>\n+    struct __is_tuple_like_impl<std::pair<_T1, _T2>> : true_type\n+    { };\n \n   /// Partial specialization for std::pair\n   template<class _Tp1, class _Tp2>"}, {"sha": "bc5c726b836887adcdcd81da22bf59a40a6f3266", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/get_debug_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Fget_debug_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Fget_debug_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Fget_debug_neg.cc?ref=7d17de7f732927e65e35b375c4fcb193082446af", "patch": "@@ -28,6 +28,6 @@ int n1 = std::get<1>(a);\n int n2 = std::get<1>(std::move(a));\n int n3 = std::get<1>(ca);\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 272 }\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 281 }\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 289 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 274 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 283 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 291 }"}, {"sha": "a27f3e238462d4ff2cef158958a266e9c3624d2e", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/tuple_element_debug_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element_debug_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d17de7f732927e65e35b375c4fcb193082446af/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element_debug_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element_debug_neg.cc?ref=7d17de7f732927e65e35b375c4fcb193082446af", "patch": "@@ -23,4 +23,4 @@\n \n typedef std::tuple_element<1, std::array<int, 1>>::type type;\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 306 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 309 }"}]}