{"sha": "751d985534820f549c59935311cc26282e2b37bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUxZDk4NTUzNDgyMGY1NDljNTk5MzUzMTFjYzI2MjgyZTJiMzdiYg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2007-03-10T01:34:23Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2007-03-10T01:34:23Z"}, "message": "pa.c (attr_length_call): Revise condition for long pc-relative branch.\n\n\t* pa.c (attr_length_call): Revise condition for long pc-relative branch.\n\t(output_call): Use \"LONG_PIC_SDIFF\" instruction sequence for long local\n\tcalls on the SOM target.  Don't use \"LONG_PIC_PCREL\" call sequence on\n\tSOM target.\n\nFrom-SVN: r122784", "tree": {"sha": "a5eca2e9d0bf1bbbe48011f7dc7d60eaf048d758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5eca2e9d0bf1bbbe48011f7dc7d60eaf048d758"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/751d985534820f549c59935311cc26282e2b37bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/751d985534820f549c59935311cc26282e2b37bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/751d985534820f549c59935311cc26282e2b37bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/751d985534820f549c59935311cc26282e2b37bb/comments", "author": null, "committer": null, "parents": [{"sha": "48137d59c3cf49628dee903213567c9556cb6adb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48137d59c3cf49628dee903213567c9556cb6adb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48137d59c3cf49628dee903213567c9556cb6adb"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "7e7e061146a695779bb11873193b17abe857c7a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/751d985534820f549c59935311cc26282e2b37bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/751d985534820f549c59935311cc26282e2b37bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=751d985534820f549c59935311cc26282e2b37bb", "patch": "@@ -1,3 +1,10 @@\n+2007-03-09  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.c (attr_length_call): Revise condition for long pc-relative branch.\n+\t(output_call): Use \"LONG_PIC_SDIFF\" instruction sequence for long local\n+\tcalls on the SOM target.  Don't use \"LONG_PIC_PCREL\" call sequence on\n+\tSOM target.\n+\n 2007-03-09  Geoffrey Keating  <geoffk@apple.com>\n \n \t* gcc.c: Document %{, in big comment at top."}, {"sha": "c69652020cbd962691c9ab9631f0532253418ce5", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/751d985534820f549c59935311cc26282e2b37bb/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/751d985534820f549c59935311cc26282e2b37bb/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=751d985534820f549c59935311cc26282e2b37bb", "patch": "@@ -7273,9 +7273,10 @@ attr_length_call (rtx insn, int sibcall)\n     length += 12;\n \n   /* long pc-relative branch sequence.  */\n-  else if ((TARGET_SOM && TARGET_LONG_PIC_SDIFF_CALL)\n+  else if ((TARGET_SOM && (TARGET_LONG_PIC_SDIFF_CALL || local_call))\n \t   || (TARGET_64BIT && !TARGET_GAS)\n-\t   || (TARGET_GAS && (TARGET_LONG_PIC_PCREL_CALL || local_call)))\n+\t   || (TARGET_GAS && !TARGET_SOM\n+\t       && (TARGET_LONG_PIC_PCREL_CALL || local_call)))\n     {\n       length += 20;\n \n@@ -7385,8 +7386,9 @@ output_call (rtx insn, rtx call_dest, int sibcall)\n \t     of increasing length and complexity.  In most cases,\n              they don't allow an instruction in the delay slot.  */\n \t  if (!((TARGET_LONG_ABS_CALL || local_call) && !flag_pic)\n-\t      && !(TARGET_SOM && TARGET_LONG_PIC_SDIFF_CALL)\n-\t      && !(TARGET_GAS && (TARGET_LONG_PIC_PCREL_CALL || local_call))\n+\t      && !(TARGET_SOM && (TARGET_LONG_PIC_SDIFF_CALL || local_call))\n+\t      && !(TARGET_GAS && !TARGET_SOM\n+\t\t   && (TARGET_LONG_PIC_PCREL_CALL || local_call))\n \t      && !TARGET_64BIT)\n \t    indirect_call = 1;\n \n@@ -7432,7 +7434,7 @@ output_call (rtx insn, rtx call_dest, int sibcall)\n \t    }\n \t  else\n \t    {\n-\t      if ((TARGET_SOM && TARGET_LONG_PIC_SDIFF_CALL)\n+\t      if ((TARGET_SOM && (TARGET_LONG_PIC_SDIFF_CALL || local_call))\n \t\t  || (TARGET_64BIT && !TARGET_GAS))\n \t\t{\n \t\t  /* The HP assembler and linker can handle relocations\n@@ -7446,7 +7448,8 @@ output_call (rtx insn, rtx call_dest, int sibcall)\n \t\t\t\t\t     CODE_LABEL_NUMBER (xoperands[1]));\n \t\t  output_asm_insn (\"ldo R'%0-%l1(%%r1),%%r1\", xoperands);\n \t\t}\n-\t      else if (TARGET_GAS && (TARGET_LONG_PIC_PCREL_CALL || local_call))\n+\t      else if (TARGET_GAS && !TARGET_SOM\n+\t\t       && (TARGET_LONG_PIC_PCREL_CALL || local_call))\n \t\t{\n \t\t  /*  GAS currently can't generate the relocations that\n \t\t      are needed for the SOM linker under HP-UX using this"}]}