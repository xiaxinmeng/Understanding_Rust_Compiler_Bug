{"sha": "9f4c41147a41d08a74990eafe69a1064a3c13435", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY0YzQxMTQ3YTQxZDA4YTc0OTkwZWFmZTY5YTEwNjRhM2MxMzQzNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-05T18:26:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-05T19:38:40Z"}, "message": "c++: enum in generic lambda in template [PR95317]\n\nHere we weren't instantiating the enumerators because the arglist still had\nthe template parameter for the generic lambda, so looking one up failed.  We\nneed to instantiate if the non-lambda enclosing scope is non-dependent.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/95317\n\t* pt.c (lookup_template_class_1): Do tsubst_enum when\n\ttsubsting a generic lambda.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/95317\n\t* g++.dg/cpp1y/lambda-generic-enum1.C: New test.", "tree": {"sha": "08e89d70528811b8da24ef88296eb7eaf06a50ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08e89d70528811b8da24ef88296eb7eaf06a50ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f4c41147a41d08a74990eafe69a1064a3c13435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4c41147a41d08a74990eafe69a1064a3c13435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f4c41147a41d08a74990eafe69a1064a3c13435", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4c41147a41d08a74990eafe69a1064a3c13435/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62d60246e53778db6ee613377dd013ba4b264968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d60246e53778db6ee613377dd013ba4b264968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62d60246e53778db6ee613377dd013ba4b264968"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "41bc633cfceadbe7641783d07f47a57cd244ccc0", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4c41147a41d08a74990eafe69a1064a3c13435/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4c41147a41d08a74990eafe69a1064a3c13435/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=9f4c41147a41d08a74990eafe69a1064a3c13435", "patch": "@@ -10173,7 +10173,8 @@ lookup_template_class_1 (tree d1, tree arglist, tree in_decl, tree context,\n \t= tree_cons (arglist, t,\n \t\t     DECL_TEMPLATE_INSTANTIATIONS (found));\n \n-      if (TREE_CODE (template_type) == ENUMERAL_TYPE && !is_dependent_type\n+      if (TREE_CODE (template_type) == ENUMERAL_TYPE\n+\t  && !uses_template_parms (current_nonlambda_scope ())\n \t  && !DECL_ALIAS_TEMPLATE_P (gen_tmpl))\n \t/* Now that the type has been registered on the instantiations\n \t   list, we set up the enumerators.  Because the enumeration"}, {"sha": "de15443bfcff16d4a0e6e3ce36361c5db33401ff", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-enum1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4c41147a41d08a74990eafe69a1064a3c13435/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-enum1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4c41147a41d08a74990eafe69a1064a3c13435/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-enum1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-enum1.C?ref=9f4c41147a41d08a74990eafe69a1064a3c13435", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/95317\n+// { dg-do compile { target c++14 } }\n+\n+template <typename> void fn1() {\n+  [](auto) {\n+    enum { VALUE };\n+    VALUE;\n+  };\n+}\n+int main() { fn1<void>; }"}]}