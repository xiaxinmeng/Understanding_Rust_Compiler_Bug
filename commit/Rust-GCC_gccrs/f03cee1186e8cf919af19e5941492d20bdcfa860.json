{"sha": "f03cee1186e8cf919af19e5941492d20bdcfa860", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAzY2VlMTE4NmU4Y2Y5MTlhZjE5ZTU5NDE0OTJkMjBiZGNmYTg2MA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2014-11-12T21:50:20Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2014-11-12T21:50:20Z"}, "message": "Use gen_rtx_REG to set pic_offset_table_rtx\n\n\t* config/i386/i386.c (x86_output_mi_thunk): Use gen_rtx_REG to\n\tset pic_offset_table_rtx.\n\nFrom-SVN: r217448", "tree": {"sha": "02fef18fe76329ee87494c3915f9796744a55ea8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02fef18fe76329ee87494c3915f9796744a55ea8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f03cee1186e8cf919af19e5941492d20bdcfa860", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03cee1186e8cf919af19e5941492d20bdcfa860", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f03cee1186e8cf919af19e5941492d20bdcfa860", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03cee1186e8cf919af19e5941492d20bdcfa860/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "050af1445b878d2a8a070f4c2ad602cbe80f8d73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/050af1445b878d2a8a070f4c2ad602cbe80f8d73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/050af1445b878d2a8a070f4c2ad602cbe80f8d73"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "15a55c069f435907fc068d40a4d5d1a1118c6299", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03cee1186e8cf919af19e5941492d20bdcfa860/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03cee1186e8cf919af19e5941492d20bdcfa860/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f03cee1186e8cf919af19e5941492d20bdcfa860", "patch": "@@ -1,3 +1,8 @@\n+2014-11-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.c (x86_output_mi_thunk): Use gen_rtx_REG to\n+\tset pic_offset_table_rtx.\n+\n 2014-11-12  Matthew Fortune  <matthew.fortune@imgtec.com>\n \n \t* common/config/mips/mips-common.c (mips_handle_option): Ensure"}, {"sha": "b70c56c600b2534d4fd6430454e04c3a14b0f3eb", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03cee1186e8cf919af19e5941492d20bdcfa860/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03cee1186e8cf919af19e5941492d20bdcfa860/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f03cee1186e8cf919af19e5941492d20bdcfa860", "patch": "@@ -42697,7 +42697,7 @@ x86_output_mi_thunk (FILE *file, tree, HOST_WIDE_INT delta,\n \t  // uninitialized.  Since FUNCTION is local and calling it\n \t  // doesn't go through PLT, we use scratch register %r11 as\n \t  // PIC register and initialize it here.\n-\t  SET_REGNO (pic_offset_table_rtx, R11_REG);\n+\t  pic_offset_table_rtx = gen_rtx_REG (Pmode, R11_REG);\n \t  ix86_init_large_pic_reg (tmp_regno);\n \t  fnaddr = legitimize_pic_address (fnaddr,\n \t\t\t\t\t   gen_rtx_REG (Pmode, tmp_regno));"}]}