{"sha": "6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "node_id": "C_kwDOANBUbNoAKDZhNmYyY2JmOWFiMzY2ZWEzOGNiZTRjOGQ1NzQ0ODZjZTJiYmU4NzM", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-12-03T20:51:54Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-12-06T04:59:58Z"}, "message": "testsuite, X86, Darwin: Fix bf16 ABI tests for Mach-O/MacOS ABI.\n\nThese tests have failed since introduction since they assume that the\nassembler output is ELF and that the ABI targeted supports the addressing.\n\nFor Darwin, Mach-O and ABI we need to make several changes:\n1. Use the __USER_LABEL__PREFIX__\n2. Remove the use of ELF-specific constructs (.size, .type etc.)\n3. We cannot make direct access to common variables in the ABI, so that we\n   must move these to BSS.\n\nThese changes are made in darwin-specific asm files.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/x86_64/abi/bf16/abi-bf16.exp: Use separate asm for Darwin.\n\t* gcc.target/x86_64/abi/bf16/m256bf16/abi-bf16-ymm.exp: Likewise.\n\t* gcc.target/x86_64/abi/bf16/m512bf16/abi-bf16-zmm.exp: Likewise.\n\t* gcc.target/x86_64/abi/bf16/args.h: Make xmm_regs, x87_regs extern.\n\t* gcc.target/x86_64/abi/bf16/m256bf16/args.h: Likewise.\n\t* gcc.target/x86_64/abi/bf16/m512bf16/args.h: Likewise.\n\t* gcc.target/x86_64/abi/bf16/asm-support-darwin.S: New file.\n\t* gcc.target/x86_64/abi/bf16/m256bf16/asm-support-darwin.S: New file.\n\t* gcc.target/x86_64/abi/bf16/m512bf16/asm-support-darwin.S: New file.", "tree": {"sha": "4fad5ab993c9e036176dcf2998992ce00e3523af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fad5ab993c9e036176dcf2998992ce00e3523af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "769370f3e2e04823c8a621d8ffa756dd83ebf21e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/769370f3e2e04823c8a621d8ffa756dd83ebf21e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/769370f3e2e04823c8a621d8ffa756dd83ebf21e"}], "stats": {"total": 355, "additions": 340, "deletions": 15}, "files": [{"sha": "8edab855dd07052c9f3b1740e85755cd316fb9c8", "filename": "gcc/testsuite/gcc.target/x86_64/abi/bf16/abi-bf16.exp", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fabi-bf16.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fabi-bf16.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fabi-bf16.exp?ref=6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "patch": "@@ -36,9 +36,15 @@ set additional_flags \"-W -Wall -msse2\"\n \n foreach src [lsort [glob -nocomplain $srcdir/$subdir/test_*.c]] {\n     if {[runtest_file_p $runtests $src]} {\n-        c-torture-execute [list $src \\\n-                                $srcdir/$subdir/asm-support.S] \\\n-                                $additional_flags\n+\tif { ([istarget *-*-darwin*]) } then {\n+\t    c-torture-execute [list $src \\\n+\t\t\t\t    $srcdir/$subdir/asm-support-darwin.S] \\\n+\t\t\t\t    $additional_flags\n+\t} else {\n+            c-torture-execute [list $src \\\n+                                    $srcdir/$subdir/asm-support.S] \\\n+                                    $additional_flags\n+        }\n     }\n }\n "}, {"sha": "95f9a394f2c3a3e06c4541e83ce7efd56a924d6c", "filename": "gcc/testsuite/gcc.target/x86_64/abi/bf16/args.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fargs.h?ref=6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "patch": "@@ -42,8 +42,8 @@ typedef union {\n } X87_T;\n extern void (*callthis)(void);\n extern unsigned long long rax,rbx,rcx,rdx,rsi,rdi,rsp,rbp,r8,r9,r10,r11,r12,r13,r14,r15;\n-XMM_T xmm_regs[16];\n-X87_T x87_regs[8];\n+extern XMM_T xmm_regs[16];\n+extern X87_T x87_regs[8];\n extern volatile unsigned long long volatile_var;\n extern void snapshot (void);\n extern void snapshot_ret (void);"}, {"sha": "bdaa02fe187797cae40f2063317b964b009e9109", "filename": "gcc/testsuite/gcc.target/x86_64/abi/bf16/asm-support-darwin.S", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fasm-support-darwin.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fasm-support-darwin.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fasm-support-darwin.S?ref=6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "patch": "@@ -0,0 +1,97 @@\n+\t.text\n+\t.p2align 4,,15\n+\t.globl _snapshot\n+_snapshot:\n+LFB3:\n+\tmovq\t%rax, _rax(%rip)\n+\tmovq\t%rbx, _rbx(%rip)\n+\tmovq\t%rcx, _rcx(%rip)\n+\tmovq\t%rdx, _rdx(%rip)\n+\tmovq\t%rdi, _rdi(%rip)\n+\tmovq\t%rsi, _rsi(%rip)\n+\tmovq\t%rbp, _rbp(%rip)\n+\tmovq\t%rsp, _rsp(%rip)\n+\tmovq\t%r8, _r8(%rip)\n+\tmovq\t%r9, _r9(%rip)\n+\tmovq\t%r10, _r10(%rip)\n+\tmovq\t%r11, _r11(%rip)\n+\tmovq\t%r12, _r12(%rip)\n+\tmovq\t%r13, _r13(%rip)\n+\tmovq\t%r14, _r14(%rip)\n+\tmovq\t%r15, _r15(%rip)\n+\tmovdqu\t%xmm0, _xmm_regs+0(%rip)\n+\tmovdqu\t%xmm1, _xmm_regs+16(%rip)\n+\tmovdqu\t%xmm2, _xmm_regs+32(%rip)\n+\tmovdqu\t%xmm3, _xmm_regs+48(%rip)\n+\tmovdqu\t%xmm4, _xmm_regs+64(%rip)\n+\tmovdqu\t%xmm5, _xmm_regs+80(%rip)\n+\tmovdqu\t%xmm6, _xmm_regs+96(%rip)\n+\tmovdqu\t%xmm7, _xmm_regs+112(%rip)\n+\tmovdqu\t%xmm8, _xmm_regs+128(%rip)\n+\tmovdqu\t%xmm9, _xmm_regs+144(%rip)\n+\tmovdqu\t%xmm10, _xmm_regs+160(%rip)\n+\tmovdqu\t%xmm11, _xmm_regs+176(%rip)\n+\tmovdqu\t%xmm12, _xmm_regs+192(%rip)\n+\tmovdqu\t%xmm13, _xmm_regs+208(%rip)\n+\tmovdqu\t%xmm14, _xmm_regs+224(%rip)\n+\tmovdqu\t%xmm15, _xmm_regs+240(%rip)\n+\tjmp\t*_callthis(%rip)\n+LFE3:\n+\n+\t.p2align 4,,15\n+\t.globl _snapshot_ret\n+_snapshot_ret:\n+\tmovq\t%rdi, _rdi(%rip)\n+\tsubq\t$8, %rsp\n+\tcall\t*_callthis(%rip)\n+\taddq\t$8, %rsp\n+\tmovq\t%rax, _rax(%rip)\n+\tmovq\t%rdx, _rdx(%rip)\n+\tmovdqu\t%xmm0, _xmm_regs+0(%rip)\n+\tmovdqu\t%xmm1, _xmm_regs+16(%rip)\n+\tfstpt\t_x87_regs(%rip)\n+\tfstpt\t_x87_regs+16(%rip)\n+\tfldt\t_x87_regs+16(%rip)\n+\tfldt\t_x87_regs(%rip)\n+\tret\n+\n+\t.globl\t_callthis\n+\t.zerofill __DATA,__bss,_callthis,8,3\n+\t.globl\t_rax\n+\t.zerofill __DATA,__bss,_rax,8,3\n+\t.globl\t_rbx\n+\t.zerofill __DATA,__bss,_rbx,8,3\n+\t.globl\t_rcx\n+\t.zerofill __DATA,__bss,_rcx,8,3\n+\t.globl\t_rdx\n+\t.zerofill __DATA,__bss,_rdx,8,3\n+\t.globl\t_rsi\n+\t.zerofill __DATA,__bss,_rsi,8,3\n+\t.globl\t_rdi\n+\t.zerofill __DATA,__bss,_rdi,8,3\n+\t.globl\t_rsp\n+\t.zerofill __DATA,__bss,_rsp,8,3\n+\t.globl\t_rbp\n+\t.zerofill __DATA,__bss,_rbp,8,3\n+\t.globl\t_r8\n+\t.zerofill __DATA,__bss,_r8,8,3\n+\t.globl\t_r9\n+\t.zerofill __DATA,__bss,_r9,8,3\n+\t.globl\t_r10\n+\t.zerofill __DATA,__bss,_r10,8,3\n+\t.globl\t_r11\n+\t.zerofill __DATA,__bss,_r11,8,3\n+\t.globl\t_r12\n+\t.zerofill __DATA,__bss,_r12,8,3\n+\t.globl\t_r13\n+\t.zerofill __DATA,__bss,_r13,8,3\n+\t.globl\t_r14\n+\t.zerofill __DATA,__bss,_r14,8,3\n+\t.globl\t_r15\n+\t.zerofill __DATA,__bss,_r15,8,3\n+\t.globl\t_xmm_regs\n+\t.zerofill __DATA,__bss,_xmm_regs,256,5\n+\t.globl\t_x87_regs\n+\t.zerofill __DATA,__bss,_x87_regs,128,5\n+\t.globl\t_volatile_var\n+\t.zerofill __DATA,__bss,_volatile_var,8,3"}, {"sha": "02b45052b325cb94fbaf048533bec69184295d0d", "filename": "gcc/testsuite/gcc.target/x86_64/abi/bf16/m256bf16/abi-bf16-ymm.exp", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm256bf16%2Fabi-bf16-ymm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm256bf16%2Fabi-bf16-ymm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm256bf16%2Fabi-bf16-ymm.exp?ref=6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "patch": "@@ -36,9 +36,15 @@ set additional_flags \"-W -Wall -mavx2\"\n \n foreach src [lsort [glob -nocomplain $srcdir/$subdir/test_*.c]] {\n     if {[runtest_file_p $runtests $src]} {\n-        c-torture-execute [list $src \\\n-                                $srcdir/$subdir/asm-support.S] \\\n-                                $additional_flags\n+\tif { ([istarget *-*-darwin*]) } then {\n+\t    c-torture-execute [list $src \\\n+\t\t\t\t    $srcdir/$subdir/asm-support-darwin.S] \\\n+\t\t\t\t    $additional_flags\n+\t} else {\n+            c-torture-execute [list $src \\\n+                                    $srcdir/$subdir/asm-support.S] \\\n+                                    $additional_flags\n+        }\n     }\n }\n "}, {"sha": "1027742cbb2ed12f9d861d188fe497de094ff193", "filename": "gcc/testsuite/gcc.target/x86_64/abi/bf16/m256bf16/args.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm256bf16%2Fargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm256bf16%2Fargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm256bf16%2Fargs.h?ref=6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "patch": "@@ -50,8 +50,8 @@ typedef union {\n } X87_T;\n extern void (*callthis)(void);\n extern unsigned long long rax,rbx,rcx,rdx,rsi,rdi,rsp,rbp,r8,r9,r10,r11,r12,r13,r14,r15;\n-YMM_T ymm_regs[16];\n-X87_T x87_regs[8];\n+extern YMM_T ymm_regs[16];\n+extern X87_T x87_regs[8];\n extern volatile unsigned long long volatile_var;\n extern void snapshot (void);\n extern void snapshot_ret (void);"}, {"sha": "e136b574f6e05c950c19eaea66a2a8862b1c41f0", "filename": "gcc/testsuite/gcc.target/x86_64/abi/bf16/m256bf16/asm-support-darwin.S", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm256bf16%2Fasm-support-darwin.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm256bf16%2Fasm-support-darwin.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm256bf16%2Fasm-support-darwin.S?ref=6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "patch": "@@ -0,0 +1,97 @@\n+\t.text\n+\t.p2align 4,,15\n+\t.globl _snapshot\n+_snapshot:\n+.LFB3:\n+\tmovq\t%rax, _rax(%rip)\n+\tmovq\t%rbx, _rbx(%rip)\n+\tmovq\t%rcx, _rcx(%rip)\n+\tmovq\t%rdx, _rdx(%rip)\n+\tmovq\t%rdi, _rdi(%rip)\n+\tmovq\t%rsi, _rsi(%rip)\n+\tmovq\t%rbp, _rbp(%rip)\n+\tmovq\t%rsp, _rsp(%rip)\n+\tmovq\t%r8, _r8(%rip)\n+\tmovq\t%r9, _r9(%rip)\n+\tmovq\t%r10, _r10(%rip)\n+\tmovq\t%r11, _r11(%rip)\n+\tmovq\t%r12, _r12(%rip)\n+\tmovq\t%r13, _r13(%rip)\n+\tmovq\t%r14, _r14(%rip)\n+\tmovq\t%r15, _r15(%rip)\n+\tvmovdqu\t%ymm0, _ymm_regs+0(%rip)\n+\tvmovdqu\t%ymm1, _ymm_regs+32(%rip)\n+\tvmovdqu\t%ymm2, _ymm_regs+64(%rip)\n+\tvmovdqu\t%ymm3, _ymm_regs+96(%rip)\n+\tvmovdqu\t%ymm4, _ymm_regs+128(%rip)\n+\tvmovdqu\t%ymm5, _ymm_regs+160(%rip)\n+\tvmovdqu\t%ymm6, _ymm_regs+192(%rip)\n+\tvmovdqu\t%ymm7, _ymm_regs+224(%rip)\n+\tvmovdqu\t%ymm8, _ymm_regs+256(%rip)\n+\tvmovdqu\t%ymm9, _ymm_regs+288(%rip)\n+\tvmovdqu\t%ymm10, _ymm_regs+320(%rip)\n+\tvmovdqu\t%ymm11, _ymm_regs+352(%rip)\n+\tvmovdqu\t%ymm12, _ymm_regs+384(%rip)\n+\tvmovdqu\t%ymm13, _ymm_regs+416(%rip)\n+\tvmovdqu\t%ymm14, _ymm_regs+448(%rip)\n+\tvmovdqu\t%ymm15, _ymm_regs+480(%rip)\n+\tjmp\t*_callthis(%rip)\n+.LFE3:\n+\n+\t.p2align 4,,15\n+\t.globl _snapshot_ret\n+_snapshot_ret:\n+\tmovq\t%rdi, _rdi(%rip)\n+\tsubq\t$8, %rsp\n+\tcall\t*_callthis(%rip)\n+\taddq\t$8, %rsp\n+\tmovq\t%rax, _rax(%rip)\n+\tmovq\t%rdx, _rdx(%rip)\n+\tvmovdqu\t%ymm0, _ymm_regs+0(%rip)\n+\tvmovdqu\t%ymm1, _ymm_regs+32(%rip)\n+\tfstpt\t_x87_regs(%rip)\n+\tfstpt\t_x87_regs+16(%rip)\n+\tfldt\t_x87_regs+16(%rip)\n+\tfldt\t_x87_regs(%rip)\n+\tret\n+\n+\t.globl\t_callthis\n+\t.zerofill __DATA,__bss,_callthis,8,3\n+\t.globl\t_rax\n+\t.zerofill __DATA,__bss,_rax,8,3\n+\t.globl\t_rbx\n+\t.zerofill __DATA,__bss,_rbx,8,3\n+\t.globl\t_rcx\n+\t.zerofill __DATA,__bss,_rcx,8,3\n+\t.globl\t_rdx\n+\t.zerofill __DATA,__bss,_rdx,8,3\n+\t.globl\t_rsi\n+\t.zerofill __DATA,__bss,_rsi,8,3\n+\t.globl\t_rdi\n+\t.zerofill __DATA,__bss,_rdi,8,3\n+\t.globl\t_rsp\n+\t.zerofill __DATA,__bss,_rsp,8,3\n+\t.globl\t_rbp\n+\t.zerofill __DATA,__bss,_rbp,8,3\n+\t.globl\t_r8\n+\t.zerofill __DATA,__bss,_r8,8,3\n+\t.globl\t_r9\n+\t.zerofill __DATA,__bss,_r9,8,3\n+\t.globl\t_r10\n+\t.zerofill __DATA,__bss,_r10,8,3\n+\t.globl\t_r11\n+\t.zerofill __DATA,__bss,_r11,8,3\n+\t.globl\t_r12\n+\t.zerofill __DATA,__bss,_r12,8,3\n+\t.globl\t_r13\n+\t.zerofill __DATA,__bss,_r13,8,3\n+\t.globl\t_r14\n+\t.zerofill __DATA,__bss,_r14,8,3\n+\t.globl\t_r15\n+\t.zerofill __DATA,__bss,_r15,8,3\n+\t.globl\t_ymm_regs\n+\t.zerofill __DATA,__bss,_ymm_regs,512,5\n+\t.globl\t_x87_regs\n+\t.zerofill __DATA,__bss,_x87_regs,128,5\n+\t.globl\t_volatile_var\n+\t.zerofill __DATA,__bss,_volatile_var,8,3"}, {"sha": "28abb4e876beac92cc8253e5f8f070e4fd6ef933", "filename": "gcc/testsuite/gcc.target/x86_64/abi/bf16/m512bf16/abi-bf16-zmm.exp", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm512bf16%2Fabi-bf16-zmm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm512bf16%2Fabi-bf16-zmm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm512bf16%2Fabi-bf16-zmm.exp?ref=6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "patch": "@@ -36,9 +36,15 @@ set additional_flags \"-W -Wall -mavx512f\"\n \n foreach src [lsort [glob -nocomplain $srcdir/$subdir/test_*.c]] {\n     if {[runtest_file_p $runtests $src]} {\n-        c-torture-execute [list $src \\\n-                                $srcdir/$subdir/asm-support.S] \\\n-                                $additional_flags\n+\tif { ([istarget *-*-darwin*]) } then {\n+\t    c-torture-execute [list $src \\\n+\t\t\t\t    $srcdir/$subdir/asm-support-darwin.S] \\\n+\t\t\t\t    $additional_flags\n+\t} else {\n+            c-torture-execute [list $src \\\n+                                    $srcdir/$subdir/asm-support.S] \\\n+                                    $additional_flags\n+        }\n     }\n }\n "}, {"sha": "f9710bae347b8c6597de20c8e6fb1089b13bb4ba", "filename": "gcc/testsuite/gcc.target/x86_64/abi/bf16/m512bf16/args.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm512bf16%2Fargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm512bf16%2Fargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm512bf16%2Fargs.h?ref=6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "patch": "@@ -51,8 +51,8 @@ typedef union {\n } X87_T;\n extern void (*callthis)(void);\n extern unsigned long long rax,rbx,rcx,rdx,rsi,rdi,rsp,rbp,r8,r9,r10,r11,r12,r13,r14,r15;\n-ZMM_T zmm_regs[32];\n-X87_T x87_regs[8];\n+extern ZMM_T zmm_regs[32];\n+extern X87_T x87_regs[8];\n extern volatile unsigned long long volatile_var;\n extern void snapshot (void);\n extern void snapshot_ret (void);"}, {"sha": "71b61b36b4f388b4400e22fa982b4f64cc5c071d", "filename": "gcc/testsuite/gcc.target/x86_64/abi/bf16/m512bf16/asm-support-darwin.S", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm512bf16%2Fasm-support-darwin.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm512bf16%2Fasm-support-darwin.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fbf16%2Fm512bf16%2Fasm-support-darwin.S?ref=6a6f2cbf9ab366ea38cbe4c8d574486ce2bbe873", "patch": "@@ -0,0 +1,113 @@\n+\t.text\n+\t.p2align 4,,15\n+\t.globl _snapshot\n+_snapshot:\n+.LFB3:\n+\tmovq\t%rax, _rax(%rip)\n+\tmovq\t%rbx, _rbx(%rip)\n+\tmovq\t%rcx, _rcx(%rip)\n+\tmovq\t%rdx, _rdx(%rip)\n+\tmovq\t%rdi, _rdi(%rip)\n+\tmovq\t%rsi, _rsi(%rip)\n+\tmovq\t%rbp, _rbp(%rip)\n+\tmovq\t%rsp, _rsp(%rip)\n+\tmovq\t%r8, _r8(%rip)\n+\tmovq\t%r9, _r9(%rip)\n+\tmovq\t%r10, _r10(%rip)\n+\tmovq\t%r11, _r11(%rip)\n+\tmovq\t%r12, _r12(%rip)\n+\tmovq\t%r13, _r13(%rip)\n+\tmovq\t%r14, _r14(%rip)\n+\tmovq\t%r15, _r15(%rip)\n+\tvmovdqu32 %zmm0, _zmm_regs+0(%rip)\n+\tvmovdqu32 %zmm1, _zmm_regs+64(%rip)\n+\tvmovdqu32 %zmm2, _zmm_regs+128(%rip)\n+\tvmovdqu32 %zmm3, _zmm_regs+192(%rip)\n+\tvmovdqu32 %zmm4, _zmm_regs+256(%rip)\n+\tvmovdqu32 %zmm5, _zmm_regs+320(%rip)\n+\tvmovdqu32 %zmm6, _zmm_regs+384(%rip)\n+\tvmovdqu32 %zmm7, _zmm_regs+448(%rip)\n+\tvmovdqu32 %zmm8, _zmm_regs+512(%rip)\n+\tvmovdqu32 %zmm9, _zmm_regs+576(%rip)\n+\tvmovdqu32 %zmm10, _zmm_regs+640(%rip)\n+\tvmovdqu32 %zmm11, _zmm_regs+704(%rip)\n+\tvmovdqu32 %zmm12, _zmm_regs+768(%rip)\n+\tvmovdqu32 %zmm13, _zmm_regs+832(%rip)\n+\tvmovdqu32 %zmm14, _zmm_regs+896(%rip)\n+\tvmovdqu32 %zmm15, _zmm_regs+960(%rip)\n+\tvmovdqu32 %zmm16, _zmm_regs+1024(%rip)\n+\tvmovdqu32 %zmm17, _zmm_regs+1088(%rip)\n+\tvmovdqu32 %zmm18, _zmm_regs+1152(%rip)\n+\tvmovdqu32 %zmm19, _zmm_regs+1216(%rip)\n+\tvmovdqu32 %zmm20, _zmm_regs+1280(%rip)\n+\tvmovdqu32 %zmm21, _zmm_regs+1344(%rip)\n+\tvmovdqu32 %zmm22, _zmm_regs+1408(%rip)\n+\tvmovdqu32 %zmm23, _zmm_regs+1472(%rip)\n+\tvmovdqu32 %zmm24, _zmm_regs+1536(%rip)\n+\tvmovdqu32 %zmm25, _zmm_regs+1600(%rip)\n+\tvmovdqu32 %zmm26, _zmm_regs+1664(%rip)\n+\tvmovdqu32 %zmm27, _zmm_regs+1728(%rip)\n+\tvmovdqu32 %zmm28, _zmm_regs+1792(%rip)\n+\tvmovdqu32 %zmm29, _zmm_regs+1856(%rip)\n+\tvmovdqu32 %zmm30, _zmm_regs+1920(%rip)\n+\tvmovdqu32 %zmm31, _zmm_regs+1984(%rip)\n+\tjmp\t*_callthis(%rip)\n+.LFE3:\n+\n+\t.p2align 4,,15\n+\t.globl _snapshot_ret\n+_snapshot_ret:\n+\tmovq\t%rdi, _rdi(%rip)\n+\tsubq\t$8, %rsp\n+\tcall\t*_callthis(%rip)\n+\taddq\t$8, %rsp\n+\tmovq\t%rax, _rax(%rip)\n+\tmovq\t%rdx, _rdx(%rip)\n+\tvmovdqu32\t%zmm0, _zmm_regs+0(%rip)\n+\tvmovdqu32\t%zmm1, _zmm_regs+64(%rip)\n+\tfstpt\t_x87_regs(%rip)\n+\tfstpt\t_x87_regs+16(%rip)\n+\tfldt\t_x87_regs+16(%rip)\n+\tfldt\t_x87_regs(%rip)\n+\tret\n+\n+\t.globl\t_callthis\n+\t.zerofill __DATA,__bss,_callthis,8,3\n+\t.globl\t_rax\n+\t.zerofill __DATA,__bss,_rax,8,3\n+\t.globl\t_rbx\n+\t.zerofill __DATA,__bss,_rbx,8,3\n+\t.globl\t_rcx\n+\t.zerofill __DATA,__bss,_rcx,8,3\n+\t.globl\t_rdx\n+\t.zerofill __DATA,__bss,_rdx,8,3\n+\t.globl\t_rsi\n+\t.zerofill __DATA,__bss,_rsi,8,3\n+\t.globl\t_rdi\n+\t.zerofill __DATA,__bss,_rdi,8,3\n+\t.globl\t_rsp\n+\t.zerofill __DATA,__bss,_rsp,8,3\n+\t.globl\t_rbp\n+\t.zerofill __DATA,__bss,_rbp,8,3\n+\t.globl\t_r8\n+\t.zerofill __DATA,__bss,_r8,8,3\n+\t.globl\t_r9\n+\t.zerofill __DATA,__bss,_r9,8,3\n+\t.globl\t_r10\n+\t.zerofill __DATA,__bss,_r10,8,3\n+\t.globl\t_r11\n+\t.zerofill __DATA,__bss,_r11,8,3\n+\t.globl\t_r12\n+\t.zerofill __DATA,__bss,_r12,8,3\n+\t.globl\t_r13\n+\t.zerofill __DATA,__bss,_r13,8,3\n+\t.globl\t_r14\n+\t.zerofill __DATA,__bss,_r14,8,3\n+\t.globl\t_r15\n+\t.zerofill __DATA,__bss,_r15,8,3\n+\t.globl\t_zmm_regs\n+\t.zerofill __DATA,__bss,_zmm_regs,2048,6\n+\t.globl\t_x87_regs\n+\t.zerofill __DATA,__bss,_x87_regs,128,5\n+\t.globl\t_volatile_var\n+\t.zerofill __DATA,__bss,_volatile_var,8,3"}]}