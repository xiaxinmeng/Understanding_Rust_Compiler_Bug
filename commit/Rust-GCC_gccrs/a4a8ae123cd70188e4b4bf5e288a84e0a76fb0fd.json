{"sha": "a4a8ae123cd70188e4b4bf5e288a84e0a76fb0fd", "node_id": "C_kwDOANBUbNoAKGE0YThhZTEyM2NkNzAxODhlNGI0YmY1ZTI4OGE4NGUwYTc2ZmIwZmQ", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-01-13T20:50:45Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-01-14T18:16:04Z"}, "message": "Fortran: fix ICE overloading elemental intrinsics\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/103782\n\t* expr.c (gfc_simplify_expr): Adjust logic for when to scalarize a\n\tcall of an intrinsic which may have been overloaded.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/103782\n\t* gfortran.dg/overload_4.f90: New test.", "tree": {"sha": "46dec75bfe04b8963eacf46225c147cb116bbbc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46dec75bfe04b8963eacf46225c147cb116bbbc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4a8ae123cd70188e4b4bf5e288a84e0a76fb0fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4a8ae123cd70188e4b4bf5e288a84e0a76fb0fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4a8ae123cd70188e4b4bf5e288a84e0a76fb0fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4a8ae123cd70188e4b4bf5e288a84e0a76fb0fd/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72332337e3d8acbb21398b8d123f1bfe77a8327e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72332337e3d8acbb21398b8d123f1bfe77a8327e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72332337e3d8acbb21398b8d123f1bfe77a8327e"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "20b88a8ef56c5eda8ab4af1143f117923c75fce8", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4a8ae123cd70188e4b4bf5e288a84e0a76fb0fd/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4a8ae123cd70188e4b4bf5e288a84e0a76fb0fd/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=a4a8ae123cd70188e4b4bf5e288a84e0a76fb0fd", "patch": "@@ -2219,10 +2219,9 @@ gfc_simplify_expr (gfc_expr *p, int type)\n \t  && gfc_intrinsic_func_interface (p, 1) == MATCH_ERROR)\n \treturn false;\n \n-      if (p->expr_type == EXPR_FUNCTION)\n+      if (p->symtree && (p->value.function.isym || p->ts.type == BT_UNKNOWN))\n \t{\n-\t  if (p->symtree)\n-\t    isym = gfc_find_function (p->symtree->n.sym->name);\n+\t  isym = gfc_find_function (p->symtree->n.sym->name);\n \t  if (isym && isym->elemental)\n \t    scalarize_intrinsic_call (p, false);\n \t}"}, {"sha": "43207e358bae446054fc25c6406b62aece4a1ca1", "filename": "gcc/testsuite/gfortran.dg/overload_4.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4a8ae123cd70188e4b4bf5e288a84e0a76fb0fd/gcc%2Ftestsuite%2Fgfortran.dg%2Foverload_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4a8ae123cd70188e4b4bf5e288a84e0a76fb0fd/gcc%2Ftestsuite%2Fgfortran.dg%2Foverload_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Foverload_4.f90?ref=a4a8ae123cd70188e4b4bf5e288a84e0a76fb0fd", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do run }\n+! { dg-additional-options \"-Wno-intrinsic-shadow\" }\n+! PR fortran/103782 - ICE overloading an intrinsic like dble or real\n+! Contributed by Urban Jost\n+\n+program runtest\n+  implicit none\n+  interface dble\n+     procedure to_double\n+  end interface dble\n+  interface real\n+     procedure floor ! not really FLOOR...\n+  end interface real\n+  if (any (dble ([10.0d0,20.0d0]) - [10.0d0,20.0d0] /= 0.d0)) stop 1\n+  if (any (real ([1.5,2.5])       - [1.5,2.5]       /= 0.0 )) stop 2\n+contains\n+  elemental function to_double (valuein) result(d_out)\n+    doubleprecision,intent(in) :: valuein\n+    doubleprecision            :: d_out\n+    d_out=valuein\n+  end function to_double\n+  elemental function floor (valuein) result(d_out) ! not really FLOOR...\n+    real, intent(in) :: valuein\n+    real             :: d_out\n+    d_out=valuein\n+  end function floor\n+end program runtest"}]}