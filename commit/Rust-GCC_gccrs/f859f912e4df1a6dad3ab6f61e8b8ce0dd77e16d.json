{"sha": "f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg1OWY5MTJlNGRmMWE2ZGFkM2FiNmY2MWU4YjhjZTBkZDc3ZTE2ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-05-12T14:43:11Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-05-12T14:43:11Z"}, "message": "PR libstdc++/78939 make tuple_size<cv T> depend on tuple_size<T>\n\n\tPR libstdc++/78939\n\t* include/std/utility (tuple_size<cv T>): Only define partial\n\tspecializations when tuple_size<T>::value is valid.\n\t* testsuite/20_util/tuple/78939.cc: New.\n\t* testsuite/20_util/tuple/cv_tuple_size_neg.cc: New.\n\nFrom-SVN: r247973", "tree": {"sha": "3b942f21fa3f0a2e06f599a1823b14fb74877d8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b942f21fa3f0a2e06f599a1823b14fb74877d8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48ac9454faa6494df3a8bd1bacf4c924b1e848dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48ac9454faa6494df3a8bd1bacf4c924b1e848dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48ac9454faa6494df3a8bd1bacf4c924b1e848dc"}], "stats": {"total": 114, "additions": 104, "deletions": 10}, "files": [{"sha": "afe7a548bf61751ca094f7ab8ba084750650f4cc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d", "patch": "@@ -1,3 +1,11 @@\n+2017-05-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/78939\n+\t* include/std/utility (tuple_size<cv T>): Only define partial\n+\tspecializations when tuple_size<T>::value is valid.\n+\t* testsuite/20_util/tuple/78939.cc: New.\n+\t* testsuite/20_util/tuple/cv_tuple_size_neg.cc: New.\n+\n 2017-05-11  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/bits/stl_tree.h [_GLIBCXX_INLINE_VERSION]"}, {"sha": "c18bcb6f72d135ecb9fcbef0a85c71c6f0d9c5cc", "filename": "libstdc++-v3/include/std/utility", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility?ref=f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d", "patch": "@@ -88,24 +88,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     struct tuple_size;\n \n   // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 2313. tuple_size should always derive from integral_constant<size_t, N>\n   // 2770. tuple_size<const T> specialization is not SFINAE compatible\n-  template<typename _Tp, typename = void>\n-    struct __tuple_size_cv_impl { };\n \n-  template<typename _Tp>\n-    struct __tuple_size_cv_impl<_Tp, __void_t<decltype(tuple_size<_Tp>::value)>>\n-    : integral_constant<size_t, tuple_size<_Tp>::value> { };\n+  template<typename _Tp,\n+\t   typename _Up = typename remove_cv<_Tp>::type,\n+\t   typename = typename enable_if<is_same<_Tp, _Up>::value>::type,\n+\t   size_t = tuple_size<_Tp>::value>\n+    using __enable_if_has_tuple_size = _Tp;\n \n-  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n-  // 2313. tuple_size should always derive from integral_constant<size_t, N>\n   template<typename _Tp>\n-    struct tuple_size<const _Tp> : __tuple_size_cv_impl<_Tp> { };\n+    struct tuple_size<const __enable_if_has_tuple_size<_Tp>>\n+    : public tuple_size<_Tp> { };\n \n   template<typename _Tp>\n-    struct tuple_size<volatile _Tp> : __tuple_size_cv_impl<_Tp> { };\n+    struct tuple_size<volatile __enable_if_has_tuple_size<_Tp>>\n+    : public tuple_size<_Tp> { };\n \n   template<typename _Tp>\n-    struct tuple_size<const volatile _Tp> : __tuple_size_cv_impl<_Tp> { };\n+    struct tuple_size<const volatile __enable_if_has_tuple_size<_Tp>>\n+    : public tuple_size<_Tp> { };\n \n   /// Gives the type of the ith element of a given tuple type.\n   template<std::size_t __i, typename _Tp>"}, {"sha": "bab143b387f6e1a289d6d8349e7fad77dd74d478", "filename": "libstdc++-v3/testsuite/20_util/tuple/78939.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2F78939.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2F78939.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2F78939.cc?ref=f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d", "patch": "@@ -0,0 +1,49 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++1z } }\n+\n+// PR libstdc++/78939\n+\n+#include <utility>\n+\n+struct A { int i, j; };\n+\n+int\n+test01()\n+{\n+  A a{};\n+  const auto [i, j] = a;\n+  return i + j;\n+}\n+\n+int\n+test02()\n+{\n+  A a{};\n+  volatile auto [i, j] = a;\n+  return i + j;\n+}\n+\n+int\n+test03()\n+{\n+  A a{};\n+  const volatile auto [i, j] = a;\n+  return i + j;\n+}"}, {"sha": "450ed894c4e2722b481b866852a53552a35aa53a", "filename": "libstdc++-v3/testsuite/20_util/tuple/cv_tuple_size_neg.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcv_tuple_size_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcv_tuple_size_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcv_tuple_size_neg.cc?ref=f859f912e4df1a6dad3ab6f61e8b8ce0dd77e16d", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++11 } }\n+\n+#include <tuple>\n+\n+// PR libstdc++/78939\n+\n+std::tuple_size<const int> ic;\t\t  // { dg-error \"incomplete\" }\n+std::tuple_size<volatile int> iv;\t  // { dg-error \"incomplete\" }\n+std::tuple_size<const volatile int> icv;  // { dg-error \"incomplete\" }\n+\n+struct A { };\n+std::tuple_size<const A> ac;\t\t  // { dg-error \"incomplete\" }\n+std::tuple_size<volatile A> av;\t\t  // { dg-error \"incomplete\" }\n+std::tuple_size<const volatile A> acv;\t  // { dg-error \"incomplete\" }\n+\n+std::tuple_size<const void> vc;\t\t  // { dg-error \"incomplete\" }\n+std::tuple_size<volatile void> vv;\t  // { dg-error \"incomplete\" }\n+std::tuple_size<const volatile void> vcv; // { dg-error \"incomplete\" }"}]}