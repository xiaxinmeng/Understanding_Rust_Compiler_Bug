{"sha": "3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NjMmZkZmQ5M2VmYWYxYjJlOGJjZmZlODRjMjBjYmQxZmZjNGU5Ng==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2018-09-17T06:07:52Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2018-09-17T06:07:52Z"}, "message": "tree-vrp.c (extract_range_from_unary_expr): Do not special case symbolics or VR_VARYING ranges for ABS_EXPR.\n\n\t* tree-vrp.c (extract_range_from_unary_expr): Do not special case\n\tsymbolics or VR_VARYING ranges for ABS_EXPR.\n\t* wide-int-range.cc (wide_int_range_abs): Return positive numbers\n\twhen range will wrap.\n\nFrom-SVN: r264356", "tree": {"sha": "e72c89dd0e3f762a7eb72076ece671dca4277395", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e72c89dd0e3f762a7eb72076ece671dca4277395"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "baeab78db263853f098a549655793b49ff815476", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baeab78db263853f098a549655793b49ff815476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baeab78db263853f098a549655793b49ff815476"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "59b73ed089802831212ff2bdb1cf3735995a926b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96", "patch": "@@ -1,3 +1,10 @@\n+2018-09-17  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-vrp.c (extract_range_from_unary_expr): Do not special case\n+\tsymbolics or VR_VARYING ranges for ABS_EXPR.\n+\t* wide-int-range.cc (wide_int_range_abs): Return positive numbers\n+\twhen range will wrap.\n+\n 2018-09-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR middle-end/86864"}, {"sha": "622ccbc2df7ffdc010a4dab95987ecfe38231dd5", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96", "patch": "@@ -1894,11 +1894,6 @@ extract_range_from_unary_expr (value_range *vr,\n     }\n   else if (code == ABS_EXPR)\n     {\n-      if (vr0.type != VR_RANGE || symbolic_range_p (&vr0))\n-\t{\n-\t  set_value_range_to_varying (vr);\n-\t  return;\n-\t}\n       wide_int wmin, wmax;\n       wide_int vr0_min, vr0_max;\n       extract_range_into_wide_ints (&vr0, sign, prec, vr0_min, vr0_max);"}, {"sha": "a85fe9f9ad70fe631d52458a1b1fa2ee7a49f211", "filename": "gcc/wide-int-range.cc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96/gcc%2Fwide-int-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96/gcc%2Fwide-int-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fwide-int-range.cc?ref=3cc2fdfd93efaf1b2e8bcffe84c20cbd1ffc4e96", "patch": "@@ -728,10 +728,13 @@ wide_int_range_abs (wide_int &min, wide_int &max,\n     }\n \n   /* If the new range has its limits swapped around (MIN > MAX), then\n-     the operation caused one of them to wrap around, mark the new\n-     range VARYING.  */\n+     the operation caused one of them to wrap around.  The only thing\n+     we know is that the result is positive.  */\n   if (wi::gt_p (min, max, sign))\n-      return false;\n+    {\n+      min = wi::zero (prec);\n+      max = max_value;\n+    }\n   return true;\n }\n "}]}