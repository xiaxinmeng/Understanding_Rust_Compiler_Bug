{"sha": "fabdcf97a572387959d363a90ef2808b1007bc29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFiZGNmOTdhNTcyMzg3OTU5ZDM2M2E5MGVmMjgwOGIxMDA3YmMyOQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2014-03-04T17:00:21Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2014-03-04T17:00:21Z"}, "message": "extract-vsx.c: Replace \"vector long\" with \"vector long long\" throughout.\n\n2014-03-04  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.dg/vmx/extract-vsx.c: Replace \"vector long\" with \"vector\n\tlong long\" throughout.\n\t* gcc.dg/vmx/extract-vsx-be-order.c: Likewise.\n\t* gcc.dg/vmx/insert-vsx.c: Likewise.\n\t* gcc.dg/vmx/insert-vsx-be-order.c: Likewise.\n\t* gcc.dg/vmx/ld-vsx.c: Likewise.\n\t* gcc.dg/vmx/ld-vsx-be-order.c: Likewise.\n\t* gcc.dg/vmx/ldl-vsx.c: Likewise.\n\t* gcc.dg/vmx/ldl-vsx-be-order.c: Likewise.\n\t* gcc.dg/vmx/merge-vsx.c: Likewise.\n\t* gcc.dg/vmx/merge-vsx-be-order.c: Likewise.\n\t* gcc.dg/vmx/st-vsx.c: Likewise.\n\t* gcc.dg/vmx/st-vsx-be-order.c: Likewise.\n\t* gcc.dg/vmx/stl-vsx.c: Likewise.\n\t* gcc.dg/vmx/stl-vsx-be-order.c: Likewise.\n\nFrom-SVN: r208321", "tree": {"sha": "ed36059f69bc13cc2084b957b54e1999c53eb88a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed36059f69bc13cc2084b957b54e1999c53eb88a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fabdcf97a572387959d363a90ef2808b1007bc29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabdcf97a572387959d363a90ef2808b1007bc29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fabdcf97a572387959d363a90ef2808b1007bc29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabdcf97a572387959d363a90ef2808b1007bc29/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c01a854829b98b9d079ca264fd8e123607b7ffa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c01a854829b98b9d079ca264fd8e123607b7ffa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c01a854829b98b9d079ca264fd8e123607b7ffa6"}], "stats": {"total": 144, "additions": 81, "deletions": 63}, "files": [{"sha": "f9fa2b9deef1041924c6af618c49b12c25b819ba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -1,3 +1,21 @@\n+2014-03-04  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.dg/vmx/extract-vsx.c: Replace \"vector long\" with \"vector\n+\tlong long\" throughout.\n+\t* gcc.dg/vmx/extract-vsx-be-order.c: Likewise.\n+\t* gcc.dg/vmx/insert-vsx.c: Likewise.\n+\t* gcc.dg/vmx/insert-vsx-be-order.c: Likewise.\n+\t* gcc.dg/vmx/ld-vsx.c: Likewise.\n+\t* gcc.dg/vmx/ld-vsx-be-order.c: Likewise.\n+\t* gcc.dg/vmx/ldl-vsx.c: Likewise.\n+\t* gcc.dg/vmx/ldl-vsx-be-order.c: Likewise.\n+\t* gcc.dg/vmx/merge-vsx.c: Likewise.\n+\t* gcc.dg/vmx/merge-vsx-be-order.c: Likewise.\n+\t* gcc.dg/vmx/st-vsx.c: Likewise.\n+\t* gcc.dg/vmx/st-vsx-be-order.c: Likewise.\n+\t* gcc.dg/vmx/stl-vsx.c: Likewise.\n+\t* gcc.dg/vmx/stl-vsx-be-order.c: Likewise.\n+\n 2014-03-04  Paulo Matos  <paulo@matos-sorge.com>\n \n         * gcc.dg/lto/pr55113_0.c: New testcase."}, {"sha": "6428ea5d8b3a62ec1354bf62f6bec61e116d3cff", "filename": "gcc/testsuite/gcc.dg/vmx/extract-vsx-be-order.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fextract-vsx-be-order.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fextract-vsx-be-order.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fextract-vsx-be-order.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -6,7 +6,7 @@\n \n static void test()\n {\n-  vector long vl = {0, 1};\n+  vector long long vl = {0, 1};\n   vector double vd = {0.0, 1.0};\n \n #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__"}, {"sha": "cd34a2ae3d3e5c1029a489105e2ca4a6698215e2", "filename": "gcc/testsuite/gcc.dg/vmx/extract-vsx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fextract-vsx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fextract-vsx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fextract-vsx.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -6,7 +6,7 @@\n \n static void test()\n {\n-  vector long vl = {0, 1};\n+  vector long long vl = {0, 1};\n   vector double vd = {0.0, 1.0};\n \n   check (vec_extract (vl, 0) == 0, \"vec_extract, vl, 0\");"}, {"sha": "672fc449eb56b93d753c64e24e8f61d504322562", "filename": "gcc/testsuite/gcc.dg/vmx/insert-vsx-be-order.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Finsert-vsx-be-order.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Finsert-vsx-be-order.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Finsert-vsx-be-order.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -4,7 +4,7 @@\n \n #include \"harness.h\"\n \n-static int vec_long_eq (vector long x, vector long y)\n+static int vec_long_long_eq (vector long long x, vector long long y)\n {\n   return (x[0] == y[0] && x[1] == y[1]);\n }\n@@ -16,19 +16,19 @@ static int vec_dbl_eq (vector double x, vector double y)\n \n static void test()\n {\n-  vector long vl = {0, 1};\n+  vector long long vl = {0, 1};\n   vector double vd = {0.0, 1.0};\n-  vector long vlr = vec_insert (2, vl, 0);\n+  vector long long vlr = vec_insert (2, vl, 0);\n   vector double vdr = vec_insert (2.0, vd, 1);\n \n #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n-  vector long vler = {0, 2};\n+  vector long long vler = {0, 2};\n   vector double vder = {2.0, 1.0};\n #else\n-  vector long vler = {2, 1};\n+  vector long long vler = {2, 1};\n   vector double vder = {0.0, 2.0};\n #endif\n \n-  check (vec_long_eq (vlr, vler), \"vl\");\n+  check (vec_long_long_eq (vlr, vler), \"vl\");\n   check (vec_dbl_eq (vdr, vder), \"vd\");\n }"}, {"sha": "afb9c70166b787cea3d74a8b2b551d07b2586e29", "filename": "gcc/testsuite/gcc.dg/vmx/insert-vsx.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Finsert-vsx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Finsert-vsx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Finsert-vsx.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -4,7 +4,7 @@\n \n #include \"harness.h\"\n \n-static int vec_long_eq (vector long x, vector long y)\n+static int vec_long_long_eq (vector long long x, vector long long y)\n {\n   return (x[0] == y[0] && x[1] == y[1]);\n }\n@@ -16,13 +16,13 @@ static int vec_dbl_eq (vector double x, vector double y)\n \n static void test()\n {\n-  vector long vl = {0, 1};\n+  vector long long vl = {0, 1};\n   vector double vd = {0.0, 1.0};\n-  vector long vlr = vec_insert (2, vl, 0);\n+  vector long long vlr = vec_insert (2, vl, 0);\n   vector double vdr = vec_insert (2.0, vd, 1);\n-  vector long vler = {2, 1};\n+  vector long long vler = {2, 1};\n   vector double vder = {0.0, 2.0};\n \n-  check (vec_long_eq (vlr, vler), \"vl\");\n+  check (vec_long_long_eq (vlr, vler), \"vl\");\n   check (vec_dbl_eq (vdr, vder), \"vd\");\n }"}, {"sha": "fc81beb0d0ce89b97b5b040d7ae30c489c3fa4fb", "filename": "gcc/testsuite/gcc.dg/vmx/ld-vsx-be-order.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fld-vsx-be-order.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fld-vsx-be-order.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fld-vsx-be-order.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -4,7 +4,7 @@\n \n #include \"harness.h\"\n \n-static unsigned long svul[2] __attribute__ ((aligned (16)));\n+static unsigned long long svul[2] __attribute__ ((aligned (16)));\n static double svd[2] __attribute__ ((aligned (16)));\n \n static void init ()\n@@ -20,20 +20,20 @@ static void init ()\n static void test ()\n {\n #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n-  vector unsigned long evul = {1,0};\n+  vector unsigned long long evul = {1,0};\n   vector double evd = {1.0,0.0};\n #else\n-  vector unsigned long evul = {0,1};\n+  vector unsigned long long evul = {0,1};\n   vector double evd = {0.0,1.0};\n #endif\n \n-  vector unsigned long vul;\n+  vector unsigned long long vul;\n   vector double vd;\n   unsigned i;\n \n   init ();\n \n-  vul = vec_ld (0, (vector unsigned long *)svul);\n+  vul = vec_ld (0, (vector unsigned long long *)svul);\n   vd  = vec_ld (0, (vector double *)svd);\n \n   for (i = 0; i < 2; ++i)"}, {"sha": "9d2a529f8bea148481d5438840ae6830fe8ebd3c", "filename": "gcc/testsuite/gcc.dg/vmx/ld-vsx.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fld-vsx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fld-vsx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fld-vsx.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -4,7 +4,7 @@\n \n #include \"harness.h\"\n \n-static unsigned long svul[2] __attribute__ ((aligned (16)));\n+static unsigned long long svul[2] __attribute__ ((aligned (16)));\n static double svd[2] __attribute__ ((aligned (16)));\n \n static void init ()\n@@ -19,16 +19,16 @@ static void init ()\n \n static void test ()\n {\n-  vector unsigned long evul = {0,1};\n+  vector unsigned long long evul = {0,1};\n   vector double evd = {0.0,1.0};\n \n-  vector unsigned long vul;\n+  vector unsigned long long vul;\n   vector double vd;\n   unsigned i;\n \n   init ();\n \n-  vul = vec_ld (0, (vector unsigned long *)svul);\n+  vul = vec_ld (0, (vector unsigned long long *)svul);\n   vd  = vec_ld (0, (vector double *)svd);\n \n   for (i = 0; i < 2; ++i)"}, {"sha": "1dd0ca33ea281875da25cef9cb2de3ab8cd205f8", "filename": "gcc/testsuite/gcc.dg/vmx/ldl-vsx-be-order.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fldl-vsx-be-order.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fldl-vsx-be-order.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fldl-vsx-be-order.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -4,7 +4,7 @@\n \n #include \"harness.h\"\n \n-static unsigned long svul[2] __attribute__ ((aligned (16)));\n+static unsigned long long svul[2] __attribute__ ((aligned (16)));\n static double svd[2] __attribute__ ((aligned (16)));\n \n static void init ()\n@@ -20,20 +20,20 @@ static void init ()\n static void test ()\n {\n #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n-  vector unsigned long evul = {1,0};\n+  vector unsigned long long evul = {1,0};\n   vector double evd = {1.0,0.0};\n #else\n-  vector unsigned long evul = {0,1};\n+  vector unsigned long long evul = {0,1};\n   vector double evd = {0.0,1.0};\n #endif\n \n-  vector unsigned long vul;\n+  vector unsigned long long vul;\n   vector double vd;\n   unsigned i;\n \n   init ();\n \n-  vul = vec_ldl (0, (vector unsigned long *)svul);\n+  vul = vec_ldl (0, (vector unsigned long long *)svul);\n   vd  = vec_ldl (0, (vector double *)svd);\n \n   for (i = 0; i < 2; ++i)"}, {"sha": "4bf3224f67bc7500cdc46a049c2e3d544a17a9bd", "filename": "gcc/testsuite/gcc.dg/vmx/ldl-vsx.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fldl-vsx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fldl-vsx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fldl-vsx.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -4,7 +4,7 @@\n \n #include \"harness.h\"\n \n-static unsigned long svul[2] __attribute__ ((aligned (16)));\n+static unsigned long long svul[2] __attribute__ ((aligned (16)));\n static double svd[2] __attribute__ ((aligned (16)));\n \n static void init ()\n@@ -19,16 +19,16 @@ static void init ()\n \n static void test ()\n {\n-  vector unsigned long evul = {0,1};\n+  vector unsigned long long evul = {0,1};\n   vector double evd = {0.0,1.0};\n \n-  vector unsigned long vul;\n+  vector unsigned long long vul;\n   vector double vd;\n   unsigned i;\n \n   init ();\n \n-  vul = vec_ldl (0, (vector unsigned long *)svul);\n+  vul = vec_ldl (0, (vector unsigned long long *)svul);\n   vd  = vec_ldl (0, (vector double *)svd);\n \n   for (i = 0; i < 2; ++i)"}, {"sha": "440ac9a004d1088266e25da9c3dd850bf309bb9e", "filename": "gcc/testsuite/gcc.dg/vmx/merge-vsx-be-order.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx-be-order.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx-be-order.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx-be-order.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -4,7 +4,7 @@\n \n #include \"harness.h\"\n \n-static int vec_long_eq (vector long x, vector long y)\n+static int vec_long_long_eq (vector long long x, vector long long y)\n {\n   return (x[0] == y[0] && x[1] == y[1]);\n }\n@@ -17,24 +17,24 @@ static int vec_double_eq (vector double x, vector double y)\n static void test()\n {\n   /* Input vectors.  */\n-  vector long vla = {-2,-1};\n-  vector long vlb = {0,1};\n+  vector long long vla = {-2,-1};\n+  vector long long vlb = {0,1};\n   vector double vda = {-2.0,-1.0};\n   vector double vdb = {0.0,1.0};\n \n   /* Result vectors.  */\n-  vector long vlh, vll;\n+  vector long long vlh, vll;\n   vector double vdh, vdl;\n \n   /* Expected result vectors.  */\n #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n-  vector long vlrh = {1,-1};\n-  vector long vlrl = {0,-2};\n+  vector long long vlrh = {1,-1};\n+  vector long long vlrl = {0,-2};\n   vector double vdrh = {1.0,-1.0};\n   vector double vdrl = {0.0,-2.0};\n #else\n-  vector long vlrh = {-2,0};\n-  vector long vlrl = {-1,1};\n+  vector long long vlrh = {-2,0};\n+  vector long long vlrl = {-1,1};\n   vector double vdrh = {-2.0,0.0};\n   vector double vdrl = {-1.0,1.0};\n #endif\n@@ -44,8 +44,8 @@ static void test()\n   vdh = vec_mergeh (vda, vdb);\n   vdl = vec_mergel (vda, vdb);\n \n-  check (vec_long_eq (vlh, vlrh), \"vlh\");\n-  check (vec_long_eq (vll, vlrl), \"vll\");\n+  check (vec_long_long_eq (vlh, vlrh), \"vlh\");\n+  check (vec_long_long_eq (vll, vlrl), \"vll\");\n   check (vec_double_eq (vdh, vdrh), \"vdh\" );\n   check (vec_double_eq (vdl, vdrl), \"vdl\" );\n }"}, {"sha": "851f35bd3e80f630d43f8feed28d34ea2a6200eb", "filename": "gcc/testsuite/gcc.dg/vmx/merge-vsx.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -4,7 +4,7 @@\n \n #include \"harness.h\"\n \n-static int vec_long_eq (vector long x, vector long y)\n+static int vec_long_long_eq (vector long long x, vector long long y)\n {\n   return (x[0] == y[0] && x[1] == y[1]);\n }\n@@ -17,18 +17,18 @@ static int vec_double_eq (vector double x, vector double y)\n static void test()\n {\n   /* Input vectors.  */\n-  vector long vla = {-2,-1};\n-  vector long vlb = {0,1};\n+  vector long long vla = {-2,-1};\n+  vector long long vlb = {0,1};\n   vector double vda = {-2.0,-1.0};\n   vector double vdb = {0.0,1.0};\n \n   /* Result vectors.  */\n-  vector long vlh, vll;\n+  vector long long vlh, vll;\n   vector double vdh, vdl;\n \n   /* Expected result vectors.  */\n-  vector long vlrh = {-2,0};\n-  vector long vlrl = {-1,1};\n+  vector long long vlrh = {-2,0};\n+  vector long long vlrl = {-1,1};\n   vector double vdrh = {-2.0,0.0};\n   vector double vdrl = {-1.0,1.0};\n \n@@ -37,8 +37,8 @@ static void test()\n   vdh = vec_mergeh (vda, vdb);\n   vdl = vec_mergel (vda, vdb);\n \n-  check (vec_long_eq (vlh, vlrh), \"vlh\");\n-  check (vec_long_eq (vll, vlrl), \"vll\");\n+  check (vec_long_long_eq (vlh, vlrh), \"vlh\");\n+  check (vec_long_long_eq (vll, vlrl), \"vll\");\n   check (vec_double_eq (vdh, vdrh), \"vdh\" );\n   check (vec_double_eq (vdl, vdrl), \"vdl\" );\n }"}, {"sha": "a2688fab570b17c88c4f13943bf7ab139c38963c", "filename": "gcc/testsuite/gcc.dg/vmx/st-vsx-be-order.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fst-vsx-be-order.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fst-vsx-be-order.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fst-vsx-be-order.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -4,7 +4,7 @@\n \n #include \"harness.h\"\n \n-static unsigned long svul[2] __attribute__ ((aligned (16)));\n+static unsigned long long svul[2] __attribute__ ((aligned (16)));\n static double svd[2] __attribute__ ((aligned (16)));\n \n static void check_arrays ()\n@@ -20,14 +20,14 @@ static void check_arrays ()\n static void test ()\n {\n #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n-  vector unsigned long vul = {1,0};\n+  vector unsigned long long vul = {1,0};\n   vector double vd = {1.0,0.0};\n #else\n-  vector unsigned long vul = {0,1};\n+  vector unsigned long long vul = {0,1};\n   vector double vd = {0.0,1.0};\n #endif\n \n-  vec_st (vul, 0, (vector unsigned long *)svul);\n+  vec_st (vul, 0, (vector unsigned long long *)svul);\n   vec_st (vd,  0, (vector double *)svd);\n \n   check_arrays ();"}, {"sha": "ef67de0baec9493389de98d4e23c76a6297f8c10", "filename": "gcc/testsuite/gcc.dg/vmx/st-vsx.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fst-vsx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fst-vsx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fst-vsx.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -4,7 +4,7 @@\n \n #include \"harness.h\"\n \n-static unsigned long svul[2] __attribute__ ((aligned (16)));\n+static unsigned long long svul[2] __attribute__ ((aligned (16)));\n static double svd[2] __attribute__ ((aligned (16)));\n \n static void check_arrays ()\n@@ -19,10 +19,10 @@ static void check_arrays ()\n \n static void test ()\n {\n-  vector unsigned long vul = {0,1};\n+  vector unsigned long long vul = {0,1};\n   vector double vd = {0.0,1.0};\n \n-  vec_st (vul, 0, (vector unsigned long *)svul);\n+  vec_st (vul, 0, (vector unsigned long long *)svul);\n   vec_st (vd,  0, (vector double *)svd);\n \n   check_arrays ();"}, {"sha": "26f2c27726f6adf52b4368356137c6ee4fb09bdc", "filename": "gcc/testsuite/gcc.dg/vmx/stl-vsx-be-order.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fstl-vsx-be-order.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fstl-vsx-be-order.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fstl-vsx-be-order.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -4,7 +4,7 @@\n \n #include \"harness.h\"\n \n-static unsigned long svul[2] __attribute__ ((aligned (16)));\n+static unsigned long long svul[2] __attribute__ ((aligned (16)));\n static double svd[2] __attribute__ ((aligned (16)));\n \n static void check_arrays ()\n@@ -20,14 +20,14 @@ static void check_arrays ()\n static void test ()\n {\n #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n-  vector unsigned long vul = {1,0};\n+  vector unsigned long long vul = {1,0};\n   vector double vd = {1.0,0.0};\n #else\n-  vector unsigned long vul = {0,1};\n+  vector unsigned long long vul = {0,1};\n   vector double vd = {0.0,1.0};\n #endif\n \n-  vec_stl (vul, 0, (vector unsigned long *)svul);\n+  vec_stl (vul, 0, (vector unsigned long long *)svul);\n   vec_stl (vd,  0, (vector double *)svd);\n \n   check_arrays ();"}, {"sha": "9a1cce6f8f835b022ed1b63c0bd1a0b1ca638cc7", "filename": "gcc/testsuite/gcc.dg/vmx/stl-vsx.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fstl-vsx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabdcf97a572387959d363a90ef2808b1007bc29/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fstl-vsx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fstl-vsx.c?ref=fabdcf97a572387959d363a90ef2808b1007bc29", "patch": "@@ -4,7 +4,7 @@\n \n #include \"harness.h\"\n \n-static unsigned long svul[2] __attribute__ ((aligned (16)));\n+static unsigned long long svul[2] __attribute__ ((aligned (16)));\n static double svd[2] __attribute__ ((aligned (16)));\n \n static void check_arrays ()\n@@ -19,10 +19,10 @@ static void check_arrays ()\n \n static void test ()\n {\n-  vector unsigned long vul = {0,1};\n+  vector unsigned long long vul = {0,1};\n   vector double vd = {0.0,1.0};\n \n-  vec_stl (vul, 0, (vector unsigned long *)svul);\n+  vec_stl (vul, 0, (vector unsigned long long *)svul);\n   vec_stl (vd,  0, (vector double *)svd);\n \n   check_arrays ();"}]}