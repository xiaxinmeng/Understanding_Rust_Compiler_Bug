{"sha": "6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI1MTE4OGM5ZGRkMjRjOTFmMTVjYzJkY2MzMGZjNGVhZWI1M2ZjNQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "1999-06-14T17:21:46Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "1999-06-14T17:21:46Z"}, "message": "cpp.texi: Minor update.\n\n1999-06-14   Zack Weinberg   <zack@rabi.columbia.edu>\n\t* cpp.texi: Minor update.\n\t* cpp.1: Regenerate from cpp.texi, using...\n\t* contrib/texi2pod.pl: ...this (new file) plus some hand tweaks.\n\nFrom-SVN: r27525", "tree": {"sha": "799aea233131d67080741f6ed6fee8a9e9b135a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/799aea233131d67080741f6ed6fee8a9e9b135a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5/comments", "author": null, "committer": null, "parents": [{"sha": "00af55a292aa54527f86b41cf8c2c163f138d591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00af55a292aa54527f86b41cf8c2c163f138d591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00af55a292aa54527f86b41cf8c2c163f138d591"}], "stats": {"total": 760, "additions": 748, "deletions": 12}, "files": [{"sha": "bb26fb23375f7ad259e7e9801c5ed89b1f427c35", "filename": "contrib/texi2pod.pl", "status": "added", "additions": 151, "deletions": 0, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5/contrib%2Ftexi2pod.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5/contrib%2Ftexi2pod.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftexi2pod.pl?ref=6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5", "patch": "@@ -0,0 +1,151 @@\n+#! /usr/bin/perl -w\n+\n+# This does trivial (and I mean _trivial_) conversion of Texinfo\n+# markup to Perl POD format.  It's intended to be used to extract\n+# something suitable for a manpage from a Texinfo document.\n+\n+$in = $ARGV[0];\n+$out = \"x\";\n+die \"usage: $0 infile outfile\\n\" unless defined $in && defined $out;\n+\n+close STDIN;\n+open(IN,$in);\n+\n+$output = 0;\n+$ignore = 0;\n+%sects = ();\n+$section = \"\";\n+@icstack = ();\n+@endwstack = ();\n+$shift = \"\";\n+\n+while(<IN>)\n+{\n+    chomp;\n+    /^\\@end ignore/ and $ignore = 0, next;\n+    next if $ignore;\n+    /^\\@c man begin ([A-Z]+)/ and $sect = $1, $output = 1, next;\n+    /^\\@c man end/ and do {\n+\t$_ = $section;\n+\ts/</&lt;/g;\n+\ts/>/&gt;/g;\n+\n+\ts/\\@(?:dfn|var|emph|cite)\\{([^\\}]*)\\}/I<$1>/g;\n+\ts/\\@(?:code|kbd)\\{([^\\}]*)\\}/C<$1>/g;\n+\ts/\\@(?:samp|strong|key)\\{([^\\}]*)\\}/B<$1>/g;\n+\ts/\\@file\\{([^\\}]*)\\}/F<$1>/g;\n+\ts/\\@(?:url|email)\\{([^\\}]*)\\}/E<lt>C<$1>E<rt>/g;\n+\ts/\\@[a-z]?ref\\{(?:[^\\}]*)\\}.?//g;\n+\ts/\\(\\@p[a-z]?ref\\{(?:[^\\}]*)\\}\\).?//g;\n+\ts/\\@copyright\\{\\}//g;\n+\ts/\\@noindent\\s*//g;\n+\ts/\\@refill//g;\n+\ts/\\@\\././g;\n+\n+\ts/&lt;/E<lt>/g;\n+\ts/&gt;/E<gt>/g;\n+\ts/&LT;/</g;\n+\ts/&GT;/>/g;\n+\n+\t$sects{$sect} = $_;\n+\t$section = \"\";\n+\t$output = 0;\n+\tnext;\n+    };\n+    \n+    /^\\@(c|[a-z]+index)\\b/ and next;\n+\n+    /^\\@setfilename\\s+([^.]+)/ and $fn = $1, next;\n+    /^\\@settitle\\s+([^.]+)/ and $tl = $1, next;\n+\n+    next unless $output;\n+\n+    /^\\@ignore/ and $ignore = 1, next;\n+\n+    /^\\@itemize (\\@[a-z]+)/ and do {\n+\tpush @endwstack, $endw;\n+\tpush @icstack, $ic;\n+\t$ic = $1;\n+\t$ic =~ s/\\@bullet/*/;\n+\t$ic =~ s/\\@minus/-/;\n+\t$_ = \"\\n=over 4\\n\";\n+\t$endw = \"itemize\";\n+    };\n+\n+    /^\\@enumerate\\s+([A-Z0-9]+)/ and do {\n+\tpush @endwstack, $endw;\n+\tpush @icstack, $ic;\n+\t$ic = $1 . \".\";\n+\t$_ = \"\\n=over 4\\n\";\n+\t$endw = \"enumerate\";\n+    };\n+\n+    /^\\@table\\s+(\\@[a-z]+)/ and do {\n+\tpush @endwstack, $endw;\n+\tpush @icstack, $ic;\n+\t$ic = $1;\n+\t$ic =~ s/\\@(?:samp|strong|key)/B/;\n+\t$ic =~ s/\\@(?:code|kbd)/C/;\n+\t$ic =~ s/\\@(?:dfn|var|emph|cite)/I/;\n+\t$ic =~ s/\\@(?:file)/F/;\n+\t$_ = \"\\n=over 4\\n\";\n+\t$endw = \"table\";\n+    };\n+\n+    /^\\@((?:small)?example)/ and do {\n+\tpush @endwstack, $endw;\n+\t$endw = $1;\n+\t$shift = \"\\t\";\n+\tnext;\n+    };\n+\n+    /^\\@end\\s+([a-z]+)/ and do {\n+\tif(defined $endw)\n+\t{\n+\t    die \"\\@$endw ended by \\@end $1 at line $.\\n\"\n+\t\tunless $1 eq $endw;\n+\n+\t    if($endw =~ /example$/)\n+\t    {\n+\t\t$shift = \"\";\n+\t\t$_ = \"\";\n+\t    }\n+\t    else\n+\t    {\n+\t\t$_ = \"\\n=back\\n\";\n+\t\tundef $endw;\n+\t\t$ic = pop @icstack;\n+\t    }\n+\t    $endw = pop @endwstack;\n+\t}\n+    };\n+\n+    /^\\@itemx?\\s*(.+)?$/ and do {\n+\tif(defined $1)\n+\t{\n+\t    $_ = \"=item $ic\\&LT;$1\\&GT;\\n\";\n+\t}\n+\telse\n+\t{\n+\t    $_ = \"=item $ic\\n\";\n+\t    $ic =~ y/A-Ya-y1-8/B-Zb-z2-9/;\n+\t}\n+    };\n+\t\n+    $section .= $shift.$_.\"\\n\";\n+}\n+\n+$sects{NAME} = \"$fn \\- $tl\\n\";\n+\n+for $sect (qw(NAME SYNOPSIS DESCRIPTION OPTIONS ENVIRONMENT FILES\n+\t      BUGS NOTES SEEALSO AUTHOR COPYRIGHT))\n+{\n+    if(exists $sects{$sect})\n+    {\n+\t$head = $sect;\n+\t$head =~ s/SEEALSO/SEE ALSO/;\n+\tprint \"=head1 $head\\n\\n\";\n+\tprint $sects{$sect};\n+\tprint \"\\n\";\n+    }\n+}"}, {"sha": "d51ae74b8d7b7fb7cfdbd59a282f3b3b2a8d63ca", "filename": "gcc/cpp.1", "status": "modified", "additions": 563, "deletions": 1, "changes": 564, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5/gcc%2Fcpp.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5/gcc%2Fcpp.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpp.1?ref=6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5", "patch": "@@ -1 +1,563 @@\n-.so man1/cccp.1\n+.rn '' }`\n+.de Sh\n+.br\n+.if t .Sp\n+.ne 5\n+.PP\n+\\fB\\\\$1\\fR\n+.PP\n+..\n+.de Sp\n+.if t .sp .5v\n+.if n .sp\n+..\n+.de Ip\n+.br\n+.ie \\\\n(.$>=3 .ne \\\\$3\n+.el .ne 3\n+.IP \"\\\\$1\" \\\\$2\n+..\n+.de Vb\n+.ft CW\n+.nf\n+.ne \\\\$1\n+..\n+.de Ve\n+.ft R\n+\n+.fi\n+..\n+'''\n+'''\n+'''     Set up \\*(-- to give an unbreakable dash;\n+'''     string Tr holds user defined translation string.\n+'''     Bell System Logo is used as a dummy character.\n+'''\n+.tr \\(*W-|\\(bv\\*(Tr\n+.ie n \\{\\\n+.ds -- \\(*W-\n+.ds PI pi\n+.if (\\n(.H=4u)&(1m=24u) .ds -- \\(*W\\h'-12u'\\(*W\\h'-12u'-\\\" diablo 10 pitch\n+.if (\\n(.H=4u)&(1m=20u) .ds -- \\(*W\\h'-12u'\\(*W\\h'-8u'-\\\" diablo 12 pitch\n+.ds L\" \"\"\n+.ds R\" \"\"\n+'''   \\*(M\", \\*(S\", \\*(N\" and \\*(T\" are the equivalent of\n+'''   \\*(L\" and \\*(R\", except that they are used on \".xx\" lines,\n+'''   such as .IP and .SH, which do another additional levels of\n+'''   double-quote interpretation\n+.ds M\" \"\"\"\n+.ds S\" \"\"\"\n+.ds N\" \"\"\"\"\"\n+.ds T\" \"\"\"\"\"\n+.ds L' '\n+.ds R' '\n+.ds M' '\n+.ds S' '\n+.ds N' '\n+.ds T' '\n+'br\\}\n+.el\\{\\\n+.ds -- \\(em\\|\n+.tr \\*(Tr\n+.ds L\" ``\n+.ds R\" ''\n+.ds M\" ``\n+.ds S\" ''\n+.ds N\" ``\n+.ds T\" ''\n+.ds L' `\n+.ds R' '\n+.ds M' `\n+.ds S' '\n+.ds N' `\n+.ds T' '\n+.ds PI \\(*p\n+'br\\}\n+.TH CPP 1 \"gcc-2.95\" \"14/Jun/99\" \"GNU\"\n+.UC\n+.if n .hy 0\n+.if n .na\n+.ds C+ C\\v'-.1v'\\h'-1p'\\s-2+\\h'-1p'+\\s0\\v'.1v'\\h'-1p'\n+.de CQ          \\\" put $1 in typewriter font\n+.ft CW\n+'if n \"\\c\n+'if t \\\\&\\\\$1\\c\n+'if n \\\\&\\\\$1\\c\n+'if n \\&\"\n+\\\\&\\\\$2 \\\\$3 \\\\$4 \\\\$5 \\\\$6 \\\\$7\n+'.ft R\n+..\n+.\\\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2\n+.\t\\\" AM - accent mark definitions\n+.bd B 3\n+.\t\\\" fudge factors for nroff and troff\n+.if n \\{\\\n+.\tds #H 0\n+.\tds #V .8m\n+.\tds #F .3m\n+.\tds #[ \\f1\n+.\tds #] \\fP\n+.\\}\n+.if t \\{\\\n+.\tds #H ((1u-(\\\\\\\\n(.fu%2u))*.13m)\n+.\tds #V .6m\n+.\tds #F 0\n+.\tds #[ \\&\n+.\tds #] \\&\n+.\\}\n+.\t\\\" simple accents for nroff and troff\n+.if n \\{\\\n+.\tds ' \\&\n+.\tds ` \\&\n+.\tds ^ \\&\n+.\tds , \\&\n+.\tds ~ ~\n+.\tds ? ?\n+.\tds ! !\n+.\tds /\n+.\tds q\n+.\\}\n+.if t \\{\\\n+.\tds ' \\\\k:\\h'-(\\\\n(.wu*8/10-\\*(#H)'\\'\\h\"|\\\\n:u\"\n+.\tds ` \\\\k:\\h'-(\\\\n(.wu*8/10-\\*(#H)'\\`\\h'|\\\\n:u'\n+.\tds ^ \\\\k:\\h'-(\\\\n(.wu*10/11-\\*(#H)'^\\h'|\\\\n:u'\n+.\tds , \\\\k:\\h'-(\\\\n(.wu*8/10)',\\h'|\\\\n:u'\n+.\tds ~ \\\\k:\\h'-(\\\\n(.wu-\\*(#H-.1m)'~\\h'|\\\\n:u'\n+.\tds ? \\s-2c\\h'-\\w'c'u*7/10'\\u\\h'\\*(#H'\\zi\\d\\s+2\\h'\\w'c'u*8/10'\n+.\tds ! \\s-2\\(or\\s+2\\h'-\\w'\\(or'u'\\v'-.8m'.\\v'.8m'\n+.\tds / \\\\k:\\h'-(\\\\n(.wu*8/10-\\*(#H)'\\z\\(sl\\h'|\\\\n:u'\n+.\tds q o\\h'-\\w'o'u*8/10'\\s-4\\v'.4m'\\z\\(*i\\v'-.4m'\\s+4\\h'\\w'o'u*8/10'\n+.\\}\n+.\t\\\" troff and (daisy-wheel) nroff accents\n+.ds : \\\\k:\\h'-(\\\\n(.wu*8/10-\\*(#H+.1m+\\*(#F)'\\v'-\\*(#V'\\z.\\h'.2m+\\*(#F'.\\h'|\\\\n:u'\\v'\\*(#V'\n+.ds 8 \\h'\\*(#H'\\(*b\\h'-\\*(#H'\n+.ds v \\\\k:\\h'-(\\\\n(.wu*9/10-\\*(#H)'\\v'-\\*(#V'\\*(#[\\s-4v\\s0\\v'\\*(#V'\\h'|\\\\n:u'\\*(#]\n+.ds _ \\\\k:\\h'-(\\\\n(.wu*9/10-\\*(#H+(\\*(#F*2/3))'\\v'-.4m'\\z\\(hy\\v'.4m'\\h'|\\\\n:u'\n+.ds . \\\\k:\\h'-(\\\\n(.wu*8/10)'\\v'\\*(#V*4/10'\\z.\\v'-\\*(#V*4/10'\\h'|\\\\n:u'\n+.ds 3 \\*(#[\\v'.2m'\\s-2\\&3\\s0\\v'-.2m'\\*(#]\n+.ds o \\\\k:\\h'-(\\\\n(.wu+\\w'\\(de'u-\\*(#H)/2u'\\v'-.3n'\\*(#[\\z\\(de\\v'.3n'\\h'|\\\\n:u'\\*(#]\n+.ds d- \\h'\\*(#H'\\(pd\\h'-\\w'~'u'\\v'-.25m'\\f2\\(hy\\fP\\v'.25m'\\h'-\\*(#H'\n+.ds D- D\\\\k:\\h'-\\w'D'u'\\v'-.11m'\\z\\(hy\\v'.11m'\\h'|\\\\n:u'\n+.ds th \\*(#[\\v'.3m'\\s+1I\\s-1\\v'-.3m'\\h'-(\\w'I'u*2/3)'\\s-1o\\s+1\\*(#]\n+.ds Th \\*(#[\\s+2I\\s-2\\h'-\\w'I'u*3/5'\\v'-.3m'o\\v'.3m'\\*(#]\n+.ds ae a\\h'-(\\w'a'u*4/10)'e\n+.ds Ae A\\h'-(\\w'A'u*4/10)'E\n+.ds oe o\\h'-(\\w'o'u*4/10)'e\n+.ds Oe O\\h'-(\\w'O'u*4/10)'E\n+.\t\\\" corrections for vroff\n+.if v .ds ~ \\\\k:\\h'-(\\\\n(.wu*9/10-\\*(#H)'\\s-2\\u~\\d\\s+2\\h'|\\\\n:u'\n+.if v .ds ^ \\\\k:\\h'-(\\\\n(.wu*10/11-\\*(#H)'\\v'-.4m'^\\v'.4m'\\h'|\\\\n:u'\n+.\t\\\" for low resolution devices (crt and lpr)\n+.if \\n(.H>23 .if \\n(.V>19 \\\n+\\{\\\n+.\tds : e\n+.\tds 8 ss\n+.\tds v \\h'-1'\\o'\\(aa\\(ga'\n+.\tds _ \\h'-1'^\n+.\tds . \\h'-1'.\n+.\tds 3 3\n+.\tds o a\n+.\tds d- d\\h'-1'\\(ga\n+.\tds D- D\\h'-1'\\(hy\n+.\tds th \\o'bp'\n+.\tds Th \\o'LP'\n+.\tds ae ae\n+.\tds Ae AE\n+.\tds oe oe\n+.\tds Oe OE\n+.\\}\n+.rm #[ #] #H #V #F C\n+.SH \"NAME\"\n+cpp \\- The C Preprocessor\n+.SH \"SYNOPSIS\"\n+cpp [\\fB\\-P\\fR] [\\fB\\-C\\fR] [\\fB\\-gcc\\fR] [\\fB\\-traditional\\fR]\n+    [\\fB\\-undef\\fR] [\\fB\\-trigraphs\\fR] [\\fB\\-pedantic\\fR]\n+    [\\fB\\-W\\fR\\fIwarn\\fR...] [\\fB\\-I\\fR\\fIdir\\fR...]\n+    [\\fB\\-D\\fR\\fImacro\\fR[=\\fIdefn\\fR]...] [\\fB\\-U\\fR\\fImacro\\fR]\n+    [\\fB\\-A\\fR\\fIpredicate\\fR(\\fIanswer\\fR)]\n+    [\\fB\\-M\\fR|\\fB\\-MM\\fR|\\fB\\-MD\\fR|\\fB\\-MMD\\fR [\\fB\\-MG\\fR]]\n+    [\\fB\\-x\\fR \\fIlanguage\\fR] [\\fB\\-std=\\fR\\fIstandard\\fR]\n+    \\fIinfile\\fR \\fIoutfile\\fR\n+.PP\n+Only the most useful options are listed here; see below for the remainder.\n+.SH \"DESCRIPTION\"\n+The C preprocessor is a \\fImacro processor\\fR that is used automatically by\n+the C compiler to transform your program before actual compilation.  It is\n+called a macro processor because it allows you to define \\fImacros\\fR,\n+which are brief abbreviations for longer constructs.\n+.PP\n+The C preprocessor provides four separate facilities that you can use as\n+you see fit:\n+.Ip \"\\(bu\" 4\n+Inclusion of header files.  These are files of declarations that can be\n+substituted into your program.\n+.Ip \"\\(bu\" 4\n+Macro expansion.  You can define \\fImacros\\fR, which are abbreviations\n+for arbitrary fragments of C code, and then the C preprocessor will\n+replace the macros with their definitions throughout the program.\n+.Ip \"\\(bu\" 4\n+Conditional compilation.  Using special preprocessing directives, you\n+can include or exclude parts of the program according to various\n+conditions.\n+.Ip \"\\(bu\" 4\n+Line control.  If you use a program to combine or rearrange source files into\n+an intermediate file which is then compiled, you can use line control\n+to inform the compiler of where each source line originally came from.\n+.PP\n+C preprocessors vary in some details.  This manual discusses the \\s-1GNU\\s0 C\n+preprocessor, the C Compatible Compiler Preprocessor.  The \\s-1GNU\\s0 C\n+preprocessor provides a superset of the features of \\s-1ANSI\\s0 Standard C.\n+.PP\n+\\s-1ANSI\\s0 Standard C requires the rejection of many harmless constructs commonly\n+used by today's C programs.  Such incompatibility would be inconvenient for\n+users, so the \\s-1GNU\\s0 C preprocessor is configured to accept these constructs\n+by default.  Strictly speaking, to get \\s-1ANSI\\s0 Standard C, you must use the\n+options \\fB\\-trigraphs\\fR, \\fB\\-undef\\fR and \\fB\\-pedantic\\fR, but in\n+practice the consequences of having strict \\s-1ANSI\\s0 Standard C make it\n+undesirable to do this.  \n+.PP\n+The C preprocessor is designed for C\\-like languages; you may run into\n+problems if you apply it to other kinds of languages, because it assumes\n+that it is dealing with C.  For example, the C preprocessor sometimes\n+outputs extra white space to avoid inadvertent C token concatenation,\n+and this may cause problems with other languages.\n+.SH \"OPTIONS\"\n+The C preprocessor expects two file names as arguments, \\fIinfile\\fR and\n+\\fIoutfile\\fR.  The preprocessor reads \\fIinfile\\fR together with any other\n+files it specifies with \\fB#include\\fR.  All the output generated by the\n+combined input files is written in \\fIoutfile\\fR.\n+.PP\n+Either \\fIinfile\\fR or \\fIoutfile\\fR may be \\fB\\-\\fR, which as\n+\\fIinfile\\fR means to read from standard input and as \\fIoutfile\\fR\n+means to write to standard output.  Also, if either file is omitted, it\n+means the same as if \\fB\\-\\fR had been specified for that file.\n+.PP\n+Here is a table of command options accepted by the C preprocessor.\n+These options can also be given when compiling a C program; they are\n+passed along automatically to the preprocessor when it is invoked by the\n+compiler.\n+.Ip \"\\fB\\-P\\fR\" 4\n+Inhibit generation of \\fB#\\fR\\-lines with line-number information in\n+the output from the preprocessor   This might be\n+useful when running the preprocessor on something that is not C code\n+and will be sent to a program which might be confused by the\n+\\fB#\\fR\\-lines.\n+.Ip \"\\fB\\-C\\fR\" 4\n+Do not discard comments: pass them through to the output file.\n+Comments appearing in arguments of a macro call will be copied to the\n+output before the expansion of the macro call.\n+.Ip \"\\fB\\-traditional\\fR\" 4\n+Try to imitate the behavior of old-fashioned C, as opposed to \\s-1ANSI\\s0 C.\n+.Ip \"\\(bu\" 8\n+Traditional macro expansion pays no attention to singlequote or\n+doublequote characters; macro argument symbols are replaced by the\n+argument values even when they appear within apparent string or\n+character constants.\n+.Ip \"\\(bu\" 8\n+Traditionally, it is permissible for a macro expansion to end in the\n+middle of a string or character constant.  The constant continues into\n+the text surrounding the macro call.\n+.Ip \"\\(bu\" 8\n+However, traditionally the end of the line terminates a string or\n+character constant, with no error.\n+.Ip \"\\(bu\" 8\n+In traditional C, a comment is equivalent to no text at all.  (In \\s-1ANSI\\s0\n+C, a comment counts as whitespace.)\n+.Ip \"\\(bu\" 8\n+Traditional C does not have the concept of a ``preprocessing number'\\*(R'.\n+It considers \\fB1.0e+4\\fR to be three tokens: \\fB1.0e\\fR, \\fB+\\fR,\n+and \\fB4\\fR.\n+.Ip \"\\(bu\" 8\n+A macro is not suppressed within its own definition, in traditional C.\n+Thus, any macro that is used recursively inevitably causes an error.\n+.Ip \"\\(bu\" 8\n+The character \\fB#\\fR has no special meaning within a macro definition\n+in traditional C.\n+.Ip \"\\(bu\" 8\n+In traditional C, the text at the end of a macro expansion can run\n+together with the text after the macro call, to produce a single token.\n+(This is impossible in \\s-1ANSI\\s0 C.)\n+.Ip \"\\(bu\" 8\n+Traditionally, \\fB\\e\\fR inside a macro argument suppresses the syntactic\n+significance of the following character.\n+.Sp\n+Use the \\fB\\-traditional\\fR option when preprocessing Fortran code,\n+so that singlequotes and doublequotes\n+within Fortran comment lines\n+(which are generally not recognized as such by the preprocessor)\n+do not cause diagnostics\n+about unterminated character or string constants.\n+.Sp\n+However, this option does not prevent diagnostics\n+about unterminated comments\n+when a C\\-style comment appears to start, but not end,\n+within Fortran-style commentary.\n+.Sp\n+So, the following Fortran comment lines are accepted with\n+\\fB\\-traditional\\fR:\n+.Sp\n+.Vb 3\n+\\&        C This isn't an unterminated character constant\n+\\&        C Neither is \"20000000000, an octal constant\n+\\&        C in some dialects of Fortran\n+.Ve\n+However, this type of comment line will likely produce a diagnostic,\n+or at least unexpected output from the preprocessor,\n+due to the unterminated comment:\n+.Sp\n+.Vb 2\n+\\&        C Some Fortran compilers accept /* as starting\n+\\&        C an inline comment.\n+.Ve\n+Note that \\f(CWg77\\fR automatically supplies\n+the \\fB\\-traditional\\fR option\n+when it invokes the preprocessor.\n+However, a future version of \\f(CWg77\\fR\n+might use a different, more-Fortran-aware preprocessor\n+in place of \\f(CWcpp\\fR.\n+.Ip \"\\fB\\-trigraphs\\fR\" 4\n+Process \\s-1ANSI\\s0 standard trigraph sequences.  These are three-character\n+sequences, all starting with \\fB??\\fR, that are defined by \\s-1ANSI\\s0 C to\n+stand for single characters.  For example, \\fB??/\\fR stands for\n+\\fB\\e\\fR, so \\fB\\*(R'??/n\\*(R'\\fR is a character constant for a newline.\n+Strictly speaking, the \\s-1GNU\\s0 C preprocessor does not support all\n+programs in \\s-1ANSI\\s0 Standard C unless \\fB\\-trigraphs\\fR is used, but if\n+you ever notice the difference it will be with relief.\n+.Sp\n+You don't want to know any more about trigraphs.\n+.Ip \"\\fB\\-pedantic\\fR\" 4\n+Issue warnings required by the \\s-1ANSI\\s0 C standard in certain cases such\n+as when text other than a comment follows \\fB#else\\fR or \\fB#endif\\fR.\n+.Ip \"\\fB\\-pedantic-errors\\fR\" 4\n+Like \\fB\\-pedantic\\fR, except that errors are produced rather than\n+warnings.\n+.Ip \"\\fB\\-Wtrigraphs\\fR\" 4\n+Warn if any trigraphs are encountered.  Currently this only works if you\n+have turned trigraphs on with \\fB\\-trigraphs\\fR or \\fB\\-ansi\\fR; in the\n+future this restriction will be removed.\n+.Ip \"\\fB\\-Wcomment\\fR\" 4\n+Warn whenever a comment-start sequence \\fB/*\\fR appears in a \\fB/*\\fR\n+comment, or whenever a Backslash-Newline appears in a \\fB//\\fR comment.\n+.Ip \"\\fB\\-Wall\\fR\" 4\n+Requests both \\fB\\-Wtrigraphs\\fR and \\fB\\-Wcomment\\fR (but not\n+\\fB\\-Wtraditional\\fR or \\fB\\-Wundef\\fR). \n+.Ip \"\\fB\\-Wtraditional\\fR\" 4\n+Warn about certain constructs that behave differently in traditional and\n+\\s-1ANSI\\s0 C.\n+.Ip \"\\fB\\-Wundef\\fR\" 4\n+Warn if an undefined identifier is evaluated in an \\fB#if\\fR directive.\n+.Ip \"\\fB\\-I \\fIdirectory\\fR\\fR\" 4\n+Add the directory \\fIdirectory\\fR to the head of the list of\n+directories to be searched for header files \n+This can be used to override a system header file, substituting your\n+own version, since these directories are searched before the system\n+header file directories.  If you use more than one \\fB\\-I\\fR option,\n+the directories are scanned in left-to-right order; the standard\n+system directories come after.\n+.Ip \"\\fB\\-I-\\fR\" 4\n+Any directories specified with \\fB\\-I\\fR options before the \\fB\\-I-\\fR\n+option are searched only for the case of \\fB#include \\*(L\"\\fIfile\\fB\\*(R\"\\fR;\n+they are not searched for \\fB#include <\\fIfile\\fB>\\fR.\n+.Sp\n+If additional directories are specified with \\fB\\-I\\fR options after\n+the \\fB\\-I-\\fR, these directories are searched for all \\fB#include\\fR\n+directives.\n+.Sp\n+In addition, the \\fB\\-I-\\fR option inhibits the use of the current\n+directory as the first search directory for \\fB#include \\*(L\"\\fIfile\\fB\\*(R\"\\fR.\n+Therefore, the current directory is searched only if it is requested\n+explicitly with \\fB\\-I.\\fR.  Specifying both \\fB\\-I-\\fR and \\fB\\-I.\\fR\n+allows you to control precisely which directories are searched before\n+the current one and which are searched after.\n+.Ip \"\\fB\\-nostdinc\\fR\" 4\n+Do not search the standard system directories for header files.\n+Only the directories you have specified with \\fB\\-I\\fR options\n+(and the current directory, if appropriate) are searched.\n+.Ip \"\\fB\\-nostdinc++\\fR\" 4\n+Do not search for header files in the \\*(C+\\-specific standard directories,\n+but do still search the other standard directories.\n+(This option is used when building the \\*(C+ library.)\n+.Ip \"\\fB\\-remap\\fR\" 4\n+When searching for a header file in a directory, remap file names if a\n+file named \\fIheader.gcc\\fR exists in that directory.  This can be used\n+to work around limitations of file systems with file name restrictions.\n+The \\fIheader.gcc\\fR file should contain a series of lines with two\n+tokens on each line: the first token is the name to map, and the second\n+token is the actual name to use.\n+.Ip \"\\fB\\-D \\fIname\\fR\\fR\" 4\n+Predefine \\fIname\\fR as a macro, with definition \\fB1\\fR.\n+.Ip \"\\fB\\-D \\fIname\\fR=\\fIdefinition\\fR\\fR\" 4\n+Predefine \\fIname\\fR as a macro, with definition \\fIdefinition\\fR.\n+There are no restrictions on the contents of \\fIdefinition\\fR, but if\n+you are invoking the preprocessor from a shell or shell-like program you\n+may need to use the shell's quoting syntax to protect characters such as\n+spaces that have a meaning in the shell syntax.  If you use more than\n+one \\fB\\-D\\fR for the same \\fIname\\fR, the rightmost definition takes\n+effect.\n+.Ip \"\\fB\\-U \\fIname\\fR\\fR\" 4\n+Do not predefine \\fIname\\fR.  If both \\fB\\-U\\fR and \\fB\\-D\\fR are\n+specified for one name, whichever one appears later on the command line\n+wins.\n+.Ip \"\\fB\\-undef\\fR\" 4\n+Do not predefine any nonstandard macros.\n+.Ip \"\\fB\\-gcc\\fR\" 4\n+Define the macros \\fI_\\|_GNUC_\\|_\\fR and \\fI_\\|_GNUC_MINOR_\\|_\\fR.  These are\n+defined automatically when you use \\fBgcc \\-E\\fR; you can turn them off\n+in that case with \\fB\\-no-gcc\\fR.\n+.Ip \"\\fB\\-A \\fIpredicate\\fR(\\fIanswer\\fR)\\fR\" 4\n+Make an assertion with the predicate \\fIpredicate\\fR and answer\n+\\fIanswer\\fR.  \n+.Sp\n+You can use \\fB\\-A-\\fR to disable all predefined assertions; it also\n+undefines all predefined macros and all macros that preceded it on the\n+command line.\n+.Ip \"\\fB\\-dM\\fR\" 4\n+Instead of outputting the result of preprocessing, output a list of\n+\\fB#define\\fR directives for all the macros defined during the\n+execution of the preprocessor, including predefined macros.  This gives\n+you a way of finding out what is predefined in your version of the\n+preprocessor; assuming you have no file \\fBfoo.h\\fR, the command\n+.Sp\n+.Vb 1\n+\\&        touch foo.h; cpp -dM foo.h\n+.Ve\n+will show the values of any predefined macros.\n+.Ip \"\\fB\\-dD\\fR\" 4\n+Like \\fB\\-dM\\fR except in two respects: it does \\fInot\\fR include the\n+predefined macros, and it outputs \\fIboth\\fR the \\fB#define\\fR\n+directives and the result of preprocessing.  Both kinds of output go to\n+the standard output file.\n+.Ip \"\\fB\\-dI\\fR\" 4\n+Output \\fB#include\\fR directives in addition to the result of preprocessing.\n+.Ip \"\\fB\\-M [\\-\\s-1MG\\s0]\\fR\" 4\n+Instead of outputting the result of preprocessing, output a rule\n+suitable for \\f(CWmake\\fR describing the dependencies of the main\n+source file.  The preprocessor outputs one \\f(CWmake\\fR rule containing\n+the object file name for that source file, a colon, and the names of\n+all the included files.  If there are many included files then the\n+rule is split into several lines using \\fB\\e\\fR\\-newline.\n+.Sp\n+\\fB\\-\\s-1MG\\s0\\fR says to treat missing header files as generated files and assume\n+they live in the same directory as the source file.  It must be specified\n+in addition to \\fB\\-M\\fR.\n+.Sp\n+This feature is used in automatic updating of makefiles.\n+.Ip \"\\fB\\-\\s-1MM\\s0 [\\-\\s-1MG\\s0]\\fR\" 4\n+Like \\fB\\-M\\fR but mention only the files included with \\fB#include\n+\\*(L\"\\fIfile\\fR\\*(R\"\\fR.  System header files included with \\fB#include\n+<\\fIfile\\fR>\\fR are omitted.\n+.Ip \"\\fB\\-\\s-1MD\\s0 \\fIfile\\fR\\fR\" 4\n+Like \\fB\\-M\\fR but the dependency information is written to \\fIfile\\fR.\n+This is in addition to compiling the file as specified---\\fB\\-\\s-1MD\\s0\\fR does\n+not inhibit ordinary compilation the way \\fB\\-M\\fR does.\n+.Sp\n+When invoking \\f(CWgcc\\fR, do not specify the \\fIfile\\fR argument.\n+\\f(CWgcc\\fR will create file names made by replacing \\*(L\".c\\*(R\" with \\*(L\".d\\*(R\" at\n+the end of the input file names.\n+.Sp\n+In Mach, you can use the utility \\f(CWmd\\fR to merge multiple dependency\n+files into a single dependency file suitable for using with the \\fBmake\\fR\n+command.\n+.Ip \"\\fB\\-\\s-1MMD\\s0 \\fIfile\\fR\\fR\" 4\n+Like \\fB\\-\\s-1MD\\s0\\fR except mention only user header files, not system\n+header files.\n+.Ip \"\\fB\\-H\\fR\" 4\n+Print the name of each header file used, in addition to other normal\n+activities.\n+.Ip \"\\fB\\-imacros \\fIfile\\fR\\fR\" 4\n+Process \\fIfile\\fR as input, discarding the resulting output, before\n+processing the regular input file.  Because the output generated from\n+\\fIfile\\fR is discarded, the only effect of \\fB\\-imacros \\fIfile\\fR\\fR\n+is to make the macros defined in \\fIfile\\fR available for use in the\n+main input.\n+.Ip \"\\fB\\-include \\fIfile\\fR\\fR\" 4\n+Process \\fIfile\\fR as input, and include all the resulting output,\n+before processing the regular input file.  \n+.Ip \"\\fB\\-idirafter \\fIdir\\fR\\fR\" 4\n+Add the directory \\fIdir\\fR to the second include path.  The directories\n+on the second include path are searched when a header file is not found\n+in any of the directories in the main include path (the one that\n+\\fB\\-I\\fR adds to).\n+.Ip \"\\fB\\-iprefix \\fIprefix\\fR\\fR\" 4\n+Specify \\fIprefix\\fR as the prefix for subsequent \\fB\\-iwithprefix\\fR\n+options.\n+.Ip \"\\fB\\-iwithprefix \\fIdir\\fR\\fR\" 4\n+Add a directory to the second include path.  The directory's name is\n+made by concatenating \\fIprefix\\fR and \\fIdir\\fR, where \\fIprefix\\fR\n+was specified previously with \\fB\\-iprefix\\fR.\n+.Ip \"\\fB\\-isystem \\fIdir\\fR\\fR\" 4\n+Add a directory to the beginning of the second include path, marking it\n+as a system directory, so that it gets the same special treatment as\n+is applied to the standard system directories.\n+.Ip \"\\fB\\-x c\\fR\" 4\n+.Ip \"\\fB\\-x c++\\fR\" 4\n+.Ip \"\\fB\\-x objective-c\\fR\" 4\n+.Ip \"\\fB\\-x assembler-with-cpp\\fR\" 4\n+Specify the source language: C, \\*(C+, Objective-C, or assembly.  This has\n+nothing to do with standards conformance or extensions; it merely\n+selects which base syntax to expect.  If you give none of these options,\n+cpp will deduce the language from the extension of the source file:\n+\\&\\fB.c\\fR, \\fB.cc\\fR, \\fB.m\\fR, or \\fB.S\\fR.  Some other common\n+extensions for \\*(C+ and assembly are also recognized.  If cpp does not\n+recognize the extension, it will treat the file as C; this is the most\n+generic mode.\n+.Sp\n+\\fBNote:\\fR Previous versions of cpp accepted a \\fB\\-lang\\fR option\n+which selected both the language and the standards conformance level.\n+This option has been removed, because it conflicts with the \\fB\\-l\\fR\n+option.\n+.Ip \"\\fB\\-std=\\fIstandard\\fR\\fR\" 4\n+.Ip \"\\fB\\-ansi\\fR\" 4\n+Specify the standard to which the code should conform.  Currently cpp\n+only knows about the standards for C; other language standards will be\n+added in the future.\n+.Sp\n+\\fIstandard\\fR\n+may be one of:\n+.Ip \"\\f(CWiso9899:1990\\fR\" 8\n+The \\s-1ISO\\s0 C standard from 1990.\n+.Ip \"\\f(CWiso9899:199409\\fR\" 8\n+.Ip \"\\f(CWc89\\fR\" 8\n+The 1990 C standard, as amended in 1994.  \\fBc89\\fR is the customary\n+shorthand for this version of the standard.\n+.Sp\n+The \\fB\\-ansi\\fR option is equivalent to \\fB\\-std=c89\\fR.\n+.Ip \"\\f(CWiso9899:199x\\fR\" 8\n+.Ip \"\\f(CWc9x\\fR\" 8\n+The revised \\s-1ISO\\s0 C standard, which is expected to be promulgated some\n+time in 1999.  It has not been approved yet, hence the \\fBx\\fR.\n+.Ip \"\\f(CWgnu89\\fR\" 8\n+The 1990 C standard plus \\s-1GNU\\s0 extensions.  This is the default.\n+.Ip \"\\f(CWgnu9x\\fR\" 8\n+The 199x C standard plus \\s-1GNU\\s0 extensions.\n+.Ip \"\\fB\\-Wp,\\-lint\\fR\" 4\n+Look for commands to the program checker \\f(CWlint\\fR embedded in\n+comments, and emit them preceded by \\fB#pragma lint\\fR.  For example,\n+the comment \\fB/* \\s-1NOTREACHED\\s0 */\\fR becomes \\fB#pragma lint\n+\\s-1NOTREACHED\\s0\\fR.\n+.Sp\n+Because of the clash with \\fB\\-l\\fR, you must use the awkward syntax\n+above.  In a future release, this option will be replaced by\n+\\fB\\-flint\\fR or \\fB\\-Wlint\\fR; we are not sure which yet.\n+.Ip \"\\fB\\-$\\fR\" 4\n+Forbid the use of \\fB$\\fR in identifiers.  The C standard does not\n+permit this, but it is a common extension.\n+.SH \"SEE ALSO\"\n+\\fIgcc\\fR\\|(1), \\fIas\\fR\\|(1), \\fIld\\fR\\|(1), and the Info entries for \\fIcpp\\fR, \\fIgcc\\fR, and\n+\\fIbinutils\\fR.\n+.SH \"COPYRIGHT\"\n+Copyright  1987, 1989, 1991-1999\n+Free Software Foundation, Inc.\n+.PP\n+Permission is granted to make and distribute verbatim copies of\n+this manual provided the copyright notice and this permission notice\n+are preserved on all copies.\n+.PP\n+Permission is granted to copy and distribute modified versions of this\n+manual under the conditions for verbatim copying, provided also that\n+the entire resulting derived work is distributed under the terms of a\n+permission notice identical to this one.\n+.PP\n+Permission is granted to copy and distribute translations of this manual\n+into another language, under the above conditions for modified versions.\n+.rn }` ''"}, {"sha": "4afcd975a289b9951fc14ab7858268795329eff5", "filename": "gcc/cpp.texi", "status": "modified", "additions": 34, "deletions": 11, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5/gcc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5/gcc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpp.texi?ref=6251188c9ddd24c91f15cc2dcc30fc4eaeb53fc5", "patch": "@@ -16,8 +16,7 @@\n @ifinfo\n This file documents the GNU C Preprocessor.\n \n-Copyright 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1997, 1998, 1999\n-Free Software Foundation, Inc.\n+Copyright 1987, 1989, 1991-1999 Free Software Foundation, Inc.\n \n Permission is granted to make and distribute verbatim copies of\n this manual provided the copyright notice and this permission notice\n@@ -42,7 +41,7 @@ into another language, under the above conditions for modified versions.\n @titlepage\n @c @finalout\n @title The C Preprocessor\n-@subtitle Last revised September 1998\n+@subtitle Last revised May 1999\n @subtitle for GCC version 2\n @author Richard M. Stallman\n @page\n@@ -51,7 +50,8 @@ This booklet is eventually intended to form the first chapter of a GNU\n C Language manual.\n \n @vskip 0pt plus 1filll\n-Copyright @copyright{} 1987, 1989, 1991-1998\n+@c man begin COPYRIGHT\n+Copyright @copyright{} 1987, 1989, 1991-1999\n Free Software Foundation, Inc.\n \n Permission is granted to make and distribute verbatim copies of\n@@ -65,11 +65,13 @@ permission notice identical to this one.\n \n Permission is granted to copy and distribute translations of this manual\n into another language, under the above conditions for modified versions.\n+@c man end\n @end titlepage\n @page\n \n @node Top, Global Actions,, (DIR)\n @chapter The C Preprocessor\n+@c man begin DESCRIPTION\n \n The C preprocessor is a @dfn{macro processor} that is used automatically by\n the C compiler to transform your program before actual compilation.  It is\n@@ -117,6 +119,7 @@ problems if you apply it to other kinds of languages, because it assumes\n that it is dealing with C@.  For example, the C preprocessor sometimes\n outputs extra white space to avoid inadvertent C token concatenation,\n and this may cause problems with other languages.\n+@c man end\n \n @menu\n * Global Actions::    Actions made uniformly on all input files.\n@@ -2516,15 +2519,35 @@ Most often when you use the C preprocessor you will not have to invoke it\n explicitly: the C compiler will do so automatically.  However, the\n preprocessor is sometimes useful on its own.\n \n+@ignore\n+@c man begin SYNOPSIS\n+cpp [@samp{-P}] [@samp{-C}] [@samp{-gcc}] [@samp{-traditional}]\n+    [@samp{-undef}] [@samp{-trigraphs}] [@samp{-pedantic}]\n+    [@samp{-W}@var{warn}...] [@samp{-I}@var{dir}...]\n+    [@samp{-D}@var{macro}[=@var{defn}]...] [@samp{-U}@var{macro}]\n+    [@samp{-A}@var{predicate}(@var{answer})]\n+    [@samp{-M}|@samp{-MM}|@samp{-MD}|@samp{-MMD} [@samp{-MG}]]\n+    [@samp{-x} @var{language}] [@samp{-std=}@var{standard}]\n+    @var{infile} @var{outfile}\n+\n+Only the most useful options are listed here; see below for the remainder.\n+@c man end\n+@c man begin SEEALSO\n+gcc(1), as(1), ld(1), and the Info entries for @file{cpp}, @file{gcc}, and\n+@file{binutils}.\n+@c man end\n+@end ignore\n+\n+@c man begin OPTIONS\n The C preprocessor expects two file names as arguments, @var{infile} and\n @var{outfile}.  The preprocessor reads @var{infile} together with any other\n files it specifies with @samp{#include}.  All the output generated by the\n combined input files is written in @var{outfile}.\n \n-Either @var{infile} or @var{outfile} may be @samp{-}, which as @var{infile}\n-means to read from standard input and as @var{outfile} means to write to\n-standard output.  Also, if @var{outfile} or both file names are omitted,\n-the standard output and standard input are used for the omitted file names.\n+Either @var{infile} or @var{outfile} may be @samp{-}, which as\n+@var{infile} means to read from standard input and as @var{outfile}\n+means to write to standard output.  Also, if either file is omitted, it\n+means the same as if @samp{-} had been specified for that file.\n \n @cindex options\n Here is a table of command options accepted by the C preprocessor.\n@@ -2751,8 +2774,8 @@ effect.\n @item -U @var{name}\n @findex -U\n Do not predefine @var{name}.  If both @samp{-U} and @samp{-D} are\n-specified for one name, the @samp{-U} beats the @samp{-D} and the name\n-is not predefined.\n+specified for one name, whichever one appears later on the command line\n+wins.\n \n @item -undef\n @findex -undef\n@@ -2952,8 +2975,8 @@ above.  In a future release, this option will be replaced by\n @findex -$\n Forbid the use of @samp{$} in identifiers.  The C standard does not\n permit this, but it is a common extension.\n-\n @end table\n+@c man end\n \n @node Concept Index, Index, Invocation, Top\n @unnumbered Concept Index"}]}