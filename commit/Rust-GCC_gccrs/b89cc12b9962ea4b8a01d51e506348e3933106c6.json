{"sha": "b89cc12b9962ea4b8a01d51e506348e3933106c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg5Y2MxMmI5OTYyZWE0YjhhMDFkNTFlNTA2MzQ4ZTM5MzMxMDZjNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-01-28T04:31:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-01-28T04:31:30Z"}, "message": "re PR c++/54652 (ICE with -g)\n\n\tPR c++/54652\n\t* decl.c (duplicate_decls): Always use oldtype for TYPE_DECL.\n\nFrom-SVN: r207169", "tree": {"sha": "89f30a03fe7a1937cac6a24f588836ec605a6c77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89f30a03fe7a1937cac6a24f588836ec605a6c77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b89cc12b9962ea4b8a01d51e506348e3933106c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b89cc12b9962ea4b8a01d51e506348e3933106c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b89cc12b9962ea4b8a01d51e506348e3933106c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b89cc12b9962ea4b8a01d51e506348e3933106c6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e73c3f3a5fa913452747c9facff9fb2be7e23a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e73c3f3a5fa913452747c9facff9fb2be7e23a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e73c3f3a5fa913452747c9facff9fb2be7e23a0"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "214cb579ff440e1b34c63a2eaaf110264c8fff5d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89cc12b9962ea4b8a01d51e506348e3933106c6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89cc12b9962ea4b8a01d51e506348e3933106c6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b89cc12b9962ea4b8a01d51e506348e3933106c6", "patch": "@@ -1,5 +1,8 @@\n 2014-01-27  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/54652\n+\t* decl.c (duplicate_decls): Always use oldtype for TYPE_DECL.\n+\n \tPR c++/58504\n \t* pt.c (tsubst_copy_and_build) [TRAIT_EXPR]: Use tsubst for\n \ttypes."}, {"sha": "c93c7831a0891a66981c81b99fb316f63b93538e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89cc12b9962ea4b8a01d51e506348e3933106c6/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89cc12b9962ea4b8a01d51e506348e3933106c6/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b89cc12b9962ea4b8a01d51e506348e3933106c6", "patch": "@@ -1926,9 +1926,9 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)\n       /* Merge the data types specified in the two decls.  */\n       newtype = merge_types (TREE_TYPE (newdecl), TREE_TYPE (olddecl));\n \n-      /* If merge_types produces a non-typedef type, just use the old type.  */\n-      if (TREE_CODE (newdecl) == TYPE_DECL\n-\t  && newtype == DECL_ORIGINAL_TYPE (newdecl))\n+      /* For typedefs use the old type, as the new type's DECL_NAME points\n+\t at newdecl, which will be ggc_freed.  */\n+      if (TREE_CODE (newdecl) == TYPE_DECL)\n \tnewtype = oldtype;\n \n       if (VAR_P (newdecl))"}, {"sha": "19a9959109d79fe4b3301f1a6113f9be74446b63", "filename": "gcc/testsuite/g++.dg/ext/attrib48.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89cc12b9962ea4b8a01d51e506348e3933106c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89cc12b9962ea4b8a01d51e506348e3933106c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib48.C?ref=b89cc12b9962ea4b8a01d51e506348e3933106c6", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/54652\n+\n+typedef unsigned L __attribute__ ((aligned));\n+typedef unsigned L __attribute__ ((aligned));\n+\n+L l;"}]}