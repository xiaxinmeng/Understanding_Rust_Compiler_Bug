{"sha": "3049ccbb8e0ee61c0a450bfee5f397f14699e2dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA0OWNjYmI4ZTBlZTYxYzBhNDUwYmZlZTVmMzk3ZjE0Njk5ZTJkYw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-11-28T23:50:06Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-11-28T23:50:06Z"}, "message": "rs6000: Fix formatting of *mov{si,di}_internal.*\n\n\n\t* config/rs6000/rs6000.md (*movsi_internal1): Fix formatting.  Improve\n\tformatting.\n\t(*movdi_internal64): Ditto.\n\nFrom-SVN: r278822", "tree": {"sha": "a70b47271c71ec86ef6e1612fc721828a5679952", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a70b47271c71ec86ef6e1612fc721828a5679952"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3049ccbb8e0ee61c0a450bfee5f397f14699e2dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3049ccbb8e0ee61c0a450bfee5f397f14699e2dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3049ccbb8e0ee61c0a450bfee5f397f14699e2dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3049ccbb8e0ee61c0a450bfee5f397f14699e2dc/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9"}], "stats": {"total": 198, "additions": 102, "deletions": 96}, "files": [{"sha": "7eed4b2047a8587036ac0836cf4ed7029278028c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3049ccbb8e0ee61c0a450bfee5f397f14699e2dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3049ccbb8e0ee61c0a450bfee5f397f14699e2dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3049ccbb8e0ee61c0a450bfee5f397f14699e2dc", "patch": "@@ -1,3 +1,9 @@\n+2019-11-28  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (*movsi_internal1): Fix formatting.  Improve\n+\tformatting.\n+\t(*movdi_internal64): Ditto.\n+\n 2019-11-28  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/92602"}, {"sha": "f3c8eb06fc1d3be54bed5ba5370eae14d5bcf75a", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 96, "deletions": 96, "changes": 192, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3049ccbb8e0ee61c0a450bfee5f397f14699e2dc/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3049ccbb8e0ee61c0a450bfee5f397f14699e2dc/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=3049ccbb8e0ee61c0a450bfee5f397f14699e2dc", "patch": "@@ -6889,34 +6889,34 @@\n \t\t\t\t UNSPEC_MOVSI_GOT))]\n   \"\")\n \n-;;\t\tMR           LA\n-;;\t\tLWZ          LFIWZX      LXSIWZX\n-;;\t\tSTW          STFIWX      STXSIWX\n-;;\t\tLI           LIS         #\n-;;\t\tXXLOR        XXSPLTIB 0  XXSPLTIB -1 VSPLTISW\n-;;\t\tXXLXOR 0     XXLORC -1   P9 const\n-;;\t\tMTVSRWZ      MFVSRWZ\n-;;\t\tMF%1         MT%0        NOP\n+;;\t   MR          LA\n+;;\t   LWZ         LFIWZX      LXSIWZX\n+;;\t   STW         STFIWX      STXSIWX\n+;;\t   LI          LIS         #\n+;;\t   XXLOR       XXSPLTIB 0  XXSPLTIB -1 VSPLTISW\n+;;\t   XXLXOR 0    XXLORC -1   P9 const\n+;;\t   MTVSRWZ     MFVSRWZ\n+;;\t   MF%1        MT%0        NOP\n \n (define_insn \"*movsi_internal1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\"\n-\t\t\"=r,         r,\n-\t\tr,           d,          v,\n-\t\tm,           Z,          Z,\n-\t\tr,           r,          r,\n-\t\twa,          wa,         wa,         v,\n-\t\twa,          v,          v,\n-\t\twa,          r,\n-\t\tr,           *h,         *h\")\n+\t  \"=r,         r,\n+\t   r,          d,          v,\n+\t   m,          Z,          Z,\n+\t   r,          r,          r,\n+\t   wa,         wa,         wa,         v,\n+\t   wa,         v,          v,\n+\t   wa,         r,\n+\t   r,          *h,         *h\")\n \t(match_operand:SI 1 \"input_operand\"\n-\t\t\"r,          U,\n-\t\tm,           Z,          Z,\n-\t\tr,           d,          v,\n-\t\tI,           L,          n,\n-\t\twa,          O,          wM,         wB,\n-\t\tO,           wM,         wS,\n-\t\tr,           wa,\n-\t\t*h,          r,          0\"))]\n+\t  \"r,          U,\n+\t   m,          Z,          Z,\n+\t   r,          d,          v,\n+\t   I,          L,          n,\n+\t   wa,         O,          wM,         wB,\n+\t   O,          wM,         wS,\n+\t   r,          wa,\n+\t   *h,         r,          0\"))]\n   \"gpc_reg_operand (operands[0], SImode)\n    || gpc_reg_operand (operands[1], SImode)\"\n   \"@\n@@ -6944,32 +6944,32 @@\n    mt%0 %1\n    nop\"\n   [(set_attr \"type\"\n-\t\t\"*,         *,\n-\t\tload,       fpload,     fpload,\n-\t\tstore,      fpstore,    fpstore,\n-\t\t*,          *,          *,\n-\t\tveclogical, vecsimple,  vecsimple,  vecsimple,\n-\t\tveclogical, veclogical, vecsimple,\n-\t\tmffgpr,     mftgpr,\n-\t\t*,          *,          *\")\n+\t  \"*,          *,\n+\t   load,       fpload,     fpload,\n+\t   store,      fpstore,    fpstore,\n+\t   *,          *,          *,\n+\t   veclogical, vecsimple,  vecsimple,  vecsimple,\n+\t   veclogical, veclogical, vecsimple,\n+\t   mffgpr,     mftgpr,\n+\t   *,          *,          *\")\n    (set_attr \"length\"\n-\t\t\"*,         *,\n-\t\t*,          *,           *,\n-\t\t*,          *,           *,\n-\t\t*,          *,           8,\n-\t\t*,          *,           *,          *,\n-\t\t*,          *,           8,\n-\t\t*,          *,\n-\t\t*,          *,           *\")\n+\t  \"*,          *,\n+\t   *,          *,          *,\n+\t   *,          *,          *,\n+\t   *,          *,          8,\n+\t   *,          *,          *,          *,\n+\t   *,          *,          8,\n+\t   *,          *,\n+\t   *,          *,          *\")\n    (set_attr \"isa\"\n-\t\t\"*,          *,\n-\t\t*,           p8v,       p8v,\n-\t\t*,           p8v,       p8v,\n-\t\t*,           *,         *,\n-\t\tp8v,         p9v,       p9v,       p8v,\n-\t\tp9v,         p8v,       p9v,\n-\t\tp8v,         p8v,\n-\t\t*,           *,         *\")])\n+\t  \"*,          *,\n+\t   *,          p8v,        p8v,\n+\t   *,          p8v,        p8v,\n+\t   *,          *,          *,\n+\t   p8v,        p9v,        p9v,        p8v,\n+\t   p9v,        p8v,        p9v,\n+\t   p8v,        p8v,\n+\t   *,          *,          *\")])\n \n ;; Like movsi, but adjust a SF value to be used in a SI context, i.e.\n ;; (set (reg:SI ...) (subreg:SI (reg:SF ...) 0))\n@@ -8827,33 +8827,33 @@\n   DONE;\n })\n \n-;;\t\tGPR store  GPR load   GPR move\n-;;\t\tGPR li     GPR lis    GPR #\n-;;\t\tFPR store  FPR load   FPR move\n-;;\t\tAVX store  AVX store  AVX load   AVX load   VSX move\n-;;\t\tP9 0       P9 -1      AVX 0/-1   VSX 0      VSX -1\n-;;\t\tP9 const   AVX const\n-;;\t\tFrom SPR   To SPR     SPR<->SPR\n-;;\t\tVSX->GPR   GPR->VSX\n+;;\t   GPR store   GPR load    GPR move\n+;;\t   GPR li      GPR lis     GPR #\n+;;\t   FPR store   FPR load    FPR move\n+;;\t   AVX store   AVX store   AVX load    AVX load    VSX move\n+;;\t   P9 0        P9 -1       AVX 0/-1    VSX 0       VSX -1\n+;;\t   P9 const    AVX const\n+;;\t   From SPR    To SPR      SPR<->SPR\n+;;\t   VSX->GPR    GPR->VSX\n (define_insn \"*movdi_internal64\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-\t\t\"=YZ,       r,          r,\n-\t\tr,          r,          r,\n-\t\tm,          ^d,         ^d,\n-\t\twY,         Z,          $v,         $v,         ^wa,\n-\t\twa,         wa,         v,          wa,         wa,\n-\t\tv,          v,\n-\t\tr,          *h,         *h,\n-\t\t?r,         ?wa\")\n+\t  \"=YZ,        r,          r,\n+\t   r,          r,          r,\n+\t   m,          ^d,         ^d,\n+\t   wY,         Z,          $v,         $v,         ^wa,\n+\t   wa,         wa,         v,          wa,         wa,\n+\t   v,          v,\n+\t   r,          *h,         *h,\n+\t   ?r,         ?wa\")\n \t(match_operand:DI 1 \"input_operand\"\n-\t\t\"r,         YZ,         r,\n-\t\tI,          L,          nF,\n-\t\t^d,         m,          ^d,\n-\t\t^v,         $v,         wY,         Z,          ^wa,\n-\t\tOj,         wM,         OjwM,       Oj,         wM,\n-\t\twS,         wB,\n-\t\t*h,         r,          0,\n-\t\twa,         r\"))]\n+\t  \"r,          YZ,         r,\n+\t   I,          L,          nF,\n+\t   ^d,         m,          ^d,\n+\t   ^v,         $v,         wY,         Z,          ^wa,\n+\t   Oj,         wM,         OjwM,       Oj,         wM,\n+\t   wS,         wB,\n+\t   *h,         r,          0,\n+\t   wa,         r\"))]\n   \"TARGET_POWERPC64\n    && (gpc_reg_operand (operands[0], DImode)\n        || gpc_reg_operand (operands[1], DImode))\"\n@@ -8885,33 +8885,33 @@\n    mfvsrd %0,%x1\n    mtvsrd %x0,%1\"\n   [(set_attr \"type\"\n-\t\t\"store,      load,       *,\n-\t\t*,           *,          *,\n-\t\tfpstore,     fpload,     fpsimple,\n-\t\tfpstore,     fpstore,    fpload,     fpload,     veclogical,\n-\t\tvecsimple,   vecsimple,  vecsimple,  veclogical, veclogical,\n-\t\tvecsimple,   vecsimple,\n-\t\tmfjmpr,      mtjmpr,     *,\n-\t\tmftgpr,      mffgpr\")\n+\t  \"store,      load,       *,\n+\t   *,          *,          *,\n+\t   fpstore,    fpload,     fpsimple,\n+\t   fpstore,    fpstore,    fpload,     fpload,     veclogical,\n+\t   vecsimple,  vecsimple,  vecsimple,  veclogical, veclogical,\n+\t   vecsimple,  vecsimple,\n+\t   mfjmpr,     mtjmpr,     *,\n+\t   mftgpr,     mffgpr\")\n    (set_attr \"size\" \"64\")\n    (set_attr \"length\"\n-\t\t\"*,         *,          *,\n-\t\t*,          *,          20,\n-\t\t*,          *,          *,\n-\t\t*,          *,          *,          *,          *,\n-\t\t*,          *,          *,          *,          *,\n-\t\t8,          *,\n-\t\t*,          *,          *,\n-\t\t*,          *\")\n+\t  \"*,          *,          *,\n+\t   *,          *,          20,\n+\t   *,          *,          *,\n+\t   *,          *,          *,          *,          *,\n+\t   *,          *,          *,          *,          *,\n+\t   8,          *,\n+\t   *,          *,          *,\n+\t   *,          *\")\n    (set_attr \"isa\"\n-\t\t\"*,         *,          *,\n-\t\t*,          *,          *,\n-\t\t*,          *,          *,\n-\t\tp9v,        p7v,        p9v,        p7v,        *,\n-\t\tp9v,        p9v,        p7v,        *,          *,\n-\t\tp7v,        p7v,\n-\t\t*,          *,          *,\n-\t\tp8v,        p8v\")])\n+\t  \"*,          *,          *,\n+\t   *,          *,          *,\n+\t   *,          *,          *,\n+\t   p9v,        p7v,        p9v,        p7v,        *,\n+\t   p9v,        p9v,        p7v,        *,          *,\n+\t   p7v,        p7v,\n+\t   *,          *,          *,\n+\t   p8v,        p8v\")])\n \n ; Some DImode loads are best done as a load of -1 followed by a mask\n ; instruction."}]}