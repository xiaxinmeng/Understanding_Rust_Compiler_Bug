{"sha": "ec2c72551ee05f542b92a047cdf3d0a4f1b59bca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMyYzcyNTUxZWUwNWY1NDJiOTJhMDQ3Y2RmM2QwYTRmMWI1OWJjYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-09T16:42:40Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-09T16:42:40Z"}, "message": "runtime: make print() built-in write to stderr.\n\nFixes issue 2294.\n\nFrom-SVN: r182167", "tree": {"sha": "9e6dce1f153849259a29e4ba755f26fe7d83624a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e6dce1f153849259a29e4ba755f26fe7d83624a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec2c72551ee05f542b92a047cdf3d0a4f1b59bca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2c72551ee05f542b92a047cdf3d0a4f1b59bca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec2c72551ee05f542b92a047cdf3d0a4f1b59bca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2c72551ee05f542b92a047cdf3d0a4f1b59bca/comments", "author": null, "committer": null, "parents": [{"sha": "7de612096c60b7c76e5479f5cece5530d09318a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7de612096c60b7c76e5479f5cece5530d09318a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7de612096c60b7c76e5479f5cece5530d09318a7"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "bf3c2af712811964c6b3a63387eb7d9e3ed9c2f0", "filename": "libgo/runtime/go-print.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2c72551ee05f542b92a047cdf3d0a4f1b59bca/libgo%2Fruntime%2Fgo-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2c72551ee05f542b92a047cdf3d0a4f1b59bca/libgo%2Fruntime%2Fgo-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-print.c?ref=ec2c72551ee05f542b92a047cdf3d0a4f1b59bca", "patch": "@@ -18,43 +18,43 @@\n void\n __go_print_space ()\n {\n-  putchar (' ');\n+  putc (' ', stderr);\n }\n \n void\n __go_print_nl ()\n {\n-  putchar ('\\n');\n+  putc ('\\n', stderr);\n }\n \n void\n __go_print_string (struct __go_string val)\n {\n-  printf (\"%.*s\", (int) val.__length, (const char *) val.__data);\n+  fprintf (stderr, \"%.*s\", (int) val.__length, (const char *) val.__data);\n }\n \n void\n __go_print_uint64 (uint64_t val)\n {\n-  printf (\"%llu\", (unsigned long long) val);\n+  fprintf (stderr, \"%llu\", (unsigned long long) val);\n }\n \n void\n __go_print_int64 (int64_t val)\n {\n-  printf (\"%lld\", (long long) val);\n+  fprintf (stderr, \"%lld\", (long long) val);\n }\n \n void\n __go_print_double (double val)\n {\n-  printf (\"%.24g\", val);\n+  fprintf (stderr, \"%.24g\", val);\n }\n \n void\n __go_print_complex (__complex double val)\n {\n-  printf (\"(%.24g%s%.24gi)\",\n+  fprintf (stderr, \"(%.24g%s%.24gi)\",\n \t  __builtin_creal (val),\n \t  (__builtin_cimag (val) >= 0 || __builtin_isnan (__builtin_cimag(val))\n \t   ? \"+\"\n@@ -65,29 +65,29 @@ __go_print_complex (__complex double val)\n void\n __go_print_bool (_Bool val)\n {\n-  fputs (val ? \"true\" : \"false\", stdout);\n+  fputs (val ? \"true\" : \"false\", stderr);\n }\n \n void\n __go_print_pointer (void *val)\n {\n-  printf (\"%p\", val);\n+  fprintf (stderr, \"%p\", val);\n }\n \n void\n __go_print_empty_interface (struct __go_empty_interface e)\n {\n-  printf (\"(%p,%p)\", e.__type_descriptor, e.__object);\n+  fprintf (stderr, \"(%p,%p)\", e.__type_descriptor, e.__object);\n }\n \n void\n __go_print_interface (struct __go_interface i)\n {\n-  printf (\"(%p,%p)\", i.__methods, i.__object);\n+  fprintf (stderr, \"(%p,%p)\", i.__methods, i.__object);\n }\n \n void\n __go_print_slice (struct __go_open_array val)\n {\n-  printf (\"[%d/%d]%p\", val.__count, val.__capacity, val.__values);\n+  fprintf (stderr, \"[%d/%d]%p\", val.__count, val.__capacity, val.__values);\n }"}]}