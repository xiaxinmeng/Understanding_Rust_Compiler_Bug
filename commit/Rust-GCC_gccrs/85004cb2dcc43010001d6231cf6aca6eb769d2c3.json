{"sha": "85004cb2dcc43010001d6231cf6aca6eb769d2c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUwMDRjYjJkY2M0MzAxMDAwMWQ2MjMxY2Y2YWNhNmViNzY5ZDJjMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-09-05T10:33:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-09-05T10:33:41Z"}, "message": "re PR tree-optimization/87217 (ICE in in check_loop_closed_ssa_def, at tree-ssa-loop-manip.c:709 when compiling SPEC2000 starting with r264069)\n\n2018-09-05  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87217\n\t* tree-ssa-sccvn.c (vuse_valueize): New.\n\t(vn_reference_lookup_pieces): Use it.\n\t(vn_reference_lookup): Likewise.\n\n\t* gfortran.dg/pr87217.f: New testcase.\n\nFrom-SVN: r264121", "tree": {"sha": "bf68136adfd09a717d631cb80451a0d3d258928a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf68136adfd09a717d631cb80451a0d3d258928a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85004cb2dcc43010001d6231cf6aca6eb769d2c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85004cb2dcc43010001d6231cf6aca6eb769d2c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85004cb2dcc43010001d6231cf6aca6eb769d2c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85004cb2dcc43010001d6231cf6aca6eb769d2c3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a79878585a1c5e32bafbc6d1e73f91fd6e4293bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a79878585a1c5e32bafbc6d1e73f91fd6e4293bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a79878585a1c5e32bafbc6d1e73f91fd6e4293bf"}], "stats": {"total": 67, "additions": 65, "deletions": 2}, "files": [{"sha": "47bc612b82081393391a67c56027389ecc8b748a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85004cb2dcc43010001d6231cf6aca6eb769d2c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85004cb2dcc43010001d6231cf6aca6eb769d2c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85004cb2dcc43010001d6231cf6aca6eb769d2c3", "patch": "@@ -1,3 +1,10 @@\n+2018-09-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87217\n+\t* tree-ssa-sccvn.c (vuse_valueize): New.\n+\t(vn_reference_lookup_pieces): Use it.\n+\t(vn_reference_lookup): Likewise.\n+\n 2018-09-05  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/87137"}, {"sha": "12bb8a29d8928fe95cb407b4e238e7af4a75239c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85004cb2dcc43010001d6231cf6aca6eb769d2c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85004cb2dcc43010001d6231cf6aca6eb769d2c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85004cb2dcc43010001d6231cf6aca6eb769d2c3", "patch": "@@ -1,3 +1,8 @@\n+2018-09-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87217\n+\t* gfortran.dg/pr87217.f: New testcase.\n+\n 2018-09-05   P\u00e1draig Brady p@draigbrady.com\n \n \tPR c++/87137"}, {"sha": "163a276be29abff9489efed96500c7ed977241e8", "filename": "gcc/testsuite/gfortran.dg/pr87217.f", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85004cb2dcc43010001d6231cf6aca6eb769d2c3/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr87217.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85004cb2dcc43010001d6231cf6aca6eb769d2c3/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr87217.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr87217.f?ref=85004cb2dcc43010001d6231cf6aca6eb769d2c3", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+! { dg-options \"-O3\" }\n+      implicit real*8 (a-h,o-z)\n+      common clop6(3),dps(6),aml6(6,6)\n+      dimension y1(3)\n+      dimension dclo(3)\n+      dimension dx(3),dy(3)\n+      save\n+      do 80 ii=1,itco\n+        y1(3)=dps(1)\n+        do 40 l=1,3\n+          dy(l)=clop6(l)-y1(l)\n+   40   continue\n+        dczp=abs(dy(3))\n+        if(dcx.le.c1m10.and.dcz.le.c1m10.and.dcxp.le.c1m10.and.dczp\n+     +  .le.c1m10.and.dcy.le.c1m10.and.dcyp.le.c1m10) goto 90\n+   80 continue\n+      write(6) itco\n+      ii=itco\n+   90 continue\n+      if(ii.ne.itco) then\n+        do 65 k=1,3\n+          do 55 j=1,3\n+            jj=2*j\n+            kk=2*k\n+            dclo(k)=aml6(kk-1,jj-1)*dx(j)+dclo(k)\n+            dclo(k)=aml6(kk-1,jj)*dy(j)+dclo(k)\n+   55     continue\n+   65   continue\n+      endif\n+      end\n+"}, {"sha": "105605a45f8f5f02fa356589af8061f772b0670e", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85004cb2dcc43010001d6231cf6aca6eb769d2c3/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85004cb2dcc43010001d6231cf6aca6eb769d2c3/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=85004cb2dcc43010001d6231cf6aca6eb769d2c3", "patch": "@@ -493,6 +493,25 @@ vuse_ssa_val (tree x)\n   return x;\n }\n \n+/* Similar to the above but used as callback for walk_non_aliases_vuses\n+   and thus should stop at unvisited VUSE to not walk across region\n+   boundaries.  */\n+\n+static tree\n+vuse_valueize (tree vuse)\n+{\n+  do\n+    {\n+      bool visited;\n+      vuse = SSA_VAL (vuse, &visited);\n+      if (!visited)\n+\treturn NULL_TREE;\n+      gcc_assert (vuse != VN_TOP);\n+    }\n+  while (SSA_NAME_IN_FREE_LIST (vuse));\n+  return vuse;\n+}\n+\n \n /* Return the vn_kind the expression computed by the stmt should be\n    associated with.  */\n@@ -2573,7 +2592,7 @@ vn_reference_lookup_pieces (tree vuse, alias_set_type set, tree type,\n \t  (vn_reference_t)walk_non_aliased_vuses (&r, vr1.vuse,\n \t\t\t\t\t\t  vn_reference_lookup_2,\n \t\t\t\t\t\t  vn_reference_lookup_3,\n-\t\t\t\t\t\t  vuse_ssa_val, &vr1);\n+\t\t\t\t\t\t  vuse_valueize, &vr1);\n       gcc_checking_assert (vr1.operands == shared_lookup_references);\n     }\n \n@@ -2629,7 +2648,7 @@ vn_reference_lookup (tree op, tree vuse, vn_lookup_kind kind,\n \t(vn_reference_t)walk_non_aliased_vuses (&r, vr1.vuse,\n \t\t\t\t\t\tvn_reference_lookup_2,\n \t\t\t\t\t\tvn_reference_lookup_3,\n-\t\t\t\t\t\tvuse_ssa_val, &vr1);\n+\t\t\t\t\t\tvuse_valueize, &vr1);\n       gcc_checking_assert (vr1.operands == shared_lookup_references);\n       if (wvnresult)\n \t{"}]}