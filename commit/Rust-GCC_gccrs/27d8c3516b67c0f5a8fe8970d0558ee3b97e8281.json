{"sha": "27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdkOGMzNTE2YjY3YzBmNWE4ZmU4OTcwZDA1NThlZTNiOTdlODI4MQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-11-17T09:48:41Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-11-18T09:22:06Z"}, "message": "d: Fix a couple of ICEs found in the dmd front-end (PR97842)\n\n- Segmentation fault on incomplete static if.\n- Segmentation fault resolving typeof() expression when gagging is on.\n\nReviewed-on: https://github.com/dlang/dmd/pull/11971\n\ngcc/d/ChangeLog:\n\n\tPR d/97842\n\t* dmd/MERGE: Merge upstream dmd b6a779e49", "tree": {"sha": "915f1bb7526195a5ea70a21f4779fe17d70efdaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/915f1bb7526195a5ea70a21f4779fe17d70efdaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa9091ad93b2ec6f2580e9f9c7de799fa404cf2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9091ad93b2ec6f2580e9f9c7de799fa404cf2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9091ad93b2ec6f2580e9f9c7de799fa404cf2e"}], "stats": {"total": 94, "additions": 93, "deletions": 1}, "files": [{"sha": "b00cb8262a732f8aab618af466d85cc0160d0c7d", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "patch": "@@ -1,4 +1,4 @@\n-95044d8e45a4320f07d9c75b4eb30e55688a8195\n+b6a779e49a3bba8be6272e6730e14cbb6293ef77\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "9f76e83238e0cf46ce9a98c6d6fd9271d160f9f8", "filename": "gcc/d/dmd/cond.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Fd%2Fdmd%2Fcond.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Fd%2Fdmd%2Fcond.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcond.c?ref=27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "patch": "@@ -705,6 +705,10 @@ int StaticIfCondition::include(Scope *sc)\n         sc = sc->push(sc->scopesym);\n \n         bool errors = false;\n+\n+        if (!exp)\n+            goto Lerror;\n+\n         bool result = evalStaticCondition(sc, exp, exp, errors);\n         sc->pop();\n "}, {"sha": "6f0195af30500511d28c61f1ff825d51051cf8b2", "filename": "gcc/d/dmd/mtype.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Fd%2Fdmd%2Fmtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Fd%2Fdmd%2Fmtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmtype.c?ref=27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "patch": "@@ -7418,6 +7418,12 @@ void TypeTypeof::resolve(Loc loc, Scope *sc, Expression **pe, Type **pt, Dsymbol\n \n     //printf(\"TypeTypeof::resolve(sc = %p, idents = '%s')\\n\", sc, toChars());\n     //static int nest; if (++nest == 50) *(char*)0=0;\n+    if (sc == NULL)\n+    {\n+        *pt = Type::terror;\n+        error(loc, \"Invalid scope.\");\n+        return;\n+    }\n     if (inuse)\n     {\n         inuse = 2;"}, {"sha": "846a5782d7d109d23c3ff25d5080a00d38bf8aaa", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail18970.d", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail18970.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail18970.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail18970.d?ref=27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "patch": "@@ -0,0 +1,37 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail18970.d(22): Error: no property `y` for type `fail18970.S`\n+fail_compilation/fail18970.d(29): Error: no property `yyy` for type `fail18970.S2`\n+---\n+*/\n+\n+// https://issues.dlang.org/show_bug.cgi?id=18970\n+\n+struct S\n+{\n+    auto opDispatch(string name)(int)\n+    {\n+        alias T = typeof(x);\n+        static assert(!is(T.U));\n+        return 0;\n+    }\n+}\n+void f()\n+{\n+    S().y(1);\n+}\n+\n+struct S2\n+{\n+    this(int)\n+    {\n+        this.yyy;\n+    }\n+\n+    auto opDispatch(string name)()\n+    {\n+        alias T = typeof(x);\n+        static if(is(T.U)) {}\n+    }\n+}"}, {"sha": "e5fcd43595ea1efbc2be4ff305657c5e9427926d", "filename": "gcc/testsuite/gdc.test/fail_compilation/imports/test21164a.d", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest21164a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest21164a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest21164a.d?ref=27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "patch": "@@ -0,0 +1,9 @@\n+struct D(E)\n+{\n+    void G()    {\n+        import imports.test21164d;\n+        I;\n+    }\n+\n+}\n+"}, {"sha": "ece5476654e0b9fa62fe62ab9721ef6957a0812a", "filename": "gcc/testsuite/gdc.test/fail_compilation/imports/test21164b.d", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest21164b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest21164b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest21164b.d?ref=27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "patch": "@@ -0,0 +1,4 @@\n+import imports.test21164c;\n+enum N = O();\n+alias Q = R!(N, S);\n+"}, {"sha": "21a252f5036bf42ed097c2e049d4ea9c34cbf34b", "filename": "gcc/testsuite/gdc.test/fail_compilation/imports/test21164c.d", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest21164c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest21164c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest21164c.d?ref=27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "patch": "@@ -0,0 +1,10 @@\n+enum S = 1;\n+\n+struct O\n+{\n+}\n+\n+struct R(O U, int W)\n+{\n+}\n+"}, {"sha": "08f83ea91f7d0f78edbb284b8fc77922ff8e23d3", "filename": "gcc/testsuite/gdc.test/fail_compilation/imports/test21164d.d", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest21164d.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest21164d.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest21164d.d?ref=27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "patch": "@@ -0,0 +1,9 @@\n+auto AB()\n+{\n+static if}\n+\n+auto I()\n+{\n+AB;\n+}\n+"}, {"sha": "f42c4bc9d15c26bd03a75c6ee1592f70384c49ef", "filename": "gcc/testsuite/gdc.test/fail_compilation/test21164.d", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest21164.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d8c3516b67c0f5a8fe8970d0558ee3b97e8281/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest21164.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest21164.d?ref=27d8c3516b67c0f5a8fe8970d0558ee3b97e8281", "patch": "@@ -0,0 +1,13 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/imports/test21164d.d(3): Error: (expression) expected following `static if`\n+fail_compilation/imports/test21164d.d(3): Error: found `}` instead of statement\n+fail_compilation/test21164.d(11): Error: template instance `test21164a.D!(R!(O(), 1))` error instantiating\n+---\n+*/\n+import imports.test21164a;\n+import imports.test21164b;\n+auto GB(D!Q)\n+{\n+}"}]}