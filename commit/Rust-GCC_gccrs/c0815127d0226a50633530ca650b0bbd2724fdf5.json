{"sha": "c0815127d0226a50633530ca650b0bbd2724fdf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA4MTUxMjdkMDIyNmE1MDYzMzUzMGNhNjUwYjBiYmQyNzI0ZmRmNQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-08T21:01:50Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-08T21:01:50Z"}, "message": "Security.java: Reformated.\n\n2003-10-08  Michael Koch  <konqueror@gmx.de>\n\n\t* java/security/Security.java: Reformated.\n\nFrom-SVN: r72240", "tree": {"sha": "253f0665f2cf247cb690a0832194393eadcb6664", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/253f0665f2cf247cb690a0832194393eadcb6664"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0815127d0226a50633530ca650b0bbd2724fdf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0815127d0226a50633530ca650b0bbd2724fdf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0815127d0226a50633530ca650b0bbd2724fdf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0815127d0226a50633530ca650b0bbd2724fdf5/comments", "author": null, "committer": null, "parents": [{"sha": "a498cba5064b9dc952b9f3078f47c83de9205ec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a498cba5064b9dc952b9f3078f47c83de9205ec2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a498cba5064b9dc952b9f3078f47c83de9205ec2"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "8d4b6ab719829320462e98ff7275760c29a98a60", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0815127d0226a50633530ca650b0bbd2724fdf5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0815127d0226a50633530ca650b0bbd2724fdf5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c0815127d0226a50633530ca650b0bbd2724fdf5", "patch": "@@ -1,3 +1,7 @@\n+2003-10-08  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/security/Security.java: Reformated.\n+\n 2003-10-08  Michael Koch  <konqueror@gmx.de>\n \n \t* java/text/SimpleDateFormat.java"}, {"sha": "350c04f101f48b8423c22429650e8d1f948b3b8f", "filename": "libjava/java/security/Security.java", "status": "modified", "additions": 23, "deletions": 20, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0815127d0226a50633530ca650b0bbd2724fdf5/libjava%2Fjava%2Fsecurity%2FSecurity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0815127d0226a50633530ca650b0bbd2724fdf5/libjava%2Fjava%2Fsecurity%2FSecurity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSecurity.java?ref=c0815127d0226a50633530ca650b0bbd2724fdf5", "patch": "@@ -65,32 +65,35 @@ public final class Security extends Object\n \n   private static Vector providers = new Vector();\n   private static Properties secprops = new Properties();\n+  \n   static\n-  {\n-    String base = System.getProperty(\"gnu.classpath.home.url\");\n-    String vendor = System.getProperty(\"gnu.classpath.vm.shortname\");\n+    {\n+      String base = System.getProperty (\"gnu.classpath.home.url\");\n+      String vendor = System.getProperty (\"gnu.classpath.vm.shortname\");\n     \n-    // Try VM specific security file\n-    boolean loaded = loadProviders(base, vendor);\n+      // Try VM specific security file\n+      boolean loaded = loadProviders (base, vendor);\n     \n-    // Append classpath standard provider if possible\n-    if (!loadProviders(base, \"classpath\") && !loaded && providers.size() == 0)\n-      {\n-\t// No providers found and both security files failed to load properly.\n-\tSystem.err.println\n-\t  (\"WARNING: could not properly read security provider files:\");\n-\tSystem.err.println\n-\t  (\"         \" + base + \"/security/\" + vendor + \".security\");\n-\tSystem.err.println\n-\t  (\"         \" + base + \"/security/\" + \"classpath\" + \".security\");\n-\tSystem.err.println\n-\t  (\"         Falling back to standard GNU security provider\");\n-\tproviders.addElement(new gnu.java.security.provider.Gnu());\n-      }\n+      // Append classpath standard provider if possible\n+      if (!loadProviders (base, \"classpath\")\n+\t  && !loaded\n+\t  && providers.size() == 0)\n+        {\n+\t  // No providers found and both security files failed to load properly.\n+\t  System.err.println\n+\t    (\"WARNING: could not properly read security provider files:\");\n+\t  System.err.println\n+\t    (\"         \" + base + \"/security/\" + vendor + \".security\");\n+\t  System.err.println\n+\t    (\"         \" + base + \"/security/\" + \"classpath\" + \".security\");\n+\t  System.err.println\n+\t    (\"         Falling back to standard GNU security provider\");\n+\t  providers.addElement (new gnu.java.security.provider.Gnu());\n+        }\n   }\n \n   // This class can't be instantiated.\n-  private Security ()\n+  private Security()\n   {\n   }\n "}]}