{"sha": "9ebbca7d736ea66eabef6263a4317458bc2676ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWViYmNhN2Q3MzZlYTY2ZWFiZWY2MjYzYTQzMTc0NThiYzI2NzZhYw==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "2000-03-16T03:16:41Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2000-03-16T03:16:41Z"}, "message": "See the ChangeLog on the branch for more details.\n\n\t* configure.in: Merge in changes from newppc-branch.\n\t* configure: Regenerate.\n\t* config/rs6000/*: Merge in changes from newppc-branch.\n\tAlso correct copyright notices.\n\nFrom-SVN: r32575", "tree": {"sha": "deeee822f70c0839518a6c1fc46453b506288344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/deeee822f70c0839518a6c1fc46453b506288344"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ebbca7d736ea66eabef6263a4317458bc2676ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ebbca7d736ea66eabef6263a4317458bc2676ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ebbca7d736ea66eabef6263a4317458bc2676ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ebbca7d736ea66eabef6263a4317458bc2676ac/comments", "author": null, "committer": null, "parents": [{"sha": "1282214677071111c6b56dc8b49efa192c59996b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1282214677071111c6b56dc8b49efa192c59996b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1282214677071111c6b56dc8b49efa192c59996b"}], "stats": {"total": 13649, "additions": 8607, "deletions": 5042}, "files": [{"sha": "5b521c38f6d23e8dee97d445a413df8b663a3d08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,3 +1,12 @@\n+2000-03-15  Geoff Keating  <geoffk@cygnus.com>\n+\n+\tSee the ChangeLog on the branch for more details.\n+\t\n+\t* configure.in: Merge in changes from newppc-branch.\n+\t* configure: Regenerate.\n+\t* config/rs6000/*: Merge in changes from newppc-branch.\n+\tAlso correct copyright notices.\n+\n Wed Mar 15 15:43:38 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* acconfig.h (HAVE_GAS_WEAK): New define."}, {"sha": "9f2b996b74ce3b45d920c6e2431ac8361039bf1c", "filename": "gcc/config/rs6000/aix.h", "status": "added", "additions": 544, "deletions": 0, "changes": 544, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -0,0 +1,544 @@\n+/* Definitions of target machine for GNU compiler,\n+   for IBM RS/6000 POWER running AIX.\n+   Copyright (C) 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* Yes!  We are AIX!  */\n+#define DEFAULT_ABI ABI_AIX\n+#define TARGET_OBJECT_FORMAT OBJECT_XCOFF\n+\n+/* The RS/6000 uses the XCOFF format.  */\n+\n+#define XCOFF_DEBUGGING_INFO\n+\n+/* Define if the object format being used is COFF or a superset.  */\n+#define OBJECT_FORMAT_COFF\n+\n+/* Define the magic numbers that we recognize as COFF.\n+ \n+    AIX 4.3 adds U803XTOCMAGIC (0757) for 64-bit objects, but collect2.c\n+    does not include files in the correct order to conditionally define\n+    the symbolic name in this macro.\n+ \n+    The AIX linker accepts import/export files as object files,\n+    so accept \"#!\" (0x2321) magic number.  */\n+#define MY_ISCOFF(magic) \\\n+  ((magic) == U802WRMAGIC || (magic) == U802ROMAGIC \\\n+   || (magic) == U802TOCMAGIC || (magic) == 0757 || (magic) == 0x2321)\n+\n+/* This is the only version of nm that collect2 can work with.  */\n+#define REAL_NM_FILE_NAME \"/usr/ucb/nm\"\n+\n+/* We don't have GAS for the RS/6000 yet, so don't write out special\n+    .stabs in cc1plus.  */\n+\n+#define FASCIST_ASSEMBLER\n+\n+/* AIX does not have any init/fini or ctor/dtor sections, so create\n+    static constructors and destructors as normal functions.  */\n+/* #define ASM_OUTPUT_CONSTRUCTOR(file, name) */\n+/* #define ASM_OUTPUT_DESTRUCTOR(file, name) */\n+\n+/* The prefix to add to user-visible assembler symbols. */\n+#define USER_LABEL_PREFIX \".\"\n+\n+/* Don't turn -B into -L if the argument specifies a relative file name.  */\n+#define RELATIVE_PREFIX_NOT_LINKDIR\n+\n+/* Names to predefine in the preprocessor for this target machine.  */\n+\n+#define CPP_PREDEFINES \"-D_IBMR2 -D_POWER -D_AIX -D_AIX32 -D_LONG_LONG \\\n+-Asystem(unix) -Asystem(aix) -Acpu(rs6000) -Amachine(rs6000)\"\n+\n+/* Tell the assembler to assume that all undefined names are external.\n+\n+   Don't do this until the fixed IBM assembler is more generally available.\n+   When this becomes permanently defined, the ASM_OUTPUT_EXTERNAL,\n+   ASM_OUTPUT_EXTERNAL_LIBCALL, and RS6000_OUTPUT_BASENAME macros will no\n+   longer be needed.  Also, the extern declaration of mcount in ASM_FILE_START\n+   will no longer be needed.  */\n+\n+/* #define ASM_SPEC \"-u %(asm_cpu)\" */\n+\n+/* Default location of syscalls.exp under AIX */\n+#ifndef CROSS_COMPILE\n+#define LINK_SYSCALLS_SPEC \"-bI:/lib/syscalls.exp\"\n+#else\n+#define LINK_SYSCALLS_SPEC \"\"\n+#endif\n+\n+/* Default location of libg.exp under AIX */\n+#ifndef CROSS_COMPILE\n+#define LINK_LIBG_SPEC \"-bexport:/usr/lib/libg.exp\"\n+#else\n+#define LINK_LIBG_SPEC \"\"\n+#endif\n+\n+/* Define the options for the binder: Start text at 512, align all segments\n+   to 512 bytes, and warn if there is text relocation.\n+\n+ The -bhalt:4 option supposedly changes the level at which ld will abort,\n+   but it also suppresses warnings about multiply defined symbols and is\n+   used by the AIX cc command.  So we use it here.\n+\n+   -bnodelcsect undoes a poor choice of default relating to multiply-defined\n+   csects.  See AIX documentation for more information about this.\n+\n+ -bM:SRE tells the linker that the output file is Shared REusable.  Note\n+   that to actually build a shared library you will also need to specify an\n+   export list with the -Wl,-bE option.  */\n+\n+#define LINK_SPEC \"-T512 -H512 %{!r:-btextro} -bhalt:4 -bnodelcsect\\\n+%{static:-bnso %(link_syscalls) } \\\n+%{!shared:%{g*: %(link_libg) }} %{shared:-bM:SRE}\"\n+\n+/* Profiled library versions are used by linking with special directories.  */\n+#define LIB_SPEC \"%{pg:-L/lib/profiled -L/usr/lib/profiled}\\\n+%{p:-L/lib/profiled -L/usr/lib/profiled} %{!shared:%{g*:-lg}} -lc\"\n+\n+/* Define the extra sections we need.  We define three: one is the read-only\n+   data section which is used for constants.  This is a csect whose name is\n+   derived from the name of the input file.  The second is for initialized\n+   global variables.  This is a csect whose name is that of the variable.\n+   The third is the TOC.  */\n+\n+#define EXTRA_SECTIONS \\\n+   read_only_data, private_data, read_only_private_data, toc, bss\n+\n+/* Define the routines to implement these extra sections.\n+   BIGGEST_ALIGNMENT is 64, so align the sections that much.  */\n+\n+#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\\\n+read_only_data_section ()\t\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  if (in_section != read_only_data)\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"\\t.csect %s[RO],3\\n\",\t\\\n+\t       xcoff_read_only_section_name);\t\t\\\n+      in_section = read_only_data;\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\\\n+private_data_section ()\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  if (in_section != private_data)\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"\\t.csect %s[RW],3\\n\",\t\\\n+\t       xcoff_private_data_section_name);\t\\\n+      in_section = private_data;\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\\\n+read_only_private_data_section ()\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  if (in_section != read_only_private_data)\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"\\t.csect %s[RO],3\\n\",\t\\\n+\t       xcoff_private_data_section_name);\t\\\n+      in_section = read_only_private_data;\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\\\n+toc_section ()\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  if (TARGET_MINIMAL_TOC)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      /* toc_section is always called at least once from ASM_FILE_START, \\\n+\t so this is guaranteed to always be defined once and only once   \\\n+\t in each file.  */\t\t\t\t\t\t \\\n+      if (! toc_initialized)\t\t\t\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  fputs (\"\\t.toc\\nLCTOC..1:\\n\", asm_out_file);\t\\\n+\t  fputs (\"\\t.tc toc_table[TC],toc_table[RW]\\n\", asm_out_file); \\\n+\t  toc_initialized = 1;\t\t\t\t\\\n+\t}\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+      if (in_section != toc)\t\t\t\t\\\n+\tfprintf (asm_out_file, \"\\t.csect toc_table[RW]%s\\n\",\t\\\n+\t\t (TARGET_32BIT ? \"\" : \",3\"));\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if (in_section != toc)\t\t\t\t\\\n+        fputs (\"\\t.toc\\n\", asm_out_file);\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  in_section = toc;\t\t\t\t\t\\\n+}\n+\n+/* Define the name of our readonly data section.  */\n+\n+#define READONLY_DATA_SECTION read_only_data_section\n+\n+/* Select the section for an initialized data object.\n+\n+   On the RS/6000, we have a special section for all variables except those\n+   that are static.  */\n+\n+#define SELECT_SECTION(EXP,RELOC)\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  if ((TREE_CODE (EXP) == STRING_CST\t\t\t\\\n+       && ! flag_writable_strings)\t\t\t\\\n+      || (TREE_CODE_CLASS (TREE_CODE (EXP)) == 'd'\t\\\n+\t  && TREE_READONLY (EXP) && ! TREE_THIS_VOLATILE (EXP) \\\n+\t  && DECL_INITIAL (EXP)\t\t\t\t\\\n+\t  && (DECL_INITIAL (EXP) == error_mark_node\t\\\n+\t      || TREE_CONSTANT (DECL_INITIAL (EXP)))\t\\\n+\t  && ! (RELOC)))\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if (TREE_PUBLIC (EXP))\t\t\t\t\\\n+        read_only_data_section ();\t\t\t\\\n+      else\t\t\t\t\t\t\\\n+        read_only_private_data_section ();\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if (TREE_PUBLIC (EXP))\t\t\t\t\\\n+        data_section ();\t\t\t\t\\\n+      else\t\t\t\t\t\t\\\n+        private_data_section ();\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+}\n+\n+/* Select section for constant in constant pool.\n+\n+   On RS/6000, all constants are in the private read-only data area.\n+   However, if this is being placed in the TOC it must be output as a\n+   toc entry.  */\n+\n+#define SELECT_RTX_SECTION(MODE, X)\t\t\\\n+{ if (ASM_OUTPUT_SPECIAL_POOL_ENTRY_P (X))\t\\\n+    toc_section ();\t\t\t\t\\\n+  else\t\t\t\t\t\t\\\n+    read_only_private_data_section ();\t\t\\\n+}\n+\n+/* Indicate that jump tables go in the text section.  */\n+\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n+\n+/* Enable AIX XL compiler calling convention breakage compatibility.  */\n+#undef TARGET_XL_CALL\n+#define MASK_XL_CALL\t\t0x40000000\n+#define\tTARGET_XL_CALL\t\t(target_flags & MASK_XL_CALL)\n+#undef  SUBTARGET_SWITCHES\n+#define SUBTARGET_SWITCHES\t\t\\\n+  {\"xl-call\", \t\tMASK_XL_CALL,\t\t\t\t\t\\\n+   \"Always pass floating-point arguments in memory\" },\t\t\t\\\n+  {\"no-xl-call\",\t- MASK_XL_CALL,\t\t\t\t\t\\\n+   \"Don't always pass floating-point arguments in memory\" },\t\t\\\n+  SUBSUBTARGET_SWITCHES\n+#define SUBSUBTARGET_SWITCHES \n+\n+/* Define any extra SPECS that the compiler needs to generate.  */\n+#undef  SUBTARGET_EXTRA_SPECS\n+#define SUBTARGET_EXTRA_SPECS\t\t\t\t\t\t\\\n+  { \"link_syscalls\",            LINK_SYSCALLS_SPEC },\t\t\t\\\n+  { \"link_libg\",                LINK_LIBG_SPEC }\n+\n+/* FP save and restore routines.  */\n+#define\tSAVE_FP_PREFIX \"._savef\"\n+#define SAVE_FP_SUFFIX \"\"\n+#define\tRESTORE_FP_PREFIX \"._restf\"\n+#define RESTORE_FP_SUFFIX \"\"\n+\n+/* Define cutoff for using external functions to save floating point.  */\n+#define FP_SAVE_INLINE(FIRST_REG) ((FIRST_REG) == 62 || (FIRST_REG) == 63)\n+\n+/* Function name to call to do profiling.  */\n+#define RS6000_MCOUNT \".__mcount\"\n+\n+/* AIX always has a TOC.  */\n+#define TARGET_NO_TOC\t\t0\n+#define\tTARGET_TOC\t\t1\n+\n+/* AIX allows r13 to be used.  */\n+#define FIXED_R13 0\n+\n+/* This outputs NAME to FILE up to the first null or '['.  */\n+\n+#define RS6000_OUTPUT_BASENAME(FILE, NAME)\t\\\n+  {\t\t\t\t\t\t\\\n+    const char *_p;\t\t\t\t\\\n+\t\t\t\t\t\t\\\n+    STRIP_NAME_ENCODING (_p, (NAME));\t\t\\\n+    assemble_name ((FILE), _p);\t\t\t\\\n+  }\n+\n+/* This is how to output the definition of a user-level label named NAME,\n+   such as the label on a static function or variable NAME.  */\n+\n+#define ASM_OUTPUT_LABEL(FILE,NAME)\t\\\n+  do { RS6000_OUTPUT_BASENAME (FILE, NAME); fputs (\":\\n\", FILE); } while (0)\n+\n+/* This is how to output a command to make the user-level label named NAME\n+   defined for reference from other files.  */\n+\n+#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n+  do { fputs (\"\\t.globl \", FILE);\t\\\n+       RS6000_OUTPUT_BASENAME (FILE, NAME); putc ('\\n', FILE);} while (0)\n+\n+/* Remove any trailing [DS] or the like from the symbol name.  */\n+\n+#define STRIP_NAME_ENCODING(VAR,NAME)\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      const char *_name = (NAME);\t\t\t\\\n+      size_t _len;\t\t\t\t\t\\\n+      if (*_name == '*')\t\t\t\t\\\n+        _name++;\t\t\t\t\t\\\n+      _len = strlen (_name);\t\t\t\t\\\n+      if (_name[_len - 1] != ']')\t\t\t\\\n+\t(VAR) = _name;\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  char *_new_name = (char *) alloca (_len + 1);\t\\\n+\t  strcpy (_new_name, _name);\t\t\t\\\n+\t  _new_name[_len - 4] = '\\0';\t\t\t\\\n+\t  (VAR) = _new_name;\t\t\t\t\\\n+\t}\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n+\n+/* Output at beginning of assembler file.\n+\n+   Initialize the section names for the RS/6000 at this point.\n+\n+   Specify filename, including full path, to assembler.\n+\n+   We want to go into the TOC section so at least one .toc will be emitted.\n+   Also, in order to output proper .bs/.es pairs, we need at least one static\n+   [RW] section emitted.\n+\n+   We then switch back to text to force the gcc2_compiled. label and the space\n+   allocated after it (when profiling) into the text section.\n+\n+   Finally, declare mcount when profiling to make the assembler happy.  */\n+\n+#define ASM_FILE_START(FILE)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  rs6000_gen_section_name (&xcoff_bss_section_name,\t\t\\\n+\t\t\t   main_input_filename, \".bss_\");\t\\\n+  rs6000_gen_section_name (&xcoff_private_data_section_name,\t\\\n+\t\t\t   main_input_filename, \".rw_\");\t\\\n+  rs6000_gen_section_name (&xcoff_read_only_section_name,\t\\\n+\t\t\t   main_input_filename, \".ro_\");\t\\\n+\t\t\t\t\t\t\t\t\\\n+  fprintf (FILE, \"\\t.file\\t\\\"%s\\\"\\n\", main_input_filename);\t\\\n+  if (TARGET_64BIT)\t\t\t\t\t\t\\\n+    fputs (\"\\t.machine\\t\\\"ppc64\\\"\\n\", FILE);\t\t\t\\\n+  toc_section ();\t\t\t\t\t\t\\\n+  if (write_symbols != NO_DEBUG)\t\t\t\t\\\n+    private_data_section ();\t\t\t\t\t\\\n+  text_section ();\t\t\t\t\t\t\\\n+  if (profile_flag)\t\t\t\t\t\t\\\n+    fprintf (FILE, \"\\t.extern %s\\n\", RS6000_MCOUNT);\t\t\\\n+  rs6000_file_start (FILE, TARGET_CPU_DEFAULT);\t\t\t\\\n+}\n+\n+/* Output at end of assembler file.\n+\n+   On the RS/6000, referencing data should automatically pull in text.  */\n+\n+#define ASM_FILE_END(FILE)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  text_section ();\t\t\t\t\t\t\\\n+  fputs (\"_section_.text:\\n\", FILE);\t\t\t\t\\\n+  data_section ();\t\t\t\t\t\t\\\n+  fputs (TARGET_32BIT\t\t\t\t\t\t\\\n+\t ? \"\\t.long _section_.text\\n\" : \"\\t.llong _section_.text\\n\", FILE); \\\n+}\n+\n+/* This macro produces the initial definition of a function name.\n+   On the RS/6000, we need to place an extra '.' in the function name and\n+   output the function descriptor.\n+\n+   The csect for the function will have already been created by the\n+   `text_section' call previously done.  We do have to go back to that\n+   csect, however.\n+\n+   The third and fourth parameters to the .function pseudo-op (16 and 044)\n+   are placeholders which no longer have any use.  */\n+\n+#define ASM_DECLARE_FUNCTION_NAME(FILE,NAME,DECL)\t\t\\\n+{ if (TREE_PUBLIC (DECL))\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      fputs (\"\\t.globl .\", FILE);\t\t\t\t\\\n+      RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\\\n+      putc ('\\n', FILE);\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      fputs (\"\\t.lglobl .\", FILE);\t\t\t\t\\\n+      RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\\\n+      putc ('\\n', FILE);\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  fputs (\"\\t.csect \", FILE);\t\t\t\t\t\\\n+  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n+  fputs (TARGET_32BIT ? \"[DS]\\n\" : \"[DS],3\\n\", FILE);\t\t\\\n+  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n+  fputs (\":\\n\", FILE);\t\t\t\t\t\t\\\n+  fputs (TARGET_32BIT ? \"\\t.long .\" : \"\\t.llong .\", FILE);\t\\\n+  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n+  fputs (\", TOC[tc0], 0\\n\", FILE);\t\t\t\t\\\n+  fputs (TARGET_32BIT\t\t\t\t\t\t\\\n+\t ? \"\\t.csect .text[PR]\\n.\" : \"\\t.csect .text[PR],3\\n.\", FILE); \\\n+  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n+  fputs (\":\\n\", FILE);\t\t\t\t\t\t\\\n+  if (write_symbols == XCOFF_DEBUG)\t\t\t\t\\\n+    xcoffout_declare_function (FILE, DECL, NAME);\t\t\\\n+}\n+\n+/* This is how to output a reference to a user-level label named NAME.\n+   `assemble_name' uses this.  */\n+\n+#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n+  fputs (NAME, FILE)\n+\n+/* This says how to output an external.  */\n+\n+#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\t\\\n+{ rtx _symref = XEXP (DECL_RTL (DECL), 0);\t\\\n+  if ((TREE_CODE (DECL) == VAR_DECL\t\t\\\n+       || TREE_CODE (DECL) == FUNCTION_DECL)\t\\\n+      && (NAME)[strlen (NAME) - 1] != ']')\t\\\n+    {\t\t\t\t\t\t\\\n+      char *_name = (char *) permalloc (strlen (XSTR (_symref, 0)) + 5); \\\n+      strcpy (_name, XSTR (_symref, 0));\t\\\n+      strcat (_name, TREE_CODE (DECL) == FUNCTION_DECL ? \"[DS]\" : \"[RW]\"); \\\n+      XSTR (_symref, 0) = _name;\t\t\\\n+    }\t\t\t\t\t\t\\\n+}\n+\n+/* This is how to output an internal numbered label where\n+   PREFIX is the class of label and NUM is the number within the class.  */\n+\n+#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n+  fprintf (FILE, \"%s..%d:\\n\", PREFIX, NUM)\n+\n+/* This is how to output an internal label prefix.  rs6000.c uses this\n+   when generating traceback tables.  */\n+\n+#define ASM_OUTPUT_INTERNAL_LABEL_PREFIX(FILE,PREFIX)   \\\n+  fprintf (FILE, \"%s..\", PREFIX)\n+\n+/* This is how to output a label for a jump table.  Arguments are the same as\n+   for ASM_OUTPUT_INTERNAL_LABEL, except the insn for the jump table is\n+   passed. */\n+\n+#define ASM_OUTPUT_CASE_LABEL(FILE,PREFIX,NUM,TABLEINSN)\t\\\n+{ ASM_OUTPUT_ALIGN (FILE, 2); ASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM); }\n+\n+/* This is how to store into the string LABEL\n+   the symbol_ref name of an internal numbered label where\n+   PREFIX is the class of label and NUM is the number within the class.\n+   This is suitable for output with `assemble_name'.  */\n+\n+#define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n+  sprintf (LABEL, \"*%s..%d\", PREFIX, NUM)\n+\n+/* This is how to output an assembler line to define N characters starting\n+   at P to FILE.  */\n+\n+#define ASM_OUTPUT_ASCII(FILE, P, N)  output_ascii ((FILE), (P), (N))\n+\n+/* This is how to advance the location counter by SIZE bytes.  */\n+\n+#define ASM_OUTPUT_SKIP(FILE,SIZE)  \\\n+  fprintf (FILE, \"\\t.space %d\\n\", (SIZE))\n+\n+/* This says how to output an assembler line\n+   to define a global common symbol.  */\n+\n+#define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGNMENT)\t\\\n+  do { fputs (\".comm \", (FILE));\t\t\t\\\n+       RS6000_OUTPUT_BASENAME ((FILE), (NAME));\t\t\\\n+       if ( (SIZE) > 4)\t\t\t\t\t\\\n+         fprintf ((FILE), \",%d,3\\n\", (SIZE));\t\t\\\n+       else\t\t\t\t\t\t\\\n+\t fprintf( (FILE), \",%d\\n\", (SIZE));\t\t\\\n+  } while (0)\n+\n+/* These are various definitions for DWARF output.  They could just\n+   use '.long' or '.word', but that aligns to a 4-byte boundary which\n+   is not what is required.  So we define a million macros...  */\n+\n+#define ASM_OUTPUT_DWARF_ADDR_VAR(FILE, LABEL, LENGTH)\t\\\n+ do {   fprintf ((FILE), \"\\t.vbyte\\t%d,\", LENGTH);\t\\\n+        assemble_name (FILE, LABEL);\t\t\t\\\n+  } while (0)\n+\n+#define ASM_OUTPUT_DWARF_DELTA_VAR(FILE, LABEL1, LABEL2, LENGTH)\t\\\n+ do {   fprintf ((FILE), \"\\t.vbyte\\t%d,\", LENGTH);\t\t\t\\\n+        assemble_name (FILE, LABEL1);\t\t\t\t\t\\\n+        fprintf (FILE, \"-\");\t\t\t\t\t\t\\\n+        assemble_name (FILE, LABEL2);\t\t\t\t\t\\\n+  } while (0)\n+\n+#define ASM_OUTPUT_DWARF_DELTA2(FILE, LABEL1, LABEL2)\t\\\n+ ASM_OUTPUT_DWARF_DELTA_VAR (FILE, LABEL1, LABEL2, 2)\n+\n+#define ASM_OUTPUT_DWARF_DELTA4(FILE, LABEL1, LABEL2)\t\\\n+ ASM_OUTPUT_DWARF_DELTA_VAR (FILE, LABEL1, LABEL2, 4)\n+\n+#define ASM_OUTPUT_DWARF_DELTA(FILE, LABEL1, LABEL2)\t\t\t\\\n+ ASM_OUTPUT_DWARF_DELTA_VAR (FILE, LABEL1, LABEL2, DWARF_OFFSET_SIZE)\n+\n+#define ASM_OUTPUT_DWARF_ADDR_DELTA(FILE, LABEL1, LABEL2)\t\\\n+ ASM_OUTPUT_DWARF_DELTA_VAR (FILE, LABEL1, LABEL2,\t\t\\\n+\t\t\t     POINTER_SIZE / BITS_PER_UNIT)\n+\n+#define ASM_OUTPUT_DWARF_ADDR(FILE, LABEL)\t\t\t\t\\\n+ ASM_OUTPUT_DWARF_ADDR_VAR (FILE, LABEL, POINTER_SIZE / BITS_PER_UNIT)\n+\n+#define ASM_OUTPUT_DWARF_DATA4(FILE, VALUE)\t\t\t\\\n+  fprintf ((FILE), \"\\t.vbyte\\t4,0x%x\", (unsigned) (VALUE))\n+\n+#define ASM_OUTPUT_DWARF_DATA2(FILE, VALUE)\t\t\t\\\n+  fprintf ((FILE), \"\\t.vbyte\\t2,0x%x\", (unsigned) (VALUE))\n+\n+#define ASM_OUTPUT_DWARF_OFFSET4(FILE, LABEL)\t\\\n+ ASM_OUTPUT_DWARF_ADDR_VAR (FILE, LABEL, 4)\n+\n+#define ASM_OUTPUT_DWARF_OFFSET(FILE, LABEL)\t\t\t\\\n+ ASM_OUTPUT_DWARF_ADDR_VAR (FILE, LABEL, DWARF_OFFSET_SIZE)\n+\n+/* dwarf2out keys off this, but we don't have to have a real definition.  */\n+#define UNALIGNED_INT_ASM_OP bite_me\n+\n+/* Output before instructions.\n+   Text section for 64-bit target may contain 64-bit address jump table.  */\n+#define TEXT_SECTION_ASM_OP (TARGET_32BIT \\\n+                             ? \"\\t.csect .text[PR]\" : \"\\t.csect .text[PR],3\")\n+\n+/* Output before writable data.\n+   Align entire section to BIGGEST_ALIGNMENT.  */\n+#define DATA_SECTION_ASM_OP \"\\t.csect .data[RW],3\"\n+\n+/* __throw will restore its own return address to be the same as the\n+   return address of the function that the throw is being made to.\n+   This is unfortunate, because we want to check the original\n+   return address to see if we need to restore the TOC.\n+   So we have to squirrel it away with this.  */\n+#define SETUP_FRAME_ADDRESSES() rs6000_aix_emit_builtin_unwind_init ()\n+"}, {"sha": "34d3628e8bd457dbb1b90dd9001c3462d2c35a6c", "filename": "gcc/config/rs6000/aix31.h", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Faix31.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Faix31.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix31.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 running AIX version 3.1.\n-   Copyright (C) 1993,1997 Free Software Foundation, Inc.\n+   Copyright (C) 1993,1997, 2000 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@nyu.edu)\n \n This file is part of GNU CC.\n@@ -22,6 +22,45 @@ Boston, MA 02111-1307, USA.  */\n \n \n #include \"rs6000/rs6000.h\"\n+#include \"rs6000/aix.h\"\n+\n+/* Output something to declare an external symbol to the assembler.  Most\n+   assemblers don't need this.\n+\n+   If we haven't already, add \"[RW]\" (or \"[DS]\" for a function) to the\n+   name.  Normally we write this out along with the name.  In the few cases\n+   where we can't, it gets stripped off.  */\n+\n+#undef ASM_OUTPUT_EXTERNAL\n+#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\t\\\n+{ rtx _symref = XEXP (DECL_RTL (DECL), 0);\t\\\n+  if ((TREE_CODE (DECL) == VAR_DECL\t\t\\\n+       || TREE_CODE (DECL) == FUNCTION_DECL)\t\\\n+      && (NAME)[strlen (NAME) - 1] != ']')\t\\\n+    {\t\t\t\t\t\t\\\n+      char *_name = (char *) permalloc (strlen (XSTR (_symref, 0)) + 5); \\\n+      strcpy (_name, XSTR (_symref, 0));\t\\\n+      strcat (_name, TREE_CODE (DECL) == FUNCTION_DECL ? \"[DS]\" : \"[RW]\"); \\\n+      XSTR (_symref, 0) = _name;\t\t\\\n+    }\t\t\t\t\t\t\\\n+  fputs (\"\\t.extern \", FILE);\t\t\t\\\n+  assemble_name (FILE, XSTR (_symref, 0));\t\\\n+  if (TREE_CODE (DECL) == FUNCTION_DECL)\t\\\n+    {\t\t\t\t\t\t\\\n+      fputs (\"\\n\\t.extern .\", FILE);\t\t\\\n+      RS6000_OUTPUT_BASENAME (FILE, XSTR (_symref, 0));\t\\\n+    }\t\t\t\t\t\t\\\n+  putc ('\\n', FILE);\t\t\t\t\\\n+}\n+\n+/* Similar, but for libcall.  We only have to worry about the function name,\n+   not that of the descriptor. */\n+\n+#define ASM_OUTPUT_EXTERNAL_LIBCALL(FILE, FUN)\t\\\n+{ fputs (\"\\t.extern .\", FILE);\t\t\t\\\n+  assemble_name (FILE, XSTR (FUN, 0));\t\t\\\n+  putc ('\\n', FILE);\t\t\t\t\\\n+}\n \n /* AIX 3.2 defined _AIX32, but older versions do not.  */\n #undef CPP_PREDEFINES"}, {"sha": "f2b938661ca922c27df3580f9b2f5f28f1a0df0f", "filename": "gcc/config/rs6000/aix3newas.h", "status": "modified", "additions": 2, "deletions": 27, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Faix3newas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Faix3newas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix3newas.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 POWER running AIX version 3.x with the fixed assembler.\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2000 Free Software Foundation, Inc.\n    Contributed by Jason Merrill (jason@cygnus.com).\n \n This file is part of GNU CC.\n@@ -21,15 +21,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n-/* Enable AIX XL compiler calling convention breakage compatibility.  */\n-#define MASK_XL_CALL\t\t0x40000000\n-#define\tTARGET_XL_CALL\t\t(target_flags & MASK_XL_CALL)\n-#undef  SUBTARGET_SWITCHES\n-#define SUBTARGET_SWITCHES\t\t\\\n-  {\"xl-call\", \t\tMASK_XL_CALL},\t\\\n-  {\"no-xl-call\",\t- MASK_XL_CALL},\n-\n #include \"rs6000/rs6000.h\"\n+#include \"rs6000/aix.h\"\n \n /* Tell the assembler to assume that all undefined names are external.  */\n \n@@ -68,21 +61,3 @@ Boston, MA 02111-1307, USA.  */\n    %{mcpu=common: milli.exp%s} \\\n    %{shared:-bM:SRE}\"\n #endif\n-\n-/* These are not necessary when we pass -u to the assembler, and undefining\n-   them saves a great deal of space in object files.  */\n-\n-#undef ASM_OUTPUT_EXTERNAL\n-#undef ASM_OUTPUT_EXTERNAL_LIBCALL\n-#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\t\\\n-{ rtx _symref = XEXP (DECL_RTL (DECL), 0);\t\\\n-  if ((TREE_CODE (DECL) == VAR_DECL\t\t\\\n-       || TREE_CODE (DECL) == FUNCTION_DECL)\t\\\n-      && (NAME)[strlen (NAME) - 1] != ']')\t\\\n-    {\t\t\t\t\t\t\\\n-      char *_name = (char *) permalloc (strlen (XSTR (_symref, 0)) + 5); \\\n-      strcpy (_name, XSTR (_symref, 0));\t\\\n-      strcat (_name, TREE_CODE (DECL) == FUNCTION_DECL ? \"[DS]\" : \"[RW]\"); \\\n-      XSTR (_symref, 0) = _name;\t\t\\\n-    }\t\t\t\t\t\t\\\n-}"}, {"sha": "7ab7eedc12d2d609f3c5223e069c84fcdca69ea4", "filename": "gcc/config/rs6000/aix41.h", "status": "modified", "additions": 9, "deletions": 88, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Faix41.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Faix41.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix41.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 POWER running AIX version 4.1.\n-   Copyright (C) 1994, 1995, 1996, 1998, 1998, 1999\n+   Copyright (C) 1994, 95, 1996, 1997, 1998, 1999, 2000\n    Free Software Foundation, Inc.\n    Contributed by David Edelsohn (edelsohn@gnu.org).\n \n@@ -22,51 +22,19 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n-/* Enable AIX XL compiler calling convention breakage compatibility.  */\n-#define MASK_XL_CALL\t\t0x40000000\n-#define\tTARGET_XL_CALL\t\t(target_flags & MASK_XL_CALL)\n-#undef  SUBTARGET_SWITCHES\n-#define SUBTARGET_SWITCHES\t\t\\\n-  {\"xl-call\", \t\tMASK_XL_CALL},\t\\\n-  {\"no-xl-call\",\t- MASK_XL_CALL}, \\\n-  {\"threads\",\t\t0},\t\t\\\n-  {\"pe\",\t\t0},\n-\n #include \"rs6000/rs6000.h\"\n+#include \"rs6000/aix.h\"\n+\n+#undef  SUBSUBTARGET_SWITCHES\n+#define SUBSUBTARGET_SWITCHES\t\t\\\n+  {\"threads\",\t\t0,\t\t\t\t\t\t\\\n+   \"Use the thread library and reentrant C library\" },\t\t\t\\\n+  {\"pe\",\t\t0,\t\t\t\t\t\t\\\n+   \"Support message passing with the Parallel Environment\" },\n \n #undef ASM_SPEC\n #define ASM_SPEC \"-u %(asm_cpu)\"\n \n-/* Common ASM definitions used by ASM_SPEC amonst the various targets\n-   for handling -mcpu=xxx switches.  */\n-#undef ASM_CPU_SPEC\n-#define ASM_CPU_SPEC \\\n-\"%{!mcpu*: \\\n-  %{mpower: %{!mpower2: -mpwr}} \\\n-  %{mpower2: -mpwr2} \\\n-  %{mpowerpc*: -mppc} \\\n-  %{!mpower*: %{!mpowerpc*: %(asm_default)}}} \\\n-%{mcpu=common: -mcom} \\\n-%{mcpu=power: -mpwr} \\\n-%{mcpu=power2: -mpwr2} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=rios: -mpwr} \\\n-%{mcpu=rios1: -mpwr} \\\n-%{mcpu=rios2: -mpwr2} \\\n-%{mcpu=rsc: -mpwr} \\\n-%{mcpu=rsc1: -mpwr} \\\n-%{mcpu=403: -mppc} \\\n-%{mcpu=505: -mppc} \\\n-%{mcpu=601: -m601} \\\n-%{mcpu=602: -mppc} \\\n-%{mcpu=603: -m603} \\\n-%{mcpu=603e: -m603} \\\n-%{mcpu=604: -m604} \\\n-%{mcpu=604e: -m604} \\\n-%{mcpu=620: -mppc} \\\n-%{mcpu=821: -mppc} \\\n-%{mcpu=860: -mppc}\"\n-\n #undef\tASM_DEFAULT_SPEC\n #define ASM_DEFAULT_SPEC \"-mcom\"\n \n@@ -80,35 +48,6 @@ Boston, MA 02111-1307, USA.  */\n    %{mthreads: -D_THREAD_SAFE}\\\n    %(cpp_cpu)\"\n \n-/* Common CPP definitions used by CPP_SPEC among the various targets\n-   for handling -mcpu=xxx switches.  */\n-#undef CPP_CPU_SPEC\n-#define CPP_CPU_SPEC \\\n-\"%{!mcpu*: \\\n-  %{mpower: %{!mpower2: -D_ARCH_PWR}} \\\n-  %{mpower2: -D_ARCH_PWR2} \\\n-  %{mpowerpc*: -D_ARCH_PPC} \\\n-  %{!mpower*: %{!mpowerpc*: %(cpp_default)}}} \\\n-%{mcpu=common: -D_ARCH_COM} \\\n-%{mcpu=power: -D_ARCH_PWR} \\\n-%{mcpu=power2: -D_ARCH_PWR2} \\\n-%{mcpu=powerpc: -D_ARCH_PPC} \\\n-%{mcpu=rios: -D_ARCH_PWR} \\\n-%{mcpu=rios1: -D_ARCH_PWR} \\\n-%{mcpu=rios2: -D_ARCH_PWR2} \\\n-%{mcpu=rsc: -D_ARCH_PWR} \\\n-%{mcpu=rsc1: -D_ARCH_PWR} \\\n-%{mcpu=403: -D_ARCH_PPC} \\\n-%{mcpu=505: -D_ARCH_PPC} \\\n-%{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n-%{mcpu=602: -D_ARCH_PPC} \\\n-%{mcpu=603: -D_ARCH_PPC} \\\n-%{mcpu=603e: -D_ARCH_PPC} \\\n-%{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC} \\\n-%{mcpu=821: -D_ARCH_PPC} \\\n-%{mcpu=860: -D_ARCH_PPC}\"\n-\n #undef\tCPP_DEFAULT_SPEC\n #define CPP_DEFAULT_SPEC \"-D_ARCH_COM\"\n \n@@ -130,24 +69,6 @@ Boston, MA 02111-1307, USA.  */\n #undef\tMULTILIB_DEFAULTS\n #define\tMULTILIB_DEFAULTS { \"mcpu=common\" }\n \n-/* These are not necessary when we pass -u to the assembler, and undefining\n-   them saves a great deal of space in object files.  */\n-\n-#undef ASM_OUTPUT_EXTERNAL\n-#undef ASM_OUTPUT_EXTERNAL_LIBCALL\n-#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\t\\\n-{ rtx _symref = XEXP (DECL_RTL (DECL), 0);\t\\\n-  if ((TREE_CODE (DECL) == VAR_DECL\t\t\\\n-       || TREE_CODE (DECL) == FUNCTION_DECL)\t\\\n-      && (NAME)[strlen (NAME) - 1] != ']')\t\\\n-    {\t\t\t\t\t\t\\\n-      char *_name = (char *) permalloc (strlen (XSTR (_symref, 0)) + 5); \\\n-      strcpy (_name, XSTR (_symref, 0));\t\\\n-      strcat (_name, TREE_CODE (DECL) == FUNCTION_DECL ? \"[DS]\" : \"[RW]\"); \\\n-      XSTR (_symref, 0) = _name;\t\t\\\n-    }\t\t\t\t\t\t\\\n-}\n-\n #undef LIB_SPEC\n #define LIB_SPEC \"%{pg:-L/lib/profiled -L/usr/lib/profiled}\\\n    %{p:-L/lib/profiled -L/usr/lib/profiled} %{!shared:%{g*:-lg}}\\"}, {"sha": "3822c0a2aa38fe6d09ca9431af419894c8510819", "filename": "gcc/config/rs6000/aix43.h", "status": "modified", "additions": 15, "deletions": 34, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Faix43.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Faix43.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix43.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 POWER running AIX version 4.3.\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n    Contributed by David Edelsohn (edelsohn@gnu.org).\n \n This file is part of GNU CC.\n@@ -21,17 +21,20 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n-/* Enable AIX XL compiler calling convention breakage compatibility.  */\n-#define MASK_XL_CALL\t\t0x40000000\n-#define\tTARGET_XL_CALL\t\t(target_flags & MASK_XL_CALL)\n-#undef  SUBTARGET_SWITCHES\n-#define SUBTARGET_SWITCHES\t\t\t\t\t\\\n-  {\"aix64\", \t\tMASK_64BIT | MASK_POWERPC64 | MASK_POWERPC}, \\\n-  {\"aix32\",\t\t- (MASK_64BIT | MASK_POWERPC64)},\t\\\n-  {\"xl-call\", \t\tMASK_XL_CALL},\t\t\t\t\\\n-  {\"no-xl-call\",\t- MASK_XL_CALL}, \t\t\t\\\n-  {\"threads\",\t\t0},\t\t\t\t\t\\\n-  {\"pe\",\t\t0},\n+#include \"rs6000/rs6000.h\"\n+#include \"rs6000/aix.h\"\n+\n+/* AIX 4.3 and above support 64-bit executables.  */\n+#undef  SUBSUBTARGET_SWITCHES\n+#define SUBSUBTARGET_SWITCHES\t\t\t\t\t\\\n+  {\"aix64\", \t\tMASK_64BIT | MASK_POWERPC64 | MASK_POWERPC,\t\\\n+   \"Compile for 64-bit pointers\" },\t\t\t\t\t\\\n+  {\"aix32\",\t\t- (MASK_64BIT | MASK_POWERPC64),\t\t\\\n+   \"Compile for 32-bit pointers\" },\t\t\t\t\t\\\n+  {\"threads\",\t\t0,\t\t\t\t\t\t\\\n+   \"Use the thread library and reentrant C library\" },\t\t\t\\\n+  {\"pe\",\t\t0,\t\t\t\t\t\t\\\n+   \"Support message passing with the Parallel Environment\" },\n \n /* Sometimes certain combinations of command options do not make sense\n    on a particular target machine.  You can define a macro\n@@ -57,8 +60,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n } while (0);\n \n-#include \"rs6000/rs6000.h\"\n-\n #undef ASM_SPEC\n #define ASM_SPEC \"-u %{maix64:-a64 -mppc64} %(asm_cpu)\"\n \n@@ -161,24 +162,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef\tMULTILIB_DEFAULTS\n #define\tMULTILIB_DEFAULTS { \"mcpu=common\" }\n \n-/* These are not necessary when we pass -u to the assembler, and undefining\n-   them saves a great deal of space in object files.  */\n-\n-#undef ASM_OUTPUT_EXTERNAL\n-#undef ASM_OUTPUT_EXTERNAL_LIBCALL\n-#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\t\\\n-{ rtx _symref = XEXP (DECL_RTL (DECL), 0);\t\\\n-  if ((TREE_CODE (DECL) == VAR_DECL\t\t\\\n-       || TREE_CODE (DECL) == FUNCTION_DECL)\t\\\n-      && (NAME)[strlen (NAME) - 1] != ']')\t\\\n-    {\t\t\t\t\t\t\\\n-      char *_name = (char *) permalloc (strlen (XSTR (_symref, 0)) + 5); \\\n-      strcpy (_name, XSTR (_symref, 0));\t\\\n-      strcat (_name, TREE_CODE (DECL) == FUNCTION_DECL ? \"[DS]\" : \"[RW]\"); \\\n-      XSTR (_symref, 0) = _name;\t\t\\\n-    }\t\t\t\t\t\t\\\n-}\n-\n #undef LIB_SPEC\n #define LIB_SPEC \"%{pg:-L/lib/profiled -L/usr/lib/profiled}\\\n    %{p:-L/lib/profiled -L/usr/lib/profiled}\\\n@@ -214,12 +197,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef RS6000_CALL_GLUE\n #define RS6000_CALL_GLUE \"{cror 31,31,31|nop}\"\n \n-#if 0\n /* AIX 4.2 and above provides initialization and finalization function\n    support from linker command line.  */\n #undef HAS_INIT_SECTION\n #define HAS_INIT_SECTION\n \n #undef LD_INIT_SWITCH\n #define LD_INIT_SWITCH \"-binitfini\"\n-#endif"}, {"sha": "6643691af7669d98856f1886c565f045d397f1ab", "filename": "gcc/config/rs6000/beos.h", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fbeos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fbeos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fbeos.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for BeOS.\n-   Copyright (C) 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 2000 Free Software Foundation, Inc.\n    Contributed by Fred Fish (fnf@cygnus.com), based on aix41.h\n    from David Edelsohn (edelsohn@npac.syr.edu).\n \n@@ -21,6 +21,9 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n+#include \"rs6000/rs6000.h\"\n+#include \"rs6000/aix.h\"\n+\n /* Enable AIX XL compiler calling convention breakage compatibility.  */\n #define MASK_XL_CALL\t\t0x40000000\n #define\tTARGET_XL_CALL\t\t(target_flags & MASK_XL_CALL)\n@@ -31,8 +34,6 @@ Boston, MA 02111-1307, USA.  */\n   {\"threads\",\t\t0},\t\t\\\n   {\"pe\",\t\t0},\n \n-#include \"rs6000/rs6000.h\"\n-\n #undef ASM_SPEC\n #define ASM_SPEC \"-u %(asm_cpu)\"\n \n@@ -79,24 +80,6 @@ Boston, MA 02111-1307, USA.  */\n #undef\tMULTILIB_DEFAULTS\n #define\tMULTILIB_DEFAULTS { \"mcpu=powerpc\" }\n \n-/* These are not necessary when we pass -u to the assembler, and undefining\n-   them saves a great deal of space in object files.  */\n-\n-#undef ASM_OUTPUT_EXTERNAL\n-#undef ASM_OUTPUT_EXTERNAL_LIBCALL\n-#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\t\\\n-{ rtx _symref = XEXP (DECL_RTL (DECL), 0);\t\\\n-  if ((TREE_CODE (DECL) == VAR_DECL\t\t\\\n-       || TREE_CODE (DECL) == FUNCTION_DECL)\t\\\n-      && (NAME)[strlen (NAME) - 1] != ']')\t\\\n-    {\t\t\t\t\t\t\\\n-      char *_name = (char *) permalloc (strlen (XSTR (_symref, 0)) + 5); \\\n-      strcpy (_name, XSTR (_symref, 0));\t\\\n-      strcat (_name, TREE_CODE (DECL) == FUNCTION_DECL ? \"[DS]\" : \"[RW]\"); \\\n-      XSTR (_symref, 0) = _name;\t\t\\\n-    }\t\t\t\t\t\t\\\n-}\n-\n /* These empty definitions get rid of the attempt to link in crt0.o\n    and any libraries like libc.a.\n    On BeOS the ld executable is actually a linker front end that first runs"}, {"sha": "0ed448b2124fb4cc5475f24112d63be6e4f7ed37", "filename": "gcc/config/rs6000/cygwin.h", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcygwin.h?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -1,67 +0,0 @@\n-/* Operating system specific defines to be used when targeting GCC for\n-   hosting on Windows NT 3.x, using the Cygnus API \n-\n-   This is different to the winnt.h file, since that is used\n-   to build GCC for use with a windows style library and tool\n-   set, winnt.h uses the Microsoft tools to do that.\n-\n-   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA. */\n-\n-\n-/* Ugly hack */\n-#include \"rs6000/win-nt.h\"\n-\n-\n-#ifdef CPP_PREDEFINES\n-#undef CPP_PREDEFINES\n-#endif\n-\n-#define\tCPP_PREDEFINES \"-D_WIN32 -DWINNT -D__CYGWIN__ -D__CYGWIN32__ -DPOSIX \\\n-  -D_POWER -D_ARCH_PPC -D__PPC__ -Asystem(winnt) -Acpu(powerpc) -Amachine(powerpc)\"\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"-remap %{posix: -D_POSIX_SOURCE} %(cpp_cpu)\"\n-\n-/* We have to dynamic link to get to the system DLLs.  All of libc, libm and\n-   the Unix stuff is in cygwin.dll.  The import library is called\n-   'libcygwin.a'.  For Windows applications, include more libraries, but\n-   always include kernel32.  We'd like to specific subsystem windows to\n-   ld, but that doesn't work just yet.  */\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \"-lcygwin %{mwindows:-luser32 -lgdi32 -lcomdlg32} -lkernel32\"\n-\n-#undef\tLINK_SPEC\n-#define\tLINK_SPEC \"%{v:-V}\"\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"crti%O%s crt0%O%s\"\n-\n-#undef\tENDFILE_SPEC\n-#define\tENDFILE_SPEC \"crtn%O%s\"\n-\n-#define PTRDIFF_TYPE \"int\"\n-#define WCHAR_UNSIGNED 1\n-#define WCHAR_TYPE_SIZE 16\n-#define WCHAR_TYPE \"short unsigned int\"\n-\n-#define DBX_DEBUGGING_INFO \n-#undef SDB_DEBUGGING_INFO \n-#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG"}, {"sha": "40fc98ef566f15cfbc37682fbaf4761af46d8ba1", "filename": "gcc/config/rs6000/eabi-ci.asm", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,6 +1,6 @@\n # crti.s for eabi\n \n-#   Copyright (C) 1996 Free Software Foundation, Inc.\n+#   Copyright (C) 1996, 2000 Free Software Foundation, Inc.\n #   Written By Michael Meissner\n # \n # This file is free software; you can redistribute it and/or modify it\n@@ -102,6 +102,11 @@ __SBSS2_START__:\n \t.type\t__EXCEPT_START__,@object\n __EXCEPT_START__:\n \n+\t.section \".eh_frame\",\"aw\"\n+\t.globl\t__EH_FRAME_BEGIN__\n+\t.type\t__EH_FRAME_BEGIN__,@object\n+__EH_FRAME_BEGIN__:\n+\n # Head of __init function used for static constructors in Solaris\n \t.section \".init\",\"ax\"\n \t.align 2"}, {"sha": "d62e2faff92fc012bf15a806c986be414ef7764f", "filename": "gcc/config/rs6000/eabi-cn.asm", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,6 +1,6 @@\n # crtn.s for eabi\n \n-#   Copyright (C) 1996 Free Software Foundation, Inc.\n+#   Copyright (C) 1996, 2000 Free Software Foundation, Inc.\n #   Written By Michael Meissner\n # \n # This file is free software; you can redistribute it and/or modify it\n@@ -94,6 +94,12 @@ __SBSS2_END__:\n \t.type\t__EXCEPT_END__,@object\n __EXCEPT_END__:\n \n+\t.section \".eh_frame\",\"aw\"\n+\t.globl\t__EH_FRAME_END__\n+\t.type\t__EH_FRAME_END__,@object\n+__EH_FRAME_END__:\n+        .long   0\n+\n # Tail of __init used for static constructors in Solaris\n \t.section \".init\",\"ax\"\n \tlwz 0,12(1)"}, {"sha": "9785a112a6d8392b31668cafc9b8666ecd778879", "filename": "gcc/config/rs6000/eabi-ctors.c", "status": "modified", "additions": 45, "deletions": 33, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Feabi-ctors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Feabi-ctors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-ctors.c?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,7 +1,7 @@\n /* Stripped down support to run global constructors and destructors on\n    embedded PowerPC systems.\n \n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2000 Free Software Foundation, Inc.\n    Contributed by Michael Meissner  (meissner@cygnus.com).\n \n This file is part of GNU CC.\n@@ -28,65 +28,77 @@ Boston, MA 02111-1307, USA.  */\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n+#include \"tm.h\"\n+#include \"defaults.h\"\n+#include <stddef.h>\n+#include \"frame.h\"\n+#include \"gbl-ctors.h\"\n \n-/*  Declare a pointer to void function type.  */\n-\n-typedef void (*func_ptr) (void);\n+/* FIXME: This file should share code with all the other\n+   constructor/destructor implementations in crtstuff.c and libgcc2.c.  */\n \n /* Declare the set of symbols use as begin and end markers for the lists\n    of global object constructors and global object destructors.  */\n \n-extern func_ptr __CTOR_LIST__[];\n-extern func_ptr __CTOR_END__ [];\n-extern func_ptr __DTOR_LIST__[];\n-extern func_ptr __DTOR_END__ [];\n+extern func_ptr __CTOR_LIST__[] asm (\"__CTOR_LIST__\");\n+extern func_ptr __CTOR_END__ [] asm (\"__CTOR_END__\");\n+extern func_ptr __DTOR_LIST__[] asm (\"__DTOR_LIST__\");\n+extern func_ptr __DTOR_END__ [] asm (\"__DTOR_END__\");\n+extern unsigned char __EH_FRAME_BEGIN__[] asm (\"__EH_FRAME_BEGIN__\");\n \n extern void __do_global_ctors (void);\n-extern void __do_global_dtors (void);\n \n extern void __init (), __fini ();\n \n-/* The Solaris linker seems to incorrectly relocate PC relative relocations\n-   to a different section (ie, calls to __init, __fini), so avoid it by\n-   using a function pointer.  */\n-static void (*init_ptr) (void) = __init;\n-static void (*fini_ptr) (void) = __fini;\n-\n void (*__atexit)(func_ptr);\n \n /* Call all global constructors */\n void\n __do_global_ctors (void)\n {\n-  func_ptr *ptr   = &__CTOR_END__[0] - 1;\n-  func_ptr *start = &__CTOR_LIST__[0];\n+  func_ptr *p = __CTOR_END__ - 1;\n \n-  if (__atexit)\n-    __atexit (__do_global_dtors);\n+#ifdef EH_FRAME_SECTION\n+  {\n+    static struct object object;\n+    __register_frame_info (__EH_FRAME_BEGIN__, &object);\n+  }\n+#endif\n \n   /* Call the constructors collected in the .ctors section.  */\n-  for ( ; ptr >= start; ptr--)\n-    if (*ptr)\n-      (*ptr)();\n+  for ( ; p >= __CTOR_LIST__; p--)\n+    if (*p)\n+      (*p)();\n+  \n+  if (__atexit)\n+    __atexit (__do_global_dtors);\n \n   /* Call the initialization function in the .init section.  */\n-  (*init_ptr) ();\n+  __init ();\n }\n \n /* Call all global destructors */\n void\n __do_global_dtors (void)\n {\n-  func_ptr *ptr   = &__DTOR_LIST__[0];\n-  func_ptr *end   = &__DTOR_END__[0];\n+  static func_ptr *p = __DTOR_LIST__ + 1;\n+  static int completed = 0;\n \n-  /* Call the termination function in the .fini section.  */\n-  (*fini_ptr) ();\n+  if (completed)\n+    return;\n \n-  /* Call the  destructors collected in the .dtors section.  Run\n-     the destructors in reverse order.  */\n-  for ( ; ptr < end; ptr++)\n-    if (*ptr)\n-      (*ptr)();\n+  /* Call the termination function in the .fini section.  */\n+  __fini ();\n+\n+  while (p < __DTOR_END__)\n+    {\n+      p++;\n+      (*(p-1)) ();\n+    }\n+\n+#ifdef EH_FRAME_SECTION_ASM_OP\n+  if (__deregister_frame_info)\n+    __deregister_frame_info (__EH_FRAME_BEGIN__);\n+#endif\n+  completed = 1;\n }\n-"}, {"sha": "5293a076cce7ae550a6ba095125e0fc7c3d8fc30", "filename": "gcc/config/rs6000/eabi.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Feabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Feabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,6 +1,6 @@\n /* Core target definitions for GNU compiler\n    for IBM RS/6000 PowerPC targeted to embedded ELF systems.\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2000 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n This file is part of GNU CC.\n@@ -28,6 +28,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Invoke an initializer function to set up the GOT */\n #define NAME__MAIN \"__eabi\"\n+#define INVOKE__main\n \n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (PowerPC Embedded)\");"}, {"sha": "5257be5dcd915bf2b50e157f9ab88d79c69e0e60", "filename": "gcc/config/rs6000/lynx.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flynx.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Rs6000 running LynxOS.\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2000 Free Software Foundation, Inc.\n    Contributed by David Henkel-Wallace, Cygnus Support (gumby@cygnus.com)\n \n This file is part of GNU CC.\n@@ -96,7 +96,6 @@ do {\t\t\t\t\t\t\t\t\\\n #undef OBJECT_FORMAT_ROSE\n #undef MD_EXEC_PREFIX\n #undef REAL_LD_FILE_NAME\n-#undef REAL_NM_FILE_NAME\n #undef REAL_STRIP_FILE_NAME\n \n /* LynxOS doesn't have mcount. */"}, {"sha": "622b972aa194f9b9c8fb4afa090e908db160ff97", "filename": "gcc/config/rs6000/netware.h", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fnetware.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,6 +1,6 @@\n /* Core target definitions for GNU compiler\n    for IBM RS/6000 PowerPC running NetWare\n-   Copyright (C) 1994, 1995, 1996, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996, 1998, 2000 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n This file is part of GNU CC.\n@@ -34,24 +34,11 @@ Boston, MA 02111-1307, USA.  */\n #undef PROCESSOR_DEFAULT\n #define PROCESSOR_DEFAULT PROCESSOR_PPC601\n \n-/* Don't generate XCOFF debugging information.  */\n-\n-#undef XCOFF_DEBUGGING_INFO\n-\n-/* Don't use the COFF object file format.  */\n-\n-#undef OBJECT_FORMAT_COFF\n-\n /* The XCOFF support uses weird symbol suffixes, which we don't want\n    for ELF.  */\n \n #undef STRIP_NAME_ENCODING\n \n-/* Don't bother to output .extern pseudo-ops.  They are not needed by\n-   ELF assemblers.  */\n-\n-#undef ASM_OUTPUT_EXTERNAL\n-\n /* Undefine some things which are defined by the generic svr4.h.  */\n \n #undef ASM_FILE_END"}, {"sha": "67ca9564abff96b8c95633324d7fc66e03c5f588", "filename": "gcc/config/rs6000/nt-ci.asm", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fnt-ci.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fnt-ci.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fnt-ci.asm?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -1,48 +0,0 @@\n-# crti.s for Windows NT\n-\n-#   Copyright (C) 1996 Free Software Foundation, Inc.\n-#   Written By Michael Meissner\n-# \n-# This file is free software; you can redistribute it and/or modify it\n-# under the terms of the GNU General Public License as published by the\n-# Free Software Foundation; either version 2, or (at your option) any\n-# later version.\n-# \n-# In addition to the permissions in the GNU General Public License, the\n-# Free Software Foundation gives you unlimited permission to link the\n-# compiled version of this file with other programs, and to distribute\n-# those programs without any restriction coming from the use of this\n-# file.  (The General Public License restrictions do apply in other\n-# respects; for example, they cover modification of the file, and\n-# distribution when not linked into another program.)\n-# \n-# This file is distributed in the hope that it will be useful, but\n-# WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-# General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; see the file COPYING.  If not, write to\n-# the Free Software Foundation, 59 Temple Place - Suite 330,\n-# Boston, MA 02111-1307, USA.\n-# \n-#    As a special exception, if you link this library with files\n-#    compiled with GCC to produce an executable, this does not cause\n-#    the resulting executable to be covered by the GNU General Public License.\n-#    This exception does not however invalidate any other reasons why\n-#    the executable file might be covered by the GNU General Public License.\n-# \n-\n-# This file just supplies labeled starting points for the static constructors\n-# and destructors.  It is linked in first before other modules.\n- \n-\t.file\t\"crti.s\"\n-\t.ident\t\"GNU C crti.s\"\n-\n-\t.section .ctors,\"w\"\n-\t.globl\t__CTOR_LIST__\n-__CTOR_LIST__:\n-\n-\t.section .dtors,\"w\"\n-\t.globl\t__DTOR_LIST__\n-__DTOR_LIST__:"}, {"sha": "dd6daf29b2ecc934b8ba8e7fb1c3aba3787aa928", "filename": "gcc/config/rs6000/nt-cn.asm", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fnt-cn.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fnt-cn.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fnt-cn.asm?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -1,48 +0,0 @@\n-# crtn.s for Windows NT\n-\n-#   Copyright (C) 1996 Free Software Foundation, Inc.\n-#   Written By Michael Meissner\n-# \n-# This file is free software; you can redistribute it and/or modify it\n-# under the terms of the GNU General Public License as published by the\n-# Free Software Foundation; either version 2, or (at your option) any\n-# later version.\n-# \n-# In addition to the permissions in the GNU General Public License, the\n-# Free Software Foundation gives you unlimited permission to link the\n-# compiled version of this file with other programs, and to distribute\n-# those programs without any restriction coming from the use of this\n-# file.  (The General Public License restrictions do apply in other\n-# respects; for example, they cover modification of the file, and\n-# distribution when not linked into another program.)\n-# \n-# This file is distributed in the hope that it will be useful, but\n-# WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-# General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; see the file COPYING.  If not, write to\n-# the Free Software Foundation, 59 Temple Place - Suite 330,\n-# Boston, MA 02111-1307, USA.\n-# \n-#    As a special exception, if you link this library with files\n-#    compiled with GCC to produce an executable, this does not cause\n-#    the resulting executable to be covered by the GNU General Public License.\n-#    This exception does not however invalidate any other reasons why\n-#    the executable file might be covered by the GNU General Public License.\n-# \n-\n-# This file just supplies labeled ending points for the static constructors\n-# and destructors.  It is linked in last after other modules.\n- \n-\t.file\t\"crtn.s\"\n-\t.ident\t\"GNU C crtn.s\"\n-\n-\t.section .ctors,\"w\"\n-\t.globl\t__CTOR_END__\n-__CTOR_END__:\n-\n-\t.section .dtors,\"w\"\n-\t.globl\t__DTOR_END__\n-__DTOR_END__:"}, {"sha": "aa4179e7a79bc4436ed3b7c768811920a01674cb", "filename": "gcc/config/rs6000/ntstack.asm", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fntstack.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fntstack.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fntstack.asm?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -1,42 +0,0 @@\n-# Allocate stack for NT, inserting stack probes every 4k pages\n-\n-\t.file\t\"ntstack.asm\"\n-\n-#\tSetup MS Structured-Exception-Handling\n-\t.pdata\n-\t.align 2\n-\t.ualong ..__allocate_stack,__allocate_stack.e,0,0,__allocate_stack.b\n-\n-#\tSwitch to the relocation section\n-\t.reldata\n-\t.globl __allocate_stack\n-\t.globl ..__allocate_stack\n-__allocate_stack:\n-\t.ualong ..__allocate_stack,.toc\n-\n-\t.text\n-\t.align 2\n-..__allocate_stack:\n-\t.function\t..__allocate_stack\n-__allocate_stack.b:\n-\taddi\t3,3,15\t\t\t# round up to 16 byte alignment\n-\tlwz\t0,0(1)\t\t\t# old stack link\n-\trlwinm\t3,3,0,0,28\n-\tsrawi.\t4,3,12\t\t\t# get # of pages to check\n-\tneg\t3,3\t\t\t# negate so we can use stwux\n-\tbgt-\t0,.Lcheck\n-\tstwux\t0,1,3\t\t\t# small request, just decrement and return\n-\tblr\n-\n-.Lcheck:\n-\tmtctr\t4\t\t\t# number of pages to check\n-\tmr\t5,1\t\t\t# tmp pointer\n-.Lloop:\n-\tlwzu\t6,-4096(5)\t\t# touch the page\n-\tbdnz+\t.Lloop\t\t\t# and loop back\n-\n-\tstwux\t0,1,3\t\t\t# update stack pointer\n-\tblr\n-\n-__allocate_stack.e:\n-FE_MOT_RESVD..__allocate_stack:"}, {"sha": "c63360705a776c36548c911b3812cdd23d205811", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "added", "additions": 162, "deletions": 0, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -0,0 +1,162 @@\n+/* Definitions of target machine for GNU compiler, for IBM RS/6000.\n+   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* Declare functions in rs6000.c */\n+\n+#ifdef RTX_CODE\n+\n+#ifdef TREE_CODE\n+extern void init_cumulative_args PARAMS ((CUMULATIVE_ARGS *, tree, rtx, int));\n+extern void rs6000_va_start PARAMS ((int, tree, rtx));\n+#endif /* TREE_CODE */\n+\n+extern struct rtx_def *rs6000_got_register PARAMS ((rtx));\n+extern struct rtx_def *find_addr_reg PARAMS ((rtx));\n+extern int any_operand PARAMS ((rtx, enum machine_mode));\n+extern int short_cint_operand PARAMS ((rtx, enum machine_mode));\n+extern int u_short_cint_operand PARAMS ((rtx, enum machine_mode));\n+extern int non_short_cint_operand PARAMS ((rtx, enum machine_mode));\n+extern int gpc_reg_operand PARAMS ((rtx, enum machine_mode));\n+extern int cc_reg_operand PARAMS ((rtx, enum machine_mode));\n+extern int cc_reg_not_cr0_operand PARAMS ((rtx, enum machine_mode));\n+extern int reg_or_short_operand PARAMS ((rtx, enum machine_mode));\n+extern int reg_or_neg_short_operand PARAMS ((rtx, enum machine_mode));\n+extern int reg_or_u_short_operand PARAMS ((rtx, enum machine_mode));\n+extern int reg_or_cint_operand PARAMS ((rtx, enum machine_mode));\n+extern int reg_or_u_cint_operand PARAMS ((rtx, enum machine_mode));\n+extern int got_operand PARAMS ((rtx, enum machine_mode));\n+extern int got_no_const_operand PARAMS ((rtx, enum machine_mode));\n+extern int num_insns_constant PARAMS ((rtx, enum machine_mode));\n+extern int easy_fp_constant PARAMS ((rtx, enum machine_mode));\n+extern int volatile_mem_operand PARAMS ((rtx, enum machine_mode));\n+extern int offsettable_mem_operand PARAMS ((rtx, enum machine_mode));\n+extern int mem_or_easy_const_operand PARAMS ((rtx, enum machine_mode));\n+extern int add_operand PARAMS ((rtx, enum machine_mode));\n+extern int non_add_cint_operand PARAMS ((rtx, enum machine_mode));\n+extern int non_logical_cint_operand PARAMS ((rtx, enum machine_mode));\n+extern int non_logical_u_cint_operand PARAMS ((rtx, enum machine_mode));\n+extern int logical_operand PARAMS ((rtx, enum machine_mode));\n+extern int logical_u_operand PARAMS ((rtx, enum machine_mode));\n+extern int mask_operand PARAMS ((rtx, enum machine_mode));\n+extern int mask64_operand PARAMS ((rtx, enum machine_mode));\n+extern int and64_operand PARAMS ((rtx, enum machine_mode));\n+extern int and_operand PARAMS ((rtx, enum machine_mode));\n+extern int count_register_operand PARAMS ((rtx, enum machine_mode));\n+extern int xer_operand PARAMS ((rtx, enum machine_mode));\n+extern int reg_or_mem_operand PARAMS ((rtx, enum machine_mode));\n+extern int lwa_operand PARAMS ((rtx, enum machine_mode));\n+extern int call_operand PARAMS ((rtx, enum machine_mode));\n+extern int current_file_function_operand PARAMS ((rtx, enum machine_mode));\n+extern int input_operand PARAMS ((rtx, enum machine_mode));\n+extern int small_data_operand PARAMS ((rtx, enum machine_mode));\n+extern int constant_pool_expr_p PARAMS ((rtx));\n+extern int toc_relative_expr_p PARAMS ((rtx));\n+extern int expand_block_move PARAMS ((rtx[]));\n+extern int load_multiple_operation PARAMS ((rtx, enum machine_mode));\n+extern int store_multiple_operation PARAMS ((rtx, enum machine_mode));\n+extern int branch_comparison_operator PARAMS ((rtx, enum machine_mode));\n+extern int scc_comparison_operator PARAMS ((rtx, enum machine_mode));\n+extern int trap_comparison_operator PARAMS ((rtx, enum machine_mode));\n+extern int includes_lshift_p PARAMS ((rtx, rtx));\n+extern int includes_rshift_p PARAMS ((rtx, rtx));\n+extern int registers_ok_for_quad_peep PARAMS ((rtx, rtx));\n+extern int addrs_ok_for_quad_peep PARAMS ((rtx, rtx));\n+extern enum reg_class secondary_reload_class PARAMS ((enum reg_class,\n+\t\t\t\t\t\t      enum machine_mode, rtx));\n+extern int ccr_bit PARAMS ((rtx, int));\n+extern void print_operand PARAMS ((FILE *, rtx, int));\n+extern void print_operand_address PARAMS ((FILE *, rtx));\n+extern void output_toc PARAMS ((FILE *, rtx, int));\n+extern int rs6000_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n+extern int rs6000_adjust_priority PARAMS ((rtx, int));\n+extern void rs6000_initialize_trampoline PARAMS ((rtx, rtx, rtx));\n+extern struct rtx_def *rs6000_longcall_ref PARAMS ((rtx));\n+extern void rs6000_fatal_bad_address PARAMS ((rtx));\n+extern int stmw_operation PARAMS ((rtx, enum machine_mode));\n+extern int mtcrf_operation PARAMS ((rtx, enum machine_mode));\n+extern int lmw_operation PARAMS ((rtx, enum machine_mode));\n+extern struct rtx_def *create_TOC_reference PARAMS ((rtx));\n+extern void rs6000_emit_eh_toc_restore PARAMS ((rtx));\n+extern rtx rs6000_legitimize_address PARAMS ((rtx, rtx, enum machine_mode));\n+extern void rs6000_select_rtx_section PARAMS ((enum machine_mode, rtx));\n+#endif /* RTX_CODE */\n+\n+#ifdef TREE_CODE\n+extern void function_arg_advance PARAMS ((CUMULATIVE_ARGS *, enum machine_mode,\n+\t\t\t\t\t  tree, int));\n+extern int function_arg_boundary PARAMS ((enum machine_mode, tree));\n+extern struct rtx_def *function_arg PARAMS ((CUMULATIVE_ARGS *,\n+\t\t\t\t\t     enum machine_mode, tree, int));\n+extern int function_arg_partial_nregs PARAMS ((CUMULATIVE_ARGS *,\n+\t\t\t\t\t       enum machine_mode, tree, int));\n+extern int function_arg_pass_by_reference PARAMS ((CUMULATIVE_ARGS *,\n+\t\t\t\t\t\t   enum machine_mode,\n+\t\t\t\t\t\t   tree, int));\n+extern void setup_incoming_varargs PARAMS ((CUMULATIVE_ARGS *,\n+\t\t\t\t\t    enum machine_mode, tree,\n+\t\t\t\t\t    int *, int));\n+extern struct rtx_def *rs6000_va_arg PARAMS ((tree, tree));\n+extern void output_mi_thunk PARAMS ((FILE *, tree, int, tree));\n+extern int rs6000_comp_type_attributes PARAMS ((tree, tree));\n+extern int rs6000_valid_decl_attribute_p PARAMS ((tree, tree, tree, tree));\n+extern int rs6000_valid_type_attribute_p PARAMS ((tree, tree, tree, tree));\n+extern void rs6000_set_default_type_attributes PARAMS ((tree));\n+extern void rs6000_encode_section_info PARAMS ((tree));\n+extern void rs6000_select_section PARAMS ((tree, int));\n+#ifdef ARGS_SIZE_RTX\n+/* expr.h defines ARGS_SIZE_RTX and `enum direction' */\n+extern enum direction function_arg_padding PARAMS ((enum machine_mode, tree));\n+#endif /* ARGS_SIZE_RTX */\n+#endif /* TREE_CODE */\n+\n+extern void optimization_options PARAMS ((int, int));\n+extern void rs6000_override_options PARAMS ((const char *));\n+extern void rs6000_file_start PARAMS ((FILE *, const char *));\n+extern struct rtx_def *rs6000_float_const PARAMS ((const char *,\n+\t\t\t\t\t\t   enum machine_mode));\n+extern int direct_return PARAMS ((void));\n+extern int get_issue_rate PARAMS ((void));\n+extern union tree_node *rs6000_build_va_list PARAMS ((void));\n+extern void rs6000_save_machine_status PARAMS ((struct function *));\n+extern void rs6000_restore_machine_status PARAMS ((struct function *));\n+extern void rs6000_init_expanders PARAMS ((void));\n+extern int first_reg_to_save PARAMS ((void));\n+extern int first_fp_reg_to_save PARAMS ((void));\n+extern rs6000_stack_t *rs6000_stack_info PARAMS ((void));\n+extern void output_prolog PARAMS ((FILE *, int));\n+extern void output_epilog PARAMS ((FILE *, int));\n+extern void output_ascii PARAMS ((FILE *, const char *, int));\n+extern void rs6000_gen_section_name PARAMS ((char **, const char *,\n+\t\t\t\t\t     const char *));\n+extern void output_function_profiler PARAMS ((FILE *, int));\n+extern int rs6000_trampoline_size PARAMS ((void));\n+extern void toc_section PARAMS ((void));\n+extern void sdata_section PARAMS ((void));\n+extern void sdata2_section PARAMS ((void));\n+extern void sbss_section PARAMS ((void));\n+extern void private_data_section PARAMS ((void));\n+extern int get_TOC_alias_set PARAMS ((void));\n+extern int uses_TOC PARAMS ((void));\n+extern void rs6000_emit_prologue PARAMS ((void));\n+extern void rs6000_emit_load_toc_table PARAMS ((int));\n+extern void rs6000_aix_emit_builtin_unwind_init PARAMS ((void));\n+extern void rs6000_emit_epilogue PARAMS ((int));\n+extern void debug_stack_info PARAMS ((rs6000_stack_t *));"}, {"sha": "e7923587aa4771f1f96d4f3ed4276d4a933fe39b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1754, "deletions": 996, "changes": 2750, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac"}, {"sha": "e55ae93641be29a6c85b2010dffa45123879de90", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 218, "deletions": 853, "changes": 1071, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for IBM RS/6000.\n-   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n+   2000 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GNU CC.\n@@ -22,13 +22,18 @@ Boston, MA 02111-1307, USA.  */\n \n \n /* Note that some other tm.h files include this one and then override\n-   many of the definitions that relate to assembler syntax.  */\n+   many of the definitions.  */\n \n+/* Definitions for the object file format.  These are set at\n+   compile-time.  */\n \n-/* Names to predefine in the preprocessor for this target machine.  */\n+#define OBJECT_XCOFF 1\n+#define OBJECT_ELF 2\n+#define OBJECT_PEF 3\n \n-#define CPP_PREDEFINES \"-D_IBMR2 -D_POWER -D_AIX -D_AIX32 -D_LONG_LONG \\\n--Asystem(unix) -Asystem(aix) -Acpu(rs6000) -Amachine(rs6000)\"\n+#define TARGET_ELF (TARGET_OBJECT_FORMAT == OBJECT_ELF)\n+#define TARGET_AIX (TARGET_OBJECT_FORMAT == OBJECT_XCOFF)\n+#define TARGET_MACOS (TARGET_OBJECT_FORMAT == OBJECT_PEF)\n \n /* Print subsidiary information on the compiler version in use.  */\n #define TARGET_VERSION ;\n@@ -38,16 +43,6 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_CPU_DEFAULT ((char *)0)\n #endif\n \n-/* Tell the assembler to assume that all undefined names are external.\n-\n-   Don't do this until the fixed IBM assembler is more generally available.\n-   When this becomes permanently defined, the ASM_OUTPUT_EXTERNAL,\n-   ASM_OUTPUT_EXTERNAL_LIBCALL, and RS6000_OUTPUT_BASENAME macros will no\n-   longer be needed.  Also, the extern declaration of mcount in ASM_FILE_START\n-   will no longer be needed.  */\n-\n-/* #define ASM_SPEC \"-u %(asm_cpu)\" */\n-\n /* Define appropriate architecture macros for preprocessor depending on\n    target switches.  */\n \n@@ -89,25 +84,7 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=823: -D_ARCH_PPC} \\\n %{mcpu=860: -D_ARCH_PPC}\"\n \n-#ifndef CPP_DEFAULT_SPEC\n #define CPP_DEFAULT_SPEC \"-D_ARCH_PWR\"\n-#endif\n-\n-#ifndef CPP_SYSV_SPEC\n-#define CPP_SYSV_SPEC \"\"\n-#endif\n-\n-#ifndef CPP_ENDIAN_SPEC\n-#define CPP_ENDIAN_SPEC \"\"\n-#endif\n-\n-#ifndef CPP_ENDIAN_DEFAULT_SPEC\n-#define CPP_ENDIAN_DEFAULT_SPEC \"\"\n-#endif\n-\n-#ifndef CPP_SYSV_DEFAULT_SPEC\n-#define CPP_SYSV_DEFAULT_SPEC \"\"\n-#endif\n \n /* Common ASM definitions used by ASM_SPEC among the various targets\n    for handling -mcpu=xxx switches.  */\n@@ -145,9 +122,7 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=823: -mppc} \\\n %{mcpu=860: -mppc}\"\n \n-#ifndef ASM_DEFAULT_SPEC\n #define ASM_DEFAULT_SPEC \"\"\n-#endif\n \n /* This macro defines names of additional specifications to put in the specs\n    that can be used in various specifications like CC1_SPEC.  Its definition\n@@ -159,65 +134,18 @@ Boston, MA 02111-1307, USA.  */\n \n    Do not define this macro if it does not need to do anything.  */\n \n-#ifndef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS\n-#endif\n \n #define EXTRA_SPECS\t\t\t\t\t\t\t\\\n   { \"cpp_cpu\",\t\t\tCPP_CPU_SPEC },\t\t\t\t\\\n   { \"cpp_default\",\t\tCPP_DEFAULT_SPEC },\t\t\t\\\n-  { \"cpp_sysv\",\t\t\tCPP_SYSV_SPEC },\t\t\t\\\n-  { \"cpp_sysv_default\",\t\tCPP_SYSV_DEFAULT_SPEC },\t\t\\\n-  { \"cpp_endian_default\",\tCPP_ENDIAN_DEFAULT_SPEC },\t\t\\\n-  { \"cpp_endian\",\t\tCPP_ENDIAN_SPEC },\t\t\t\\\n   { \"asm_cpu\",\t\t\tASM_CPU_SPEC },\t\t\t\t\\\n   { \"asm_default\",\t\tASM_DEFAULT_SPEC },\t\t\t\\\n-  { \"link_syscalls\",\t\tLINK_SYSCALLS_SPEC },\t\t\t\\\n-  { \"link_libg\",\t\tLINK_LIBG_SPEC },\t\t\t\\\n   SUBTARGET_EXTRA_SPECS\n \n-/* Default location of syscalls.exp under AIX */\n-#ifndef CROSS_COMPILE\n-#define LINK_SYSCALLS_SPEC \"-bI:/lib/syscalls.exp\"\n-#else\n-#define LINK_SYSCALLS_SPEC \"\"\n-#endif\n-\n-/* Default location of libg.exp under AIX */\n-#ifndef CROSS_COMPILE\n-#define LINK_LIBG_SPEC \"-bexport:/usr/lib/libg.exp\"\n-#else\n-#define LINK_LIBG_SPEC \"\"\n-#endif\n-\n-/* Define the options for the binder: Start text at 512, align all segments\n-   to 512 bytes, and warn if there is text relocation.\n-\n-   The -bhalt:4 option supposedly changes the level at which ld will abort,\n-   but it also suppresses warnings about multiply defined symbols and is\n-   used by the AIX cc command.  So we use it here.\n-\n-   -bnodelcsect undoes a poor choice of default relating to multiply-defined\n-   csects.  See AIX documentation for more information about this.\n-\n-   -bM:SRE tells the linker that the output file is Shared REusable.  Note\n-   that to actually build a shared library you will also need to specify an\n-   export list with the -Wl,-bE option.  */\n-\n-#define LINK_SPEC \"-T512 -H512 %{!r:-btextro} -bhalt:4 -bnodelcsect\\\n-   %{static:-bnso %(link_syscalls) } \\\n-   %{!shared:%{g*: %(link_libg) }} %{shared:-bM:SRE}\"\n-\n-/* Profiled library versions are used by linking with special directories.  */\n-#define LIB_SPEC \"%{pg:-L/lib/profiled -L/usr/lib/profiled}\\\n-   %{p:-L/lib/profiled -L/usr/lib/profiled} %{!shared:%{g*:-lg}} -lc\"\n-\n /* gcc must do the search itself to find libgcc.a, not use -l.  */\n #define LIBGCC_SPEC \"libgcc.a%s\"\n \n-/* Don't turn -B into -L if the argument specifies a relative file name.  */\n-#define RELATIVE_PREFIX_NOT_LINKDIR\n-\n /* Architecture type.  */\n \n extern int target_flags;\n@@ -280,12 +208,14 @@ extern int target_flags;\n /* Disable fused multiply/add operations */\n #define MASK_NO_FUSED_MADD\t0x00020000\n \n+/* Nonzero if we need to schedule the prolog and epilog.  */\n+#define MASK_SCHED_PROLOG\t0x00040000\n+\n #define TARGET_POWER\t\t(target_flags & MASK_POWER)\n #define TARGET_POWER2\t\t(target_flags & MASK_POWER2)\n #define TARGET_POWERPC\t\t(target_flags & MASK_POWERPC)\n #define TARGET_PPC_GPOPT\t(target_flags & MASK_PPC_GPOPT)\n #define TARGET_PPC_GFXOPT\t(target_flags & MASK_PPC_GFXOPT)\n-#define TARGET_POWERPC64\t(target_flags & MASK_POWERPC64)\n #define TARGET_NEW_MNEMONICS\t(target_flags & MASK_NEW_MNEMONICS)\n #define TARGET_NO_FP_IN_TOC\t(target_flags & MASK_NO_FP_IN_TOC)\n #define TARGET_NO_SUM_IN_TOC\t(target_flags & MASK_NO_SUM_IN_TOC)\n@@ -298,6 +228,7 @@ extern int target_flags;\n #define TARGET_STRING_SET\t(target_flags & MASK_STRING_SET)\n #define TARGET_NO_UPDATE\t(target_flags & MASK_NO_UPDATE)\n #define TARGET_NO_FUSED_MADD\t(target_flags & MASK_NO_FUSED_MADD)\n+#define TARGET_SCHED_PROLOG\t(target_flags & MASK_SCHED_PROLOG)\n \n #define TARGET_32BIT\t\t(! TARGET_64BIT)\n #define TARGET_HARD_FLOAT\t(! TARGET_SOFT_FLOAT)\n@@ -306,48 +237,16 @@ extern int target_flags;\n \n #ifdef IN_LIBGCC2\n /* For libgcc2 we make sure this is a compile time constant */\n-#undef TARGET_POWERPC64\n #ifdef __64BIT__\n #define TARGET_POWERPC64\t1\n #else\n #define TARGET_POWERPC64\t0\n #endif\n-#endif\n-\n-/* Pseudo target to indicate whether the object format is ELF\n-   (to get around not having conditional compilation in the md file)  */\n-#ifndef\tTARGET_ELF\n-#define\tTARGET_ELF\t\t0\n-#endif\n-\n-/* If this isn't V.4, don't support -mno-toc.  */\n-#ifndef TARGET_NO_TOC\n-#define TARGET_NO_TOC\t\t0\n-#define\tTARGET_TOC\t\t1\n-#endif\n-\n-/* Pseudo target to say whether this is Windows NT */\n-#ifndef\tTARGET_WINDOWS_NT\n-#define\tTARGET_WINDOWS_NT 0\n-#endif\n-\n-/* Pseudo target to say whether this is MAC */\n-#ifndef\tTARGET_MACOS\n-#define\tTARGET_MACOS 0\n-#endif\n-\n-/* Pseudo target to say whether this is AIX */\n-#ifndef TARGET_AIX\n-#if (TARGET_ELF || TARGET_WINDOWS_NT || TARGET_MACOS)\n-#define TARGET_AIX 0\n #else\n-#define TARGET_AIX 1\n-#endif\n+#define TARGET_POWERPC64\t(target_flags & MASK_POWERPC64)\n #endif\n \n-#ifndef TARGET_XL_CALL\n #define TARGET_XL_CALL 0\n-#endif\n \n /* Run-time compilation parameters selecting different hardware subsets.\n \n@@ -357,55 +256,95 @@ extern int target_flags;\n    where VALUE is the bits to set or minus the bits to clear.\n    An empty string NAME is used to identify the default VALUE.  */\n \n-/* This is meant to be redefined in the host dependent files */\n-#ifndef SUBTARGET_SWITCHES\n-#define SUBTARGET_SWITCHES\n-#endif\n-\n #define TARGET_SWITCHES\t\t\t\t\t\t\t\\\n- {{\"power\",\t\tMASK_POWER  | MASK_MULTIPLE | MASK_STRING},\t\\\n+ {{\"power\",\t\tMASK_POWER  | MASK_MULTIPLE | MASK_STRING,\t\\\n+\t\t\t\"Use POWER instruction set\"},\t\t\t\\\n   {\"power2\",\t\t(MASK_POWER | MASK_MULTIPLE | MASK_STRING\t\\\n-\t\t\t | MASK_POWER2)},\t\t\t\t\\\n-  {\"no-power2\",\t\t- MASK_POWER2},\t\t\t\t\t\\\n+\t\t\t | MASK_POWER2),\t\t\t\t\\\n+\t\t\t\"Use POWER2 instruction set\"},\t\t\t\\\n+  {\"no-power2\",\t\t- MASK_POWER2,\t\t\t\t\t\\\n+\t\t\t\"Do not use POWER2 instruction set\"},\t\t\\\n   {\"no-power\",\t\t- (MASK_POWER | MASK_POWER2 | MASK_MULTIPLE\t\\\n-\t\t\t   | MASK_STRING)},\t\t\t\t\\\n-  {\"powerpc\",\t\tMASK_POWERPC},\t\t\t\t\t\\\n+\t\t\t   | MASK_STRING),\t\t\t\t\\\n+\t\t\t\"Do not use POWER instruction set\"},\t\t\\\n+  {\"powerpc\",\t\tMASK_POWERPC,\t\t\t\t\t\\\n+\t\t\t\"Use PowerPC instruction set\"},\t\t\t\\\n   {\"no-powerpc\",\t- (MASK_POWERPC | MASK_PPC_GPOPT\t\t\\\n-\t\t\t   | MASK_PPC_GFXOPT | MASK_POWERPC64)},\t\\\n-  {\"powerpc-gpopt\",\tMASK_POWERPC | MASK_PPC_GPOPT},\t\t\t\\\n-  {\"no-powerpc-gpopt\",\t- MASK_PPC_GPOPT},\t\t\t\t\\\n-  {\"powerpc-gfxopt\",\tMASK_POWERPC | MASK_PPC_GFXOPT},\t\t\\\n-  {\"no-powerpc-gfxopt\",\t- MASK_PPC_GFXOPT},\t\t\t\t\\\n-  {\"powerpc64\",\t\tMASK_POWERPC64},\t\t\t\t\\\n-  {\"no-powerpc64\",\t- MASK_POWERPC64},\t\t\t\t\\\n-  {\"new-mnemonics\",\tMASK_NEW_MNEMONICS},\t\t\t\t\\\n-  {\"old-mnemonics\",\t-MASK_NEW_MNEMONICS},\t\t\t\t\\\n+\t\t\t   | MASK_PPC_GFXOPT | MASK_POWERPC64),\t\t\\\n+\t\t\t\"Do not use PowerPC instruction set\"},\t\t\\\n+  {\"powerpc-gpopt\",\tMASK_POWERPC | MASK_PPC_GPOPT,\t\t\t\\\n+\t\t\t\"Use PowerPC General Purpose group optional instructions\"},\\\n+  {\"no-powerpc-gpopt\",\t- MASK_PPC_GPOPT,\t\t\t\t\\\n+\t\t\t\"Don't use PowerPC General Purpose group optional instructions\"},\\\n+  {\"powerpc-gfxopt\",\tMASK_POWERPC | MASK_PPC_GFXOPT,\t\t\t\\\n+\t\t\t\"Use PowerPC Graphics group optional instructions\"},\\\n+  {\"no-powerpc-gfxopt\",\t- MASK_PPC_GFXOPT,\t\t\t\t\\\n+\t\t\t\"Don't use PowerPC Graphics group optional instructions\"},\\\n+  {\"powerpc64\",\t\tMASK_POWERPC64,\t\t\t\t\t\\\n+\t\t\t\"Use PowerPC-64 instruction set\"},\t\t\\\n+  {\"no-powerpc64\",\t- MASK_POWERPC64,\t\t\t\t\\\n+\t\t\t\"Don't use PowerPC-64 instruction set\"},\t\\\n+  {\"new-mnemonics\",\tMASK_NEW_MNEMONICS,\t\t\t\t\\\n+\t\t\t\"Use new mnemonics for PowerPC architecture\"},\t\\\n+  {\"old-mnemonics\",\t-MASK_NEW_MNEMONICS,\t\t\t\t\\\n+\t\t\t\"Use old mnemonics for PowerPC architecture\"},\t\\\n   {\"full-toc\",\t\t- (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC\t\\\n-\t\t\t   | MASK_MINIMAL_TOC)},\t\t\t\\\n-  {\"fp-in-toc\",\t\t- MASK_NO_FP_IN_TOC},\t\t\t\t\\\n-  {\"no-fp-in-toc\",\tMASK_NO_FP_IN_TOC},\t\t\t\t\\\n-  {\"sum-in-toc\",\t- MASK_NO_SUM_IN_TOC},\t\t\t\t\\\n-  {\"no-sum-in-toc\",\tMASK_NO_SUM_IN_TOC},\t\t\t\t\\\n-  {\"minimal-toc\",\tMASK_MINIMAL_TOC},\t\t\t\t\\\n-  {\"minimal-toc\",\t- (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC)},\t\\\n-  {\"no-minimal-toc\",\t- MASK_MINIMAL_TOC},\t\t\t\t\\\n-  {\"hard-float\",\t- MASK_SOFT_FLOAT},\t\t\t\t\\\n-  {\"soft-float\",\tMASK_SOFT_FLOAT},\t\t\t\t\\\n-  {\"multiple\",\t\tMASK_MULTIPLE | MASK_MULTIPLE_SET},\t\t\\\n-  {\"no-multiple\",\t- MASK_MULTIPLE},\t\t\t\t\\\n-  {\"no-multiple\",\tMASK_MULTIPLE_SET},\t\t\t\t\\\n-  {\"string\",\t\tMASK_STRING | MASK_STRING_SET},\t\t\t\\\n-  {\"no-string\",\t\t- MASK_STRING},\t\t\t\t\t\\\n-  {\"no-string\",\t\tMASK_STRING_SET},\t\t\t\t\\\n-  {\"update\",\t\t- MASK_NO_UPDATE},\t\t\t\t\\\n-  {\"no-update\",\t\tMASK_NO_UPDATE},\t\t\t\t\\\n-  {\"fused-madd\",\t- MASK_NO_FUSED_MADD},\t\t\t\t\\\n-  {\"no-fused-madd\",\tMASK_NO_FUSED_MADD},\t\t\t\t\\\n+\t\t\t   | MASK_MINIMAL_TOC),\t\t\t\t\\\n+\t\t\t\"Put everything in the regular TOC\"},\t\t\\\n+  {\"fp-in-toc\",\t\t- MASK_NO_FP_IN_TOC,\t\t\t\t\\\n+\t\t\t\"Place floating point constants in TOC\"},\t\\\n+  {\"no-fp-in-toc\",\tMASK_NO_FP_IN_TOC,\t\t\t\t\\\n+\t\t\t\"Don't place floating point constants in TOC\"},\t\\\n+  {\"sum-in-toc\",\t- MASK_NO_SUM_IN_TOC,\t\t\t\t\\\n+\t\t\t\"Place symbol+offset constants in TOC\"},\t\\\n+  {\"no-sum-in-toc\",\tMASK_NO_SUM_IN_TOC,\t\t\t\t\\\n+\t\t\t\"Don't place symbol+offset constants in TOC\"},\t\\\n+  {\"minimal-toc\",\tMASK_MINIMAL_TOC,\t\t\t\t\\\n+\t\t\t\"Use only one TOC entry per procedure\"},\t\\\n+  {\"minimal-toc\",\t- (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC),\t\\\n+\t\t\t\"\"},\t\t\t\t\\\n+  {\"no-minimal-toc\",\t- MASK_MINIMAL_TOC,\t\t\t\t\\\n+\t\t\t\"Place variable addresses in the regular TOC\"},\t\\\n+  {\"hard-float\",\t- MASK_SOFT_FLOAT,\t\t\t\t\\\n+\t\t\t\"Use hardware fp\"},\t\t\t\t\\\n+  {\"soft-float\",\tMASK_SOFT_FLOAT,\t\t\t\t\\\n+\t\t\t\"Do not use hardware fp\"},\t\t\t\\\n+  {\"multiple\",\t\tMASK_MULTIPLE | MASK_MULTIPLE_SET,\t\t\\\n+\t\t\t\"Generate load/store multiple instructions\"},\t\\\n+  {\"no-multiple\",\t- MASK_MULTIPLE,\t\t\t\t\\\n+\t\t\t\"Do not generate load/store multiple instructions\"},\\\n+  {\"no-multiple\",\tMASK_MULTIPLE_SET,\t\t\t\t\\\n+\t\t\t\"\"},\\\n+  {\"string\",\t\tMASK_STRING | MASK_STRING_SET,\t\t\t\\\n+\t\t\t\"Generate string instructions for block moves\"},\\\n+  {\"no-string\",\t\t- MASK_STRING,\t\t\t\t\t\\\n+\t\t\t\"Do not generate string instructions for block moves\"},\\\n+  {\"no-string\",\t\tMASK_STRING_SET,\t\t\t\t\\\n+\t\t\t\"\"},\\\n+  {\"update\",\t\t- MASK_NO_UPDATE,\t\t\t\t\\\n+\t\t\t\"Generate load/store with update instructions\"},\\\n+  {\"no-update\",\t\tMASK_NO_UPDATE,\t\t\t\t\t\\\n+\t\t\t\"Do not generate load/store with update instructions\"},\\\n+  {\"fused-madd\",\t- MASK_NO_FUSED_MADD,\t\t\t\t\\\n+\t\t\t\"Generate fused multiply/add instructions\"},\t\\\n+  {\"no-fused-madd\",\tMASK_NO_FUSED_MADD,\t\t\t\t\\\n+\t\t\t\"Don't generate fused multiply/add instructions\"},\\\n+  {\"sched-prolog\",      MASK_SCHED_PROLOG,                              \\\n+\t\t\t\"\"},\t\t\t\t\t\t\\\n+  {\"no-sched-prolog\",   -MASK_SCHED_PROLOG,                             \\\n+\t\t\t\"Don't schedule the start and end of the procedure\"},\\\n+  {\"sched-epilog\",      MASK_SCHED_PROLOG,                              \\\n+\t\t\t\"\"},\t\t\t\t\t\t\\\n+  {\"no-sched-epilog\",   -MASK_SCHED_PROLOG,                             \\\n+\t\t\t\"\"},\t\t\t\t\t\t\\\n   SUBTARGET_SWITCHES\t\t\t\t\t\t\t\\\n-  {\"\",\t\t\tTARGET_DEFAULT | SUBTARGET_DEFAULT}}\n+  {\"\",\t\t\tTARGET_DEFAULT | MASK_SCHED_PROLOG,\t\t\\\n+\t\t\t\"\"}}\n \n #define TARGET_DEFAULT (MASK_POWER | MASK_MULTIPLE | MASK_STRING)\n-#define SUBTARGET_DEFAULT 0\n+\n+/* This is meant to be redefined in the host dependent files */\n+#define SUBTARGET_SWITCHES\n \n /* Processor type.  Order must match cpu attribute in MD file.  */\n enum processor_type\n@@ -441,7 +380,7 @@ extern enum processor_type rs6000_cpu;\n \n /* Specify the dialect of assembler to use.  New mnemonics is dialect one\n    and the old mnemonics are dialect zero.  */\n-#define ASSEMBLER_DIALECT TARGET_NEW_MNEMONICS ? 1 : 0\n+#define ASSEMBLER_DIALECT (TARGET_NEW_MNEMONICS ? 1 : 0)\n \n /* This macro is similar to `TARGET_SWITCHES' but defines names of\n    command options that have values.  Its definition is an\n@@ -461,17 +400,14 @@ extern enum processor_type rs6000_cpu;\n \t#define TARGET_OPTIONS { { \"short-data-\", &m88k_short_data } }  */\n \n /* This is meant to be overridden in target specific files.  */\n-#ifndef SUBTARGET_OPTIONS\n #define\tSUBTARGET_OPTIONS\n-#endif\n \n-#define TARGET_OPTIONS\t\t\t\t\\\n-{\t\t\t\t\t\t\\\n-   {\"cpu=\",  &rs6000_select[1].string},\t\t\\\n-   {\"tune=\", &rs6000_select[2].string},\t\t\\\n-   {\"debug-\", &rs6000_debug_name},\t\t\\\n-   {\"debug=\", &rs6000_debug_name},\t\t\\\n-   SUBTARGET_OPTIONS\t\t\t\t\\\n+#define TARGET_OPTIONS\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+   {\"cpu=\",  &rs6000_select[1].string, \"Use features of and schedule code for given CPU\" },\\\n+   {\"tune=\", &rs6000_select[2].string, \"Schedule code for given CPU\" },\t\\\n+   {\"debug=\", &rs6000_debug_name, \"Enable debug output\" },\t\t\\\n+   SUBTARGET_OPTIONS\t\t\t\t\t\t\t\\\n }\n \n /* rs6000_select[0] is reserved for the default cpu defined via --with-cpu */\n@@ -685,9 +621,9 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n    many times greater than aligned accesses, for example if they are\n    emulated in a trap handler.  */\n #define SLOW_UNALIGNED_ACCESS(MODE, ALIGN)\t\t\t\\\n-   ((((MODE) == SFmode || (MODE) == DFmode || (MODE) == DImode)\t\\\n-     && (ALIGN) < 4) ? 1 : 0)\n-\n+   ((STRICT_ALIGNMENT\t\t\t\t\t\t\\\n+     || (((MODE) == SFmode || (MODE) == DFmode || (MODE) == DImode) \\\n+         && (ALIGN) < 4)) ? 1 : 0)\n \f\n /* Standard register usage.  */\n \n@@ -722,10 +658,6 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n \n    On System V implementations, r13 is fixed and not available for use.  */\n \n-#ifndef FIXED_R13\n-#define FIXED_R13 0\n-#endif\n-\n #define FIXED_REGISTERS  \\\n   {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, FIXED_R13, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -747,6 +679,15 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1}\n \n+#define MQ_REGNO     64\n+#define CR0_REGNO    68\n+#define CR1_REGNO    69\n+#define CR2_REGNO    70\n+#define CR3_REGNO    71\n+#define CR4_REGNO    72\n+#define MAX_CR_REGNO 75\n+#define XER_REGNO    76\n+\n /* List the order in which to allocate registers.  Each register must be\n    listed once, even those in FIXED_REGISTERS.\n \n@@ -768,7 +709,7 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n \tmq\t\t(not saved; best to use it if we can)\n \tctr\t\t(not saved; when we have the choice ctr is better)\n \tlr\t\t(saved)\n-        cr5, r1, r2, ap, fpmem (fixed)  */\n+        cr5, r1, r2, ap, xer (fixed)  */\n \n #define REG_ALLOC_ORDER\t\t\t\t\t\\\n   {32, \t\t\t\t\t\t\t\\\n@@ -791,18 +732,15 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n /* True if register is a condition register.  */\n #define CR_REGNO_P(N) ((N) >= 68 && (N) <= 75)\n \n-/* True if register is condition register 0.  */\n-#define CR0_REGNO_P(N) ((N) == 68)\n-\n /* True if register is a condition register, but not cr0.  */\n #define CR_REGNO_NOT_CR0_P(N) ((N) >= 69 && (N) <= 75)\n \n /* True if register is an integer register.  */\n-#define INT_REGNO_P(N) ((N) <= 31 || (N) == 67)\n+#define INT_REGNO_P(N) ((N) <= 31 || (N) == ARG_POINTER_REGNUM)\n \n /* True if register is the temporary memory location used for int/float\n    conversion.  */\n-#define FPMEM_REGNO_P(N) ((N) == FPMEM_REGNUM)\n+#define XER_REGNO_P(N) ((N) == XER_REGNO)\n \n /* Return number of consecutive hard regs needed starting at reg REGNO\n    to hold something of mode MODE.\n@@ -813,7 +751,7 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n    PowerPC64 GPRs and FPRs point register holds 64 bits worth.  */\n \n #define HARD_REGNO_NREGS(REGNO, MODE)\t\t\t\t\t\\\n-  (FP_REGNO_P (REGNO) || FPMEM_REGNO_P (REGNO)\t\t\t\t\\\n+  (FP_REGNO_P (REGNO)\t\t\t\t\t\t\t\\\n    ? ((GET_MODE_SIZE (MODE) + UNITS_PER_FP_WORD - 1) / UNITS_PER_FP_WORD) \\\n    : ((GET_MODE_SIZE (MODE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD))\n \n@@ -829,7 +767,7 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n     || (GET_MODE_CLASS (MODE) == MODE_INT\t\t\t\t\\\n \t&& GET_MODE_SIZE (MODE) == UNITS_PER_FP_WORD))\t\t\t\\\n    : CR_REGNO_P (REGNO) ? GET_MODE_CLASS (MODE) == MODE_CC\t\t\\\n-   : FPMEM_REGNO_P (REGNO) ? ((MODE) == DImode || (MODE) == DFmode)\t\\\n+   : XER_REGNO_P (REGNO) ? (MODE) == PSImode\t\t\t\t\\\n    : ! INT_REGNO_P (REGNO) ? (GET_MODE_CLASS (MODE) == MODE_INT\t\t\\\n \t\t\t      && GET_MODE_SIZE (MODE) <= UNITS_PER_WORD) \\\n    : 1)\n@@ -949,11 +887,11 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n /* Place to put static chain when calling a function that requires it.  */\n #define STATIC_CHAIN_REGNUM 11\n \n-/* count register number for special purposes */\n-#define COUNT_REGISTER_REGNUM 66\n+/* Link register number. */\n+#define LINK_REGISTER_REGNUM 65\n \n-/* Special register that represents memory, used for float/int conversions.  */\n-#define FPMEM_REGNUM 76\n+/* Count register number. */\n+#define COUNT_REGISTER_REGNUM 66\n \n /* Place that structure value return address is placed.\n \n@@ -1013,8 +951,7 @@ enum reg_class\n   CR0_REGS,\n   CR_REGS,\n   NON_FLOAT_REGS,\n-  FPMEM_REGS,\n-  FLOAT_OR_FPMEM_REGS,\n+  XER_REGS,\n   ALL_REGS,\n   LIM_REG_CLASSES\n };\n@@ -1039,8 +976,7 @@ enum reg_class\n   \"CR0_REGS\",\t\t\t\t\t\t\t\t\\\n   \"CR_REGS\",\t\t\t\t\t\t\t\t\\\n   \"NON_FLOAT_REGS\",\t\t\t\t\t\t\t\\\n-  \"FPMEM_REGS\",\t\t\t\t\t\t\t\t\\\n-  \"FLOAT_OR_FPMEM_REGS\",\t\t\t\t\t\t\\\n+  \"XER_REGS\",\t\t\t\t\t\t\t\t\\\n   \"ALL_REGS\"\t\t\t\t\t\t\t\t\\\n }\n \n@@ -1064,8 +1000,7 @@ enum reg_class\n   { 0x00000000, 0x00000000, 0x00000010 },\t/* CR0_REGS */\t\t\\\n   { 0x00000000, 0x00000000, 0x00000ff0 },\t/* CR_REGS */\t\t\\\n   { 0xffffffff, 0x00000000, 0x0000ffff },\t/* NON_FLOAT_REGS */\t\\\n-  { 0x00000000, 0x00000000, 0x00010000 },\t/* FPMEM_REGS */\t\\\n-  { 0x00000000, 0xffffffff, 0x00010000 },\t/* FLOAT_OR_FPMEM_REGS */ \\\n+  { 0x00000000, 0x00000000, 0x00010000 },\t/* XER_REGS */\t\t\\\n   { 0xffffffff, 0xffffffff, 0x0001ffff }\t/* ALL_REGS */\t\t\\\n }\n \n@@ -1084,7 +1019,7 @@ enum reg_class\n   : (REGNO) == 65 ? LINK_REGS\t\t\\\n   : (REGNO) == 66 ? CTR_REGS\t\t\\\n   : (REGNO) == 67 ? BASE_REGS\t\t\\\n-  : (REGNO) == 76 ? FPMEM_REGS\t\t\\\n+  : (REGNO) == 76 ? XER_REGS\t\t\\\n   : NO_REGS)\n \n /* The class value for index registers, and the one for base regs.  */\n@@ -1102,7 +1037,7 @@ enum reg_class\n    : (C) == 'l' ? LINK_REGS\t\\\n    : (C) == 'x' ? CR0_REGS\t\\\n    : (C) == 'y' ? CR_REGS\t\\\n-   : (C) == 'z' ? FPMEM_REGS\t\\\n+   : (C) == 'z' ? XER_REGS\t\\\n    : NO_REGS)\n \n /* The letters I, J, K, L, M, N, and P in a register constraint string\n@@ -1122,7 +1057,7 @@ enum reg_class\n \n #define CONST_OK_FOR_LETTER_P(VALUE, C)\t\t\t\t\t\\\n    ( (C) == 'I' ? (unsigned HOST_WIDE_INT) ((VALUE) + 0x8000) < 0x10000\t\\\n-   : (C) == 'J' ? ((VALUE) & (~ (HOST_WIDE_INT) 0xffff0000)) == 0\t\\\n+   : (C) == 'J' ? ((VALUE) & (~ (HOST_WIDE_INT) 0xffff0000u)) == 0\t\\\n    : (C) == 'K' ? ((VALUE) & (~ (HOST_WIDE_INT) 0xffff)) == 0\t\t\\\n    : (C) == 'L' ? (((VALUE) & 0xffff) == 0\t\t\t\t\\\n \t\t   && ((VALUE) >> 31 == -1 || (VALUE) >> 31 == 0))\t\\\n@@ -1195,15 +1130,14 @@ enum reg_class\n    On RS/6000, this is the size of MODE in words,\n    except in the FP regs, where a single reg is enough for two words.  */\n #define CLASS_MAX_NREGS(CLASS, MODE)\t\t\t\t\t\\\n- (((CLASS) == FLOAT_REGS || (CLASS) == FPMEM_REGS\t\t\t\\\n-   || (CLASS) == FLOAT_OR_FPMEM_REGS)\t\t\t\t\t\\\n+ (((CLASS) == FLOAT_REGS) \t\t\t\t\t\t\\\n   ? ((GET_MODE_SIZE (MODE) + UNITS_PER_FP_WORD - 1) / UNITS_PER_FP_WORD) \\\n   : ((GET_MODE_SIZE (MODE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD))\n \n /* If defined, gives a class of registers that cannot be used as the\n    operand of a SUBREG that changes the size of the object.  */\n \n-#define CLASS_CANNOT_CHANGE_SIZE\tFLOAT_OR_FPMEM_REGS\n+#define CLASS_CANNOT_CHANGE_SIZE      FLOAT_REGS\n \f\n /* Stack layout; function entry, exit and calling.  */\n \n@@ -1213,19 +1147,11 @@ enum rs6000_abi {\n   ABI_AIX,\t\t\t/* IBM's AIX */\n   ABI_AIX_NODESC,\t\t/* AIX calling sequence minus function descriptors */\n   ABI_V4,\t\t\t/* System V.4/eabi */\n-  ABI_NT,\t\t\t/* Windows/NT */\n   ABI_SOLARIS\t\t\t/* Solaris */\n };\n \n extern enum rs6000_abi rs6000_current_abi;\t/* available for use by subtarget */\n \n-/* Default ABI to compile code for */\n-#ifndef DEFAULT_ABI\n-#define DEFAULT_ABI ABI_AIX\n-/* The prefix to add to user-visible assembler symbols. */\n-#define USER_LABEL_PREFIX \".\"\n-#endif\n-\n /* Structure used to define the rs6000 stack */\n typedef struct rs6000_stack {\n   int first_gp_reg_save;\t/* first callee saved GP register used */\n@@ -1235,30 +1161,23 @@ typedef struct rs6000_stack {\n   int toc_save_p;\t\t/* true if the TOC needs to be saved */\n   int push_p;\t\t\t/* true if we need to allocate stack space */\n   int calls_p;\t\t\t/* true if the function makes any calls */\n-  int main_p;\t\t\t/* true if this is main */\n-  int main_save_p;\t\t/* true if this is main and we need to save args */\n-  int fpmem_p;\t\t\t/* true if float/int conversion temp needed */\n   enum rs6000_abi abi;\t\t/* which ABI to use */\n   int gp_save_offset;\t\t/* offset to save GP regs from initial SP */\n   int fp_save_offset;\t\t/* offset to save FP regs from initial SP */\n   int lr_save_offset;\t\t/* offset to save LR from initial SP */\n   int cr_save_offset;\t\t/* offset to save CR from initial SP */\n   int toc_save_offset;\t\t/* offset to save the TOC pointer */\n   int varargs_save_offset;\t/* offset to save the varargs registers */\n-  int main_save_offset;\t\t/* offset to save main's args */\n-  int fpmem_offset;\t\t/* offset for float/int conversion temp */\n   int reg_size;\t\t\t/* register size (4 or 8) */\n   int varargs_size;\t\t/* size to hold V.4 args passed in regs */\n   int vars_size;\t\t/* variable save area size */\n   int parm_size;\t\t/* outgoing parameter size */\n-  int main_size;\t\t/* size to hold saving main's args */\n   int save_size;\t\t/* save area size */\n   int fixed_size;\t\t/* fixed size of stack frame */\n   int gp_size;\t\t\t/* size of saved GP registers */\n   int fp_size;\t\t\t/* size of saved FP registers */\n   int cr_size;\t\t\t/* size to hold CR if not in save_size */\n   int lr_size;\t\t\t/* size to hold LR if not in save_size */\n-  int fpmem_size;\t\t/* size to hold float/int conversion */\n   int toc_size;\t\t\t/* size to hold TOC if not in save_size */\n   int total_size;\t\t/* total bytes allocated for stack */\n } rs6000_stack_t;\n@@ -1277,21 +1196,21 @@ typedef struct rs6000_stack {\n /* #define FRAME_GROWS_DOWNWARD */\n \n /* Size of the outgoing register save area */\n-#define RS6000_REG_SAVE (TARGET_32BIT ? 32 : 64)\n+#define RS6000_REG_SAVE ((DEFAULT_ABI == ABI_AIX\t\t\t\\\n+\t\t\t  || DEFAULT_ABI == ABI_AIX_NODESC)\t\t\\\n+\t\t\t ? (TARGET_64BIT ? 64 : 32)\t\t\t\\\n+\t\t\t : 0)\n \n /* Size of the fixed area on the stack */\n-#define RS6000_SAVE_AREA (TARGET_32BIT ? 24 : 48)\n+#define RS6000_SAVE_AREA \\\n+  (((DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_AIX_NODESC) ? 24 : 8)\t\\\n+   << (TARGET_64BIT ? 1 : 0))\n \n /* MEM representing address to save the TOC register */\n #define RS6000_SAVE_TOC gen_rtx_MEM (Pmode, \\\n \t\t\t\t     plus_constant (stack_pointer_rtx, \\\n \t\t\t\t\t\t    (TARGET_32BIT ? 20 : 40)))\n \n-/* Offset & size for fpmem stack locations used for converting between\n-   float and integral types.  */\n-extern int rs6000_fpmem_offset;\n-extern int rs6000_fpmem_size;\n-\n /* Size of the V.4 varargs area if needed */\n #define RS6000_VARARGS_AREA 0\n \n@@ -1420,7 +1339,9 @@ extern int rs6000_sysv_varargs_p;\n #define FP_ARG_MIN_REG 33\n #define\tFP_ARG_AIX_MAX_REG 45\n #define\tFP_ARG_V4_MAX_REG  40\n-#define FP_ARG_MAX_REG FP_ARG_AIX_MAX_REG\n+#define\tFP_ARG_MAX_REG ((DEFAULT_ABI == ABI_AIX\t\t\t\t\\\n+\t\t\t || DEFAULT_ABI == ABI_AIX_NODESC)\t\t\\\n+\t\t\t? FP_ARG_AIX_MAX_REG : FP_ARG_V4_MAX_REG)\n #define FP_ARG_NUM_REG (FP_ARG_MAX_REG - FP_ARG_MIN_REG + 1)\n \n /* Return registers */\n@@ -1429,14 +1350,11 @@ extern int rs6000_sysv_varargs_p;\n \n /* Flags for the call/call_value rtl operations set up by function_arg */\n #define CALL_NORMAL\t\t0x00000000\t/* no special processing */\n-#define CALL_NT_DLLIMPORT\t0x00000001\t/* NT, this is a DLL import call */\n+/* Bits in 0x00000001 are unused.  */\n #define CALL_V4_CLEAR_FP_ARGS\t0x00000002\t/* V.4, no FP args passed */\n #define CALL_V4_SET_FP_ARGS\t0x00000004\t/* V.4, FP args were passed */\n #define CALL_LONG\t\t0x00000008\t/* always call indirect */\n \n-/* Define cutoff for using external functions to save floating point */\n-#define FP_SAVE_INLINE(FIRST_REG) ((FIRST_REG) == 62 || (FIRST_REG) == 63)\n-\n /* 1 if N is a possible register number for a function value\n    as seen by the caller.\n \n@@ -1561,8 +1479,7 @@ typedef struct rs6000_args\n    the argument, `downward' to pad below, or `none' to inhibit\n    padding.  */\n \n-#define FUNCTION_ARG_PADDING(MODE, TYPE) \\\n-  (enum direction) function_arg_padding (MODE, TYPE)\n+#define FUNCTION_ARG_PADDING(MODE, TYPE) function_arg_padding (MODE, TYPE)\n \n /* If defined, a C expression that gives the alignment boundary, in bits,\n    of an argument with the specified mode and type.  If it is not defined,\n@@ -1635,40 +1552,6 @@ typedef struct rs6000_args\n    before returning.  */\n \n #define FUNCTION_EPILOGUE(FILE, SIZE) output_epilog (FILE, SIZE)\n-\n-/* A C compound statement that outputs the assembler code for a thunk function,\n-   used to implement C++ virtual function calls with multiple inheritance.  The\n-   thunk acts as a wrapper around a virtual function, adjusting the implicit\n-   object parameter before handing control off to the real function.\n-\n-   First, emit code to add the integer DELTA to the location that contains the\n-   incoming first argument.  Assume that this argument contains a pointer, and\n-   is the one used to pass the `this' pointer in C++.  This is the incoming\n-   argument *before* the function prologue, e.g. `%o0' on a sparc.  The\n-   addition must preserve the values of all other incoming arguments.\n-\n-   After the addition, emit code to jump to FUNCTION, which is a\n-   `FUNCTION_DECL'.  This is a direct pure jump, not a call, and does not touch\n-   the return address.  Hence returning from FUNCTION will return to whoever\n-   called the current `thunk'.\n-\n-   The effect must be as if FUNCTION had been called directly with the adjusted\n-   first argument.  This macro is responsible for emitting all of the code for\n-   a thunk function; `FUNCTION_PROLOGUE' and `FUNCTION_EPILOGUE' are not\n-   invoked.\n-\n-   The THUNK_FNDECL is redundant.  (DELTA and FUNCTION have already been\n-   extracted from it.)  It might possibly be useful on some targets, but\n-   probably not.\n-\n-   If you do not define this macro, the target-independent code in the C++\n-   frontend will generate a less efficient heavyweight thunk that calls\n-   FUNCTION instead of jumping to it.  The generic approach does not support\n-   varargs.  */\n-#if TARGET_ELF\n-#define ASM_OUTPUT_MI_THUNK(FILE, THUNK_FNDECL, DELTA, FUNCTION) \\\n-  output_mi_thunk (FILE, THUNK_FNDECL, DELTA, FUNCTION)\n-#endif\n \f\n /* TRAMPOLINE_TEMPLATE deleted */\n \n@@ -1730,15 +1613,14 @@ typedef struct rs6000_args\n    || DEFAULT_ABI == ABI_AIX_NODESC)\t? 8 :\t\t\t\t\\\n   (DEFAULT_ABI == ABI_V4\t\t\t\t\t\t\\\n    || DEFAULT_ABI == ABI_SOLARIS)\t? (TARGET_32BIT ? 4 : 8) :\t\\\n-  (DEFAULT_ABI == ABI_NT)\t\t? -4 :\t\t\t\t\\\n   (fatal (\"RETURN_ADDRESS_OFFSET not supported\"), 0))\n \n /* The current return address is in link register (65).  The return address\n    of anything farther back is accessed normally at an offset of 8 from the\n    frame pointer.  */\n #define RETURN_ADDR_RTX(count, frame)\t\t\t\\\n   ((count == -1)\t\t\t\t\t\\\n-   ? gen_rtx_REG (Pmode, 65)\t\t\t\t\\\n+   ? gen_rtx_REG (Pmode, LINK_REGISTER_REGNUM)\t\t\\\n    : gen_rtx_MEM (Pmode,\t\t\t\t\\\n \t\t  memory_address\t\t\t\\\n \t\t  (Pmode, \t\t\t\t\\\n@@ -1906,18 +1788,16 @@ typedef struct rs6000_args\n    adjacent memory cells are accessed by adding word-sized offsets\n    during assembly output.  */\n \n-#define LEGITIMATE_CONSTANT_POOL_BASE_P(X)\t\t\t\t\\\n-  (TARGET_TOC && GET_CODE (X) == SYMBOL_REF\t\t\t\t\\\n-   && CONSTANT_POOL_ADDRESS_P (X)\t\t\t\t\t\\\n-   && ASM_OUTPUT_SPECIAL_POOL_ENTRY_P (get_pool_constant (X)))\n+#define CONSTANT_POOL_EXPR_P(X) (constant_pool_expr_p (X))\n+\n+#define TOC_RELATIVE_EXPR_P(X) (toc_relative_expr_p (X))\n \n-/* AIX64 guaranteed to have 64 bit TOC alignment.  */\n #define LEGITIMATE_CONSTANT_POOL_ADDRESS_P(X)\t\t\t\t\\\n-  (LEGITIMATE_CONSTANT_POOL_BASE_P (X)\t\t\t\t\t\\\n-   || (TARGET_TOC\t\t\t\t\t\t\t\\\n-       && GET_CODE (X) == CONST && GET_CODE (XEXP (X, 0)) == PLUS\t\\\n-       && GET_CODE (XEXP (XEXP (X, 0), 1)) == CONST_INT\t\t\t\\\n-       && LEGITIMATE_CONSTANT_POOL_BASE_P (XEXP (XEXP (X, 0), 0))))\n+  (TARGET_TOC\t\t\t\t\t\t\t\t\\\n+  && GET_CODE (X) == PLUS\t\t\t\t\t\t\\\n+  && GET_CODE (XEXP (X, 0)) == REG\t\t\t\t\t\\\n+  && (TARGET_MINIMAL_TOC || REGNO (XEXP (X, 0)) == TOC_REGISTER)\t\\\n+  && CONSTANT_POOL_EXPR_P (XEXP (X, 1)))\n \n #define LEGITIMATE_SMALL_DATA_P(MODE, X)\t\t\t\t\\\n   ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\t\t\\\n@@ -2012,43 +1892,13 @@ typedef struct rs6000_args\n    Then check for the sum of a register and something not constant, try to\n    load the other things into a register and return the sum.  */\n \n-#define LEGITIMIZE_ADDRESS(X,OLDX,MODE,WIN)\t\t\t\t\\\n-{ if (GET_CODE (X) == PLUS && GET_CODE (XEXP (X, 0)) == REG\t\t\\\n-    && GET_CODE (XEXP (X, 1)) == CONST_INT\t\t\t\t\\\n-    && (unsigned HOST_WIDE_INT) (INTVAL (XEXP (X, 1)) + 0x8000) >= 0x10000) \\\n-    { HOST_WIDE_INT high_int, low_int;\t\t\t\t\t\\\n-      rtx sum;\t\t\t\t\t\t\t\t\\\n-      high_int = INTVAL (XEXP (X, 1)) & (~ (HOST_WIDE_INT) 0xffff);\t\\\n-      low_int = INTVAL (XEXP (X, 1)) & 0xffff;\t\t\t\t\\\n-      if (low_int & 0x8000)\t\t\t\t\t\t\\\n-\thigh_int += 0x10000, low_int |= ((HOST_WIDE_INT) -1) << 16;\t\\\n-      sum = force_operand (gen_rtx_PLUS (Pmode, XEXP (X, 0),\t\t\\\n-\t\t\t\t\t GEN_INT (high_int)), 0);\t\\\n-      (X) = gen_rtx_PLUS (Pmode, sum, GEN_INT (low_int));\t\t\\\n-      goto WIN;\t\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (GET_CODE (X) == PLUS && GET_CODE (XEXP (X, 0)) == REG\t\\\n-\t   && GET_CODE (XEXP (X, 1)) != CONST_INT\t\t\t\\\n-\t   && (TARGET_HARD_FLOAT || TARGET_POWERPC64 || (MODE) != DFmode) \\\n-\t   && (TARGET_POWERPC64 || (MODE) != DImode)\t\t\t\\\n-\t   && (MODE) != TImode)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      (X) = gen_rtx_PLUS (Pmode, XEXP (X, 0),\t\t\t\t\\\n-\t\t\t  force_reg (Pmode, force_operand (XEXP (X, 1), 0))); \\\n-      goto WIN;\t\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TARGET_ELF && TARGET_32BIT && TARGET_NO_TOC\t\t\t\\\n-\t   && !flag_pic\t\t\t\t\t\t\t\\\n-\t   && GET_CODE (X) != CONST_INT\t\t\t\t\t\\\n-\t   && GET_CODE (X) != CONST_DOUBLE && CONSTANT_P (X)\t\t\\\n-\t   && (TARGET_HARD_FLOAT || (MODE) != DFmode)\t\t\t\\\n-\t   && (MODE) != DImode && (MODE) != TImode)\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      rtx reg = gen_reg_rtx (Pmode);\t\t\t\t\t\\\n-      emit_insn (gen_elf_high (reg, (X)));\t\t\t\t\\\n-      (X) = gen_rtx_LO_SUM (Pmode, reg, (X));\t\t\t\t\\\n-      goto WIN;\t\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n+#define LEGITIMIZE_ADDRESS(X,OLDX,MODE,WIN)\t\t\t\\\n+{  rtx result = rs6000_legitimize_address (X, OLDX, MODE);\t\\\n+   if (result != NULL_RTX)\t\t\t\t\t\\\n+     {\t\t\t\t\t\t\t\t\\\n+       (X) = result;\t\t\t\t\t\t\\\n+       goto WIN;\t\t\t\t\t\t\\\n+     }\t\t\t\t\t\t\t\t\\\n }\n \n /* Try a machine-dependent way of reloading an illegitimate address\n@@ -2082,7 +1932,7 @@ do {                                                                    \\\n       HOST_WIDE_INT val = INTVAL (XEXP (X, 1));                         \\\n       HOST_WIDE_INT low = ((val & 0xffff) ^ 0x8000) - 0x8000;           \\\n       HOST_WIDE_INT high                                                \\\n-        = (((val - low) & 0xffffffff) ^ 0x80000000) - 0x80000000;       \\\n+        = (((val - low) & 0xffffffffu) ^ 0x80000000u) - 0x80000000u;       \\\n                                                                         \\\n       /* Check for 32-bit overflow.  */                                 \\\n       if (high + low != val)                                            \\\n@@ -2101,6 +1951,13 @@ do {                                                                    \\\n                    OPNUM, TYPE);                                        \\\n       goto WIN;                                                         \\\n     }                                                                   \\\n+  else if (TARGET_TOC \t\t\t\t\t\t\t\\\n+\t   && CONSTANT_POOL_EXPR_P (X)\t\t\t\t\t\\\n+\t   && ASM_OUTPUT_SPECIAL_POOL_ENTRY_P (get_pool_constant (X)))\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      (X) = create_TOC_reference (X);\t\t\t\t\t\\\n+      goto WIN;\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n /* Go to LABEL if ADDR (a legitimate address expression)\n@@ -2136,6 +1993,8 @@ do {                                                                    \\\n \n #define PIC_OFFSET_TABLE_REGNUM 30\n \n+#define TOC_REGISTER (TARGET_MINIMAL_TOC ? 30 : 2)\n+\n /* Define this macro if the register defined by\n    `PIC_OFFSET_TABLE_REGNUM' is clobbered by calls.  Do not define\n    this macro if `PPIC_OFFSET_TABLE_REGNUM' is not defined. */\n@@ -2172,12 +2031,9 @@ do {                                                                    \\\n /* In rare cases, correct code generation requires extra machine\n    dependent processing between the second jump optimization pass and\n    delayed branch scheduling.  On those machines, define this macro\n-   as a C statement to act on the code starting at INSN.\n+   as a C statement to act on the code starting at INSN.  */\n \n-   On the RS/6000, we use it to make sure the GOT_TOC register marker\n-   that FINALIZE_PIC is supposed to remove actually got removed.  */\n-\n-#define MACHINE_DEPENDENT_REORG(INSN) rs6000_reorg (INSN)\n+/* #define MACHINE_DEPENDENT_REORG(INSN) */\n \n \f\n /* Define this if some processing needs to be done immediately before\n@@ -2232,38 +2088,6 @@ do {                                                                    \\\n /* Define if loading short immediate values into registers sign extends.  */\n #define SHORT_IMMEDIATES_SIGN_EXTEND\n \f\n-/* The RS/6000 uses the XCOFF format.  */\n-\n-#define XCOFF_DEBUGGING_INFO\n-\n-/* Define if the object format being used is COFF or a superset.  */\n-#define OBJECT_FORMAT_COFF\n-\n-/* Define the magic numbers that we recognize as COFF.\n-\n-   AIX 4.3 adds U803XTOCMAGIC (0757) for 64-bit objects, but collect2.c\n-   does not include files in the correct order to conditionally define\n-   the symbolic name in this macro. \n-\n-   The AIX linker accepts import/export files as object files,\n-   so accept \"#!\" (0x2321) magic number.  */\n-#define MY_ISCOFF(magic) \\\n-  ((magic) == U802WRMAGIC || (magic) == U802ROMAGIC \\\n-   || (magic) == U802TOCMAGIC || (magic) == 0757 || (magic) == 0x2321)\n-\n-/* This is the only version of nm that collect2 can work with.  */\n-#define REAL_NM_FILE_NAME \"/usr/ucb/nm\"\n-\n-/* We don't have GAS for the RS/6000 yet, so don't write out special\n-   .stabs in cc1plus.  */\n-\n-#define FASCIST_ASSEMBLER\n-\n-/* AIX does not have any init/fini or ctor/dtor sections, so create\n-   static constructors and destructors as normal functions.  */\n-/* #define ASM_OUTPUT_CONSTRUCTOR(file, name) */\n-/* #define ASM_OUTPUT_DESTRUCTOR(file, name) */\n-\n /* Value is 1 if truncating an integer of INPREC bits to OUTPREC bits\n    is done just by pretending it is already truncated.  */\n #define TRULY_NOOP_TRUNCATION(OUTPREC, INPREC) 1\n@@ -2467,21 +2291,6 @@ extern int rs6000_trunc_used;\n #define RS6000_ITRUNC \"__itrunc\"\n #define RS6000_UITRUNC \"__uitrunc\"\n \n-/* Prefix and suffix to use to saving floating point */\n-#ifndef SAVE_FP_PREFIX\n-#define\tSAVE_FP_PREFIX \"._savef\"\n-#define SAVE_FP_SUFFIX \"\"\n-#endif\n-\n-/* Prefix and suffix to use to restoring floating point */\n-#ifndef RESTORE_FP_PREFIX\n-#define\tRESTORE_FP_PREFIX \"._restf\"\n-#define RESTORE_FP_SUFFIX \"\"\n-#endif\n-\n-/* Function name to call to do profiling.  */\n-#define RS6000_MCOUNT \".__mcount\"\n-\n \f\n /* Control the assembler format that we output.  */\n \n@@ -2490,55 +2299,6 @@ extern int rs6000_trunc_used;\n    the end of the line.  */\n #define ASM_COMMENT_START \" #\"\n \n-/* Output at beginning of assembler file.\n-\n-   Initialize the section names for the RS/6000 at this point.\n-\n-   Specify filename, including full path, to assembler.\n-\n-   We want to go into the TOC section so at least one .toc will be emitted.\n-   Also, in order to output proper .bs/.es pairs, we need at least one static\n-   [RW] section emitted.\n-\n-   We then switch back to text to force the gcc2_compiled. label and the space\n-   allocated after it (when profiling) into the text section.\n-\n-   Finally, declare mcount when profiling to make the assembler happy.  */\n-\n-#define ASM_FILE_START(FILE)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  rs6000_gen_section_name (&xcoff_bss_section_name,\t\t\\\n-\t\t\t   main_input_filename, \".bss_\");\t\\\n-  rs6000_gen_section_name (&xcoff_private_data_section_name,\t\\\n-\t\t\t   main_input_filename, \".rw_\");\t\\\n-  rs6000_gen_section_name (&xcoff_read_only_section_name,\t\\\n-\t\t\t   main_input_filename, \".ro_\");\t\\\n-\t\t\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\t.file\\t\\\"%s\\\"\\n\", main_input_filename);\t\\\n-  if (TARGET_64BIT)\t\t\t\t\t\t\\\n-    fputs (\"\\t.machine\\t\\\"ppc64\\\"\\n\", FILE);\t\t\t\\\n-  toc_section ();\t\t\t\t\t\t\\\n-  if (write_symbols != NO_DEBUG)\t\t\t\t\\\n-    private_data_section ();\t\t\t\t\t\\\n-  text_section ();\t\t\t\t\t\t\\\n-  if (profile_flag)\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t.extern %s\\n\", RS6000_MCOUNT);\t\t\\\n-  rs6000_file_start (FILE, TARGET_CPU_DEFAULT);\t\t\t\\\n-}\n-\n-/* Output at end of assembler file.\n-\n-   On the RS/6000, referencing data should automatically pull in text.  */\n-\n-#define ASM_FILE_END(FILE)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  text_section ();\t\t\t\t\t\t\\\n-  fputs (\"_section_.text:\\n\", FILE);\t\t\t\t\\\n-  data_section ();\t\t\t\t\t\t\\\n-  fputs (TARGET_32BIT\t\t\t\t\t\t\\\n-\t ? \"\\t.long _section_.text\\n\" : \"\\t.llong _section_.text\\n\", FILE); \\\n-}\n-\n /* We define this to prevent the name mangler from putting dollar signs into\n    function names.  */\n \n@@ -2554,20 +2314,6 @@ extern int rs6000_trunc_used;\n \n #define TARGET_MEM_FUNCTIONS\n \n-/* Define the extra sections we need.  We define three: one is the read-only\n-   data section which is used for constants.  This is a csect whose name is\n-   derived from the name of the input file.  The second is for initialized\n-   global variables.  This is a csect whose name is that of the variable.\n-   The third is the TOC.  */\n-\n-#define EXTRA_SECTIONS \\\n-   read_only_data, private_data, read_only_private_data, toc, bss\n-\n-/* Define the name of our readonly data section.  */\n-\n-#define READONLY_DATA_SECTION read_only_data_section\n-\n-\n /* Define the name of the section to use for the exception tables.\n    TODO: test and see if we can use read_only_data_section, if so,\n    remove this.  */\n@@ -2585,118 +2331,9 @@ extern int rs6000_trunc_used;\n       && ! DECL_WEAK (DECL))\t\t\t\t\\\n     SYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)) = 1;\n \n-/* Indicate that jump tables go in the text section.  */\n-\n-#define JUMP_TABLES_IN_TEXT_SECTION 1\n-\n-/* Define the routines to implement these extra sections.\n-   BIGGEST_ALIGNMENT is 64, so align the sections that much.  */\n-\n-#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\\\n-read_only_data_section ()\t\t\t\t\\\n-{\t\t\t\t\t\t\t\\\n-  if (in_section != read_only_data)\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"\\t.csect %s[RO],3\\n\",\t\\\n-\t       xcoff_read_only_section_name);\t\t\\\n-      in_section = read_only_data;\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\\\n-private_data_section ()\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\\\n-  if (in_section != private_data)\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"\\t.csect %s[RW],3\\n\",\t\\\n-\t       xcoff_private_data_section_name);\t\\\n-      in_section = private_data;\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\\\n-read_only_private_data_section ()\t\t\t\\\n-{\t\t\t\t\t\t\t\\\n-  if (in_section != read_only_private_data)\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"\\t.csect %s[RO],3\\n\",\t\\\n-\t       xcoff_private_data_section_name);\t\\\n-      in_section = read_only_private_data;\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\\\n-toc_section ()\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\\\n-  if (TARGET_MINIMAL_TOC)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      /* toc_section is always called at least once from ASM_FILE_START, \\\n-\t so this is guaranteed to always be defined once and only once   \\\n-\t in each file.  */\t\t\t\t\t\t \\\n-      if (! toc_initialized)\t\t\t\t\\\n-\t{\t\t\t\t\t\t\\\n-\t  fputs (\"\\t.toc\\nLCTOC..0:\\n\", asm_out_file);\t\\\n-\t  fputs (\"\\t.tc toc_table[TC],toc_table[RW]\\n\", asm_out_file); \\\n-\t  toc_initialized = 1;\t\t\t\t\\\n-\t}\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-      if (in_section != toc)\t\t\t\t\\\n-\tfprintf (asm_out_file, \"\\t.csect toc_table[RW]%s\\n\",\t\\\n-\t\t (TARGET_32BIT ? \"\" : \",3\"));\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      if (in_section != toc)\t\t\t\t\\\n-        fputs (\"\\t.toc\\n\", asm_out_file);\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-  in_section = toc;\t\t\t\t\t\\\n-}\n-\n /* Flag to say the TOC is initialized */\n extern int toc_initialized;\n \n-/* This macro produces the initial definition of a function name.\n-   On the RS/6000, we need to place an extra '.' in the function name and\n-   output the function descriptor.\n-\n-   The csect for the function will have already been created by the\n-   `text_section' call previously done.  We do have to go back to that\n-   csect, however.\n-\n-   The third and fourth parameters to the .function pseudo-op (16 and 044)\n-   are placeholders which no longer have any use.  */\n-\n-#define ASM_DECLARE_FUNCTION_NAME(FILE,NAME,DECL)\t\t\\\n-{ if (TREE_PUBLIC (DECL))\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      fputs (\"\\t.globl .\", FILE);\t\t\t\t\\\n-      RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\\\n-      putc ('\\n', FILE);\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      fputs (\"\\t.lglobl .\", FILE);\t\t\t\t\\\n-      RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\\\n-      putc ('\\n', FILE);\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  fputs (\"\\t.csect \", FILE);\t\t\t\t\t\\\n-  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n-  fputs (TARGET_32BIT ? \"[DS]\\n\" : \"[DS],3\\n\", FILE);\t\t\\\n-  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n-  fputs (\":\\n\", FILE);\t\t\t\t\t\t\\\n-  fputs (TARGET_32BIT ? \"\\t.long .\" : \"\\t.llong .\", FILE);\t\\\n-  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n-  fputs (\", TOC[tc0], 0\\n\", FILE);\t\t\t\t\\\n-  fputs (TARGET_32BIT\t\t\t\t\t\t\\\n-\t ? \"\\t.csect .text[PR]\\n.\" : \"\\t.csect .text[PR],3\\n.\", FILE); \\\n-  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n-  fputs (\":\\n\", FILE);\t\t\t\t\t\t\\\n-  if (write_symbols == XCOFF_DEBUG)\t\t\t\t\\\n-    xcoffout_declare_function (FILE, DECL, NAME);\t\t\\\n-}\n-\n /* Return non-zero if this entry is to be written into the constant pool\n    in a special way.  We do so if this is a SYMBOL_REF, LABEL_REF or a CONST\n    containing one of them.  If -mfp-in-toc (the default), we also do\n@@ -2719,19 +2356,6 @@ extern int toc_initialized;\n \t   && BITS_PER_WORD == HOST_BITS_PER_INT)))\n #endif\n \n-/* Select section for constant in constant pool.\n-\n-   On RS/6000, all constants are in the private read-only data area.\n-   However, if this is being placed in the TOC it must be output as a\n-   toc entry.  */\n-\n-#define SELECT_RTX_SECTION(MODE, X)\t\t\\\n-{ if (ASM_OUTPUT_SPECIAL_POOL_ENTRY_P (X))\t\\\n-    toc_section ();\t\t\t\t\\\n-  else\t\t\t\t\t\t\\\n-    read_only_private_data_section ();\t\t\\\n-}\n-\n /* Macro to output a special constant pool entry.  Go to WIN if we output\n    it.  Otherwise, it is written the usual way.\n \n@@ -2745,114 +2369,38 @@ extern int toc_initialized;\n     }\t\t\t\t\t\t\\\n }\n \n-/* Select the section for an initialized data object.\n-\n-   On the RS/6000, we have a special section for all variables except those\n-   that are static.  */\n-\n-#define SELECT_SECTION(EXP,RELOC)\t\t\t\\\n-{\t\t\t\t\t\t\t\\\n-  if ((TREE_CODE (EXP) == STRING_CST\t\t\t\\\n-       && ! flag_writable_strings)\t\t\t\\\n-      || (TREE_CODE_CLASS (TREE_CODE (EXP)) == 'd'\t\\\n-\t  && TREE_READONLY (EXP) && ! TREE_THIS_VOLATILE (EXP) \\\n-\t  && DECL_INITIAL (EXP)\t\t\t\t\\\n-\t  && (DECL_INITIAL (EXP) == error_mark_node\t\\\n-\t      || TREE_CONSTANT (DECL_INITIAL (EXP)))\t\\\n-\t  && ! (RELOC)))\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      if (TREE_PUBLIC (EXP))\t\t\t\t\\\n-        read_only_data_section ();\t\t\t\\\n-      else\t\t\t\t\t\t\\\n-        read_only_private_data_section ();\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      if (TREE_PUBLIC (EXP))\t\t\t\t\\\n-        data_section ();\t\t\t\t\\\n-      else\t\t\t\t\t\t\\\n-        private_data_section ();\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-}\n-\n-/* This outputs NAME to FILE up to the first null or '['.  */\n-\n-#define RS6000_OUTPUT_BASENAME(FILE, NAME)\t\\\n-  {\t\t\t\t\t\t\\\n-    const char *_p;\t\t\t\t\\\n-\t\t\t\t\t\t\\\n-    STRIP_NAME_ENCODING (_p, (NAME));\t\t\\\n-    assemble_name ((FILE), _p);\t\t\t\\\n-  }\n-\n-/* Remove any trailing [DS] or the like from the symbol name.  */\n-\n-#define STRIP_NAME_ENCODING(VAR,NAME)\t\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      const char *_name = (NAME);\t\t\t\t\t\\\n-      int _len;\t\t\t\t\t\t\t\t\\\n-      if (_name[0] == '*')\t\t\t\t\t\t\\\n-\t_name++;\t\t\t\t\t\t\t\\\n-      _len = strlen (_name);\t\t\t\t\t\t\\\n-      if (_name[_len - 1] != ']')\t\t\t\t\t\\\n-\t(VAR) = _name;\t\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  char *_new_name = (char *) alloca (_len + 1);\t\t\t\\\n-\t  strcpy (_new_name, _name);\t\t\t\t\t\\\n-\t  _new_name[_len - 4] = '\\0';\t\t\t\t\t\\\n-\t  (VAR) = _new_name;\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-/* Output something to declare an external symbol to the assembler.  Most\n-   assemblers don't need this.\n-\n-   If we haven't already, add \"[RW]\" (or \"[DS]\" for a function) to the\n-   name.  Normally we write this out along with the name.  In the few cases\n-   where we can't, it gets stripped off.  */\n-\n-#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\t\\\n-{ rtx _symref = XEXP (DECL_RTL (DECL), 0);\t\\\n-  if ((TREE_CODE (DECL) == VAR_DECL\t\t\\\n-       || TREE_CODE (DECL) == FUNCTION_DECL)\t\\\n-      && (NAME)[strlen (NAME) - 1] != ']')\t\\\n-    {\t\t\t\t\t\t\\\n-      char *_name = (char *) permalloc (strlen (XSTR (_symref, 0)) + 5); \\\n-      strcpy (_name, XSTR (_symref, 0));\t\\\n-      strcat (_name, TREE_CODE (DECL) == FUNCTION_DECL ? \"[DS]\" : \"[RW]\"); \\\n-      XSTR (_symref, 0) = _name;\t\t\\\n-    }\t\t\t\t\t\t\\\n-  fputs (\"\\t.extern \", FILE);\t\t\t\\\n-  assemble_name (FILE, XSTR (_symref, 0));\t\\\n-  if (TREE_CODE (DECL) == FUNCTION_DECL)\t\\\n-    {\t\t\t\t\t\t\\\n-      fputs (\"\\n\\t.extern .\", FILE);\t\t\\\n-      RS6000_OUTPUT_BASENAME (FILE, XSTR (_symref, 0));\t\\\n-    }\t\t\t\t\t\t\\\n-  putc ('\\n', FILE);\t\t\t\t\\\n-}\n-\n-/* Similar, but for libcall.  We only have to worry about the function name,\n-   not that of the descriptor. */\n+/* This is how we tell the assembler that two symbols have the same value.  */\n \n-#define ASM_OUTPUT_EXTERNAL_LIBCALL(FILE, FUN)\t\\\n-{ fputs (\"\\t.extern .\", FILE);\t\t\t\\\n-  assemble_name (FILE, XSTR (FUN, 0));\t\t\\\n-  putc ('\\n', FILE);\t\t\t\t\\\n-}\n+#define SET_ASM_OP \".set\"\n \n-/* This is how we tell the assembler that two symbols have the same value.  */\n+/* This implementes the `alias' attribute.  */\n \n-#define ASM_OUTPUT_DEF(FILE,NAME1,NAME2)\t\\\n-do {\t\t\t\t\t\t\\\n-  fputs(\"\\t.set \", FILE);\t\t\t\\\n-  assemble_name(FILE, NAME1);\t\t\t\\\n-  fputc(',', FILE);\t\t\t\t\\\n-  assemble_name(FILE, NAME2);\t\t\t\\\n-  fputc('\\n', FILE);\t\t\t\t\\\n+#define ASM_OUTPUT_DEF_FROM_DECLS(FILE,decl,target)\t\\\n+do {\t\t\t\t\t\t\t\\\n+  char * alias = XSTR (XEXP (DECL_RTL (decl), 0), 0);\t\\\n+  char * name = IDENTIFIER_POINTER (target);\t\t\\\n+  if (TREE_CODE (decl) == FUNCTION_DECL\t\t\t\\\n+      && DEFAULT_ABI == ABI_AIX)\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if (TREE_PUBLIC (decl))\t\t\t\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  fputs (\"\\t.globl .\", FILE);\t\t\t\\\n+\t  assemble_name (FILE, alias);\t\t\t\\\n+\t  putc ('\\n', FILE);\t\t\t\t\\\n+\t}\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  fputs (\"\\t.lglobl .\", FILE);\t\t\t\\\n+\t  assemble_name (FILE, alias);\t\t\t\\\n+\t  putc ('\\n', FILE);\t\t\t\t\\\n+\t}\t\t\t\t\t\t\\\n+      fputs (\"\\t.set .\", FILE);\t\t\t\t\\\n+      assemble_name (FILE, alias);\t\t\t\\\n+      fputs (\",.\", FILE);\t\t\t\t\\\n+      assemble_name (FILE, name);\t\t\t\\\n+      fputc ('\\n', FILE);\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  ASM_OUTPUT_DEF (FILE, alias, name);\t\t\t\\\n } while (0)\n \n /* Output to assembler file text saying following lines\n@@ -2865,17 +2413,6 @@ do {\t\t\t\t\t\t\\\n \n #define ASM_APP_OFF \"\"\n \n-/* Output before instructions.\n-   Text section for 64-bit target may contain 64-bit address jump table.  */\n-\n-#define TEXT_SECTION_ASM_OP (TARGET_32BIT \\\n-\t\t\t     ? \"\\t.csect .text[PR]\" : \"\\t.csect .text[PR],3\")\n-\n-/* Output before writable data.\n-   Align entire section to BIGGEST_ALIGNMENT.  */\n-\n-#define DATA_SECTION_ASM_OP \".csect .data[RW],3\"\n-\n /* How to refer to registers in assembler output.\n    This sequence is indexed by compiler's hard-register-number (see above).  */\n \n@@ -2963,7 +2500,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0). */\n   &rs6000_reg_names[74][0],\t/* cr6  */\t\t\t\t\\\n   &rs6000_reg_names[75][0],\t/* cr7  */\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  &rs6000_reg_names[76][0],\t/* fpmem */\t\t\t\t\\\n+  &rs6000_reg_names[76][0],\t/* xer  */\t\t\t\t\\\n }\n \n /* print-rtl can't handle the above REGISTER_NAMES, so define the\n@@ -2982,7 +2519,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0). */\n     \"f24\", \"f25\", \"f26\", \"f27\", \"f28\", \"f29\", \"f30\", \"f31\",\t\t\\\n      \"mq\",  \"lr\", \"ctr\",  \"ap\",\t\t\t\t\t\t\\\n     \"cr0\", \"cr1\", \"cr2\", \"cr3\", \"cr4\", \"cr5\", \"cr6\", \"cr7\",\t\t\\\n-  \"fpmem\"\t\t\t\t\t\t\t\t\\\n+  \"xer\"\t\t\t\t\t\t\t\t\t\\\n }\n \n /* Table of additional register names to use in user input.  */\n@@ -3017,60 +2554,14 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0). */\n    the loader.  This depends on the AIX version.  */\n #define RS6000_CALL_GLUE \"cror 31,31,31\"\n \n-/* This is how to output the definition of a user-level label named NAME,\n-   such as the label on a static function or variable NAME.  */\n-\n-#define ASM_OUTPUT_LABEL(FILE,NAME)\t\\\n-  do { RS6000_OUTPUT_BASENAME (FILE, NAME); fputs (\":\\n\", FILE); } while (0)\n-\n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  do { fputs (\"\\t.globl \", FILE);\t\\\n-       RS6000_OUTPUT_BASENAME (FILE, NAME); putc ('\\n', FILE);} while (0)\n-\n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n-\n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fputs (NAME, FILE)\n-\n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n-\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n-  fprintf (FILE, \"%s..%d:\\n\", PREFIX, NUM)\n-\n-/* This is how to output an internal label prefix.  rs6000.c uses this\n-   when generating traceback tables.  */\n-\n-#define ASM_OUTPUT_INTERNAL_LABEL_PREFIX(FILE,PREFIX)\t\\\n-  fprintf (FILE, \"%s..\", PREFIX)\n-\n-/* This is how to output a label for a jump table.  Arguments are the same as\n-   for ASM_OUTPUT_INTERNAL_LABEL, except the insn for the jump table is\n-   passed. */\n-\n-#define ASM_OUTPUT_CASE_LABEL(FILE,PREFIX,NUM,TABLEINSN)\t\\\n-{ ASM_OUTPUT_ALIGN (FILE, 2); ASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM); }\n-\n-/* This is how to store into the string LABEL\n-   the symbol_ref name of an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.\n-   This is suitable for output with `assemble_name'.  */\n-\n-#define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n-  sprintf (LABEL, \"*%s..%d\", PREFIX, NUM)\n-\n /* This is how to output an assembler line defining a `double' constant.  */\n \n #define ASM_OUTPUT_DOUBLE(FILE, VALUE)\t\t\t\\\n   {\t\t\t\t\t\t\t\\\n     long t[2];\t\t\t\t\t\t\\\n     REAL_VALUE_TO_TARGET_DOUBLE ((VALUE), t);\t\t\\\n     fprintf (FILE, \"\\t.long 0x%lx\\n\\t.long 0x%lx\\n\",\t\\\n-\t     t[0] & 0xffffffff, t[1] & 0xffffffff);\t\\\n+\t     t[0] & 0xffffffffu, t[1] & 0xffffffffu);\t\\\n   }\n \n /* This is how to output an assembler line defining a `float' constant.  */\n@@ -3079,7 +2570,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0). */\n   {\t\t\t\t\t\t\t\\\n     long t;\t\t\t\t\t\t\\\n     REAL_VALUE_TO_TARGET_SINGLE ((VALUE), t);\t\t\\\n-    fprintf (FILE, \"\\t.long 0x%lx\\n\", t & 0xffffffff);\t\\\n+    fprintf (FILE, \"\\t.long 0x%lx\\n\", t & 0xffffffffu);\t\\\n   }\n \n /* This is how to output an assembler line defining an `int' constant.  */\n@@ -3123,22 +2614,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_BYTE(FILE,VALUE)  \\\n   fprintf (FILE, \"\\t.byte 0x%x\\n\", (VALUE))\n \n-/* This is how to output an assembler line to define N characters starting\n-   at P to FILE.  */\n-\n-#define ASM_OUTPUT_ASCII(FILE, P, N)  output_ascii ((FILE), (P), (N))\n-\n-/* This is how to output an element of a case-vector that is absolute.\n-   (RS/6000 does not use such vectors, but we must define this macro\n-   anyway.)   */\n-\n-#define ASM_OUTPUT_ADDR_VEC_ELT(FILE, VALUE)\t\t\\\n-  do { char buf[100];\t\t\t\t\t\\\n-       fputs (\"\\t.long \", FILE);\t\t\t\\\n-       ASM_GENERATE_INTERNAL_LABEL (buf, \"L\", VALUE);\t\\\n-       assemble_name (FILE, buf);\t\t\t\\\n-       putc ('\\n', FILE);\t\t\t\t\\\n-     } while (0)\n+/* This is used by the definition of ASM_OUTPUT_ADDR_ELT in defaults.h.  */\n+#define ASM_LONG (TARGET_32BIT ? \".long\" : \".quad\")\n \n /* This is how to output an element of a case-vector that is relative.  */\n \n@@ -3161,21 +2638,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n   if ((LOG) != 0)\t\t\t\\\n     fprintf (FILE, \"\\t.align %d\\n\", (LOG))\n \n-#define ASM_OUTPUT_SKIP(FILE,SIZE)  \\\n-  fprintf (FILE, \"\\t.space %d\\n\", (SIZE))\n-\n-/* This says how to output an assembler line\n-   to define a global common symbol.  */\n-\n-#define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGNMENT)\t\\\n-  do { fputs (\".comm \", (FILE));\t\t\t\\\n-       RS6000_OUTPUT_BASENAME ((FILE), (NAME));\t\t\\\n-       if ( (SIZE) > 4)\t\t\t\t\t\\\n-         fprintf ((FILE), \",%d,3\\n\", (SIZE));\t\t\\\n-       else\t\t\t\t\t\t\\\n-\t fprintf( (FILE), \",%d\\n\", (SIZE));\t\t\\\n-  } while (0)\n-\n /* This says how to output an assembler line\n    to define a local common symbol.\n    Alignment cannot be specified, but we can try to maintain\n@@ -3203,6 +2665,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_OPEN_PAREN \"(\"\n #define ASM_CLOSE_PAREN \")\"\n \n+/* Pick up the return address upon entry to a procedure. Used for\n+   dwarf2 unwind information.  This also enables the table driven\n+   mechanism.  */\n+\n+#define INCOMING_RETURN_ADDR_RTX   gen_rtx_REG (Pmode, LINK_REGISTER_REGNUM)\n+\n /* Define results of standard character escape sequences.  */\n #define TARGET_BELL 007\n #define TARGET_BS 010\n@@ -3240,6 +2708,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n   {\"reg_or_neg_short_operand\", {SUBREG, REG, CONST_INT}},\t\\\n   {\"reg_or_u_short_operand\", {SUBREG, REG, CONST_INT}}, \t\\\n   {\"reg_or_cint_operand\", {SUBREG, REG, CONST_INT}}, \t\t\\\n+  {\"reg_or_u_cint_operand\", {SUBREG, REG, CONST_INT, CONST_DOUBLE}}, \\\n   {\"got_operand\", {SYMBOL_REF, CONST, LABEL_REF}},\t\t\\\n   {\"got_no_const_operand\", {SYMBOL_REF, LABEL_REF}},\t\t\\\n   {\"easy_fp_constant\", {CONST_DOUBLE}},\t\t\t\t\\\n@@ -3253,11 +2722,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n   {\"and_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\\\n   {\"and64_operand\", {SUBREG, REG, CONST_INT, CONST_DOUBLE}},\t\\\n   {\"logical_operand\", {SUBREG, REG, CONST_INT}}, \t\t\\\n+  {\"logical_u_operand\", {SUBREG, REG, CONST_INT, CONST_DOUBLE}}, \\\n   {\"non_logical_cint_operand\", {CONST_INT}},\t\t\t\\\n+  {\"non_logical_u_cint_operand\", {CONST_INT, CONST_DOUBLE}},\t\\\n   {\"mask_operand\", {CONST_INT}},\t\t\t\t\\\n   {\"mask64_operand\", {CONST_INT, CONST_DOUBLE}},\t\t\\\n   {\"count_register_operand\", {REG}},\t\t\t\t\\\n-  {\"fpmem_operand\", {REG}},\t\t\t\t\t\\\n+  {\"xer_operand\", {REG}},\t\t\t\t\t\\\n   {\"call_operand\", {SYMBOL_REF, REG}},\t\t\t\t\\\n   {\"current_file_function_operand\", {SYMBOL_REF}},\t\t\\\n   {\"input_operand\", {SUBREG, MEM, REG, CONST_INT, \t\t\\\n@@ -3285,109 +2756,3 @@ extern int flag_pic;\n extern int optimize;\n extern int flag_expensive_optimizations;\n extern int frame_pointer_needed;\n-\n-/* Declare functions in rs6000.c */\n-extern void optimization_options ();\n-extern void output_options ();\n-extern void rs6000_override_options ();\n-extern void rs6000_file_start ();\n-extern struct rtx_def *rs6000_float_const ();\n-extern struct rtx_def *rs6000_got_register ();\n-extern struct rtx_def *find_addr_reg();\n-extern int direct_return ();\n-extern int get_issue_rate ();\n-extern int any_operand ();\n-extern int short_cint_operand ();\n-extern int u_short_cint_operand ();\n-extern int non_short_cint_operand ();\n-extern int gpc_reg_operand ();\n-extern int cc_reg_operand ();\n-extern int cc_reg_not_cr0_operand ();\n-extern int reg_or_short_operand ();\n-extern int reg_or_neg_short_operand ();\n-extern int reg_or_u_short_operand ();\n-extern int reg_or_cint_operand ();\n-extern int got_operand ();\n-extern int got_no_const_operand ();\n-extern int num_insns_constant ();\n-extern int easy_fp_constant ();\n-extern int volatile_mem_operand ();\n-extern int offsettable_mem_operand ();\n-extern int mem_or_easy_const_operand ();\n-extern int add_operand ();\n-extern int non_add_cint_operand ();\n-extern int non_logical_cint_operand ();\n-extern int logical_operand ();\n-extern int mask_operand ();\n-extern int mask64_operand ();\n-extern int and64_operand ();\n-extern int and_operand ();\n-extern int count_register_operand ();\n-extern int fpmem_operand ();\n-extern int reg_or_mem_operand ();\n-extern int lwa_operand ();\n-extern int call_operand ();\n-extern int current_file_function_operand ();\n-extern int input_operand ();\n-extern int small_data_operand ();\n-extern void init_cumulative_args ();\n-extern void function_arg_advance ();\n-extern int function_arg_boundary ();\n-extern struct rtx_def *function_arg ();\n-extern int function_arg_partial_nregs ();\n-extern int function_arg_pass_by_reference ();\n-extern void setup_incoming_varargs ();\n-extern union tree_node *rs6000_build_va_list ();\n-extern void rs6000_va_start ();\n-extern struct rtx_def *rs6000_va_arg ();\n-extern struct rtx_def *rs6000_stack_temp ();\n-extern int expand_block_move ();\n-extern int load_multiple_operation ();\n-extern int store_multiple_operation ();\n-extern int branch_comparison_operator ();\n-extern int scc_comparison_operator ();\n-extern int trap_comparison_operator ();\n-extern int includes_lshift_p ();\n-extern int includes_rshift_p ();\n-extern int registers_ok_for_quad_peep ();\n-extern int addrs_ok_for_quad_peep ();\n-extern enum reg_class secondary_reload_class ();\n-extern int ccr_bit ();\n-extern void rs6000_finalize_pic ();\n-extern void rs6000_reorg ();\n-extern void rs6000_save_machine_status ();\n-extern void rs6000_restore_machine_status ();\n-extern void rs6000_init_expanders ();\n-extern void print_operand ();\n-extern void print_operand_address ();\n-extern int first_reg_to_save ();\n-extern int first_fp_reg_to_save ();\n-extern int rs6000_makes_calls ();\n-extern rs6000_stack_t *rs6000_stack_info ();\n-extern void output_prolog ();\n-extern void output_epilog ();\n-extern void output_mi_thunk ();\n-extern void output_toc ();\n-extern void output_ascii ();\n-extern void rs6000_gen_section_name ();\n-extern void output_function_profiler ();\n-extern int rs6000_adjust_cost ();\n-extern int rs6000_adjust_priority ();\n-extern void rs6000_trampoline_template ();\n-extern int rs6000_trampoline_size ();\n-extern void rs6000_initialize_trampoline ();\n-extern void rs6000_output_load_toc_table ();\n-extern int rs6000_comp_type_attributes ();\n-extern int rs6000_valid_decl_attribute_p ();\n-extern int rs6000_valid_type_attribute_p ();\n-extern void rs6000_set_default_type_attributes ();\n-extern struct rtx_def *rs6000_dll_import_ref ();\n-extern struct rtx_def *rs6000_longcall_ref ();\n-extern int function_arg_padding ();\n-extern void toc_section ();\n-extern void private_data_section ();\n-extern void rs6000_fatal_bad_address ();\n-\n-/* See nonlocal_goto_receiver for when this must be set.  */\n-\n-#define DONT_ACCESS_GBLS_AFTER_EPILOGUE (TARGET_TOC && TARGET_MINIMAL_TOC)"}, {"sha": "2e237780c6a6159da3a5c8d8eeef54437d927a5b", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 5111, "deletions": 1499, "changes": 6610, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac"}, {"sha": "76df9b01529dd15d217ac3358a310f36e76c7033", "filename": "gcc/config/rs6000/sol2.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol2.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 running AIX version 3.1.\n-   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n    Contributed by David Reese (Dave.Reese@East.Sun.COM)\n \n This file is part of GNU CC.\n@@ -65,9 +65,6 @@ Boston, MA 02111-1307, USA.  */\n #undef\tCPP_ENDIAN_LITTLE_SPEC\n #define\tCPP_ENDIAN_LITTLE_SPEC CPP_ENDIAN_SOLARIS_SPEC\n \n-/* Don't turn -B into -L if the argument specifies a relative file name.  */\n-#undef\tRELATIVE_PREFIX_NOT_LINKDIR\n-\n #define\tDEFAULT_PCC_STRUCT_RETURN 0\n \n #undef TARGET_VERSION"}, {"sha": "644438cc6c637eff552d8cbacc2340ebf4d7306e", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 432, "deletions": 442, "changes": 874, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for PowerPC running System V.4\n-   Copyright (C) 1995, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n This file is part of GNU CC.\n@@ -19,109 +19,126 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* Small data support types */\n+#include \"rs6000/rs6000.h\"\n+\n+/* Use the regular svr4 definitions.  */\n+\n+#include \"svr4.h\"\n+\n+/* Yes!  We are ELF.  */\n+#define\tTARGET_OBJECT_FORMAT OBJECT_ELF\n+\n+/* Default ABI to compile code for.  */\n+#define DEFAULT_ABI rs6000_current_abi\n+\n+/* Default ABI to use.  */\n+#define RS6000_ABI_NAME \"sysv\"\n+\n+/* Override rs6000.h definition.  */\n+#undef\tASM_DEFAULT_SPEC\n+#define\tASM_DEFAULT_SPEC \"-mppc\"\n+\n+/* Override rs6000.h definition.  */\n+#undef\tCPP_DEFAULT_SPEC\n+#define\tCPP_DEFAULT_SPEC \"-D_ARCH_PPC\"\n+\n+/* Small data support types.  */\n enum rs6000_sdata_type {\n-  SDATA_NONE,\t\t\t/* no small data support */\n-  SDATA_DATA,\t\t\t/* just put data in .sbss/.sdata, don't use relocs */\n-  SDATA_SYSV,\t\t\t/* Use r13 to point to .sdata/.sbss */\n-  SDATA_EABI\t\t\t/* Use r13 like above, r2 points to .sdata2/.sbss2 */\n+  SDATA_NONE,\t\t\t/* No small data support.  */\n+  SDATA_DATA,\t\t\t/* Just put data in .sbss/.sdata, don't use relocs.  */\n+  SDATA_SYSV,\t\t\t/* Use r13 to point to .sdata/.sbss.  */\n+  SDATA_EABI\t\t\t/* Use r13 like above, r2 points to .sdata2/.sbss2.  */\n };\n \n extern enum rs6000_sdata_type rs6000_sdata;\n \n-/* V.4/eabi switches */\n-#define\tMASK_NO_BITFIELD_TYPE\t0x40000000\t/* Set PCC_BITFIELD_TYPE_MATTERS to 0 */\n+/* V.4/eabi switches.  */\n+#define\tMASK_NO_BITFIELD_TYPE\t0x40000000\t/* Set PCC_BITFIELD_TYPE_MATTERS to 0.  */\n #define\tMASK_STRICT_ALIGN\t0x20000000\t/* Set STRICT_ALIGNMENT to 1.  */\n-#define MASK_RELOCATABLE\t0x10000000\t/* GOT pointers are PC relative */\n-#define\tMASK_EABI\t\t0x08000000\t/* Adhere to eabi, not System V spec */\n-#define MASK_LITTLE_ENDIAN\t0x04000000\t/* target is little endian */\n-#define MASK_REGNAMES\t\t0x02000000\t/* use alternate register names.  */\n-#define MASK_PROTOTYPE\t\t0x01000000\t/* Only prototyped fcns pass variable args */\n+#define\tMASK_RELOCATABLE\t0x10000000\t/* GOT pointers are PC relative.  */\n+#define\tMASK_EABI\t\t0x08000000\t/* Adhere to eabi, not System V spec.  */\n+#define\tMASK_LITTLE_ENDIAN\t0x04000000\t/* Target is little endian.  */\n+#define\tMASK_REGNAMES\t\t0x02000000\t/* Use alternate register names.  */\n+#define\tMASK_PROTOTYPE\t\t0x01000000\t/* Only prototyped fcns pass variable args.  */\n \n #define\tTARGET_NO_BITFIELD_TYPE\t(target_flags & MASK_NO_BITFIELD_TYPE)\n-#define TARGET_STRICT_ALIGN\t(target_flags & MASK_STRICT_ALIGN)\n-#define TARGET_RELOCATABLE\t(target_flags & MASK_RELOCATABLE)\n-#define TARGET_EABI\t\t(target_flags & MASK_EABI)\n-#define TARGET_LITTLE_ENDIAN\t(target_flags & MASK_LITTLE_ENDIAN)\n-#define TARGET_REGNAMES\t\t(target_flags & MASK_REGNAMES)\n+#define\tTARGET_STRICT_ALIGN\t(target_flags & MASK_STRICT_ALIGN)\n+#define\tTARGET_RELOCATABLE\t(target_flags & MASK_RELOCATABLE)\n+#define\tTARGET_EABI\t\t(target_flags & MASK_EABI)\n+#define\tTARGET_LITTLE_ENDIAN\t(target_flags & MASK_LITTLE_ENDIAN)\n+#define\tTARGET_REGNAMES\t\t(target_flags & MASK_REGNAMES)\n #define\tTARGET_PROTOTYPE\t(target_flags & MASK_PROTOTYPE)\n #define\tTARGET_TOC\t\t((target_flags & MASK_64BIT)\t\t\\\n \t\t\t\t || ((target_flags & (MASK_RELOCATABLE\t\\\n \t\t\t\t\t\t      | MASK_MINIMAL_TOC)) \\\n \t\t\t\t     && flag_pic > 1)\t\t\t\\\n-\t\t\t\t || DEFAULT_ABI == ABI_AIX\t\t\\\n-\t\t\t\t || DEFAULT_ABI == ABI_NT)\n+\t\t\t\t || DEFAULT_ABI == ABI_AIX)\n \n #define\tTARGET_BITFIELD_TYPE\t(! TARGET_NO_BITFIELD_TYPE)\n-#define TARGET_BIG_ENDIAN\t(! TARGET_LITTLE_ENDIAN)\n+#define\tTARGET_BIG_ENDIAN\t(! TARGET_LITTLE_ENDIAN)\n #define\tTARGET_NO_PROTOTYPE\t(! TARGET_PROTOTYPE)\n #define\tTARGET_NO_TOC\t\t(! TARGET_TOC)\n-#define TARGET_NO_EABI\t\t(! TARGET_EABI)\n-\n-/* Pseudo target to indicate whether the object format is ELF\n-   (to get around not having conditional compilation in the md file)  */\n-#define\tTARGET_ELF\t\t1\n-\n-/* Note, V.4 no longer uses a normal TOC, so make -mfull-toc, be just\n-   the same as -mminimal-toc.  */\n-#undef\tSUBTARGET_SWITCHES\n-#define SUBTARGET_SWITCHES\t\t\t\t\t\t\\\n-  { \"bit-align\",\t-MASK_NO_BITFIELD_TYPE },\t\t\t\\\n-  { \"no-bit-align\",\t MASK_NO_BITFIELD_TYPE },\t\t\t\\\n-  { \"strict-align\",\t MASK_STRICT_ALIGN },\t\t\t\t\\\n-  { \"no-strict-align\",\t-MASK_STRICT_ALIGN },\t\t\t\t\\\n-  { \"relocatable\",\t MASK_RELOCATABLE | MASK_MINIMAL_TOC | MASK_NO_FP_IN_TOC }, \\\n-  { \"no-relocatable\",\t-MASK_RELOCATABLE },\t\t\t\t\\\n-  { \"relocatable-lib\",\t MASK_RELOCATABLE | MASK_MINIMAL_TOC | MASK_NO_FP_IN_TOC }, \\\n-  { \"no-relocatable-lib\", -MASK_RELOCATABLE },\t\t\t\t\\\n-  { \"little-endian\",\t MASK_LITTLE_ENDIAN },\t\t\t\t\\\n-  { \"little\",\t\t MASK_LITTLE_ENDIAN },\t\t\t\t\\\n-  { \"big-endian\",\t-MASK_LITTLE_ENDIAN },\t\t\t\t\\\n-  { \"big\",\t\t-MASK_LITTLE_ENDIAN },\t\t\t\t\\\n-  { \"no-toc\",\t\t 0 },\t\t\t\t\t\t\\\n-  { \"toc\",\t\t MASK_MINIMAL_TOC },\t\t\t\t\\\n-  { \"full-toc\",\t\t MASK_MINIMAL_TOC },\t\t\t\t\\\n-  { \"prototype\",\t MASK_PROTOTYPE },\t\t\t\t\\\n-  { \"no-prototype\",\t-MASK_PROTOTYPE },\t\t\t\t\\\n-  { \"no-traceback\",\t 0 },\t\t\t\t\t\t\\\n-  { \"eabi\",\t\t MASK_EABI },\t\t\t\t\t\\\n-  { \"no-eabi\",\t\t-MASK_EABI },\t\t\t\t\t\\\n-  { \"regnames\",\t\t  MASK_REGNAMES },\t\t\t\t\\\n-  { \"no-regnames\",\t -MASK_REGNAMES },\t\t\t\t\\\n-  { \"sdata\",\t\t 0 },\t\t\t\t\t\t\\\n-  { \"no-sdata\",\t\t 0 },\t\t\t\t\t\t\\\n-  { \"sim\",\t\t 0 },\t\t\t\t\t\t\\\n-  { \"ads\",\t\t 0 },\t\t\t\t\t\t\\\n-  { \"yellowknife\",\t 0 },\t\t\t\t\t\t\\\n-  { \"mvme\",\t\t 0 },\t\t\t\t\t\t\\\n-  { \"emb\",\t\t 0 },\t\t\t\t\t\t\\\n-  { \"solaris-cclib\",\t 0 },\t\t\t\t\t\t\\\n-  { \"shlib\",\t\t 0 },\t\t\t\t\t\t\\\n-  EXTRA_SUBTARGET_SWITCHES                                              \\\n-  { \"newlib\",\t\t 0 },\n-\n-/* This is meant to be redefined in the host dependent files */\n-#define EXTRA_SUBTARGET_SWITCHES\n-\n-/* Default ABI to use */\n-#define RS6000_ABI_NAME \"sysv\"\n+#define\tTARGET_NO_EABI\t\t(! TARGET_EABI)\n \n /* Strings provided by SUBTARGET_OPTIONS */\n extern const char *rs6000_abi_name;\n extern const char *rs6000_sdata_name;\n \n-#define SUBTARGET_OPTIONS\t\t\t\t\t\t\\\n-  { \"call-\",  &rs6000_abi_name},\t\t\t\t\t\\\n-  { \"sdata=\", &rs6000_sdata_name}\n+/* Override rs6000.h definition.  */\n+#undef\tSUBTARGET_OPTIONS\n+#define\tSUBTARGET_OPTIONS\t\t\t\t\t\t\\\n+  { \"call-\",  &rs6000_abi_name, \"Select ABI calling convention.\" },\t\t\t\\\n+  { \"sdata=\", &rs6000_sdata_name, \"Select method for sdata handling.\" }\n \n /* Max # of bytes for variables to automatically be put into the .sdata\n    or .sdata2 sections.  */\n-extern int g_switch_value;\t\t/* value of the -G xx switch */\n-extern int g_switch_set;\t\t/* whether -G xx was passed.  */\n+extern int g_switch_value;\t\t/* Value of the -G xx switch.  */\n+extern int g_switch_set;\t\t/* Whether -G xx was passed.  */\n \n-#ifndef SDATA_DEFAULT_SIZE\n #define SDATA_DEFAULT_SIZE 8\n-#endif\n+\n+/* Note, V.4 no longer uses a normal TOC, so make -mfull-toc, be just\n+   the same as -mminimal-toc.  */\n+/* Override rs6000.h definition.  */\n+#undef\tSUBTARGET_SWITCHES\n+#define SUBTARGET_SWITCHES\t\t\t\t\t\t\\\n+  { \"bit-align\",\t-MASK_NO_BITFIELD_TYPE, \"Align to the base type of the bitfield.\" },\\\n+  { \"no-bit-align\",\t MASK_NO_BITFIELD_TYPE, \"Don't align to the base type of the bitfield.\" },\\\n+  { \"strict-align\",\t MASK_STRICT_ALIGN, \"Don't assume that unaligned accesses are handled by the system\" },\\\n+  { \"no-strict-align\",\t-MASK_STRICT_ALIGN, \"Assume that unaligned accesses are handled by the system\" },\\\n+  { \"relocatable\",\t MASK_RELOCATABLE | MASK_MINIMAL_TOC | MASK_NO_FP_IN_TOC, \"Produce code relocatable at runtime.\" },\\\n+  { \"no-relocatable\",\t-MASK_RELOCATABLE, \"Don't produce code relocatable at runtime.\" },\\\n+  { \"relocatable-lib\",\t MASK_RELOCATABLE | MASK_MINIMAL_TOC | MASK_NO_FP_IN_TOC, \"Produce code relocatable at runtime.\" },\\\n+  { \"no-relocatable-lib\", -MASK_RELOCATABLE, \"Don't produce code relocatable at runtime.\" },\\\n+  { \"little-endian\",\t MASK_LITTLE_ENDIAN, \"Produce little endian code.\" },\t\\\n+  { \"little\",\t\t MASK_LITTLE_ENDIAN, \"Produce little endian code.\" },\t\\\n+  { \"big-endian\",\t-MASK_LITTLE_ENDIAN, \"Produce big endian code.\" },\t\\\n+  { \"big\",\t\t-MASK_LITTLE_ENDIAN, \"Produce big endian code.\" },\t\\\n+  { \"no-toc\",\t\t 0, \"no description yet\" },\t\t\t\t\\\n+  { \"toc\",\t\t MASK_MINIMAL_TOC, \"no description yet\" },\t\t\\\n+  { \"full-toc\",\t\t MASK_MINIMAL_TOC, \"no description yet\" },\t\t\\\n+  { \"prototype\",\t MASK_PROTOTYPE, \"no description yet\" },\t\t\\\n+  { \"no-prototype\",\t-MASK_PROTOTYPE, \"no description yet\" },\t\t\\\n+  { \"no-traceback\",\t 0, \"no description yet\" },\t\t\t\t\\\n+  { \"eabi\",\t\t MASK_EABI, \"Use EABI.\" },\t\t\t\t\\\n+  { \"no-eabi\",\t\t-MASK_EABI, \"Don't use EABI.\" },\t\t\t\\\n+  { \"regnames\",\t\t  MASK_REGNAMES, \"Use alternate register names.\" },\t\\\n+  { \"no-regnames\",\t -MASK_REGNAMES, \"Don't use alternate register names.\" },\\\n+  { \"sdata\",\t\t 0, \"no description yet\" },\t\t\t\t\\\n+  { \"no-sdata\",\t\t 0, \"no description yet\" },\t\t\t\t\\\n+  { \"sim\",\t\t 0, \"Link with libsim.a, libc.a and sim-crt0.o.\" },\t\\\n+  { \"ads\",\t\t 0, \"Link with libads.a, libc.a and crt0.o.\" },\t\t\\\n+  { \"yellowknife\",\t 0, \"Link with libyk.a, libc.a and crt0.o.\" },\t\t\\\n+  { \"mvme\",\t\t 0, \"Link with libmvme.a, libc.a and crt0.o.\" },\t\\\n+  { \"emb\",\t\t 0, \"Set the PPC_EMB bit in the ELF flags header\" },\t\\\n+  { \"vxworks\",\t\t 0, \"no description yet\" },\t\t\t\t\\\n+  { \"solaris-cclib\",\t 0, \"no description yet\" },\t\t\t\t\\\n+  { \"shlib\",\t\t 0, \"no description yet\" },\t\t\t\t\\\n+  EXTRA_SUBTARGET_SWITCHES\t\t\t\t\t\t\t\\\n+  { \"newlib\",\t\t 0, \"no description yet\" },\n+\n+/* This is meant to be redefined in the host dependent files.  */\n+#define EXTRA_SUBTARGET_SWITCHES\n \n /* Sometimes certain combinations of command options do not make sense\n    on a particular target machine.  You can define a macro\n@@ -157,8 +174,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else if (!strcmp (rs6000_abi_name, \"aixdesc\"))\t\t\t\\\n     rs6000_current_abi = ABI_AIX;\t\t\t\t\t\\\n-  else if (!strcmp (rs6000_abi_name, \"nt\"))\t\t\t\t\\\n-    rs6000_current_abi = ABI_NT;\t\t\t\t\t\\\n   else if (!strcmp (rs6000_abi_name, \"linux\"))\t\t\t\t\\\n     rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n   else if (!strcmp (rs6000_abi_name, \"solaris\"))\t\t\t\\\n@@ -226,16 +241,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n       error (\"-mrelocatable and -mno-minimal-toc are incompatible.\");\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_RELOCATABLE &&\t\t\t\t\t\t\\\n-      (rs6000_current_abi == ABI_AIX || rs6000_current_abi == ABI_NT))\t\\\n+  if (TARGET_RELOCATABLE && rs6000_current_abi == ABI_AIX)\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       target_flags &= ~MASK_RELOCATABLE;\t\t\t\t\\\n       error (\"-mrelocatable and -mcall-%s are incompatible.\",\t\t\\\n \t     rs6000_abi_name);\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  if (flag_pic > 1 &&\t\t\t\t\t\t\t\\\n-      (rs6000_current_abi == ABI_AIX || rs6000_current_abi == ABI_NT))\t\\\n+  if (flag_pic > 1 && rs6000_current_abi == ABI_AIX)\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       flag_pic = 0;\t\t\t\t\t\t\t\\\n       error (\"-fPIC and -mcall-%s are incompatible.\",\t\t\t\\\n@@ -248,13 +261,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n       error (\"-mcall-aixdesc must be big endian\");\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  if (rs6000_current_abi == ABI_NT && TARGET_BIG_ENDIAN)\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      target_flags |= MASK_LITTLE_ENDIAN;\t\t\t\t\\\n-      error (\"-mcall-nt must be little endian\");\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  /* Treat -fPIC the same as -mrelocatable */\t\t\t\t\\\n+  /* Treat -fPIC the same as -mrelocatable.  */\t\t\t\t\\\n   if (flag_pic > 1)\t\t\t\t\t\t\t\\\n     target_flags |= MASK_RELOCATABLE | MASK_MINIMAL_TOC | MASK_NO_FP_IN_TOC; \\\n \t\t\t\t\t\t\t\t\t\\\n@@ -263,42 +270,30 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n-/* Default ABI to compile code for */\n-#define DEFAULT_ABI rs6000_current_abi\n-\n-#define CPP_DEFAULT_SPEC \"-D_ARCH_PPC\"\n-\n-#define ASM_DEFAULT_SPEC \"-mppc\"\n-\n-#include \"rs6000/rs6000.h\"\n \n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS)\n+/* Override rs6000.h definition.  */\n+#undef\tTARGET_DEFAULT\n+#define\tTARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS)\n \n-#undef PROCESSOR_DEFAULT\n-#define PROCESSOR_DEFAULT PROCESSOR_PPC750\n+/* Override rs6000.h definition.  */\n+#undef\tPROCESSOR_DEFAULT\n+#define\tPROCESSOR_DEFAULT PROCESSOR_PPC750\n \n /* System V.4 uses register 13 as a pointer to the small data area,\n    so it is not available to the normal user.  */\n \n-#undef\tFIXED_R13\n #define FIXED_R13 1\n \n-/* System V.4 passes the first 8 floating arguments in registers,\n-   instead of the first 13 like AIX does.  */\n-#undef\tFP_ARG_MAX_REG\n-#define\tFP_ARG_MAX_REG ((DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_AIX_NODESC) \\\n-\t\t\t? FP_ARG_AIX_MAX_REG : FP_ARG_V4_MAX_REG)\n-\n-/* Size of the V.4 varargs area if needed */\n+/* Size of the V.4 varargs area if needed.  */\n+/* Override rs6000.h definition.  */\n #undef\tRS6000_VARARGS_AREA\n #define RS6000_VARARGS_AREA ((rs6000_sysv_varargs_p) ? RS6000_VARARGS_SIZE : 0)\n \n-/* Override default big endianism */\n-#undef  BYTES_BIG_ENDIAN\n-#undef  WORDS_BIG_ENDIAN\n-#define BYTES_BIG_ENDIAN (TARGET_BIG_ENDIAN)\n-#define WORDS_BIG_ENDIAN (TARGET_BIG_ENDIAN)\n+/* Override default big endianism definitions in rs6000.h.  */\n+#undef\tBYTES_BIG_ENDIAN\n+#undef\tWORDS_BIG_ENDIAN\n+#define\tBYTES_BIG_ENDIAN (TARGET_BIG_ENDIAN)\n+#define\tWORDS_BIG_ENDIAN (TARGET_BIG_ENDIAN)\n \n /* Define this to set the endianness to use in libgcc2.c, which can\n    not depend on target_flags.  */\n@@ -308,88 +303,36 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define LIBGCC2_WORDS_BIG_ENDIAN 0\n #endif\n \n-/* Size of the outgoing register save area */\n-#undef\tRS6000_REG_SAVE\n-#define RS6000_REG_SAVE ((DEFAULT_ABI == ABI_AIX\t\t\t\\\n-\t\t\t  || DEFAULT_ABI == ABI_AIX_NODESC)\t\t\\\n-\t\t\t ? (TARGET_64BIT ? 64 : 32)\t\t\t\\\n-\t\t\t : 0)\n-\n-/* Size of the fixed area on the stack.  For AIX, use the standard 6 word\n-   area, otherwise use 2 words to store back chain & LR.  */\n-#undef\tRS6000_SAVE_AREA\n-#define RS6000_SAVE_AREA \\\n-  (((DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_AIX_NODESC) ? 24 : 8) << (TARGET_64BIT ? 1 : 0))\n-\n /* Define cutoff for using external functions to save floating point.\n-   Currently on V.4, always use inline stores */\n-#undef\tFP_SAVE_INLINE\n+   Currently on V.4, always use inline stores.  */\n #define FP_SAVE_INLINE(FIRST_REG) ((FIRST_REG) < 64)\n \n-/* Don't generate XCOFF debugging information.  */\n-\n-#undef XCOFF_DEBUGGING_INFO\n-\n-/* Don't use the COFF object file format.  */\n-\n-#undef OBJECT_FORMAT_COFF\n-\n-/* Don't bother to output .extern pseudo-ops.  They are not needed by\n-   ELF assemblers.  */\n-\n-#undef ASM_OUTPUT_EXTERNAL\n-\n /* Put jump tables in read-only memory, rather than in .text.  */\n-#undef JUMP_TABLES_IN_TEXT_SECTION\n #define JUMP_TABLES_IN_TEXT_SECTION 0\n \n-/* Disable AIX-ism that disables turning -B into -L if the argument specifies a\n-   relative file name.  This breaks setting GCC_EXEC_PREFIX to D:\\path under\n-   Windows.  */\n-#undef RELATIVE_PREFIX_NOT_LINKDIR\n-\n-/* Undefine some things which are defined by the generic svr4.h.  */\n-\n-#undef ASM_DECLARE_FUNCTION_NAME\n-#undef ASM_FILE_END\n-#undef ASM_OUTPUT_CONSTRUCTOR\n-#undef ASM_OUTPUT_DESTRUCTOR\n-#undef ASM_OUTPUT_DEF\n-#undef ASM_OUTPUT_EXTERNAL_LIBCALL\n-#undef HANDLE_PRAGMA_PACK\n-#undef READONLY_DATA_SECTION\n-#undef SELECT_SECTION\n-\n-/* Use the regular svr4 definitions.  */\n-\n-#include \"svr4.h\"\n-\n-/* Prefix and suffix to use to saving floating point */\n-#undef\tSAVE_FP_PREFIX\n-#undef\tSAVE_FP_SUFFIX\n+/* Prefix and suffix to use to saving floating point.  */\n #define\tSAVE_FP_PREFIX \"_savefpr_\"\n #define SAVE_FP_SUFFIX \"_l\"\n \n-/* Prefix and suffix to use to restoring floating point */\n-#undef\tRESTORE_FP_PREFIX\n-#undef\tRESTORE_FP_SUFFIX\n+/* Prefix and suffix to use to restoring floating point.  */\n #define\tRESTORE_FP_PREFIX \"_restfpr_\"\n #define RESTORE_FP_SUFFIX \"_l\"\n \n /* Type used for ptrdiff_t, as a string used in a declaration.  */\n-#undef\tPTRDIFF_TYPE\n #define PTRDIFF_TYPE \"int\"\n \n /* Type used for wchar_t, as a string used in a declaration.  */\n+/* Override svr4.h definition.  */\n #undef\tWCHAR_TYPE\n #define WCHAR_TYPE \"long int\"\n \n /* Width of wchar_t in bits.  */\n+/* Override svr4.h definition.  */\n #undef\tWCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n \n-/* Make int foo : 8 not cause structures to be aligned to an int boundary */\n-\n+/* Make int foo : 8 not cause structures to be aligned to an int boundary.  */\n+/* Override elfos.h definition.  */\n #undef\tPCC_BITFIELD_TYPE_MATTERS\n #define\tPCC_BITFIELD_TYPE_MATTERS (TARGET_BITFIELD_TYPE)\n \n@@ -399,21 +342,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef\tSTRICT_ALIGNMENT\n #define\tSTRICT_ALIGNMENT (TARGET_STRICT_ALIGN)\n \n-/* Define this macro to be the value 1 if unaligned accesses have a cost\n-   many times greater than aligned accesses, for example if they are\n-   emulated in a trap handler.  */\n-#define SLOW_UNALIGNED_ACCESS(MODE, ALIGN)\t\t\t\\\n-   ((STRICT_ALIGNMENT\t\t\t\t\t\t\\\n-     || (((MODE) == SFmode || (MODE) == DFmode || (MODE) == DImode) \\\n-         && (ALIGN) < 4)) ? 1 : 0)\n-\n /* Alignment in bits of the stack boundary.  Note, in order to allow building\n    one set of libraries with -mno-eabi instead of eabi libraries and non-eabi\n    versions, just use 64 as the stack boundary.  */\n #undef\tSTACK_BOUNDARY\n #define\tSTACK_BOUNDARY\t64\n \n-/* Real stack boundary as mandated by the appropriate ABI */\n+/* Real stack boundary as mandated by the appropriate ABI.  */\n #define ABI_STACK_BOUNDARY ((TARGET_EABI) ? 64 : 128)\n \n /* No data type wants to be aligned rounder than this.  */\n@@ -426,45 +361,47 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Use ELF style section commands.  */\n \n-#undef TEXT_SECTION_ASM_OP\n-#define TEXT_SECTION_ASM_OP\t\"\\t.section\\t\\\".text\\\"\"\n+#define\tTEXT_SECTION_ASM_OP\t\"\\t.section\\t\\\".text\\\"\"\n \n-#undef DATA_SECTION_ASM_OP\n-#define DATA_SECTION_ASM_OP\t\"\\t.section\\t\\\".data\\\"\"\n+#define\tDATA_SECTION_ASM_OP\t\"\\t.section\\t\\\".data\\\"\"\n \n-#undef BSS_SECTION_ASM_OP\n-#define BSS_SECTION_ASM_OP\t\"\\t.section\\t\\\".bss\\\"\"\n+#define\tBSS_SECTION_ASM_OP\t\"\\t.section\\t\\\".bss\\\"\"\n \n-#undef INIT_SECTION_ASM_OP\n-#define INIT_SECTION_ASM_OP \"\\t.section\\t\\\".init\\\",\\\"ax\\\"\"\n+/* Override elfos.h definition.  */\n+#undef\tINIT_SECTION_ASM_OP\n+#define\tINIT_SECTION_ASM_OP \"\\t.section\\t\\\".init\\\",\\\"ax\\\"\"\n \n-#undef FINI_SECTION_ASM_OP\n-#define FINI_SECTION_ASM_OP \"\\t.section\\t\\\".fini\\\",\\\"ax\\\"\"\n+/* Override elfos.h definition.  */\n+#undef\tFINI_SECTION_ASM_OP\n+#define\tFINI_SECTION_ASM_OP \"\\t.section\\t\\\".fini\\\",\\\"ax\\\"\"\n \n-#define TOC_SECTION_ASM_OP \"\\t.section\\t\\\".got\\\",\\\"aw\\\"\"\n+#define\tTOC_SECTION_ASM_OP \"\\t.section\\t\\\".got\\\",\\\"aw\\\"\"\n \n-/* Put PC relative got entries in .got2 */\n-#define MINIMAL_TOC_SECTION_ASM_OP \\\n+/* Put PC relative got entries in .got2.  */\n+#define\tMINIMAL_TOC_SECTION_ASM_OP \\\n   ((TARGET_RELOCATABLE || flag_pic) ? \"\\t.section\\t\\\".got2\\\",\\\"aw\\\"\" : \"\\t.section\\t\\\".got1\\\",\\\"aw\\\"\")\n \n-/* Put relocatable data in .data, not .rodata so initialized pointers can be updated */\n+/* Put relocatable data in .data, not .rodata so initialized pointers can be updated.  */\n+/* Override elfos.h definition.  */\n #undef\tCONST_SECTION_ASM_OP\n-#define CONST_SECTION_ASM_OP \\\n+#define\tCONST_SECTION_ASM_OP \\\n   ((TARGET_RELOCATABLE || flag_pic) ? \"\\t.section\\t\\\".data\\\"\\t# .rodata\" : \"\\t.section\\t\\\".rodata\\\"\")\n \n \n-#define SDATA_SECTION_ASM_OP \"\\t.section\\t\\\".sdata\\\",\\\"aw\\\"\"\n-#define SDATA2_SECTION_ASM_OP \"\\t.section\\t\\\".sdata2\\\",\\\"a\\\"\"\n-#define SBSS_SECTION_ASM_OP \\\n+#define\tSDATA_SECTION_ASM_OP \"\\t.section\\t\\\".sdata\\\",\\\"aw\\\"\"\n+#define\tSDATA2_SECTION_ASM_OP \"\\t.section\\t\\\".sdata2\\\",\\\"a\\\"\"\n+#define\tSBSS_SECTION_ASM_OP \\\n   ((DEFAULT_ABI == ABI_SOLARIS) ? \"\\t.section\\t\\\".sbss\\\",\\\"aw\\\"\" : \"\\t.section\\t\\\".sbss\\\",\\\"aw\\\",@nobits\")\n \n \n /* Besides the usual ELF sections, we need a toc section.  */\n-#undef EXTRA_SECTIONS\n-#define EXTRA_SECTIONS in_const, in_ctors, in_dtors, in_toc, in_sdata, in_sdata2, in_sbss, in_init, in_fini\n+/* Override elfos.h definition.  */\n+#undef\tEXTRA_SECTIONS\n+#define\tEXTRA_SECTIONS in_const, in_ctors, in_dtors, in_toc, in_sdata, in_sdata2, in_sbss, in_init, in_fini\n \n-#undef EXTRA_SECTION_FUNCTIONS\n-#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n+/* Override elfos.h definition.  */\n+#undef\tEXTRA_SECTION_FUNCTIONS\n+#define\tEXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n   CONST_SECTION_FUNCTION\t\t\t\t\t\t\\\n   CTORS_SECTION_FUNCTION\t\t\t\t\t\t\\\n   DTORS_SECTION_FUNCTION\t\t\t\t\t\t\\\n@@ -475,17 +412,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n   INIT_SECTION_FUNCTION\t\t\t\t\t\t\t\\\n   FINI_SECTION_FUNCTION\n \n-extern void toc_section (), sdata_section (), sdata2_section ();\n-extern void sbss_section ();\n-\n-#define TOC_SECTION_FUNCTION\t\t\t\t\t\t\\\n+#define\tTOC_SECTION_FUNCTION\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n toc_section ()\t\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   if (in_section != in_toc)\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       in_section = in_toc;\t\t\t\t\t\t\\\n-      if ((DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_NT)\t\t\\\n+      if (DEFAULT_ABI == ABI_AIX\t\t\t\t\t\\\n \t  && TARGET_MINIMAL_TOC\t\t\t\t\t\t\\\n \t  && !TARGET_RELOCATABLE)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n@@ -506,8 +440,7 @@ toc_section ()\t\t\t\t\t\t\t\t\\\n \t  else\t\t\t\t\t\t\t\t\\\n \t    fprintf (asm_out_file, \"%s\\n\", MINIMAL_TOC_SECTION_ASM_OP);\t\\\n \t}\t\t\t\t\t\t\t\t\\\n-      else if ((DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_NT)\t\\\n-\t       && !TARGET_RELOCATABLE)\t\t\t\t\t\\\n+      else if (DEFAULT_ABI == ABI_AIX && !TARGET_RELOCATABLE)\t\t\\\n \tfprintf (asm_out_file, \"%s\\n\", TOC_SECTION_ASM_OP);\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n@@ -522,7 +455,7 @@ toc_section ()\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n-#define SDATA_SECTION_FUNCTION\t\t\t\t\t\t\\\n+#define\tSDATA_SECTION_FUNCTION\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n sdata_section ()\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n@@ -533,7 +466,7 @@ sdata_section ()\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n-#define SDATA2_SECTION_FUNCTION\t\t\t\t\t\t\\\n+#define\tSDATA2_SECTION_FUNCTION\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n sdata2_section ()\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n@@ -544,7 +477,7 @@ sdata2_section ()\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n-#define SBSS_SECTION_FUNCTION\t\t\t\t\t\t\\\n+#define\tSBSS_SECTION_FUNCTION\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n sbss_section ()\t\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n@@ -555,7 +488,7 @@ sbss_section ()\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n-#define INIT_SECTION_FUNCTION\t\t\t\t\t\t\\\n+#define\tINIT_SECTION_FUNCTION\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n init_section ()\t\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n@@ -566,7 +499,7 @@ init_section ()\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n-#define FINI_SECTION_FUNCTION\t\t\t\t\t\t\\\n+#define\tFINI_SECTION_FUNCTION\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n fini_section ()\t\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n@@ -586,18 +519,18 @@ fini_section ()\t\t\t\t\t\t\t\t\\\n    Do not define this macro if you put all constants in the read-only\n    data section.  */\n \n-extern void rs6000_select_rtx_section (), rs6000_select_section ();\n-\n-#undef SELECT_RTX_SECTION\n-#define SELECT_RTX_SECTION(MODE, X) rs6000_select_rtx_section (MODE, X)\n+/* Override elfos.h definition.  */\n+#undef\tSELECT_RTX_SECTION\n+#define\tSELECT_RTX_SECTION(MODE, X) rs6000_select_rtx_section (MODE, X)\n \n /* A C statement or statements to switch to the appropriate\n    section for output of DECL.  DECL is either a `VAR_DECL' node\n    or a constant of some sort.  RELOC indicates whether forming\n    the initial value of DECL requires link-time relocations.  */\n \n-#undef SELECT_SECTION\n-#define SELECT_SECTION(DECL,RELOC) rs6000_select_section (DECL, RELOC)\n+/* Override elfos.h definition.  */\n+#undef\tSELECT_SECTION\n+#define\tSELECT_SECTION(DECL,RELOC) rs6000_select_section (DECL, RELOC)\n \n /* Return non-zero if this entry is to be written into the constant pool\n    in a special way.  We do so if this is a SYMBOL_REF, LABEL_REF or a CONST\n@@ -611,7 +544,7 @@ extern void rs6000_select_rtx_section (), rs6000_select_section ();\n    allow floating point constants in the TOC if -mrelocatable.  */\n \n #undef\tASM_OUTPUT_SPECIAL_POOL_ENTRY_P\n-#define ASM_OUTPUT_SPECIAL_POOL_ENTRY_P(X)\t\t\t\t\\\n+#define\tASM_OUTPUT_SPECIAL_POOL_ENTRY_P(X)\t\t\t\t\\\n   (TARGET_TOC\t\t\t\t\t\t\t\t\\\n    && (GET_CODE (X) == SYMBOL_REF\t\t\t\t\t\\\n        || (GET_CODE (X) == CONST && GET_CODE (XEXP (X, 0)) == PLUS\t\\\n@@ -634,37 +567,42 @@ extern void rs6000_select_rtx_section (), rs6000_select_section ();\n \n extern int rs6000_pic_labelno;\n \n+/* Override elfos.h definition.  */\n #undef\tASM_DECLARE_FUNCTION_NAME\n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n-    const char *orig_name;\t\t\t\t\t\t\\\n     const char *init_ptr = (TARGET_64BIT) ? \".quad\" : \".long\";\t\t\\\n-    STRIP_NAME_ENCODING (orig_name, NAME);\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    if (TARGET_RELOCATABLE && (get_pool_size () != 0 || profile_flag))\t\\\n+    if (TARGET_RELOCATABLE && (get_pool_size () != 0 || profile_flag)\t\\\n+\t&& uses_TOC())\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tchar buf[256];\t\t\t\t\t\t\t\\\n \tconst char *buf_ptr;\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \tASM_OUTPUT_INTERNAL_LABEL (FILE, \"LCL\", rs6000_pic_labelno);\t\\\n \t\t\t\t\t\t\t\t\t\\\n \tASM_GENERATE_INTERNAL_LABEL (buf, \"LCTOC\", 1);\t\t\t\\\n-\tSTRIP_NAME_ENCODING (buf_ptr, buf);\t\t\t\t\\\n-\tfprintf (FILE, \"\\t%s %s-\", init_ptr, buf_ptr);\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n+\tfprintf (FILE, \"\\t%s \", init_ptr);\t\t\t\t\\\n+\tassemble_name (FILE, buf);\t\t\t\t\t\\\n+\tputc ('-', FILE);\t\t\t\t\t\t\\\n \tASM_GENERATE_INTERNAL_LABEL (buf, \"LCF\", rs6000_pic_labelno);\t\\\n-\tfprintf (FILE, \"%s\\n\", buf_ptr);\t\t\t\t\\\n+\tassemble_name (FILE, buf);\t\t\t\t\t\\\n+\tputc ('\\n', FILE);\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t %s,\", TYPE_ASM_OP, orig_name);\t\t\\\n+    fprintf (FILE, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t\t\\\n+    assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n+    putc (',', FILE);\t\t\t\t\t\t\t\\\n     fprintf (FILE, TYPE_OPERAND_FMT, \"function\");\t\t\t\\\n     putc ('\\n', FILE);\t\t\t\t\t\t\t\\\n     ASM_DECLARE_RESULT (FILE, DECL_RESULT (DECL));\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    if (DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_NT)\t\t\\\n+    if (DEFAULT_ABI == ABI_AIX)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tconst char *desc_name = orig_name;\t\t\t\t\\\n+\tconst char *desc_name, *orig_name;\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n+        STRIP_NAME_ENCODING (orig_name, NAME);\t\t\t\t\\\n+        desc_name = orig_name;\t\t\t\t\t\t\\\n \twhile (*desc_name == '.')\t\t\t\t\t\\\n \t  desc_name++;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n@@ -679,23 +617,72 @@ extern int rs6000_pic_labelno;\n \t  fprintf (FILE, \"\\t%s 0\\n\", init_ptr);\t\t\t\t\\\n \tfprintf (FILE, \"\\t.previous\\n\");\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"%s:\\n\", orig_name);\t\t\t\t\t\\\n+    ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n   } while (0)\n \n+/* A C compound statement that outputs the assembler code for a thunk function,\n+    used to implement C++ virtual function calls with multiple inheritance.  The\n+    thunk acts as a wrapper around a virtual function, adjusting the implicit\n+    object parameter before handing control off to the real function.\n+\n+    First, emit code to add the integer DELTA to the location that contains the\n+    incoming first argument.  Assume that this argument contains a pointer, and\n+    is the one used to pass the this' pointer in C++.  This is the incoming\n+    argument *before* the function prologue, e.g. %o0' on a sparc.  The\n+    addition must preserve the values of all other incoming arguments.\n+\n+    After the addition, emit code to jump to FUNCTION, which is a\n+    FUNCTION_DECL'.  This is a direct pure jump, not a call, and does not touch\n+    the return address.  Hence returning from FUNCTION will return to whoever\n+    called the current thunk'.\n+\n+    The effect must be as if FUNCTION had been called directly with the adjusted\n+    first argument.  This macro is responsible for emitting all of the code for\n+    a thunk function; FUNCTION_PROLOGUE' and FUNCTION_EPILOGUE' are not\n+    invoked.\n+\n+    The THUNK_FNDECL is redundant.  (DELTA and FUNCTION have already been\n+    extracted from it.)  It might possibly be useful on some targets, but\n+    probably not.\n+\n+    If you do not define this macro, the target-independent code in the C++\n+    frontend will generate a less efficient heavyweight thunk that calls\n+    FUNCTION instead of jumping to it.  The generic approach does not support\n+    varargs.  */\n+\n+#define\tASM_OUTPUT_MI_THUNK(FILE, THUNK_FNDECL, DELTA, FUNCTION) \\\n+  output_mi_thunk (FILE, THUNK_FNDECL, DELTA, FUNCTION)\n+\n /* How to renumber registers for dbx and gdb.  */\n \n-#define DBX_REGISTER_NUMBER(REGNO) (REGNO)\n+#define\tDBX_REGISTER_NUMBER(REGNO) (REGNO)\n+\n+/* The USER_LABEL_PREFIX stuff is affected by the -fleading-underscore\n+   flag.  The LOCAL_LABEL_PREFIX variable is used by dbxelf.h.  */\n+\n+#define\tLOCAL_LABEL_PREFIX \".\"\n+#define\tUSER_LABEL_PREFIX \"\"\n \n /* svr4.h overrides ASM_OUTPUT_INTERNAL_LABEL.  */\n \n-#undef ASM_OUTPUT_INTERNAL_LABEL_PREFIX\n-#define ASM_OUTPUT_INTERNAL_LABEL_PREFIX(FILE,PREFIX)\t\\\n-  fprintf (FILE, \".%s\", PREFIX)\n+#define\tASM_OUTPUT_INTERNAL_LABEL_PREFIX(FILE,PREFIX)\t\\\n+  asm_fprintf (FILE, \"%L%s\", PREFIX)\n+\n+#define\tASM_OUTPUT_LABEL(FILE,NAME)\t\\\n+  (assemble_name (FILE, NAME), fputs (\":\\n\", FILE))\n+\n+/* This is how to output a command to make the user-level label named NAME\n+   defined for reference from other files.  */\n+\n+#define\tASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n+  do { fputs (\"\\t.globl \", FILE);\t\\\n+       assemble_name (FILE, NAME); putc ('\\n', FILE);} while (0)\n \n /* This is how to allocate empty space in some section.  Use .space\n    instead of .zero because the Solaris PowerPC assembler doesn't\n    like it, and gas accepts either syntax.  */\n \n+/* Override elfos.h definition.  */\n #undef\tSKIP_ASM_OP\n #define SKIP_ASM_OP\t\".space\"\n \n@@ -704,16 +691,13 @@ extern int rs6000_pic_labelno;\n    the linker seems to want the alignment of data objects\n    to depend on their types.  We do exactly that here.  */\n \n-#ifndef LOCAL_ASM_OP\n-#define LOCAL_ASM_OP\t\".local\"\n-#endif\n+#define\tLOCAL_ASM_OP\t\".local\"\n \n-#ifndef LCOMM_ASM_OP\n-#define LCOMM_ASM_OP\t\".lcomm\"\n-#endif\n+#define\tLCOMM_ASM_OP\t\".lcomm\"\n \n-#undef ASM_OUTPUT_ALIGNED_LOCAL\n-#define ASM_OUTPUT_ALIGNED_LOCAL(FILE, NAME, SIZE, ALIGN)\t\t\\\n+/* Override elfos.h definition.  */\n+#undef\tASM_OUTPUT_ALIGNED_LOCAL\n+#define\tASM_OUTPUT_ALIGNED_LOCAL(FILE, NAME, SIZE, ALIGN)\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   if (rs6000_sdata != SDATA_NONE && (SIZE) > 0\t\t\t\t\\\n       && (SIZE) <= g_switch_value)\t\t\t\t\t\\\n@@ -737,40 +721,45 @@ do {\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n-/* Describe how to emit uninitialized external linkage items  */\n-#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN)\t\t\\\n+/* Describe how to emit uninitialized external linkage items.  */\n+#define\tASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN)\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   ASM_GLOBALIZE_LABEL (FILE, NAME);\t\t\t\t\t\\\n   ASM_OUTPUT_ALIGNED_LOCAL (FILE, NAME, SIZE, ALIGN);\t\t\t\\\n } while (0)\n \n-/* Switch  Recognition by gcc.c.  Add -G xx support */\n+/* Switch  Recognition by gcc.c.  Add -G xx support.  */\n \n-#undef SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR)\t\t\t\t\t\t\\\n+/* Override svr4.h definition.  */\n+#undef\tSWITCH_TAKES_ARG\n+#define\tSWITCH_TAKES_ARG(CHAR)\t\t\t\t\t\t\\\n   ((CHAR) == 'D' || (CHAR) == 'U' || (CHAR) == 'o'\t\t\t\\\n    || (CHAR) == 'e' || (CHAR) == 'T' || (CHAR) == 'u'\t\t\t\\\n    || (CHAR) == 'I' || (CHAR) == 'm' || (CHAR) == 'x'\t\t\t\\\n    || (CHAR) == 'L' || (CHAR) == 'A' || (CHAR) == 'V'\t\t\t\\\n    || (CHAR) == 'B' || (CHAR) == 'b' || (CHAR) == 'G')\n \n /* Output .file.  */\n-#undef ASM_FILE_START\n-#define ASM_FILE_START(FILE)\t\t\t\t\t\t\\\n+/* Override elfos.h definition.  */\n+#undef\tASM_FILE_START\n+#define\tASM_FILE_START(FILE)\t\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   output_file_directive ((FILE), main_input_filename);\t\t\t\\\n   rs6000_file_start (FILE, TARGET_CPU_DEFAULT);\t\t\t\t\\\n } while (0)\n \n \n+extern int fixuplabelno;\n+\n /* This is how to output an assembler line defining an `int' constant.\n    For -mrelocatable, we mark all addresses that need to be fixed up\n    in the .fixup section.  */\n+/* Override rs6000.h definition.  */\n #undef\tASM_OUTPUT_INT\n #define ASM_OUTPUT_INT(FILE,VALUE)\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   static int recurse = 0;\t\t\t\t\t\t\\\n-  if ((TARGET_RELOCATABLE || flag_pic)\t\t\t\t\t\\\n+  if (TARGET_RELOCATABLE\t\t\t\t\t\t\\\n       && in_section != in_toc\t\t\t\t\t\t\\\n       && in_section != in_text\t\t\t\t\t\t\\\n       && in_section != in_ctors\t\t\t\t\t\t\\\n@@ -780,29 +769,28 @@ do {\t\t\t\t\t\t\t\t\t\\\n       && GET_CODE (VALUE) != CONST_DOUBLE\t\t\t\t\\\n       && CONSTANT_P (VALUE))\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      static int labelno = 0;\t\t\t\t\t\t\\\n       char buf[256];\t\t\t\t\t\t\t\\\n-      const char *p;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n       recurse = 1;\t\t\t\t\t\t\t\\\n-      ASM_GENERATE_INTERNAL_LABEL (buf, \"LCP\", labelno++);\t\t\\\n-      STRIP_NAME_ENCODING (p, buf);\t\t\t\t\t\\\n-      fprintf (FILE, \"%s:\\n\", p);\t\t\t\t\t\\\n+      ASM_GENERATE_INTERNAL_LABEL (buf, \"LCP\", fixuplabelno);\t\t\\\n+      fixuplabelno++;\t\t\t\t\t\t\t\\\n+      ASM_OUTPUT_LABEL (FILE, buf);\t\t\t\t\t\\\n       fprintf (FILE, \"\\t.long (\");\t\t\t\t\t\\\n       output_addr_const (FILE, (VALUE));\t\t\t\t\\\n       fprintf (FILE, \")@fixup\\n\");\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t.section\\t\\\".fixup\\\",\\\"aw\\\"\\n\");\t\t\t\\\n+      fprintf (FILE, \"\\t.section\\t\\\".fixup\\\",\\\"aw\\\"\\n\");\t\t\\\n       ASM_OUTPUT_ALIGN (FILE, 2);\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t.long\\t%s\\n\", p);\t\t\t\t\\\n-      fprintf (FILE, \"\\t.previous\\n\");\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t.long\\t\");\t\t\t\t\t\\\n+      assemble_name (FILE, buf);\t\t\t\t\t\\\n+      fprintf (FILE, \"\\n\\t.previous\\n\");\t\t\t\t\\\n       recurse = 0;\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n-  /* Remove initial .'s to turn a -mcall-aixdesc or -mcall-nt function\t\\\n+  /* Remove initial .'s to turn a -mcall-aixdesc function\t\t\\\n      address into the address of the descriptor, not the function\t\\\n      itself.  */\t\t\t\t\t\t\t\\\n   else if (GET_CODE (VALUE) == SYMBOL_REF\t\t\t\t\\\n \t   && XSTR (VALUE, 0)[0] == '.'\t\t\t\t\t\\\n-\t   && (DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_NT))\t\\\n+\t   && DEFAULT_ABI == ABI_AIX)\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       const char *name = XSTR (VALUE, 0);\t\t\t\t\\\n       while (*name == '.')\t\t\t\t\t\t\\\n@@ -818,34 +806,66 @@ do {\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n+/* This is how to output an assembler line defining an address \n+   constant for the dwarf call unwinding information.\n+   For -mrelocatable, we mark all addresses that need to be fixed up\n+   in the .fixup section.  */\n+\n+#define\tASM_OUTPUT_DWARF_ADDR(FILE,LABEL)\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_RELOCATABLE)\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      char buf[256];\t\t\t\t\t\t\t\\\n+      const char *p;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      ASM_GENERATE_INTERNAL_LABEL (buf, \"LCP\", fixuplabelno);\t\t\\\n+      fixuplabelno++;\t\t\t\t\t\t\t\\\n+      ASM_OUTPUT_LABEL (FILE, buf);\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t.%dbyte\\t\", POINTER_SIZE / BITS_PER_UNIT);\t\\\n+      assemble_name (FILE, LABEL);\t\t\t\t\t\\\n+      fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t.section \\\".fixup\\\",\\\"aw\\\"\\n\");\t\t\t\\\n+      ASM_OUTPUT_ALIGN (FILE, 2);\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t.long\\t\");\t\t\t\t\t\\\n+      assemble_name (FILE, buf);\t\t\t\t\t\\\n+      fprintf (FILE, \"\\n\\t.previous\\n\");\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t.%dbyte\\t\", POINTER_SIZE / BITS_PER_UNIT);\t\\\n+      assemble_name (FILE, LABEL);\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+} while (0)\n+\n /* This is the end of what might become sysv4.h.  */\n \n /* Allow stabs and dwarf, for now, make stabs the default debugging type,\n-   not dwarf since G++ doesn't support dwarf. */\n+   not dwarf since G++ doesn't support dwarf.  */\n #undef\tPREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+#define\tPREFERRED_DEBUGGING_TYPE DBX_DEBUG\n \n #define\tDBX_DEBUGGING_INFO\n-#define\tDWARF_DEBUGGING_INFO\n \n /* If we are referencing a function that is static or is known to be\n    in this file, make the SYMBOL_REF special.  We can use this to indicate\n    that we can branch to this function without emitting a no-op after the\n-   call.  For real AIX and NT calling sequences, we also replace the\n+   call.  For real AIX calling sequences, we also replace the\n    function name with the real name (1 or 2 leading .'s), rather than\n    the function descriptor name.  This saves a lot of overriding code\n-   to readd the prefixes.  */\n+   to read the prefixes.  */\n \n #undef\tENCODE_SECTION_INFO\n-#define ENCODE_SECTION_INFO(DECL) rs6000_encode_section_info (DECL)\n+#define\tENCODE_SECTION_INFO(DECL) rs6000_encode_section_info (DECL)\n \n-extern void rs6000_encode_section_info ();\n+/* The ELF version doesn't encode [DS] or whatever at the end of symbols.  */\n+\n+#define\tRS6000_OUTPUT_BASENAME(FILE, NAME)\t\\\n+    assemble_name (FILE, NAME)\n \n /* This macro gets just the user-specified name\n    out of the string in a SYMBOL_REF.  Discard\n-   a leading * or @. */\n-#undef  STRIP_NAME_ENCODING\n-#define STRIP_NAME_ENCODING(VAR,SYMBOL_NAME)\t\t\t\t\\\n+   a leading * or @.  */\n+#define\tSTRIP_NAME_ENCODING(VAR,SYMBOL_NAME)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   const char *_name = SYMBOL_NAME;\t\t\t\t\t\\\n   while (*_name == '*' || *_name == '@')\t\t\t\t\\\n@@ -856,32 +876,36 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* This is how to output a reference to a user-level label named NAME.\n    `assemble_name' uses this.  */\n \n-#undef ASM_OUTPUT_LABELREF\n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  const char *_name = NAME;\t\t\t\t\t\t\\\n-  while (*_name == '*' || *_name == '@')\t\t\t\t\\\n-    _name++;\t\t\t\t\t\t\t\t\\\n-  fputs (_name, FILE);\t\t\t\t\t\t\t\\\n+/* Override elfos.h definition.  */\n+#undef\tASM_OUTPUT_LABELREF\n+#define\tASM_OUTPUT_LABELREF(FILE,NAME)\t\t\\\n+do {\t\t\t\t\t\t\\\n+  const char *_name = NAME;\t\t\t\\\n+  if (*_name == '@')\t\t\t\t\\\n+    _name++;\t\t\t\t\t\\\n+ \t\t\t\t\t\t\\\n+  if (*_name == '*')\t\t\t\t\\\n+    fprintf (FILE, \"%s\", _name + 1);\t\t\\\n+  else\t\t\t\t\t\t\\\n+    asm_fprintf (FILE, \"%U%s\", _name);\t\t\\\n } while (0)\n \n-/*\n- * Switch into a generic section.\n- *\n- * We make the section read-only and executable for a function decl,\n- * read-only for a const data decl, and writable for a non-const data decl.\n- *\n- * If the section has already been defined, we must not\n- * emit the attributes here. The SVR4 assembler does not\n- * recognize section redefinitions.\n- * If DECL is NULL, no attributes are emitted.\n- *\n- * Note, Solaris as doesn't like @nobits, and gas can handle .sbss without\n- * needing @nobits.\n- */\n+/* Switch into a generic section.\n+\n+   We make the section read-only and executable for a function decl,\n+   read-only for a const data decl, and writable for a non-const data decl.\n+\n+   If the section has already been defined, we must not\n+   emit the attributes here. The SVR4 assembler does not\n+   recognize section redefinitions.\n+   If DECL is NULL, no attributes are emitted.\n+\n+   Note, Solaris as doesn't like @nobits, and gas can handle .sbss without\n+   needing @nobits.  */\n \n+/* Override elfos.h definition.  */\n #undef\tASM_OUTPUT_SECTION_NAME\n-#define ASM_OUTPUT_SECTION_NAME(FILE, DECL, NAME, RELOC)\t\t\\\n+#define\tASM_OUTPUT_SECTION_NAME(FILE, DECL, NAME, RELOC)\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   static struct section_info\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n@@ -923,8 +947,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n-#undef ASM_OUTPUT_CONSTRUCTOR\n-#define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n+/* Override elfos.h definition.  */\n+#undef\tASM_OUTPUT_CONSTRUCTOR\n+#define\tASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     if (DEFAULT_ABI != ABI_SOLARIS)\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n@@ -943,8 +968,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* A C statement (sans semicolon) to output an element in the table of\n    global destructors.  */\n-#undef ASM_OUTPUT_DESTRUCTOR\n-#define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n+/* Override elfos.h definition.  */\n+#undef\tASM_OUTPUT_DESTRUCTOR\n+#define\tASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     if (DEFAULT_ABI != ABI_SOLARIS)\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n@@ -968,16 +994,17 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* This is the end of what might become sysv4dbx.h.  */\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC System V.4)\");\n+/* Override rs6000.h definition.  */\n+#undef\tTARGET_VERSION\n+#define\tTARGET_VERSION fprintf (stderr, \" (PowerPC System V.4)\");\n \f\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \\\n+#define\tCPP_PREDEFINES \\\n   \"-DPPC -Dunix -D__svr4__ -Asystem(unix) -Asystem(svr4) -Acpu(powerpc) -Amachine(powerpc)\"\n \n-/* Pass various options to the assembler */\n-#undef ASM_SPEC\n-#define ASM_SPEC \"%(asm_cpu) \\\n+/* Pass various options to the assembler.  */\n+/* Override svr4.h definition.  */\n+#undef\tASM_SPEC\n+#define\tASM_SPEC \"%(asm_cpu) \\\n %{.s: %{mregnames} %{mno-regnames}} %{.S: %{mregnames} %{mno-regnames}} \\\n %{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n %{mrelocatable} %{mrelocatable-lib} %{fpic:-K PIC} %{fPIC:-K PIC} \\\n@@ -987,34 +1014,26 @@ do {\t\t\t\t\t\t\t\t\t\\\n     %{mcall-solaris: -mlittle -msolaris} \\\n     %{mcall-linux: -mbig} }}}}\"\n \n-#ifndef CC1_ENDIAN_BIG_SPEC\n-#define CC1_ENDIAN_BIG_SPEC \"\"\n-#endif\n+#define\tCC1_ENDIAN_BIG_SPEC \"\"\n \n-#ifndef CC1_ENDIAN_LITTLE_SPEC\n-#define CC1_ENDIAN_LITTLE_SPEC \"\\\n+#define\tCC1_ENDIAN_LITTLE_SPEC \"\\\n %{!mstrict-align: %{!mno-strict-align: \\\n \t-mstrict-align \\\n }}\"\n-#endif\n \n-#ifndef CC1_ENDIAN_DEFAULT_SPEC\n-#define CC1_ENDIAN_DEFAULT_SPEC \"%(cc1_endian_big_spec)\"\n-#endif\n+#define\tCC1_ENDIAN_DEFAULT_SPEC \"%(cc1_endian_big_spec)\"\n \n-#undef CC1_SPEC\n-/* Pass -G xxx to the compiler and set correct endian mode */\n-#define CC1_SPEC \"%{G*} \\\n+/* Pass -G xxx to the compiler and set correct endian mode.  */\n+#define\tCC1_SPEC \"%{G*} \\\n %{mlittle: %(cc1_endian_little)} %{!mlittle: %{mlittle-endian: %(cc1_endian_little)}} \\\n %{mbig: %(cc1_endian_big)} %{!mbig: %{mbig-endian: %(cc1_endian_big)}} \\\n %{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n-    %{mcall-nt: -mlittle %(cc1_endian_little) } \\\n     %{mcall-aixdesc: -mbig %(cc1_endian_big) } \\\n     %{mcall-solaris: -mlittle %(cc1_endian_little) } \\\n     %{mcall-linux: -mbig %(cc1_endian_big) } \\\n-    %{!mcall-nt: %{!mcall-aixdesc: %{!mcall-solaris: %{!mcall-linux: \\\n+    %{!mcall-aixdesc: %{!mcall-solaris: %{!mcall-linux: \\\n \t    %(cc1_endian_default) \\\n-    }}}} \\\n+    }}} \\\n }}}} \\\n %{mcall-solaris: -mregnames } \\\n %{mno-sdata: -msdata=none } \\\n@@ -1027,8 +1046,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{mno-sdata: -msdata=none} \\\n %{profile: -p}\"\n \n-/* Don't put -Y P,<path> for cross compilers */\n-#undef LINK_PATH_SPEC\n+/* Don't put -Y P,<path> for cross compilers.  */\n #ifndef CROSS_COMPILE\n #define LINK_PATH_SPEC \"\\\n %{!R*:%{L*:-R %*}} \\\n@@ -1045,8 +1063,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define LINK_PATH_SPEC \"\"\n #endif\n \n-/* Default starting address if specified */\n-#ifndef LINK_START_SPEC\n+/* Default starting address if specified.  */\n #define LINK_START_SPEC \"\\\n %{mads: %(link_start_ads) } \\\n %{myellowknife: %(link_start_yellowknife) } \\\n@@ -1055,14 +1072,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{mcall-linux: %(link_start_linux) } \\\n %{mcall-solaris: %(link_start_solaris) } \\\n %{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(link_start_default) }}}}}}\"\n-#endif\n \n-#ifndef\tLINK_START_DEFAULT_SPEC\n #define LINK_START_DEFAULT_SPEC \"\"\n-#endif\n \n-#undef LINK_SPEC\n-#define LINK_SPEC \"\\\n+/* Override svr4.h definition.  */\n+#undef\tLINK_SPEC\n+#define\tLINK_SPEC \"\\\n %{h*} %{v:-V} %{G*} \\\n %{Wl,*:%*} %{YP,*} %{R*} \\\n %{Qy:} %{!Qn:-Qy} \\\n@@ -1076,7 +1091,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define NO_SHARED_LIB_SUPPORT\n #endif\n \n-#undef  LINK_SHLIB_SPEC\n #ifndef NO_SHARED_LIB_SUPPORT\n /* Shared libraries are default.  */\n #define LINK_SHLIB_SPEC \"\\\n@@ -1097,13 +1111,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n #endif\n \n /* Override the default target of the linker.  */\n-#undef\tLINK_TARGET_SPEC\n #define\tLINK_TARGET_SPEC \"\\\n %{mlittle: -oformat elf32-powerpcle } %{mlittle-endian: -oformat elf32-powerpcle } \\\n-%{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: %{mcall-solaris: -oformat elf32-powerpcle}}}}}\"\n+%{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n+    %{mcall-solaris: -oformat elf32-powerpcle} \\\n+  }}}}\"\n \n-/* Any specific OS flags */\n-#ifndef LINK_OS_SPEC\n+/* Any specific OS flags.  */\n #define LINK_OS_SPEC \"\\\n %{mads: %(link_os_ads) } \\\n %{myellowknife: %(link_os_yellowknife) } \\\n@@ -1112,56 +1126,55 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{mcall-linux: %(link_os_linux) } \\\n %{mcall-solaris: %(link_os_solaris) } \\\n %{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(link_os_default) }}}}}}\"\n-#endif\n \n-#ifndef\tLINK_OS_DEFAULT_SPEC\n #define LINK_OS_DEFAULT_SPEC \"\"\n-#endif\n \n-#undef\tCPP_SYSV_SPEC\n #define CPP_SYSV_SPEC \\\n \"%{mrelocatable*: -D_RELOCATABLE} \\\n %{fpic: -D__PIC__=1 -D__pic__=1} \\\n %{!fpic: %{fPIC: -D__PIC__=2 -D__pic__=2}} \\\n-%{mcall-sysv: -D_CALL_SYSV} %{mcall-nt: -D_CALL_NT} \\\n+%{mcall-sysv: -D_CALL_SYSV} \\\n %{mcall-aix: -D_CALL_AIX} %{mcall-aixdesc: -D_CALL_AIX -D_CALL_AIXDESC} \\\n-%{!mcall-sysv: %{!mcall-aix: %{!mcall-aixdesc: %{!mcall-nt: %(cpp_sysv_default) }}}} \\\n-%{msoft-float: -D_SOFT_FLOAT} %{mcpu=403: -D_SOFT_FLOAT}\"\n+%{!mcall-sysv: %{!mcall-aix: %{!mcall-aixdesc: %(cpp_sysv_default) }}} \\\n+%{msoft-float: -D_SOFT_FLOAT} \\\n+%{!msoft-float: %{!mhard-float: \\\n+    %{mcpu=401: -D_SOFT_FLOAT} \\\n+    %{mcpu=403: -D_SOFT_FLOAT} \\\n+    %{mcpu=ec603e: -D_SOFT_FLOAT} \\\n+    %{mcpu=801: -D_SOFT_FLOAT} \\\n+    %{mcpu=821: -D_SOFT_FLOAT} \\\n+    %{mcpu=823: -D_SOFT_FLOAT} \\\n+    %{mcpu=860: -D_SOFT_FLOAT} \\\n+    %{!mcpu*: %(cpp_float_default) }}}\"\n+\n+/* Whether floating point is disabled by default.  */\n+#define\tCPP_FLOAT_DEFAULT_SPEC \"\"\n \n-#undef\tCPP_SYSV_DEFAULT_SPEC\n #define\tCPP_SYSV_DEFAULT_SPEC \"-D_CALL_SYSV\"\n \n-#ifndef CPP_ENDIAN_BIG_SPEC\n #define CPP_ENDIAN_BIG_SPEC \"-D_BIG_ENDIAN -D__BIG_ENDIAN__ -Amachine(bigendian)\"\n-#endif\n \n-#ifndef CPP_ENDIAN_LITTLE_SPEC\n #define CPP_ENDIAN_LITTLE_SPEC \"-D_LITTLE_ENDIAN -D__LITTLE_ENDIAN__ -Amachine(littleendian)\"\n-#endif\n \n-#ifndef CPP_ENDIAN_SOLARIS_SPEC\n #define CPP_ENDIAN_SOLARIS_SPEC \"-D__LITTLE_ENDIAN__ -Amachine(littleendian)\"\n-#endif\n \n /* For solaris, don't define _LITTLE_ENDIAN, it conflicts with a header file.  */\n-#undef\tCPP_ENDIAN_SPEC\n #define\tCPP_ENDIAN_SPEC \\\n \"%{mlittle: %(cpp_endian_little) } \\\n %{mlittle-endian: %(cpp_endian_little) } \\\n %{mbig: %(cpp_endian_big) } \\\n %{mbig-endian: %(cpp_endian_big) } \\\n %{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n     %{mcall-solaris: %(cpp_endian_solaris) } \\\n-    %{mcall-nt: %(cpp_endian_little) } \\\n     %{mcall-linux: %(cpp_endian_big) } \\\n     %{mcall-aixdesc:  %(cpp_endian_big) } \\\n-    %{!mcall-solaris: %{!mcall-linux: %{!mcall-nt: %{!mcall-aixdesc: %(cpp_endian_default) }}}}}}}}\"\n+    %{!mcall-solaris: %{!mcall-linux: %{!mcall-aixdesc: %(cpp_endian_default) }}}}}}}\"\n \n-#undef\tCPP_ENDIAN_DEFAULT_SPEC\n #define\tCPP_ENDIAN_DEFAULT_SPEC \"%(cpp_endian_big)\"\n \n-#undef CPP_SPEC\n-#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE} %(cpp_sysv) %(cpp_endian) %(cpp_cpu) \\\n+/* Override rs6000.h definition.  */\n+#undef\tCPP_SPEC\n+#define\tCPP_SPEC \"%{posix: -D_POSIX_SOURCE} %(cpp_sysv) %(cpp_endian) %(cpp_cpu) \\\n %{mads: %(cpp_os_ads) } \\\n %{myellowknife: %(cpp_os_yellowknife) } \\\n %{mmvme: %(cpp_os_mvme) } \\\n@@ -1170,11 +1183,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{mcall-solaris: %(cpp_os_solaris) } \\\n %{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(cpp_os_default) }}}}}}\"\n \n-#ifndef CPP_OS_DEFAULT_SPEC\n-#define CPP_OS_DEFAULT_SPEC \"\"\n-#endif\n+#define\tCPP_OS_DEFAULT_SPEC \"\"\n \n-#undef  STARTFILE_SPEC\n+/* Override svr4.h definition.  */\n+#undef\tSTARTFILE_SPEC\n #define\tSTARTFILE_SPEC \"\\\n %{mads: %(startfile_ads) } \\\n %{myellowknife: %(startfile_yellowknife) } \\\n@@ -1184,9 +1196,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{mcall-solaris: %(startfile_solaris) } \\\n %{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(startfile_default) }}}}}}\"\n \n-#undef\tSTARTFILE_DEFAULT_SPEC\n #define\tSTARTFILE_DEFAULT_SPEC \"\"\n \n+/* Override svr4.h definition.  */\n #undef\tLIB_SPEC\n #define\tLIB_SPEC \"\\\n %{mads: %(lib_ads) } \\\n@@ -1197,13 +1209,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{mcall-solaris: %(lib_solaris) } \\\n %{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(lib_default) }}}}}}\"\n \n+/* Override rs6000.h definition.  */\n #undef\tLIBGCC_SPEC\n #define\tLIBGCC_SPEC \"libgcc.a%s\"\n \n-#ifndef LIB_DEFAULT_SPEC\n #define LIB_DEFAULT_SPEC \"\"\n-#endif\n \n+/* Override svr4.h definition.  */\n #undef\tENDFILE_SPEC\n #define\tENDFILE_SPEC \"\\\n %{mads: ecrtn.o%s} \\\n@@ -1212,113 +1224,64 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{msim: ecrtn.o%s} \\\n %{mcall-linux: %(endfile_linux) } \\\n %{mcall-solaris: scrtn.o%s} \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(endfile_default) }}}}}}\"\n+%{mvxworks: %(endfile_vxworks) } \\\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %{!mvxworks: %(endfile_default) }}}}}}}\"\n \n-#undef\tENDFILE_DEFAULT_SPEC\n #define\tENDFILE_DEFAULT_SPEC \"\"\n \n /* Motorola ADS support.  */\n-#ifndef\tLIB_ADS_SPEC\n #define LIB_ADS_SPEC \"--start-group -lads -lc --end-group\"\n-#endif\n \n-#ifndef\tSTARTFILE_ADS_SPEC\n #define\tSTARTFILE_ADS_SPEC \"ecrti.o%s crt0.o%s\"\n-#endif\n \n-#ifndef\tENDFILE_ADS_SPEC\n #define\tENDFILE_ADS_SPEC \"ecrtn.o%s\"\n-#endif\n \n-#ifndef LINK_START_ADS_SPEC\n #define LINK_START_ADS_SPEC \"-T ads.ld%s\"\n-#endif\n \n-#ifndef LINK_OS_ADS_SPEC\n #define LINK_OS_ADS_SPEC \"\"\n-#endif\n \n-#ifndef CPP_OS_ADS_SPEC\n #define CPP_OS_ADS_SPEC \"\"\n-#endif\n \n /* Motorola Yellowknife support.  */\n-#ifndef\tLIB_YELLOWKNIFE_SPEC\n #define LIB_YELLOWKNIFE_SPEC \"--start-group -lyk -lc --end-group\"\n-#endif\n \n-#ifndef\tSTARTFILE_YELLOWKNIFE_SPEC\n #define\tSTARTFILE_YELLOWKNIFE_SPEC \"ecrti.o%s crt0.o%s\"\n-#endif\n \n-#ifndef\tENDFILE_YELLOWKNIFE_SPEC\n #define\tENDFILE_YELLOWKNIFE_SPEC \"ecrtn.o%s\"\n-#endif\n \n-#ifndef LINK_START_YELLOWKNIFE_SPEC\n #define LINK_START_YELLOWKNIFE_SPEC \"-T yellowknife.ld%s\"\n-#endif\n \n-#ifndef LINK_OS_YELLOWKNIFE_SPEC\n #define LINK_OS_YELLOWKNIFE_SPEC \"\"\n-#endif\n \n-#ifndef CPP_OS_YELLOWKNIFE_SPEC\n #define CPP_OS_YELLOWKNIFE_SPEC \"\"\n-#endif\n \n /* Motorola MVME support.  */\n-#ifndef\tLIB_MVME_SPEC\n #define LIB_MVME_SPEC \"--start-group -lmvme -lc --end-group\"\n-#endif\n \n-#ifndef\tSTARTFILE_MVME_SPEC\n #define\tSTARTFILE_MVME_SPEC \"ecrti.o%s crt0.o%s\"\n-#endif\n \n-#ifndef\tENDFILE_MVME_SPEC\n #define\tENDFILE_MVME_SPEC \"ecrtn.o%s\"\n-#endif\n \n-#ifndef LINK_START_MVME_SPEC\n #define LINK_START_MVME_SPEC \"%{!Wl,-T*: %{!T*: -Ttext 0x40000}}\"\n-#endif\n \n-#ifndef LINK_OS_MVME_SPEC\n #define LINK_OS_MVME_SPEC \"\"\n-#endif\n \n-#ifndef CPP_OS_MVME_SPEC\n #define CPP_OS_MVME_SPEC \"\"\n-#endif\n \n /* PowerPC simulator based on netbsd system calls support.  */\n-#ifndef\tLIB_SIM_SPEC\n #define LIB_SIM_SPEC \"--start-group -lsim -lc --end-group\"\n-#endif\n \n-#ifndef\tSTARTFILE_SIM_SPEC\n #define\tSTARTFILE_SIM_SPEC \"ecrti.o%s sim-crt0.o%s\"\n-#endif\n \n-#ifndef\tENDFILE_SIM_SPEC\n #define\tENDFILE_SIM_SPEC \"ecrtn.o%s\"\n-#endif\n \n-#ifndef LINK_START_SIM_SPEC\n #define LINK_START_SIM_SPEC \"-Ttext 0x10000074\"\n-#endif\n \n-#ifndef LINK_OS_SIM_SPEC\n #define LINK_OS_SIM_SPEC \"\"\n-#endif\n \n-#ifndef CPP_OS_SIM_SPEC\n #define CPP_OS_SIM_SPEC \"\"\n-#endif\n \n /* GNU/Linux support.  */\n-#ifndef\tLIB_LINUX_SPEC\n #ifdef USE_GNULIBC_1\n #define LIB_LINUX_SPEC \"%{mnewlib: --start-group -llinux -lc --end-group } \\\n %{!mnewlib: -lc }\"\n@@ -1327,30 +1290,20 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{!mnewlib: %{shared:-lc} %{!shared: %{pthread:-lpthread } \\\n %{profile:-lc_p} %{!profile:-lc}}}\"\n #endif\n-#endif\n \n-#ifndef\tSTARTFILE_LINUX_SPEC\n #define\tSTARTFILE_LINUX_SPEC \"\\\n %{!shared: %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} %{!p:crt1.o%s}}} \\\n %{mnewlib: ecrti.o%s} \\\n %{!mnewlib: crti.o%s %{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}}\"\n-#endif\n \n-#ifndef\tENDFILE_LINUX_SPEC\n #define\tENDFILE_LINUX_SPEC \"\\\n %{mnewlib: ecrtn.o%s} \\\n %{!mnewlib: %{!shared:crtend.o%s} %{shared:crtendS.o%s} crtn.o%s}\"\n-#endif\n \n-#ifndef LINK_START_LINUX_SPEC\n #define LINK_START_LINUX_SPEC \"-Ttext 0x400074\"\n-#endif\n \n-#ifndef LINK_OS_LINUX_SPEC\n #define LINK_OS_LINUX_SPEC \"\"\n-#endif\n \n-#ifndef CPP_OS_LINUX_SPEC\n #ifdef USE_GNULIBC_1\n #define CPP_OS_LINUX_SPEC \"-D__unix__ -D__linux__ \\\n %{!undef:%{!ansi:%{!std=*:-Dunix -Dlinux}%{std=gnu*:-Dunix -Dlinux}}} \\\n@@ -1360,7 +1313,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{!undef:%{!ansi:%{!std=*:-Dunix -Dlinux}%{std=gnu*:-Dunix -Dlinux}}} \\\n -Asystem(unix) -Asystem(posix) %{pthread:-D_REENTRANT}\"\n #endif\n-#endif\n \n /* Solaris support.  */\n /* For Solaris, Gcc automatically adds in one of the files\n@@ -1374,7 +1326,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n    value of `_lib_version') if they will act in a strictly ANSI conforming\n    manner or not.  */\n \n-#ifndef\tLIB_SOLARIS_SPEC\n #define LIB_SOLARIS_SPEC \"\\\n %{mnewlib: --start-group -lsolaris -lc --end-group } \\\n %{!mnewlib: \\\n@@ -1385,62 +1336,99 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t%{compat-bsd:-lucb -lsocket -lnsl -lelf -laio} \\\n     %{solaris-cclib: /opt/SUNWspro/SC4.0/lib/libabi.a} \\\n     %{!shared: %{!symbolic: -lc }}}\"\n-#endif\n \n-#ifndef\tSTARTFILE_SOLARIS_SPEC\n #define\tSTARTFILE_SOLARIS_SPEC \"\\\n %{!msolaris-cclib: scrti.o%s scrt0.o%s} \\\n %{msolaris-cclib: /opt/SUNWspro/SC4.0/lib/crti.o%s /opt/SUNWspro/SC4.0/lib/crt1.o%s}\"\n-#endif\n \n-#ifndef\tENDFILE_SOLARIS_SPEC\n #define\tENDFILE_SOLARIS_SPEC \"\\\n %{!msolaris-cclib: scrtn.o%s} \\\n %{msolaris-cclib: /opt/SUNWspro/SC4.0/lib/crtn.o%s}\"\n-#endif\n \n-#ifndef LINK_START_SOLARIS_SPEC\n-#ifdef CROSS_COMPILER\n+#ifdef CROSS_COMPILE\n #define LINK_START_SOLARIS_SPEC \"-Ttext 0x2000074\"\n #else\n #define LINK_START_SOLARIS_SPEC \"\"\n #endif\n-#endif\n \n-#ifndef LINK_OS_SOLARIS_SPEC\n #define LINK_OS_SOLARIS_SPEC \"\"\n-#endif\n \n-#ifndef CPP_OS_SOLARIS_SPEC\n #define CPP_OS_SOLARIS_SPEC \"-D__ppc -D__sun__=1 -D__unix__ -D__svr4__  -D__SVR4__ \\\n %{!undef:%{!ansi:%{!std=*:-Dsun=1 -Dunix -DSVR4 -D__EXTENSIONS__} \\\n                %{std=gnu*:-Dsun=1 -Dunix -DSVR4 -D__EXTENSIONS__}}} \\\n -Amachine(prep)\"\n-#endif\n+\n+/* VxWorks support.  */\n+/* VxWorks does all the library stuff itself.  */\n+#define LIB_VXWORKS_SPEC \"\"\n+\n+/* VxWorks provides the functionality of crt0.o and friends itself.  */\n+\n+#define\tSTARTFILE_VXWORKS_SPEC \"\"\n+\n+#define\tENDFILE_VXWORKS_SPEC \"\"\n+\n+/* Because it uses ld -r, vxworks has no start/end files, nor starting\n+   address.  */\n+\n+#define LINK_START_VXWORKS_SPEC \"\"\n+\n+#define LINK_OS_VXWORKS_SPEC \"-r\"\n+\n+#define CPP_OS_VXWORKS_SPEC \"\\\n+-DCPU_FAMILY=PPC \\\n+%{!mcpu*: \\\n+  %{mpowerpc*: -DCPU=PPC603} \\\n+  %{!mno-powerpc: -DCPU=PPC603}} \\\n+%{mcpu=powerpc: -DCPU=PPC603} \\\n+%{mcpu=401: -DCPU=PPC403} \\\n+%{mcpu=403: -DCPU=PPC403} \\\n+%{mcpu=601: -DCPU=PPC601} \\\n+%{mcpu=602: -DCPU=PPC603} \\\n+%{mcpu=603: -DCPU=PPC603} \\\n+%{mcpu=603e: -DCPU=PPC603} \\\n+%{mcpu=ec603e: -DCPU=PPC603} \\\n+%{mcpu=604: -DCPU=PPC604} \\\n+%{mcpu=604e: -DCPU=PPC604} \\\n+%{mcpu=620: -DCPU=PPC604} \\\n+%{mcpu=740: -DCPU=PPC603} \\\n+%{mcpu=750: -DCPU=PPC603} \\\n+%{mcpu=801: -DCPU=PPC603} \\\n+%{mcpu=821: -DCPU=PPC603} \\\n+%{mcpu=823: -DCPU=PPC603} \\\n+%{mcpu=860: -DCPU=PPC603}\"\n \n /* Define any extra SPECS that the compiler needs to generate.  */\n+/* Override rs6000.h definition.  */\n #undef\tSUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS\t\t\t\t\t\t\\\n+#define\tSUBTARGET_EXTRA_SPECS\t\t\t\t\t\t\\\n+  { \"cpp_sysv\",\t\t\tCPP_SYSV_SPEC },\t\t\t\\\n+  { \"cpp_sysv_default\",\t\tCPP_SYSV_DEFAULT_SPEC },\t\t\\\n+  { \"cpp_endian_default\",\tCPP_ENDIAN_DEFAULT_SPEC },\t\t\\\n+  { \"cpp_endian\",\t\tCPP_ENDIAN_SPEC },\t\t\t\\\n   { \"lib_ads\",\t\t\tLIB_ADS_SPEC },\t\t\t\t\\\n   { \"lib_yellowknife\",\t\tLIB_YELLOWKNIFE_SPEC },\t\t\t\\\n   { \"lib_mvme\",\t\t\tLIB_MVME_SPEC },\t\t\t\\\n   { \"lib_sim\",\t\t\tLIB_SIM_SPEC },\t\t\t\t\\\n   { \"lib_linux\",\t\tLIB_LINUX_SPEC },\t\t\t\\\n   { \"lib_solaris\",\t\tLIB_SOLARIS_SPEC },\t\t\t\\\n+  { \"lib_vxworks\",\t\tLIB_VXWORKS_SPEC },\t\t\t\\\n   { \"lib_default\",\t\tLIB_DEFAULT_SPEC },\t\t\t\\\n   { \"startfile_ads\",\t\tSTARTFILE_ADS_SPEC },\t\t\t\\\n   { \"startfile_yellowknife\",\tSTARTFILE_YELLOWKNIFE_SPEC },\t\t\\\n   { \"startfile_mvme\",\t\tSTARTFILE_MVME_SPEC },\t\t\t\\\n   { \"startfile_sim\",\t\tSTARTFILE_SIM_SPEC },\t\t\t\\\n   { \"startfile_linux\",\t\tSTARTFILE_LINUX_SPEC },\t\t\t\\\n   { \"startfile_solaris\",\tSTARTFILE_SOLARIS_SPEC },\t\t\\\n+  { \"startfile_vxworks\",\tSTARTFILE_VXWORKS_SPEC },\t\t\\\n   { \"startfile_default\",\tSTARTFILE_DEFAULT_SPEC },\t\t\\\n   { \"endfile_ads\",\t\tENDFILE_ADS_SPEC },\t\t\t\\\n   { \"endfile_yellowknife\",\tENDFILE_YELLOWKNIFE_SPEC },\t\t\\\n   { \"endfile_mvme\",\t\tENDFILE_MVME_SPEC },\t\t\t\\\n   { \"endfile_sim\",\t\tENDFILE_SIM_SPEC },\t\t\t\\\n   { \"endfile_linux\",\t\tENDFILE_LINUX_SPEC },\t\t\t\\\n   { \"endfile_solaris\",\t\tENDFILE_SOLARIS_SPEC },\t\t\t\\\n+  { \"endfile_vxworks\",\t\tENDFILE_VXWORKS_SPEC },\t\t\t\\\n   { \"endfile_default\",\t\tENDFILE_DEFAULT_SPEC },\t\t\t\\\n   { \"link_path\",\t\tLINK_PATH_SPEC },\t\t\t\\\n   { \"link_shlib\",\t\tLINK_SHLIB_SPEC },\t\t\t\\\n@@ -1452,6 +1440,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n   { \"link_start_sim\",\t\tLINK_START_SIM_SPEC },\t\t\t\\\n   { \"link_start_linux\",\t\tLINK_START_LINUX_SPEC },\t\t\\\n   { \"link_start_solaris\",\tLINK_START_SOLARIS_SPEC },\t\t\\\n+  { \"link_start_vxworks\",\tLINK_START_VXWORKS_SPEC },\t\t\\\n   { \"link_start_default\",\tLINK_START_DEFAULT_SPEC },\t\t\\\n   { \"link_os\",\t\t\tLINK_OS_SPEC },\t\t\t\t\\\n   { \"link_os_ads\",\t\tLINK_OS_ADS_SPEC },\t\t\t\\\n@@ -1460,19 +1449,22 @@ do {\t\t\t\t\t\t\t\t\t\\\n   { \"link_os_sim\",\t\tLINK_OS_SIM_SPEC },\t\t\t\\\n   { \"link_os_linux\",\t\tLINK_OS_LINUX_SPEC },\t\t\t\\\n   { \"link_os_solaris\",\t\tLINK_OS_SOLARIS_SPEC },\t\t\t\\\n+  { \"link_os_vxworks\",\t\tLINK_OS_VXWORKS_SPEC },\t\t\t\\\n   { \"link_os_default\",\t\tLINK_OS_DEFAULT_SPEC },\t\t\t\\\n   { \"cc1_endian_big\",\t\tCC1_ENDIAN_BIG_SPEC },\t\t\t\\\n   { \"cc1_endian_little\",\tCC1_ENDIAN_LITTLE_SPEC },\t\t\\\n   { \"cc1_endian_default\",\tCC1_ENDIAN_DEFAULT_SPEC },\t\t\\\n   { \"cpp_endian_big\",\t\tCPP_ENDIAN_BIG_SPEC },\t\t\t\\\n   { \"cpp_endian_little\",\tCPP_ENDIAN_LITTLE_SPEC },\t\t\\\n   { \"cpp_endian_solaris\",\tCPP_ENDIAN_SOLARIS_SPEC },\t\t\\\n+  { \"cpp_float_default\",\tCPP_FLOAT_DEFAULT_SPEC },\t\t\\\n   { \"cpp_os_ads\",\t\tCPP_OS_ADS_SPEC },\t\t\t\\\n   { \"cpp_os_yellowknife\",\tCPP_OS_YELLOWKNIFE_SPEC },\t\t\\\n   { \"cpp_os_mvme\",\t\tCPP_OS_MVME_SPEC },\t\t\t\\\n   { \"cpp_os_sim\",\t\tCPP_OS_SIM_SPEC },\t\t\t\\\n   { \"cpp_os_linux\",\t\tCPP_OS_LINUX_SPEC },\t\t\t\\\n   { \"cpp_os_solaris\",\t\tCPP_OS_SOLARIS_SPEC },\t\t\t\\\n+  { \"cpp_os_vxworks\",\t\tCPP_OS_VXWORKS_SPEC },\t\t\t\\\n   { \"cpp_os_default\",\t\tCPP_OS_DEFAULT_SPEC },\n \n /* Define this macro as a C expression for the initializer of an\n@@ -1484,7 +1476,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n    the target makefile fragment or if none of the options listed in\n    `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n \n-#undef\tMULTILIB_DEFAULTS\n #define\tMULTILIB_DEFAULTS { \"mbig\", \"mcall-sysv\" }\n \n /* Define this macro if the code for function profiling should come\n@@ -1493,5 +1484,4 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define PROFILE_BEFORE_PROLOGUE 1\n \n /* Function name to call to do profiling.  */\n-#undef\tRS6000_MCOUNT\n #define RS6000_MCOUNT \"_mcount\""}, {"sha": "a19dd7879912b253786cdda9dd5235b74716eb6e", "filename": "gcc/config/rs6000/sysv4le.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fsysv4le.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fsysv4le.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4le.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,6 +1,6 @@\n /* Target definitions for GNU compiler for a little endian PowerPC\n    running System V.4\n-   Copyright (C) 1995, Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2000 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n This file is part of GNU CC.\n@@ -34,7 +34,9 @@ Boston, MA 02111-1307, USA.  */\n #undef\tLINK_TARGET_SPEC\n #define\tLINK_TARGET_SPEC \"\\\n %{mbig: -oformat elf32-powerpc } %{mbig-endian: -oformat elf32-powerpc } \\\n-%{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: %{mcall-linux: -oformat elf32-powerpc}}}}}\"\n+%{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n+    %{mcall-linux: -oformat elf32-powerpc} \\\n+  }}}}\"\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are"}, {"sha": "814ef42e6f34824c290e3768ec274dd91f25b6c8", "filename": "gcc/config/rs6000/t-aix43", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Ft-aix43", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Ft-aix43", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-aix43?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -49,3 +49,11 @@ MULTILIB_MATCHES\t= msoft-float=mcpu?403 \\\n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n+\n+# Both 32-bit and 64-bit objects in archives\n+AR_FLAGS_FOR_TARGET=-X32_64 rc\n+\n+# We need -lld for collect2 (actually this only matters\n+# for a native compiler, but this is as good a place as any\n+# to define the symbol).\n+CLIB=-lld"}, {"sha": "231c9cec44662264510905f5b1ad5277a5abb3cc", "filename": "gcc/config/rs6000/t-ppccomm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Ft-ppccomm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Ft-ppccomm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppccomm?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -39,7 +39,7 @@ MULTILIB_MATCHES_FLOAT\t= msoft-float=mcpu?401 \\\n \t\t\t  msoft-float=mcpu?823 \\\n \t\t\t  msoft-float=mcpu?860\n MULTILIB_MATCHES_ENDIAN\t= mlittle=mlittle-endian mbig=mbig-endian\n-MULTILIB_MATCHES_SYSV\t= mcall-sysv=mcall-sysv-eabi mcall-sysv=mcall-sysv-noeabi\n+MULTILIB_MATCHES_SYSV\t= mcall-sysv=mcall-sysv-eabi mcall-sysv=mcall-sysv-noeabi mcall-sysv=mcall-linux\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib"}, {"sha": "0765a9e4c6e05a2fd9f99bf081137eeeb69c3085", "filename": "gcc/config/rs6000/t-ppcgas", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Ft-ppcgas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Ft-ppcgas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppcgas?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -3,16 +3,17 @@\n \n MULTILIB_OPTIONS\t= msoft-float \\\n \t\t\t  mlittle/mbig \\\n-\t\t\t  mcall-sysv/mcall-aix/mcall-linux\n+\t\t\t  mcall-sysv/mcall-aix \\\n+\t\t\t  fleading-underscore\n \n MULTILIB_DIRNAMES\t= nof \\\n \t\t\t  le be \\\n-\t\t\t  cs ca lin\n+\t\t\t  cs ca \\\n+\t\t\t  und\n \n MULTILIB_EXTRA_OPTS\t= mrelocatable-lib mno-eabi mstrict-align\n-MULTILIB_EXCEPTIONS\t= *mbig/*mcall-linux* \\\n-\t\t\t  *mlittle/*mcall-linux* \\\n-\t\t\t  *msoft-float/*mcall-linux*\n+MULTILIB_EXCEPTIONS\t= *mcall-aix/*fleading-underscore* \\\n+\t\t\t  *mlittle/*mcall-aix*\n \n MULTILIB_MATCHES\t= ${MULTILIB_MATCHES_FLOAT} \\\n \t\t\t  ${MULTILIB_MATCHES_ENDIAN} \\"}, {"sha": "1aafae47422c9c3287941461e2ba364916b73a83", "filename": "gcc/config/rs6000/t-winnt", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Ft-winnt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Ft-winnt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-winnt?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -1,41 +0,0 @@\n-# Do not build libgcc1.\n-LIBGCC1 = \n-CROSS_LIBGCC1 =\n-\n-EXTRA_PARTS = crti.o crtn.o\n-\n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = ntstack.S\n-\n-# We want fine grained libraries, so use the new code to build the\n-# floating point emulation libraries.\n-FPBIT = fp-bit.c\n-DPBIT = dp-bit.c\n-\n-\n-dp-bit.c: $(srcdir)/config/fp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n-\n-fp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define FLOAT' > fp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n-\n-ntstack.S: $(srcdir)/config/rs6000/ntstack.asm\n-\tcat $(srcdir)/config/rs6000/ntstack.asm > ntstack.S\n-\n-# For NT we build crti.o and crtn.o which serve to add begin and\n-# end labels for the static constructors and destructors.\n-\n-# Assemble startup files.\n-crti.s: $(srcdir)/config/rs6000/nt-ci.asm\n-\tcat $(srcdir)/config/rs6000/nt-ci.asm >crti.s\n-\n-crtn.s: $(srcdir)/config/rs6000/nt-cn.asm\n-\tcat $(srcdir)/config/rs6000/nt-cn.asm >crtn.s\n-\n-crti.o: crti.s\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o crti.o crti.s\n-\t\n-crtn.o: crtn.s\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o crtn.o crtn.s"}, {"sha": "5f3048990d9a3fcefad556c495e0c1523f3d72c6", "filename": "gcc/config/rs6000/tramp.asm", "status": "modified", "additions": 16, "deletions": 27, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Ftramp.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Ftramp.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ftramp.asm?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,6 +1,6 @@\n /*  Special support for trampolines\n  *\n- *   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n+ *   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n  *   Written By Michael Meissner\n  * \n  * This file is free software; you can redistribute it and/or modify it\n@@ -33,21 +33,20 @@\n  *    the executable file might be covered by the GNU General Public License.\n  */ \n \n-/* Set up trampolines */\n+/* Set up trampolines. */\n \n \t.file\t\"tramp.asm\"\n \t.section \".text\"\n \t#include \"ppc-asm.h\"\n \n-\t.globl\t__trampoline_initial\n-\t.type\t__trampoline_initial,@object\n+\t.type\ttrampoline_initial,@object\n \t.align\t2\n-__trampoline_initial:\n+trampoline_initial:\n \tmflr\tr0\n \tbl\t1f\n-.Lfunc = .-__trampoline_initial\n+.Lfunc = .-trampoline_initial\n \t.long\t0\t\t\t/* will be replaced with function address */\n-.Lchain = .-__trampoline_initial\n+.Lchain = .-trampoline_initial\n \t.long\t0\t\t\t/* will be replaced with static chain */\n 1:\tmflr\tr11\n \tmtlr\tr0\n@@ -56,36 +55,26 @@ __trampoline_initial:\n \tmtctr\tr0\n \tbctr\n \n-__trampoline_size = .-__trampoline_initial\n-\t.size\t__trampoline_initial,__trampoline_size\n+trampoline_size = .-trampoline_initial\n+\t.size\ttrampoline_initial,trampoline_size\n \n-        .section \".got2\",\"aw\"\n-.LCTOC1 = .+32768\n-.Ltramp = .-.LCTOC1\n-        .long __trampoline_initial-4\n-\n-\t.section \".text\"\n-.LCL0:\n-        .long .LCTOC1-.LCF0\n \n /* R3 = stack address to store trampoline */\n /* R4 = length of trampoline area */\n /* R5 = function address */\n /* R6 = static chain */\n \n FUNC_START(__trampoline_setup)\n-\tmflr\tr0\t\t\t/* save return address */\n-        bl\t.LCF0\t\t\t/* load up __trampoline_initial into r7 */\n+\tmflr\tr0\t\t/* save return address */\n+        bl\t.LCF0\t\t/* load up __trampoline_initial into r7 */\n .LCF0:\n         mflr\tr11\n-        lwz\tr12,(.LCL0-.LCF0)(r11)\n-        add\tr11,r12,r11\n-        lwz\tr7,.Ltramp(r11)\t\t/* trampoline address -4 */\n+        addi\tr7,r11,trampoline_initial-4-.LCF0 /* trampoline address -4 */\n \n-\tli\tr8,__trampoline_size\t/* verify that the trampoline is big enough */\n+\tli\tr8,trampoline_size\t/* verify that the trampoline is big enough */\n \tcmpw\tcr1,r8,r4\n-\tsrwi\tr4,r4,2\t\t\t/* # words to move */\n-\taddi\tr9,r3,-4\t\t/* adjust pointer for lwzu */\n+\tsrwi\tr4,r4,2\t\t/* # words to move */\n+\taddi\tr9,r3,-4\t/* adjust pointer for lwzu */\n \tmtctr\tr4\n \tblt\tcr1,.Labort\n \n@@ -115,6 +104,6 @@ FUNC_START(__trampoline_setup)\n \tblr\n \n .Labort:\n-\tbl\tabort\n+\tbl\tFUNC_NAME(abort)\n FUNC_END(__trampoline_setup)\n-/* END CYGNUS LOCAL -- waiting for FSF sources to be restored/meissner */\n+"}, {"sha": "fa25760264ced1af6f79fdfee3cd31298dd36ca0", "filename": "gcc/config/rs6000/vxppc.h", "status": "modified", "additions": 24, "deletions": 45, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fvxppc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fvxppc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxppc.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Vxworks PowerPC version.\n-   Copyright (C) 1996, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -18,62 +18,41 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* This file primarily exists to give specs for the PowerPC running on\n-   VxWorks.  */\n+/* This file just exists to give specs for the PowerPC running on VxWorks.  */\n \n #include \"rs6000/sysv4.h\"\n \n-/* ??? This file redefines CPP_SPEC which is wrong.  It should instead define\n-   one of the extra specs that gets included in CPP_SPEC.  For instance,\n-   CPP_OS_DEFAULT_SPEC.  The mrelocatable line was copied from CPP_SYSV_SPEC.\n-   There is probably other stuff missing.  */\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE} %(cpp_sysv) %(cpp_endian) %(cpp_cpu) \\\n-%{mads: %(cpp_os_ads) } \\\n-%{myellowknife: %(cpp_os_yellowknife) } \\\n-%{mmvme: %(cpp_os_mvme) } \\\n-%{msim: %(cpp_os_sim) } \\\n-%{mcall-linux: %(cpp_os_linux) } \\\n-%{mcall-solaris: %(cpp_os_solaris) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(cpp_os_default) }}}}}} \\\n-%{!DCPU=*: \\\n-  %{!mcpu*: -DCPU=PPC603} \\\n-  %{mcpu=powerpc: -DCPU=PPC603} \\\n-  %{mcpu=403: -DCPU=PPC403} \\\n-  %{mcpu=601: -DCPU=PPC601} \\\n-  %{mcpu=603: -DCPU=PPC603} \\\n-  %{mcpu=604: -DCPU=PPC604}}\"\n+/* Reset defaults */\n+#undef\tCPP_OS_DEFAULT_SPEC\n+#define CPP_OS_DEFAULT_SPEC \"%(cpp_os_vxworks)\"\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"\\\n--D__vxworks -Asystem(vxworks) -Asystem(embedded) \\\n--Acpu(powerpc) -Amachine(powerpc)\"\n+#undef\tLIB_DEFAULT_SPEC\n+#define LIB_DEFAULT_SPEC \"%(lib_vxworks)\"\n \n-/* VxWorks does all the library stuff itself.  */\n+#undef\tSTARTFILE_DEFAULT_SPEC\n+#define STARTFILE_DEFAULT_SPEC \"%(startfile_vxworks)\"\n \n-#undef LIB_SPEC\n-#define LIB_SPEC \"\"\n+#undef\tENDFILE_DEFAULT_SPEC\n+#define ENDFILE_DEFAULT_SPEC \"%(endfile_vxworks)\"\n \n-/* VxWorks uses object files, not loadable images.  make linker just\n-   combine objects. */\n+#undef\tLINK_START_DEFAULT_SPEC\n+#define LINK_START_DEFAULT_SPEC \"%(link_start_vxworks)\"\n \n-#undef LINK_SPEC\n-#define LINK_SPEC \"-r\"\n+#undef\tLINK_OS_DEFAULT_SPEC\n+#define LINK_OS_DEFAULT_SPEC \"%(link_os_vxworks)\"\n \n-/* VxWorks provides the functionality of crt0.o and friends itself.  */\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"\\\n+-D__vxworks -D__vxworks__ -Asystem(vxworks) -Asystem(embedded) \\\n+-Acpu(powerpc) -Amachine(powerpc)\"\n \n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"\"\n+/* Don't define _LITTLE_ENDIAN or _BIG_ENDIAN */\n+#undef\tCPP_ENDIAN_BIG_SPEC\n+#define CPP_ENDIAN_BIG_SPEC \"-D__BIG_ENDIAN__ -Amachine(bigendian)\"\n \n-#undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \"\"\n+#undef\tCPP_ENDIAN_LITTLE_SPEC\n+#define CPP_ENDIAN_LITTLE_SPEC \"-D__LITTLE_ENDIAN__ -Amachine(littleendian)\"\n \n /* We use stabs-in-elf for debugging */\n #undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n-\n-/* VxWorks normally doesn't have an unaligned handler, so make -mstrict-align\n-   the default.  */\n-#undef SUBTARGET_DEFAULT\n-#define SUBTARGET_DEFAULT MASK_STRICT_ALIGN"}, {"sha": "fadec99ed78ce9cccb4f1405c0c727c3d1c05896", "filename": "gcc/config/rs6000/vxppcle.h", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fvxppcle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fvxppcle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxppcle.h?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -0,0 +1,58 @@\n+/* Definitions of target machine for GNU compiler.  Vxworks PowerPC version.\n+   Copyright (C) 1996, 1998 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* This file just exists to give specs for the PowerPC running on VxWorks.  */\n+\n+#include \"rs6000/sysv4le.h\"\n+\n+/* Reset defaults */\n+#undef\tCPP_OS_DEFAULT_SPEC\n+#define CPP_OS_DEFAULT_SPEC \"%(cpp_os_vxworks)\"\n+\n+#undef\tLIB_DEFAULT_SPEC\n+#define LIB_DEFAULT_SPEC \"%(lib_vxworks)\"\n+\n+#undef\tSTARTFILE_DEFAULT_SPEC\n+#define STARTFILE_DEFAULT_SPEC \"%(startfile_vxworks)\"\n+\n+#undef\tENDFILE_DEFAULT_SPEC\n+#define ENDFILE_DEFAULT_SPEC \"%(endfile_vxworks)\"\n+\n+#undef\tLINK_START_DEFAULT_SPEC\n+#define LINK_START_DEFAULT_SPEC \"%(link_start_vxworks)\"\n+\n+#undef\tLINK_OS_DEFAULT_SPEC\n+#define LINK_OS_DEFAULT_SPEC \"%(link_os_vxworks)\"\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"\\\n+-D__vxworks -D__vxworks__ -Asystem(vxworks) -Asystem(embedded) \\\n+-Acpu(powerpc) -Amachine(powerpc)\"\n+\n+/* Don't define _LITTLE_ENDIAN or _BIG_ENDIAN */\n+#undef\tCPP_ENDIAN_BIG_SPEC\n+#define CPP_ENDIAN_BIG_SPEC \"-D__BIG_ENDIAN__ -Amachine(bigendian)\"\n+\n+#undef\tCPP_ENDIAN_LITTLE_SPEC\n+#define CPP_ENDIAN_LITTLE_SPEC \"-D__LITTLE_ENDIAN__ -Amachine(littleendian)\"\n+\n+/* We use stabs-in-elf for debugging */\n+#undef PREFERRED_DEBUGGING_TYPE\n+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG"}, {"sha": "796e487b0debd22fbec8ec97aee6747bda902869", "filename": "gcc/config/rs6000/win-nt.h", "status": "removed", "additions": 0, "deletions": 483, "changes": 483, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fwin-nt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fwin-nt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fwin-nt.h?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -1,483 +0,0 @@\n-/* Definitions of target machine for GNU compiler, for PowerPC\n-   running Windows/NT.\n-   Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n-   Contributed by Cygnus Support.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* Say this is Windows/NT for the other config files.  */\n-#define WINDOWS_NT 1\n-#define COFF_WITH_PE 1\n-\n-/* Default ABI to compile code for */\n-#define DEFAULT_ABI ABI_NT\n-\n-#define CPP_DEFAULT_SPEC \"-D_ARCH_PPC\"\n-\n-#define ASM_DEFAULT_SPEC \"-mppc\"\n-\n-/* Pseudo target that we can test in the md file.  */\n-#define\tTARGET_WINDOWS_NT 1\n-\n-#include \"rs6000/rs6000.h\"\n-\n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS)\n-\n-#undef PROCESSOR_DEFAULT\n-#define PROCESSOR_DEFAULT PROCESSOR_POWERPC\n-\n-#undef\tCPP_PREDEFINES\n-#define\tCPP_PREDEFINES \"-DWIN32 -D_WIN32 \\\n-  -DWINNT -D__STDC__=0 -DALMOST_STDC \\\n-  -D_POWER -D_ARCH_PPC -D__PPC__ -Asystem(winnt) -Acpu(powerpc) -Amachine(powerpc)\"\n-\n-#if 0\n-#include \"winnt/win-nt.h\"\n-#endif\n-\n-#undef\tLIB_SPEC\n-#define\tLIB_SPEC \"%{mwindows:-subsystem:windows -entry:WinMainCRTStartup \\\n-  USER32.LIB GDI32.LIB COMDLG32.LIB WINSPOOL.LIB} \\\n- %{!mwindows:-subsystem console -e mainCRTStartup} \\\n- %{mcrtmt:LIBCMT.LIB KERNEL32.LIB} %{!mcrtmt:-lkernel32 -lcygwin} \\\n- %{v}\"\n-\n-#undef\tLINK_SPEC\n-#define\tLINK_SPEC \"%{v:-V}\"\n-\n-/* Allow switches specified in LIB_SPEC, but don't do anything with them\n-   in the compiler.  */\n-#undef\tSUBTARGET_SWITCHES\n-#define SUBTARGET_SWITCHES\t\\\n-   { \"windows\",\t0 },\t\t\\\n-   { \"crtmt\",\t0 },\n-\n-#undef XCOFF_DEBUGGING_INFO\n-\n-/* this is pure coff, not xcoff */\n-#define SDB_DEBUGGING_INFO\n-#define DBX_DEBUGGING_INFO\n-\n-#undef  SDB_DELIM\n-#define SDB_DELIM \";\"\n-\n-#undef\tPREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n-\n-/* NT always runs little endian */\n-#undef  BYTES_BIG_ENDIAN\n-#define BYTES_BIG_ENDIAN 0 \n-\n-#undef  WORDS_BIG_ENDIAN\n-#define WORDS_BIG_ENDIAN 0 \n-\n-/* Define cutoff for using external functions to save floating point.\n-   Currently on NT, always use inline stores */\n-#undef\tFP_SAVE_INLINE\n-#define FP_SAVE_INLINE(FIRST_REG) ((FIRST_REG) < 64)\n-\n-/* Note, little endian systems trap on unaligned addresses, so never\n-   turn off strict alignment in that case. */\n-\n-#undef STRICT_ALIGNMENT\n-#define\tSTRICT_ALIGNMENT 1\n-\n-/* Align stack to 16 byte boundaries */\n-#undef\tSTACK_BOUNDARY\n-#define\tSTACK_BOUNDARY\t128\n-\n-/* No data type wants to be aligned rounder than this.  */\n-#undef\tBIGGEST_ALIGNMENT\n-#define BIGGEST_ALIGNMENT 128\n-\n-/* NT aligns internal doubles in structures on dword boundaries.  */\n-#undef\tBIGGEST_FIELD_ALIGNMENT\n-#define BIGGEST_FIELD_ALIGNMENT 64\n-\n-#undef  ADJUST_FIELD_ALIGN\n-#undef  ROUND_TYPE_ALIGN\n-\n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC PE)\");\n-\n-#undef TARGET_DEFAULT \n-#define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC)\n-\n-/* MEM representing address to save the TOC register */\n-#undef\tRS6000_SAVE_TOC\n-#define RS6000_SAVE_TOC gen_rtx_MEM (Pmode, \\\n-\t\t\t\t     plus_constant (virtual_incoming_args_rtx,\n-\t\t\t\t\t\t    -RS6000_SAVE_AREA - 8))\n-\n-/* Windows NT specifies that r13 is reserved to the OS, so it is not available\n-   to the normal user.  */\n-\n-#undef\tFIXED_R13\n-#define FIXED_R13 1\n-\f\n-/* This says how to output an assembler line\n-   to define a global common symbol.  */\n-\n-#undef\tASM_OUTPUT_ALIGNED_COMMON\n-#define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGNMENT)\t\\\n-  do { fputs (\"\\t.comm \\t\", (FILE));\t\t\t        \\\n-       assemble_name ((FILE), (NAME));\t\t\t\t\\\n-       if ( (SIZE) > 4)                                         \\\n-         fprintf ((FILE), \",%d,%d\\n\", (SIZE), 3);               \\\n-       else                                                     \\\n-\t fprintf( (FILE), \",%d\\n\", (SIZE));                     \\\n-  } while (0) \n-\n-#undef\tASM_OUTPUT_ALIGNED_LOCAL\n-\n-/* This says how to output an assembler line\n-   to define a global common symbol.  */\n-\n-#undef  ASM_OUTPUT_COMMON\n-#define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)\t\\\n-  do { fputs (\"\\t.comm \\t\", (FILE));\t\t\t\\\n-       assemble_name ((FILE), (NAME));\t\t\t\\\n-       fprintf ((FILE), \",%d\\n\", (SIZE)); } while (0)\n-\n-/* This says how to output an assembler line\n-   to define an aligned local common symbol.  */\n-\n-#undef ASM_OUTPUT_ALIGNED_LOCAL\n-#define ASM_OUTPUT_ALIGNED_LOCAL(FILE, NAME, SIZE, ALIGN)\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  bss_section ();\t\t\t\t\t\t\t\\\n-  ASM_OUTPUT_ALIGN (FILE, exact_log2 (ALIGN / BITS_PER_UNIT));\t\t\\\n-  ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n-  ASM_OUTPUT_SKIP (FILE, SIZE);\t\t\t\t\t\t\\\n-} while (0)\n-\n-/* Describe how to emit uninitialized external linkage items  */\n-#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN)\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  ASM_GLOBALIZE_LABEL (FILE, NAME);\t\t\t\t\t\\\n-  ASM_OUTPUT_ALIGNED_LOCAL (FILE, NAME, SIZE, ALIGN);\t\t\t\\\n-} while (0)\n-\n-/* This says out to put a global symbol in the BSS section */\n-#undef ASM_OUTPUT_ALIGNED_BSS\n-#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n-  asm_output_aligned_bss ((FILE), (DECL), (NAME), (SIZE), (ALIGN))\n-\n-\n-/* Stuff to force fit us into the Motorola PPC assembler */\n-\n-#undef ASM_FILE_START\n-#define ASM_FILE_START(FILE)\t\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  output_file_directive ((FILE), main_input_filename);\t\t\t\\\n-  rs6000_file_start (FILE, TARGET_CPU_DEFAULT);\t\t\t\t\\\n-  data_section ();\t\t\t\t\t\t\t\\\n-} while (0)\n-\n-#undef ASM_FILE_END\n-\n-#undef\tASM_DECLARE_FUNCTION_NAME\n-#define ASM_DECLARE_FUNCTION_NAME(FILE,NAME,DECL)\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  tree exception_args;\t\t\t\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_PUBLIC (DECL))\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t.globl ..\");\t\t\t\t\t\\\n-      assemble_name (FILE, NAME);\t\t\t\t\t\\\n-      fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\n#\\tFunction: '..\");\t\t\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-  fputs (\"'\\n\", FILE);\t\t\t\t\t\t\t\\\n-  fputs (\"#\\tText in section: <default>\\n\\n\", FILE);\t\t\t\\\n-  fputs (\"#\\tSetup MS Structured-Exception-Handling\\n\", FILE);\t\t\\\n-  fputs (\"\\t.pdata\\n\", FILE);\t\t\t\t\t\t\\\n-  fputs (\"\\t.align 2\\n\", FILE);\t\t\t\t\t\t\\\n-  fputs (\"\\t.ualong ..\", FILE);\t\t\t\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-  fputs (\",\", FILE);\t\t\t\t\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-  fputs (\".e,\", FILE);\t\t\t\t\t\t\t\\\n-  exception_args = lookup_attribute (\"exception\",\t\t\t\\\n-\t\t\t\t     TYPE_ATTRIBUTES (TREE_TYPE (DECL))); \\\n-\t\t\t\t\t\t\t\t\t\\\n-  if (exception_args)\t\t\t\t\t\t\t\\\n-    exception_args = TREE_VALUE (exception_args);\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  for (i = 0; i < 2; i++)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (!exception_args)\t\t\t\t\t\t\\\n-\tfputs (\"0,\", FILE);\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  tree field = TREE_VALUE (exception_args);\t\t\t\\\n-\t  exception_args = TREE_PURPOSE (exception_args);\t\t\\\n-\t  if (TREE_CODE (field) == STRING_CST)\t\t\t\t\\\n-\t    fprintf (FILE, \"%.*s,\", TREE_STRING_LENGTH (field),\t\t\\\n-\t\t     TREE_STRING_POINTER (field));\t\t\t\\\n-\t  else if (TREE_CODE (field) == IDENTIFIER_NODE)\t\t\\\n-\t    fprintf (FILE, \"%.*s,\", IDENTIFIER_LENGTH (field),\t\t\\\n-\t\t     IDENTIFIER_POINTER (field));\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    abort ();\t\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-  fprintf (FILE, \".b\\n\\n\");\t\t\t\t\t\t\\\n-  fprintf (FILE, \"#\\tSwitch to the relocation section\\n\");\t\t\\\n-  fprintf (FILE, \"\\t.reldata\\n\");\t\t\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-  fprintf (FILE, \":\\n\");\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\t.ualong ..\");\t\t\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-  fprintf (FILE, \",.toc\\n\");\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  if (lookup_attribute (\"dllexport\",\t\t\t\t\t\\\n-\t\t\tTYPE_ATTRIBUTES (TREE_TYPE (DECL))))\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t.globl __imp_\");\t\t\t\t\\\n-      assemble_name (FILE, NAME);\t\t\t\t\t\\\n-      fprintf (FILE, \"\\n__imp_\");\t\t\t\t\t\\\n-      assemble_name (FILE, NAME);\t\t\t\t\t\\\n-      fprintf (FILE, \":\\n\\t.ulong \");\t\t\t\t\t\\\n-      assemble_name (FILE, NAME);\t\t\t\t\t\\\n-      fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\t.section .text\\n\\t.align 2\\n..\");\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-  fprintf (FILE, \":\\n\");\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\t.function\\t..\");\t\t\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\n\");\t\t\t\t\t\t\t\\\n-}\n-\n-/* This is how to output an assembler line defining a `double' constant.  */\n-\n-#undef\tASM_OUTPUT_DOUBLE\n-#define ASM_OUTPUT_DOUBLE(FILE, VALUE)\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    if (REAL_VALUE_ISINF (VALUE)\t\t\t\t\t\\\n-        || REAL_VALUE_ISNAN (VALUE)\t\t\t\t\t\\\n-\t|| REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tlong t[2];\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_TARGET_DOUBLE ((VALUE), t);\t\t\t\\\n-\tfprintf (FILE, \"\\t.ualong 0x%lx\\n\\t.long 0x%lx\\n\",\t\t\\\n-\t\tt[0] & 0xffffffff, t[1] & 0xffffffff);\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tchar str[30];\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_DECIMAL (VALUE, \"%.20e\", str);\t\t\t\\\n-\tfprintf (FILE, \"\\t.double %s\\n\", str);\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  }\n-\n-/* This is how to output an assembler line defining a `float' constant.  */\n-\n-#undef\tASM_OUTPUT_FLOAT\n-#define ASM_OUTPUT_FLOAT(FILE, VALUE)\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    if (REAL_VALUE_ISINF (VALUE)\t\t\t\t\t\\\n-        || REAL_VALUE_ISNAN (VALUE)\t\t\t\t\t\\\n-\t|| REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tlong t;\t\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_TARGET_SINGLE ((VALUE), t);\t\t\t\\\n-\tfprintf (FILE, \"\\t.ualong 0x%lx\\n\", t & 0xffffffff);\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tchar str[30];\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", str);\t\t\t\\\n-\tfprintf (FILE, \"\\t.float %s\\n\", str);\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  }\n-\n-/* Output before instructions.  */\n-#undef TEXT_SECTION_ASM_OP\n-#define TEXT_SECTION_ASM_OP \"\\t.text\"\n-\n-/* Output before writable data.  */\n-#undef DATA_SECTION_ASM_OP\n-#define DATA_SECTION_ASM_OP \"\\t.data\"\n-\n-/* Output to the bss section.  */\n-#undef BSS_SECTION_ASM_OP\n-#define BSS_SECTION_ASM_OP \"\\t.section .bss\"\n-\n-/* Define the extra sections we need.  We define a dummy TOC section,\n-   plus sections to hold the list of static constructors (.ctors) and\n-   destructors (.dtors).  */\n-\n-#undef\tREADONLY_DATA_SECTION\n-#undef\tEXTRA_SECTIONS\n-#define EXTRA_SECTIONS in_toc, in_ctors, in_dtors\n-\n-/* Define the routines to implement these extra sections.  */\n-\n-#undef\tEXTRA_SECTION_FUNCTIONS\n-#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n-  CTORS_SECTION_FUNCTION\t\t\t\t\t\t\\\n-  DTORS_SECTION_FUNCTION\t\t\t\t\t\t\\\n-  TOC_SECTION_FUNCTION\t\t\t\t\t\t\t\\\n-\n-#define TOC_SECTION_FUNCTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-toc_section ()\t\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-#define CTORS_SECTION_ASM_OP\t\".section\\t.ctors\"\n-#define CTORS_SECTION_FUNCTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-ctors_section ()\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (in_section != in_ctors)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"%s\\n\", CTORS_SECTION_ASM_OP);\t\t\\\n-      in_section = in_ctors;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-#define DTORS_SECTION_ASM_OP\t\".section\\t.dtors\"\n-#define DTORS_SECTION_FUNCTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-dtors_section ()\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (in_section != in_dtors)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"%s\\n\", DTORS_SECTION_ASM_OP);\t\t\\\n-      in_section = in_dtors;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-#undef SELECT_SECTION\n-#undef SELECT_RTX_SECTION\n-\n-/* Make sure __main gets called */\n-#define INVOKE__main 1\n-\n-/* A C statement (sans semicolon) to output an element in the table of\n-   global constructors.  */\n-#undef\tASM_OUTPUT_CONSTRUCTOR\n-#define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    ctors_section ();\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t.ualong \");\t\t\t\t\t\\\n-    assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n-  } while (0)\n-\n-/* A C statement (sans semicolon) to output an element in the table of\n-   global destructors.  */\n-#undef\tASM_OUTPUT_DESTRUCTOR\n-#define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    dtors_section ();                   \t\t\t\t\\\n-    fprintf (FILE, \"\\t.ualong \");\t\t\t\t\t\\\n-    assemble_name (FILE, NAME);              \t\t\t\t\\\n-    fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n-  } while (0)\n-\n-\n-/* Text to write out after a CALL that may be replaced by glue code by\n-   the loader.  The motorola asm demands that, for dll support, a .znop\n-   be issued after a bl instruction, and the symbol on the .znop is the\n-   symbol on the bl instruction */\n-\n-#undef RS6000_CALL_GLUE\n-#define RS6000_CALL_GLUE \"nop #\\tFIXME: only works for non-dll calls.\"\n-\n-#define RS6000_CALL_GLUE2 \".znop \"\n-\n-#undef ASM_OUTPUT_SPECIAL_POOL_ENTRY\n-\n-/* Output something to declare an external symbol to the assembler.  Most\n-   assemblers don't need this.  */\n-\n-#undef ASM_OUTPUT_EXTERNAL\n-\n-#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  char *_name;\t\t\t\t\t\t\t\t\\\n-  rtx _symref = XEXP (DECL_RTL (DECL), 0);\t\t\t\t\\\n-  if ((TREE_CODE (DECL) == VAR_DECL\t\t\t\t\t\\\n-       || TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\t\\\n-      && (NAME)[strlen (NAME) - 1] != ']')\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      _name = (char *) permalloc (strlen (XSTR (_symref, 0)) + 5);\t\\\n-      strcpy (_name, XSTR (_symref, 0));\t\t\t\t\\\n-      XSTR (_symref, 0) = _name;\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    _name = XSTR (_symref, 0);\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  if (DECL_FUNCTION_CODE (DECL) == 0)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fputs (\"\\t.extern \", FILE);\t\t\t\t\t\\\n-      assemble_name (FILE, _name);\t\t\t\t\t\\\n-      putc ('\\n', FILE);\t\t\t\t\t\t\\\n-      if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  fputs (\"\\t.extern ..\", FILE);\t\t\t\t\t\\\n-\t  assemble_name (FILE, _name);\t\t\t\t\t\\\n-\t  putc ('\\n', FILE);\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-/* Similar, but for libcall.  We only have to worry about the function name,\n-   not that of the descriptor. */\n-\n-#undef ASM_OUTPUT_EXTERNAL_LIBCALL\n-\n-#define ASM_OUTPUT_EXTERNAL_LIBCALL(FILE, FUN)\t\\\n-{ fprintf (FILE, \"\\t.extern ..\");\t\t\\\n-  assemble_name (FILE, XSTR (FUN, 0));\t\t\\\n-  fprintf (FILE, \"\\n\");\t\t\t\t\\\n-}\n-\n-/* The prefix to add to user-visible assembler symbols. */\n-\n-#define USER_LABEL_PREFIX \"..\"\n-\n-/* Eliminate AIX style constant pool processing */\n-#undef\tLEGITIMATE_CONSTANT_POOL_BASE_P\n-#define\tLEGITIMATE_CONSTANT_POOL_BASE_P(X) 0\n-\n-#undef\tLEGITIMATE_CONSTANT_POOL_ADDRESS_P\n-#define\tLEGITIMATE_CONSTANT_POOL_ADDRESS_P(X) 0\n-\n-#undef ASM_OUTPUT_SPECIAL_POOL_ENTRY\n-\n-#undef  ASM_IDENTIFY_GCC\n-#define ASM_IDENTIFY_GCC(x)\n-\n-/* Output assembler code for a block containing the constant parts\n-   of a trampoline, leaving space for the variable parts.\n-\n-   The trampoline should set the static chain pointer to value placed\n-   into the trampoline and should branch to the specified routine.  */\n-#define TRAMPOLINE_TEMPLATE(FILE) rs6000_trampoline_template (FILE)"}, {"sha": "f978be17295b26559677747df507127e202b07d8", "filename": "gcc/config/rs6000/x-aix41", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fx-aix41", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfig%2Frs6000%2Fx-aix41", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-aix41?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -2,11 +2,3 @@\n \n # Show we need to use the C version of ALLOCA\n ALLOCA=alloca.o\n-\n-# We need -lld for collect2 (actually this only matters\n-# for a native compiler, but this is as good a place as any\n-# to define the symbol).\n-CLIB=-lld\n-\n-# f771 and cc1plus overflow the AIX TOC\n-BOOT_LDFLAGS=-Wl,-bbigtoc"}, {"sha": "ca444ae013c327db41aed345ce6bc88b832d2c78", "filename": "gcc/config/rs6000/x-aix41-gld", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fx-aix41-gld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fx-aix41-gld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-aix41-gld?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -1,12 +0,0 @@\n-# configuration for IBM RS/6000 running AIX 4.1+\n-\n-# Show we need to use the C version of ALLOCA\n-ALLOCA=alloca.o\n-\n-# We need -lld for collect2 (actually this only matters\n-# for a native compiler, but this is as good a place as any\n-# to define the symbol).\n-CLIB=-lld\n-\n-# f771 and cc1plus overflow the AIX TOC, however gld doesn't support -bbigtoc\n-# BOOT_LDFLAGS=-Wl,-bbigtoc"}, {"sha": "072d925fe2ddc70a7a17fa5360c855be13759cca", "filename": "gcc/config/rs6000/x-aix43", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fx-aix43", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Frs6000%2Fx-aix43", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-aix43?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -1,15 +0,0 @@\n-# configuration for IBM RS/6000 running AIX 4.3+\n-\n-# Show we need to use the C version of ALLOCA\n-ALLOCA=alloca.o\n-\n-# We need -lld for collect2 (actually this only matters\n-# for a native compiler, but this is as good a place as any\n-# to define the symbol).\n-CLIB=-lld\n-\n-# f771 and cc1plus overflow the AIX TOC\n-BOOT_LDFLAGS=-Wl,-bbigtoc\n-\n-# Both 32-bit and 64-bit objects in archives\n-AR_FOR_TARGET=ar -X32_64"}, {"sha": "432f12039dca2c017368ea2209e9a0110177c7be", "filename": "gcc/configure", "status": "modified", "additions": 113, "deletions": 140, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -1369,7 +1369,7 @@ else\n fi\n \n # Find some useful tools\n-for ac_prog in mawk gawk nawk awk\n+for ac_prog in gawk mawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -5694,6 +5694,15 @@ for machine in $build $host $target; do\n \t\textra_headers=ppc-asm.h\n \t\tthread_file='vxworks'\n                 ;;\n+        powerpcle-wrs-vxworks*)\n+                cpu_type=rs6000\n+\t\txm_file=\"rs6000/xm-sysv4.h\"\n+\t\txm_defines=\"USG POSIX\"\n+                tm_file=rs6000/vxppcle.h\n+                tmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n+\t\textra_headers=ppc-asm.h\n+\t\tthread_file='vxworks'\n+                ;;\n \tpowerpcle-*-sysv* | powerpcle-*-elf*)\n \t\ttm_file=rs6000/sysv4le.h\n \t\txm_file=\"rs6000/xm-sysv4.h\"\n@@ -5722,27 +5731,6 @@ for machine in $build $host $target; do\n \t\tfi\n \t\textra_headers=ppc-asm.h\n \t\t;;\n-        powerpcle-*-winnt* )\n-                tm_file=rs6000/win-nt.h\n-                tmake_file=rs6000/t-winnt\n-#               extra_objs=pe.o\n- \t\tif test x$enable_threads = xyes; then\n-\t\t\tthread_file='win32'\n-\t\tfi\n-\t\textra_headers=ppc-asm.h\n-\t\t;;\n-\tpowerpcle-*-pe | powerpcle-*-cygwin*)\n-\t\ttm_file=rs6000/cygwin.h\n-\t\txm_file=\"rs6000/xm-cygwin.h ${xm_file}\"\n-\t\ttmake_file=rs6000/t-winnt\n-\t\txmake_file=rs6000/x-cygwin\n-#\t\textra_objs=pe.o\n- \t\tif test x$enable_threads = xyes; then\n-\t\t\tthread_file='win32'\n-\t\tfi\n-\t\texeext=.exe\n-\t\textra_headers=ppc-asm.h\n-\t\t;;\n \tpowerpcle-*-solaris2*)\n \t\ttm_file=rs6000/sol2.h\n \t\txm_file=\"rs6000/xm-sysv4.h\"\n@@ -5781,36 +5769,21 @@ for machine in $build $host $target; do\n \t\telse\n \t\t\ttmake_file=rs6000/t-newas\n \t\tfi\n-\t\tif test \"$gnu_ld\" = yes\n-\t\tthen\n-\t\t\txmake_file=rs6000/x-aix41-gld\n-\t\telse\n-\t\t\txmake_file=rs6000/x-aix41\n-\t\tfi\n+\t\txmake_file=rs6000/x-aix41\n \t\tfloat_format=none\n \t\tuse_collect2=yes\n \t\t;;\n \trs6000-ibm-aix4.[3456789]* | powerpc-ibm-aix4.[3456789]*)\n \t\ttm_file=rs6000/aix43.h\n-\t\tif test x$host != x$target\n-\t\tthen\n-\t\t\ttmake_file=rs6000/t-xaix43\n-\t\telse\n-\t\t\ttmake_file=rs6000/t-aix43\n-\t\tfi\n-\t\txmake_file=rs6000/x-aix43\n+\t\ttmake_file=rs6000/t-aix43\n+\t\txmake_file=rs6000/x-aix41\n \t\tfloat_format=none\n \t\tuse_collect2=yes\n \t\t;;\n \trs6000-ibm-aix[56789].* | powerpc-ibm-aix[56789].*)\n \t\ttm_file=rs6000/aix43.h\n-\t\tif test x$host != x$target\n-\t\tthen\n-\t\t\ttmake_file=rs6000/t-xaix43\n-\t\telse\n-\t\t\ttmake_file=rs6000/t-aix43\n-\t\tfi\n-\t\txmake_file=rs6000/x-aix43\n+\t\ttmake_file=rs6000/t-aix43\n+\t\txmake_file=rs6000/x-aix41\n \t\tfloat_format=none\n \t\tuse_collect2=yes\n \t\t;;\n@@ -6678,15 +6651,15 @@ fi\n \n \n         echo $ac_n \"checking for strerror in -lcposix\"\"... $ac_c\" 1>&6\n-echo \"configure:6682: checking for strerror in -lcposix\" >&5\n+echo \"configure:6655: checking for strerror in -lcposix\" >&5\n ac_lib_var=`echo cposix'_'strerror | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lcposix  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6690 \"configure\"\n+#line 6663 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6697,7 +6670,7 @@ int main() {\n strerror()\n ; return 0; }\n EOF\n-if { (eval echo configure:6701: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6674: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6720,12 +6693,12 @@ fi\n   \n \n echo $ac_n \"checking for working const\"\"... $ac_c\" 1>&6\n-echo \"configure:6724: checking for working const\" >&5\n+echo \"configure:6697: checking for working const\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_const'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6729 \"configure\"\n+#line 6702 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -6774,7 +6747,7 @@ ccp = (char const *const *) p;\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6778: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:6751: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_const=yes\n else\n@@ -6795,21 +6768,21 @@ EOF\n fi\n \n echo $ac_n \"checking for inline\"\"... $ac_c\" 1>&6\n-echo \"configure:6799: checking for inline\" >&5\n+echo \"configure:6772: checking for inline\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_inline'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_cv_c_inline=no\n for ac_kw in inline __inline__ __inline; do\n   cat > conftest.$ac_ext <<EOF\n-#line 6806 \"configure\"\n+#line 6779 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n } $ac_kw foo() {\n ; return 0; }\n EOF\n-if { (eval echo configure:6813: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:6786: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_inline=$ac_kw; break\n else\n@@ -6835,12 +6808,12 @@ EOF\n esac\n \n echo $ac_n \"checking for off_t\"\"... $ac_c\" 1>&6\n-echo \"configure:6839: checking for off_t\" >&5\n+echo \"configure:6812: checking for off_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_off_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6844 \"configure\"\n+#line 6817 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -6868,12 +6841,12 @@ EOF\n fi\n \n echo $ac_n \"checking for size_t\"\"... $ac_c\" 1>&6\n-echo \"configure:6872: checking for size_t\" >&5\n+echo \"configure:6845: checking for size_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_size_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6877 \"configure\"\n+#line 6850 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -6903,19 +6876,19 @@ fi\n # The Ultrix 4.2 mips builtin alloca declared by alloca.h only works\n # for constant arguments.  Useless!\n echo $ac_n \"checking for working alloca.h\"\"... $ac_c\" 1>&6\n-echo \"configure:6907: checking for working alloca.h\" >&5\n+echo \"configure:6880: checking for working alloca.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_alloca_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6912 \"configure\"\n+#line 6885 \"configure\"\n #include \"confdefs.h\"\n #include <alloca.h>\n int main() {\n char *p = alloca(2 * sizeof(int));\n ; return 0; }\n EOF\n-if { (eval echo configure:6919: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6892: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_header_alloca_h=yes\n else\n@@ -6936,12 +6909,12 @@ EOF\n fi\n \n echo $ac_n \"checking for alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:6940: checking for alloca\" >&5\n+echo \"configure:6913: checking for alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_alloca_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6945 \"configure\"\n+#line 6918 \"configure\"\n #include \"confdefs.h\"\n \n #ifdef __GNUC__\n@@ -6969,7 +6942,7 @@ int main() {\n char *p = (char *) alloca(1);\n ; return 0; }\n EOF\n-if { (eval echo configure:6973: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6946: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_func_alloca_works=yes\n else\n@@ -7001,12 +6974,12 @@ EOF\n \n \n echo $ac_n \"checking whether alloca needs Cray hooks\"\"... $ac_c\" 1>&6\n-echo \"configure:7005: checking whether alloca needs Cray hooks\" >&5\n+echo \"configure:6978: checking whether alloca needs Cray hooks\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_os_cray'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7010 \"configure\"\n+#line 6983 \"configure\"\n #include \"confdefs.h\"\n #if defined(CRAY) && ! defined(CRAY2)\n webecray\n@@ -7031,12 +7004,12 @@ echo \"$ac_t\"\"$ac_cv_os_cray\" 1>&6\n if test $ac_cv_os_cray = yes; then\n for ac_func in _getb67 GETB67 getb67; do\n   echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:7035: checking for $ac_func\" >&5\n+echo \"configure:7008: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7040 \"configure\"\n+#line 7013 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -7059,7 +7032,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:7063: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7036: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -7086,15 +7059,15 @@ done\n fi\n \n echo $ac_n \"checking stack direction for C alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:7090: checking stack direction for C alloca\" >&5\n+echo \"configure:7063: checking stack direction for C alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_stack_direction'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_c_stack_direction=0\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7098 \"configure\"\n+#line 7071 \"configure\"\n #include \"confdefs.h\"\n find_stack_direction ()\n {\n@@ -7113,7 +7086,7 @@ main ()\n   exit (find_stack_direction() < 0);\n }\n EOF\n-if { (eval echo configure:7117: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:7090: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_c_stack_direction=1\n else\n@@ -7138,17 +7111,17 @@ for ac_hdr in unistd.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:7142: checking for $ac_hdr\" >&5\n+echo \"configure:7115: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7147 \"configure\"\n+#line 7120 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:7152: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:7125: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -7177,12 +7150,12 @@ done\n for ac_func in getpagesize\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:7181: checking for $ac_func\" >&5\n+echo \"configure:7154: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7186 \"configure\"\n+#line 7159 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -7205,7 +7178,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:7209: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7182: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -7230,15 +7203,15 @@ fi\n done\n \n echo $ac_n \"checking for working mmap\"\"... $ac_c\" 1>&6\n-echo \"configure:7234: checking for working mmap\" >&5\n+echo \"configure:7207: checking for working mmap\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_fixed_mapped'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_func_mmap_fixed_mapped=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7242 \"configure\"\n+#line 7215 \"configure\"\n #include \"confdefs.h\"\n \n /* Thanks to Mike Haertel and Jim Avera for this test.\n@@ -7378,7 +7351,7 @@ main()\n }\n \n EOF\n-if { (eval echo configure:7382: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:7355: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_fixed_mapped=yes\n else\n@@ -7406,17 +7379,17 @@ unistd.h sys/param.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:7410: checking for $ac_hdr\" >&5\n+echo \"configure:7383: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7415 \"configure\"\n+#line 7388 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:7420: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:7393: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -7446,12 +7419,12 @@ done\n strdup __argz_count __argz_stringify __argz_next\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:7450: checking for $ac_func\" >&5\n+echo \"configure:7423: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7455 \"configure\"\n+#line 7428 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -7474,7 +7447,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:7478: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7451: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -7503,12 +7476,12 @@ done\n      for ac_func in stpcpy\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:7507: checking for $ac_func\" >&5\n+echo \"configure:7480: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7512 \"configure\"\n+#line 7485 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -7531,7 +7504,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:7535: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7508: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -7565,19 +7538,19 @@ EOF\n \n    if test $ac_cv_header_locale_h = yes; then\n     echo $ac_n \"checking for LC_MESSAGES\"\"... $ac_c\" 1>&6\n-echo \"configure:7569: checking for LC_MESSAGES\" >&5\n+echo \"configure:7542: checking for LC_MESSAGES\" >&5\n if eval \"test \\\"`echo '$''{'am_cv_val_LC_MESSAGES'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7574 \"configure\"\n+#line 7547 \"configure\"\n #include \"confdefs.h\"\n #include <locale.h>\n int main() {\n return LC_MESSAGES\n ; return 0; }\n EOF\n-if { (eval echo configure:7581: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7554: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   am_cv_val_LC_MESSAGES=yes\n else\n@@ -7598,7 +7571,7 @@ EOF\n     fi\n   fi\n    echo $ac_n \"checking whether NLS is requested\"\"... $ac_c\" 1>&6\n-echo \"configure:7602: checking whether NLS is requested\" >&5\n+echo \"configure:7575: checking whether NLS is requested\" >&5\n         # Check whether --enable-nls or --disable-nls was given.\n if test \"${enable_nls+set}\" = set; then\n   enableval=\"$enable_nls\"\n@@ -7618,7 +7591,7 @@ fi\n EOF\n \n       echo $ac_n \"checking whether included gettext is requested\"\"... $ac_c\" 1>&6\n-echo \"configure:7622: checking whether included gettext is requested\" >&5\n+echo \"configure:7595: checking whether included gettext is requested\" >&5\n       # Check whether --with-included-gettext or --without-included-gettext was given.\n if test \"${with_included_gettext+set}\" = set; then\n   withval=\"$with_included_gettext\"\n@@ -7637,17 +7610,17 @@ fi\n \n \tac_safe=`echo \"libintl.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for libintl.h\"\"... $ac_c\" 1>&6\n-echo \"configure:7641: checking for libintl.h\" >&5\n+echo \"configure:7614: checking for libintl.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7646 \"configure\"\n+#line 7619 \"configure\"\n #include \"confdefs.h\"\n #include <libintl.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:7651: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:7624: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -7664,19 +7637,19 @@ fi\n if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   echo $ac_n \"checking for gettext in libc\"\"... $ac_c\" 1>&6\n-echo \"configure:7668: checking for gettext in libc\" >&5\n+echo \"configure:7641: checking for gettext in libc\" >&5\n if eval \"test \\\"`echo '$''{'gt_cv_func_gettext_libc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7673 \"configure\"\n+#line 7646 \"configure\"\n #include \"confdefs.h\"\n #include <libintl.h>\n int main() {\n return (int) gettext (\"\")\n ; return 0; }\n EOF\n-if { (eval echo configure:7680: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7653: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   gt_cv_func_gettext_libc=yes\n else\n@@ -7692,15 +7665,15 @@ echo \"$ac_t\"\"$gt_cv_func_gettext_libc\" 1>&6\n \n \t   if test \"$gt_cv_func_gettext_libc\" != \"yes\"; then\n \t     echo $ac_n \"checking for bindtextdomain in -lintl\"\"... $ac_c\" 1>&6\n-echo \"configure:7696: checking for bindtextdomain in -lintl\" >&5\n+echo \"configure:7669: checking for bindtextdomain in -lintl\" >&5\n ac_lib_var=`echo intl'_'bindtextdomain | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lintl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 7704 \"configure\"\n+#line 7677 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -7711,7 +7684,7 @@ int main() {\n bindtextdomain()\n ; return 0; }\n EOF\n-if { (eval echo configure:7715: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7688: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -7727,20 +7700,20 @@ fi\n if eval \"test \\\"`echo '$ac_cv_lib_'$ac_lib_var`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   echo $ac_n \"checking for gettext in libintl\"\"... $ac_c\" 1>&6\n-echo \"configure:7731: checking for gettext in libintl\" >&5\n+echo \"configure:7704: checking for gettext in libintl\" >&5\n if eval \"test \\\"`echo '$''{'gt_cv_func_gettext_libintl'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   echo $ac_n \"checking for gettext in -lintl\"\"... $ac_c\" 1>&6\n-echo \"configure:7736: checking for gettext in -lintl\" >&5\n+echo \"configure:7709: checking for gettext in -lintl\" >&5\n ac_lib_var=`echo intl'_'gettext | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lintl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 7744 \"configure\"\n+#line 7717 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -7751,7 +7724,7 @@ int main() {\n gettext()\n ; return 0; }\n EOF\n-if { (eval echo configure:7755: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7728: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -7790,7 +7763,7 @@ EOF\n \t      # Extract the first word of \"msgfmt\", so it can be a program name with args.\n set dummy msgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7794: checking for $ac_word\" >&5\n+echo \"configure:7767: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_MSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7824,12 +7797,12 @@ fi\n \t\tfor ac_func in dcgettext\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:7828: checking for $ac_func\" >&5\n+echo \"configure:7801: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7833 \"configure\"\n+#line 7806 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -7852,7 +7825,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:7856: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7829: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -7879,7 +7852,7 @@ done\n \t\t# Extract the first word of \"gmsgfmt\", so it can be a program name with args.\n set dummy gmsgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7883: checking for $ac_word\" >&5\n+echo \"configure:7856: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7915,7 +7888,7 @@ fi\n \t\t# Extract the first word of \"xgettext\", so it can be a program name with args.\n set dummy xgettext; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7919: checking for $ac_word\" >&5\n+echo \"configure:7892: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_XGETTEXT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7947,15 +7920,15 @@ else\n fi\n \n \t\tcat > conftest.$ac_ext <<EOF\n-#line 7951 \"configure\"\n+#line 7924 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n extern int _nl_msg_cat_cntr;\n \t\t\t       return _nl_msg_cat_cntr\n ; return 0; }\n EOF\n-if { (eval echo configure:7959: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7932: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   CATOBJEXT=.gmo\n \t\t   DATADIRNAME=share\n@@ -7978,7 +7951,7 @@ fi\n \n         if test \"$CATOBJEXT\" = \"NONE\"; then\n \t  echo $ac_n \"checking whether catgets can be used\"\"... $ac_c\" 1>&6\n-echo \"configure:7982: checking whether catgets can be used\" >&5\n+echo \"configure:7955: checking whether catgets can be used\" >&5\n \t  # Check whether --with-catgets or --without-catgets was given.\n if test \"${with_catgets+set}\" = set; then\n   withval=\"$with_catgets\"\n@@ -7991,22 +7964,22 @@ fi\n \n \t  if test \"$nls_cv_use_catgets\" = \"yes\"; then\n \t    \t    echo $ac_n \"checking for main in -li\"\"... $ac_c\" 1>&6\n-echo \"configure:7995: checking for main in -li\" >&5\n+echo \"configure:7968: checking for main in -li\" >&5\n ac_lib_var=`echo i'_'main | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-li  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 8003 \"configure\"\n+#line 7976 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n main()\n ; return 0; }\n EOF\n-if { (eval echo configure:8010: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7983: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -8034,12 +8007,12 @@ else\n fi\n \n \t    echo $ac_n \"checking for catgets\"\"... $ac_c\" 1>&6\n-echo \"configure:8038: checking for catgets\" >&5\n+echo \"configure:8011: checking for catgets\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_catgets'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 8043 \"configure\"\n+#line 8016 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char catgets(); below.  */\n@@ -8062,7 +8035,7 @@ catgets();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:8066: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:8039: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_catgets=yes\"\n else\n@@ -8084,7 +8057,7 @@ EOF\n \t       # Extract the first word of \"gencat\", so it can be a program name with args.\n set dummy gencat; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:8088: checking for $ac_word\" >&5\n+echo \"configure:8061: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_GENCAT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8120,7 +8093,7 @@ fi\n \t\t # Extract the first word of \"gmsgfmt\", so it can be a program name with args.\n set dummy gmsgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:8124: checking for $ac_word\" >&5\n+echo \"configure:8097: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8157,7 +8130,7 @@ fi\n \t\t   # Extract the first word of \"msgfmt\", so it can be a program name with args.\n set dummy msgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:8161: checking for $ac_word\" >&5\n+echo \"configure:8134: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8192,7 +8165,7 @@ fi\n \t\t # Extract the first word of \"xgettext\", so it can be a program name with args.\n set dummy xgettext; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:8196: checking for $ac_word\" >&5\n+echo \"configure:8169: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_XGETTEXT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8250,7 +8223,7 @@ fi\n         # Extract the first word of \"msgfmt\", so it can be a program name with args.\n set dummy msgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:8254: checking for $ac_word\" >&5\n+echo \"configure:8227: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_MSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8284,7 +8257,7 @@ fi\n         # Extract the first word of \"gmsgfmt\", so it can be a program name with args.\n set dummy gmsgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:8288: checking for $ac_word\" >&5\n+echo \"configure:8261: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8320,7 +8293,7 @@ fi\n         # Extract the first word of \"xgettext\", so it can be a program name with args.\n set dummy xgettext; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:8324: checking for $ac_word\" >&5\n+echo \"configure:8297: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_XGETTEXT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8413,7 +8386,7 @@ fi\n        LINGUAS=\n      else\n        echo $ac_n \"checking for catalogs to be installed\"\"... $ac_c\" 1>&6\n-echo \"configure:8417: checking for catalogs to be installed\" >&5\n+echo \"configure:8390: checking for catalogs to be installed\" >&5\n        NEW_LINGUAS=\n        for lang in ${LINGUAS=$ALL_LINGUAS}; do\n          case \"$ALL_LINGUAS\" in\n@@ -8441,17 +8414,17 @@ echo \"configure:8417: checking for catalogs to be installed\" >&5\n    if test \"$CATOBJEXT\" = \".cat\"; then\n      ac_safe=`echo \"linux/version.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for linux/version.h\"\"... $ac_c\" 1>&6\n-echo \"configure:8445: checking for linux/version.h\" >&5\n+echo \"configure:8418: checking for linux/version.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 8450 \"configure\"\n+#line 8423 \"configure\"\n #include \"confdefs.h\"\n #include <linux/version.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:8455: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:8428: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -8526,7 +8499,7 @@ fi\n \n \n echo $ac_n \"checking whether windows registry support is requested\"\"... $ac_c\" 1>&6\n-echo \"configure:8530: checking whether windows registry support is requested\" >&5\n+echo \"configure:8503: checking whether windows registry support is requested\" >&5\n if test x$enable_win32_registry != xno; then\n   cat >> confdefs.h <<\\EOF\n #define ENABLE_WIN32_REGISTRY 1\n@@ -8555,7 +8528,7 @@ esac\n \n if test x$enable_win32_registry != xno; then\n   echo $ac_n \"checking registry key on windows hosts\"\"... $ac_c\" 1>&6\n-echo \"configure:8559: checking registry key on windows hosts\" >&5\n+echo \"configure:8532: checking registry key on windows hosts\" >&5\n   cat >> confdefs.h <<EOF\n #define WIN32_REGISTRY_KEY \"$gcc_cv_win32_registry_key\"\n EOF\n@@ -8731,7 +8704,7 @@ fi\n \n # Figure out what assembler alignment features are present.\n echo $ac_n \"checking assembler alignment features\"\"... $ac_c\" 1>&6\n-echo \"configure:8735: checking assembler alignment features\" >&5\n+echo \"configure:8708: checking assembler alignment features\" >&5\n gcc_cv_as=\n gcc_cv_as_alignment_features=\n gcc_cv_as_gas_srcdir=`echo $srcdir | sed -e 's,/gcc$,,'`/gas\n@@ -8852,7 +8825,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_alignment_features\" 1>&6\n \n echo $ac_n \"checking assembler subsection support\"\"... $ac_c\" 1>&6\n-echo \"configure:8856: checking assembler subsection support\" >&5\n+echo \"configure:8829: checking assembler subsection support\" >&5\n gcc_cv_as_subsections=\n if test x$gcc_cv_as != x; then\n \t# Check if we have .subsection\n@@ -8892,7 +8865,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_subsections\" 1>&6\n \n echo $ac_n \"checking assembler weak support\"\"... $ac_c\" 1>&6\n-echo \"configure:8896: checking assembler weak support\" >&5\n+echo \"configure:8869: checking assembler weak support\" >&5\n gcc_cv_as_weak=\n if test x$gcc_cv_as != x; then\n \t# Check if we have .weak\n@@ -8911,7 +8884,7 @@ echo \"$ac_t\"\"$gcc_cv_as_weak\" 1>&6\n case \"$target\" in \n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:8915: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:8888: checking assembler .register pseudo-op support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8941,7 +8914,7 @@ EOF\n     case \"$tm_file\" in\n     *64*)\n \techo $ac_n \"checking for 64 bit support in assembler ($gcc_cv_as)\"\"... $ac_c\" 1>&6\n-echo \"configure:8945: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n+echo \"configure:8918: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_flags64'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8986,7 +8959,7 @@ EOF\n \n     if test \"x$gcc_cv_as_flags64\" != xno; then\n \techo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:8990: checking for assembler offsetable %lo() support\" >&5\n+echo \"configure:8963: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -9025,7 +8998,7 @@ EOF\n \n   i[34567]86-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:9029: checking assembler instructions\" >&5\n+echo \"configure:9002: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test x$gcc_cv_as != x; then\n \tset \"filds fists\" \"filds mem; fists mem\""}, {"sha": "0b79091a278c3a1621bf1d54196eff29bda52d83", "filename": "gcc/configure.in", "status": "modified", "additions": 14, "deletions": 41, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebbca7d736ea66eabef6263a4317458bc2676ac/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=9ebbca7d736ea66eabef6263a4317458bc2676ac", "patch": "@@ -3078,6 +3078,15 @@ changequote([,])dnl\n \t\textra_headers=ppc-asm.h\n \t\tthread_file='vxworks'\n                 ;;\n+        powerpcle-wrs-vxworks*)\n+                cpu_type=rs6000\n+\t\txm_file=\"rs6000/xm-sysv4.h\"\n+\t\txm_defines=\"USG POSIX\"\n+                tm_file=rs6000/vxppcle.h\n+                tmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n+\t\textra_headers=ppc-asm.h\n+\t\tthread_file='vxworks'\n+                ;;\n \tpowerpcle-*-sysv* | powerpcle-*-elf*)\n \t\ttm_file=rs6000/sysv4le.h\n \t\txm_file=\"rs6000/xm-sysv4.h\"\n@@ -3106,27 +3115,6 @@ changequote([,])dnl\n \t\tfi\n \t\textra_headers=ppc-asm.h\n \t\t;;\n-        powerpcle-*-winnt* )\n-                tm_file=rs6000/win-nt.h\n-                tmake_file=rs6000/t-winnt\n-#               extra_objs=pe.o\n- \t\tif test x$enable_threads = xyes; then\n-\t\t\tthread_file='win32'\n-\t\tfi\n-\t\textra_headers=ppc-asm.h\n-\t\t;;\n-\tpowerpcle-*-pe | powerpcle-*-cygwin*)\n-\t\ttm_file=rs6000/cygwin.h\n-\t\txm_file=\"rs6000/xm-cygwin.h ${xm_file}\"\n-\t\ttmake_file=rs6000/t-winnt\n-\t\txmake_file=rs6000/x-cygwin\n-#\t\textra_objs=pe.o\n- \t\tif test x$enable_threads = xyes; then\n-\t\t\tthread_file='win32'\n-\t\tfi\n-\t\texeext=.exe\n-\t\textra_headers=ppc-asm.h\n-\t\t;;\n \tpowerpcle-*-solaris2*)\n \t\ttm_file=rs6000/sol2.h\n \t\txm_file=\"rs6000/xm-sysv4.h\"\n@@ -3171,40 +3159,25 @@ changequote([,])dnl\n \t\telse\n \t\t\ttmake_file=rs6000/t-newas\n \t\tfi\n-\t\tif test \"$gnu_ld\" = yes\n-\t\tthen\n-\t\t\txmake_file=rs6000/x-aix41-gld\n-\t\telse\n-\t\t\txmake_file=rs6000/x-aix41\n-\t\tfi\n+\t\txmake_file=rs6000/x-aix41\n \t\tfloat_format=none\n \t\tuse_collect2=yes\n \t\t;;\n changequote(,)dnl\n \trs6000-ibm-aix4.[3456789]* | powerpc-ibm-aix4.[3456789]*)\n changequote([,])dnl\n \t\ttm_file=rs6000/aix43.h\n-\t\tif test x$host != x$target\n-\t\tthen\n-\t\t\ttmake_file=rs6000/t-xaix43\n-\t\telse\n-\t\t\ttmake_file=rs6000/t-aix43\n-\t\tfi\n-\t\txmake_file=rs6000/x-aix43\n+\t\ttmake_file=rs6000/t-aix43\n+\t\txmake_file=rs6000/x-aix41\n \t\tfloat_format=none\n \t\tuse_collect2=yes\n \t\t;;\n changequote(,)dnl\n \trs6000-ibm-aix[56789].* | powerpc-ibm-aix[56789].*)\n changequote([,])dnl\n \t\ttm_file=rs6000/aix43.h\n-\t\tif test x$host != x$target\n-\t\tthen\n-\t\t\ttmake_file=rs6000/t-xaix43\n-\t\telse\n-\t\t\ttmake_file=rs6000/t-aix43\n-\t\tfi\n-\t\txmake_file=rs6000/x-aix43\n+\t\ttmake_file=rs6000/t-aix43\n+\t\txmake_file=rs6000/x-aix41\n \t\tfloat_format=none\n \t\tuse_collect2=yes\n \t\t;;"}]}