{"sha": "d99ff0f407dadb7b1e576416c5de4dce43151222", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5ZmYwZjQwN2RhZGI3YjFlNTc2NDE2YzVkZTRkY2U0MzE1MTIyMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-04-26T10:03:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-04-26T10:03:51Z"}, "message": "[multiple changes]\n\n2012-04-26  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Loop_Parameter_Specification): Do not freeze\n\tthe loop variable while preanalyzing a quantified expression.\n\n2012-04-26  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* a-calend.adb (Split, Time_Of): Rename parameter Is_Ada_05\n\tto Use_TZ to better illustrate its function. Update all\n\treferences to the parameter.\n\t(To_Ada_Time): Update the call to Formatting_Operations.Time_Of.\n\t* a-calend.ads (Split, Time_Of): Rename parameter Is_Ada_05\n\tto Use_TZ to better illustrate its function. Update the related\n\tcomment on usage.\n\t* a-calend-vms.adb (Split, Time_Of): Rename parameter\n\tIs_Ada_05 to Use_TZ to better illustrate its function. Update\n\tall references to the parameter.\n\t(To_Ada_Time): Update the call to Formatting_Operations.Time_Of.\n\t* a-calend-vms.ads (Split, Time_Of): Rename parameter Is_Ada_05\n\tto Use_TZ to better illustrate its function. Update the related\n\tcomment on usage.\n\t* a-calfor.adb (Split, Time_Of): Update the call to\n\tFormatting_Operations.Time_Of.\n\t* sysdep.c (__gnat_localtime_tzoff): Dereference pointer\n\t\"is_historic\" and rewrite the check as a comparison. Add a\n\tcomment on flag values.\n\n2012-04-26  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch2.adb, sem_ch8.adb: Minor reformatting.\n\n2012-04-26  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* a-stzunb-shared.adb, gnat_ugn.texi, a-strunb-shared.adb,\n\ta-strunb-shared.ads, uintp.adb, a-stwiun-shared.adb,\n\ta-stwiun-shared.ads, a-cbhama.ads, vms_data.ads, a-cobove.adb,\n\ta-convec.adb, sem_ch13.adb, a-cbhase.ads: Fix common misuses of the\n\tword \"then\" where \"than\" should be used in English.\n\nFrom-SVN: r186871", "tree": {"sha": "20024bd520d431dd71ac643a761e5474d7c9b85b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20024bd520d431dd71ac643a761e5474d7c9b85b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d99ff0f407dadb7b1e576416c5de4dce43151222", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99ff0f407dadb7b1e576416c5de4dce43151222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d99ff0f407dadb7b1e576416c5de4dce43151222", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99ff0f407dadb7b1e576416c5de4dce43151222/comments", "author": null, "committer": null, "parents": [{"sha": "f146302c2594902c5584bdf9ea25c57979e4cb1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f146302c2594902c5584bdf9ea25c57979e4cb1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f146302c2594902c5584bdf9ea25c57979e4cb1c"}], "stats": {"total": 224, "additions": 135, "deletions": 89}, "files": [{"sha": "c8e7b8e3a00a21d5a80692abf14c2d24974cc8ef", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -1,3 +1,42 @@\n+2012-04-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Loop_Parameter_Specification): Do not freeze\n+\tthe loop variable while preanalyzing a quantified expression.\n+\n+2012-04-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* a-calend.adb (Split, Time_Of): Rename parameter Is_Ada_05\n+\tto Use_TZ to better illustrate its function. Update all\n+\treferences to the parameter.\n+\t(To_Ada_Time): Update the call to Formatting_Operations.Time_Of.\n+\t* a-calend.ads (Split, Time_Of): Rename parameter Is_Ada_05\n+\tto Use_TZ to better illustrate its function. Update the related\n+\tcomment on usage.\n+\t* a-calend-vms.adb (Split, Time_Of): Rename parameter\n+\tIs_Ada_05 to Use_TZ to better illustrate its function. Update\n+\tall references to the parameter.\n+\t(To_Ada_Time): Update the call to Formatting_Operations.Time_Of.\n+\t* a-calend-vms.ads (Split, Time_Of): Rename parameter Is_Ada_05\n+\tto Use_TZ to better illustrate its function. Update the related\n+\tcomment on usage.\n+\t* a-calfor.adb (Split, Time_Of): Update the call to\n+\tFormatting_Operations.Time_Of.\n+\t* sysdep.c (__gnat_localtime_tzoff): Dereference pointer\n+\t\"is_historic\" and rewrite the check as a comparison. Add a\n+\tcomment on flag values.\n+\n+2012-04-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch2.adb, sem_ch8.adb: Minor reformatting.\n+\n+2012-04-26  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* a-stzunb-shared.adb, gnat_ugn.texi, a-strunb-shared.adb,\n+\ta-strunb-shared.ads, uintp.adb, a-stwiun-shared.adb,\n+\ta-stwiun-shared.ads, a-cbhama.ads, vms_data.ads, a-cobove.adb,\n+\ta-convec.adb, sem_ch13.adb, a-cbhase.ads: Fix common misuses of the\n+\tword \"then\" where \"than\" should be used in English.\n+\n 2012-04-26  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch5.adb (Check_Unreachable_Code): Skip past pragmas."}, {"sha": "1306488d9a42c9c1b8e81b06d5d84230c2a20d79", "filename": "gcc/ada/a-calend-vms.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-calend-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-calend-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend-vms.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -517,8 +517,8 @@ package body Ada.Calendar is\n       Le : Boolean;\n \n    begin\n-      --  Use UTC as the local time zone on VMS, the status of flag Is_Ada_05\n-      --  is irrelevant in this case.\n+      --  Use UTC as the local time zone on VMS, the status of flag Use_TZ is\n+      --  irrelevant in this case.\n \n       Formatting_Operations.Split\n         (Date      => Date,\n@@ -531,7 +531,7 @@ package body Ada.Calendar is\n          Second    => Se,\n          Sub_Sec   => Ss,\n          Leap_Sec  => Le,\n-         Is_Ada_05 => False,\n+         Use_TZ    => False,\n          Time_Zone => 0);\n \n       --  Validity checks\n@@ -573,8 +573,8 @@ package body Ada.Calendar is\n          raise Time_Error;\n       end if;\n \n-      --  Use UTC as the local time zone on VMS, the status of flag Is_Ada_05\n-      --  is irrelevant in this case.\n+      --  Use UTC as the local time zone on VMS, the status of flag Use_TZ is\n+      --  irrelevant in this case.\n \n       return\n         Formatting_Operations.Time_Of\n@@ -588,7 +588,7 @@ package body Ada.Calendar is\n            Sub_Sec      => Ss,\n            Leap_Sec     => False,\n            Use_Day_Secs => True,\n-           Is_Ada_05    => False,\n+           Use_TZ       => False,\n            Time_Zone    => 0);\n    end Time_Of;\n \n@@ -835,7 +835,7 @@ package body Ada.Calendar is\n                 Sub_Sec      => 0.0,      --  No precise sub second given\n                 Leap_Sec     => Leap,\n                 Use_Day_Secs => False,    --  Time is given in h:m:s\n-                Is_Ada_05    => True,     --  Force usage of explicit time zone\n+                Use_TZ       => True,     --  Force usage of explicit time zone\n                 Time_Zone    => 0));      --  Place the value in UTC\n          --  Step 4: Daylight Savings Time\n \n@@ -990,12 +990,12 @@ package body Ada.Calendar is\n          Second    : out Integer;\n          Sub_Sec   : out Duration;\n          Leap_Sec  : out Boolean;\n-         Is_Ada_05 : Boolean;\n+         Use_TZ    : Boolean;\n          Time_Zone : Long_Integer)\n       is\n-         --  The flag Is_Ada_05 is present for interfacing purposes\n+         --  The flag Use_TZ is present for interfacing purposes\n \n-         pragma Unreferenced (Is_Ada_05);\n+         pragma Unreferenced (Use_TZ);\n \n          procedure Numtim\n            (Status : out Unsigned_Longword;\n@@ -1106,7 +1106,7 @@ package body Ada.Calendar is\n          Sub_Sec      : Duration;\n          Leap_Sec     : Boolean := False;\n          Use_Day_Secs : Boolean := False;\n-         Is_Ada_05    : Boolean := False;\n+         Use_TZ       : Boolean := False;\n          Time_Zone    : Long_Integer := 0) return Time\n       is\n          procedure Cvt_Vectim\n@@ -1255,7 +1255,7 @@ package body Ada.Calendar is\n \n             Rounded_Res_M := Res_M - (Res_M mod Mili);\n \n-            if Is_Ada_05\n+            if Use_TZ\n               and then Leap_Sec\n               and then Rounded_Res_M /= Next_Leap_M\n             then"}, {"sha": "83534c2c9168b79751a2ba712aa5c4b709c21be8", "filename": "gcc/ada/a-calend-vms.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-calend-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-calend-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend-vms.ads?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -228,11 +228,11 @@ private\n          Second    : out Integer;\n          Sub_Sec   : out Duration;\n          Leap_Sec  : out Boolean;\n-         Is_Ada_05 : Boolean;\n+         Use_TZ    : Boolean;\n          Time_Zone : Long_Integer);\n-      --  Split a time value into its components. Set Is_Ada_05 to use the\n-      --  local time zone (the value in Time_Zone is ignored) when splitting\n-      --  a time value.\n+      --  Split a time value into its components. Set Use_TZ to use the local\n+      --  time zone (the value in Time_Zone is ignored) when splitting a time\n+      --  value.\n \n       function Time_Of\n         (Year         : Year_Number;\n@@ -245,12 +245,12 @@ private\n          Sub_Sec      : Duration;\n          Leap_Sec     : Boolean := False;\n          Use_Day_Secs : Boolean := False;\n-         Is_Ada_05    : Boolean := False;\n+         Use_TZ       : Boolean := False;\n          Time_Zone    : Long_Integer := 0) return Time;\n       --  Given all the components of a date, return the corresponding time\n       --  value. Set Use_Day_Secs to use the value in Day_Secs, otherwise the\n       --  day duration will be calculated from Hour, Minute, Second and Sub_\n-      --  Sec. Set Is_Ada_05 to use the local time zone (the value in formal\n+      --  Sec. Set Use_TZ to use the local time zone (the value in formal\n       --  Time_Zone is ignored) when building a time value and to verify the\n       --  validity of a requested leap second.\n "}, {"sha": "94257c232f0fab23a99795dd0b894cca0615b1aa", "filename": "gcc/ada/a-calend.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -575,7 +575,7 @@ package body Ada.Calendar is\n       pragma Unreferenced (H, M, Se, Ss, Le);\n \n    begin\n-      --  Even though the input time zone is UTC (0), the flag Is_Ada_05 will\n+      --  Even though the input time zone is UTC (0), the flag Use_TZ will\n       --  ensure that Split picks up the local time zone.\n \n       Formatting_Operations.Split\n@@ -589,7 +589,7 @@ package body Ada.Calendar is\n          Second    => Se,\n          Sub_Sec   => Ss,\n          Leap_Sec  => Le,\n-         Is_Ada_05 => False,\n+         Use_TZ    => False,\n          Time_Zone => 0);\n \n       --  Validity checks\n@@ -633,7 +633,7 @@ package body Ada.Calendar is\n          raise Time_Error;\n       end if;\n \n-      --  Even though the input time zone is UTC (0), the flag Is_Ada_05 will\n+      --  Even though the input time zone is UTC (0), the flag Use_TZ will\n       --  ensure that Split picks up the local time zone.\n \n       return\n@@ -648,7 +648,7 @@ package body Ada.Calendar is\n            Sub_Sec      => Ss,\n            Leap_Sec     => False,\n            Use_Day_Secs => True,\n-           Is_Ada_05    => False,\n+           Use_TZ       => False,\n            Time_Zone    => 0);\n    end Time_Of;\n \n@@ -744,7 +744,8 @@ package body Ada.Calendar is\n \n       Secs_T := time_t (Date_N / Nano);\n \n-      --  Determine whether to treat the input date as historical or not\n+      --  Determine whether to treat the input date as historical or not. A\n+      --  value of \"0\" signifies that the date is NOT historic.\n \n       Flag := (if Is_Historic then 1 else 0);\n \n@@ -975,7 +976,7 @@ package body Ada.Calendar is\n                 Sub_Sec      => 0.0,      --  No precise sub second given\n                 Leap_Sec     => Leap,\n                 Use_Day_Secs => False,    --  Time is given in h:m:s\n-                Is_Ada_05    => True,     --  Force usage of explicit time zone\n+                Use_TZ       => True,     --  Force usage of explicit time zone\n                 Time_Zone    => 0));      --  Place the value in UTC\n \n          --  Step 4: Daylight Savings Time\n@@ -1204,7 +1205,7 @@ package body Ada.Calendar is\n          Second    : out Integer;\n          Sub_Sec   : out Duration;\n          Leap_Sec  : out Boolean;\n-         Is_Ada_05 : Boolean;\n+         Use_TZ    : Boolean;\n          Time_Zone : Long_Integer)\n       is\n          --  The following constants represent the number of nanoseconds\n@@ -1257,7 +1258,7 @@ package body Ada.Calendar is\n          --  Step 2: Time zone processing. This action converts the input date\n          --  from GMT to the requested time zone. Applies from Ada 2005 on.\n \n-         if Is_Ada_05 then\n+         if Use_TZ then\n             if Time_Zone /= 0 then\n                Date_N := Date_N + Time_Rep (Time_Zone) * 60 * Nano;\n             end if;\n@@ -1385,7 +1386,7 @@ package body Ada.Calendar is\n          Sub_Sec      : Duration;\n          Leap_Sec     : Boolean := False;\n          Use_Day_Secs : Boolean := False;\n-         Is_Ada_05    : Boolean := False;\n+         Use_TZ       : Boolean := False;\n          Time_Zone    : Long_Integer := 0) return Time\n       is\n          Count         : Integer;\n@@ -1479,7 +1480,7 @@ package body Ada.Calendar is\n          --  a uniform representation which can be treated by arithmetic\n          --  operations for instance without any additional corrections.\n \n-         if Is_Ada_05 then\n+         if Use_TZ then\n             if Time_Zone /= 0 then\n                Res_N := Res_N - Time_Rep (Time_Zone) * 60 * Nano;\n             end if;\n@@ -1519,7 +1520,7 @@ package body Ada.Calendar is\n \n             Rounded_Res_N := Res_N - (Res_N mod Nano);\n \n-            if Is_Ada_05\n+            if Use_TZ\n               and then Leap_Sec\n               and then Rounded_Res_N /= Next_Leap_N\n             then"}, {"sha": "d1697196855fc39cdfc10c08e3693d9e1f3118ae", "filename": "gcc/ada/a-calend.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-calend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-calend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend.ads?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -351,11 +351,11 @@ private\n          Second    : out Integer;\n          Sub_Sec   : out Duration;\n          Leap_Sec  : out Boolean;\n-         Is_Ada_05 : Boolean;\n+         Use_TZ    : Boolean;\n          Time_Zone : Long_Integer);\n-      --  Split a time value into its components. Set Is_Ada_05 to use the\n-      --  local time zone (the value in Time_Zone is ignored) when splitting\n-      --  a time value.\n+      --  Split a time value into its components. Set Use_TZ to use the local\n+      --  time zone (the value in Time_Zone is ignored) when splitting a time\n+      --  value.\n \n       function Time_Of\n         (Year         : Year_Number;\n@@ -368,12 +368,12 @@ private\n          Sub_Sec      : Duration;\n          Leap_Sec     : Boolean := False;\n          Use_Day_Secs : Boolean := False;\n-         Is_Ada_05    : Boolean := False;\n+         Use_TZ       : Boolean := False;\n          Time_Zone    : Long_Integer := 0) return Time;\n       --  Given all the components of a date, return the corresponding time\n       --  value. Set Use_Day_Secs to use the value in Day_Secs, otherwise the\n       --  day duration will be calculated from Hour, Minute, Second and Sub_\n-      --  Sec. Set Is_Ada_05 to use the local time zone (the value in formal\n+      --  Sec. Set Use_TZ to use the local time zone (the value in formal\n       --  Time_Zone is ignored) when building a time value and to verify the\n       --  validity of a requested leap second.\n "}, {"sha": "e328a4eff5d3fee78eab0d778a17884825428aaf", "filename": "gcc/ada/a-calfor.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-calfor.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-calfor.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calfor.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2006-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2006-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -431,8 +431,8 @@ package body Ada.Calendar.Formatting is\n          Second    => Se,\n          Sub_Sec   => Su,\n          Leap_Sec  => Leap_Second,\n-         Time_Zone => Tz,\n-         Is_Ada_05 => True);\n+         Use_TZ    => True,\n+         Time_Zone => Tz);\n \n       --  Validity checks\n \n@@ -476,8 +476,8 @@ package body Ada.Calendar.Formatting is\n          Second    => Second,\n          Sub_Sec   => Sub_Second,\n          Leap_Sec  => Le,\n-         Time_Zone => Tz,\n-         Is_Ada_05 => True);\n+         Use_TZ    => True,\n+         Time_Zone => Tz);\n \n       --  Validity checks\n \n@@ -524,8 +524,8 @@ package body Ada.Calendar.Formatting is\n         Second    => Second,\n         Sub_Sec   => Sub_Second,\n         Leap_Sec  => Leap_Second,\n-        Time_Zone => Tz,\n-        Is_Ada_05 => True);\n+        Use_TZ    => True,\n+        Time_Zone => Tz);\n \n       --  Validity checks\n \n@@ -629,7 +629,7 @@ package body Ada.Calendar.Formatting is\n            Sub_Sec      => Ss,\n            Leap_Sec     => Leap_Second,\n            Use_Day_Secs => True,\n-           Is_Ada_05    => True,\n+           Use_TZ       => True,\n            Time_Zone    => Tz);\n    end Time_Of;\n \n@@ -678,7 +678,7 @@ package body Ada.Calendar.Formatting is\n            Sub_Sec      => Sub_Second,\n            Leap_Sec     => Leap_Second,\n            Use_Day_Secs => False,\n-           Is_Ada_05    => True,\n+           Use_TZ       => True,\n            Time_Zone    => Tz);\n    end Time_Of;\n "}, {"sha": "71ec0e3d95618deb47bef9a09311e616ec26d408", "filename": "gcc/ada/a-cbhama.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-cbhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-cbhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhama.ads?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -162,7 +162,7 @@ package Ada.Containers.Bounded_Hashed_Maps is\n \n    procedure Assign (Target : in out Map; Source : Map);\n    --  If Target denotes the same object as Source, then the operation has no\n-   --  effect. If the Target capacity is less then the Source length, then\n+   --  effect. If the Target capacity is less than the Source length, then\n    --  Assign raises Capacity_Error.  Otherwise, Assign clears Target and then\n    --  copies the (active) elements from Source to Target.\n "}, {"sha": "ed47b798683262661b237bb7d86a61fd1498d577", "filename": "gcc/ada/a-cbhase.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-cbhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-cbhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhase.ads?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -153,7 +153,7 @@ package Ada.Containers.Bounded_Hashed_Sets is\n \n    procedure Assign (Target : in out Set; Source : Set);\n    --  If Target denotes the same object as Source, then the operation has no\n-   --  effect. If the Target capacity is less then the Source length, then\n+   --  effect. If the Target capacity is less than the Source length, then\n    --  Assign raises Capacity_Error.  Otherwise, Assign clears Target and then\n    --  copies the (active) elements from Source to Target.\n "}, {"sha": "af9ea25e0f2440a85ea5891792ba925ea2855aa4", "filename": "gcc/ada/a-cobove.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-cobove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-cobove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cobove.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -2368,7 +2368,7 @@ package body Ada.Containers.Bounded_Vectors is\n    begin\n       --  Set_Length allows the user to set the length explicitly, instead of\n       --  implicitly as a side-effect of deletion or insertion. If the\n-      --  requested length is less then the current length, this is equivalent\n+      --  requested length is less than the current length, this is equivalent\n       --  to deleting items from the back end of the vector. If the requested\n       --  length is greater than the current length, then this is equivalent to\n       --  inserting \"space\" (nonce items) at the end."}, {"sha": "e2e5d93f217a115b3c57c47c69be1dfc2a47b4ab", "filename": "gcc/ada/a-convec.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -3199,7 +3199,7 @@ package body Ada.Containers.Vectors is\n    begin\n       --  Set_Length allows the user to set the length explicitly, instead\n       --  of implicitly as a side-effect of deletion or insertion. If the\n-      --  requested length is less then the current length, this is equivalent\n+      --  requested length is less than the current length, this is equivalent\n       --  to deleting items from the back end of the vector. If the requested\n       --  length is greater than the current length, then this is equivalent\n       --  to inserting \"space\" (nonce items) at the end."}, {"sha": "0ba9bd142853e13821f25d7c02deeb446728edf1", "filename": "gcc/ada/a-strunb-shared.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-strunb-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-strunb-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb-shared.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -877,7 +877,7 @@ package body Ada.Strings.Unbounded is\n          if Count < SR.Last then\n             DR.Data (1 .. Count) := SR.Data (1 .. Count);\n \n-         --  Length of the source string is less then requested, copy all\n+         --  Length of the source string is less than requested, copy all\n          --  contents and fill others by Pad character.\n \n          else\n@@ -931,13 +931,13 @@ package body Ada.Strings.Unbounded is\n       else\n          DR := Allocate (Count);\n \n-         --  Length of the source string is greater then requested, copy\n+         --  Length of the source string is greater than requested, copy\n          --  corresponding slice.\n \n          if Count < SR.Last then\n             DR.Data (1 .. Count) := SR.Data (1 .. Count);\n \n-         --  Length of the source string is less the requested, copy all\n+         --  Length of the source string is less than requested, copy all\n          --  existing data and fill remaining positions with Pad characters.\n \n          else"}, {"sha": "3ec961f5c34bc79ed69437e3c1bd3dcc84bcba4a", "filename": "gcc/ada/a-strunb-shared.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-strunb-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-strunb-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb-shared.ads?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -56,7 +56,7 @@\n    --     reallocation when all of the following requirements are met:\n    --      - the shared data object is no longer used by anyone else;\n    --      - the size is sufficient to store the new value;\n-   --      - the gap after reuse is less then a defined threshold.\n+   --      - the gap after reuse is less than a defined threshold.\n \n    --   - Memory preallocation. Most of used memory allocation algorithms\n    --     align allocated segments on the some boundary, thus some amount of"}, {"sha": "731be43bf463796bf680dcac815e0ba6aed7a1f7", "filename": "gcc/ada/a-stwiun-shared.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-stwiun-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-stwiun-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwiun-shared.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -883,7 +883,7 @@ package body Ada.Strings.Wide_Unbounded is\n          if Count < SR.Last then\n             DR.Data (1 .. Count) := SR.Data (1 .. Count);\n \n-         --  Length of the source string is less then requested, copy all\n+         --  Length of the source string is less than requested, copy all\n          --  contents and fill others by Pad character.\n \n          else\n@@ -937,13 +937,13 @@ package body Ada.Strings.Wide_Unbounded is\n       else\n          DR := Allocate (Count);\n \n-         --  Length of the source string is greater then requested, copy\n+         --  Length of the source string is greater than requested, copy\n          --  corresponding slice.\n \n          if Count < SR.Last then\n             DR.Data (1 .. Count) := SR.Data (1 .. Count);\n \n-         --  Length of the source string is less the requested, copy all\n+         --  Length of the source string is less than requested, copy all\n          --  exists data and fill others by Pad character.\n \n          else"}, {"sha": "b3b62afc2bdfad9726b8e30862fcd5957d71360a", "filename": "gcc/ada/a-stwiun-shared.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-stwiun-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-stwiun-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwiun-shared.ads?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -463,7 +463,7 @@ private\n    --     reallocation when all of the following requirements are meat:\n    --      - shared data object don't used anywhere longer;\n    --      - its size is sufficient to store new value;\n-   --      - the gap after reuse is less then some threshold.\n+   --      - the gap after reuse is less than some threshold.\n \n    --   - memory preallocation. Most of used memory allocation algorithms\n    --     aligns allocated segment on the some boundary, thus some amount of"}, {"sha": "9ec5d4764e78103d71165afd76db6d7005057e38", "filename": "gcc/ada/a-stzunb-shared.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-stzunb-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fa-stzunb-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzunb-shared.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -889,7 +889,7 @@ package body Ada.Strings.Wide_Wide_Unbounded is\n          if Count < SR.Last then\n             DR.Data (1 .. Count) := SR.Data (1 .. Count);\n \n-         --  Length of the source string is less then requested, copy all\n+         --  Length of the source string is less than requested, copy all\n          --  contents and fill others by Pad character.\n \n          else\n@@ -943,13 +943,13 @@ package body Ada.Strings.Wide_Wide_Unbounded is\n       else\n          DR := Allocate (Count);\n \n-         --  Length of the source string is greater then requested, copy\n+         --  Length of the source string is greater than requested, copy\n          --  corresponding slice.\n \n          if Count < SR.Last then\n             DR.Data (1 .. Count) := SR.Data (1 .. Count);\n \n-         --  Length of the source string is less the requested, copy all\n+         --  Length of the source string is less than requested, copy all\n          --  exists data and fill others by Pad character.\n \n          else"}, {"sha": "d9143673b72f3d4b276913f8de26707081ab8523", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -723,8 +723,10 @@ package body Exp_Ch2 is\n    --    typ!(recobj).rec.all'Constrained\n \n    --  where rec is a selector whose Entry_Formal link points to the formal\n+\n    --  If the type of the entry parameter has a representation clause, then an\n    --  extra temp is involved (see below).\n+\n    --  For a formal of a task entity, the formal is rewritten as a local\n    --  renaming.\n "}, {"sha": "d5130d9b61ec7e17c3c8864c4279741e85f4f579", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -13390,7 +13390,7 @@ stops.\n @cindex @option{^--no-separate-is^/NO_SEPARATE_IS^} (@command{gnatpp})\n @item ^--no-separate-is^/NO_SEPARATE_IS^\n Do not place the keyword @code{is} on a separate line in a subprogram body in\n-case if the spec occupies more then one line.\n+case if the spec occupies more than one line.\n \n @cindex @option{^--separate-label^/SEPARATE_LABEL^} (@command{gnatpp})\n @item ^--separate-label^/SEPARATE_LABEL^\n@@ -13465,7 +13465,7 @@ Indentation level, @var{nnn} from 1@dots{}9, the default value is 3\n Indentation level for continuation lines (relative to the line being\n continued), @var{nnn} from 1@dots{}9.\n The default\n-value is one less then the (normal) indentation level, unless the\n+value is one less than the (normal) indentation level, unless the\n indentation is set to 1 (in which case the default value for continuation\n line indentation is also 1)\n @end table"}, {"sha": "3c3cce275e746ab2b980167ae6d9d04eddf38652", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -3187,7 +3187,7 @@ package body Sem_Ch13 is\n \n             elsif Small > Delta_Value (U_Ent) then\n                Error_Msg_N\n-                 (\"small value must not be greater then delta value\", Nam);\n+                 (\"small value must not be greater than delta value\", Nam);\n \n             else\n                Set_Small_Value (U_Ent, Small);"}, {"sha": "aedb97334a4b3419636f95704ae275924814615d", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -2337,16 +2337,20 @@ package body Sem_Ch5 is\n       Generate_Reference (Base_Type (Etype (DS)), N, ' ');\n       Set_Is_Known_Valid (Id, True);\n \n-      --  The loop is not a declarative part, so the only entity declared\n-      --  \"within\" must be frozen explicitly.\n+      --  The loop is not a declarative part, so the loop variable must be\n+      --  frozen explicitly. Do not freeze while preanalyzing a quantified\n+      --  expression because the freeze node will not be inserted into the\n+      --  tree due to flag Is_Spec_Expression being set.\n \n-      declare\n-         Flist : constant List_Id := Freeze_Entity (Id, N);\n-      begin\n-         if Is_Non_Empty_List (Flist) then\n-            Insert_Actions (N, Flist);\n-         end if;\n-      end;\n+      if Nkind (Parent (N)) /= N_Quantified_Expression then\n+         declare\n+            Flist : constant List_Id := Freeze_Entity (Id, N);\n+         begin\n+            if Is_Non_Empty_List (Flist) then\n+               Insert_Actions (N, Flist);\n+            end if;\n+         end;\n+      end if;\n \n       --  Check for null or possibly null range and issue warning. We suppress\n       --  such messages in generic templates and instances, because in practice"}, {"sha": "3fb8ad344033bbe88eb0e375e3f70fce11d29536", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -7962,17 +7962,17 @@ package body Sem_Ch8 is\n             declare\n                Spec : constant Node_Id :=\n                         Parent (List_Containing (Parent (Id)));\n-            begin\n \n+            begin\n                --  Check whether type is declared in a package specification,\n                --  and current unit is the corresponding package body. The\n                --  use clauses themselves may be within a nested package.\n \n                return\n                  Nkind (Spec) = N_Package_Specification\n-                 and then\n-                   In_Same_Source_Unit (Corresponding_Body (Parent (Spec)),\n-                              Cunit_Entity (Current_Sem_Unit));\n+                   and then\n+                     In_Same_Source_Unit (Corresponding_Body (Parent (Spec)),\n+                                          Cunit_Entity (Current_Sem_Unit));\n             end;\n          end if;\n "}, {"sha": "ee31840d8d6b8f886a4f8e4fe8569506a4070a99", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -665,9 +665,11 @@ __gnat_localtime_tzoff (const time_t *timer, const int *is_historic, long *off)\n   tzi_status = GetTimeZoneInformation (&tzi);\n \n   /* Processing for RTX targets or cases where we simply want to extract the\n-     offset of the current time zone, regardless of the date. */\n+     offset of the current time zone, regardless of the date. A value of \"0\"\n+     for flag \"is_historic\" signifies that the date is NOT historic, see the\n+     body of Ada.Calendar.UTC_Time_Offset. */\n \n-  if (rtx_active || !is_historic) {\n+  if (rtx_active || *is_historic == 0) {\n     *off = tzi.Bias;\n \n     /* The system is operating in the range covered by the StandardDate"}, {"sha": "1afd8b8a38baf192ddea2598650ab574275e36f9", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -159,7 +159,7 @@ package body Uintp is\n \n    function Sum_Digits (Left : Uint; Sign : Int) return Int;\n    --  If Sign = 1 return the sum of the \"digits\" of Abs (Left). If the total\n-   --  has more then one digit then return Sum_Digits of total.\n+   --  has more than one digit then return Sum_Digits of total.\n \n    function Sum_Double_Digits (Left : Uint; Sign : Int) return Int;\n    --  Same as above but work in New_Base = Base * Base\n@@ -1270,8 +1270,6 @@ package body Uintp is\n       Discard_Quotient  : Boolean := False;\n       Discard_Remainder : Boolean := False)\n    is\n-      pragma Warnings (Off, Quotient);\n-      pragma Warnings (Off, Remainder);\n    begin\n       pragma Assert (Right /= Uint_0);\n "}, {"sha": "a71f2319db29135198e01cd9c7c00f8052146240", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ff0f407dadb7b1e576416c5de4dce43151222/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=d99ff0f407dadb7b1e576416c5de4dce43151222", "patch": "@@ -5996,7 +5996,7 @@ package VMS_Data is\n    --        /CONTINUATION_INDENT=nnn\n    --\n    --   Indentation level for continuation lines, nnn from 1 .. 9.\n-   --   The default value is one less then the (normal) indentation level,\n+   --   The default value is one less than the (normal) indentation level,\n    --   unless the indentation is set to 1: in that case the default value for\n    --   continuation line indentation is also 1.\n \n@@ -6005,7 +6005,7 @@ package VMS_Data is\n    --        /NO_SEPARATE_IS\n    --\n    --   Do not place the IS keyword on a separate line in a subprogram body in\n-   --   case if the specification occupies more then one line.\n+   --   case if the specification occupies more than one line.\n \n    S_Pretty_Sep_Label : aliased constant S := \"/SEPARATE_LABEL \"           &\n                                                     \"--separate-label\";"}]}