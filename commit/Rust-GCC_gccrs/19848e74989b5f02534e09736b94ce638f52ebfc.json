{"sha": "19848e74989b5f02534e09736b94ce638f52ebfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk4NDhlNzQ5ODliNWYwMjUzNGUwOTczNmI5NGNlNjM4ZjUyZWJmYw==", "commit": {"author": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1996-06-24T23:07:11Z"}, "committer": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1996-06-24T23:07:11Z"}, "message": "(create_definition): Diagnose `#define #' only once.\n\nFrom-SVN: r12327", "tree": {"sha": "a855eda2ec94f266a5541f97330a9ac2c34c870b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a855eda2ec94f266a5541f97330a9ac2c34c870b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19848e74989b5f02534e09736b94ce638f52ebfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19848e74989b5f02534e09736b94ce638f52ebfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19848e74989b5f02534e09736b94ce638f52ebfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19848e74989b5f02534e09736b94ce638f52ebfc/comments", "author": null, "committer": null, "parents": [{"sha": "e8fbc7beff220352f8ba4e99cead68fc24d69086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8fbc7beff220352f8ba4e99cead68fc24d69086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8fbc7beff220352f8ba4e99cead68fc24d69086"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9da700c1ac46620923067a8e5f31dd4ac6bcbec8", "filename": "gcc/cccp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19848e74989b5f02534e09736b94ce638f52ebfc/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19848e74989b5f02534e09736b94ce638f52ebfc/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=19848e74989b5f02534e09736b94ce638f52ebfc", "patch": "@@ -5595,7 +5595,7 @@ create_definition (buf, limit, op)\n \tif (is_hor_space[*bp]) {\n \t  bp++;\n \t  SKIP_WHITE_SPACE (bp);\n-\t} else {\n+\t} else if (sym_length) {\n \t  switch (*bp) {\n \t    case '!':  case '\"':  case '#':  case '%':  case '&':  case '\\'':\n \t    case ')':  case '*':  case '+':  case ',':  case '-':  case '.':"}]}