{"sha": "a86689f5e9b939a4fc020b873fd9fca6ed98f1e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg2Njg5ZjVlOWI5MzlhNGZjMDIwYjg3M2ZkOWZjYTZlZDk4ZjFlNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-01-07T09:12:35Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2020-01-07T09:12:35Z"}, "message": "Mark -free as Optimization option.\n\nFrom-SVN: r279946", "tree": {"sha": "adf02a4a598019d76087778dfd8a11fe67264935", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adf02a4a598019d76087778dfd8a11fe67264935"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a86689f5e9b939a4fc020b873fd9fca6ed98f1e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a86689f5e9b939a4fc020b873fd9fca6ed98f1e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a86689f5e9b939a4fc020b873fd9fca6ed98f1e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a86689f5e9b939a4fc020b873fd9fca6ed98f1e5/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5dbaaa20c94bf584aa15a6ddda3aa21f5afbb4c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dbaaa20c94bf584aa15a6ddda3aa21f5afbb4c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dbaaa20c94bf584aa15a6ddda3aa21f5afbb4c4"}], "stats": {"total": 72, "additions": 68, "deletions": 4}, "files": [{"sha": "288c0e25598dfeab1d8690ae419b09aba053ac6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a86689f5e9b939a4fc020b873fd9fca6ed98f1e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a86689f5e9b939a4fc020b873fd9fca6ed98f1e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a86689f5e9b939a4fc020b873fd9fca6ed98f1e5", "patch": "@@ -1,8 +1,14 @@\n 2020-01-07  Martin Liska  <mliska@suse.cz>\n \n-    PR optimization/92860\n-    * params.opt: Mark param_min_crossjump_insns with Optimization\n-    keyword.\n+\tPR tree-optimization/92860\n+\t* common.opt: Make flag_ree as optimization\n+\tattribute. \n+\n+2020-01-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR optimization/92860\n+\t* params.opt: Mark param_min_crossjump_insns with Optimization\n+\tkeyword.\n \n 2020-01-07  Luo Xiong Hu  <luoxhu@linux.ibm.com>\n "}, {"sha": "02c7cddbb26c2bfbada57c3ae179dc4fc76817ea", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a86689f5e9b939a4fc020b873fd9fca6ed98f1e5/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a86689f5e9b939a4fc020b873fd9fca6ed98f1e5/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=a86689f5e9b939a4fc020b873fd9fca6ed98f1e5", "patch": "@@ -2426,7 +2426,7 @@ Common Ignore\n Does nothing.  Preserved for backward compatibility.\n \n free\n-Common Report Var(flag_ree) Init(0)\n+Common Report Var(flag_ree) Init(0) Optimization\n Turn on Redundant Extensions Elimination pass.\n \n fshow-column"}, {"sha": "dabc9d2e3226b546291b50ed9733584b94a8788f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a86689f5e9b939a4fc020b873fd9fca6ed98f1e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a86689f5e9b939a4fc020b873fd9fca6ed98f1e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a86689f5e9b939a4fc020b873fd9fca6ed98f1e5", "patch": "@@ -1,3 +1,8 @@\n+2020-01-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/92860\n+\t* gcc.dg/pr92860.c: New test. \n+\n 2020-01-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/91369"}, {"sha": "74207a9d53c2b095fea5e64d16b2e5ed7ccb487b", "filename": "gcc/testsuite/gcc.dg/pr92860.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a86689f5e9b939a4fc020b873fd9fca6ed98f1e5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr92860.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a86689f5e9b939a4fc020b873fd9fca6ed98f1e5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr92860.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr92860.c?ref=a86689f5e9b939a4fc020b873fd9fca6ed98f1e5", "patch": "@@ -0,0 +1,53 @@\n+/* PR tree-optimization/92860.  */\n+/* Testcase derived from 20111227-1.c to ensure that REE is combining\n+   redundant zero extends with zero extend to wider mode.  */\n+/* { dg-do compile  { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-fdump-rtl-ree\" } */\n+\n+extern void abort (void);\n+\n+unsigned short s;\n+unsigned int i;\n+unsigned long l;\n+unsigned char v = -1;\n+\n+void\n+__attribute__ ((optimize(\"-O2\")))\n+baz()\n+{\n+}\n+\n+void __attribute__((noinline,noclone))\n+bar (int t)\n+{\n+  if (t == 2 && s != 0xff)\n+    abort ();\n+  if (t == 1 && i != 0xff)\n+    abort ();\n+  if (t == 0 && l != 0xff)\n+    abort ();\n+}\n+\n+void __attribute__((noinline,noclone))\n+foo (unsigned char *a, int t)\n+{\n+  unsigned char r = v;\n+\n+  if (t == 2)\n+    s = (unsigned short) r;\n+  else if (t == 1)\n+    i = (unsigned int) r;\n+  else if (t == 0)\n+    l = (unsigned long) r;\n+  bar (t);\n+}\n+\n+int main(void)\n+{\n+  foo (&v, 0);\n+  foo (&v, 1);\n+  foo (&v, 2);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-rtl-dump-not \"Elimination opportunities\" \"ree\" } }  */"}]}