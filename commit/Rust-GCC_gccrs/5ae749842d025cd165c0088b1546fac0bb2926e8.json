{"sha": "5ae749842d025cd165c0088b1546fac0bb2926e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFlNzQ5ODQyZDAyNWNkMTY1YzAwODhiMTU0NmZhYzBiYjI5MjZlOA==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1997-03-18T22:04:32Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1997-03-18T22:04:32Z"}, "message": "Support stabs and section attribute\n\nFrom-SVN: r13741", "tree": {"sha": "7592819de2da9dd3ed10ea438872bbd13f9b3d49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7592819de2da9dd3ed10ea438872bbd13f9b3d49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ae749842d025cd165c0088b1546fac0bb2926e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae749842d025cd165c0088b1546fac0bb2926e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ae749842d025cd165c0088b1546fac0bb2926e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae749842d025cd165c0088b1546fac0bb2926e8/comments", "author": null, "committer": null, "parents": [{"sha": "4cd77633ca2ce8e5ee448ffeb85a89bc97aa46fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cd77633ca2ce8e5ee448ffeb85a89bc97aa46fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cd77633ca2ce8e5ee448ffeb85a89bc97aa46fe"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "835cbde9af93f98be227486382548793dea31126", "filename": "gcc/config/i386/go32.h", "status": "modified", "additions": 52, "deletions": 1, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae749842d025cd165c0088b1546fac0bb2926e8/gcc%2Fconfig%2Fi386%2Fgo32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae749842d025cd165c0088b1546fac0bb2926e8/gcc%2Fconfig%2Fi386%2Fgo32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgo32.h?ref=5ae749842d025cd165c0088b1546fac0bb2926e8", "patch": "@@ -1,5 +1,13 @@\n /* Configuration for an i386 running MS-DOS with djgpp/go32.  */\n \n+#define DBX_DEBUGGING_INFO /* support for stabs debugging info */\n+#define PREFERRED_DEBUGGING_TYPE SDB_DEBUG /* leave sdb as default */\n+#define NO_STAB_H /* DJGPP has no stab.h */\n+#if 0 /* enable this, if '-g' should select stabs debugging */\n+#undef PREFERRED_DEBUGGING_TYPE\n+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+#endif\n+\n /* Don't assume anything about the header files. */\n #define NO_IMPLICIT_EXTERN_C\n \n@@ -53,15 +61,58 @@ dtor_section ()\t\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\\\n   } while (0)\n \n-#define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\\\n+/* Allow (eg) __attribute__((section \"locked\")) to work */\n+#define ASM_OUTPUT_SECTION_NAME(FILE, DECL, NAME)\\\n+  do {\t\t\t\t\t\t\\\n+    fprintf (FILE, \"\\t.section %s\\n\", NAME);\t\\\n+  } while (0)\n   do {\t\t\t\t\t\t\\\n     dtor_section ();                   \t\t\\\n     fprintf (FILE, \"%s\\t\", ASM_LONG);\t\t\\\n     assemble_name (FILE, NAME);              \t\\\n     fprintf (FILE, \"\\n\");\t\t\t\\\n   } while (0)\n \n+/* Output at beginning of assembler file.  */\n+/* The .file command should always begin the output.  */\n+/* Use the main_input_filename instead of dump_base_name */\n+\n+#undef ASM_FILE_START\n+#define ASM_FILE_START(FILE)\t\t\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+\toutput_file_directive (FILE, main_input_filename);\t\t\\\n+  } while (0)\n+\n+/* Be function-relative for block and source line stab directives. */\n+\n+#define DBX_BLOCKS_FUNCTION_RELATIVE 1\n+\n+/* but, to make this work, functions must appear prior to line info */\n+\n+#define DBX_FUNCTION_FIRST\n /* Allow (eg) __attribute__((section \"locked\")) to work */\n+/* Generate a blank trailing N_SO to mark the end of the .o file, since\n+   we can't depend upon the linker to mark .o file boundaries with\n+   embedded stabs.  */\n+\n+#define DBX_OUTPUT_MAIN_SOURCE_FILE_END(FILE, FILENAME)\t\t\t\\\n+  fprintf (FILE,\t\t\t\t\t\t\t\\\n+\t   \"\\t.text\\n\\t.stabs \\\"\\\",%d,0,0,Letext\\nLetext:\\n\", N_SO)\n+\n+#undef  ASM_OUTPUT_SOURCE_LINE\n+#define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\\\n+  if ( write_symbols == DBX_DEBUG )                     \\\n+  { static int sym_lineno = 1;\t\t\t\t\\\n+    fprintf (file, \".stabn 68,0,%d,.LM%d-\",\t\t\\\n+\t     line, sym_lineno);\t\t\t\t\\\n+    assemble_name (file,\t\t\t\t\\\n+\t\t   XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0)); \\\n+    fprintf (file, \"\\n.LM%d:\\n\", sym_lineno);\t\t\\\n+    sym_lineno += 1; } \\\n+  else { \\\n+    fprintf (file, \"\\t.ln\\t%d\\n\", \\\n+  \t     ((sdb_begin_function_line > -1) \\\n+\t     ? line - sdb_begin_function_line : 1)); }\n #define ASM_OUTPUT_SECTION_NAME(FILE, DECL, NAME)\\\n   do {\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\t.section %s\\n\", NAME);\t\\"}]}