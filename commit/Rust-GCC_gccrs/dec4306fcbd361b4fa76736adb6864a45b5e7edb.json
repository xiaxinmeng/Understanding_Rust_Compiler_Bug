{"sha": "dec4306fcbd361b4fa76736adb6864a45b5e7edb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVjNDMwNmZjYmQzNjFiNGZhNzY3MzZhZGI2ODY0YTQ1YjVlN2VkYg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2012-07-16T03:18:23Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2012-07-16T03:18:23Z"}, "message": "cris.c (cris_init_libfuncs): Handle initialization of library functions for basic atomic compare-and-swap.\n\n\t* config/cris/cris.c (cris_init_libfuncs): Handle initialization\n\tof library functions for basic atomic compare-and-swap.\n\t* config/cris/cris.h (TARGET_ATOMICS_MAY_CALL_LIBFUNCS): New macro.\n\t* config/cris/cris.opt (munaligned-atomic-may-use-library): New\n\toption.\n\t* config/cris/sync.md (\"atomic_fetch_<atomic_op_name><mode>\")\n\t(\"cris_atomic_fetch_<atomic_op_name><mode>_1\")\n\t(\"atomic_compare_and_swap<mode>\")\n\t(\"cris_atomic_compare_and_swap<mode>_1\"): Make\n\tconditional on TARGET_ATOMICS_MAY_CALL_LIBFUNCS for\n\tsizes larger than byte.\n\nFrom-SVN: r189504", "tree": {"sha": "3da01c0897396ffedb1b61b55133dc2a9f7c3389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3da01c0897396ffedb1b61b55133dc2a9f7c3389"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dec4306fcbd361b4fa76736adb6864a45b5e7edb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec4306fcbd361b4fa76736adb6864a45b5e7edb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dec4306fcbd361b4fa76736adb6864a45b5e7edb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec4306fcbd361b4fa76736adb6864a45b5e7edb/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "24ddb79c2dbe77c7d4eb774dc4793cde6cd8a506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24ddb79c2dbe77c7d4eb774dc4793cde6cd8a506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24ddb79c2dbe77c7d4eb774dc4793cde6cd8a506"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "4899570261e07ef891c7cd2e6beb65f097f45707", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec4306fcbd361b4fa76736adb6864a45b5e7edb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec4306fcbd361b4fa76736adb6864a45b5e7edb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dec4306fcbd361b4fa76736adb6864a45b5e7edb", "patch": "@@ -1,5 +1,16 @@\n 2012-07-16  Hans-Peter Nilsson  <hp@axis.com>\n \n+\t* config/cris/cris.c (cris_init_libfuncs): Handle initialization\n+\tof library functions for basic atomic compare-and-swap.\n+\t* config/cris/cris.h (TARGET_ATOMICS_MAY_CALL_LIBFUNCS): New macro.\n+\t* config/cris/cris.opt (munaligned-atomic-may-use-library): New\n+\toption.\n+\t* config/cris/sync.md (\"atomic_fetch_<atomic_op_name><mode>\")\n+\t(\"cris_atomic_fetch_<atomic_op_name><mode>_1\")\n+\t(\"atomic_compare_and_swap<mode>\")\n+\t(\"cris_atomic_compare_and_swap<mode>_1\"): Make\n+\tconditional on TARGET_ATOMICS_MAY_CALL_LIBFUNCS for\n+\tsizes larger than byte.\n \t* config/cris/cris.c (cris_print_operand) <case 'P', 'q'>: New cases.\n \t* config/cris/sync.md (atomic_op_op_cnstr): New code_attr.\n \t(atomic_op_op_pred): Ditto."}, {"sha": "71bb276003499e8f3ae3390c8c09959ab48a615c", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec4306fcbd361b4fa76736adb6864a45b5e7edb/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec4306fcbd361b4fa76736adb6864a45b5e7edb/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=dec4306fcbd361b4fa76736adb6864a45b5e7edb", "patch": "@@ -2761,6 +2761,16 @@ cris_init_libfuncs (void)\n   set_optab_libfunc (udiv_optab, SImode, \"__Udiv\");\n   set_optab_libfunc (smod_optab, SImode, \"__Mod\");\n   set_optab_libfunc (umod_optab, SImode, \"__Umod\");\n+\n+  /* Atomic data being unaligned is unfortunately a reality.\n+     Deal with it.  */\n+  if (TARGET_ATOMICS_MAY_CALL_LIBFUNCS)\n+    {\n+      set_optab_libfunc (sync_compare_and_swap_optab, SImode,\n+\t\t\t \"__cris_atcmpxchgr32\");\n+      set_optab_libfunc (sync_compare_and_swap_optab, HImode,\n+\t\t\t \"__cris_atcmpxchgr16\");\n+    }\n }\n \n /* The INIT_EXPANDERS worker sets the per-function-data initializer and"}, {"sha": "d5cf85e4ba52fb6057ef0e22e9ae24aeaf6f7a39", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec4306fcbd361b4fa76736adb6864a45b5e7edb/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec4306fcbd361b4fa76736adb6864a45b5e7edb/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=dec4306fcbd361b4fa76736adb6864a45b5e7edb", "patch": "@@ -316,6 +316,11 @@ extern int cris_cpu_version;\n #define TARGET_TRAP_USING_BREAK8 \\\n  (cris_trap_using_break8 == 2 ? TARGET_HAS_BREAK : cris_trap_using_break8)\n \n+/* Call library functions by default for GNU/Linux.  */\n+#define TARGET_ATOMICS_MAY_CALL_LIBFUNCS\t\t\\\n+ (cris_atomics_calling_libfunc == 2\t\t\t\\\n+  ? TARGET_LINUX : cris_atomics_calling_libfunc)\n+\n /* The < v10 atomics turn off interrupts, so they don't need alignment.\n    Incidentally, by default alignment is off there causing variables to\n    be default unaligned all over, so we'd have to make support"}, {"sha": "d4433a7739945f5196b9b3df6670fd6267f6b80f", "filename": "gcc/config/cris/cris.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec4306fcbd361b4fa76736adb6864a45b5e7edb/gcc%2Fconfig%2Fcris%2Fcris.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec4306fcbd361b4fa76736adb6864a45b5e7edb/gcc%2Fconfig%2Fcris%2Fcris.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.opt?ref=dec4306fcbd361b4fa76736adb6864a45b5e7edb", "patch": "@@ -183,6 +183,10 @@ mtrap-unaligned-atomic\n Target Report Var(cris_trap_unaligned_atomic) Init(2)\n Emit checks causing \\\"break 8\\\" instructions to execute when applying atomic builtins on misaligned memory\n \n+munaligned-atomic-may-use-library\n+Target Report Var(cris_atomics_calling_libfunc) Init(2)\n+Handle atomic builtins that may be applied to unaligned data by calling library functions. Overrides -mtrap-unaligned-atomic.\n+\n ; TARGET_SVINTO: Currently this just affects alignment.  FIXME:\n ; Redundant with TARGET_ALIGN_BY_32, or put machine stuff here?\n ; This and the others below could just as well be variables and"}, {"sha": "1066db0ab7baf4cd52d701b07c88b1207e90a33b", "filename": "gcc/config/cris/sync.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec4306fcbd361b4fa76736adb6864a45b5e7edb/gcc%2Fconfig%2Fcris%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec4306fcbd361b4fa76736adb6864a45b5e7edb/gcc%2Fconfig%2Fcris%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fsync.md?ref=dec4306fcbd361b4fa76736adb6864a45b5e7edb", "patch": "@@ -130,7 +130,7 @@\n    (set (match_operand:BWD 0 \"register_operand\" \"=&r\")\n \t(match_dup 1))\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n-  \"\"\n+  \"<MODE>mode == QImode || !TARGET_ATOMICS_MAY_CALL_LIBFUNCS\"\n {\n   /* Can't be too sure; better ICE if this happens.  */\n   gcc_assert (!reg_overlap_mentioned_p (operands[2], operands[1]));\n@@ -210,7 +210,7 @@\n    (match_operand 5)\n    (match_operand 6)\n    (match_operand 7)]\n-  \"\"\n+  \"<MODE>mode == QImode || !TARGET_ATOMICS_MAY_CALL_LIBFUNCS\"\n {\n   enum memmodel mmodel = (enum memmodel) INTVAL (operands[6]);\n \n@@ -244,7 +244,7 @@\n \t  (match_dup 3)\n \t  (match_operand:BWD 4 \"register_operand\" \"r\")]\n \t CRIS_UNSPEC_ATOMIC_SWAP_MEM))]\n-  \"\"\n+  \"<MODE>mode == QImode || !TARGET_ATOMICS_MAY_CALL_LIBFUNCS\"\n {\n   if (TARGET_V32)\n     return"}]}