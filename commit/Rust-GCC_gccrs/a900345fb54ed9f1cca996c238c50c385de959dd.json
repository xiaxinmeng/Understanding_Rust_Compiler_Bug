{"sha": "a900345fb54ed9f1cca996c238c50c385de959dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkwMDM0NWZiNTRlZDlmMWNjYTk5NmMyMzhjNTBjMzg1ZGU5NTlkZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-07-09T10:10:51Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-09T10:10:51Z"}, "message": "v850-protos.h (v850_va_arg): Remove.\n\n        * config/v850/v850-protos.h (v850_va_arg): Remove.\n        * config/v850/v850.c (TARGET_GIMPLIFY_VA_ARG_EXPR): New.\n        (v850_gimplify_va_arg_expr): Rewrite from v850_va_arg.\n        * config/v850/v850.h (EXPAND_BUILTIN_VA_ARG): Remove.\n        (FUNCTION_ARG_PASS_BY_REFERENCE): Handle variable size types.\n        (FUNCTION_ARG_CALLEE_COPIES): Use FUNCTION_ARG_PASS_BY_REFERENCE.\n\nFrom-SVN: r84359", "tree": {"sha": "52d2484e446a11e350b6e175d02c37c6b7d5c719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52d2484e446a11e350b6e175d02c37c6b7d5c719"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a900345fb54ed9f1cca996c238c50c385de959dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a900345fb54ed9f1cca996c238c50c385de959dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a900345fb54ed9f1cca996c238c50c385de959dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a900345fb54ed9f1cca996c238c50c385de959dd/comments", "author": null, "committer": null, "parents": [{"sha": "5d47df87a09ab92ef878b032618b5d9b4a3f84ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d47df87a09ab92ef878b032618b5d9b4a3f84ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d47df87a09ab92ef878b032618b5d9b4a3f84ff"}], "stats": {"total": 64, "additions": 21, "deletions": 43}, "files": [{"sha": "166277bc92d2a444cf315d425cea2bdc91dbcdab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a900345fb54ed9f1cca996c238c50c385de959dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a900345fb54ed9f1cca996c238c50c385de959dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a900345fb54ed9f1cca996c238c50c385de959dd", "patch": "@@ -1,3 +1,12 @@\n+2004-07-09  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/v850/v850-protos.h (v850_va_arg): Remove.\n+\t* config/v850/v850.c (TARGET_GIMPLIFY_VA_ARG_EXPR): New.\n+\t(v850_gimplify_va_arg_expr): Rewrite from v850_va_arg.\n+\t* config/v850/v850.h (EXPAND_BUILTIN_VA_ARG): Remove.\n+\t(FUNCTION_ARG_PASS_BY_REFERENCE): Handle variable size types.\n+\t(FUNCTION_ARG_CALLEE_COPIES): Use FUNCTION_ARG_PASS_BY_REFERENCE.\n+\n 2004-07-09  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/12133"}, {"sha": "d20f50b50d14b6a92006173b4e5b9e2378f861a2", "filename": "gcc/config/v850/v850-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a900345fb54ed9f1cca996c238c50c385de959dd/gcc%2Fconfig%2Fv850%2Fv850-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a900345fb54ed9f1cca996c238c50c385de959dd/gcc%2Fconfig%2Fv850%2Fv850-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-protos.h?ref=a900345fb54ed9f1cca996c238c50c385de959dd", "patch": "@@ -70,7 +70,6 @@ extern int    pattern_is_ok_for_epilogue    (rtx, Mmode);\n extern int    register_is_ok_for_epilogue   (rtx, Mmode);\n #ifdef TREE_CODE\n extern rtx    function_arg                  (CUMULATIVE_ARGS *, Mmode, tree, int);\n-extern rtx    v850_va_arg                   (tree, tree);\n #endif\n #endif\n #endif /* TREE_CODE */"}, {"sha": "5a8c89ff49f870187460ee036b67147f991021fd", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 10, "deletions": 36, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a900345fb54ed9f1cca996c238c50c385de959dd/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a900345fb54ed9f1cca996c238c50c385de959dd/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=a900345fb54ed9f1cca996c238c50c385de959dd", "patch": "@@ -67,6 +67,7 @@ static void v850_encode_section_info (tree, rtx, int);\n static bool v850_return_in_memory    (tree, tree);\n static void v850_setup_incoming_varargs (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t\t\t tree, int *, int);\n+static tree v850_gimplify_va_arg_expr (tree, tree, tree *, tree *);\n \n /* Information about the various small memory areas.  */\n struct small_memory_info small_memory[ (int)SMALL_MEMORY_max ] =\n@@ -132,6 +133,9 @@ static int v850_interrupt_p = FALSE;\n #undef TARGET_SETUP_INCOMING_VARARGS\n #define TARGET_SETUP_INCOMING_VARARGS v850_setup_incoming_varargs\n \n+#undef TARGET_GIMPLIFY_VA_ARG_EXPR\n+#define TARGET_GIMPLIFY_VA_ARG_EXPR v850_gimplify_va_arg_expr\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Sometimes certain combinations of command options do not make\n@@ -3306,43 +3310,13 @@ construct_prepare_instruction (rtx op)\n \f\n /* Implement `va_arg'.  */\n \n-rtx\n-v850_va_arg (tree valist, tree type)\n+static tree\n+v850_gimplify_va_arg_expr (tree valist, tree type, tree *pre_p, tree *post_p)\n {\n-  HOST_WIDE_INT size, rsize;\n-  tree addr, incr;\n-  rtx addr_rtx;\n-  int indirect;\n-\n-  /* Round up sizeof(type) to a word.  */\n-  size = int_size_in_bytes (type);\n-  rsize = (size + UNITS_PER_WORD - 1) & -UNITS_PER_WORD;\n-  indirect = 0;\n-\n-  if (size > 8)\n-    {\n-      size = rsize = UNITS_PER_WORD;\n-      indirect = 1;\n-    }\n-\n-  addr = save_expr (valist);\n-  incr = fold (build (PLUS_EXPR, ptr_type_node, addr,\n-\t\t      build_int_2 (rsize, 0)));\n-\n-  incr = build (MODIFY_EXPR, ptr_type_node, valist, incr);\n-  TREE_SIDE_EFFECTS (incr) = 1;\n-  expand_expr (incr, const0_rtx, VOIDmode, EXPAND_NORMAL);\n-\n-  addr_rtx = expand_expr (addr, NULL, Pmode, EXPAND_NORMAL);\n-\n-  if (indirect)\n-    {\n-      addr_rtx = force_reg (Pmode, addr_rtx);\n-      addr_rtx = gen_rtx_MEM (Pmode, addr_rtx);\n-      set_mem_alias_set (addr_rtx, get_varargs_alias_set ());\n-    }\n-\n-  return addr_rtx;\n+  if (FUNCTION_ARG_PASS_BY_REFERENCE (dummy, TYPE_MODE (type), type, 0))\n+    return ind_gimplify_va_arg_expr (valist, type, pre_p, post_p);\n+  else\n+    return std_gimplify_va_arg_expr (valist, type, pre_p, post_p);\n }\n \f\n /* Return an RTX indicating where the return address to the"}, {"sha": "9a34a50a5af205ffaaeac5367e622e6d71837121", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a900345fb54ed9f1cca996c238c50c385de959dd/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a900345fb54ed9f1cca996c238c50c385de959dd/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=a900345fb54ed9f1cca996c238c50c385de959dd", "patch": "@@ -773,15 +773,11 @@ struct cum_arg { int nbytes; int anonymous_args; };\n    space allocated by the caller.  */\n #define OUTGOING_REG_PARM_STACK_SPACE\n \n-/* Implement `va_arg'.  */\n-#define EXPAND_BUILTIN_VA_ARG(valist, type) \\\n-  v850_va_arg (valist, type)\n-\n #define FUNCTION_ARG_PASS_BY_REFERENCE(CUM, MODE, TYPE, NAMED)\t\t\\\n-  ((TYPE) && int_size_in_bytes (TYPE) > 8)\n+  ((TYPE) && (unsigned HOST_WIDE_INT) int_size_in_bytes (TYPE) > 8)\n  \n #define FUNCTION_ARG_CALLEE_COPIES(CUM, MODE, TYPE, NAMED) \\\n-  ((TYPE) && int_size_in_bytes (TYPE) > 8)\n+  FUNCTION_ARG_PASS_BY_REFERENCE (CUM, MODE, TYPE, NAMED)\n \n /* 1 if N is a possible register number for function argument passing.  */\n "}]}