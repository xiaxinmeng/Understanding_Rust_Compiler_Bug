{"sha": "0b66f882f7c2d3fb23faf4d7046ed391e8da5bd5", "node_id": "C_kwDOANBUbNoAKDBiNjZmODgyZjdjMmQzZmIyM2ZhZjRkNzA0NmVkMzkxZThkYTViZDU", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-08-22T21:23:52Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-06T07:14:23Z"}, "message": "[Ada] Fix problematic line debug info attached to call to finalizer\n\nThe End_Label is not defined for body nodes so a small tweak is needed.\n\ngcc/ada/\n\n\t* gcc-interface/trans.cc (At_End_Proc_to_gnu): Use the End_Label of\n\tthe child Handled_Statement_Sequence for body nodes.\n\t(set_end_locus_from_node): Minor tweaks.", "tree": {"sha": "4a7dfdaadf5b73b85e5c9df3296b729cc02929d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a7dfdaadf5b73b85e5c9df3296b729cc02929d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b66f882f7c2d3fb23faf4d7046ed391e8da5bd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b66f882f7c2d3fb23faf4d7046ed391e8da5bd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b66f882f7c2d3fb23faf4d7046ed391e8da5bd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b66f882f7c2d3fb23faf4d7046ed391e8da5bd5/comments", "author": null, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef12e74ce7b1b00cce13d27e1273656926a4a25d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef12e74ce7b1b00cce13d27e1273656926a4a25d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef12e74ce7b1b00cce13d27e1273656926a4a25d"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "f2e0cb2299b48f70cdc707231693a4a7bb367298", "filename": "gcc/ada/gcc-interface/trans.cc", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b66f882f7c2d3fb23faf4d7046ed391e8da5bd5/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b66f882f7c2d3fb23faf4d7046ed391e8da5bd5/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.cc?ref=0b66f882f7c2d3fb23faf4d7046ed391e8da5bd5", "patch": "@@ -3806,18 +3806,27 @@ static void\n At_End_Proc_to_gnu (Node_Id gnat_node)\n {\n   tree proc_decl = gnat_to_gnu (At_End_Proc (gnat_node));\n+  Node_Id gnat_end_label;\n \n   /* When not optimizing, disable inlining of finalizers as this can\n      create a more complex CFG in the parent function.  */\n   if (!optimize || optimize_debug)\n     DECL_DECLARED_INLINE_P (proc_decl) = 0;\n \n+  /* Retrieve the end label attached to the node, if any.  */\n+  if (Nkind (gnat_node) == N_Handled_Sequence_Of_Statements)\n+    gnat_end_label = End_Label (gnat_node);\n+  else if (Present (Handled_Statement_Sequence (gnat_node)))\n+    gnat_end_label = End_Label (Handled_Statement_Sequence (gnat_node));\n+  else\n+    gnat_end_label = Empty;\n+\n   /* If there is no end label attached, we use the location of the At_End\n      procedure because Expand_Cleanup_Actions might reset the location of\n-      the enclosing construct to that of an inner statement.  */\n+     the enclosing construct to that of an inner statement.  */\n   add_cleanup (build_call_n_expr (proc_decl, 0),\n-\t       Present (End_Label (gnat_node))\n-\t       ? End_Label (gnat_node) : At_End_Proc (gnat_node));\n+\t       Present (gnat_end_label)\n+\t       ? gnat_end_label : At_End_Proc (gnat_node));\n }\n \n /* Subroutine of gnat_to_gnu to translate GNAT_NODE, an N_Subprogram_Body.  */\n@@ -10418,7 +10427,6 @@ set_end_locus_from_node (tree gnu_node, Node_Id gnat_node)\n \tgnat_end_label = End_Label (Handled_Statement_Sequence (gnat_node));\n       else\n \tgnat_end_label = Empty;\n-\n       break;\n \n     case N_Package_Declaration:\n@@ -10439,7 +10447,7 @@ set_end_locus_from_node (tree gnu_node, Node_Id gnat_node)\n      transient block does not receive the sloc of a source condition.  */\n   if (!Sloc_to_locus (Sloc (gnat_node), &end_locus,\n                       No (gnat_end_label)\n-                      && (Nkind (gnat_node) == N_Block_Statement)))\n+                      && Nkind (gnat_node) == N_Block_Statement))\n     return false;\n \n   switch (TREE_CODE (gnu_node))"}]}