{"sha": "b410cf1dc056aab195c5408871ffca932df8a78a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQxMGNmMWRjMDU2YWFiMTk1YzU0MDg4NzFmZmNhOTMyZGY4YTc4YQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@codesourcery.com", "date": "2016-11-27T15:07:22Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2016-11-27T15:07:22Z"}, "message": "[Darwin] fix PR67710 by updating 'as' specs to handle newer assembler versions.\n\nA/ Newer versions of ld64 check the min_version command, and newer versions of\n   the system assembler inserts this in response to \"-mmacosx-version-min=\" on\n   the assembler line. Unless one makes sensible versions, some object is bound\n   to conflict.\n\nB/ Additionally, there's a difference in behaviour between \"as\" and \"ld\" when\n   presented with xx.yy.zz (ld truncates to xx.yy, as doesn't); net result is\n   that one needs to pass a truncated version to \"as\".\n\nSo (if the assembler supports minversion commands)\n(a) provide a truncated minversion (as asm_macosx_version_min, which is a\n    driver-only var).\n(b) pass this to \"as\"\n(c) Update tests to determine 'HAVE_AS_MMACOSX_VERSION_MIN_OPTION'\n    (Rainer's patch)\n(d) For some reason the testcases are \"run\" (it's not obvious they need to be,\n    they are checking compile-time issues)\n  - anyway, to preserve the status quo, I've left them as exec.  However, the\n    minimum version that can be code-gened for is target-dependent (there are no\n    released x86 versions before 10.4, for example).  To avoid conflicts where\n    the \"as\" is assuming some minimum, I've set the testversion to 10.5 (which\n    is supported by all the archs we have)\n(e) We need to ensure that libgcc and crts are generated with a sufficiently\n    old minversion not to conflict.\n\ngcc/\n\n2016-11-27  Iain Sandoe  <iain@codesourcery.com>\n\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\tPR target/67710\n\t* config.in: Regenerate\n\t* config/darwin-driver.c (darwin_driver_init): Emit a version string\n\tfor the assembler.\n\t* config/darwin.h(ASM_MMACOSX_VERSION_MIN_SPEC): New, new tests.\n\t* config/darwin.opt(asm_macosx_version_min): New.\n\t* config/i386/darwin.h: Handle ASM_MMACOSX_VERSION_MIN_SPEC.\n\t* configure: Regenerate\n\t* configure.ac: Check for mmacosx-version-min handling.\n\ngcc/testsuite/\n\n2016-11-27  Iain Sandoe  <iain@codesourcery.com>\n\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\t    Dominique d'Humieres  <dominiq@lps.ens.fr>\n\n\tPR target/67710\n\t*  gcc.dg/darwin-minversion-1.c: Update min version check.\n\t*  gcc.dg/darwin-minversion-2.c: Likewise.\n\t*  gcc.dg/darwin-minversion-3.c: Likewise.\n\nlibgcc/\n\n2016-11-27  Iain Sandoe  <iain@codesourcery.com>\n\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\tPR target/67710\n\t*  config/t-darwin: Default builds to 10.5 codegen.\n\n\nCo-Authored-By: Dominique d'Humieres <dominiq@lps.ens.fr>\nCo-Authored-By: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>\n\nFrom-SVN: r242898", "tree": {"sha": "dc142613e84e7693a450028b7c1073978b9092b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc142613e84e7693a450028b7c1073978b9092b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b410cf1dc056aab195c5408871ffca932df8a78a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b410cf1dc056aab195c5408871ffca932df8a78a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b410cf1dc056aab195c5408871ffca932df8a78a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b410cf1dc056aab195c5408871ffca932df8a78a/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03f82a6a634ddfa5828843b647c896968aee3702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03f82a6a634ddfa5828843b647c896968aee3702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03f82a6a634ddfa5828843b647c896968aee3702"}], "stats": {"total": 161, "additions": 150, "deletions": 11}, "files": [{"sha": "4cd9332cc325d91c9854fabb8ca9396e1c3d0bb2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -1,3 +1,16 @@\n+2016-11-27  Iain Sandoe  <iain@codesourcery.com>\n+\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/67710\n+\t* config.in: Regenerate\n+\t* config/darwin-driver.c (darwin_driver_init): Emit a version string\n+\tfor the assembler.\n+\t* config/darwin.h(ASM_MMACOSX_VERSION_MIN_SPEC): New, new tests.\n+\t* config/darwin.opt(asm_macosx_version_min): New.\n+\t* config/i386/darwin.h: Handle ASM_MMACOSX_VERSION_MIN_SPEC.\n+\t* configure: Regenerate\n+\t* configure.ac: Check for mmacosx-version-min handling.\n+\n 2016-11-27  Iain Sandoe  <iain@codesourcery.com>\n \n \tPR target/57438"}, {"sha": "e02d33e0cdb99c8c1d70eac084edfb2862c5f49b", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -564,6 +564,13 @@\n #endif\n \n \n+/* Define if your Mac OS X assembler supports the -mmacos-version-min option.\n+   */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_MMACOSX_VERSION_MIN_OPTION\n+#endif\n+\n+\n /* Define if the assembler understands -mnan=. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_NAN"}, {"sha": "f80c9ed2e0f899bb0e0e2136eeb965e58f3caa3c", "filename": "gcc/config/darwin-driver.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfig%2Fdarwin-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfig%2Fdarwin-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-driver.c?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -73,7 +73,8 @@ darwin_find_version_from_kernel (void)\n      component.  */\n   if (major_vers - 4 <= 4)\n     /* On 10.4 and earlier, the old linker is used which does not\n-       support three-component system versions.  */\n+       support three-component system versions.\n+       FIXME: we should not assume this - a newer linker could be used.  */\n     asprintf (&new_flag, \"10.%d\", major_vers - 4);\n   else\n     asprintf (&new_flag, \"10.%d.%s\", major_vers - 4, minor_vers);\n@@ -294,4 +295,29 @@ darwin_driver_init (unsigned int *decoded_options_count,\n \t\t\t  &(*decoded_options)[*decoded_options_count - 1]);\n \t}\n     }\n+  /* Create and push the major version for assemblers that need it.  */\n+  if (vers_string != NULL)\n+    {\n+      char *asm_major = NULL;\n+      char *first_period = strchr(vers_string, '.');\n+      if (first_period != NULL)\n+\t{\n+\t  char *second_period = strchr(first_period+1, '.');\n+\t  if (second_period  != NULL)\n+\t    asm_major = xstrndup (vers_string, second_period-vers_string);\n+\t  else\n+\t    asm_major = xstrdup (vers_string);\n+        }\n+      /* Else we appear to have a weird macosx version with no major number.\n+         Punt on this for now.  */\n+      if (asm_major != NULL)\n+        {\n+\t  ++*decoded_options_count;\n+\t  *decoded_options = XRESIZEVEC (struct cl_decoded_option,\n+\t\t\t\t\t *decoded_options,\n+\t\t\t\t\t *decoded_options_count);\n+\t  generate_option (OPT_asm_macosx_version_min_, asm_major, 1, CL_DRIVER,\n+\t\t\t  &(*decoded_options)[*decoded_options_count - 1]);\n+        }\n+    }\n }"}, {"sha": "374034e3f0d9fe721b3ac6f0234f69833cc21048", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -399,10 +399,27 @@ extern GTY(()) int darwin_ms_struct;\n    %:version-compare(>< 10.6 10.8 mmacosx-version-min= -lcrt1.10.6.o)\t\\\n    %{fgnu-tm: -lcrttms.o}\"\n \n-/* Default Darwin ASM_SPEC, very simple.  */\n+#ifdef HAVE_AS_MMACOSX_VERSION_MIN_OPTION\n+/* Emit macosx version (but only major).  */\n+#define ASM_MMACOSX_VERSION_MIN_SPEC \\\n+  \" %{asm_macosx_version_min=*: -mmacosx-version-min=%*} %<asm_macosx_version_min=*\"\n+#else\n+#define ASM_MMACOSX_VERSION_MIN_SPEC \" %<asm_macosx_version_min=*\"\n+#endif\n+\n+/* When we detect that we're cctools or llvm as, we need to insert the right\n+   additional options.  */\n+#if HAVE_GNU_AS\n+#define ASM_OPTIONS \"\"\n+#else\n+#define ASM_OPTIONS \"%{v} %{w:-W} %{I*}\"\n+#endif\n+\n+/* Default Darwin ASM_SPEC, very simple. */\n #define ASM_SPEC \"-arch %(darwin_arch) \\\n+  \" ASM_OPTIONS \" \\\n   %{Zforce_cpusubtype_ALL:-force_cpusubtype_ALL} \\\n-  %{static}\"\n+  %{static}\" ASM_MMACOSX_VERSION_MIN_SPEC\n \n /* Default ASM_DEBUG_SPEC.  Darwin's as cannot currently produce dwarf\n    debugging data.  */"}, {"sha": "25459e0728851205ab6271e3fef9a3e561d62e1e", "filename": "gcc/config/darwin.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfig%2Fdarwin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfig%2Fdarwin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.opt?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -37,6 +37,9 @@ Driver RejectNegative Separate\n arch_errors_fatal\n Driver Alias(Zarch_errors_fatal)\n \n+asm_macosx_version_min=\n+Driver RejectNegative Joined\n+\n bind_at_load\n Driver Alias(Zbind_at_load)\n "}, {"sha": "705fdf2696d682a867fd911bd086944b76f112c6", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -112,8 +112,9 @@ extern int darwin_emit_branch_islands;\n   DARWIN_CC1_SPEC\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"-arch %(darwin_arch) -force_cpusubtype_ALL \\\n-  %{static}\"\n+#define ASM_SPEC \"-arch %(darwin_arch) \\\n+  \" ASM_OPTIONS \" -force_cpusubtype_ALL \\\n+  %{static}\" ASM_MMACOSX_VERSION_MIN_SPEC\n \n #define DARWIN_ARCH_SPEC \"%{m64:x86_64;:i386}\"\n #define DARWIN_SUBARCH_SPEC DARWIN_ARCH_SPEC"}, {"sha": "90f9e8977fd7862f368f3dd3b4ed0ba85c835c91", "filename": "gcc/configure", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -24476,6 +24476,45 @@ _ACEOF\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_lto_plugin\" >&5\n $as_echo \"$gcc_cv_lto_plugin\" >&6; }\n \n+# Target OS-specific assembler checks.\n+\n+case \"$target_os\" in\n+  darwin*)\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for -mmacosx-version-min option\" >&5\n+$as_echo_n \"checking assembler for -mmacosx-version-min option... \" >&6; }\n+if test \"${gcc_cv_as_mmacosx_version_min+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_mmacosx_version_min=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '.text' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -mmacosx-version-min=10.1 -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_mmacosx_version_min=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_mmacosx_version_min\" >&5\n+$as_echo \"$gcc_cv_as_mmacosx_version_min\" >&6; }\n+if test $gcc_cv_as_mmacosx_version_min = yes; then\n+\n+$as_echo \"#define HAVE_AS_MMACOSX_VERSION_MIN_OPTION 1\" >>confdefs.h\n+\n+fi\n+    ;;\n+esac\n+\n+# Target CPU-specific assembler checks.\n+\n case \"$target\" in\n   aarch64*-*-*)\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for -mabi option\" >&5"}, {"sha": "b2798e78db71cf2e5c739858c419a9f273b68724", "filename": "gcc/configure.ac", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -3689,6 +3689,20 @@ AC_DEFINE_UNQUOTED(HAVE_LTO_PLUGIN, $gcc_cv_lto_plugin,\n   [Define to the level of your linker's plugin support.])\n AC_MSG_RESULT($gcc_cv_lto_plugin)\n \n+# Target OS-specific assembler checks.\n+\n+case \"$target_os\" in\n+  darwin*)\n+    gcc_GAS_CHECK_FEATURE([-mmacosx-version-min option],\n+      gcc_cv_as_mmacosx_version_min,,\n+      [-mmacosx-version-min=10.1], [.text],,\n+      [AC_DEFINE(HAVE_AS_MMACOSX_VERSION_MIN_OPTION, 1,\n+\t[Define if your Mac OS X assembler supports the -mmacos-version-min option.])])\n+    ;;\n+esac\n+\n+# Target CPU-specific assembler checks.\n+\n case \"$target\" in\n   aarch64*-*-*)\n     gcc_GAS_CHECK_FEATURE([-mabi option], gcc_cv_as_aarch64_mabi,,"}, {"sha": "579dd10b14b1d3fdd546a9878bad88c6598eed04", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -1,3 +1,12 @@\n+2016-11-27  Iain Sandoe  <iain@codesourcery.com>\n+\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\t    Dominique d'Humieres  <dominiq@lps.ens.fr>\n+\n+\tPR target/67710\n+\t*  gcc.dg/darwin-minversion-1.c: Update min version check.\n+\t*  gcc.dg/darwin-minversion-2.c: Likewise.\n+\t*  gcc.dg/darwin-minversion-3.c: Likewise.\n+\n 2016-11-27  Iain Sandoe  <iain@codesourcery.com>\n \n \tPR target/57438"}, {"sha": "ee6493a3119bdbf8364020ec26f2ff98f4b849ea", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-1.c?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -1,11 +1,11 @@\n /* Basic test for -mmacosx-version-min switch on Darwin.  */\n-/* { dg-options \"-mmacosx-version-min=10.1\" } */\n+/* { dg-options \"-mmacosx-version-min=10.5\" } */\n /* { dg-do run { target *-*-darwin* } } */\n \n int\n main ()\n {\n-#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1010\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1050\n   fail me;\n #endif\n   return 0;"}, {"sha": "46fab671b953c7637c786cd5f154a83ba58654ad", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-2.c?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -1,11 +1,11 @@\n /* Basic test for -mmacosx-version-min switch on Darwin.  */\n-/* { dg-options \"-mmacosx-version-min=10.1 -mmacosx-version-min=10.3\" } */\n+/* { dg-options \"-mmacosx-version-min=10.1 -mmacosx-version-min=10.5\" } */\n /* { dg-do run { target *-*-darwin* } } */\n \n int\n main ()\n {\n-#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1030\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1050\n   fail me;\n #endif\n   return 0;"}, {"sha": "a2be54f490a35c82aa161232cbdf1c43182cdb1b", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-3.c?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -1,11 +1,11 @@\n /* Test that most minor versions less than 10 work.  */\n-/* { dg-options \"-mmacosx-version-min=10.4.1\" } */\n+/* { dg-options \"-mmacosx-version-min=10.5.8\" } */\n /* { dg-do compile { target *-*-darwin* } } */\n \n int\n main ()\n {\n-#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1041\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1058\n   fail me;\n #endif\n   return 0;"}, {"sha": "e65c71da3a4c2c5b7322553ab8c26fb9516e0f55", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -1,3 +1,9 @@\n+2016-11-27  Iain Sandoe  <iain@codesourcery.com>\n+\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/67710\n+\t*  config/t-darwin: Default builds to 10.5 codegen.\n+\n 2016-11-24  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/sfp-machine.h (_FP_NANFRAC_H): Define."}, {"sha": "13ca6ed99d3f58df474c5f2cd0dd1d04385feab9", "filename": "libgcc/config/t-darwin", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b410cf1dc056aab195c5408871ffca932df8a78a/libgcc%2Fconfig%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b410cf1dc056aab195c5408871ffca932df8a78a/libgcc%2Fconfig%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-darwin?ref=b410cf1dc056aab195c5408871ffca932df8a78a", "patch": "@@ -1,3 +1,7 @@\n+# Set this as a minimum (unless overriden by arch t-files) since it's a\n+# reasonable lowest common denominator that works for all our archs.\n+HOST_LIBGCC2_CFLAGS += -mmacosx-version-min=10.5\n+\n crt3.o: $(srcdir)/config/darwin-crt3.c\n \t$(crt_compile) $(DARWIN_EXTRA_CRT_BUILD_CFLAGS) -c $<\n "}]}