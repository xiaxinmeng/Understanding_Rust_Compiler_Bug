{"sha": "00cb0f5840795698557731c6e549a5ce99573223", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBjYjBmNTg0MDc5NTY5ODU1NzczMWM2ZTU0OWE1Y2U5OTU3MzIyMw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-08-20T14:00:49Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-08-20T21:01:38Z"}, "message": "analyzer: fix infinite recursion ICE on unions [PR96723]\n\nAttempts to store sm-state into a union in C++ triggered an infinite\nrecursion when trying to generate a representative tree, due to\nerroneously trying to use the dtor of the union as a field.\n\nFix it by filtering out non-FIELD_DECLs when walking TYPE_FIELDs\nin region::get_subregions_for_binding.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/96723\n\t* region-model-manager.cc\n\t(region_model_manager::get_field_region): Assert that field is a\n\tFIELD_DECL.\n\t* region.cc (region::get_subregions_for_binding): In\n\tunion-handling, filter the TYPE_FIELDS traversal to just FIELD_DECLs.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/96723\n\t* g++.dg/analyzer/pr96723.C: New test.", "tree": {"sha": "90b910cf566a9f1a84fffb3dadb2ecaa11674d16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90b910cf566a9f1a84fffb3dadb2ecaa11674d16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00cb0f5840795698557731c6e549a5ce99573223", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00cb0f5840795698557731c6e549a5ce99573223", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00cb0f5840795698557731c6e549a5ce99573223", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00cb0f5840795698557731c6e549a5ce99573223/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1531d8df6ebe3ce3cd1d59a044eafd4e292f9433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1531d8df6ebe3ce3cd1d59a044eafd4e292f9433", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1531d8df6ebe3ce3cd1d59a044eafd4e292f9433"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "75402649a91119d5908d1c098384582895b54390", "filename": "gcc/analyzer/region-model-manager.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00cb0f5840795698557731c6e549a5ce99573223/gcc%2Fanalyzer%2Fregion-model-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00cb0f5840795698557731c6e549a5ce99573223/gcc%2Fanalyzer%2Fregion-model-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-manager.cc?ref=00cb0f5840795698557731c6e549a5ce99573223", "patch": "@@ -781,6 +781,8 @@ region_model_manager::get_region_for_global (tree expr)\n const region *\n region_model_manager::get_field_region (const region *parent, tree field)\n {\n+  gcc_assert (TREE_CODE (field) == FIELD_DECL);\n+\n   field_region::key_t key (parent, field);\n   if (field_region *reg = m_field_regions.get (key))\n     return reg;"}, {"sha": "1823901a3eeb47737b5d126c71769e6ac3b20d12", "filename": "gcc/analyzer/region.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00cb0f5840795698557731c6e549a5ce99573223/gcc%2Fanalyzer%2Fregion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00cb0f5840795698557731c6e549a5ce99573223/gcc%2Fanalyzer%2Fregion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion.cc?ref=00cb0f5840795698557731c6e549a5ce99573223", "patch": "@@ -311,6 +311,8 @@ region::get_subregions_for_binding (region_model_manager *mgr,\n \tfor (tree field = TYPE_FIELDS (get_type ()); field != NULL_TREE;\n \t     field = DECL_CHAIN (field))\n \t  {\n+\t    if (TREE_CODE (field) != FIELD_DECL)\n+\t      continue;\n \t    const region *subregion = mgr->get_field_region (this, field);\n \t    subregion->get_subregions_for_binding (mgr,\n \t\t\t\t\t\t   relative_bit_offset,"}, {"sha": "5d9980c9d2d4f37f3838b12ff12c0f0f4e34b1be", "filename": "gcc/testsuite/g++.dg/analyzer/pr96723.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00cb0f5840795698557731c6e549a5ce99573223/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fanalyzer%2Fpr96723.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00cb0f5840795698557731c6e549a5ce99573223/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fanalyzer%2Fpr96723.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fanalyzer%2Fpr96723.C?ref=00cb0f5840795698557731c6e549a5ce99573223", "patch": "@@ -0,0 +1,10 @@\n+void\n+foo ()\n+{\n+  union\n+  {\n+    int *p;\n+  } u;\n+  u.p = new int;\n+  delete u.p;\n+}"}]}