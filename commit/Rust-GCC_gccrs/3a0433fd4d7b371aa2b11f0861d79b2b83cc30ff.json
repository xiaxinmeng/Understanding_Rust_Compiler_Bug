{"sha": "3a0433fd4d7b371aa2b11f0861d79b2b83cc30ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EwNDMzZmQ0ZDdiMzcxYWEyYjExZjA4NjFkNzliMmI4M2NjMzBmZg==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-05-03T17:17:42Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-05-03T17:17:42Z"}, "message": "(TARGET_PENTIUMPRO, TARGET_CMOVE, BRANCH_COST,\n\nFrom-SVN: r11916", "tree": {"sha": "2fb9535ece8ae296d9461ce2cd6e903b05f04644", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fb9535ece8ae296d9461ce2cd6e903b05f04644"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a0433fd4d7b371aa2b11f0861d79b2b83cc30ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a0433fd4d7b371aa2b11f0861d79b2b83cc30ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a0433fd4d7b371aa2b11f0861d79b2b83cc30ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a0433fd4d7b371aa2b11f0861d79b2b83cc30ff/comments", "author": null, "committer": null, "parents": [{"sha": "e5cb57e8b5c8666de8242f3c0be4a807f2d8be46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5cb57e8b5c8666de8242f3c0be4a807f2d8be46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5cb57e8b5c8666de8242f3c0be4a807f2d8be46"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "b0431b354b34a2c7b4f892085efd8a7e70b3f8c9", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a0433fd4d7b371aa2b11f0861d79b2b83cc30ff/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a0433fd4d7b371aa2b11f0861d79b2b83cc30ff/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=3a0433fd4d7b371aa2b11f0861d79b2b83cc30ff", "patch": "@@ -145,6 +145,7 @@ extern int target_flags;\n #define TARGET_386 (ix86_cpu == PROCESSOR_I386)\n #define TARGET_486 (ix86_cpu == PROCESSOR_I486)\n #define TARGET_PENTIUM (ix86_cpu == PROCESSOR_PENTIUM)\n+#define TARGET_PENTIUMPRO (ix86_cpu == PROCESSOR_PENTIUMPRO)\n #define TARGET_USE_LEAVE (ix86_cpu == PROCESSOR_I386)\n #define TARGET_PUSH_MEMORY (ix86_cpu == PROCESSOR_I386)\n #define TARGET_ZERO_EXTEND_WITH_AND (ix86_cpu != PROCESSOR_I386)\n@@ -153,6 +154,8 @@ extern int target_flags;\n #define TARGET_UNROLL_STRLEN (ix86_cpu != PROCESSOR_I386)\n #define TARGET_USE_Q_REG (ix86_cpu == PROCESSOR_PENTIUM)\n #define TARGET_USE_ANY_REG (ix86_cpu == PROCESSOR_I486)\n+#define TARGET_CMOVE (ix86_isa == PROCESSOR_PENTIUMPRO)\n+#define TARGET_DEEP_BRANCH_PREDICTION (ix86_isa == PROCESSOR_PENTIUMPRO)\n \n #define TARGET_SWITCHES\t\t\t\t\t\t\t\\\n { { \"80387\",\t\t\t MASK_80387 },\t\t\t\t\\\n@@ -207,6 +210,8 @@ enum processor_type\n \n extern enum processor_type ix86_cpu;\n \n+extern int ix86_isa;\n+\n /* Define generic processor types based upon current deployment.  */\n #define PROCESSOR_COMMON  PROCESSOR_I386\n #define PROCESSOR_COMMON_STRING PROCESSOR_I386_STRING\n@@ -240,7 +245,7 @@ extern enum processor_type ix86_cpu;\n    by appending `-m' to the specified name.  */\n #define TARGET_OPTIONS\t\t\t\t\t\t\t\\\n { { \"cpu=\",\t\t&ix86_cpu_string},\t\t\t\t\\\n-  { \"arch=\",\t\t&ix86_isa_string},\t\t\t\t\\\n+  { \"isa=\",\t\t&ix86_isa_string},\t\t\t\t\\\n   { \"reg-alloc=\",\t&i386_reg_alloc_order },\t\t\t\\\n   { \"regparm=\",\t\t&i386_regparm_string },\t\t\t\t\\\n   { \"align-loops=\",\t&i386_align_loops_string },\t\t\t\\\n@@ -512,6 +517,9 @@ extern enum processor_type ix86_cpu;\n \n #define MODES_TIEABLE_P(MODE1, MODE2) ((MODE1) == (MODE2))\n \n+/* Provide the cost of a branch.  Exact meaning under development.  */\n+#define BRANCH_COST (TARGET_PENTIUMPRO ? 5 : 1)    \n+\n /* Specify the registers used for certain standard purposes.\n    The values of these macros are register numbers.  */\n \n@@ -936,6 +944,14 @@ typedef struct i386_args {\n #define FUNCTION_ARG_PARTIAL_NREGS(CUM, MODE, TYPE, NAMED) \\\n   (function_arg_partial_nregs (&CUM, MODE, TYPE, NAMED))\n \n+/* This macro is invoked just before the start of a function.\n+   It is used here to output code for -fpic that will load the\n+   return address into %ebx.  */\n+\n+#undef ASM_OUTPUT_FUNCTION_PREFIX\n+#define ASM_OUTPUT_FUNCTION_PREFIX(FILE, FNNAME) \\\n+  asm_output_function_prefix (FILE, FNNAME)\n+\n /* This macro generates the assembly code for function entry.\n    FILE is a stdio stream to output the code to.\n    SIZE is an int: how many units of temporary storage to allocate."}]}