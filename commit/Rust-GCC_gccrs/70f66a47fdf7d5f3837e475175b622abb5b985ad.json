{"sha": "70f66a47fdf7d5f3837e475175b622abb5b985ad", "node_id": "C_kwDOANBUbNoAKDcwZjY2YTQ3ZmRmN2Q1ZjM4MzdlNDc1MTc1YjYyMmFiYjViOTg1YWQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-10T07:34:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-10T07:38:05Z"}, "message": "openmp, fortran: Fix up IFN_ASSUME call\n\nLike in other spots in trans-openmp.cc that create a TARGET_EXPR, the\nslot has to be created with create_tmp_var_raw, because gfc_create_var\nadds the var to BLOCK_VARS and that ICEs during expansion because\ngimple_add_tmp_var_fn has:\n  gcc_assert (!DECL_CHAIN (tmp) && !DECL_SEEN_IN_BIND_EXPR_P (tmp));\nassertion.  Also, both C/C++ ensure the argument to IFN_ASSUME has\nboolean_type_node, it is easier if Fortran does that too.\n\n2022-10-10  Jakub Jelinek  <jakub@redhat.com>\n\n\t* trans-openmp.cc (gfc_trans_omp_assume): Use create_tmp_var_raw\n\tinstead of gfc_create_var for TARGET_EXPR slot creation.  Create it\n\twith boolean_type_node and convert.", "tree": {"sha": "2f9a5e2161981505d4469183e88fc3dc1e8caa3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f9a5e2161981505d4469183e88fc3dc1e8caa3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70f66a47fdf7d5f3837e475175b622abb5b985ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f66a47fdf7d5f3837e475175b622abb5b985ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f66a47fdf7d5f3837e475175b622abb5b985ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f66a47fdf7d5f3837e475175b622abb5b985ad/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59d27853f10fdefa32779d74056fb7d16a6bb965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d27853f10fdefa32779d74056fb7d16a6bb965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59d27853f10fdefa32779d74056fb7d16a6bb965"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "9bd4e6c7e1b26244a9b6f44b7027b9c9844b4b3c", "filename": "gcc/fortran/trans-openmp.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f66a47fdf7d5f3837e475175b622abb5b985ad/gcc%2Ffortran%2Ftrans-openmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f66a47fdf7d5f3837e475175b622abb5b985ad/gcc%2Ffortran%2Ftrans-openmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.cc?ref=70f66a47fdf7d5f3837e475175b622abb5b985ad", "patch": "@@ -4588,11 +4588,14 @@ gfc_trans_omp_assume (gfc_code *code)\n \t  t = se.expr;\n \telse\n \t  {\n-\t    tree var = gfc_create_var (TREE_TYPE (se.expr), NULL);\n+\t    tree var = create_tmp_var_raw (boolean_type_node);\n+\t    DECL_CONTEXT (var) = current_function_decl;\n \t    stmtblock_t block2;\n \t    gfc_init_block (&block2);\n \t    gfc_add_block_to_block (&block2, &se.pre);\n-\t    gfc_add_modify_loc (loc, &block2, var, se.expr);\n+\t    gfc_add_modify_loc (loc, &block2, var,\n+\t    \t\t\tfold_convert_loc (loc, boolean_type_node,\n+\t\t\t\t\t\t  se.expr));\n \t    gfc_add_block_to_block (&block2, &se.post);\n \t    t = gfc_finish_block (&block2);\n \t    t = build4 (TARGET_EXPR, boolean_type_node, var, t, NULL, NULL);"}]}