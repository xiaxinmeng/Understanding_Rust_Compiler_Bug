{"sha": "7460ccc71d2058f493068e2d02ff8af082887d6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ2MGNjYzcxZDIwNThmNDkzMDY4ZTJkMDJmZjhhZjA4Mjg4N2Q2YQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-01-11T08:52:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-01-11T08:52:16Z"}, "message": "[Ada] Secondary stack leak due to controlled component\n\nThis pach modifies the expansion related to initialization calls and secondary\nstack usage to inspec the components of a type derived from Limited_Controlled\nor Controlled. Previously controlled types were treated as never utilizing the\nsecondary stack, however this is not true because a controlled type may contain\na component initialized by a function which returns on the secondary stack.\n\n------------\n-- Source --\n------------\n\n--  pack1.ads\n\nwith Ada.Finalization; use Ada.Finalization;\n\npackage Pack1 is\n   type Ctrl is new Controlled with record\n      Comp : Integer;\n   end record;\n\n   function Make_Ctrl return Ctrl;\nend Pack1;\n\n--  pack1.adb\n\npackage body Pack1 is\n   Empty : constant Ctrl := (Controlled with Comp => 123);\n\n   function Make_Ctrl return Ctrl is\n   begin\n      return Empty;\n   end Make_Ctrl;\nend Pack1;\n\n--  pack2.ads\n\nwith Ada.Finalization; use Ada.Finalization;\nwith Pack1;            use Pack1;\n\npackage Pack2 is\n   type Ctrl_Wrap is new Controlled with record\n      Comp : Ctrl := Make_Ctrl;\n   end record;\nend Pack2;\n\n--  main.adb\n\nwith Pack2; use Pack2;\n\nprocedure Main is\n   procedure Make_Ctrl_Wrap is\n      Obj : Ctrl_Wrap;\n      pragma Warnings (Off, Obj);\n   begin null; end Make_Ctrl_Wrap;\n\nbegin\n   for Iter in 1 .. 10_000 loop\n      Make_Ctrl_Wrap;\n   end loop;\nend Main;\n\n----------------------------\n-- Compilation and output --\n----------------------------\n\n$ gnatmake -q main.adb\n$ valgrind ./main >& valgrind.log\n$ grep -c \"still reachable\" valgrind.log\n0\n\n2018-01-11  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Uses_SS): A controlled type requires the secondary stack\n\tif it contains at least one component declaration employing a function\n\tcall returning on the secondary stack.\n\nFrom-SVN: r256499", "tree": {"sha": "601cd7b008fd71c9bbe8dabae300ce34b9be515b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/601cd7b008fd71c9bbe8dabae300ce34b9be515b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7460ccc71d2058f493068e2d02ff8af082887d6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7460ccc71d2058f493068e2d02ff8af082887d6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7460ccc71d2058f493068e2d02ff8af082887d6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7460ccc71d2058f493068e2d02ff8af082887d6a/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5b2e4408ca5b9471e7d901b1baacf0fa9003496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b2e4408ca5b9471e7d901b1baacf0fa9003496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5b2e4408ca5b9471e7d901b1baacf0fa9003496"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "9915a7a2c204b77b0e1fbe314f7ea135782ced17", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7460ccc71d2058f493068e2d02ff8af082887d6a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7460ccc71d2058f493068e2d02ff8af082887d6a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7460ccc71d2058f493068e2d02ff8af082887d6a", "patch": "@@ -1,3 +1,9 @@\n+2018-01-11  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_res.adb (Uses_SS): A controlled type requires the secondary stack\n+\tif it contains at least one component declaration employing a function\n+\tcall returning on the secondary stack.\n+\n 2018-01-11  Yannick Moy  <moy@adacore.com>\n \n \t* doc/gnat_rm/standard_and_implementation_defined_restrictions.rst:"}, {"sha": "c4ed06f0179eb03b05baf33cf0dee1d43cd1a25d", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7460ccc71d2058f493068e2d02ff8af082887d6a/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7460ccc71d2058f493068e2d02ff8af082887d6a/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=7460ccc71d2058f493068e2d02ff8af082887d6a", "patch": "@@ -889,10 +889,7 @@ package body Sem_Res is\n             Full_Type := T;\n          end if;\n \n-         if Is_Controlled (Full_Type) then\n-            return False;\n-\n-         elsif Is_Array_Type (Full_Type) then\n+         if Is_Array_Type (Full_Type) then\n             return Uses_SS (Component_Type (Full_Type));\n \n          elsif Is_Record_Type (Full_Type) then"}]}