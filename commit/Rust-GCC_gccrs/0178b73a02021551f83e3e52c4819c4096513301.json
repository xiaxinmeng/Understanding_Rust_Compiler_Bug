{"sha": "0178b73a02021551f83e3e52c4819c4096513301", "node_id": "C_kwDOANBUbNoAKDAxNzhiNzNhMDIwMjE1NTFmODNlM2U1MmM0ODE5YzQwOTY1MTMzMDE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-26T11:03:06Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-26T12:38:35Z"}, "message": "libstdc++: Move std::to_address tests to more appropriate place\n\nSome of the checks in 20_util/pointer_traits/lwg3545.cc really belong in\n20_util/to_address/lwg3545 instead.\n\nThis also fixes the ordering of the dg-options and dg-do directives.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/20_util/pointer_traits/lwg3545.cc: Move to_address\n\ttests to ...\n\t* testsuite/20_util/to_address/lwg3545.cc: ... here. Add -std\n\toption before checking effective target.", "tree": {"sha": "dd2a5e27473e95553e87bd7bc069689e0585ba1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd2a5e27473e95553e87bd7bc069689e0585ba1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0178b73a02021551f83e3e52c4819c4096513301", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0178b73a02021551f83e3e52c4819c4096513301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0178b73a02021551f83e3e52c4819c4096513301", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0178b73a02021551f83e3e52c4819c4096513301/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a70faf6e4df7481c2c9a08a06657c20beb3043de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a70faf6e4df7481c2c9a08a06657c20beb3043de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a70faf6e4df7481c2c9a08a06657c20beb3043de"}], "stats": {"total": 46, "additions": 26, "deletions": 20}, "files": [{"sha": "08c3ed01b750874f3bb14482eac176637537565b", "filename": "libstdc++-v3/testsuite/20_util/pointer_traits/lwg3545.cc", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0178b73a02021551f83e3e52c4819c4096513301/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpointer_traits%2Flwg3545.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0178b73a02021551f83e3e52c4819c4096513301/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpointer_traits%2Flwg3545.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpointer_traits%2Flwg3545.cc?ref=0178b73a02021551f83e3e52c4819c4096513301", "patch": "@@ -99,22 +99,3 @@ static_assert( is_same<pointer<Ctraits>, clever_ptr<char>>::value, \"\" );\n static_assert( is_same<difference_type<Ctraits>, std::ptrdiff_t>::value, \"\" );\n static_assert( is_same<rebind<Ctraits>, clever_ptr<short>>::value, \"\" );\n static_assert( is_same<pointer_to<Ctraits>, clever_ptr<char>>::value, \"\" );\n-\n-#if __cplusplus >= 202002L\n-static_assert( std::to_address(clever_ptr<char>{}) == &clever_ptr<char>::obj, \"\" );\n-\n-int the_int;\n-\n-template<>\n-struct std::pointer_traits<clever_ptr<int>>\n-{\n-  using element_type = int;\n-  using difference_type = std::ptrdiff_t;\n-  using pointer = clever_ptr<int>;\n-\n-  static constexpr int* to_address(pointer p) { return &the_int; }\n-};\n-\n-// Should use pointer_traits<clever_ptr<int>>::to_address\n-static_assert( std::to_address(clever_ptr<int>{}) == &the_int, \"\" );\n-#endif"}, {"sha": "a80ac29b2c971c1dbecc51b17acdc7940881351d", "filename": "libstdc++-v3/testsuite/20_util/to_address/lwg3545.cc", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0178b73a02021551f83e3e52c4819c4096513301/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_address%2Flwg3545.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0178b73a02021551f83e3e52c4819c4096513301/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_address%2Flwg3545.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_address%2Flwg3545.cc?ref=0178b73a02021551f83e3e52c4819c4096513301", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile { target c++20 } }\n // { dg-options \"-std=gnu++20\" }\n+// { dg-do compile { target c++20 } }\n \n #include <memory>\n \n@@ -10,3 +10,28 @@ template<typename T, bool> struct nttp_ptr\n \n // This gives an error in C++20, which the LWG 3545 resolution should fix:\n auto x = std::to_address( nttp_ptr<int, true>() );\n+\n+template<typename T>\n+struct clever_ptr\n+{\n+  static T obj;\n+  constexpr T* operator->() const { return &obj; }\n+};\n+\n+// pointer_traits specialization is valid, but to_address uses operator->\n+static_assert( std::to_address(clever_ptr<char>{}) == &clever_ptr<char>::obj );\n+\n+int the_int;\n+\n+template<>\n+struct std::pointer_traits<clever_ptr<int>>\n+{\n+  using element_type = int;\n+  using difference_type = std::ptrdiff_t;\n+  using pointer = clever_ptr<int>;\n+\n+  static constexpr int* to_address(pointer p) { return &the_int; }\n+};\n+\n+// Uses pointer_traits<clever_ptr<int>>::to_address\n+static_assert( std::to_address(clever_ptr<int>{}) == &the_int );"}]}