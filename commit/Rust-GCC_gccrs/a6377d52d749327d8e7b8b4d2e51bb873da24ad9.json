{"sha": "a6377d52d749327d8e7b8b4d2e51bb873da24ad9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYzNzdkNTJkNzQ5MzI3ZDhlN2I4YjRkMmU1MWJiODczZGEyNGFkOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-01-05T18:53:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-01-05T18:53:44Z"}, "message": "re PR tree-optimization/64494 (ICE at -Os and above on x86_64-linux-gnu in duplicate_ssa_name_range_info, at tree-ssanames.c:499)\n\n\tPR tree-optimization/64494\n\t* tree-ssa-loop-im.c (move_computations_dom_walker::before_dom): Also\n\tclear SSA_NAME_ANTI_RANGE_P flag.\n\n\t* gcc.c-torture/compile/pr64494.c: New test.\n\nFrom-SVN: r219194", "tree": {"sha": "8128543c9bfbb161fc49e812bd604b35026cfe4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8128543c9bfbb161fc49e812bd604b35026cfe4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6377d52d749327d8e7b8b4d2e51bb873da24ad9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6377d52d749327d8e7b8b4d2e51bb873da24ad9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6377d52d749327d8e7b8b4d2e51bb873da24ad9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6377d52d749327d8e7b8b4d2e51bb873da24ad9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b7cec587aa4e4d38ef9a258dc39cef53f8c8482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7cec587aa4e4d38ef9a258dc39cef53f8c8482", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7cec587aa4e4d38ef9a258dc39cef53f8c8482"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "2ba1d2bdcf6c71b1d5175d8d13f11d9c25bd79e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6377d52d749327d8e7b8b4d2e51bb873da24ad9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6377d52d749327d8e7b8b4d2e51bb873da24ad9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6377d52d749327d8e7b8b4d2e51bb873da24ad9", "patch": "@@ -1,3 +1,9 @@\n+2015-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/64494\n+\t* tree-ssa-loop-im.c (move_computations_dom_walker::before_dom): Also\n+\tclear SSA_NAME_ANTI_RANGE_P flag.\n+\n 2015-01-05  Marek Polacek  <polacek@redhat.com>\n \n \t* doc/extend.texi (Arrays of Length Zero): Add missing comma."}, {"sha": "90c25a5c2859c90cf2f488a4ae4c20cdf4c1ff41", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6377d52d749327d8e7b8b4d2e51bb873da24ad9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6377d52d749327d8e7b8b4d2e51bb873da24ad9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a6377d52d749327d8e7b8b4d2e51bb873da24ad9", "patch": "@@ -1,3 +1,8 @@\n+2015-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/64494\n+\t* gcc.c-torture/compile/pr64494.c: New test.\n+\n 2015-01-05  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/47674"}, {"sha": "f6718d341cc7427a1b4c1f2317cf545fd045748c", "filename": "gcc/testsuite/gcc.c-torture/compile/pr64494.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6377d52d749327d8e7b8b4d2e51bb873da24ad9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr64494.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6377d52d749327d8e7b8b4d2e51bb873da24ad9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr64494.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr64494.c?ref=a6377d52d749327d8e7b8b4d2e51bb873da24ad9", "patch": "@@ -0,0 +1,18 @@\n+/* PR tree-optimization/64494 */\n+\n+int a, b;\n+unsigned char c;\n+\n+int\n+main ()\n+{\n+  int d;\n+  a = 0;\n+  for (d = 0; d < 2; d++)\n+    {\n+      a &= (b >= 1);\n+      c = (204 > (((unsigned char) ~0) >> a)) ? 0 : 204 << a;\n+      b = 0;\n+    }\n+  return 0;\n+}"}, {"sha": "6319eff7a7c6ae47e58174e1e00742902541da9d", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6377d52d749327d8e7b8b4d2e51bb873da24ad9/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6377d52d749327d8e7b8b4d2e51bb873da24ad9/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=a6377d52d749327d8e7b8b4d2e51bb873da24ad9", "patch": "@@ -1236,7 +1236,11 @@ move_computations_dom_walker::before_dom_children (basic_block bb)\n \t  && (!ALWAYS_EXECUTED_IN (bb)\n \t      || (ALWAYS_EXECUTED_IN (bb) != level\n \t\t  && !flow_loop_nested_p (ALWAYS_EXECUTED_IN (bb), level))))\n-\tSSA_NAME_RANGE_INFO (gimple_assign_lhs (new_stmt)) = NULL;\n+\t{\n+\t  tree lhs = gimple_assign_lhs (new_stmt);\n+\t  SSA_NAME_RANGE_INFO (lhs) = NULL;\n+\t  SSA_NAME_ANTI_RANGE_P (lhs) = 0;\n+\t}\n       gsi_insert_on_edge (loop_preheader_edge (level), new_stmt);\n       remove_phi_node (&bsi, false);\n     }\n@@ -1302,7 +1306,11 @@ move_computations_dom_walker::before_dom_children (basic_block bb)\n \t  && (!ALWAYS_EXECUTED_IN (bb)\n \t      || !(ALWAYS_EXECUTED_IN (bb) == level\n \t\t   || flow_loop_nested_p (ALWAYS_EXECUTED_IN (bb), level))))\n-\tSSA_NAME_RANGE_INFO (gimple_get_lhs (stmt)) = NULL;\n+\t{\n+\t  tree lhs = gimple_get_lhs (stmt);\n+\t  SSA_NAME_RANGE_INFO (lhs) = NULL;\n+\t  SSA_NAME_ANTI_RANGE_P (lhs) = 0;\n+\t}\n       /* In case this is a stmt that is not unconditionally executed\n          when the target loop header is executed and the stmt may\n \t invoke undefined integer or pointer overflow rewrite it to"}]}