{"sha": "e75210d645630f12bf149043cf6ae51829f5ed78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc1MjEwZDY0NTYzMGYxMmJmMTQ5MDQzY2Y2YWU1MTgyOWY1ZWQ3OA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2017-09-29T14:55:14Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2017-09-29T14:55:14Z"}, "message": "re PR tree-optimization/82337 (ICE: SSA corruption at tree-ssa-coalesce.c:1010)\n\n[gcc]\n\n2017-09-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR tree-optimization/82337\n\t* gimple-ssa-strength-reduction.c (find_phi_def): Don't record a\n\tphi definition if the PHI result appears in an abnormal PHI.\n\t(find_basis_for_base_expr): Don't record a basis if the LHS of the\n\tbasis appears in an abnormal PHI.\n\n[gcc]\n\n2017-09-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR tree-optimization/82337\n\t* gcc.c-torture/compile/pr82337.c: New file.\n\nFrom-SVN: r253293", "tree": {"sha": "b21573fe18781df592cfb303930614cf91d73b5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b21573fe18781df592cfb303930614cf91d73b5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e75210d645630f12bf149043cf6ae51829f5ed78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e75210d645630f12bf149043cf6ae51829f5ed78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e75210d645630f12bf149043cf6ae51829f5ed78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e75210d645630f12bf149043cf6ae51829f5ed78/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eafa7a907b88719f2cb6cfa8addd5accf55310e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eafa7a907b88719f2cb6cfa8addd5accf55310e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eafa7a907b88719f2cb6cfa8addd5accf55310e5"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "63fbd5910aa28f3a313dd943f39b388fb79bd6c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75210d645630f12bf149043cf6ae51829f5ed78/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75210d645630f12bf149043cf6ae51829f5ed78/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e75210d645630f12bf149043cf6ae51829f5ed78", "patch": "@@ -1,3 +1,11 @@\n+2017-09-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR tree-optimization/82337\n+\t* gimple-ssa-strength-reduction.c (find_phi_def): Don't record a\n+\tphi definition if the PHI result appears in an abnormal PHI.\n+\t(find_basis_for_base_expr): Don't record a basis if the LHS of the\n+\tbasis appears in an abnormal PHI.\n+\n 2017-09-29  Richard Biener  <rguenther@suse.de>\n \n \t* graphite-isl-ast-to-gimple.c"}, {"sha": "42320ff66823f102b833d2bbad9ee6d0db517916", "filename": "gcc/gimple-ssa-strength-reduction.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75210d645630f12bf149043cf6ae51829f5ed78/gcc%2Fgimple-ssa-strength-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75210d645630f12bf149043cf6ae51829f5ed78/gcc%2Fgimple-ssa-strength-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-strength-reduction.c?ref=e75210d645630f12bf149043cf6ae51829f5ed78", "patch": "@@ -488,7 +488,8 @@ find_phi_def (tree base)\n \n   c = base_cand_from_table (base);\n \n-  if (!c || c->kind != CAND_PHI)\n+  if (!c || c->kind != CAND_PHI\n+      || SSA_NAME_OCCURS_IN_ABNORMAL_PHI (gimple_phi_result (c->cand_stmt)))\n     return 0;\n \n   return c->cand_num;\n@@ -557,6 +558,11 @@ find_basis_for_base_expr (slsr_cand_t c, tree base_expr)\n \t\t\t      gimple_bb (one_basis->cand_stmt)))\n \tcontinue;\n \n+      tree lhs = gimple_assign_lhs (one_basis->cand_stmt);\n+      if (lhs && TREE_CODE (lhs) == SSA_NAME\n+\t  && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (lhs))\n+\tcontinue;\n+\n       if (!basis || basis->cand_num < one_basis->cand_num)\n \tbasis = one_basis;\n     }"}, {"sha": "5bb4a2fd47aa5db868e4cd57d184ad20320111e1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75210d645630f12bf149043cf6ae51829f5ed78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75210d645630f12bf149043cf6ae51829f5ed78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e75210d645630f12bf149043cf6ae51829f5ed78", "patch": "@@ -1,3 +1,8 @@\n+2017-09-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR tree-optimization/82337\n+\t* gcc.c-torture/compile/pr82337.c: New file.\n+\n 2017-09-29  Javier Miranda  <miranda@adacore.com>\n \n \t* gnat.dg/unchecked_union3.adb: New testcase."}, {"sha": "f8afa746adbab8eb0bf802c86a7c69964bae2a3f", "filename": "gcc/testsuite/gcc.c-torture/compile/pr82337.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75210d645630f12bf149043cf6ae51829f5ed78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr82337.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75210d645630f12bf149043cf6ae51829f5ed78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr82337.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr82337.c?ref=e75210d645630f12bf149043cf6ae51829f5ed78", "patch": "@@ -0,0 +1,25 @@\n+/* PR82337: SLSR needs to prevent abnormal SSA names from\n+   serving as a basis. */\n+char *a, *b, *c;\n+\n+struct d {\n+  short e;\n+  char f[];\n+};\n+\n+extern void j (void);\n+\n+void\n+g() {\n+  struct d *h;\n+  char *i;\n+  int d;\n+  do {\n+    i = h->f + d;\n+    20 ? j() : 0;\n+    i = c;\n+    if (__builtin_setjmp (h))\n+      b = h->f + d;\n+    d = (int)(*i);\n+  } while (a);\n+}"}]}