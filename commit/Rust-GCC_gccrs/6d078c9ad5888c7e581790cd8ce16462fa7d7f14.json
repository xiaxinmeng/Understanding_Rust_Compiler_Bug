{"sha": "6d078c9ad5888c7e581790cd8ce16462fa7d7f14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwNzhjOWFkNTg4OGM3ZTU4MTc5MGNkOGNlMTY0NjJmYTdkN2YxNA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2018-11-28T20:08:03Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2018-11-28T20:08:03Z"}, "message": "re PR target/88207 (gcc.target/i386/pr22076.c etc. FAIL)\n\n2018-11-28  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/88207\n\t* ira-costs.c (scan_one_insn): Process subregs when updating costs\n\tfor pseudos and allocnos from insn.\n\nFrom-SVN: r266582", "tree": {"sha": "51e97442f20b68335e3716da5d64773be1750ed8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51e97442f20b68335e3716da5d64773be1750ed8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d078c9ad5888c7e581790cd8ce16462fa7d7f14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d078c9ad5888c7e581790cd8ce16462fa7d7f14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d078c9ad5888c7e581790cd8ce16462fa7d7f14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d078c9ad5888c7e581790cd8ce16462fa7d7f14/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bdd0bd5c96a1f3a51bcfe0cc5b0ffd3ff6f0280e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd0bd5c96a1f3a51bcfe0cc5b0ffd3ff6f0280e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd0bd5c96a1f3a51bcfe0cc5b0ffd3ff6f0280e"}], "stats": {"total": 70, "additions": 40, "deletions": 30}, "files": [{"sha": "f2e5d828e0034f469d9a3914f60d9cfda59bac98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d078c9ad5888c7e581790cd8ce16462fa7d7f14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d078c9ad5888c7e581790cd8ce16462fa7d7f14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d078c9ad5888c7e581790cd8ce16462fa7d7f14", "patch": "@@ -1,3 +1,9 @@\n+2018-11-28  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/88207\n+\t* ira-costs.c (scan_one_insn): Process subregs when updating costs\n+\tfor pseudos and allocnos from insn.\n+\n 2018-11-28  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/rs6000/aix72.h: Update to match aix71.h changes."}, {"sha": "e6d0687fd05a048613d40e138b24c186c51d9195", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 34, "deletions": 30, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d078c9ad5888c7e581790cd8ce16462fa7d7f14/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d078c9ad5888c7e581790cd8ce16462fa7d7f14/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=6d078c9ad5888c7e581790cd8ce16462fa7d7f14", "patch": "@@ -1535,36 +1535,40 @@ scan_one_insn (rtx_insn *insn)\n   /* Now add the cost for each operand to the total costs for its\n      allocno.  */\n   for (i = 0; i < recog_data.n_operands; i++)\n-    if (REG_P (recog_data.operand[i])\n-\t&& REGNO (recog_data.operand[i]) >= FIRST_PSEUDO_REGISTER)\n-      {\n-\tint regno = REGNO (recog_data.operand[i]);\n-\tstruct costs *p = COSTS (costs, COST_INDEX (regno));\n-\tstruct costs *q = op_costs[i];\n-\tint *p_costs = p->cost, *q_costs = q->cost;\n-\tcost_classes_t cost_classes_ptr = regno_cost_classes[regno];\n-\tint add_cost;\n-\n-\t/* If the already accounted for the memory \"cost\" above, don't\n-\t   do so again.  */\n-\tif (!counted_mem)\n-\t  {\n-\t    add_cost = q->mem_cost;\n-\t    if (add_cost > 0 && INT_MAX - add_cost < p->mem_cost)\n-\t      p->mem_cost = INT_MAX;\n-\t    else\n-\t      p->mem_cost += add_cost;\n-\t  }\n-\tfor (k = cost_classes_ptr->num - 1; k >= 0; k--)\n-\t  {\n-\t    add_cost = q_costs[k];\n-\t    if (add_cost > 0 && INT_MAX - add_cost < p_costs[k])\n-\t      p_costs[k] = INT_MAX;\n-\t    else\n-\t      p_costs[k] += add_cost;\n-\t  }\n-      }\n-\n+    {\n+      rtx op = recog_data.operand[i];\n+      \n+      if (GET_CODE (op) == SUBREG)\n+\top = SUBREG_REG (op);\n+      if (REG_P (op) && REGNO (op) >= FIRST_PSEUDO_REGISTER)\n+\t{\n+\t  int regno = REGNO (op);\n+\t  struct costs *p = COSTS (costs, COST_INDEX (regno));\n+\t  struct costs *q = op_costs[i];\n+\t  int *p_costs = p->cost, *q_costs = q->cost;\n+\t  cost_classes_t cost_classes_ptr = regno_cost_classes[regno];\n+\t  int add_cost;\n+\t  \n+\t  /* If the already accounted for the memory \"cost\" above, don't\n+\t     do so again.  */\n+\t  if (!counted_mem)\n+\t    {\n+\t      add_cost = q->mem_cost;\n+\t      if (add_cost > 0 && INT_MAX - add_cost < p->mem_cost)\n+\t\tp->mem_cost = INT_MAX;\n+\t      else\n+\t\tp->mem_cost += add_cost;\n+\t    }\n+\t  for (k = cost_classes_ptr->num - 1; k >= 0; k--)\n+\t    {\n+\t      add_cost = q_costs[k];\n+\t      if (add_cost > 0 && INT_MAX - add_cost < p_costs[k])\n+\t\tp_costs[k] = INT_MAX;\n+\t      else\n+\t\tp_costs[k] += add_cost;\n+\t    }\n+\t}\n+    }\n   return insn;\n }\n "}]}