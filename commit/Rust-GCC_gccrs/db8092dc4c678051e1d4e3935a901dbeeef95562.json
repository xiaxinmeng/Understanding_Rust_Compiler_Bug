{"sha": "db8092dc4c678051e1d4e3935a901dbeeef95562", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI4MDkyZGM0YzY3ODA1MWUxZDRlMzkzNWE5MDFkYmVlZWY5NTU2Mg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-23T13:03:35Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-23T13:03:35Z"}, "message": "re PR libfortran/23138 ([mingw32] real(16) values are printed incorrectly)\n\n\tPR libfortran/23138\n\t* acinclude.m4 (LIBGFOR_CHECK_MINGW_SNPRINTF): New check.\n\t* configure.ac: Use LIBGFOR_CHECK_MINGW_SNPRINTF.\n\t* libgfortran.h: If HAVE_MINGW_SNPRINTF is true, use __mingw_snprintf\n\tinstead of snprintf.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\nFrom-SVN: r127739", "tree": {"sha": "9abbc0a4bb0fdbe3f645d62bc422147e4a4c80db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9abbc0a4bb0fdbe3f645d62bc422147e4a4c80db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db8092dc4c678051e1d4e3935a901dbeeef95562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db8092dc4c678051e1d4e3935a901dbeeef95562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db8092dc4c678051e1d4e3935a901dbeeef95562", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db8092dc4c678051e1d4e3935a901dbeeef95562/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b73aff3657492d5425e780ec650f2c00658a73de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b73aff3657492d5425e780ec650f2c00658a73de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b73aff3657492d5425e780ec650f2c00658a73de"}], "stats": {"total": 119, "additions": 119, "deletions": 0}, "files": [{"sha": "e9832a0e24e5e807c79d3c0f39632dc60e371c80", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8092dc4c678051e1d4e3935a901dbeeef95562/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8092dc4c678051e1d4e3935a901dbeeef95562/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=db8092dc4c678051e1d4e3935a901dbeeef95562", "patch": "@@ -1,3 +1,13 @@\n+2007-08-23  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/23138\n+\t* acinclude.m4 (LIBGFOR_CHECK_MINGW_SNPRINTF): New check.\n+\t* configure.ac: Use LIBGFOR_CHECK_MINGW_SNPRINTF.\n+\t* libgfortran.h: If HAVE_MINGW_SNPRINTF is true, use __mingw_snprintf\n+\tinstead of snprintf.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2007-08-22  Bernhard Fischer  <rep.dot.nop@gmail.com>\n \n \t* libgfortran/Makefile.am (AM_CPPFLAGS): Commentary typo fix."}, {"sha": "40ce53560b326357b8069f4d9c611a0b79288f31", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8092dc4c678051e1d4e3935a901dbeeef95562/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8092dc4c678051e1d4e3935a901dbeeef95562/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=db8092dc4c678051e1d4e3935a901dbeeef95562", "patch": "@@ -386,3 +386,19 @@ AC_DEFUN([LIBGFOR_CHECK_FPSETMASK], [\n     AC_DEFINE(HAVE_FPSETMASK, 1, [Define if you have fpsetmask.])\n   fi\n ])\n+\n+dnl Check whether we have a mingw that provides a __mingw_snprintf function\n+AC_DEFUN([LIBGFOR_CHECK_MINGW_SNPRINTF], [\n+  AC_CACHE_CHECK([whether __mingw_snprintf is present], have_mingw_snprintf, [\n+    AC_TRY_LINK([\n+#include <stdio.h>\n+extern int __mingw_snprintf (char *, size_t, const char *, ...);\n+],[\n+__mingw_snprintf (NULL, 0, \"%d\\n\", 1);\n+],\n+    eval \"have_mingw_snprintf=yes\", eval \"have_mingw_snprintf=no\")\n+  ])\n+  if test x\"$have_mingw_snprintf\" = xyes; then\n+    AC_DEFINE(HAVE_MINGW_SNPRINTF, 1, [Define if you have __mingw_snprintf.])\n+  fi\n+])"}, {"sha": "877fc5a6e0174e89f72440ee7554180a7074ee53", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8092dc4c678051e1d4e3935a901dbeeef95562/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8092dc4c678051e1d4e3935a901dbeeef95562/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=db8092dc4c678051e1d4e3935a901dbeeef95562", "patch": "@@ -522,6 +522,9 @@\n /* Define to 1 if you have the <memory.h> header file. */\n #undef HAVE_MEMORY_H\n \n+/* Define if you have __mingw_snprintf. */\n+#undef HAVE_MINGW_SNPRINTF\n+\n /* Define to 1 if you have the `mkstemp' function. */\n #undef HAVE_MKSTEMP\n "}, {"sha": "f71c5900f2e677a17ce0de5a8d01412b1b993324", "filename": "libgfortran/configure", "status": "modified", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8092dc4c678051e1d4e3935a901dbeeef95562/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8092dc4c678051e1d4e3935a901dbeeef95562/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=db8092dc4c678051e1d4e3935a901dbeeef95562", "patch": "@@ -31797,6 +31797,83 @@ _ACEOF\n \n fi\n \n+# Check whether __mingw_snprintf() is present\n+\n+  echo \"$as_me:$LINENO: checking whether __mingw_snprintf is present\" >&5\n+echo $ECHO_N \"checking whether __mingw_snprintf is present... $ECHO_C\" >&6\n+if test \"${have_mingw_snprintf+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+    if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+\n+#include <stdio.h>\n+extern int __mingw_snprintf (char *, size_t, const char *, ...);\n+\n+int\n+main ()\n+{\n+\n+__mingw_snprintf (NULL, 0, \"%d\\n\", 1);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  eval \"have_mingw_snprintf=yes\"\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+eval \"have_mingw_snprintf=no\"\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+\n+fi\n+echo \"$as_me:$LINENO: result: $have_mingw_snprintf\" >&5\n+echo \"${ECHO_T}$have_mingw_snprintf\" >&6\n+  if test x\"$have_mingw_snprintf\" = xyes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_MINGW_SNPRINTF 1\n+_ACEOF\n+\n+  fi\n+\n+\n # Check for GNU libc feenableexcept\n echo \"$as_me:$LINENO: checking for feenableexcept in -lm\" >&5\n echo $ECHO_N \"checking for feenableexcept in -lm... $ECHO_C\" >&6"}, {"sha": "8aa3b637785e3a56d8791d630940a4b7e4a0236d", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8092dc4c678051e1d4e3935a901dbeeef95562/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8092dc4c678051e1d4e3935a901dbeeef95562/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=db8092dc4c678051e1d4e3935a901dbeeef95562", "patch": "@@ -383,6 +383,9 @@ LIBGFOR_CHECK_FOR_BROKEN_FPCLASSIFY\n # Check whether the system has a working stat()\n LIBGFOR_CHECK_WORKING_STAT\n \n+# Check whether __mingw_snprintf() is present\n+LIBGFOR_CHECK_MINGW_SNPRINTF\n+\n # Check for GNU libc feenableexcept\n AC_CHECK_LIB([m],[feenableexcept],[have_feenableexcept=yes AC_DEFINE([HAVE_FEENABLEEXCEPT],[1],[libm includes feenableexcept])])\n "}, {"sha": "6c687f7b12b7886db7e5a4c881923722aa8bb924", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8092dc4c678051e1d4e3935a901dbeeef95562/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8092dc4c678051e1d4e3935a901dbeeef95562/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=db8092dc4c678051e1d4e3935a901dbeeef95562", "patch": "@@ -70,6 +70,16 @@ typedef off_t gfc_offset;\n #endif\n \n \n+/* On mingw, work around the buggy Windows snprintf() by using the one\n+   mingw provides, __mingw_snprintf().  We also provide a prototype for\n+   __mingw_snprintf(), because the mingw headers currently don't have one.  */\n+#if HAVE_MINGW_SNPRINTF\n+extern int __mingw_snprintf (char *, size_t, const char *, ...);\n+#undef snprintf\n+#define snprintf __mingw_snprintf\n+#endif\n+\n+\n /* For a library, a standard prefix is a requirement in order to partition\n    the namespace.  IPREFIX is for symbols intended to be internal to the\n    library.  */"}]}