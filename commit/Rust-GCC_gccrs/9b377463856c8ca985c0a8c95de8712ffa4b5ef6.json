{"sha": "9b377463856c8ca985c0a8c95de8712ffa4b5ef6", "node_id": "C_kwDOANBUbNoAKDliMzc3NDYzODU2YzhjYTk4NWMwYThjOTVkZTg3MTJmZmE0YjVlZjY", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-11-30T00:17:59Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-11-30T00:17:59Z"}, "message": "Daily bump.", "tree": {"sha": "d0c5de534069d090b2e2e8244b33d8f983513b18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0c5de534069d090b2e2e8244b33d8f983513b18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b377463856c8ca985c0a8c95de8712ffa4b5ef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b377463856c8ca985c0a8c95de8712ffa4b5ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b377463856c8ca985c0a8c95de8712ffa4b5ef6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/comments", "author": null, "committer": null, "parents": [{"sha": "b6c6a3d64f2e4e9347733290aca3c75898c44b2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6c6a3d64f2e4e9347733290aca3c75898c44b2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6c6a3d64f2e4e9347733290aca3c75898c44b2e"}], "stats": {"total": 111, "additions": 110, "deletions": 1}, "files": [{"sha": "90f6649e4ef3941142233a1b4f9e4eefa929b2dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b377463856c8ca985c0a8c95de8712ffa4b5ef6", "patch": "@@ -1,3 +1,38 @@\n+2022-11-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/107852\n+\t* tree-ssa-sccvn.cc (visit_phi): Use equivalences recorded\n+\tas predicated values to elide more redundant PHIs.\n+\n+2022-11-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106995\n+\t* tree-if-conv.cc (pass_if_conversion::execute): Also redirect the\n+\tversioning condition to the original loop if this very loop\n+\tvanished during CFG cleanup.\n+\n+2022-11-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/107898\n+\t* gimple-ssa-warn-alloca.cc (alloca_call_type): Check\n+\tthe type of the alloca argument is compatible with size_t\n+\tbefore querying ranges.\n+\n+2022-11-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/107897\n+\t* multiple_target.cc (pass_target_clone::gate): Disable\n+\tafter errors.\n+\n+2022-11-29  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure: Regenerate.\n+\n+2022-11-29  YunQiang Su  <yunqiang.su@cipunited.com>\n+\n+\t* configure.ac: add description for\n+\tAC_DEFINE(ENABLE_MULTIARCH, 1)\n+\n 2022-11-28  Andrew Pinski  <apinski@marvell.com>\n \n \t* match.pd ((A / (1 << B)) -> (A >> B).):"}, {"sha": "e6a7597e85b471456d51eab438761655ffe73e61", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=9b377463856c8ca985c0a8c95de8712ffa4b5ef6", "patch": "@@ -1 +1 @@\n-20221129\n+20221130"}, {"sha": "02274f6e412d7bf2cf6a1dbfc55e4df8fbfd4458", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9b377463856c8ca985c0a8c95de8712ffa4b5ef6", "patch": "@@ -1,3 +1,12 @@\n+2022-11-29  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/107864\n+\t* decl.cc (function_requirements_equivalent_p): Don't check\n+\tDECL_TEMPLATE_SPECIALIZATION.\n+\t* pt.cc (determine_specialization): Propagate constraints when\n+\tspecializing a function template too.  Simplify by using\n+\tadd_outermost_template_args.\n+\n 2022-11-28  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/101733"}, {"sha": "e3d66848fa4150655ae79670441e2273412e2fc8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9b377463856c8ca985c0a8c95de8712ffa4b5ef6", "patch": "@@ -1,3 +1,13 @@\n+2022-11-29  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/107874\n+\t* simplify.cc (gfc_simplify_merge): When simplifying MERGE with a\n+\tconstant scalar MASK, ensure that arguments TSOURCE and FSOURCE are\n+\teither constant or will be evaluated.\n+\t* trans-intrinsic.cc (gfc_conv_intrinsic_merge): Evaluate arguments\n+\tbefore generating conditional expression.\n+\n 2022-11-28  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/107819"}, {"sha": "0660d5688b604eb7e3c1a4a6a2a4dc8e483c656a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9b377463856c8ca985c0a8c95de8712ffa4b5ef6", "patch": "@@ -1,3 +1,31 @@\n+2022-11-29  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/107874\n+\t* gfortran.dg/merge_init_expr_2.f90: Adjust code to the corrected\n+\tsimplification.\n+\t* gfortran.dg/merge_1.f90: New test.\n+\n+2022-11-29  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/107864\n+\t* g++.dg/concepts/explicit-spec1a.C: New test.\n+\n+2022-11-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/107852\n+\t* gcc.dg/tree-ssa/ssa-fre-101.c: New testcase.\n+\n+2022-11-29  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/ipa/iinline-attr.c: XFAIL on SPARC.\n+\t* gcc.dg/signbit-2.c: Replace vect_int selector by vect_shift.\n+\n+2022-11-29  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/107810\n+\t* gnat.dg/unchecked_convert9.adb: Adjust pattern.\n+\n 2022-11-28  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/101733"}, {"sha": "8c764b678456df35c0996f02d93490dec8df552b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b377463856c8ca985c0a8c95de8712ffa4b5ef6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9b377463856c8ca985c0a8c95de8712ffa4b5ef6", "patch": "@@ -1,3 +1,30 @@\n+2022-11-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/107852\n+\tPR libstdc++/106199\n+\tPR libstdc++/100366\n+\t* include/bits/vector.tcc (vector::_M_fill_insert): Copy\n+\t_M_start and _M_finish members before allocating.\n+\t(vector::_M_default_append): Likewise.\n+\t(vector::_M_range_insert): Likewise.\n+\n+2022-11-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_iterator_base_types.h (__iterator_category):\n+\tAdd always_inline attribute.\n+\t* include/bits/stl_vector.h (assign(Iter, Iter)): Call\n+\t_M_assign_aux directly, instead of _M_assign_dispatch.\n+\t(insert(const_iterator, Iter, Iter)): Call _M_range_insert\n+\tdirectly instead of _M_insert_dispatch.\n+\n+2022-11-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/format: Rename all variables called __used or\n+\t__packed.\n+\t* testsuite/17_intro/badnames.cc: Add no_pch options.\n+\t* testsuite/17_intro/names.cc: Check __packed, __unused and\n+\t__used.\n+\n 2022-11-28  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* testsuite/20_util/function/cons/70692.cc: Adapt dg-error message."}]}