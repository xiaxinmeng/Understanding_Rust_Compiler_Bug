{"sha": "4522854abf2b61d3019fba080ecb1bdb0162a245", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUyMjg1NGFiZjJiNjFkMzAxOWZiYTA4MGVjYjFiZGIwMTYyYTI0NQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-06-11T23:03:14Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-06-11T23:03:14Z"}, "message": "* config/alpha/alpha.c (alpha_trampoline_init): Split large constants.\n\nFrom-SVN: r188405", "tree": {"sha": "8917b00bbc8080d68429ef401171cf5114b3e7c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8917b00bbc8080d68429ef401171cf5114b3e7c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4522854abf2b61d3019fba080ecb1bdb0162a245", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4522854abf2b61d3019fba080ecb1bdb0162a245", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4522854abf2b61d3019fba080ecb1bdb0162a245", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4522854abf2b61d3019fba080ecb1bdb0162a245/comments", "author": null, "committer": null, "parents": [{"sha": "f938987f60e922ee81a8fee9b14217d7a1b27c81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f938987f60e922ee81a8fee9b14217d7a1b27c81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f938987f60e922ee81a8fee9b14217d7a1b27c81"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "5f32514124b7416f31efd100cc7734e5fa1ebe37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4522854abf2b61d3019fba080ecb1bdb0162a245/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4522854abf2b61d3019fba080ecb1bdb0162a245/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4522854abf2b61d3019fba080ecb1bdb0162a245", "patch": "@@ -1,3 +1,7 @@\n+2012-06-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.c (alpha_trampoline_init): Split large constants.\n+\n 2012-06-12  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* doc/tm.texi.in (Addressing Modes) <TARGET_LEGITIMIZE_ADDRESS>:"}, {"sha": "3dda9fb0b16dc68699f4f971c0f00c439a826666", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4522854abf2b61d3019fba080ecb1bdb0162a245/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4522854abf2b61d3019fba080ecb1bdb0162a245/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=4522854abf2b61d3019fba080ecb1bdb0162a245", "patch": "@@ -5451,6 +5451,8 @@ alpha_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n   chain_value = convert_memory_address (Pmode, chain_value);\n #endif\n \n+#define HWI_HEX2(X,Y)\t(((HOST_WIDE_INT)0x ## X ## u) | 0x ## Y ## u)\n+\n   if (TARGET_ABI_OPEN_VMS)\n     {\n       const char *fnname;\n@@ -5468,7 +5470,8 @@ alpha_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n \t the function's procedure descriptor with certain fields zeroed IAW\n \t the VMS calling standard. This is stored in the first quadword.  */\n       word1 = force_reg (DImode, gen_const_mem (DImode, fnaddr));\n-      word1 = expand_and (DImode, word1, GEN_INT (0xffff0fff0000fff0), NULL);\n+      word1 = expand_and (DImode, word1,\n+\t\t\t  GEN_INT (HWI_HEX2(ffff0fff,0000fff0)), NULL);\n     }\n   else\n     {\n@@ -5479,10 +5482,12 @@ alpha_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n \t    nop\n \t We don't bother setting the HINT field of the jump; the nop\n \t is merely there for padding.  */\n-      word1 = GEN_INT (0xa77b0010a43b0018);\n-      word2 = GEN_INT (0x47ff041f6bfb0000);\n+      word1 = GEN_INT (HWI_HEX2 (a77b0010,a43b0018));\n+      word2 = GEN_INT (HWI_HEX2 (47ff041f,6bfb0000));\n     }\n \n+#undef HWI_HEX2\n+\n   /* Store the first two words, as computed above.  */\n   mem = adjust_address (m_tramp, DImode, 0);\n   emit_move_insn (mem, word1);"}]}