{"sha": "97dd1ee8de2ceb45b1572964bc2849d32cb2b322", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdkZDFlZThkZTJjZWI0NWIxNTcyOTY0YmMyODQ5ZDMyY2IyYjMyMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-11-28T16:58:24Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-28T16:58:24Z"}, "message": "profile-count.h (profile_count::max): Work on profiles of different type.\n\n\t* profile-count.h (profile_count::max): Work on profiles of different\n\ttype.\n\t(profile_count::apply_scale): Be sure that ret is not local or global0\n\ttype if num is global.\n\nFrom-SVN: r278813", "tree": {"sha": "18d1ab815021837250a9450212e597225f7949dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18d1ab815021837250a9450212e597225f7949dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97dd1ee8de2ceb45b1572964bc2849d32cb2b322", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97dd1ee8de2ceb45b1572964bc2849d32cb2b322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97dd1ee8de2ceb45b1572964bc2849d32cb2b322", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97dd1ee8de2ceb45b1572964bc2849d32cb2b322/comments", "author": null, "committer": null, "parents": [{"sha": "2dfd63ded836e993c3693da957142b0228c61607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dfd63ded836e993c3693da957142b0228c61607", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dfd63ded836e993c3693da957142b0228c61607"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "e842cd2648d814bbaf25a46e6122232db182fcf1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97dd1ee8de2ceb45b1572964bc2849d32cb2b322/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97dd1ee8de2ceb45b1572964bc2849d32cb2b322/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97dd1ee8de2ceb45b1572964bc2849d32cb2b322", "patch": "@@ -1,3 +1,17 @@\n+2019-11-28  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* profile-count.h (profile_count::max): Work on profiles of different\n+\ttype.\n+\t(profile_count::apply_scale): Be sure that ret is not local or global0\n+\ttype if num is global.\n+\n+2019-11-28  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* profile-count.h (profile_count::max): Work on profiles of different\n+\ttype.\n+\t(profile_count::apply_scale): Be sure that ret is not local or global0\n+\ttype if num is global.\n+\n 2019-11-28  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/92697"}, {"sha": "b79de83e4794fb9d548827b1a3bcdeee3c51780a", "filename": "gcc/profile-count.h", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97dd1ee8de2ceb45b1572964bc2849d32cb2b322/gcc%2Fprofile-count.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97dd1ee8de2ceb45b1572964bc2849d32cb2b322/gcc%2Fprofile-count.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile-count.h?ref=97dd1ee8de2ceb45b1572964bc2849d32cb2b322", "patch": "@@ -992,6 +992,14 @@ struct GTY(()) profile_count\n \n   profile_count max (profile_count other) const\n     {\n+      profile_count val = *this;\n+\n+      /* Always prefer nonzero IPA counts over local counts.  */\n+      if (ipa ().nonzero_p () || other.ipa ().nonzero_p ())\n+\t{\n+\t  val = ipa ();\n+\t  other = other.ipa ();\n+\t}\n       if (!initialized_p ())\n \treturn other;\n       if (!other.initialized_p ())\n@@ -1001,8 +1009,8 @@ struct GTY(()) profile_count\n       if (other == zero ())\n \treturn *this;\n       gcc_checking_assert (compatible_p (other));\n-      if (m_val < other.m_val || (m_val == other.m_val\n-\t\t\t\t  && m_quality < other.m_quality))\n+      if (val.m_val < other.m_val || (m_val == other.m_val\n+\t\t\t\t      && val.m_quality < other.m_quality))\n \treturn other;\n       return *this;\n     }\n@@ -1075,8 +1083,11 @@ struct GTY(()) profile_count\n       ret.m_val = MIN (val, max_count);\n       ret.m_quality = MIN (MIN (MIN (m_quality, ADJUSTED),\n \t\t\t        num.m_quality), den.m_quality);\n-      if (num.ipa_p () && !ret.ipa_p ())\n-\tret.m_quality = MIN (num.m_quality, GUESSED);\n+      /* Be sure that ret is not local if num is global.\n+\t Also ensure that ret is not global0 when num is global.  */\n+      if (num.ipa_p ())\n+\tret.m_quality = MAX (ret.m_quality,\n+\t\t\t     num == num.ipa () ? GUESSED : num.m_quality);\n       return ret;\n     }\n "}]}