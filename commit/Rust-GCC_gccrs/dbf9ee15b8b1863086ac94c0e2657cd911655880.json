{"sha": "dbf9ee15b8b1863086ac94c0e2657cd911655880", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJmOWVlMTViOGIxODYzMDg2YWM5NGMwZTI2NTdjZDkxMTY1NTg4MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-02-10T16:12:33Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-02-10T16:12:33Z"}, "message": "re PR target/39118 (x86_64 red zone violation)\n\n\tPR target/39118\n\t* config/i386/i386.c (expand_prologue): Emit blockage at the end\n\tof function prologue when frame pointer is used to access\n\tred zone area.\n\nFrom-SVN: r144063", "tree": {"sha": "d4318d96c3482ad5e4acd7f98bdb8877e1a261cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4318d96c3482ad5e4acd7f98bdb8877e1a261cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbf9ee15b8b1863086ac94c0e2657cd911655880", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbf9ee15b8b1863086ac94c0e2657cd911655880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbf9ee15b8b1863086ac94c0e2657cd911655880", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbf9ee15b8b1863086ac94c0e2657cd911655880/comments", "author": null, "committer": null, "parents": [{"sha": "f76f0eddf772c92278132b85d2a440157b2e7181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f76f0eddf772c92278132b85d2a440157b2e7181", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f76f0eddf772c92278132b85d2a440157b2e7181"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "c85a25697fbadcf12335cf60a28fc36803a9af23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf9ee15b8b1863086ac94c0e2657cd911655880/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf9ee15b8b1863086ac94c0e2657cd911655880/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbf9ee15b8b1863086ac94c0e2657cd911655880", "patch": "@@ -1,3 +1,10 @@\n+2009-02-10  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/39118\n+\t* config/i386/i386.c (expand_prologue): Emit blockage at the end\n+\tof function prologue when frame pointer is used to access\n+\tred zone area.\n+\n 2009-02-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/39127\n@@ -100,8 +107,7 @@\n \n 2009-02-06  Nick Clifton  <nickc@redhat.com>\n \n-\t* config/m32c/m32c.h (PCC_BITFIELD_TYPE_MATTERS): Define to\n-\tzero.\n+\t* config/m32c/m32c.h (PCC_BITFIELD_TYPE_MATTERS): Define to zero.\n \n 2009-02-06  Paolo Bonzini  <bonzini@gnu.org>\n \n@@ -249,7 +255,7 @@\n \n 2009-02-02  Catherine Moore  <clm@codesourcery.com>\n \n-\t* sde.h (SUBTARGET_ARM_SPEC): Don;t assemble -fpic code as -mabicalls.\n+\t* sde.h (SUBTARGET_ARM_SPEC): Don't assemble -fpic code as -mabicalls.\n \n 2009-02-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n@@ -444,8 +450,7 @@\n \n \t* regclass.c: Rename reginfo.c.  Change file description.\n \t(FORBIDDEN_INC_DEC_CLASSES): Remove.\n-\t(reg_class_superclasses, forbidden_inc_dec_class, in_inc_dec):\n-\tRemove.\n+\t(reg_class_superclasses, forbidden_inc_dec_class, in_inc_dec): Remove.\n \t(init_reg_sets_1): Remove code for evaluation of\n \treg_class_superclasses and losing_caller_save_reg_set.\n \t(init_regs): Remove init_reg_autoinc.\n@@ -579,8 +584,7 @@\n 2009-01-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/38740\n-\t* reorg.c (gate_handle_delay_slots): Avoid dbr scheduling\n-\tif !optimize.\n+\t* reorg.c (gate_handle_delay_slots): Avoid dbr scheduling if !optimize.\n \t* config/mips/mips.c (mips_reorg): Likewise.\n \n 2009-01-28  Richard Guenther  <rguenther@suse.de>"}, {"sha": "e64bcc655754671e1cce87b120cac7eba52b0f97", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf9ee15b8b1863086ac94c0e2657cd911655880/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf9ee15b8b1863086ac94c0e2657cd911655880/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=dbf9ee15b8b1863086ac94c0e2657cd911655880", "patch": "@@ -7997,6 +7997,7 @@ ix86_expand_prologue (void)\n {\n   rtx insn;\n   bool pic_reg_used;\n+  bool emit_blockage = false;\n   struct ix86_frame frame;\n   HOST_WIDE_INT allocate;\n \n@@ -8214,7 +8215,7 @@ ix86_expand_prologue (void)\n     {\n       if (pic_reg_used)\n \temit_insn (gen_prologue_use (pic_offset_table_rtx));\n-      emit_insn (gen_blockage ());\n+      emit_blockage = true;\n     }\n \n   if (crtl->drap_reg && !crtl->stack_realign_needed)\n@@ -8227,6 +8228,18 @@ ix86_expand_prologue (void)\n       insn = emit_insn (gen_rtx_SET (VOIDmode, crtl->drap_reg, x));\n     }\n \n+  /* Prevent instructions from being scheduled into register save push\n+     sequence when access to the redzone area is done through frame pointer.\n+     The offset betweeh the frame pointer and the stack pointer is calculated\n+     relative to the value of the stack pointer at the end of the function\n+     prologue, and moving instructions that access redzone area via frame\n+     pointer inside push sequence violates this assumption.  */\n+  if (frame_pointer_needed && frame.red_zone_size)\n+    emit_blockage = true;\n+\n+  if (emit_blockage)\n+    emit_insn (gen_blockage ()); \n+\n   /* Emit cld instruction if stringops are used in the function.  */\n   if (TARGET_CLD && ix86_current_function_needs_cld)\n     emit_insn (gen_cld ());"}]}