{"sha": "c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzViMWU4ZTlhNTgwOGQ2MTJhZDIwZmRmMmY3N2M1MmNmYTU5MDdkMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2021-05-25T08:18:21Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-08T13:34:17Z"}, "message": "[Ada] Make runtime code compatible with No_Dynamic_Accessibility_Checks\n\ngcc/ada/\n\n\t* libgnat/a-cbdlli.adb, libgnat/a-cbhama.adb,\n\tlibgnat/a-cbhase.adb, libgnat/a-cbmutr.adb,\n\tlibgnat/a-cborma.adb, libgnat/a-cborse.adb,\n\tlibgnat/a-cobove.adb, libgnat/a-textio.adb,\n\tlibgnat/a-witeio.adb, libgnat/a-ztexio.adb: Make code compatible\n\twith No_Dynamic_Accessibility_Checks restriction.", "tree": {"sha": "a1772da6d631e0f11e36b82a33329458c5dc0272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1772da6d631e0f11e36b82a33329458c5dc0272"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2f91a52b4b989b52f0ccdabc2d9aead05c8056b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f91a52b4b989b52f0ccdabc2d9aead05c8056b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2f91a52b4b989b52f0ccdabc2d9aead05c8056b"}], "stats": {"total": 83, "additions": 40, "deletions": 43}, "files": [{"sha": "143805ef2b66398f6f59644cd9f501ddb3e54718", "filename": "gcc/ada/libgnat/a-cbdlli.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb?ref=c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "patch": "@@ -312,7 +312,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Constant_Reference_Type :=\n-           (Element => N.Element'Access,\n+           (Element => N.Element'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -1608,7 +1608,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Reference_Type :=\n-           (Element => N.Element'Access,\n+           (Element => N.Element'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);"}, {"sha": "26c01f57e65195c2da7651cbba685b057da95b9d", "filename": "gcc/ada/libgnat/a-cbhama.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cbhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cbhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhama.adb?ref=c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "patch": "@@ -213,7 +213,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Constant_Reference_Type :=\n-           (Element => N.Element'Access,\n+           (Element => N.Element'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -239,7 +239,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Constant_Reference_Type :=\n-           (Element => N.Element'Access,\n+           (Element => N.Element'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -1028,7 +1028,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Reference_Type :=\n-           (Element => N.Element'Access,\n+           (Element => N.Element'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -1053,7 +1053,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Reference_Type :=\n-           (Element => N.Element'Access,\n+           (Element => N.Element'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);"}, {"sha": "d6ab353b15d7e211b15a4ac6f71eba6c3eb302c5", "filename": "gcc/ada/libgnat/a-cbhase.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb?ref=c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "patch": "@@ -232,7 +232,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Constant_Reference_Type :=\n-           (Element => N.Element'Access,\n+           (Element => N.Element'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -1643,7 +1643,7 @@ is\n               Container.TC'Unrestricted_Access;\n          begin\n             return R : constant Constant_Reference_Type :=\n-              (Element => N.Element'Access,\n+              (Element => N.Element'Unchecked_Access,\n                Control => (Controlled with TC))\n             do\n                Busy (TC.all);"}, {"sha": "e80eb5cdc0f265281ed1a4f3a6149d69654cc541", "filename": "gcc/ada/libgnat/a-cbmutr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cbmutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cbmutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbmutr.adb?ref=c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "patch": "@@ -600,7 +600,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Constant_Reference_Type :=\n-           (Element => Container.Elements (Position.Node)'Access,\n+           (Element => Container.Elements (Position.Node)'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -2533,7 +2533,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Reference_Type :=\n-           (Element => Container.Elements (Position.Node)'Access,\n+           (Element => Container.Elements (Position.Node)'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);"}, {"sha": "f26a1e38f6ef9abe94628a54d6b757782ab387fb", "filename": "gcc/ada/libgnat/a-cborma.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cborma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cborma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cborma.adb?ref=c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "patch": "@@ -420,7 +420,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Constant_Reference_Type :=\n-           (Element => N.Element'Access,\n+           (Element => N.Element'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -445,7 +445,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Constant_Reference_Type :=\n-           (Element => N.Element'Access,\n+           (Element => N.Element'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -1417,7 +1417,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Reference_Type :=\n-           (Element => N.Element'Access,\n+           (Element => N.Element'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -1442,7 +1442,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Reference_Type :=\n-           (Element => N.Element'Access,\n+           (Element => N.Element'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);"}, {"sha": "5c9a86e2e72fce93ee9ec5f9617f2976848609a3", "filename": "gcc/ada/libgnat/a-cborse.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cborse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cborse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cborse.adb?ref=c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "patch": "@@ -420,7 +420,7 @@ is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Constant_Reference_Type :=\n-           (Element => N.Element'Access,\n+           (Element => N.Element'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -752,7 +752,7 @@ is\n               Container.TC'Unrestricted_Access;\n          begin\n             return R : constant Constant_Reference_Type :=\n-              (Element => N.Element'Access,\n+              (Element => N.Element'Unchecked_Access,\n                Control => (Controlled with TC))\n             do\n                Busy (TC.all);\n@@ -943,7 +943,7 @@ is\n             N : Node_Type renames Container.Nodes (Position.Node);\n          begin\n             return R : constant Reference_Type :=\n-                         (Element => N.Element'Access,\n+                         (Element => N.Element'Unchecked_Access,\n                           Control =>\n                             (Controlled with\n                               Container.TC'Unrestricted_Access,\n@@ -971,7 +971,7 @@ is\n             N : Node_Type renames Container.Nodes (Node);\n          begin\n             return R : constant Reference_Type :=\n-                         (Element => N.Element'Access,\n+                         (Element => N.Element'Unchecked_Access,\n                           Control =>\n                             (Controlled with\n                               Container.TC'Unrestricted_Access,"}, {"sha": "e56cb94610e15638e597c8ba42b00e01d8f7864d", "filename": "gcc/ada/libgnat/a-cobove.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cobove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-cobove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cobove.adb?ref=c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "patch": "@@ -415,7 +415,7 @@ package body Ada.Containers.Bounded_Vectors is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Constant_Reference_Type :=\n-           (Element => A (J)'Access,\n+           (Element => A (J)'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -439,7 +439,7 @@ package body Ada.Containers.Bounded_Vectors is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Constant_Reference_Type :=\n-           (Element => A (J)'Access,\n+           (Element => A (J)'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -2238,7 +2238,7 @@ package body Ada.Containers.Bounded_Vectors is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Reference_Type :=\n-           (Element => A (J)'Access,\n+           (Element => A (J)'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);\n@@ -2262,7 +2262,7 @@ package body Ada.Containers.Bounded_Vectors is\n            Container.TC'Unrestricted_Access;\n       begin\n          return R : constant Reference_Type :=\n-           (Element => A (J)'Access,\n+           (Element => A (J)'Unchecked_Access,\n             Control => (Controlled with TC))\n          do\n             Busy (TC.all);"}, {"sha": "717f529a7bb54abae74c3eb59a9bc1ed5aa855dc", "filename": "gcc/ada/libgnat/a-textio.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-textio.adb?ref=c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "patch": "@@ -171,26 +171,25 @@ is\n       --  is required (RM A.10.3(23)) but it seems reasonable, and besides\n       --  ACVC test CE3208A expects this behavior.\n \n-      if File_Type (File) = Current_In then\n+      if File = Current_In then\n          Current_In := null;\n-      elsif File_Type (File) = Current_Out then\n+      elsif File = Current_Out then\n          Current_Out := null;\n-      elsif File_Type (File) = Current_Err then\n+      elsif File = Current_Err then\n          Current_Err := null;\n       end if;\n \n-      Terminate_Line (File_Type (File));\n+      Terminate_Line (File.all'Access);\n    end AFCB_Close;\n \n    ---------------\n    -- AFCB_Free --\n    ---------------\n \n    procedure AFCB_Free (File : not null access Text_AFCB) is\n-      type FCB_Ptr is access all Text_AFCB;\n-      FT : FCB_Ptr := FCB_Ptr (File);\n+      FT : File_Type := File.all'Access;\n \n-      procedure Free is new Ada.Unchecked_Deallocation (Text_AFCB, FCB_Ptr);\n+      procedure Free is new Ada.Unchecked_Deallocation (Text_AFCB, File_Type);\n \n    begin\n       Free (FT);"}, {"sha": "7dbd3b3ebc5f8d65bbceb628ef4efe9f2a894fe1", "filename": "gcc/ada/libgnat/a-witeio.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-witeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-witeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-witeio.adb?ref=c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "patch": "@@ -136,27 +136,26 @@ package body Ada.Wide_Text_IO is\n       --  is required (RM A.10.3(23)) but it seems reasonable, and besides\n       --  ACVC test CE3208A expects this behavior.\n \n-      if File_Type (File) = Current_In then\n+      if File = Current_In then\n          Current_In := null;\n-      elsif File_Type (File) = Current_Out then\n+      elsif File = Current_Out then\n          Current_Out := null;\n-      elsif File_Type (File) = Current_Err then\n+      elsif File = Current_Err then\n          Current_Err := null;\n       end if;\n \n-      Terminate_Line (File_Type (File));\n+      Terminate_Line (File.all'Access);\n    end AFCB_Close;\n \n    ---------------\n    -- AFCB_Free --\n    ---------------\n \n    procedure AFCB_Free (File : not null access Wide_Text_AFCB) is\n-      type FCB_Ptr is access all Wide_Text_AFCB;\n-      FT : FCB_Ptr := FCB_Ptr (File);\n+      FT : File_Type := File.all'Access;\n \n       procedure Free is\n-        new Ada.Unchecked_Deallocation (Wide_Text_AFCB, FCB_Ptr);\n+        new Ada.Unchecked_Deallocation (Wide_Text_AFCB, File_Type);\n \n    begin\n       Free (FT);"}, {"sha": "71d733ed538a18d817b6f21bb5343f3fd01ad841", "filename": "gcc/ada/libgnat/a-ztexio.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-ztexio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3/gcc%2Fada%2Flibgnat%2Fa-ztexio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztexio.adb?ref=c5b1e8e9a5808d612ad20fdf2f77c52cfa5907d3", "patch": "@@ -136,27 +136,26 @@ package body Ada.Wide_Wide_Text_IO is\n       --  is required (RM A.10.3(23)) but it seems reasonable, and besides\n       --  ACVC test CE3208A expects this behavior.\n \n-      if File_Type (File) = Current_In then\n+      if File = Current_In then\n          Current_In := null;\n-      elsif File_Type (File) = Current_Out then\n+      elsif File = Current_Out then\n          Current_Out := null;\n-      elsif File_Type (File) = Current_Err then\n+      elsif File = Current_Err then\n          Current_Err := null;\n       end if;\n \n-      Terminate_Line (File_Type (File));\n+      Terminate_Line (File.all'Access);\n    end AFCB_Close;\n \n    ---------------\n    -- AFCB_Free --\n    ---------------\n \n    procedure AFCB_Free (File : not null access Wide_Wide_Text_AFCB) is\n-      type FCB_Ptr is access all Wide_Wide_Text_AFCB;\n-      FT : FCB_Ptr := FCB_Ptr (File);\n+      FT : File_Type := File.all'Access;\n \n       procedure Free is new\n-        Ada.Unchecked_Deallocation (Wide_Wide_Text_AFCB, FCB_Ptr);\n+        Ada.Unchecked_Deallocation (Wide_Wide_Text_AFCB, File_Type);\n \n    begin\n       Free (FT);"}]}