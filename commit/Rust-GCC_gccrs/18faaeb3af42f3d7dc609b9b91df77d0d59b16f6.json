{"sha": "18faaeb3af42f3d7dc609b9b91df77d0d59b16f6", "node_id": "C_kwDOANBUbNoAKDE4ZmFhZWIzYWY0MmYzZDdkYzYwOWI5YjkxZGY3N2QwZDU5YjE2ZjY", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-10-24T20:38:23Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-10-24T20:38:23Z"}, "message": "analyzer: handle (NULL == &VAR) [PR107345]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/107345\n\t* region-model.cc (region_model::eval_condition_without_cm):\n\tEnsure that constants are on the right-hand side before checking\n\tfor them.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/107345\n\t* gcc.dg/analyzer/pr107345.c: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "02832e9ec60981b631d1c28fe1f6486c02d948f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02832e9ec60981b631d1c28fe1f6486c02d948f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18faaeb3af42f3d7dc609b9b91df77d0d59b16f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18faaeb3af42f3d7dc609b9b91df77d0d59b16f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18faaeb3af42f3d7dc609b9b91df77d0d59b16f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18faaeb3af42f3d7dc609b9b91df77d0d59b16f6/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53881c47e4b3574e2cb2046a6cb154c87a9836b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53881c47e4b3574e2cb2046a6cb154c87a9836b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53881c47e4b3574e2cb2046a6cb154c87a9836b6"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "7c44fc9e25302b7452b1471e4e5c17fb03d67f2a", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18faaeb3af42f3d7dc609b9b91df77d0d59b16f6/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18faaeb3af42f3d7dc609b9b91df77d0d59b16f6/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=18faaeb3af42f3d7dc609b9b91df77d0d59b16f6", "patch": "@@ -4212,10 +4212,19 @@ region_model::eval_condition_without_cm (const svalue *lhs,\n \t/* Otherwise, only known through constraints.  */\n       }\n \n-  /* If we have a pair of constants, compare them.  */\n   if (const constant_svalue *cst_lhs = lhs->dyn_cast_constant_svalue ())\n-    if (const constant_svalue *cst_rhs = rhs->dyn_cast_constant_svalue ())\n-      return constant_svalue::eval_condition (cst_lhs, op, cst_rhs);\n+    {\n+      /* If we have a pair of constants, compare them.  */\n+      if (const constant_svalue *cst_rhs = rhs->dyn_cast_constant_svalue ())\n+\treturn constant_svalue::eval_condition (cst_lhs, op, cst_rhs);\n+      else\n+\t{\n+\t  /* When we have one constant, put it on the RHS.  */\n+\t  std::swap (lhs, rhs);\n+\t  op = swap_tree_comparison (op);\n+\t}\n+    }\n+  gcc_assert (lhs->get_kind () != SK_CONSTANT);\n \n   /* Handle comparison against zero.  */\n   if (const constant_svalue *cst_rhs = rhs->dyn_cast_constant_svalue ())"}, {"sha": "540596d1182b92e47a32abe5d6c67412ae47f55c", "filename": "gcc/testsuite/gcc.dg/analyzer/pr107345.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18faaeb3af42f3d7dc609b9b91df77d0d59b16f6/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr107345.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18faaeb3af42f3d7dc609b9b91df77d0d59b16f6/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr107345.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr107345.c?ref=18faaeb3af42f3d7dc609b9b91df77d0d59b16f6", "patch": "@@ -0,0 +1,17 @@\n+/* Ensure the analyzer treats (NULL == &e) as being false for this case,\n+   where the logic is sufficiently complicated to not be optimized away.  */\n+\n+#include <stdio.h>\n+\n+int main() {   \n+  int e = 10086;\n+  int *f = &e;\n+  int g = 0;\n+  int *h[2][1];\n+  h[1][0] = f;\n+  if (g == (h[1][0])) { /* { dg-warning \"comparison between pointer and integer\" } */\n+    unsigned int *i = 0;\n+  }\n+  printf(\"NPD_FLAG: %d\\n \", *f);\n+  return 0;\n+}"}]}