{"sha": "096228d84e9238d97fe115623126373f5b67bdc1", "node_id": "C_kwDOANBUbNoAKDA5NjIyOGQ4NGU5MjM4ZDk3ZmUxMTU2MjMxMjYzNzNmNWI2N2JkYzE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-22T12:56:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-05T14:17:51Z"}, "message": "libstdc++: Improvements to standard error category objects (part deux)\n\nIn r12-3860 the error categories in <system_error> were made final and\nimmortal, but I missed the categories for <future> and <ios>. This makes\nthe same changes to those.\n\nlibstdc++-v3/ChangeLog:\n\n\t* src/c++11/cxx11-ios_failure.cc (io_error_category): Define\n\tclass and virtual functions as 'final'.\n\t(io_category_instance): Use constinit union to make the object\n\timmortal.\n\t* src/c++11/future.cc (future_error_category): Define class and\n\tvirtual functions as 'final'.\n\t(future_category_instance): Use constinit union.", "tree": {"sha": "1218ee5dd02f2ca0f02625d63dc2ed053fa9366d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1218ee5dd02f2ca0f02625d63dc2ed053fa9366d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/096228d84e9238d97fe115623126373f5b67bdc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/096228d84e9238d97fe115623126373f5b67bdc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/096228d84e9238d97fe115623126373f5b67bdc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/096228d84e9238d97fe115623126373f5b67bdc1/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1918067e2d0d79ccaf1e4ed98096060fc235e772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1918067e2d0d79ccaf1e4ed98096060fc235e772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1918067e2d0d79ccaf1e4ed98096060fc235e772"}], "stats": {"total": 51, "additions": 31, "deletions": 20}, "files": [{"sha": "ba4b1413bf9ca7ad606067cebab5f471e966d8ed", "filename": "libstdc++-v3/src/c++11/cxx11-ios_failure.cc", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096228d84e9238d97fe115623126373f5b67bdc1/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcxx11-ios_failure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096228d84e9238d97fe115623126373f5b67bdc1/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcxx11-ios_failure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcxx11-ios_failure.cc?ref=096228d84e9238d97fe115623126373f5b67bdc1", "patch": "@@ -44,14 +44,15 @@\n \n namespace\n {\n-  struct io_error_category : std::error_category\n+  struct io_error_category final : std::error_category\n   {\n-    virtual const char*\n-    name() const noexcept\n+    const char*\n+    name() const noexcept final\n     { return \"iostream\"; }\n \n     _GLIBCXX_DEFAULT_ABI_TAG\n-    virtual std::string message(int __ec) const\n+    std::string\n+    message(int __ec) const final\n     {\n       std::string __msg;\n       switch (std::io_errc(__ec))\n@@ -67,13 +68,17 @@ namespace\n     }\n   };\n \n-  const io_error_category&\n-  __io_category_instance() noexcept\n+  struct constant_init\n   {\n-    static const io_error_category __ec{};\n-    return __ec;\n-  }\n+    union {\n+      unsigned char unused;\n+      io_error_category cat;\n+    };\n+    constexpr constant_init() : cat() { }\n+    ~constant_init() { /* do nothing, union member is not destroyed */ }\n+  };\n \n+  __constinit constant_init io_category_instance{};\n } // namespace\n \n namespace std _GLIBCXX_VISIBILITY(default)\n@@ -82,7 +87,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   const error_category&\n   iostream_category() noexcept\n-  { return __io_category_instance(); }\n+  { return io_category_instance.cat; }\n \n   ios_base::failure::failure(const string& __str)\n   : system_error(io_errc::stream, __str) { }"}, {"sha": "488ff17a1e6f92dc32d0071e936fb8217cb71cfc", "filename": "libstdc++-v3/src/c++11/future.cc", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096228d84e9238d97fe115623126373f5b67bdc1/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096228d84e9238d97fe115623126373f5b67bdc1/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc?ref=096228d84e9238d97fe115623126373f5b67bdc1", "patch": "@@ -27,14 +27,15 @@\n \n namespace\n {\n-  struct future_error_category : public std::error_category\n+  struct future_error_category final : public std::error_category\n   {\n-    virtual const char*\n-    name() const noexcept\n+    const char*\n+    name() const noexcept final\n     { return \"future\"; }\n \n     _GLIBCXX_DEFAULT_ABI_TAG\n-    virtual std::string message(int __ec) const\n+    std::string\n+    message(int __ec) const final\n     {\n       std::string __msg;\n       switch (std::future_errc(__ec))\n@@ -59,12 +60,17 @@ namespace\n     }\n   };\n \n-  const future_error_category&\n-  __future_category_instance() noexcept\n+  struct constant_init\n   {\n-    static const future_error_category __fec{};\n-    return __fec;\n-  }\n+    union {\n+      unsigned char unused;\n+      future_error_category cat;\n+    };\n+    constexpr constant_init() : cat() { }\n+    ~constant_init() { /* do nothing, union member is not destroyed */ }\n+  };\n+\n+  __constinit constant_init future_category_instance{};\n }\n \n namespace std _GLIBCXX_VISIBILITY(default)\n@@ -76,7 +82,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   { _GLIBCXX_THROW_OR_ABORT(future_error(make_error_code(future_errc(__i)))); }\n \n   const error_category& future_category() noexcept\n-  { return __future_category_instance(); }\n+  { return future_category_instance.cat; }\n \n   future_error::~future_error() noexcept { }\n "}]}