{"sha": "3b833dcda53c814695ce250f91ae769d20962d75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I4MzNkY2RhNTNjODE0Njk1Y2UyNTBmOTFhZTc2OWQyMDk2MmQ3NQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-07-21T11:46:43Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-07-21T11:46:43Z"}, "message": "re PR fortran/57894 (min/max required actual argument missing)\n\n2013-07-21  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57894\n        * check.c (min_max_args): Add keyword= check.\n\n2013-07-21  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57894\n        * gfortran.dg/min_max_conformance_2.f90: New.\n\nFrom-SVN: r201092", "tree": {"sha": "5a6818c2c68cdfff542a803eb6343f5fc8df1b24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a6818c2c68cdfff542a803eb6343f5fc8df1b24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b833dcda53c814695ce250f91ae769d20962d75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b833dcda53c814695ce250f91ae769d20962d75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b833dcda53c814695ce250f91ae769d20962d75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b833dcda53c814695ce250f91ae769d20962d75/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8cf887352b795b59e9666513f8c8ca0c0908a38c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cf887352b795b59e9666513f8c8ca0c0908a38c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cf887352b795b59e9666513f8c8ca0c0908a38c"}], "stats": {"total": 108, "additions": 105, "deletions": 3}, "files": [{"sha": "3e4ecb8e74a0f2e0b91dd092af54edf6abcfaf50", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b833dcda53c814695ce250f91ae769d20962d75/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b833dcda53c814695ce250f91ae769d20962d75/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3b833dcda53c814695ce250f91ae769d20962d75", "patch": "@@ -1,3 +1,8 @@\n+2013-07-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57894\n+\t* check.c (min_max_args): Add keyword= check.\n+\n 2013-07-17  Mikael Morin  <mikael@gcc.gnu.org>\n \t    Tobias Burnus  <burnus@net-b.de>\n "}, {"sha": "884dc43b1254208d63c19f3bf42496dd986736c4", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 71, "deletions": 3, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b833dcda53c814695ce250f91ae769d20962d75/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b833dcda53c814695ce250f91ae769d20962d75/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=3b833dcda53c814695ce250f91ae769d20962d75", "patch": "@@ -2328,24 +2328,92 @@ gfc_check_logical (gfc_expr *a, gfc_expr *kind)\n /* Min/max family.  */\n \n static bool\n-min_max_args (gfc_actual_arglist *arg)\n+min_max_args (gfc_actual_arglist *args)\n {\n-  if (arg == NULL || arg->next == NULL)\n+  gfc_actual_arglist *arg;\n+  int i, j, nargs, *nlabels, nlabelless;\n+  bool a1 = false, a2 = false;\n+\n+  if (args == NULL || args->next == NULL)\n     {\n       gfc_error (\"Intrinsic '%s' at %L must have at least two arguments\",\n \t\t gfc_current_intrinsic, gfc_current_intrinsic_where);\n       return false;\n     }\n \n+  if (!args->name)\n+    a1 = true;\n+\n+  if (!args->next->name)\n+    a2 = true;\n+\n+  nargs = 0;\n+  for (arg = args; arg; arg = arg->next)\n+    if (arg->name)\n+      nargs++;\n+\n+  if (nargs == 0)\n+    return true;\n+\n+  /* Note: Having a keywordless argument after an \"arg=\" is checked before.  */\n+  nlabelless = 0;\n+  nlabels = XALLOCAVEC (int, nargs);\n+  for (arg = args, i = 0; arg; arg = arg->next, i++)\n+    if (arg->name)\n+      {\n+\tint n;\n+\tchar *endp;\n+\n+\tif (arg->name[0] != 'a' || arg->name[1] < '1' || arg->name[1] > '9')\n+\t  goto unknown;\n+\tn = strtol (&arg->name[1], &endp, 10);\n+\tif (endp[0] != '\\0')\n+\t  goto unknown;\n+\tif (n <= 0)\n+\t  goto unknown;\n+\tif (n <= nlabelless)\n+\t  goto duplicate;\n+\tnlabels[i] = n;\n+\tif (n == 1)\n+\t  a1 = true;\n+\tif (n == 2)\n+\t  a2 = true;\n+      }\n+    else\n+      nlabelless++;\n+\n+  if (!a1 || !a2)\n+    {\n+      gfc_error (\"Missing '%s' argument to the %s intrinsic at %L\",\n+\t         !a1 ? \"a1\" : \"a2\", gfc_current_intrinsic,\n+\t\t gfc_current_intrinsic_where);\n+      return false;\n+    }\n+\n+  /* Check for duplicates.  */\n+  for (i = 0; i < nargs; i++)\n+    for (j = i + 1; j < nargs; j++)\n+      if (nlabels[i] == nlabels[j])\n+\tgoto duplicate;\n+\n   return true;\n+\n+duplicate:\n+  gfc_error (\"Duplicate argument '%s' at %L to intrinsic %s\", arg->name,\n+\t     &arg->expr->where, gfc_current_intrinsic);\n+  return false;\n+\n+unknown:\n+  gfc_error (\"Unknown argument '%s' at %L to intrinsic %s\", arg->name,\n+\t     &arg->expr->where, gfc_current_intrinsic);\n+  return false;\n }\n \n \n static bool\n check_rest (bt type, int kind, gfc_actual_arglist *arglist)\n {\n   gfc_actual_arglist *arg, *tmp;\n-\n   gfc_expr *x;\n   int m, n;\n "}, {"sha": "ad1d2749146c93af292808fe091e764a4fa9a3df", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b833dcda53c814695ce250f91ae769d20962d75/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b833dcda53c814695ce250f91ae769d20962d75/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3b833dcda53c814695ce250f91ae769d20962d75", "patch": "@@ -1,3 +1,8 @@\n+2013-07-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57894\n+\t* gfortran.dg/min_max_conformance_2.f90: New.\n+\n 2013-07-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR preprocessor/57620"}, {"sha": "085206c492efc0617db93459d26d6adf076e3705", "filename": "gcc/testsuite/gfortran.dg/min_max_conformance_2.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b833dcda53c814695ce250f91ae769d20962d75/gcc%2Ftestsuite%2Fgfortran.dg%2Fmin_max_conformance_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b833dcda53c814695ce250f91ae769d20962d75/gcc%2Ftestsuite%2Fgfortran.dg%2Fmin_max_conformance_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmin_max_conformance_2.f90?ref=3b833dcda53c814695ce250f91ae769d20962d75", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+!\n+! PR fortran/57894\n+!\n+! Contributed by Vittorio Zecca\n+!\n+print *, max(a2=2,a65=45,a2=5)         ! { dg-error \"has already appeared in the current argument list\" }\n+print *, min(a1=2.0,a65=45.0,a2=5.0e0) ! OK\n+print *, max(a2=2,a65=45,a3=5)         ! { dg-error \"Missing 'a1' argument to the max intrinsic\" }\n+print *, min(a1=2.0,a65=45.0,a3=5.0e0) ! { dg-error \"Missing 'a2' argument to the min intrinsic\" }\n+print *, min1(2.0,a1=45.0,a2=5.0e0) ! { dg-error \"Duplicate argument 'a1'\" }\n+\n+print *, max0(a1=2,a65a=45,a2=5)  ! { dg-error \"Unknown argument 'a65a'\" }\n+print *, amax0(a1=2,as65=45,a2=5) ! { dg-error \"Unknown argument 'as65'\" }\n+print *, max1(a1=2,a2=45,5)       ! { dg-error \"Missing keyword name in actual argument list\" }\n+print *, amax1(a1=2,a3=45,a4=5)   ! { dg-error \"Missing 'a2' argument\" }\n+print *, dmax1(a1=2,a2=45,a4z=5)  ! { dg-error \"Unknown argument 'a4z'\" }\n+\n+print *, min0(a1=2,a65a=45,a2=5)  ! { dg-error \"Unknown argument 'a65a'\" }\n+print *, amin0(a1=2,as65=45,a2=5) ! { dg-error \"Unknown argument 'as65'\" }\n+print *, min1(a1=2,a2=45,5)       ! { dg-error \"Missing keyword name in actual argument list\" }\n+print *, amin1(a1=2,a3=45,a4=5)   ! { dg-error \"Missing 'a2' argument\" }\n+print *, dmin1(a1=2,a2=45,a4z=5)  ! { dg-error \"Unknown argument 'a4z'\" }\n+end"}]}