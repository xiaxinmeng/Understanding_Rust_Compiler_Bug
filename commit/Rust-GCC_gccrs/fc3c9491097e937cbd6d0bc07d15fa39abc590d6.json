{"sha": "fc3c9491097e937cbd6d0bc07d15fa39abc590d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMzYzk0OTEwOTdlOTM3Y2JkNmQwYmMwN2QxNWZhMzlhYmM1OTBkNg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2011-10-20T17:04:53Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2011-10-20T17:04:53Z"}, "message": "2011-10-16  Steven G. Kargl<kargl@gcc.gnu.org>\n\n\t* io.c (match_dt_format): Match a user-defined operator or a kind\n\ttype prefixed string.\n\n2011-10-16  Steven G. Kargl<kargl@gcc.gnu.org>\n\n\t* gfortran.dg/format_string.f: New test.\n\nFrom-SVN: r180261", "tree": {"sha": "54f89e46f8abcee8c7d6e468834785423c36258a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54f89e46f8abcee8c7d6e468834785423c36258a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc3c9491097e937cbd6d0bc07d15fa39abc590d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc3c9491097e937cbd6d0bc07d15fa39abc590d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc3c9491097e937cbd6d0bc07d15fa39abc590d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc3c9491097e937cbd6d0bc07d15fa39abc590d6/comments", "author": null, "committer": null, "parents": [{"sha": "24685ae9c5884ce29dacd06ed3673ae57ed3b4df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24685ae9c5884ce29dacd06ed3673ae57ed3b4df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24685ae9c5884ce29dacd06ed3673ae57ed3b4df"}], "stats": {"total": 71, "additions": 63, "deletions": 8}, "files": [{"sha": "4bfcec4df45be1ca8196c634e7f401d266442100", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc3c9491097e937cbd6d0bc07d15fa39abc590d6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc3c9491097e937cbd6d0bc07d15fa39abc590d6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fc3c9491097e937cbd6d0bc07d15fa39abc590d6", "patch": "@@ -1,3 +1,8 @@\n+2011-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* io.c (match_dt_format): Match a user-defined operator or a kind\n+\ttype prefixed string.\n+\n 2011-10-19  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/47023"}, {"sha": "a291bb8b167ce876f6b0c90691ec36d6c5d4a1c2", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc3c9491097e937cbd6d0bc07d15fa39abc590d6/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc3c9491097e937cbd6d0bc07d15fa39abc590d6/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=fc3c9491097e937cbd6d0bc07d15fa39abc590d6", "patch": "@@ -2548,17 +2548,31 @@ match_dt_format (gfc_dt *dt)\n \n   if ((m = gfc_match_st_label (&label)) == MATCH_YES)\n     {\n-      if (dt->format_expr != NULL || dt->format_label != NULL)\n+      char c;\n+\n+      /* Need to check if the format label is actually either an operand\n+\t to a user-defined operator or is a kind type parameter.  That is,\n+\t print 2.ip.8      ! .ip. is a user-defined operator return CHARACTER.\n+\t print 1_'(I0)', i ! 1_'(I0)' is a default character string.  */\n+\n+      gfc_gobble_whitespace ();\n+      c = gfc_peek_ascii_char ();\n+      if (c == '.' || c == '_')\n+\tgfc_current_locus = where;\n+      else\n \t{\n-\t  gfc_free_st_label (label);\n-\t  goto conflict;\n-\t}\n+\t  if (dt->format_expr != NULL || dt->format_label != NULL)\n+\t    {\n+\t      gfc_free_st_label (label);\n+\t      goto conflict;\n+\t    }\n \n-      if (gfc_reference_st_label (label, ST_LABEL_FORMAT) == FAILURE)\n-\treturn MATCH_ERROR;\n+\t  if (gfc_reference_st_label (label, ST_LABEL_FORMAT) == FAILURE)\n+\t    return MATCH_ERROR;\n \n-      dt->format_label = label;\n-      return MATCH_YES;\n+\t  dt->format_label = label;\n+\t  return MATCH_YES;\n+\t}\n     }\n   else if (m == MATCH_ERROR)\n     /* The label was zero or too large.  Emit the correct diagnosis.  */"}, {"sha": "1e4f7efac592b31d63acbca46f79691a2ca675db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc3c9491097e937cbd6d0bc07d15fa39abc590d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc3c9491097e937cbd6d0bc07d15fa39abc590d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc3c9491097e937cbd6d0bc07d15fa39abc590d6", "patch": "@@ -1,3 +1,8 @@\n+2011-10-20  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* gfortran.dg/format_string.f: New test.\n+\n+\n 2011-10-20  Uros Bizjak  <ubizjak@gmail.com>\n \n        * gcc.dg/ipa/ipa-sra-2.c: Add dg-require-effective-target"}, {"sha": "ff0b5388ce92075523970648297d0a56fdb69e3b", "filename": "gcc/testsuite/gfortran.dg/format_string.f", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc3c9491097e937cbd6d0bc07d15fa39abc590d6/gcc%2Ftestsuite%2Fgfortran.dg%2Fformat_string.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc3c9491097e937cbd6d0bc07d15fa39abc590d6/gcc%2Ftestsuite%2Fgfortran.dg%2Fformat_string.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fformat_string.f?ref=fc3c9491097e937cbd6d0bc07d15fa39abc590d6", "patch": "@@ -0,0 +1,31 @@\n+c { dg-do compile }\n+c PR fortran/50407\n+c\n+      program bar\n+\n+      interface operator (.ip.)\n+        function mul (i1, i2)\n+          character(20) mul\n+          intent(in) :: i1,i2\n+        end function\n+      end interface\n+\n+      character(20) foo\n+      i=3\n+      j=4\n+      print 2.ip.8  ! compiles fine \n+      print i.ip.2  ! compiles fine \n+      print i.ip.j  ! compiles fine\n+      foo = 1_'(I0,I4.4)'\n+      print foo, i,j\n+      print 1_'(I0,1X,I4.4)', i, j\n+      end\n+\n+      function mul (i1, i2)\n+        character(20) mul\n+        intent(in) :: i1,i2\n+        integer prod\n+        prod=i1*i2\n+        write(mul,100) prod\n+100     format(\"('ok \",i2,\"')\")\n+      end function"}]}