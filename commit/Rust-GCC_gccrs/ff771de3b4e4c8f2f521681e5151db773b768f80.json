{"sha": "ff771de3b4e4c8f2f521681e5151db773b768f80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY3NzFkZTNiNGU0YzhmMmY1MjE2ODFlNTE1MWRiNzczYjc2OGY4MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-05-27T16:09:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-05-27T16:09:18Z"}, "message": "re PR bootstrap/66304 (Can't bootstrap on x86_64-linux-gnu with gcc 4.3.4)\n\n\tPR bootstrap/66304\nconfig/\n\t* warnings.m4 (ACX_PROG_CXX_WARNING_OPTS)\n\t(ACX_PROG_CXX_WARNINGS_ARE_ERRORS)\n\t(ACX_PROG_CXX_WARNING_ALMOST_PEDANTIC): New.\n\t(ACX_PROG_CC_WARNING_OPTS, ACX_PROG_CC_WARNING_ALMOST_PEDANTIC)\n\t(ACX_PROG_CC_WARNINGS_ARE_ERRORS): Push into C language context.\ngcc/\n\t* configure.ac: Use ACX_PROG_CXX_WARNING_OPTS,\n\tACX_PROG_CXX_WARNING_ALMOST_PEDANTIC, and\n\tACX_PROG_CXX_WARNINGS_ARE_ERRORS.\n\t* configure: Regenerate.\n\nFrom-SVN: r223763", "tree": {"sha": "05d7ac489617ef3b6147ce57359e4c828db60bc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05d7ac489617ef3b6147ce57359e4c828db60bc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff771de3b4e4c8f2f521681e5151db773b768f80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff771de3b4e4c8f2f521681e5151db773b768f80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff771de3b4e4c8f2f521681e5151db773b768f80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff771de3b4e4c8f2f521681e5151db773b768f80/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "650a202b472b02639e1ddaf424d69dd1ffaacd02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/650a202b472b02639e1ddaf424d69dd1ffaacd02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/650a202b472b02639e1ddaf424d69dd1ffaacd02"}], "stats": {"total": 286, "additions": 254, "deletions": 32}, "files": [{"sha": "8d55966bca5eaeb6b37c0caa4502879436e51ec5", "filename": "config/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff771de3b4e4c8f2f521681e5151db773b768f80/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff771de3b4e4c8f2f521681e5151db773b768f80/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=ff771de3b4e4c8f2f521681e5151db773b768f80", "patch": "@@ -1,3 +1,12 @@\n+2015-05-27  Jason Merrill  <jason@redhat.com>\n+\n+\tPR bootstrap/66304\n+\t* warnings.m4 (ACX_PROG_CXX_WARNING_OPTS)\n+\t(ACX_PROG_CXX_WARNINGS_ARE_ERRORS)\n+\t(ACX_PROG_CXX_WARNING_ALMOST_PEDANTIC): New.\n+\t(ACX_PROG_CC_WARNING_OPTS, ACX_PROG_CC_WARNING_ALMOST_PEDANTIC)\n+\t(ACX_PROG_CC_WARNINGS_ARE_ERRORS): Push into C language context.\n+\n 2015-05-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sjlj.m4: New file."}, {"sha": "b5a149af5a140152de9a13d0d7400e55f43b40ec", "filename": "config/warnings.m4", "status": "modified", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff771de3b4e4c8f2f521681e5151db773b768f80/config%2Fwarnings.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff771de3b4e4c8f2f521681e5151db773b768f80/config%2Fwarnings.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fwarnings.m4?ref=ff771de3b4e4c8f2f521681e5151db773b768f80", "patch": "@@ -23,6 +23,7 @@\n #   compiler accepts.\n AC_DEFUN([ACX_PROG_CC_WARNING_OPTS],\n [AC_REQUIRE([AC_PROG_CC])dnl\n+AC_LANG_PUSH(C)\n m4_pushdef([acx_Var], [m4_default([$2], [WARN_CFLAGS])])dnl\n AC_SUBST(acx_Var)dnl\n m4_expand_once([acx_Var=\n@@ -48,13 +49,15 @@ for real_option in $1; do\n done\n CFLAGS=\"$save_CFLAGS\"\n m4_popdef([acx_Var])dnl\n+AC_LANG_POP(C)\n ])# ACX_PROG_CC_WARNING_OPTS\n \n # ACX_PROG_CC_WARNING_ALMOST_PEDANTIC(WARNINGS, [VARIABLE = WARN_PEDANTIC])\n #   Append to VARIABLE \"-pedantic\" + the argument, if the compiler is GCC\n #   and accepts all of those options simultaneously, otherwise to nothing.\n AC_DEFUN([ACX_PROG_CC_WARNING_ALMOST_PEDANTIC],\n [AC_REQUIRE([AC_PROG_CC])dnl\n+AC_LANG_PUSH(C)\n m4_pushdef([acx_Var], [m4_default([$2], [WARN_PEDANTIC])])dnl\n AC_SUBST(acx_Var)dnl\n m4_expand_once([acx_Var=\n@@ -77,6 +80,7 @@ AS_IF([test AS_VAR_GET(acx_Pedantic) = yes],\n AS_VAR_POPDEF([acx_Pedantic])dnl\n m4_popdef([acx_Woptions])dnl\n m4_popdef([acx_Var])dnl\n+AC_LANG_POP(C)\n ])# ACX_PROG_CC_WARNING_ALMOST_PEDANTIC\n \n # ACX_PROG_CC_WARNINGS_ARE_ERRORS([x.y.z], [VARIABLE = WERROR])\n@@ -88,6 +92,7 @@ m4_popdef([acx_Var])dnl\n #   appeared on the configure command line.\n AC_DEFUN([ACX_PROG_CC_WARNINGS_ARE_ERRORS],\n [AC_REQUIRE([AC_PROG_CC])dnl\n+AC_LANG_PUSH(C)\n m4_pushdef([acx_Var], [m4_default([$2], [WERROR])])dnl\n AC_SUBST(acx_Var)dnl\n m4_expand_once([acx_Var=\n@@ -114,4 +119,109 @@ AS_IF([test $enable_werror_always = yes],\n        [acx_Var=\"$acx_Var${acx_Var:+ }-Werror\"])\n   AS_VAR_POPDEF([acx_GCCvers])])\n m4_popdef([acx_Var])dnl\n+AC_LANG_POP(C)\n ])# ACX_PROG_CC_WARNINGS_ARE_ERRORS\n+\n+# ACX_PROG_CXX_WARNING_OPTS(WARNINGS, [VARIABLE = WARN_CFLAGS)\n+#   Sets @VARIABLE@ to the subset of the given options which the\n+#   compiler accepts.\n+AC_DEFUN([ACX_PROG_CXX_WARNING_OPTS],\n+[AC_REQUIRE([AC_PROG_CXX])dnl\n+AC_LANG_PUSH(C++)\n+m4_pushdef([acx_Var], [m4_default([$2], [WARN_CXXFLAGS])])dnl\n+AC_SUBST(acx_Var)dnl\n+m4_expand_once([acx_Var=\n+],m4_quote(acx_Var=))dnl\n+save_CXXFLAGS=\"$CXXFLAGS\"\n+for real_option in $1; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr x$real_option : 'x-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n+  AS_VAR_PUSHDEF([acx_Woption], [acx_cv_prog_cc_warning_$option])\n+  AC_CACHE_CHECK([whether $CXX supports $option], acx_Woption,\n+    [CXXFLAGS=\"$option\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[])],\n+      [AS_VAR_SET(acx_Woption, yes)],\n+      [AS_VAR_SET(acx_Woption, no)])\n+  ])\n+  AS_IF([test AS_VAR_GET(acx_Woption) = yes],\n+        [acx_Var=\"$acx_Var${acx_Var:+ }$real_option\"])\n+  AS_VAR_POPDEF([acx_Woption])dnl\n+done\n+CXXFLAGS=\"$save_CXXFLAGS\"\n+m4_popdef([acx_Var])dnl\n+AC_LANG_POP(C++)\n+])# ACX_PROG_CXX_WARNING_OPTS\n+\n+# ACX_PROG_CXX_WARNING_ALMOST_PEDANTIC(WARNINGS, [VARIABLE = WARN_PEDANTIC])\n+#   Append to VARIABLE \"-pedantic\" + the argument, if the compiler is G++\n+#   and accepts all of those options simultaneously, otherwise to nothing.\n+AC_DEFUN([ACX_PROG_CXX_WARNING_ALMOST_PEDANTIC],\n+[AC_REQUIRE([AC_PROG_CXX])dnl\n+AC_LANG_PUSH(C++)\n+m4_pushdef([acx_Var], [m4_default([$2], [WARN_PEDANTIC])])dnl\n+AC_SUBST(acx_Var)dnl\n+m4_expand_once([acx_Var=\n+],m4_quote(acx_Var=))dnl\n+# Do the check with the no- prefix removed from the warning options\n+# since gcc silently accepts any -Wno-* option on purpose\n+m4_pushdef([acx_Woptions], [m4_bpatsubst([$1], [-Wno-], [-W])])dnl\n+AS_VAR_PUSHDEF([acx_Pedantic], [acx_cv_prog_cc_pedantic_]acx_Woptions)dnl\n+AS_IF([test \"$GXX\" = yes],\n+[AC_CACHE_CHECK([whether $CXX supports -pedantic ]acx_Woptions, acx_Pedantic,\n+[save_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"-pedantic acx_Woptions\"\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[])],\n+   [AS_VAR_SET(acx_Pedantic, yes)],\n+   [AS_VAR_SET(acx_Pedantic, no)])\n+CXXFLAGS=\"$save_CXXFLAGS\"])\n+AS_IF([test AS_VAR_GET(acx_Pedantic) = yes],\n+      [acx_Var=\"$acx_Var${acx_Var:+ }-pedantic $1\"])\n+])\n+AS_VAR_POPDEF([acx_Pedantic])dnl\n+m4_popdef([acx_Woptions])dnl\n+m4_popdef([acx_Var])dnl\n+AC_LANG_POP(C++)\n+])# ACX_PROG_CXX_WARNING_ALMOST_PEDANTIC\n+\n+# ACX_PROG_CXX_WARNINGS_ARE_ERRORS([x.y.z], [VARIABLE = WERROR])\n+#   sets @VARIABLE@ to \"-Werror\" if the compiler is G++ >=x.y.z, or if\n+#   --enable-werror-always was given on the command line, otherwise\n+#   to nothing.\n+#   If the argument is the word \"manual\" instead of a version number,\n+#   then @VARIABLE@ will be set to -Werror only if --enable-werror-always\n+#   appeared on the configure command line.\n+AC_DEFUN([ACX_PROG_CXX_WARNINGS_ARE_ERRORS],\n+[AC_REQUIRE([AC_PROG_CXX])dnl\n+AC_LANG_PUSH(C++)\n+m4_pushdef([acx_Var], [m4_default([$2], [WERROR])])dnl\n+AC_SUBST(acx_Var)dnl\n+m4_expand_once([acx_Var=\n+],m4_quote(acx_Var=))dnl\n+AC_ARG_ENABLE(werror-always,\n+    AS_HELP_STRING([--enable-werror-always],\n+\t\t   [enable -Werror despite compiler version]),\n+[], [enable_werror_always=no])\n+AS_IF([test $enable_werror_always = yes],\n+      [acx_Var=\"$acx_Var${acx_Var:+ }-Werror\"])\n+ m4_if($1, [manual],,\n+ [AS_VAR_PUSHDEF([acx_GXXvers], [acx_cv_prog_cxx_gxx_$1_or_newer])dnl\n+  AC_CACHE_CHECK([whether $CXX is G++ >=$1], acx_GXXvers,\n+    [set fnord `echo $1 | tr '.' ' '`\n+     shift\n+     AC_PREPROC_IFELSE(\n+[#if __GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__ \\\n+  < [$]1 * 10000 + [$]2 * 100 + [$]3\n+#error insufficient\n+#endif],\n+   [AS_VAR_SET(acx_GXXvers, yes)],\n+   [AS_VAR_SET(acx_GXXvers, no)])])\n+ AS_IF([test AS_VAR_GET(acx_GXXvers) = yes],\n+       [acx_Var=\"$acx_Var${acx_Var:+ }-Werror\"])\n+  AS_VAR_POPDEF([acx_GXXvers])])\n+m4_popdef([acx_Var])dnl\n+AC_LANG_POP(C++)\n+])# ACX_PROG_CXX_WARNINGS_ARE_ERRORS"}, {"sha": "2dc1f57fb3d3907a5f2e3e7c2c6c4599b7bc168f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff771de3b4e4c8f2f521681e5151db773b768f80/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff771de3b4e4c8f2f521681e5151db773b768f80/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff771de3b4e4c8f2f521681e5151db773b768f80", "patch": "@@ -1,3 +1,10 @@\n+2015-05-27  Jason Merrill  <jason@redhat.com>\n+\n+\tPR bootstrap/66304\n+\t* configure.ac: Use ACX_PROG_CXX_WARNING_OPTS,\n+\tACX_PROG_CXX_WARNING_ALMOST_PEDANTIC, and\n+\tACX_PROG_CXX_WARNINGS_ARE_ERRORS.\n+\n 2015-05-22 Aditya Kumar <hiraditya@msn.com>\n \n \t* auto-profile.c (afdo_calculate_branch_prob): Break once has_sample"}, {"sha": "f08c17f1bc2fe83aebdb26d5ba6878ce8ee93504", "filename": "gcc/configure", "status": "modified", "additions": 123, "deletions": 27, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff771de3b4e4c8f2f521681e5151db773b768f80/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff771de3b4e4c8f2f521681e5151db773b768f80/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=ff771de3b4e4c8f2f521681e5151db773b768f80", "patch": "@@ -6471,8 +6471,14 @@ if test $enable_build_format_warnings = no; then :\n else\n   wf_opt=\n fi\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n loose_warn=\n-save_CFLAGS=\"$CFLAGS\"\n+save_CXXFLAGS=\"$CXXFLAGS\"\n for real_option in -W -Wall -Wno-narrowing -Wwrite-strings -Wcast-qual $wf_opt; do\n   # Do the check with the no- prefix removed since gcc silently\n   # accepts any -Wno-* option on purpose\n@@ -6482,12 +6488,12 @@ for real_option in -W -Wall -Wno-narrowing -Wwrite-strings -Wcast-qual $wf_opt;\n   esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n-$as_echo_n \"checking whether $CC supports $option... \" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports $option\" >&5\n+$as_echo_n \"checking whether $CXX supports $option... \" >&6; }\n if { as_var=$as_acx_Woption; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n   $as_echo_n \"(cached) \" >&6\n else\n-  CFLAGS=\"$option\"\n+  CXXFLAGS=\"$option\"\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -6514,7 +6520,20 @@ $as_echo \"$ac_res\" >&6; }\n   loose_warn=\"$loose_warn${loose_warn:+ }$real_option\"\n fi\n   done\n-CFLAGS=\"$save_CFLAGS\"\n+CXXFLAGS=\"$save_CXXFLAGS\"\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n c_loose_warn=\n save_CFLAGS=\"$CFLAGS\"\n@@ -6544,7 +6563,7 @@ main ()\n   return 0;\n }\n _ACEOF\n-if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n   eval \"$as_acx_Woption=yes\"\n else\n   eval \"$as_acx_Woption=no\"\n@@ -6560,9 +6579,21 @@ $as_echo \"$ac_res\" >&6; }\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n strict_warn=\n-save_CFLAGS=\"$CFLAGS\"\n+save_CXXFLAGS=\"$CXXFLAGS\"\n for real_option in -Wmissing-format-attribute; do\n   # Do the check with the no- prefix removed since gcc silently\n   # accepts any -Wno-* option on purpose\n@@ -6572,12 +6603,12 @@ for real_option in -Wmissing-format-attribute; do\n   esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n-$as_echo_n \"checking whether $CC supports $option... \" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports $option\" >&5\n+$as_echo_n \"checking whether $CXX supports $option... \" >&6; }\n if { as_var=$as_acx_Woption; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n   $as_echo_n \"(cached) \" >&6\n else\n-  CFLAGS=\"$option\"\n+  CXXFLAGS=\"$option\"\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -6604,9 +6635,21 @@ $as_echo \"$ac_res\" >&6; }\n   strict_warn=\"$strict_warn${strict_warn:+ }$real_option\"\n fi\n   done\n-CFLAGS=\"$save_CFLAGS\"\n+CXXFLAGS=\"$save_CXXFLAGS\"\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n-save_CFLAGS=\"$CFLAGS\"\n+\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+save_CXXFLAGS=\"$CXXFLAGS\"\n for real_option in -Woverloaded-virtual; do\n   # Do the check with the no- prefix removed since gcc silently\n   # accepts any -Wno-* option on purpose\n@@ -6616,12 +6659,12 @@ for real_option in -Woverloaded-virtual; do\n   esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n-$as_echo_n \"checking whether $CC supports $option... \" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports $option\" >&5\n+$as_echo_n \"checking whether $CXX supports $option... \" >&6; }\n if { as_var=$as_acx_Woption; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n   $as_echo_n \"(cached) \" >&6\n else\n-  CFLAGS=\"$option\"\n+  CXXFLAGS=\"$option\"\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -6648,7 +6691,19 @@ $as_echo \"$ac_res\" >&6; }\n   strict_warn=\"$strict_warn${strict_warn:+ }$real_option\"\n fi\n   done\n-CFLAGS=\"$save_CFLAGS\"\n+CXXFLAGS=\"$save_CXXFLAGS\"\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n c_strict_warn=\n save_CFLAGS=\"$CFLAGS\"\n@@ -6678,7 +6733,7 @@ main ()\n   return 0;\n }\n _ACEOF\n-if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n   eval \"$as_acx_Woption=yes\"\n else\n   eval \"$as_acx_Woption=no\"\n@@ -6694,17 +6749,29 @@ $as_echo \"$ac_res\" >&6; }\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n # Do the check with the no- prefix removed from the warning options\n # since gcc silently accepts any -Wno-* option on purpose\n-if test \"$GCC\" = yes; then :\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -pedantic -Wlong-long -Wvariadic-macros -Woverlength-strings\" >&5\n-$as_echo_n \"checking whether $CC supports -pedantic -Wlong-long -Wvariadic-macros -Woverlength-strings... \" >&6; }\n+if test \"$GXX\" = yes; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports -pedantic -Wlong-long -Wvariadic-macros -Woverlength-strings\" >&5\n+$as_echo_n \"checking whether $CXX supports -pedantic -Wlong-long -Wvariadic-macros -Woverlength-strings... \" >&6; }\n if test \"${acx_cv_prog_cc_pedantic__Wlong_long__Wvariadic_macros__Woverlength_strings+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n-  save_CFLAGS=\"$CFLAGS\"\n-CFLAGS=\"-pedantic -Wlong-long -Wvariadic-macros -Woverlength-strings\"\n+  save_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"-pedantic -Wlong-long -Wvariadic-macros -Woverlength-strings\"\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -6722,7 +6789,7 @@ else\n   acx_cv_prog_cc_pedantic__Wlong_long__Wvariadic_macros__Woverlength_strings=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-CFLAGS=\"$save_CFLAGS\"\n+CXXFLAGS=\"$save_CXXFLAGS\"\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_prog_cc_pedantic__Wlong_long__Wvariadic_macros__Woverlength_strings\" >&5\n $as_echo \"$acx_cv_prog_cc_pedantic__Wlong_long__Wvariadic_macros__Woverlength_strings\" >&6; }\n@@ -6731,6 +6798,18 @@ if test $acx_cv_prog_cc_pedantic__Wlong_long__Wvariadic_macros__Woverlength_stri\n fi\n \n fi\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n # Check whether --enable-werror-always was given.\n if test \"${enable_werror_always+set}\" = set; then :\n@@ -6743,6 +6822,12 @@ if test $enable_werror_always = yes; then :\n   strict_warn=\"$strict_warn${strict_warn:+ }-Werror\"\n fi\n \n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n \n \n # The above macros do nothing if the compiler is not GCC.  However, the\n@@ -6758,6 +6843,12 @@ fi\n \n \n # Disable exceptions and RTTI if building with g++\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n noexception_flags=\n save_CFLAGS=\"$CFLAGS\"\n for real_option in -fno-exceptions -fno-rtti -fasynchronous-unwind-tables; do\n@@ -6786,7 +6877,7 @@ main ()\n   return 0;\n }\n _ACEOF\n-if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n   eval \"$as_acx_Woption=yes\"\n else\n   eval \"$as_acx_Woption=no\"\n@@ -6802,6 +6893,12 @@ $as_echo \"$ac_res\" >&6; }\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n \n \n # Enable expensive internal checks\n@@ -13883,7 +13980,6 @@ fi\n \n \n \n-\n \n \n # Check whether --enable-libtool-lock was given.\n@@ -18197,7 +18293,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18200 \"configure\"\n+#line 18296 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18303,7 +18399,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18306 \"configure\"\n+#line 18402 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "c76d06d9f82f72a8534684cec989cb871558b18f", "filename": "gcc/configure.ac", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff771de3b4e4c8f2f521681e5151db773b768f80/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff771de3b4e4c8f2f521681e5151db773b768f80/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=ff771de3b4e4c8f2f521681e5151db773b768f80", "patch": "@@ -368,21 +368,21 @@ AC_ARG_ENABLE(build-format-warnings,\n   [],[enable_build_format_warnings=yes])\n AS_IF([test $enable_build_format_warnings = no],\n       [wf_opt=-Wno-format],[wf_opt=])\n-ACX_PROG_CC_WARNING_OPTS(\n+ACX_PROG_CXX_WARNING_OPTS(\n \tm4_quote(m4_do([-W -Wall -Wno-narrowing -Wwrite-strings -Wcast-qual $wf_opt])), [loose_warn])\n ACX_PROG_CC_WARNING_OPTS(\n \tm4_quote(m4_do([-Wstrict-prototypes -Wmissing-prototypes])),\n \t[c_loose_warn])\n-ACX_PROG_CC_WARNING_OPTS(\n+ACX_PROG_CXX_WARNING_OPTS(\n \tm4_quote(m4_do([-Wmissing-format-attribute])), [strict_warn])\n-ACX_PROG_CC_WARNING_OPTS(\n+ACX_PROG_CXX_WARNING_OPTS(\n \tm4_quote(m4_do([-Woverloaded-virtual])), [strict_warn])\n ACX_PROG_CC_WARNING_OPTS(\n \tm4_quote(m4_do([-Wold-style-definition -Wc++-compat])), [c_strict_warn])\n-ACX_PROG_CC_WARNING_ALMOST_PEDANTIC(\n+ACX_PROG_CXX_WARNING_ALMOST_PEDANTIC(\n \tm4_quote(m4_do([-Wno-long-long -Wno-variadic-macros ], \n \t\t       [-Wno-overlength-strings])), [strict_warn])\n-ACX_PROG_CC_WARNINGS_ARE_ERRORS([manual], [strict_warn])\n+ACX_PROG_CXX_WARNINGS_ARE_ERRORS([manual], [strict_warn])\n \n # The above macros do nothing if the compiler is not GCC.  However, the\n # Makefile has more goo to add other flags, so these variables are used"}]}