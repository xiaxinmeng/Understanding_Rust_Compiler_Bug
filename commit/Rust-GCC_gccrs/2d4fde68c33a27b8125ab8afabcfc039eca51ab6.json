{"sha": "2d4fde68c33a27b8125ab8afabcfc039eca51ab6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ0ZmRlNjhjMzNhMjdiODEyNWFiOGFmYWJjZmMwMzllY2E1MWFiNg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-02-04T23:10:46Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-02-04T23:10:46Z"}, "message": "loop.c (first_loop_store_insn): New file-scope variable.\n\n\t* loop.c (first_loop_store_insn): New file-scope variable.\n\t(prescan_loop): Set it.\n\t(check_dbra_loop): Check if a store depends on a register\n\tthat is set after the store.\n\nFrom-SVN: r25034", "tree": {"sha": "cec55d3649e704607bb5cb8a874ab831735923fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cec55d3649e704607bb5cb8a874ab831735923fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d4fde68c33a27b8125ab8afabcfc039eca51ab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4fde68c33a27b8125ab8afabcfc039eca51ab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4fde68c33a27b8125ab8afabcfc039eca51ab6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4fde68c33a27b8125ab8afabcfc039eca51ab6/comments", "author": null, "committer": null, "parents": [{"sha": "a5af23fe121ce80395777cd066f04699e56240e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5af23fe121ce80395777cd066f04699e56240e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5af23fe121ce80395777cd066f04699e56240e0"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "e2edb461b6d148fd1abfc7e319f7f7ba49d0421f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4fde68c33a27b8125ab8afabcfc039eca51ab6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4fde68c33a27b8125ab8afabcfc039eca51ab6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d4fde68c33a27b8125ab8afabcfc039eca51ab6", "patch": "@@ -1,3 +1,10 @@\n+Fri Feb  5 07:09:29 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* loop.c (first_loop_store_insn): New file-scope variable.\n+\t(prescan_loop): Set it.\n+\t(check_dbra_loop): Check if a store depends on a register\n+\tthat is set after the store.\n+\n Fri Feb  5 06:55:15 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* unroll.c (entire file): Remove tabs / spaces at end of lines."}, {"sha": "abf90cea5434939d8b72b4cec8883169e328d14a", "filename": "gcc/loop.c", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4fde68c33a27b8125ab8afabcfc039eca51ab6/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4fde68c33a27b8125ab8afabcfc039eca51ab6/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=2d4fde68c33a27b8125ab8afabcfc039eca51ab6", "patch": "@@ -173,6 +173,9 @@ static char *moved_once;\n \n static rtx loop_store_mems;\n \n+/* The insn where the first of these was found.  */\n+static rtx first_loop_store_insn;\n+\n typedef struct loop_mem_info {\n   rtx mem;      /* The MEM itself.  */\n   rtx reg;      /* Corresponding pseudo, if any.  */\n@@ -2404,6 +2407,7 @@ prescan_loop (start, end)\n   loop_has_volatile = 0;\n   loop_has_tablejump = 0;\n   loop_store_mems = NULL_RTX;\n+  first_loop_store_insn = NULL_RTX;\n   loop_mems_idx = 0;\n \n   num_mem_sets = 0;\n@@ -2456,6 +2460,8 @@ prescan_loop (start, end)\n \t    loop_has_tablejump = 1;\n \t  \n \t  note_stores (PATTERN (insn), note_addr_stored);\n+\t  if (! first_loop_store_insn && loop_store_mems)\n+\t    first_loop_store_insn = insn;\n \n \t  if (! loop_has_multiple_exit_targets\n \t      && GET_CODE (insn) == JUMP_INSN\n@@ -7682,9 +7688,26 @@ check_dbra_loop (loop_end, insn_count, loop_start, loop_info)\n \t     case, the insn should have been moved out of the loop.  */\n \n \t  if (num_mem_sets == 1)\n-\t    reversible_mem_store\n-\t      = (! unknown_address_altered\n-\t\t && ! invariant_p (XEXP (loop_store_mems, 0)));\n+\t    {\n+\t      struct induction *v;\n+\n+\t      reversible_mem_store\n+\t\t= (! unknown_address_altered\n+\t\t   && ! invariant_p (XEXP (loop_store_mems, 0)));\n+\n+\t      /* If the store depends on a register that is set after the\n+\t\t store, it depends on the initial value, and is thus not\n+\t\t reversible.  */\n+\t      for (v = bl->giv; reversible_mem_store && v; v = v->next_iv)\n+\t\t{\n+\t\t  if (v->giv_type == DEST_REG\n+\t\t      && reg_mentioned_p (v->dest_reg,\n+\t\t\t\t\t  XEXP (loop_store_mems, 0))\n+\t\t      && (INSN_LUID (v->insn)\n+\t\t\t  > INSN_LUID (first_loop_store_insn)))\n+\t\t    reversible_mem_store = 0;\n+\t\t}\n+\t    }\n \t}\n       else\n \treturn 0;"}]}