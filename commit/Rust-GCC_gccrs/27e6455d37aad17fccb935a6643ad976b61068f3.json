{"sha": "27e6455d37aad17fccb935a6643ad976b61068f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdlNjQ1NWQzN2FhZDE3ZmNjYjkzNWE2NjQzYWQ5NzZiNjEwNjhmMw==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2005-09-05T07:59:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T07:59:42Z"}, "message": "sem_ch13.adb (Analyze_Enumeration_Representation_Clause): Reject the clause if the array aggregate is surrounded by parentheses.\n\n2005-09-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Enumeration_Representation_Clause): Reject the\n\tclause if the array aggregate is surrounded by parentheses.\n\nFrom-SVN: r103880", "tree": {"sha": "c70e7efa1e98dcf3b2b27b56c326c277b54a16d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c70e7efa1e98dcf3b2b27b56c326c277b54a16d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27e6455d37aad17fccb935a6643ad976b61068f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e6455d37aad17fccb935a6643ad976b61068f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27e6455d37aad17fccb935a6643ad976b61068f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e6455d37aad17fccb935a6643ad976b61068f3/comments", "author": null, "committer": null, "parents": [{"sha": "48aa1f1a6180e8d826ff5efa4a637477be56be48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48aa1f1a6180e8d826ff5efa4a637477be56be48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48aa1f1a6180e8d826ff5efa4a637477be56be48"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "c15866038577e99f98e437769f4efa5408fa31cc", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e6455d37aad17fccb935a6643ad976b61068f3/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e6455d37aad17fccb935a6643ad976b61068f3/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=27e6455d37aad17fccb935a6643ad976b61068f3", "patch": "@@ -1488,6 +1488,14 @@ package body Sem_Ch13 is\n          Error_Msg_N (\"enumeration rep clause not allowed for this type\", N);\n          return;\n \n+      --  Check that the expression is a proper aggregate (no parentheses)\n+\n+      elsif Paren_Count (Aggr) /= 0 then\n+         Error_Msg\n+           (\"extra parentheses surrounding aggregate not allowed\",\n+            First_Sloc (Aggr));\n+         return;\n+\n       --  All tests passed, so set rep clause in place\n \n       else\n@@ -1500,10 +1508,6 @@ package body Sem_Ch13 is\n       --  normal expansion activities, and a number of special semantic\n       --  rules apply (including the component type being any integer type)\n \n-      --  Badent signals that we found some incorrect entries processing\n-      --  the list. The final checks for completeness and ordering are\n-      --  skipped in this case.\n-\n       Elit := First_Literal (Enumtype);\n \n       --  First the positional entries if any\n@@ -1518,9 +1522,12 @@ package body Sem_Ch13 is\n \n             Val := Static_Integer (Expr);\n \n+            --  Err signals that we found some incorrect entries processing\n+            --  the list. The final checks for completeness and ordering are\n+            --  skipped in this case.\n+\n             if Val = No_Uint then\n                Err := True;\n-\n             elsif Val < Lo or else Hi < Val then\n                Error_Msg_N (\"value outside permitted range\", Expr);\n                Err := True;\n@@ -3124,7 +3131,7 @@ package body Sem_Ch13 is\n                          New_Reference_To (\n                            Designated_Type (Etype (F)), Loc)))),\n \n-             Subtype_Mark =>\n+             Result_Definition =>\n                New_Reference_To (Etyp, Loc));\n       end Build_Spec;\n "}]}