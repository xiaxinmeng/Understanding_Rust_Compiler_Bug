{"sha": "4204425f00aab5563c6af03729c1ef379b706e0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIwNDQyNWYwMGFhYjU1NjNjNmFmMDM3MjljMWVmMzc5YjcwNmUwZA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-05-26T16:47:08Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-05-26T16:47:08Z"}, "message": "Do not check the if-convertibility of statements that are not predicated.\n\n2010-05-26  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* tree-if-conv.c (if_convertible_gimple_assign_stmt_p): Do not\n\tspecial case loop->header.\n\t(is_predicated): New.\n\t(if_convertible_loop_p): Call it.\n\nFrom-SVN: r159887", "tree": {"sha": "1e645c42d25ea3c1ff2a2be32630e1830f8f794c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e645c42d25ea3c1ff2a2be32630e1830f8f794c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4204425f00aab5563c6af03729c1ef379b706e0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4204425f00aab5563c6af03729c1ef379b706e0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4204425f00aab5563c6af03729c1ef379b706e0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4204425f00aab5563c6af03729c1ef379b706e0d/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1449456c0a88f5b3122db5452f7e91f5a9535f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1449456c0a88f5b3122db5452f7e91f5a9535f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1449456c0a88f5b3122db5452f7e91f5a9535f6"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "31bc2922b64ab95c4b4c16eed52e86ae9283d812", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4204425f00aab5563c6af03729c1ef379b706e0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4204425f00aab5563c6af03729c1ef379b706e0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4204425f00aab5563c6af03729c1ef379b706e0d", "patch": "@@ -1,3 +1,10 @@\n+2010-05-26  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* tree-if-conv.c (if_convertible_gimple_assign_stmt_p): Do not\n+\tspecial case loop->header.\n+\t(is_predicated): New.\n+\t(if_convertible_loop_p): Call it.\n+\n 2010-05-26  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-if-conv.c (add_to_dst_predicate_list): Do not pass a statemet"}, {"sha": "8dc1de682be2ab1ea354e50fc12a1d20888e9318", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4204425f00aab5563c6af03729c1ef379b706e0d/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4204425f00aab5563c6af03729c1ef379b706e0d/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=4204425f00aab5563c6af03729c1ef379b706e0d", "patch": "@@ -274,9 +274,7 @@ if_convertible_gimple_assign_stmt_p (struct loop *loop, basic_block bb,\n       return false;\n     }\n \n-  /* See if it needs speculative loading or not.  */\n-  if (bb != loop->header\n-      && gimple_assign_rhs_could_trap_p (stmt))\n+  if (gimple_assign_rhs_could_trap_p (stmt))\n     {\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \tfprintf (dump_file, \"tree could trap...\\n\");\n@@ -588,6 +586,19 @@ predicate_bbs (loop_p loop)\n   return true;\n }\n \n+/* Returns true when BB has a predicate that is not trivial: true or\n+   NULL_TREE.  */\n+\n+static bool\n+is_predicated (basic_block bb)\n+{\n+  tree cond = (tree) bb->aux;\n+\n+  return (cond != NULL_TREE\n+\t  && cond != boolean_true_node\n+\t  && !integer_onep (cond));\n+}\n+\n /* Return true when LOOP is if-convertible.\n    LOOP is if-convertible if:\n    - it is innermost,\n@@ -682,6 +693,10 @@ if_convertible_loop_p (struct loop *loop)\n       basic_block bb = ifc_bbs[i];\n       gimple_stmt_iterator itr;\n \n+      /* For non predicated BBs, don't check their statements.  */\n+      if (!is_predicated (bb))\n+\tcontinue;\n+\n       for (itr = gsi_start_bb (bb); !gsi_end_p (itr); gsi_next (&itr))\n \tif (!if_convertible_stmt_p (loop, bb, gsi_stmt (itr)))\n \t  return false;"}]}