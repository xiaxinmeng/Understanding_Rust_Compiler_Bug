{"sha": "ff49b8053d16b0a565a02400ac0db81e5fd8f2cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY0OWI4MDUzZDE2YjBhNTY1YTAyNDAwYWMwZGI4MWU1ZmQ4ZjJjZA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-05-18T01:02:59Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-08T14:55:51Z"}, "message": "[Ada] Ada_2020 AI12-0250 : Implement Iterator filters.\n\ngcc/ada/\n\n\t* par.adb (P_Iterator_Specification): Make public for use in\n\tother parser subprograms.\n\t* par-ch4.adb (P_Iterated_Component_Association): In Ada_2020,\n\trecognize use of Iterator_Specification in an element iterator.\n\tTo simplify disambiguation between the two iterator forms, mark\n\tthe component association as carrying an Iterator_Specification\n\tonly when the element iterator (using \"OF\") is used.\n\t* par-ch5.adb (P_Loop_Parameter_Specification): In Ada_2020,\n\tparse iterator filter when present.\n\t(P_Iterator_Specification): Ditto.  Remove declaration of\n\tP_Iterator_Specification, now in parent unit.\n\t* exp_ch5.adb (Expand_N_Loop_Statement): Apply Iterator filter\n\twhen present.\n\t(Expand_Iterator_Loop_Over_Array): Ditto.\n\t(Expand_Iterator_Loop_Over_Container): Ditto.\n\t* sem_aggr.adb (Resolve_Array_Aggregate): Emit error nessage if\n\tan iterated component association includes a iterator\n\tspecificcation with an element iterator, i.e. one that uses the\n\tOF keyword.\n\t* sem_ch5.adb (Analyze_Iterator_Specification): Analyze Iterator\n\tfilter when present.\n\t(Analyze_Loop_Parameter_Specification): Ditto.\n\t* sinfo.adb: Suprogram bodies for new syntactic element\n\tIterator_Filter.\n\t* sinfo.ads: Add Iterator_Filter to relevant nodes.  Structure\n\tof Component_Association and Iteroted_Component_Association\n\tnodes is modified to take into account the possible  presence of\n\tan iterator specification in the latter.", "tree": {"sha": "51744f051e71fbe19f3f25b6c35d31195cf7f21d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51744f051e71fbe19f3f25b6c35d31195cf7f21d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1fece377a93b1809243280fcbe01b143f105c9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1fece377a93b1809243280fcbe01b143f105c9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1fece377a93b1809243280fcbe01b143f105c9c"}], "stats": {"total": 178, "additions": 152, "deletions": 26}, "files": [{"sha": "e98fcf778ee2c45a08a57efb7efd181154b28186", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=ff49b8053d16b0a565a02400ac0db81e5fd8f2cd", "patch": "@@ -3868,13 +3868,20 @@ package body Exp_Ch5 is\n       Array_Dim  : constant Pos        := Number_Dimensions (Array_Typ);\n       Id         : constant Entity_Id  := Defining_Identifier (I_Spec);\n       Loc        : constant Source_Ptr := Sloc (Isc);\n-      Stats      : constant List_Id    := Statements (N);\n+      Stats      : List_Id    := Statements (N);\n       Core_Loop  : Node_Id;\n       Dim1       : Int;\n       Ind_Comp   : Node_Id;\n       Iterator   : Entity_Id;\n \n    begin\n+      if Present (Iterator_Filter (I_Spec)) then\n+         pragma Assert (Ada_Version >= Ada_2020);\n+         Stats := New_List (Make_If_Statement (Loc,\n+            Condition => Iterator_Filter (I_Spec),\n+            Then_Statements => Stats));\n+      end if;\n+\n       --  for Element of Array loop\n \n       --  It requires an internally generated cursor to iterate over the array\n@@ -4145,7 +4152,9 @@ package body Exp_Ch5 is\n       Elem_Typ : constant Entity_Id   := Etype (Id);\n       Id_Kind  : constant Entity_Kind := Ekind (Id);\n       Loc      : constant Source_Ptr  := Sloc (N);\n-      Stats    : constant List_Id     := Statements (N);\n+\n+      Stats    : List_Id     := Statements (N);\n+      --  Maybe wrapped in a conditional if a filter is present\n \n       Cursor    : Entity_Id;\n       Decl      : Node_Id;\n@@ -4167,6 +4176,13 @@ package body Exp_Ch5 is\n       --  The package in which the container type is declared\n \n    begin\n+      if Present (Iterator_Filter (I_Spec)) then\n+         pragma Assert (Ada_Version >= Ada_2020);\n+         Stats := New_List (Make_If_Statement (Loc,\n+            Condition => Iterator_Filter (I_Spec),\n+            Then_Statements => Stats));\n+      end if;\n+\n       --  Determine the advancement and initialization steps for the cursor.\n       --  Analysis of the expanded loop will verify that the container has a\n       --  reverse iterator.\n@@ -4640,11 +4656,20 @@ package body Exp_Ch5 is\n             Loop_Id : constant Entity_Id := Defining_Identifier (LPS);\n             Ltype   : constant Entity_Id := Etype (Loop_Id);\n             Btype   : constant Entity_Id := Base_Type (Ltype);\n+            Stats   : constant List_Id   := Statements (N);\n             Expr    : Node_Id;\n             Decls   : List_Id;\n             New_Id  : Entity_Id;\n \n          begin\n+            if Present (Iterator_Filter (LPS)) then\n+               pragma Assert (Ada_Version >= Ada_2020);\n+               Set_Statements (N,\n+                  New_List (Make_If_Statement (Loc,\n+                    Condition => Iterator_Filter (LPS),\n+                    Then_Statements => Stats)));\n+            end if;\n+\n             --  Deal with loop over predicates\n \n             if Is_Discrete_Type (Ltype)\n@@ -4761,7 +4786,7 @@ package body Exp_Ch5 is\n                        Declarations => Decls,\n                        Handled_Statement_Sequence =>\n                          Make_Handled_Sequence_Of_Statements (Loc,\n-                           Statements => Statements (N)))),\n+                           Statements => Stats))),\n \n                    End_Label => End_Label (N)));\n \n@@ -4863,7 +4888,7 @@ package body Exp_Ch5 is\n          end if;\n       end if;\n \n-      --  When the iteration scheme mentiones attribute 'Loop_Entry, the loop\n+      --  When the iteration scheme mentions attribute 'Loop_Entry, the loop\n       --  is transformed into a conditional block where the original loop is\n       --  the sole statement. Inspect the statements of the nested loop for\n       --  controlled objects."}, {"sha": "e79abd1a8cf1781ac9ca2f098343ca1e609d59ed", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=ff49b8053d16b0a565a02400ac0db81e5fd8f2cd", "patch": "@@ -3402,22 +3402,50 @@ package body Ch4 is\n \n    --  ITERATED_COMPONENT_ASSOCIATION ::=\n    --    for DEFINING_IDENTIFIER in DISCRETE_CHOICE_LIST => EXPRESSION\n+   --    for ITERATOR_SPECIFICATION => EXPRESSION\n \n    function P_Iterated_Component_Association return Node_Id is\n       Assoc_Node : Node_Id;\n+      Id         : Node_Id;\n+      State      : Saved_Scan_State;\n \n    --  Start of processing for P_Iterated_Component_Association\n \n    begin\n       Scan;  --  past FOR\n+      Save_Scan_State (State);\n+\n+      --  A lookahead is necessary to differentiate between the\n+      --  Ada2012 form with a choice list, and the Ada2020 element\n+      --  iterator form, recognized by the presence of \"OF\". Other\n+      --  disambiguation requires context and is done during semantc\n+      --  analysis. Note that \"for X in E\" is syntactically ambiguous:\n+      --  if E is a subypte indication this is a loop parameter spec,\n+      --  while if E a name it is an iterator_specification, and the\n+      --  disambiguation takes place during semantic analysis.\n+\n+      Id := P_Defining_Identifier;\n       Assoc_Node :=\n         New_Node (N_Iterated_Component_Association, Prev_Token_Ptr);\n \n-      Set_Defining_Identifier (Assoc_Node, P_Defining_Identifier);\n-      T_In;\n-      Set_Discrete_Choices (Assoc_Node, P_Discrete_Choice_List);\n-      TF_Arrow;\n-      Set_Expression (Assoc_Node, P_Expression);\n+      if Token =  Tok_In then\n+         Set_Defining_Identifier (Assoc_Node, Id);\n+         T_In;\n+         Set_Discrete_Choices (Assoc_Node, P_Discrete_Choice_List);\n+         TF_Arrow;\n+         Set_Expression (Assoc_Node, P_Expression);\n+\n+      elsif Ada_Version >= Ada_2020\n+        and then Token = Tok_Of\n+      then\n+         Restore_Scan_State (State);\n+         Scan;  -- past OF\n+         Set_Defining_Identifier (Assoc_Node, Id);\n+         Set_Iterator_Specification\n+           (Assoc_Node, P_Iterator_Specification (Id));\n+         TF_Arrow;\n+         Set_Expression (Assoc_Node, P_Expression);\n+      end if;\n \n       if Ada_Version < Ada_2020 then\n          Error_Msg_SC (\"iterated component is an Ada 202x feature\");"}, {"sha": "49ecb938ef13d0fee0beda626901a65d8373583c", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=ff49b8053d16b0a565a02400ac0db81e5fd8f2cd", "patch": "@@ -62,11 +62,6 @@ package body Ch5 is\n    --  the N_Identifier node for the label on the loop. If Loop_Name is\n    --  Empty on entry (the default), then the for statement is unlabeled.\n \n-   function P_Iterator_Specification (Def_Id : Node_Id) return Node_Id;\n-   --  Parse an iterator specification. The defining identifier has already\n-   --  been scanned, as it is the common prefix between loop and iterator\n-   --  specification.\n-\n    function P_Loop_Statement (Loop_Name : Node_Id := Empty) return Node_Id;\n    --  Parse loop statement. If Loop_Name is non-Empty on entry, it is\n    --  the N_Identifier node for the label on the loop. If Loop_Name is\n@@ -1660,6 +1655,7 @@ package body Ch5 is\n \n    --  LOOP_PARAMETER_SPECIFICATION ::=\n    --    DEFINING_IDENTIFIER in [reverse] DISCRETE_SUBTYPE_DEFINITION\n+   --    [Iterator_Filter]\n \n    --  Error recovery: cannot raise Error_Resync\n \n@@ -1715,6 +1711,15 @@ package body Ch5 is\n \n       Set_Discrete_Subtype_Definition\n         (Loop_Param_Specification_Node, P_Discrete_Subtype_Definition);\n+\n+      if Ada_Version >= Ada_2020\n+         and then Token = Tok_When\n+      then\n+         Scan; -- past WHEN\n+         Set_Iterator_Filter\n+           (Loop_Param_Specification_Node, P_Condition);\n+      end if;\n+\n       return Loop_Param_Specification_Node;\n \n    exception\n@@ -1767,6 +1772,15 @@ package body Ch5 is\n       end if;\n \n       Set_Name (Node1, P_Name);\n+\n+      if Ada_Version >= Ada_2020\n+         and then Token = Tok_When\n+      then\n+         Scan; -- past WHEN\n+         Set_Iterator_Filter\n+           (Node1, P_Condition);\n+      end if;\n+\n       return Node1;\n    end P_Iterator_Specification;\n "}, {"sha": "1dee1e7dfaefbfbf8e63d28ecde8de187e321f8b", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=ff49b8053d16b0a565a02400ac0db81e5fd8f2cd", "patch": "@@ -842,6 +842,11 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n       --  conditional expression and passes it as an argument. This form of\n       --  the call does not check for a following right parenthesis.\n \n+      function P_Iterator_Specification (Def_Id : Node_Id) return Node_Id;\n+      --  Parse an iterator specification. The defining identifier has already\n+      --  been scanned, as it is the common prefix between loop and iterator\n+      --  specification.\n+\n       function P_Loop_Parameter_Specification return Node_Id;\n       --  Used in loop constructs and quantified expressions.\n "}, {"sha": "63cb7143c38db1ef2efbf772c8a75f2868081c4b", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=ff49b8053d16b0a565a02400ac0db81e5fd8f2cd", "patch": "@@ -1545,6 +1545,18 @@ package body Sem_Aggr is\n          Id     : Entity_Id;\n \n       begin\n+         --  An element iterator specification cannot appear in\n+         --  an array aggregate because it does not provide index\n+         --  values for the association. This must be a semantic\n+         --  check because the parser cannot tell whether this is\n+         --  an array aggregate or a container aggregate.\n+\n+         if Present (Iterator_Specification (N)) then\n+            Error_Msg_N (\"container element Iterator cannot appear \"\n+              & \"in an array aggregate\", N);\n+            return;\n+         end if;\n+\n          Choice := First (Discrete_Choices (N));\n \n          while Present (Choice) loop"}, {"sha": "74ebc6a88d4af4e815a7264c755887f156b4885d", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ff49b8053d16b0a565a02400ac0db81e5fd8f2cd", "patch": "@@ -2628,6 +2628,10 @@ package body Sem_Ch5 is\n \n          end if;\n       end if;\n+\n+      if Present (Iterator_Filter (N)) then\n+         Analyze_And_Resolve (Iterator_Filter (N), Standard_Boolean);\n+      end if;\n    end Analyze_Iterator_Specification;\n \n    -------------------\n@@ -3311,6 +3315,10 @@ package body Sem_Ch5 is\n          end;\n       end if;\n \n+      if Present (Iterator_Filter (N)) then\n+         Analyze_And_Resolve (Iterator_Filter (N), Standard_Boolean);\n+      end if;\n+\n       --  A loop parameter cannot be effectively volatile (SPARK RM 7.1.3(4)).\n       --  This check is relevant only when SPARK_Mode is on as it is not a\n       --  standard Ada legality check."}, {"sha": "7284a06b1daef46e0b8a636c34db84ea37b3802e", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=ff49b8053d16b0a565a02400ac0db81e5fd8f2cd", "patch": "@@ -2223,6 +2223,15 @@ package body Sinfo is\n       return Flag5 (N);\n    end Is_Write;\n \n+   function Iterator_Filter\n+     (N : Node_Id) return Node_Id is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Iterator_Specification\n+        or else NT (N).Nkind = N_Loop_Parameter_Specification);\n+      return Node3 (N);\n+   end Iterator_Filter;\n+\n    function Iteration_Scheme\n       (N : Node_Id) return Node_Id is\n    begin\n@@ -2235,6 +2244,7 @@ package body Sinfo is\n      (N : Node_Id) return Node_Id is\n    begin\n       pragma Assert (False\n+        or else NT (N).Nkind = N_Iterated_Component_Association\n         or else NT (N).Nkind = N_Iteration_Scheme\n         or else NT (N).Nkind = N_Quantified_Expression);\n       return Node2 (N);\n@@ -2358,7 +2368,7 @@ package body Sinfo is\n       pragma Assert (False\n         or else NT (N).Nkind = N_Component_Association\n         or else NT (N).Nkind = N_Iterated_Component_Association);\n-      return List2 (N);\n+      return List5 (N);\n    end Loop_Actions;\n \n    function Loop_Parameter_Specification\n@@ -5700,6 +5710,15 @@ package body Sinfo is\n       Set_Flag5 (N, Val);\n    end Set_Is_Write;\n \n+   procedure Set_Iterator_Filter\n+     (N : Node_Id; Val : Node_Id) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Iterator_Specification\n+        or else NT (N).Nkind = N_Loop_Parameter_Specification);\n+      Set_Node3_With_Parent (N, Val);\n+   end Set_Iterator_Filter;\n+\n    procedure Set_Iteration_Scheme\n       (N : Node_Id; Val : Node_Id) is\n    begin\n@@ -5712,6 +5731,7 @@ package body Sinfo is\n      (N : Node_Id; Val : Node_Id) is\n    begin\n       pragma Assert (False\n+        or else NT (N).Nkind = N_Iterated_Component_Association\n         or else NT (N).Nkind = N_Iteration_Scheme\n         or else NT (N).Nkind = N_Quantified_Expression);\n       Set_Node2_With_Parent (N, Val);\n@@ -5835,7 +5855,7 @@ package body Sinfo is\n       pragma Assert (False\n         or else NT (N).Nkind = N_Component_Association\n         or else NT (N).Nkind = N_Iterated_Component_Association);\n-      Set_List2 (N, Val); -- semantic field, no parent set\n+      Set_List5 (N, Val); -- semantic field, no parent set\n    end Set_Loop_Actions;\n \n    procedure Set_Loop_Parameter_Specification"}, {"sha": "1dd31b06c7d86e427f67348cc4c554c2564d2385", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff49b8053d16b0a565a02400ac0db81e5fd8f2cd/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=ff49b8053d16b0a565a02400ac0db81e5fd8f2cd", "patch": "@@ -1993,7 +1993,7 @@ package Sinfo is\n    --    N_Raise_xxx_Error nodes since the transformation of these nodes is\n    --    handled by the back end (using the N_Push/N_Pop mechanism).\n \n-   --  Loop_Actions (List2-Sem)\n+   --  Loop_Actions (List5-Sem)\n    --    A list present in Component_Association nodes in array aggregates.\n    --    Used to collect actions that must be executed within the loop because\n    --    they may need to be evaluated anew each time through.\n@@ -4123,8 +4123,8 @@ package Sinfo is\n       --  N_Component_Association\n       --  Sloc points to first selector name\n       --  Choices (List1)\n-      --  Loop_Actions (List2-Sem)\n       --  Expression (Node3) (empty if Box_Present)\n+      --  Loop_Actions (List5-Sem)\n       --  Box_Present (Flag15)\n       --  Inherited_Discriminant (Flag13)\n \n@@ -4222,9 +4222,10 @@ package Sinfo is\n       --  N_Iterated_Component_Association\n       --  Sloc points to FOR\n       --  Defining_Identifier (Node1)\n-      --  Loop_Actions (List2-Sem)\n+      --  Iterator_Specification (Node2) (set to Empty if no Iterator_Spec)\n       --  Expression (Node3)\n       --  Discrete_Choices (List4)\n+      --  Loop_Actions (List5-Sem)\n       --  Box_Present (Flag15)\n \n       --  Note that Box_Present is always False, but it is intentionally added\n@@ -5081,11 +5082,15 @@ package Sinfo is\n \n       --  LOOP_PARAMETER_SPECIFICATION ::=\n       --    DEFINING_IDENTIFIER in [reverse] DISCRETE_SUBTYPE_DEFINITION\n+      --    [Iterator_Filter]\n+\n+      --  Note; the optional Iterator_Filter is an Ada_2020 construct.\n \n       --  N_Loop_Parameter_Specification\n       --  Sloc points to first identifier\n       --  Defining_Identifier (Node1)\n       --  Reverse_Present (Flag15)\n+      --  Iterator_Filter (Node3) (set to Empty if not present)\n       --  Discrete_Subtype_Definition (Node4)\n \n       -----------------------------------\n@@ -5102,6 +5107,7 @@ package Sinfo is\n       --  Name (Node2)\n       --  Reverse_Present (Flag15)\n       --  Of_Present (Flag16)\n+      --  Iterator_Filter (Node3) (set to Empty if not present)\n       --  Subtype_Indication (Node5)\n \n       --  Note: The Of_Present flag distinguishes the two forms\n@@ -9826,6 +9832,9 @@ package Sinfo is\n    function Iteration_Scheme\n      (N : Node_Id) return Node_Id;    -- Node2\n \n+   function Iterator_Filter\n+     (N : Node_Id) return Node_Id;    -- Node3\n+\n    function Iterator_Specification\n      (N : Node_Id) return Node_Id;    -- Node2\n \n@@ -9866,7 +9875,7 @@ package Sinfo is\n      (N : Node_Id) return Elist_Id;   -- Elist1\n \n    function Loop_Actions\n-     (N : Node_Id) return List_Id;    -- List2\n+     (N : Node_Id) return List_Id;    -- List5\n \n    function Loop_Parameter_Specification\n      (N : Node_Id) return Node_Id;    -- Node4\n@@ -10929,6 +10938,9 @@ package Sinfo is\n    procedure Set_Is_Write\n      (N : Node_Id; Val : Boolean := True);    -- Flag5\n \n+   procedure Set_Iterator_Filter\n+     (N : Node_Id; Val : Node_Id);            -- Node3\n+\n    procedure Set_Iteration_Scheme\n      (N : Node_Id; Val : Node_Id);            -- Node2\n \n@@ -10972,7 +10984,7 @@ package Sinfo is\n      (N : Node_Id; Val : Elist_Id);           -- Elist1\n \n    procedure Set_Loop_Actions\n-     (N : Node_Id; Val : List_Id);            -- List2\n+     (N : Node_Id; Val : List_Id);            -- List5\n \n    procedure Set_Loop_Parameter_Specification\n      (N : Node_Id; Val : Node_Id);            -- Node4\n@@ -11876,17 +11888,17 @@ package Sinfo is\n \n      N_Component_Association =>\n        (1 => True,    --  Choices (List1)\n-        2 => False,   --  Loop_Actions (List2-Sem)\n+        2 => False,   --  unused\n         3 => True,    --  Expression (Node3)\n         4 => False,   --  unused\n-        5 => False),  --  unused\n+        5 => True),   --  Loop_Actions (List5-Sem);\n \n      N_Iterated_Component_Association =>\n        (1 => True,    --  Defining_Identifier (Node1)\n-        2 => True,    --  Loop_Actions (List2-Sem)\n+        2 => True,    --  Iterator_Specification\n         3 => True,    --  Expression (Node3)\n         4 => True,    --  Discrete_Choices (List4)\n-        5 => False),  --  unused\n+        5 => True),   --  Loop_Actions (List5-Sem);\n \n      N_Delta_Aggregate =>\n        (1 => False,   --  Unused\n@@ -12201,7 +12213,7 @@ package Sinfo is\n         2 => False,   --  unused\n         3 => False,   --  unused\n         4 => True,    --  Discrete_Subtype_Definition (Node4)\n-        5 => False),  --  unused\n+        5 => True),  --   Iterator_Filter (Node5)\n \n      N_Iterator_Specification =>\n        (1 => True,    --  Defining_Identifier (Node1)\n@@ -13430,6 +13442,7 @@ package Sinfo is\n    pragma Inline (Is_Task_Body_Procedure);\n    pragma Inline (Is_Task_Master);\n    pragma Inline (Is_Write);\n+   pragma Inline (Iterator_Filter);\n    pragma Inline (Iteration_Scheme);\n    pragma Inline (Itype);\n    pragma Inline (Kill_Range_Check);\n@@ -13794,6 +13807,7 @@ package Sinfo is\n    pragma Inline (Set_Is_Task_Body_Procedure);\n    pragma Inline (Set_Is_Task_Master);\n    pragma Inline (Set_Is_Write);\n+   pragma Inline (Set_Iterator_Filter);\n    pragma Inline (Set_Iteration_Scheme);\n    pragma Inline (Set_Iterator_Specification);\n    pragma Inline (Set_Itype);"}]}