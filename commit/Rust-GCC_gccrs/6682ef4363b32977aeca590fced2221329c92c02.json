{"sha": "6682ef4363b32977aeca590fced2221329c92c02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY4MmVmNDM2M2IzMjk3N2FlY2E1OTBmY2VkMjIyMTMyOWM5MmMwMg==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2020-10-21T11:48:07Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2020-11-04T21:33:30Z"}, "message": "IBM Z: Unhardcode NR_C_MODES\n\ngcc/ChangeLog:\n\n2020-11-03  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\t* config/s390/s390.c (NR_C_MODES): Unhardcode.\n\t(s390_alloc_pool): Use size_t for iterating from 0 to\n\tNR_C_MODES.\n\t(s390_add_constant): Likewise.\n\t(s390_find_constant): Likewise.\n\t(s390_dump_pool): Likewise.\n\t(s390_free_pool): Likewise.", "tree": {"sha": "4c478daa0921505111203924460141ec02efde6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c478daa0921505111203924460141ec02efde6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6682ef4363b32977aeca590fced2221329c92c02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6682ef4363b32977aeca590fced2221329c92c02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6682ef4363b32977aeca590fced2221329c92c02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6682ef4363b32977aeca590fced2221329c92c02/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88ea64e941562db4389bd3c2932b0194526e93e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88ea64e941562db4389bd3c2932b0194526e93e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88ea64e941562db4389bd3c2932b0194526e93e7"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b8961a315aa7cf5cf0591ff1eaf0eaa8f51bffbb", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6682ef4363b32977aeca590fced2221329c92c02/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6682ef4363b32977aeca590fced2221329c92c02/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=6682ef4363b32977aeca590fced2221329c92c02", "patch": "@@ -8621,8 +8621,7 @@ replace_constant_pool_ref (rtx_insn *insn, rtx ref, rtx offset)\n /* We keep a list of constants which we have to add to internal\n    constant tables in the middle of large functions.  */\n \n-#define NR_C_MODES 32\n-machine_mode constant_modes[NR_C_MODES] =\n+static machine_mode constant_modes[] =\n {\n   TFmode, TImode, TDmode,\n   V16QImode, V8HImode, V4SImode, V2DImode, V1TImode,\n@@ -8636,6 +8635,7 @@ machine_mode constant_modes[NR_C_MODES] =\n   QImode,\n   V1QImode\n };\n+#define NR_C_MODES (sizeof (constant_modes) / sizeof (constant_modes[0]))\n \n struct constant\n {\n@@ -8664,7 +8664,7 @@ static struct constant_pool *\n s390_alloc_pool (void)\n {\n   struct constant_pool *pool;\n-  int i;\n+  size_t i;\n \n   pool = (struct constant_pool *) xmalloc (sizeof *pool);\n   pool->next = NULL;\n@@ -8743,7 +8743,7 @@ static void\n s390_add_constant (struct constant_pool *pool, rtx val, machine_mode mode)\n {\n   struct constant *c;\n-  int i;\n+  size_t i;\n \n   for (i = 0; i < NR_C_MODES; i++)\n     if (constant_modes[i] == mode)\n@@ -8788,7 +8788,7 @@ s390_find_constant (struct constant_pool *pool, rtx val,\n \t\t    machine_mode mode)\n {\n   struct constant *c;\n-  int i;\n+  size_t i;\n \n   for (i = 0; i < NR_C_MODES; i++)\n     if (constant_modes[i] == mode)\n@@ -8895,7 +8895,7 @@ s390_dump_pool (struct constant_pool *pool, bool remote_label)\n {\n   struct constant *c;\n   rtx_insn *insn = pool->pool_insn;\n-  int i;\n+  size_t i;\n \n   /* Switch to rodata section.  */\n   insn = emit_insn_after (gen_pool_section_start (), insn);\n@@ -8966,7 +8966,7 @@ static void\n s390_free_pool (struct constant_pool *pool)\n {\n   struct constant *c, *next;\n-  int i;\n+  size_t i;\n \n   for (i = 0; i < NR_C_MODES; i++)\n     for (c = pool->constants[i]; c; c = next)"}]}