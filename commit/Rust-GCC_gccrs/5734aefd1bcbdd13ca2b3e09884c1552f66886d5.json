{"sha": "5734aefd1bcbdd13ca2b3e09884c1552f66886d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTczNGFlZmQxYmNiZGQxM2NhMmIzZTA5ODg0YzE1NTJmNjY4ODZkNQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-07-23T22:54:06Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-07-23T22:54:06Z"}, "message": "re PR target/53511 (SH Target: Add support for fma patterns)\n\n\tPR target/53511\n\t* config/sh/sh.md (mulsf3_ie): Delete.\n\t(mulsf3_i4): Rename to mulsf3_i.\n\t(mulsf3): Emit mulsf3_i insn.\n\nFrom-SVN: r189796", "tree": {"sha": "84cb9d37d7ab78795f6ea47bf2bd4f04b37a1e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84cb9d37d7ab78795f6ea47bf2bd4f04b37a1e65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5734aefd1bcbdd13ca2b3e09884c1552f66886d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5734aefd1bcbdd13ca2b3e09884c1552f66886d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5734aefd1bcbdd13ca2b3e09884c1552f66886d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5734aefd1bcbdd13ca2b3e09884c1552f66886d5/comments", "author": null, "committer": null, "parents": [{"sha": "dad6fafd3eb373e00aa2dfc827ec9d24a897ddc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dad6fafd3eb373e00aa2dfc827ec9d24a897ddc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dad6fafd3eb373e00aa2dfc827ec9d24a897ddc1"}], "stats": {"total": 41, "additions": 16, "deletions": 25}, "files": [{"sha": "790677c26d851b5e7d2ca870f55f2eac5c7d5191", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5734aefd1bcbdd13ca2b3e09884c1552f66886d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5734aefd1bcbdd13ca2b3e09884c1552f66886d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5734aefd1bcbdd13ca2b3e09884c1552f66886d5", "patch": "@@ -1,3 +1,10 @@\n+2012-07-23  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/53511\n+\t* config/sh/sh.md (mulsf3_ie): Delete.\n+\t(mulsf3_i4): Rename to mulsf3_i.\n+\t(mulsf3): Emit mulsf3_i insn.\n+\n 2012-07-23  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/sh.md (addc1, subc1): Delete."}, {"sha": "08926d990d9ef10bed0670db43cf903e6e5caabc", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 9, "deletions": 25, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5734aefd1bcbdd13ca2b3e09884c1552f66886d5/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5734aefd1bcbdd13ca2b3e09884c1552f66886d5/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=5734aefd1bcbdd13ca2b3e09884c1552f66886d5", "patch": "@@ -10229,7 +10229,14 @@ label:\n \t(mult:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"\")\n \t\t (match_operand:SF 2 \"fp_arith_reg_operand\" \"\")))]\n   \"TARGET_SH2E || TARGET_SHMEDIA_FPU\"\n-  \"\")\n+{\n+  if (TARGET_SH2E)\n+    {\n+      emit_insn (gen_mulsf3_i (operands[0], operands[1], operands[2],\n+\t\t get_fpscr_rtx ()));\n+      DONE;\n+    }\n+})\n \n (define_insn \"*mulsf3_media\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -10239,30 +10246,7 @@ label:\n   \"fmul.s\t%1, %2, %0\"\n   [(set_attr \"type\" \"fparith_media\")])\n \n-;; FIXME: These fmac combine pass assisting specifics are obsolete since \n-;;\t  we now use the FMA patterns, which do not depend on the combine\n-;;\t  pass anymore.\n-;; Unfortunately, the combiner is unable to cope with the USE of the FPSCR\n-;; register in feeding fp instructions.  Thus, in order to generate fmac,\n-;; we start out with a mulsf pattern that does not depend on fpscr.\n-;; This is split after combine to introduce the dependency, in order to\n-;; get mode switching and scheduling right.\n-(define_insn_and_split \"mulsf3_ie\"\n-  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n-\t(mult:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"%0\")\n-\t\t (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n-  \"TARGET_SH2E\"\n-  \"fmul\t%2,%0\"\n-  \"TARGET_SH4 || TARGET_SH2A_SINGLE\"\n-  [(const_int 0)]\n-{\n-  emit_insn (gen_mulsf3_i4 (operands[0], operands[1], operands[2],\n-\t     get_fpscr_rtx ()));\n-  DONE;\n-}\n-  [(set_attr \"type\" \"fp\")])\n-\n-(define_insn \"mulsf3_i4\"\n+(define_insn \"mulsf3_i\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n \t(mult:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"%0\")\n \t\t (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))"}]}