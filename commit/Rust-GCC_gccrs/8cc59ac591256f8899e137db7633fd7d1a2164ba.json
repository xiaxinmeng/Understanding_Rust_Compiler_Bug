{"sha": "8cc59ac591256f8899e137db7633fd7d1a2164ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNjNTlhYzU5MTI1NmY4ODk5ZTEzN2RiNzYzM2ZkN2QxYTIxNjRiYQ==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-03-03T06:16:34Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-03-04T05:32:59Z"}, "message": "PR target/93995 ICE in patch_jump_insn, at cfgrtl.c:1290 on riscv64-linux-gnu\n\nLast code gen change of LTGT didn't consider the situation of cbranch with LTGT,\nbranch only support few compare codes.\n\ngcc/ChangeLog\n\n\t* config/riscv/riscv.c (riscv_emit_float_compare): Using NE to compare\n\tthe result of IOR.\n\ngcc/testsuite/ChangeLog\n\n\t* gcc.dg/pr93995.c: New.", "tree": {"sha": "ba2653ff762794365555d89437a9d96e0be7e1f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba2653ff762794365555d89437a9d96e0be7e1f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cc59ac591256f8899e137db7633fd7d1a2164ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc59ac591256f8899e137db7633fd7d1a2164ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cc59ac591256f8899e137db7633fd7d1a2164ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc59ac591256f8899e137db7633fd7d1a2164ba/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b3302da9ef26aa11940f8c0dc92bec19e15c09b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3302da9ef26aa11940f8c0dc92bec19e15c09b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b3302da9ef26aa11940f8c0dc92bec19e15c09b"}], "stats": {"total": 64, "additions": 61, "deletions": 3}, "files": [{"sha": "42f417abb27c5b6ee05a20207fed6281cc08223a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc59ac591256f8899e137db7633fd7d1a2164ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc59ac591256f8899e137db7633fd7d1a2164ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cc59ac591256f8899e137db7633fd7d1a2164ba", "patch": "@@ -1,3 +1,9 @@\n+2020-03-04  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\tPR target/93995\n+\t* config/riscv/riscv.c (riscv_emit_float_compare): Using NE to compare\n+\tthe result of IOR.\n+\n 2020-03-03  Dennis Zhang  <dennis.zhang@arm.com>\n \n \t* config/arm/arm_bf16.h (vcvtah_f32_bf16, vcvth_bf16_f32): New."}, {"sha": "94b5ac0176271ad62785f9f6f3f9f6841e407af6", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc59ac591256f8899e137db7633fd7d1a2164ba/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc59ac591256f8899e137db7633fd7d1a2164ba/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=8cc59ac591256f8899e137db7633fd7d1a2164ba", "patch": "@@ -2299,9 +2299,10 @@ riscv_emit_float_compare (enum rtx_code *code, rtx *op0, rtx *op1)\n \n     case LTGT:\n       /* (a < b) | (a > b) */\n-      *code = IOR;\n-      *op0 = riscv_force_binary (word_mode, LT, cmp_op0, cmp_op1);\n-      *op1 = riscv_force_binary (word_mode, GT, cmp_op0, cmp_op1);\n+      tmp0 = riscv_force_binary (word_mode, LT, cmp_op0, cmp_op1);\n+      tmp1 = riscv_force_binary (word_mode, GT, cmp_op0, cmp_op1);\n+      *op0 = riscv_force_binary (word_mode, IOR, tmp0, tmp1);\n+      *op1 = const0_rtx;\n       break;\n \n     default:"}, {"sha": "cd519f4116b42585c4897aa7995c1f524d87208d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc59ac591256f8899e137db7633fd7d1a2164ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc59ac591256f8899e137db7633fd7d1a2164ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8cc59ac591256f8899e137db7633fd7d1a2164ba", "patch": "@@ -1,3 +1,8 @@\n+2020-03-04  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\tPR target/93995\n+\t* gcc.dg/pr93995.c: New.\n+\n 2020-03-03  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/90505 - mismatch in template argument deduction."}, {"sha": "b89c85db10a0b8ba8488c28613e950733160baac", "filename": "gcc/testsuite/gcc.dg/pr93995.c", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc59ac591256f8899e137db7633fd7d1a2164ba/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93995.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc59ac591256f8899e137db7633fd7d1a2164ba/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93995.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93995.c?ref=8cc59ac591256f8899e137db7633fd7d1a2164ba", "patch": "@@ -0,0 +1,46 @@\n+/* PR target/93995 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-trapping-math\" } */\n+\n+double s1[4], s2[4], s3[64];\n+\n+int\n+main (void)\n+{\n+  int i;\n+  asm volatile (\"\" : : : \"memory\");\n+  for (i = 0; i < 4; i++)\n+    s3[0 * 4 + i] = __builtin_isgreater (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[1 * 4 + i] = (!__builtin_isgreater (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[2 * 4 + i] = __builtin_isgreaterequal (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[3 * 4 + i] = (!__builtin_isgreaterequal (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[4 * 4 + i] = __builtin_isless (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[5 * 4 + i] = (!__builtin_isless (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[6 * 4 + i] = __builtin_islessequal (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[7 * 4 + i] = (!__builtin_islessequal (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[8 * 4 + i] = __builtin_islessgreater (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[9 * 4 + i] = (!__builtin_islessgreater (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[10 * 4 + i] = __builtin_isunordered (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[11 * 4 + i] = (!__builtin_isunordered (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[12 * 4 + i] = s1[i] > s2[i] ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[13 * 4 + i] = s1[i] >= s2[i] ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[14 * 4 + i] = s1[i] < s2[i] ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[15 * 4 + i] = s1[i] <= s2[i] ? -1.0 : 0.0;\n+  asm volatile (\"\" : : : \"memory\");\n+  return 0;\n+}"}]}