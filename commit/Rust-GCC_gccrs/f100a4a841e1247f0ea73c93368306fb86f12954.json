{"sha": "f100a4a841e1247f0ea73c93368306fb86f12954", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjEwMGE0YTg0MWUxMjQ3ZjBlYTczYzkzMzY4MzA2ZmI4NmYxMjk1NA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-08-13T19:14:20Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-08-13T19:14:20Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r150724", "tree": {"sha": "95282700ec4eacc3514b3283543d3d7f9f6fa7f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95282700ec4eacc3514b3283543d3d7f9f6fa7f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f100a4a841e1247f0ea73c93368306fb86f12954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f100a4a841e1247f0ea73c93368306fb86f12954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f100a4a841e1247f0ea73c93368306fb86f12954", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f100a4a841e1247f0ea73c93368306fb86f12954/comments", "author": null, "committer": null, "parents": [{"sha": "0ca73d34ae37bdf76a6111bba28b83973d32dc87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ca73d34ae37bdf76a6111bba28b83973d32dc87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ca73d34ae37bdf76a6111bba28b83973d32dc87"}], "stats": {"total": 322, "additions": 161, "deletions": 161}, "files": [{"sha": "bee46cb17be3d983afbb9f6ee04b893a06a6a6f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 122, "deletions": 122, "changes": 244, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f100a4a841e1247f0ea73c93368306fb86f12954/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f100a4a841e1247f0ea73c93368306fb86f12954/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f100a4a841e1247f0ea73c93368306fb86f12954", "patch": "@@ -36,7 +36,7 @@\n \t* tree-inline.h (tree_can_inline_p): Interface change.\n \t* tree-inline.c (tree_can_inline_p): Fold argument mismatch check\n \tinto this function.\n-\t* ipa-inline.c (cgraph_decide_inlining_of_small_functions): \n+\t* ipa-inline.c (cgraph_decide_inlining_of_small_functions):\n \tCall change to tree_can_inline_p function.\n \t(cgraph_decide_inlining_incrementally): Ditto.\n \n@@ -216,7 +216,7 @@\n 2009-08-12  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/41033\n-\t* alias.c (nonoverlapping_component_refs_p): Punt when strict \n+\t* alias.c (nonoverlapping_component_refs_p): Punt when strict\n \taliasing is disabled.\n \n 2009-08-11  Adam Nemet  <anemet@caviumnetworks.com>\n@@ -242,7 +242,7 @@\n 2009-08-11  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* combine.c (try_widen_shift_mode): Factor out code to check if an\n-        integer constant is a low-order bitmask from here ...\n+\tinteger constant is a low-order bitmask from here ...\n \t* rtlanal.c (low_bitmask_len): ... to here.\n \t* rtl.h (low_bitmask_len): Declare.\n \n@@ -278,7 +278,7 @@\n \tnot valid in the outer mode.\n \n 2009-08-11  Richard Guenther  <rguenther@suse.de>\n-\t\n+\n \tPR bootstrap/40788\n \t* builtins.c (gimplify_va_arg_expr): Do not call SET_EXPR_LOCATION.\n \n@@ -398,7 +398,7 @@\n \t* config/alpha/vms-unwind.h: Complete rewrite.\n \t* config/alpha/t-vms (LIB2FUNCS_EXTRA): Add vms-gcc_shell_handler.c\n \t* config/alpha/vms.h (MD_UNWIND_SUPPORT):\n-\t\n+\n 2009-08-09  Eric Botcazou  <botcazou@adacore.com>\n \t    Douglas B Rupp  <rupp@gnat.com>\n \n@@ -488,7 +488,7 @@\n \n \tPR tree-optimization/41008\n \t* tree-vect-loop.c (vect_is_simple_reduction): Get operands\n-\tfrom condition only in case it's a comparison. Adjust checks.\t\n+\tfrom condition only in case it's a comparison. Adjust checks.\n \n 2009-08-09  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n@@ -634,12 +634,12 @@\n \t(build_ref_for_offset): Declare.\n \t* Makefile.in (tree-sra.o): Add ipa-prop.h to dependencies.\n \t* tree-sra.c: Include ipa-prop.c.\n-\t(build_ref_for_offset): Make public. \n+\t(build_ref_for_offset): Make public.\n \n 2009-08-06  Neil Vachharajani  <nvachhar@gmail.com>\n \n \t* value-prof.c (init_pid_map): Replace xmalloc with XCNEWVEC.\n-\t\n+\n 2009-08-06  Thomas Schwinge  <tschwinge@gnu.org>\n \n \t* gcc/doc/extend.texi (__builtin_extract_return_address)\n@@ -752,7 +752,7 @@\n \t* doc/tm.texi (TARGET_LIBCALL_VALUE): Document it.\n \t* optabs.c (expand_unop): Use it.\n \t* expr.h (hard_libcall_value): Pass the function RTX through.\n-\t* calls.c (emit_library_call_value_1): Update call to \n+\t* calls.c (emit_library_call_value_1): Update call to\n \thard_libcall_value.\n \t* explow.c (hard_libcall_value): Use new target hook.\n \t* testsuite/lib/target-supports.exp\n@@ -1075,7 +1075,7 @@\n \twith pointer handling.\n \t(TARGET_PROMOTE_FUNCTION_MODE): Define.\n \t(TARGET_PROMOTE_FUNCTION_ARGS, TARGET_PROMOTE_FUNCTION_RETURN): Remove.\n-\t\n+\n \t* config/sh/sh-protos.h (sh_promote_function_mode): New.\n \t* config/sh/sh.c (sh_promote_function_mode): New.\n \t(TARGET_PROMOTE_FUNCTION_MODE): Define.\n@@ -1157,18 +1157,18 @@\n \tfputs or putc instead of fprintf where appropriate.\n \t* config/i386/i386elf.h: Ditto.\n \t* config/i386/sysv4.h: Ditto.\n-\t\n+\n \t* config/i386/i386.c (TARGET_ASM_BYTE_OP): New define.\n \t* config/i386/i386.md (x86_sahf_1): Use ASM_BYTE instead of .byte.\n \t(*tls_global_dynamic_64): Ditto.\n \n-2009-07-31  Christian Bruel  <christian.bruel@st.com>\t\n+2009-07-31  Christian Bruel  <christian.bruel@st.com>\n \n \t* gcc/config.gcc (sh*-*-elf): test with_libgloss.\n-\t\n+\n 2009-07-31  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n-\t* config/arm/arm.c (arm_arm_address_cost): Fix typo. \n+\t* config/arm/arm.c (arm_arm_address_cost): Fix typo.\n \tRemove dead code for MINUS.\n \n 2009-07-31  Anthony Green  <green@moxielogic.com>\n@@ -1531,7 +1531,7 @@\n \t(resize_phi_node): Initialize location to UNKNOWN_LOCATION.\n \t(add_phi_arg): Add location parameter.\n \t(remove_phi_arg_num): Move location when moving phi argument.\n-\t* omp-low.c (expand_parallel_call, expand_omp_for_static_chunk): Set \n+\t* omp-low.c (expand_parallel_call, expand_omp_for_static_chunk): Set\n \tlocation.\n \t* tree-vect-loop-manip.c (slpeel_update_phis_for_duplicate_loop,\n \tslpeel_update_phi_nodes_for_guard1,\n@@ -1576,7 +1576,7 @@\n \t* tree-outof-ssa.c (struct _elim_graph): Add source_location vecs for\n \tcopy and edge lists.\n \t(insert_partition_copy_on_edge, insert_value_copy_on_edge,\n-\tinsert_rtx_to_part_on_edge, insert_part_to_rtx_on_edge): Provide a \n+\tinsert_rtx_to_part_on_edge, insert_part_to_rtx_on_edge): Provide a\n \tlocus parameter and override the stmt default if provided.\n \t(new_elim_graph, clear_elim_graph, delete_elim_graph,\n \telim_graph_add_edge, elim_graph_remove_succ_edge,\n@@ -1588,10 +1588,10 @@\n \t* tree-flow.h (struct _edge_var_map): Add locus field.\n \t* tree-switch_conversions.c (fix_phi_nodes): Add locations.\n \t* tree-cfg.c (reinstall_phi_args, gimple_make_forwarder_block,\n-\tadd_phi_args_after_copy_edge, gimple_lv_adjust_loop_header_phi): Add \n+\tadd_phi_args_after_copy_edge, gimple_lv_adjust_loop_header_phi): Add\n \tlocations.\n \t* ipa-struct-reorg.c (make_edge_and_fix_phis_of_dest): Add locations.\n-\t\n+\n 2009-07-30  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/40570\n@@ -1804,7 +1804,7 @@\n 2009-07-25  David Daney  <ddaney@caviumnetworks.com>\n \n \t* cfgcleanup.c (old_insns_match_p): Handle the case of empty blocks.\n-\t\n+\n 2009-07-25  Martin Jambor  <mjambor@suse.cz>\n \n \t* c-common.c (c_common_attribute_table): New element for noclone.\n@@ -1866,7 +1866,7 @@\n \t(ipa_pop_func_from_list): Clear node_enqueued flag.\n \n 2009-07-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n-\t\n+\n \t* config/s390/s390.c (override_options): Default\n \tmax-unrolled-insns to 100 for z10 tuning.\n \n@@ -2038,7 +2038,7 @@\n \t(-msched-groups): Ditto.\n \t(-malways-hint): Ditto.\n \t(-malign-branch-targets): Ditto.\n-\t\n+\n \t* config/rs6000/rs6000.h (IRA_COVER_CLASSES): Delete, use target\n \thook instead.\n \t(IRA_COVER_CLASSES_PRE_VSX): Cover classes if not -mvsx.\n@@ -2082,7 +2082,7 @@\n \n 2009-07-23  Richard Earnshaw  <rearnsha@arm.com>\n \n-\t* arm.md (split for ior/xor with shift and zero-extend): Cast op3 to \n+\t* arm.md (split for ior/xor with shift and zero-extend): Cast op3 to\n \tunsigned HWI.\n \n 2009-07-23  Uros Bizjak  <ubizjak@gmail.com>\n@@ -2113,7 +2113,7 @@\n \n \t* doc/tm.texi (TARGET_IRA_COVER_CLASSES): Add a comment about\n \timportance of order of cover classes in the array.\n-\t\n+\n 2009-07-22  Diego Novillo  <dnovillo@google.com>\n \n \t* tree-pass.h (TDF_EH): Define.\n@@ -2146,7 +2146,7 @@\n \n \t* config/s390/constraints.md (ZQ, ZR, ZS, ZT): New constraints.\n \t(U, W): Constraints are now deprecated and will be removed if we\n-\trun out of letters.\t\n+\trun out of letters.\n \t* config/s390/s390.md (U, W): Replaced with ZQZR, ZSZT throughout\n \tthe file.\n \t(\"prefetch\"): Add the stcmh instruction for prefetching.\n@@ -2266,24 +2266,24 @@\n \t(get_initial_def_for_reduction): Likewise.\n \t(vectorizable_reduction): Skip the check of first operand in case\n \tof COND_EXPR. Add check that it is outer loop vectorization if\n-\tnested cycle was detected. Call vectorizable_condition() for \n+\tnested cycle was detected. Call vectorizable_condition() for\n \tCOND_EXPR. If reduction epilogue cannot be created do not fail for\n \tnested cycles (if it is not double reduction). Assert that there\n \tis only one type in the loop in case of COND_EXPR. Call\n \tvectorizable_condition() to vectorize COND_EXPR.\n \t* tree-vect-stmts.c (vectorizable_condition): Update comment.\n-\tAdd parameters. Allow nested cycles if called from \n+\tAdd parameters. Allow nested cycles if called from\n \tvectorizable_reduction(). Use reduction vector variable if provided.\n \t(vect_analyze_stmt): Call vectorizable_reduction() before\n \tvectorizable_condition().\n \t(vect_transform_stmt): Update call to vectorizable_condition().\n \n 2009-07-20  Christian Bruel  <christian.bruel@st.com>\n-\t\n+\n \t* config/sh/sh.opt (-mfmovd): Resurrect and document.\n \t* doc/invoke.texi (-mfmovd): Likewise.\n \t* config/sh/sh.h (TARGET_FMOVD, MASK_FMOVD): Remove default setting.\n-\t\n+\n 2009-07-20  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-ssa-dce.c (remove_dead_phis): Only look for abnormal PHIs\n@@ -2448,7 +2448,7 @@\n 2009-07-17  Aldy Hernandez  <aldyh@redhat.com>\n \t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n-\tPR 40435 \n+\tPR 40435\n \t* tree-complex.c, tree-loop-distribution.c, tree.c, tree.h,\n \tbuiltins.c, fold-const.c, omp-low.c, cgraphunit.c, tree-ssa-ccp.c,\n \ttree-ssa-dom.c, gimple-low.c, expr.c, tree-ssa-ifcombine.c,\n@@ -2568,10 +2568,10 @@\n \t(sibcall_value_internal): Likewise.\n \n 2009-07-14  Ghassan Shobaki  <ghassan.shobaki@amd.com>\n-\t\n+\n \t* doc/invoke.texi: Added descriptions of the  scheduling heuristics\n \tthat are enabled/disabled by the flags introduced by a previous patch.\n-\t\n+\n 2009-07-14  DJ Delorie  <dj@redhat.com>\n \n \t* config/mep/mep.md (sibcall_internal): Include non-toggling\n@@ -2591,7 +2591,7 @@\n \n \t* tree-vrp.c (vrp_evaluate_conditional): Mark strings for\n \ttranslation.\n-\t\n+\n 2009-07-14  DJ Delorie  <dj@redhat.com>\n \n \t* config/mep/mep.c (mep_vliw_jmp_match): New function.\n@@ -2681,14 +2681,14 @@\n \tcalculations.\n \n 2009-07-13  Ghassan Shobaki  <ghassan.shobaki@amd.com>\n-\t\n+\n \t* haifa-sched.c (rank_for_schedule): Introduced flags to\n \tenable/disable individual scheduling heuristics.\n \t* common.opt: Introduced flags to enable/disable individual\n-\theuristics in the scheduler.\t\n+\theuristics in the scheduler.\n \t* doc/invoke.texi: Introduced flags to enable/disable individual\n \theuristics in the scheduler.\n-\t\n+\n 2009-07-13  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* config/i386/t-gthr-win32 (LIB2FUNCS_EXTRA): Remove file\n@@ -2697,7 +2697,7 @@\n \n 2009-07-13  Ira Rosen  <irar@il.ibm.com>\n \n-\t* tree-vect-loop.c (get_initial_def_for_reduction): Ensure that the \n+\t* tree-vect-loop.c (get_initial_def_for_reduction): Ensure that the\n \tchecks access only relevant statements.\n \t(vectorizable_reduction): Likewise.\n \n@@ -2892,7 +2892,7 @@\n \n 2009-07-09  Basile Starynkevitch  <basile@starynkevitch.net>\n \n-\t* plugin.c (try_init_one_plugin): passes RTLD_GLOBAL to dlopen. \n+\t* plugin.c (try_init_one_plugin): passes RTLD_GLOBAL to dlopen.\n \n 2009-07-09  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -3453,7 +3453,7 @@\n 2009-06-30  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/40542\n-\t* tree-vect-stmts.c (vect_analyze_stmt): Don't vectorize volatile \n+\t* tree-vect-stmts.c (vect_analyze_stmt): Don't vectorize volatile\n \ttypes.\n \n 2009-06-30  Martin Jambor  <mjambor@suse.cz>\n@@ -3603,13 +3603,13 @@\n \t* config/cris/cris.h (FRAME_POINTER_REQUIRED): Remove macro.\n \t* config/cris/cris.c (TARGET_FRAME_POINTER_REQUIRED): Define macro.\n \t(cris_frame_pointer_required): New function.\n-\t\n+\n \t* config/crx/crx.h (FRAME_POINTER_REQUIRED): Remove macro.\n \n \t* config/fr30/fr30.h (FRAME_POINTER_REQUIRED): Remove macro.\n \t* config/fr30/fr30.c (TARGET_FRAME_POINTER_REQUIRED): Define macro.\n \t(fr30_frame_pointer_required): New function.\n-\t\n+\n \t* config/frv/frv.h (FRAME_POINTER_REQUIRED): Remove macro.\n \t* config/frv/frv.c (TARGET_FRAME_POINTER_REQUIRED): Define.\n \t(frv_frame_pointer_required): Make as static, change return type\n@@ -3628,14 +3628,14 @@\n \t* config/m32r/m32r.h (FRAME_POINTER_REQUIRED): Remove macro.\n \n \t* config/mcore/mcore.h (CAN_ELIMINATE): Remove macro.\n-\t\n+\n \t* config/mep/mep.h (FRAME_POINTER_REQUIRED): Remove macro.\n \n \t* config/mips/mips.h (FRAME_POINTER_REQUIRED): Remove macro.\n \t* config/mips/mips.c (TARGET_FRAME_POINTER_REQUIRED): Define macro.\n \t(mips_frame_pointer_required): Make as static.\n \t* config/mips/mips-protos.h (mips_frame_pointer_required): Remove.\n-\t\n+\n \t* config/mmix/mmix.h (FRAME_POINTER_REQUIRED): Remove macro.\n \t* config/mmix/mmix.c (TARGET_FRAME_POINTER_REQUIRED): Define macro.\n \t(mmix_frame_pointer_required): Mew function.\n@@ -3918,7 +3918,7 @@\n \n \t* domwalk.h (struct dom_walk_data): Remove all callbacks except\n \tbefore_dom_children_before_stmts and after_dom_children_after_stmts.\n-\tRename the two remaining callbacks to just before_dom_children and \n+\tRename the two remaining callbacks to just before_dom_children and\n \tafter_dom_children. Remove other GIMPLE statement walking bits.\n \t* domwalk.c (walk_dominator_tree): Remove now unsupported features.\n \t* graphite.c: Do not include domwalk.h.\n@@ -3934,7 +3934,7 @@\n \t(rewrite_leave_block): ... this, place after called functions.\n \t(rewrite_update_init_block): Rename to...\n \t(rewrite_update_enter_block): ... this, place after called functions.\n-\tTest interesting_blocks, call rewrite_update_stmt and \n+\tTest interesting_blocks, call rewrite_update_stmt and\n \trewrite_update_phi_arguments.\n \t(rewrite_update_fini_block): Rename to...\n \t(rewrite_leave_block): ... this, place after called functions.\n@@ -4080,7 +4080,7 @@\n \t* config/rs6000/rs6000-protos.h (rs6000_secondary_reload_class):\n \tChange some of the functions called by macros to being called\n \tthrough a pointer, so debug functions can be inserted if\n-\t-mdebug=addr or -mdebug=cost. \n+\t-mdebug=addr or -mdebug=cost.\n \t(rs6000_preferred_reload_class_ptr): Ditto.\n \t(rs6000_secondary_reload_class_ptr): Ditto.\n \t(rs6000_secondary_memory_needed_ptr): Ditto.\n@@ -4245,7 +4245,7 @@\n \tPR target/40515\n \t* doc/invoke.texi (SH Options): Document -m2a, -m2a-single,\n \t-m2a-single-only and -m2a-nofpu.\n-\t* config/sh/sh.opt: Document m2a generates FPU code.  \n+\t* config/sh/sh.opt: Document m2a generates FPU code.\n \n 2009-06-24  Anatoly Sokolov  <aesok@post.ru>\n \n@@ -4272,10 +4272,10 @@\n \n 2009-06-24  Denis Chertykov  <chertykov@gmail.com>\n \n-\t* doc/contrib.texi (Contributors): \n+\t* doc/contrib.texi (Contributors):\n \n 2009-06-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n-\t\n+\n \tPR middle-end/40501\n \t* tree-ssa-math-opts.c (execute_optimize_bswap): Convert the bswap\n \tsrc and dst operands if necessary.\n@@ -4564,7 +4564,7 @@\n \taway, don't fill in pos_src.  For dst_l == 2 avoid qsort.\n \tAvoid quadratic comparison if !flag_var_tracking_uninit.\n \t(variable_canonicalize): Pass VAR_INIT_STATUS_UNKNOWN to\n-\tunshare_variable unconditionally.   \n+\tunshare_variable unconditionally.\n \t(dataflow_set_different_2): Removed.\n \t(dataflow_set_different): Don't traverse second hash table.\n \t(compute_bb_dataflow): Pass VAR_INIT_STATUS_UNINITIALIZED\n@@ -4757,7 +4757,7 @@\n \t* Makefile.in (install-plugin): Always use DESTDIR.\n \n 2009-06-22  Olivier Hainque  <hainque@adacore.com>\n-\t\n+\n \t* config/pa/pa.c (output_call): Don't optimize post call jumps\n \tinto return address adjustments if the call may throw.\n \n@@ -5054,13 +5054,13 @@\n \t* Makefile.in (OBJS-common): Remove see.o.\n \t(see.o): Remove.\n \t* common.opt (fsee): Mark as preserved for backward compatibility.\n-\t* opts.c (common_handle_option): Add OPT_fsee to the backward \n+\t* opts.c (common_handle_option): Add OPT_fsee to the backward\n \tcompatibility section.\n \t* passes.c (init_optimization_passes, pass_see): Remove pass.\n \t* timevar.def (TV_SEE): Remove.\n \t* tree-pass.h (pass_see): Remove declaration.\n \t* doc/invoke.texi (-fsee): Remove documentation.\n-\t\n+\n 2009-06-18  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-sra.c: Include statistics.h\n@@ -5159,7 +5159,7 @@\n \n \t* collect2.c (main): Use CONST_CAST2 to perform char ** to\n \tconst char ** conversion in AIX specific section.\n-\t\n+\n 2009-06-17  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.c (ix86_special_builtin_type): Remove\n@@ -5272,7 +5272,7 @@\n \n 2009-06-17  Basile Starynkevitch  <basile@starynkevitch.net>\n \n-\t* doc/plugins.texi (Building GCC plugins): Added new section. \n+\t* doc/plugins.texi (Building GCC plugins): Added new section.\n \n 2009-06-17  Ian Lance Taylor  <iant@google.com>\n \n@@ -5497,7 +5497,7 @@\n \treduction variable.\n \t(vect_finalize_reduction): Handle subtraction, fix comments.\n \t(vectorizable_reduction): Handle nested cycles. In case of nested\n-\tcycle keep track of the reduction variable position. Call \n+\tcycle keep track of the reduction variable position. Call\n \tvect_is_simple_reduction with additional parameter. Use original\n \tstatement code in reduction epilogue for nested cycle. Call\n \tvect_create_epilog_for_reduction with additional parameter.\n@@ -5757,7 +5757,7 @@\n \n \tPR target/40327\n \t* arm/constraints.md (Pa, Pb): New constraints.\n-\t* arm/arm.md (thumb1_addsi3): Support more complex additions.  Add a \n+\t* arm/arm.md (thumb1_addsi3): Support more complex additions.  Add a\n \tsplit pattern to deal with them.\n \n 2009-06-13  Joerg Sonnenberger  <joerg@britannica.bec.de>\n@@ -6450,23 +6450,23 @@\n \n 2009-06-08  Ghassan Shobaki  <ghassan.shobaki@amd.com>\n \t    Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n-\t\n-\t* tree-ssa-loop-prefetch.c \n-\t(gather_memory_references): Introduced a counter for the number of \n+\n+\t* tree-ssa-loop-prefetch.c\n+\t(gather_memory_references): Introduced a counter for the number of\n \tmemory references.\n-\t(anything_to_prefetch_p): Introduced a counter for the number of \n+\t(anything_to_prefetch_p): Introduced a counter for the number of\n \tprefetches.\n-\t(is_loop_prefetching_profitable): New function with a cost model \n+\t(is_loop_prefetching_profitable): New function with a cost model\n \tfor prefetching.\n-\t(loop_prefetch_arrays): Use the new cost model to determine if \n+\t(loop_prefetch_arrays): Use the new cost model to determine if\n \tprefetching is profitable.\n-\t* params.def (MIN_INSN_TO_PREFETCH_RATIO, \n+\t* params.def (MIN_INSN_TO_PREFETCH_RATIO,\n \tPREFETCH_MIN_INSN_TO_MEM_RATIO): New parameters.\n-\t* params.h (MIN_INSN_TO_PREFETCH_RATIO, \n+\t* params.h (MIN_INSN_TO_PREFETCH_RATIO,\n \tPREFETCH_MIN_INSN_TO_MEM_RATIO): New parameters.\n-\t* doc/invoke.texi (MIN_INSN_TO_PREFETCH_RATIO, \n+\t* doc/invoke.texi (MIN_INSN_TO_PREFETCT_RATIO,\n \tPREFETCH_MIN_INSN_TO_MEM_RATIO): New parameters.\n-\t\n+\n 2009-06-08  Michael Matz  <matz@suse.de>\n \n \tPR debug/40012\n@@ -6794,15 +6794,15 @@\n \n 2009-06-03  Andrey Belevantsev  <abel@ispras.ru>\n \n-\t* statistics.c (statistics_counter_event): Do not record event \n+\t* statistics.c (statistics_counter_event): Do not record event\n \tin pass\tdump if its number == -1.\n-\t(curr_statistics_hash): Add assert that we never get passes \n+\t(curr_statistics_hash): Add assert that we never get passes\n \twith static number == -1.\n \n 2009-06-03  Richard Guenther  <rguenther@suse.de>\n \t    Andrey Belevantsev  <abel@ispras.ru>\n \n-\t* cfgexpand.c (discover_nonconstant_array_refs_r): Make only \n+\t* cfgexpand.c (discover_nonconstant_array_refs_r): Make only\n \tnon-BLKmode arrays addressable.\n \n 2009-06-03  Maxim Kuvyrkov  <maxim@codesourcery.com>\n@@ -7188,8 +7188,8 @@\n 2009-05-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.ac: Add MPC support.\n-\t\n-\t* config.in, configure: Regenerate.\t\n+\n+\t* config.in, configure: Regenerate.\n \n 2009-05-29  Richard Henderson  <rth@redhat.com>\n \n@@ -7537,7 +7537,7 @@\n \tPR rtl-optimization/40101\n \t* sel-sched-ir.c (get_seqno_by_preds): Allow returning negative\n \tseqno.\tAdjust comment.\n-\t* sel-sched.c (find_seqno_for_bookkeeping): Assert that when \n+\t* sel-sched.c (find_seqno_for_bookkeeping): Assert that when\n \tinserting bookkeeping before a jump, the jump is not scheduled.\n \tWhen no positive seqno found, provide a value.  Add comment.\n \n@@ -7566,7 +7566,7 @@\n 2009-05-29  David Billinghurst <billingd@gcc.gnu.org>\n \n \t* config.gcc: Add i386/t-fprules-softfp and soft-fp/t-softfp\n-\tto tmake_file for i[34567]86-*-cygwin*.\t\n+\tto tmake_file for i[34567]86-*-cygwin*.\n \n 2009-05-29  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -7596,7 +7596,7 @@\n 2009-05-28  Steve Ellcey  <sje@cup.hp.com>\n \n \t* doc/invoke.texi (IA-64 Options):\n-\tAdd -msdata, -mfused-madd, -mno-inline-float-divide, \n+\tAdd -msdata, -mfused-madd, -mno-inline-float-divide,\n \t-mno-inline-int-divide, -mno-inline-sqrt, -msched-spec-ldc,\n \t-msched-spec-control-ldc, -msched-prefer-non-data-spec-insns,\n \t-msched-prefer-non-control-spec-insns,\n@@ -7758,7 +7758,7 @@\n \t(highest_pow2_factor_for_target): Use it instead of relying on\n \timmediate tree attributes of TARGET, not necessarily honored when\n \tintermediate bitfields are involved.\n-\t\n+\n 2009-05-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/40266\n@@ -7989,7 +7989,7 @@\n \tcallused solutions.\n \t* tree-ssa-structalias.c (pass_build_ealias): New.\n \t* tree-pass.h (pass_build_ealias): Declare.\n-\t* passes.c (init_optimization_passes): Add PTA during \n+\t* passes.c (init_optimization_passes): Add PTA during\n \tearly optimizations.\n \t* tree-ssa-alias.c (dump_alias_info): Dump the ESCAPED\n \tand CALLUSED solutions.\n@@ -8009,7 +8009,7 @@\n \tPR tree-optimization/40238\n \t* tree-vect-stmts.c (vect_init_vector): Insert initialization\n \tstatements after basic block's labels.\n-\t* tree-vect-slp.c (vect_slp_transform_bb): Call destroy_bb_vec_info() \n+\t* tree-vect-slp.c (vect_slp_transform_bb): Call destroy_bb_vec_info()\n \tto free the allocated memory.\n \n 2009-05-24  Kaz Kojima  <kkojima@gcc.gnu.org>\n@@ -8038,7 +8038,7 @@\n \t(fini_ssa_operands): Do not free it.\n \t(push_stmt_changes, pop_stmt_changes, discard_stmt_changes): Delete.\n \n-\t* tree-cfg.c (replace_uses_by): Replace pop_stmt_changes with \n+\t* tree-cfg.c (replace_uses_by): Replace pop_stmt_changes with\n \tupdate_stmt, remove the others.  Fix comments.\n \t* tree-dfa.c (optimize_stack_restore): Likewise.\n \t* tree-ssa-forwprop.c (forward_propagate_addr_expr): Likewise.\n@@ -8383,7 +8383,7 @@\n \tnmadddf4_truncsf, maddxf4, maddxf4_truncsf, maddxf4_truncdf,\n \tmsubxf4, msubxf4_truncsf msubxf4_truncdf, nmaddxf4,\n \tnmaddxf4_truncsf, nmaddxf4_truncdf): Check TARGET_FUSED_MADD.\n-\t* config/ia64/vect.md (addv2sf3, subv2sf3): Force fpma/fpms \n+\t* config/ia64/vect.md (addv2sf3, subv2sf3): Force fpma/fpms\n \tinstruction if !TARGET_FUSED_MADD.\n \t(fpma, fpms): Remove colon from name.\n \n@@ -8654,7 +8654,7 @@\n \t* config/arm/arm.c (const_ok_for_op): Split case for IOR for Thumb2.\n \t(arm_gen_constant): Set can_invert for IOR and Thumb2, Add comments.\n \tDon't invert remainder for IOR.\n-\t\n+\n 2009-05-19  Zdenek Dvorak  <ook@ucw.cz>\n \n \tPR tree-optimization/40087\n@@ -8683,7 +8683,7 @@\n \t* c-opt (c_common_post_options): Do not enable Wlogical-op with\n \tWextra.\n \t* doc/invoke.texi (Wlogical-op): Likewise.\n-\t\n+\n 2009-05-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-scalar-evolution.c (follow_ssa_edge_expr) <NOP_EXPR>: Turn\n@@ -8747,7 +8747,7 @@\n \t(add_fdes): Likewise.\n \t(binary_search_unencoded_fdes): Likewise.\n \t(linear_search_fdes): Eliminate type puns.\n-\t\n+\n 2009-05-19  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Do\n@@ -8765,7 +8765,7 @@\n \t(TARGET_LEGITIMATE_ADDRESS_P): New.\n \t* config/sh/sh.h (GO_IF_LEGITIMATE_ADDRESS): Delete.\n \t* config/sh/sh.md: Clean up references to GO_IF_LEGITIMATE_ADDRESS.\n-\t\n+\n 2009-05-18  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR debug/40109\n@@ -9013,19 +9013,19 @@\n \tPR 16302\n \t* fold-const.c (make_range,build_range_check,merge_ranges): Move\n \tdeclaration to...\n-\t(merge_ranges): Returns bool. \n+\t(merge_ranges): Returns bool.\n \t* tree.h (make_range): .. to here.\n \t(build_range_check): Likewise.\n \t(merge_ranges): Likewise. Renamed from merge_ranges.\n \t* c-typeck.c (parser_build_binary_op): Update calls to\n \twarn_logical_operator.\n \t* c-common.c (warn_logical_operator): Add new warning.\n \t* c-common.h (warn_logical_operator): Update declaration.\n-\t\n+\n 2009-05-15  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* ira-conflicts.c (add_insn_allocno_copies): Fix wrong conditional.\n-\t\n+\n 2009-05-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* doc/install.texi: Document MPC requirements, flags etc.\n@@ -9732,11 +9732,11 @@\n \t(stack probe test): Use cbranchdi4.\n \t* config/alpha/predicates.md (alpha_cbranch_operator): New.\n \n-\t* config/arc/arc.c (gen_compare_reg): Do not emit cmp. \n+\t* config/arc/arc.c (gen_compare_reg): Do not emit cmp.\n \t* config/arc/arc.h (movsicc, movsfcc): Use it.\n \t(movdicc, *movdicc_insn, movdfcc, *movdfcc_insn): Remove.\n \t(cbranchsi4, cstoresi4): New.\n-\t(cmpsi, bCC and sCC expanders): Remove. \n+\t(cmpsi, bCC and sCC expanders): Remove.\n \n \t* config/arm/arm.c (arm_compare_op0, arm_compare_op1): Delete.\n \t* config/arm/arm.h (arm_compare_op0, arm_compare_op1): Delete.\n@@ -9773,7 +9773,7 @@\n \t* config/bfin/predicates.md (bfin_cbranch_operator): Rename to...\n \t(bfin_bimode_comparison_operator): ... this.\n \t(bfin_direct_comparison_operator): New.\n- \n+\n \t* config/cris/cris.c (cris_normal_notice_update_cc): Look\n \tinside (compare FOO (const_int 0)).\n \t(cris_rtx_costs): Handle ZERO_EXTRACT.\n@@ -9852,7 +9852,7 @@\n \tfrom *expr.  Update *expr with the BImode comparison to do.\n \t* config/ia64/ia64.md (cmpbi, cmpsi, cmpdi, cmpsf, cmpdf, cmpxf,\n \tcmptf, bCC, sCC, conditional_trap): Delete.\n-\t(cbranchbi4, cbranchsi4, cbranchdi4, cbranchsf4, cbranchdf4, \n+\t(cbranchbi4, cbranchsi4, cbranchdi4, cbranchsf4, cbranchdf4,\n \tcbranchxf4, cbranchtf4, cstorebi4, cstoresi4, cstoredi4, cstoresf4,\n \tcstoredf4, cstorexf4, cstoretf4, ctrapbi4, ctrapsi4, ctrapdi4,\n \tctrapsf4, ctrapdf4, ctrapxf4, ctraptf4): New.\n@@ -9896,7 +9896,7 @@\n \t* config/m32r/m32r.h (m32r_compare_op0, m32r_compare_op1): Delete.\n \t* config/m32r/m32r.md (cmpsi, bCC, sCC): Delete.\n \t(cbranchsi4, cstoresi4): New.\n-\t\n+\n \t* config/m68hc11/m68hc11.c (m68hc11_compare_op0, m68hc11_compare_op1):\n \tDelete.\n \t(m68hc11_rtx_costs_1, m68hc11_rtx_costs): Handle ZERO_EXTRACT.\n@@ -9939,7 +9939,7 @@\n \n \t* config/mcore/mcore-protos.h (arch_compare_op0, arch_compare_op1,\n \tmcore_modify_comparison, mcore_gen_compare_reg): Remove.\n-\t(mcore_gen_compare): New. \n+\t(mcore_gen_compare): New.\n \t* config/mcore/mcore.c (arch_compare_op0, arch_compare_op1): Delete.\n \t(mcore_modify_comparison, mcore_gen_compare_reg): Fold into...\n \t(mcore_gen_compare): ... this.\n@@ -9954,7 +9954,7 @@\n \talways succeed.\n \t(fixuns_truncdfsi2, fixuns_truncdfdi2, fixuns_truncsfsi2,\n \tfixuns_truncsfdi2): Use cbranch patterns.\n-\t(cmp<GPR:mode>, cmp<SCALARF:mode>): Delete. \n+\t(cmp<GPR:mode>, cmp<SCALARF:mode>): Delete.\n \t(b<code>): Change to cbranch<GPR:mode>4 and cbranch<SCALARF:mode>4.\n \tAdjust call to mips_expand_conditional_branch.\n \t(seq, sne, slt<u>, sle<u>, sgt<u>, sge<u>): Change to\n@@ -9967,7 +9967,7 @@\n \tthat it succeeds.  Use op0/op1 instead of cmp_operands.\n \t(mips_expand_conditional_branch, mips_expand_conditional_move,\n \tmips_expand_conditional_trap): Likewise.\n-\t(mips_block_move_loop): Use cbranch patterns. \n+\t(mips_block_move_loop): Use cbranch patterns.\n \t* config/mips/mips.h (cmp_operands): Delete.\n \n \t* config/mmix/mmix.c (mmix_valid_comparison): Delete.\n@@ -10029,7 +10029,7 @@\n \t* config/rs6000/rs6000-protos.h (rs6000_emit_sCOND,\n \trs6000_emit_cbranch): Accept mode and operands.\n \t* config/rs6000/rs6000.c (rs6000_compare_op0, rs6000_compare_op1,\n-\trs6000_compare_fp_p): Delete.   \n+\trs6000_compare_fp_p): Delete.\n \t(rs6000_generate_compare): Accept mode and comparison.  Extract code\n \tand op0/op1 from there.  Replace references to rs6000_compare_op0\n \tand rs6000_compare_op1.\n@@ -10047,7 +10047,7 @@\n \t(stack_protect_test): Use cbranchsi4.\n \t(conditional_trap): Replace with ctrap<GPR>4.\n \t(conditional trap insn): Replace trap_comparison_operator with\n-\tordered_comparison_operator. \n+\tordered_comparison_operator.\n \n \t* config/s390/s390.c (s390_compare_op0, s390_compare_op1): Delete.\n \t(s390_emit_prologue): Use ctrap.\n@@ -10123,7 +10123,7 @@\n \n \t* config/sparc/sparc.c (sparc_compare_op0, sparc_compare_op1): Delete.\n \t(gen_compare_reg): Accept comparison, extract part of it to...\n-\t(gen_compare_reg_1): ... this. \n+\t(gen_compare_reg_1): ... this.\n \t(gen_compare_operator): Delete.\n \t(gen_v9_scc): Accept separate destination, comparison code and arms.\n \tDo not use sparc_compare_op0/sparc_compare_op1.\n@@ -10154,14 +10154,14 @@\n \n \t* config/spu/spu-protos.h (spu_emit_branch_or_set): Change second\n \targument to rtx.\n-\t* config/spu/spu.c (spu_compare_op0, spu_compare_op1): Remove. \n+\t* config/spu/spu.c (spu_compare_op0, spu_compare_op1): Remove.\n \t(spu_emit_branch_or_set): Get code/op0/op1 from second argument.\n \tChange spu_compare_op0/op1 to op0/op1 throughout.  Get target\n \tfrom operands[0] or operands[3] depending on is_set.\n \t* config/spu/spu.h (spu_compare_op0, spu_compare_op1): Remove.\n \t* config/spu/spu.md (cmp<mode:VQHSI>, cmp<mode:DTI>, cmp<mode:VSF>,\n \tcmpdf, bCC), sCC: Remove.\n-\t(cbranch<mode:VQHSI>4, cbranch<mode:DTI>, cbranch<mode:VSF>4, \n+\t(cbranch<mode:VQHSI>4, cbranch<mode:DTI>, cbranch<mode:VSF>4,\n \tcbranchdf4, cstore<mode:VQHSI>4, cstore<mode:DTI>, cstore<mode:VSF>4,\n \tcstoredf4): New.\n \t(mov<mode>cc): Accept ordered_comparison_operator, adjust call to\n@@ -10172,7 +10172,7 @@\n \t* config/stormy16/stormy16.h (xstormy16_compare_op0,\n \txstormy16_compare_op1): Delete.\n \t* config/stormy16/stormy16.c (xstormy16_compare_op0,\n-\txstormy16_compare_op1): Delete. \n+\txstormy16_compare_op1): Delete.\n \t(xstormy16_emit_cbranch): Get op0/op1 from the new arguments.\n \tAdjust calls.\n \t* config/stormy16/stormy16.md (cbranchsi4, cbranchhi4): New.\n@@ -10184,7 +10184,7 @@\n \t(bCC expanders): Delete.\n \t(sCC insns): Fold into...\n \t(*setcc): ... this one.\n-\t(casesi): Do not use gen_cmpsi and gen_bgtu. \n+\t(casesi): Do not use gen_cmpsi and gen_bgtu.\n \t(various splits): Wrap \"naked\" RHS of a cc0 set with COMPARE.\n \t(movsicc): Simplify.\n \t* config/v850/v850.c (v850_rtx_costs): Handle ZERO_EXTRACT in COMPARE.\n@@ -10242,7 +10242,7 @@\n 2009-05-11  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-cp.c (ipcp_cloning_candidate_p): Add missing return false.\n-\t\n+\n 2009-05-11  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-ssa-loop-ivcanon.c: Include target.h\n@@ -10518,7 +10518,7 @@\n \t* tree-eh.c (struct leh_state): Remove prev_try.\n \t(lower_try_finally, lower_catch, lower_eh_filter, lower_cleanup): Do\n \tnot track prev_try.\n-\t* except.c (gen_eh_region_cleanup, duplicate_eh_regions, \n+\t* except.c (gen_eh_region_cleanup, duplicate_eh_regions,\n \tcopy_eh_region_1, copy_eh_region, redirect_eh_edge_to_label,\n \tremove_eh_handler_and_replace, foreach_reachable_handler,\n \tverify_eh_region, verify_eh_tree): Remove tracking of prev_try pointer.\n@@ -10654,11 +10654,11 @@\n \tdataflow.\n \t(fwprop_done): Free use_def_ref.\n \t(fwprop_addr): Eliminate duplicate call to df_set_flags.\n-\t* df-problems.c (df_rd_simulate_artificial_defs_at_top, \n+\t* df-problems.c (df_rd_simulate_artificial_defs_at_top,\n \tdf_rd_simulate_one_insn): New.\n \t(df_rd_bb_local_compute_process_def): Update head comment.\n \t(df_chain_create_bb): Use the new RD simulation functions.\n-\t* df.h (df_rd_simulate_artificial_defs_at_top, \n+\t* df.h (df_rd_simulate_artificial_defs_at_top,\n \tdf_rd_simulate_one_insn): New.\n \t* opts.c (decode_options): Enable fwprop at -O1.\n \t* doc/invoke.texi (-fforward-propagate): Document this.\n@@ -10755,7 +10755,7 @@\n \t* regrename.c (regrename_optimize): Return 0.\n \t(rest_of_handle_regrename): Delete.\n \t(pass_rename_registers): Point to regrename_optimize.\n-\t(struct value_data_entry, struct value_data, \n+\t(struct value_data_entry, struct value_data,\n \tkill_value_one_regno, kill_value_regno, kill_value,\n \tset_value_regno, init_value_data, kill_clobbered_value,\n \tkill_set_value, kill_autoinc_value, copy_value,\n@@ -10823,8 +10823,8 @@\n \t* tree-ssa.c (execute_update_address_taken): Handle TARGET_MEM_REF\n \twhen processing for not_regs_needed bitmap.\n \t* gimple.c (walk_stmt_load_store_addr_ops): When visiting address,\n-\thandle TARGET_MEM_REF in lhs.  Check TMR_BASE for NULL while \n-\thandling it for rhs. \n+\thandle TARGET_MEM_REF in lhs.  Check TMR_BASE for NULL while\n+\thandling it for rhs.\n \n 2009-05-06  H.J. Lu  <hongjiu.lu@intel.com>\n \n@@ -11164,7 +11164,7 @@\n \tSSA rather than trees.\n \t<MULT_EXPR>: Likewise.  Use subexp0 and subexp1 instead of\n \tTREE_OPERAND (exp, 0) and TREE_OPERAND (exp, 1).\n-\t\n+\n 2009-05-03  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-common.c (reswords): Add _Imaginary.\n@@ -11528,7 +11528,7 @@\n \targuments.\n \n 2009-04-29  Bernd Schmidt  <bernd.schmidt@analog.com>\n-\t\n+\n \t* config/bfin/bfin.c (bfin_optimize_loop): Unify handling of\n \tproblematic last insns.  Test for TYPE_CALL rather than CALL_P.\n \tRemove special case testing for last insn of inner loops. Don't fail\n@@ -11701,7 +11701,7 @@\n 2009-04-28  Ira Rosen  <irar@il.ibm.com>\n \n \t* tree-vect-loop-manip.c (vect_create_cond_for_alias_checks):\n-\tUse REPORT_VECTORIZED_LOCATIONS instead \n+\tUse REPORT_VECTORIZED_LOCATIONS instead\n \tREPORT_VECTORIZED_LOOPS.\n \t* tree-vectorizer.c (vect_verbosity_level): Make static.\n \t(vect_loop_location): Rename to vect_location.\n@@ -11714,10 +11714,10 @@\n \t* tree-vectorizer.h (enum vect_def_type): Rename vect_invariant_def\n \tand vect_loop_def to vect_external_def and vect_internal_def.\n \t(enum verbosity_levels): Rename REPORT_VECTORIZED_LOOPS\n-\tand REPORT_UNVECTORIZED_LOOPS to REPORT_VECTORIZED_LOCATIONS and \n+\tand REPORT_UNVECTORIZED_LOOPS to REPORT_VECTORIZED_LOCATIONS and\n \tREPORT_UNVECTORIZED_LOCATIONS.\n \t(enum vect_relevant): Update comment. Rename vect_unused_in_loop\n-\tand vect_used_in_loop and to vect_unused_in_scope and \n+\tand vect_used_in_loop and to vect_unused_in_scope and\n \tvect_used_in_scope.\n \t(STMT_VINFO_RELEVANT_P): Use vect_unused_in_scope.\n \t(vect_verbosity_level): Remove declaration.\n@@ -11741,7 +11741,7 @@\n \t* tree-vect-patterns.c (widened_name_p): Use new names.\n \t(vect_recog_dot_prod_pattern): Likewise.\n \t* tree-vect-stmts.c (vect_stmt_relevant_p): Use new names.\n-\t(process_use, vect_mark_stmts_to_be_vectorized, \n+\t(process_use, vect_mark_stmts_to_be_vectorized,\n \tvect_model_simple_cost, vect_model_store_cost,\n \tvect_get_vec_def_for_operand, vect_get_vec_def_for_stmt_copy,\n \tvectorizable_call, vectorizable_conversion, vectorizable_assignment,\n@@ -11869,7 +11869,7 @@\n \t(pic, calls_alloca, calls_eh_return, leaf_function): Likewise.\n \t(delayed_branch, tls_call_delay): Likewise.\n \t(eligible_for_sibcall_delay): Likewise.\n-\t(eligible_for_return_delay): Likewise. \n+\t(eligible_for_return_delay): Likewise.\n \t* config/spu/spu.c (expand_builtin_args): Add cast to enum type.\n \t(spu_expand_builtin_1): Likewise.\n \n@@ -12109,7 +12109,7 @@\n \t* builtins.c (fold_builtin_next_arg): Handle SSA names.\n \t* tree-ssa-copyrename.c (rename_ssa_copies): Use ssa_name() directly.\n \t* tree-ssa-coalesce.c (create_outofssa_var_map): Mark only useful\n-\tSSA names. \n+\tSSA names.\n \t(compare_pairs): Swap cost comparison.\n \t(coalesce_ssa_name): Don't use change_partition_var.\n \t* tree-nrv.c (struct nrv_data): Add modified member.\n@@ -12503,7 +12503,7 @@\n \t* config/i386/gas.h (GAS_MNEMONICS): Remove.\n \n 2009-04-25  Ben Elliston  <bje@au.ibm.com>\n- \n+\n \t* genrecog.c (validate_pattern): Do not warn for VOIDmode CALLs as\n \tthe source of a set operation.\n \n@@ -12538,7 +12538,7 @@\n \tCONSTRAINT_NUM_DEFINED_P macro.\n \t* ira.c (setup_cover_and_important_classes): Use\n \tCONSTRAINT_NUM_DEFINED_P instead of CONSTRAINT__LIMIT in #ifdef.\n-\t\n+\n 2009-04-24  DJ Delorie  <dj@redhat.com>\n \n \t* config/sh/sh.h (LIBGCC2_DOUBLE_TYPE_SIZE): Test\n@@ -12944,8 +12944,8 @@\n 2009-04-22  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/39580\n-\t* sel-sched-ir.c (insert_in_history_vect): Remove incorrect gcc_assert. \n-\t\n+\t* sel-sched-ir.c (insert_in_history_vect): Remove incorrect gcc_assert.\n+\n 2009-04-22  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* function.c (expand_function_end): Do not emit a jump to the \"naked\"\n@@ -12986,7 +12986,7 @@\n \t* config/alpha/alpha.md: Ditto.\n \t* config/alpha/constraints.md: Ditto.\n \t* config/alpha/predicates.md: Ditto.\n-\t\n+\n 2009-04-22  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* defaults.h (GO_IF_MODE_DEPENDENT_ADDRESS): Provide empty default.\n@@ -13053,7 +13053,7 @@\n \t(push_fpscr): Use add_reg_note.\n \t(pop_fpscr, movdf_i4+1, reload_outdf__RnFRm+3, reload_outdf__RnFRm+4,\n \treload_outdf__RnFRm+5, fpu_switch+1, fpu_switch+2): Likewise.\n-\t\n+\n 2009-04-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* ABOUT-GCC-NLS, ChangeLog, ChangeLog-1997, ChangeLog-1998,"}, {"sha": "6719220b19370818378c22ce5d9cad5e9c4a9489", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f100a4a841e1247f0ea73c93368306fb86f12954/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f100a4a841e1247f0ea73c93368306fb86f12954/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f100a4a841e1247f0ea73c93368306fb86f12954", "patch": "@@ -79,7 +79,7 @@\n        * c-c++-common/Wconversion-real.c: ... here.\n        * lib/target-supports.exp\n        (check_effective_target_c,check_effective_target_c++): New.\n-\t\n+\n 2009-08-10  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/37425\n@@ -706,7 +706,7 @@\n \n \tPR c/39902\n \t* gcc.dg/dfp/pr39902.c: Fix typos in constant suffixes.\n-\t\n+\n 2009-07-30  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/40570\n@@ -975,8 +975,8 @@\n \n 2009-07-20  Jakub Jelinek  <jakub@redhat.com>\n \n-\t* gcc.dg/builtin-object-size-6.c: Adjust expected values. \n-\t* gcc.dg/builtin-object-size-8.c: New test. \n+\t* gcc.dg/builtin-object-size-6.c: Adjust expected values.\n+\t* gcc.dg/builtin-object-size-8.c: New test.\n \t* g++.dg/ext/builtin-object-size1.C: Adjust expected values.\n \t* g++.dg/ext/builtin-object-size2.C: Likewise.\n \n@@ -990,9 +990,9 @@\n \tgcc.dg/vect/vect-cond-5.c, gcc.dg/vect/vect-cond-6.c: New tests.\n \n 2009-07-20  Christian Bruel  <christian.bruel@st.com>\n-\t\n+\n \t* gcc.target/sh/mfmovd.c: New test.\n-\t\n+\n 2009-07-19  Janne Blomqvist  <jb@gcc.gnu.org>\n \t    Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n@@ -1082,7 +1082,7 @@\n 2009-07-17  Aldy Hernandez  <aldyh@redhat.com>\n \t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n-\tPR 40435 \n+\tPR 40435\n \t* gcc.dg/pr36902.c: Add column info.\n \t* g++.dg/gcov/gcov-2.C: Change count for definition.\n \n@@ -1437,7 +1437,7 @@\n \t* gcc.dg/plugin/selfassign.c: Replace %H by an explicit\n \tlocation. Update all calls.\n \t* g++.dg/plugin/selfassign.c: Likewise.\n-\t\n+\n 2009-07-06  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/rtti/dyncast[34].C: New.\n@@ -1481,7 +1481,7 @@\n \n \tPR target/40587\n \t* gfortran.dg/pr40587.f: New test.\n-\t\n+\n 2009-07-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/40638\n@@ -1904,7 +1904,7 @@\n \n \tPR target/40482\n \t* gcc.target/arm/pr40482.c: New test.\n-\t\n+\n 2009-06-19  Ian Lance Taylor  <iant@google.com>\n \n \t* gcc.dg/Wcxx-compat-18.c: New testcase.\n@@ -1960,7 +1960,7 @@\n 2009-06-18  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* gcc.dg/cpp/arith-3.c: Add column info.\n-\t\n+\n 2009-06-18  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gcc.target/arm/fp16-compile-none-2.c: New.\n@@ -2232,7 +2232,7 @@\n \t* gcc.dg/pr20368-1.c: Same.\n \t* gcc.dg/dremf-type-compat-3.c: Same.\n \t* gcc.dg/builtins-30.c: Same.  Test for columns.\n-\t\n+\n 2009-06-12  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/40176\n@@ -2865,15 +2865,15 @@\n 2009-05-24  Ira Rosen  <irar@il.ibm.com>\n \n \t* gcc.dg/vect/bb-slp-1.c: New test.\n-\t* gcc.dg/vect/bb-slp-2.c, gcc.dg/vect/bb-slp-3.c, \n-\tgcc.dg/vect/bb-slp-4.c, gcc.dg/vect/bb-slp-5.c, \n+\t* gcc.dg/vect/bb-slp-2.c, gcc.dg/vect/bb-slp-3.c,\n+\tgcc.dg/vect/bb-slp-4.c, gcc.dg/vect/bb-slp-5.c,\n \tgcc.dg/vect/bb-slp-6.c, gcc.dg/vect/bb-slp-7.c,\n-\tgcc.dg/vect/bb-slp-8.c, gcc.dg/vect/bb-slp-9.c, \n-\tgcc.dg/vect/bb-slp-10.c, gcc.dg/vect/bb-slp-11.c, \n-\tgcc.dg/vect/no-tree-reassoc-bb-slp-12.c, gcc.dg/vect/bb-slp-13.c, \n-\tgcc.dg/vect/bb-slp-14.c, gcc.dg/vect/bb-slp-15.c, \n-\tgcc.dg/vect/bb-slp-16.c, gcc.dg/vect/bb-slp-17.c, \n-\tgcc.dg/vect/bb-slp-18.c, gcc.dg/vect/bb-slp-19.c, \n+\tgcc.dg/vect/bb-slp-8.c, gcc.dg/vect/bb-slp-9.c,\n+\tgcc.dg/vect/bb-slp-10.c, gcc.dg/vect/bb-slp-11.c,\n+\tgcc.dg/vect/no-tree-reassoc-bb-slp-12.c, gcc.dg/vect/bb-slp-13.c,\n+\tgcc.dg/vect/bb-slp-14.c, gcc.dg/vect/bb-slp-15.c,\n+\tgcc.dg/vect/bb-slp-16.c, gcc.dg/vect/bb-slp-17.c,\n+\tgcc.dg/vect/bb-slp-18.c, gcc.dg/vect/bb-slp-19.c,\n \tgcc.dg/vect/bb-slp-20.c, gcc.dg/vect/bb-slp-21.c,\n \tgcc.dg/vect/bb-slp-22.c: Likewise.\n \t* gcc.dg/vect/vect.exp: Run basic block SLP tests.\n@@ -2983,7 +2983,7 @@\n \n \tPR c/40172\n \t* gcc.dg/pr40172.c: Add -Wlogical-op to dg-options.\n-\t\n+\n 2009-05-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/loop_optimization6.ad[sb]: New test.\n@@ -3154,10 +3154,10 @@\n \t* gfortran.dg/duplicate_type_3.f90: New.\n \n 2009-05-14  Laurent GUERBY  <laurent@guerby.net>\n-\t\n+\n \t* ada/acats/tests/c3/c38202a.ada: Use Impdef.\n \t* ada/acats/tests/c5/c59002c.ada: Likewise.\n-\t\n+\n 2009-05-13  Taras Glek  <tglek@mozilla.com>\n \n \t* g++.dg/plugin/attribute_plugin-test-1.C: Testcase input for custom\n@@ -3183,7 +3183,7 @@\n \t* gcc.dg/cpp/pr36674.i: New.\n \n 2009-05-14  Ben Elliston  <bje@au.ibm.com>\n-\t \n+\n \tPR middle-end/40035\n \t* gcc.c-torture/compile/pr40035.c: New test.\n \n@@ -3208,7 +3208,7 @@\n \n 2009-05-12  David Billinghurst <billingd@gcc.gnu.org>\n \n-\t* gfortran.dg/default_format_1.f90: XFAIL on cygwin. \n+\t* gfortran.dg/default_format_1.f90: XFAIL on cygwin.\n \n 2009-05-12  David Billinghurst <billingd@gcc.gnu.org>\n \n@@ -3774,7 +3774,7 @@\n \t* gfortran.dg/write_check3.f90: Likewise\n \t* gfortran.dg/write_rewind_2.f: Likewise\n \t* gfortran.dg/x_slash_2.f: Likewise\n-\t\n+\n 2009-04-29  Richard Guenther  <rguenther@suse.de>\n \n \tPR target/39943\n@@ -3839,7 +3839,7 @@\n \t* g++.dg/template/repo7.C: Likewise.\n \t* g++.dg/template/repo8.C: Likewise.\n \t* g++.dg/template/repo9.C: Likewise.\n-\t* g++.dg/rtti/repo1.C: Likewise.\t\n+\t* g++.dg/rtti/repo1.C: Likewise.\n \t* gcc.dg/cpp/_Pragma6.c: Skip for vxworks.\n \t* g++.dg/cpp/_Pragma1.C: Skip for vxworks.\n \t* gcc.dg/pthread-init-1.c: Xfail for vxworks rtp.\n@@ -4204,7 +4204,7 @@\n \tPR testsuite/39623\n \t* gcc.dg/vect/no-vfa-vect-57.c: XFAIL when vect_no_align.\n \t* gcc.dg/vect/no-vfa-vect-61.c: Ditto.\n-\t\n+\n 2009-04-23  Rafael Avila de Espindola  <espindola@google.com>\n \n \t* gcc.dg/format/gcc_diag-1.c (foo): Don't check that %E produces a\n@@ -4243,7 +4243,7 @@\n \n \tPR testsuite/39623\n \t* gcc.dg/vect/no-vfa-vect-43.c Fix vect_no_align check.\n-\t\n+\n 2009-04-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/39824\n@@ -4885,7 +4885,7 @@\n 2009-04-06  Laurent GUERBY  <laurent@guerby.net>\n \n \t* lib/gnat.exp: Handle multilib.\n-\t\n+\n 2009-04-06  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/38863\n@@ -5420,7 +5420,7 @@\n \n \tPR objc/27377\n \t* objc.dg/conditional-1.m: New tests.\n-\t\n+\n 2009-03-28  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* gcc.dg/winline-10.c: New test.\n@@ -5681,7 +5681,7 @@\n 2009-03-23  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/auto12.C: Add variadic test.\n-\t\n+\n \tPR c++/39526\n \t* g++.dg/warn/Wshadow-4.C: New test.\n \n@@ -6016,8 +6016,8 @@\n \t* gcc.dg/vect/vect-complex-1.c: Add attribute aligned to the arrays.\n \t* gcc.dg/vect/vect-iv-6.c: Don't expect to fail to vectorize\n \ton targets without vector misalignment support.\n-\t* lib/target-supports.exp \n-\t(check_effective_target_vect_short_mult): Add \n+\t* lib/target-supports.exp\n+\t(check_effective_target_vect_short_mult): Add\n \tcheck_effective_target_arm32.\n \n 2009-03-02  Sebastian Pop  <sebastian.pop@amd.com>\n@@ -6363,7 +6363,7 @@\n 2009-02-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/struct/w_prof_single_str_global.c: Mask return value.\n-\t\n+\n 2009-02-13  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* gcc.target/spu/intrinsics-sr.c: New test.\n@@ -6703,7 +6703,7 @@\n \tPR middle-end/35854\n \t* gcc.dg/lower-subreg-1.c: Renamed dump pass from \"subreg\"\n \tto \"subreg1\".\n-\t\n+\n 2009-01-29  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR middle-end/38857\n@@ -7177,7 +7177,7 @@\n \t* g++.dg/eh/check-vect.h (sig_ill_handler): Remove AltiVec runtime\n \tcheck.\n \t* g++.dg/ext/altivec_check.h: Delete.\n-\t\n+\n 2009-01-13  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* gcc.target/powerpc/altivec-macros.c: Require a powerpc_altivec_ok\n@@ -7572,7 +7572,7 @@\n \tdg-timeout-factor.\n \t* gcc.dg/20020425-1.c: Likewise.\n \t* gcc.dg/pch/pch.exp: Likewise.\n-\t\n+\n 2009-01-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/38657\n@@ -7587,7 +7587,7 @@\n \n \tPR fortran/38669\n \tPR fortran/38726\n-\t* gfortran.dg/elemental_subroutine_7.f90: \n+\t* gfortran.dg/elemental_subroutine_7.f90:\n \tFix p values so that it can be used as vector subscript.\n \n 2009-01-05  Jason Merrill  <jason@redhat.com>"}]}