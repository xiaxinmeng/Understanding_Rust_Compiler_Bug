{"sha": "ebef2728229324d5818fbf958cf14c77e5e61921", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJlZjI3MjgyMjkzMjRkNTgxOGZiZjk1OGNmMTRjNzdlNWU2MTkyMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-12T17:29:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-12T17:29:24Z"}, "message": "(expand_call): When preserving subexpressions, don't put expensive\narguments directly into hard registers.\n\nFrom-SVN: r6543", "tree": {"sha": "20fe87ef01d28a66b3f6ad70cdbee70fb8c1fae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20fe87ef01d28a66b3f6ad70cdbee70fb8c1fae4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebef2728229324d5818fbf958cf14c77e5e61921", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebef2728229324d5818fbf958cf14c77e5e61921", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebef2728229324d5818fbf958cf14c77e5e61921", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebef2728229324d5818fbf958cf14c77e5e61921/comments", "author": null, "committer": null, "parents": [{"sha": "99360286e576de3a3e03d52fe1d8d5656d75cdcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99360286e576de3a3e03d52fe1d8d5656d75cdcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99360286e576de3a3e03d52fe1d8d5656d75cdcc"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "4f3e61b36d9faf4073034799dabcafeee5777f85", "filename": "gcc/calls.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebef2728229324d5818fbf958cf14c77e5e61921/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebef2728229324d5818fbf958cf14c77e5e61921/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=ebef2728229324d5818fbf958cf14c77e5e61921", "patch": "@@ -1,5 +1,5 @@\n /* Convert function calls to rtl insns, for GNU C compiler.\n-   Copyright (C) 1989, 1992, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1992, 1993, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -1566,6 +1566,18 @@ expand_call (exp, target, ignore)\n \t    = convert_modes (args[i].mode,\n \t\t\t     TYPE_MODE (TREE_TYPE (args[i].tree_value)),\n \t\t\t     args[i].value, args[i].unsignedp);\n+\n+\t/* If the value is expensive, and we are inside an appropriately \n+\t   short loop, put the value into a pseudo and then put the pseudo\n+\t   into the hard reg.  */\n+\n+\tif ((! (GET_CODE (args[i].value) == REG\n+\t\t|| (GET_CODE (args[i].value) == SUBREG\n+\t\t    && GET_CODE (SUBREG_REG (args[i].value)) == REG)))\n+\t    && args[i].mode != BLKmode\n+\t    && rtx_cost (args[i].value, SET) > 2\n+\t    && preserve_subexpressions_p ())\n+\t  args[i].value = copy_to_mode_reg (args[i].mode, args[i].value);\n       }\n \n #if defined(ACCUMULATE_OUTGOING_ARGS) && defined(REG_PARM_STACK_SPACE)"}]}