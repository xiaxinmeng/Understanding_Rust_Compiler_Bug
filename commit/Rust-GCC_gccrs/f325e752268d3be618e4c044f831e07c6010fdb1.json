{"sha": "f325e752268d3be618e4c044f831e07c6010fdb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMyNWU3NTIyNjhkM2JlNjE4ZTRjMDQ0ZjgzMWUwN2M2MDEwZmRiMQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-06-01T17:27:20Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-06-01T17:27:20Z"}, "message": "PR middle-end/90694 - incorrect representation of ADDR_EXPR involving a pointer to array\n\ngcc/ChangeLog:\n\n\tPR middle-end/90694\n\t* tree-pretty-print.c (dump_generic_node): Add parentheses.\n\ngcc/testsuite/ChangeLog:\n\n\tPR middle-end/90694\n\t* gcc.dg/tree-ssa/dump-5.c: New test.\n\nFrom-SVN: r271838", "tree": {"sha": "947736b0c739662bc43f3866327b39f335d474ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/947736b0c739662bc43f3866327b39f335d474ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f325e752268d3be618e4c044f831e07c6010fdb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f325e752268d3be618e4c044f831e07c6010fdb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f325e752268d3be618e4c044f831e07c6010fdb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f325e752268d3be618e4c044f831e07c6010fdb1/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4b44fd741ee25aa5ad086949ccfbcbd3736c0f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4b44fd741ee25aa5ad086949ccfbcbd3736c0f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4b44fd741ee25aa5ad086949ccfbcbd3736c0f3"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "20bdc2bec37aca9db029bd6bda022e31654f3484", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f325e752268d3be618e4c044f831e07c6010fdb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f325e752268d3be618e4c044f831e07c6010fdb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f325e752268d3be618e4c044f831e07c6010fdb1", "patch": "@@ -1,3 +1,8 @@\n+2019-06-01  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/90694\n+\t* tree-pretty-print.c (dump_generic_node): Add parentheses.\n+\n 2019-05-31  Jan Hubicka  <jh@suse.cz>\n \n \t* alias.c: Include ipa-utils.h."}, {"sha": "0108097262b0a7bfbaee8a5122ee6601065d962d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f325e752268d3be618e4c044f831e07c6010fdb1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f325e752268d3be618e4c044f831e07c6010fdb1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f325e752268d3be618e4c044f831e07c6010fdb1", "patch": "@@ -1,3 +1,8 @@\n+2019-06-01  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/90694\n+\t* gcc.dg/tree-ssa/dump-5.c: New test.\n+\n 2019-05-31  Jan Hubicka  <jh@suse.cz>\n \n \t* g++.dg/lto/alias-1_0.C: New testcase."}, {"sha": "6807b5e9ef4fdee5e1e3423e808481981a174209", "filename": "gcc/testsuite/gcc.dg/tree-ssa/dump-5.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f325e752268d3be618e4c044f831e07c6010fdb1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fdump-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f325e752268d3be618e4c044f831e07c6010fdb1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fdump-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fdump-5.c?ref=f325e752268d3be618e4c044f831e07c6010fdb1", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/90694 - incorrect representation of ADDR_EXPR involving\n+   a pointer to array\n+   { dg-do compile }\n+   { dg-options \"-fdump-tree-original\" } */\n+\n+typedef char A8[8];\n+\n+unsigned f (A8 *pa)\n+{\n+  return __builtin_strlen (&(*pa)[2]);\n+}\n+\n+/* Veriy the expression is correct in the dump:\n+  { dg-final { scan-tree-dump-not \"\\\\\\&\\\\\\*pa\\\\\\[2\\\\\\]\" \"original\" } }\n+  { dg-final { scan-tree-dump \"\\\\\\&\\\\\\(\\\\\\*pa\\\\\\)\\\\\\[2\\\\\\]\" \"original\" } } */"}, {"sha": "1d6eae101ee7e27fd261b73761a8a16cb8a7df91", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f325e752268d3be618e4c044f831e07c6010fdb1/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f325e752268d3be618e4c044f831e07c6010fdb1/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=f325e752268d3be618e4c044f831e07c6010fdb1", "patch": "@@ -1679,9 +1679,17 @@ dump_generic_node (pretty_printer *pp, tree node, int spc, dump_flags_t flags,\n \t  {\n \t    if (TREE_CODE (TREE_OPERAND (node, 0)) != ADDR_EXPR)\n \t      {\n+\t\t/* Enclose pointers to arrays in parentheses.  */\n+\t\ttree op0 = TREE_OPERAND (node, 0);\n+\t\ttree op0type = TREE_TYPE (op0);\n+\t\tif (POINTER_TYPE_P (op0type)\n+\t\t    && TREE_CODE (TREE_TYPE (op0type)) == ARRAY_TYPE)\n+\t\t  pp_left_paren (pp);\n \t\tpp_star (pp);\n-\t\tdump_generic_node (pp, TREE_OPERAND (node, 0),\n-\t\t\t\t   spc, flags, false);\n+\t\tdump_generic_node (pp, op0, spc, flags, false);\n+\t\tif (POINTER_TYPE_P (op0type)\n+\t\t    && TREE_CODE (TREE_TYPE (op0type)) == ARRAY_TYPE)\n+\t\t  pp_right_paren (pp);\n \t      }\n \t    else\n \t      dump_generic_node (pp,"}]}