{"sha": "3d7beb79e0631c7ca8532c497295af03822eeed2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q3YmViNzllMDYzMWM3Y2E4NTMyYzQ5NzI5NWFmMDM4MjJlZWVkMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-02-26T20:34:46Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-02-26T20:34:46Z"}, "message": "PR libstdc++/89416 fix alloc insertable trait for clang (again)\n\n\tPR libstdc++/89416\n\t* include/bits/alloc_traits.h (__is_alloc_insertable_impl): Change\n\tto class template and partial specialization using void_t.\n\t(__is_copy_insertable, __is_move_insertable): Adjust base class.\n\nFrom-SVN: r269229", "tree": {"sha": "b44c104dc45d5d8606e71fcdbc5353bf8c96e680", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b44c104dc45d5d8606e71fcdbc5353bf8c96e680"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d7beb79e0631c7ca8532c497295af03822eeed2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7beb79e0631c7ca8532c497295af03822eeed2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d7beb79e0631c7ca8532c497295af03822eeed2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7beb79e0631c7ca8532c497295af03822eeed2/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec2d749a10606629e257ff6e7a7435289c9068d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2d749a10606629e257ff6e7a7435289c9068d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec2d749a10606629e257ff6e7a7435289c9068d8"}], "stats": {"total": 51, "additions": 28, "deletions": 23}, "files": [{"sha": "d6ae3226effbcfa3a787b5a721b790a1117ca22d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7beb79e0631c7ca8532c497295af03822eeed2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7beb79e0631c7ca8532c497295af03822eeed2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3d7beb79e0631c7ca8532c497295af03822eeed2", "patch": "@@ -1,3 +1,10 @@\n+2019-02-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/89416\n+\t* include/bits/alloc_traits.h (__is_alloc_insertable_impl): Change\n+\tto class template and partial specialization using void_t.\n+\t(__is_copy_insertable, __is_move_insertable): Adjust base class.\n+\n 2019-02-24  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/89416"}, {"sha": "b8689daf74b7623f2fc820010cf87cb26fa255b6", "filename": "libstdc++-v3/include/bits/alloc_traits.h", "status": "modified", "additions": 21, "deletions": 23, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7beb79e0631c7ca8532c497295af03822eeed2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falloc_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7beb79e0631c7ca8532c497295af03822eeed2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falloc_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falloc_traits.h?ref=3d7beb79e0631c7ca8532c497295af03822eeed2", "patch": "@@ -576,32 +576,28 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __do_alloc_on_swap(__one, __two, __pocs());\n     }\n \n-  class __is_alloc_insertable_impl\n-  {\n-    template<typename _Alloc, typename _Up,\n-\t     typename _Tp = __remove_cvref_t<_Up>,\n-\t     typename = decltype(allocator_traits<_Alloc>::construct(\n-\t\t   std::declval<_Alloc&>(), std::declval<_Tp*>(),\n-\t\t   std::declval<_Up>()))>\n-      static true_type\n-      _M_select(int);\n-\n-    template<typename, typename>\n-      static false_type\n-      _M_select(...);\n-\n-  public:\n-    template<typename _Alloc, typename _Tp = typename _Alloc::value_type>\n-      using copy = decltype(_M_select<_Alloc, const _Tp&>(0));\n-\n-    template<typename _Alloc, typename _Tp = typename _Alloc::value_type>\n-      using move = decltype(_M_select<_Alloc, _Tp>(0));\n-  };\n+  template<typename _Alloc, typename _Tp,\n+\t   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,\n+\t   typename = void>\n+    struct __is_alloc_insertable_impl\n+    : false_type\n+    { };\n+\n+  template<typename _Alloc, typename _Tp, typename _ValueT>\n+    struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,\n+      __void_t<decltype(allocator_traits<_Alloc>::construct(\n+\t\t   std::declval<_Alloc&>(), std::declval<_ValueT*>(),\n+\t\t   std::declval<_Tp>()))>>\n+    : true_type\n+    { };\n \n   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc\n+  // (might be wrong if _Alloc::construct exists but is not constrained,\n+  // i.e. actually trying to use it would still be invalid. Use with caution.)\n   template<typename _Alloc>\n     struct __is_copy_insertable\n-    : __is_alloc_insertable_impl::template copy<_Alloc>\n+    : __is_alloc_insertable_impl<_Alloc,\n+\t\t\t\t typename _Alloc::value_type const&>::type\n     { };\n \n   // std::allocator<_Tp> just requires CopyConstructible\n@@ -611,9 +607,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { };\n \n   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc\n+  // (might be wrong if _Alloc::construct exists but is not constrained,\n+  // i.e. actually trying to use it would still be invalid. Use with caution.)\n   template<typename _Alloc>\n     struct __is_move_insertable\n-    : __is_alloc_insertable_impl::template move<_Alloc>\n+    : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type\n     { };\n \n   // std::allocator<_Tp> just requires MoveConstructible"}]}