{"sha": "6c2f0f83a5c02bf30aebbba56d78687023ab0ea0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMyZjBmODNhNWMwMmJmMzBhZWJiYmE1NmQ3ODY4NzAyM2FiMGVhMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-03-13T07:06:51Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-03-13T07:06:51Z"}, "message": "i386.h (TARGET_TLS_INDIRECT_SEG_REFS): New.\n\n\t* config/i386/i386.h (TARGET_TLS_INDIRECT_SEG_REFS): New.\n\t* config/i386/i386.c (ix86_decompose_address): Use\n\tTARGET_TLS_INDIRECT_SEG_REFS to prevent %fs:(%reg) addresses.\n\t(legitimize_tls_address): Use TARGET_TLS_INDIRECT_SEG_REFS to load\n\tthread pointer to a register.\n\nFrom-SVN: r185278", "tree": {"sha": "341c7eaa36dd4efddab3badf0da764789a3e714b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/341c7eaa36dd4efddab3badf0da764789a3e714b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c2f0f83a5c02bf30aebbba56d78687023ab0ea0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c2f0f83a5c02bf30aebbba56d78687023ab0ea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c2f0f83a5c02bf30aebbba56d78687023ab0ea0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c2f0f83a5c02bf30aebbba56d78687023ab0ea0/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a89ff70f6d482ccacab2cf72cafa6554342f83c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a89ff70f6d482ccacab2cf72cafa6554342f83c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a89ff70f6d482ccacab2cf72cafa6554342f83c2"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "7ae846459c5310cc66533e3ea39da4333af17906", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c2f0f83a5c02bf30aebbba56d78687023ab0ea0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c2f0f83a5c02bf30aebbba56d78687023ab0ea0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c2f0f83a5c02bf30aebbba56d78687023ab0ea0", "patch": "@@ -1,3 +1,11 @@\n+2012-03-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.h (TARGET_TLS_INDIRECT_SEG_REFS): New.\n+\t* config/i386/i386.c (ix86_decompose_address): Use\n+\tTARGET_TLS_INDIRECT_SEG_REFS to prevent %fs:(%reg) addresses.\n+\t(legitimize_tls_address): Use TARGET_TLS_INDIRECT_SEG_REFS to load\n+\tthread pointer to a register.\n+\n 2012-03-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.md (*tls_global_dynamic_64_<mode>): Remove :P"}, {"sha": "e3668927cb6d76536ffd363082ea90b852bf6106", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c2f0f83a5c02bf30aebbba56d78687023ab0ea0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c2f0f83a5c02bf30aebbba56d78687023ab0ea0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6c2f0f83a5c02bf30aebbba56d78687023ab0ea0", "patch": "@@ -11552,11 +11552,6 @@ ix86_decompose_address (rtx addr, struct ix86_address *out)\n   else\n     disp = addr;\t\t\t/* displacement */\n \n-  /* Since address override works only on the (reg32) part in fs:(reg32),\n-     we can't use it as memory operand.  */\n-  if (Pmode != word_mode && seg == SEG_FS && (base || index))\n-    return 0;\n-\n   if (index)\n     {\n       if (REG_P (index))\n@@ -11568,6 +11563,10 @@ ix86_decompose_address (rtx addr, struct ix86_address *out)\n \treturn 0;\n     }\n \n+  if (seg != SEG_DEFAULT && (base || index)\n+      && !TARGET_TLS_INDIRECT_SEG_REFS)\n+    return 0;\n+\n   /* Extract the integral value of scale.  */\n   if (scale_rtx)\n     {\n@@ -12696,7 +12695,9 @@ legitimize_tls_address (rtx x, enum tls_model model, bool for_mov)\n \n       if (TARGET_64BIT || TARGET_ANY_GNU_TLS)\n \t{\n-          base = get_thread_pointer (for_mov || !TARGET_TLS_DIRECT_SEG_REFS);\n+          base = get_thread_pointer (for_mov\n+\t\t\t\t     || !(TARGET_TLS_DIRECT_SEG_REFS\n+\t\t\t\t\t  && TARGET_TLS_INDIRECT_SEG_REFS));\n \t  off = force_reg (Pmode, off);\n \t  return gen_rtx_PLUS (Pmode, base, off);\n \t}\n@@ -12716,7 +12717,9 @@ legitimize_tls_address (rtx x, enum tls_model model, bool for_mov)\n \n       if (TARGET_64BIT || TARGET_ANY_GNU_TLS)\n \t{\n-\t  base = get_thread_pointer (for_mov || !TARGET_TLS_DIRECT_SEG_REFS);\n+\t  base = get_thread_pointer (for_mov\n+\t\t\t\t     || !(TARGET_TLS_DIRECT_SEG_REFS\n+\t\t\t\t\t  && TARGET_TLS_INDIRECT_SEG_REFS));\n \t  return gen_rtx_PLUS (Pmode, base, off);\n \t}\n       else\n@@ -13249,7 +13252,8 @@ ix86_delegitimize_tls_address (rtx orig_x)\n   rtx x = orig_x, unspec;\n   struct ix86_address addr;\n \n-  if (!TARGET_TLS_DIRECT_SEG_REFS)\n+  if (!(TARGET_TLS_DIRECT_SEG_REFS\n+\t&& TARGET_TLS_INDIRECT_SEG_REFS))\n     return orig_x;\n   if (MEM_P (x))\n     x = XEXP (x, 0);"}, {"sha": "c7d645eef65aa22b07415aacb5d603ae33b381e3", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c2f0f83a5c02bf30aebbba56d78687023ab0ea0/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c2f0f83a5c02bf30aebbba56d78687023ab0ea0/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=6c2f0f83a5c02bf30aebbba56d78687023ab0ea0", "patch": "@@ -467,6 +467,9 @@ extern int x86_prefetch_sse;\n #define TARGET_TLS_DIRECT_SEG_REFS_DEFAULT 0\n #endif\n \n+/* Address override works only on the (%reg) part of %fs:(%reg).  */\n+#define TARGET_TLS_INDIRECT_SEG_REFS (Pmode == word_mode)\n+\n /* Fence to use after loop using storent.  */\n \n extern tree x86_mfence;"}]}