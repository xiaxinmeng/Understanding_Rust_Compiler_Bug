{"sha": "da178d566a0731534f369273fa9480e1210cb01c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGExNzhkNTY2YTA3MzE1MzRmMzY5MjczZmE5NDgwZTEyMTBjYjAxYw==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2016-03-29T16:20:39Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2016-03-29T16:20:39Z"}, "message": "re PR rtl-optimization/68695 (Performance regression related to ssa patch / ifcvt)\n\n2016-03-29  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/68695\n\t* ira-color.c (allocno_copy_cost_saving): New.\n\t(improve_allocation): Use it.\n\nFrom-SVN: r234527", "tree": {"sha": "f3cbdf87c5ac610a52cc2cd1254cfa127aa4082d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3cbdf87c5ac610a52cc2cd1254cfa127aa4082d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da178d566a0731534f369273fa9480e1210cb01c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da178d566a0731534f369273fa9480e1210cb01c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da178d566a0731534f369273fa9480e1210cb01c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da178d566a0731534f369273fa9480e1210cb01c/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d74282aa814229b2fc2f595cec18858051f655e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d74282aa814229b2fc2f595cec18858051f655e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d74282aa814229b2fc2f595cec18858051f655e"}], "stats": {"total": 52, "additions": 44, "deletions": 8}, "files": [{"sha": "8f40bcc01090048008bb73cf4c279b4742d4f50b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da178d566a0731534f369273fa9480e1210cb01c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da178d566a0731534f369273fa9480e1210cb01c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da178d566a0731534f369273fa9480e1210cb01c", "patch": "@@ -1,3 +1,9 @@\n+2016-03-29  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/68695\n+\t* ira-color.c (allocno_copy_cost_saving): New.\n+\t(improve_allocation): Use it.\n+\n 2016-03-29  Richard Henderson  <rth@redhat.com>\n \n \tPR middle-end/70355"}, {"sha": "fba8da4bd4f3d6675a14b4d469cb7da178ad21d4", "filename": "gcc/ira-color.c", "status": "modified", "additions": 38, "deletions": 8, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da178d566a0731534f369273fa9480e1210cb01c/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da178d566a0731534f369273fa9480e1210cb01c/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=da178d566a0731534f369273fa9480e1210cb01c", "patch": "@@ -2728,6 +2728,37 @@ allocno_cost_compare_func (const void *v1p, const void *v2p)\n   return ALLOCNO_NUM (p1) - ALLOCNO_NUM (p2);\n }\n \n+/* Return savings on removed copies when ALLOCNO is assigned to\n+   HARD_REGNO.  */\n+static int\n+allocno_copy_cost_saving (ira_allocno_t allocno, int hard_regno)\n+{\n+  int cost = 0;\n+  enum reg_class rclass;\n+  ira_copy_t cp, next_cp;\n+\n+  rclass = REGNO_REG_CLASS (hard_regno);\n+  for (cp = ALLOCNO_COPIES (allocno); cp != NULL; cp = next_cp)\n+    {\n+      if (cp->first == allocno)\n+\t{\n+\t  next_cp = cp->next_first_allocno_copy;\n+\t  if (ALLOCNO_HARD_REGNO (cp->second) != hard_regno)\n+\t    continue;\n+\t}\n+      else if (cp->second == allocno)\n+\t{\n+\t  next_cp = cp->next_second_allocno_copy;\n+\t  if (ALLOCNO_HARD_REGNO (cp->first) != hard_regno)\n+\t    continue;\n+\t}\n+      else\n+\tgcc_unreachable ();\n+      cost += cp->freq * ira_register_move_cost[ALLOCNO_MODE (allocno)][rclass][rclass];\n+    }\n+  return cost;\n+}\n+\n /* We used Chaitin-Briggs coloring to assign as many pseudos as\n    possible to hard registers.  Let us try to improve allocation with\n    cost point of view.  This function improves the allocation by\n@@ -2768,9 +2799,7 @@ improve_allocation (void)\n \tcontinue;\n       check++;\n       aclass = ALLOCNO_CLASS (a);\n-      allocno_costs = ALLOCNO_UPDATED_HARD_REG_COSTS (a);\n-      if (allocno_costs == NULL)\n-\tallocno_costs = ALLOCNO_HARD_REG_COSTS (a);\n+      allocno_costs = ALLOCNO_HARD_REG_COSTS (a);\n       if ((hregno = ALLOCNO_HARD_REGNO (a)) < 0)\n \tbase_cost = ALLOCNO_UPDATED_MEMORY_COST (a);\n       else if (allocno_costs == NULL)\n@@ -2779,7 +2808,8 @@ improve_allocation (void)\n \t   case).  */\n \tcontinue;\n       else\n-\tbase_cost = allocno_costs[ira_class_hard_reg_index[aclass][hregno]];\n+\tbase_cost = (allocno_costs[ira_class_hard_reg_index[aclass][hregno]]\n+\t\t     - allocno_copy_cost_saving (a, hregno));\n       try_p = false;\n       get_conflict_and_start_profitable_regs (a, false,\n \t\t\t\t\t      conflicting_regs,\n@@ -2797,6 +2827,7 @@ improve_allocation (void)\n \t  k = allocno_costs == NULL ? 0 : j;\n \t  costs[hregno] = (allocno_costs == NULL\n \t\t\t   ? ALLOCNO_UPDATED_CLASS_COST (a) : allocno_costs[k]);\n+\t  costs[hregno] -= allocno_copy_cost_saving (a, hregno);\n \t  costs[hregno] -= base_cost;\n \t  if (costs[hregno] < 0)\n \t    try_p = true;\n@@ -2835,14 +2866,13 @@ improve_allocation (void)\n \t      k = (ira_class_hard_reg_index\n \t\t   [ALLOCNO_CLASS (conflict_a)][conflict_hregno]);\n \t      ira_assert (k >= 0);\n-\t      if ((allocno_costs = ALLOCNO_UPDATED_HARD_REG_COSTS (conflict_a))\n+\t      if ((allocno_costs = ALLOCNO_HARD_REG_COSTS (conflict_a))\n \t\t  != NULL)\n \t\tspill_cost -= allocno_costs[k];\n-\t      else if ((allocno_costs = ALLOCNO_HARD_REG_COSTS (conflict_a))\n-\t\t       != NULL)\n-\t\tspill_cost -= allocno_costs[k];\n \t      else\n \t\tspill_cost -= ALLOCNO_UPDATED_CLASS_COST (conflict_a);\n+\t      spill_cost\n+\t\t+= allocno_copy_cost_saving (conflict_a, conflict_hregno);\n \t      conflict_nregs\n \t\t= hard_regno_nregs[conflict_hregno][ALLOCNO_MODE (conflict_a)];\n \t      for (r = conflict_hregno;"}]}