{"sha": "959d14e166813ae53bfc2e0bb5c2953bce764702", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU5ZDE0ZTE2NjgxM2FlNTNiZmMyZTBiYjVjMjk1M2JjZTc2NDcwMg==", "commit": {"author": {"name": "Chris Fairles", "email": "cfairles@gcc.gnu.org", "date": "2009-01-15T14:01:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-01-15T14:01:04Z"}, "message": "acinclude.m4 ([GLIBCXX_ENABLE_CLOCK_GETTIME], [...]): Remove.\n\n2009-01-15  Chris Fairles  <cfairles@gcc.gnu.org>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* acinclude.m4 ([GLIBCXX_ENABLE_CLOCK_GETTIME],\n\t[GLIBCXX_CHECK_NANOSLEEP]): Remove.\n\t([GLIBCXX_ENABLE_LIBSTDCXX_TIME]): Add.\n\t* configure.ac: Adjust.\n\t* doc/xml/manual/configure.xml: Update.\n\t* testsuite/lib/libstdc++.exp (check_v3_target_sched_yield): Add.\n\t* testsuite/lib/dg-options.exp (dg-require-sched-yield): Add.\n\t* testsuite/30_threads/thread/this_thread/2.cc: Use the latter.\n\t* configure: Regenerate.\n\t* config.h.in: Likewise.\n\n\t* src/thread.cc (thread::thread(), thread::~thread, thread::get_id,\n\tthread::joinable, thread::swap, this_thread::get_id,\n\tthis_thread::yield): Define inline...\n\t* include/std/thread: ... here.\n\t* config/abi/pre/gnu.ver: Adjust.\n\nCo-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>\n\nFrom-SVN: r143397", "tree": {"sha": "a3d0a02869ac2d4272d8edb67dd33bc6a37b3633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3d0a02869ac2d4272d8edb67dd33bc6a37b3633"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/959d14e166813ae53bfc2e0bb5c2953bce764702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/959d14e166813ae53bfc2e0bb5c2953bce764702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/959d14e166813ae53bfc2e0bb5c2953bce764702", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/959d14e166813ae53bfc2e0bb5c2953bce764702/comments", "author": null, "committer": null, "parents": [{"sha": "52535a64bf7645528bea628863a96a1588de0ac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52535a64bf7645528bea628863a96a1588de0ac7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52535a64bf7645528bea628863a96a1588de0ac7"}], "stats": {"total": 1174, "additions": 761, "deletions": 413}, "files": [{"sha": "bbcb81416db2a7c66a4f782ed67ef058e96f7f79", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=959d14e166813ae53bfc2e0bb5c2953bce764702", "patch": "@@ -1,3 +1,23 @@\n+2009-01-15  Chris Fairles  <cfairles@gcc.gnu.org>\n+\t    Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* acinclude.m4 ([GLIBCXX_ENABLE_CLOCK_GETTIME],\n+\t[GLIBCXX_CHECK_NANOSLEEP]): Remove.\n+\t([GLIBCXX_ENABLE_LIBSTDCXX_TIME]): Add.\n+\t* configure.ac: Adjust.\n+\t* doc/xml/manual/configure.xml: Update.\n+\t* testsuite/lib/libstdc++.exp (check_v3_target_sched_yield): Add.\n+\t* testsuite/lib/dg-options.exp (dg-require-sched-yield): Add.\n+\t* testsuite/30_threads/thread/this_thread/2.cc: Use the latter.\n+\t* configure: Regenerate.\n+\t* config.h.in: Likewise.\n+\n+\t* src/thread.cc (thread::thread(), thread::~thread, thread::get_id,\n+\tthread::joinable, thread::swap, this_thread::get_id,\n+\tthis_thread::yield): Define inline...\n+\t* include/std/thread: ... here.\n+\t* config/abi/pre/gnu.ver: Adjust.\n+\n 2009-01-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* testsuite/ext/pb_ds/regression/hash_data_map_rand.cc:"}, {"sha": "4dd2b2b109be32b8bb779630ca172b813c383fc3", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 64, "deletions": 50, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=959d14e166813ae53bfc2e0bb5c2953bce764702", "patch": "@@ -1074,26 +1074,28 @@ AC_DEFUN([GLIBCXX_ENABLE_C99], [\n \n \n dnl\n-dnl Check for clock_gettime clocks, used in the implementation of 20.8.5\n-dnl [time.clock] in the current C++0x working draft.\n-dnl\n-dnl --enable-clock-gettime\n-dnl --enable-clock-gettime=yes\n-dnl        checks for the availability of monotonic and realtime clocks\n-dnl        in libc and libposix4 and in case links the latter\n-dnl --enable-clock-gettime=rt\n+dnl Check for clock_gettime, nanosleep and sched_yield, used in the\n+dnl implementation of 20.8.5 [time.clock], and 30.2.2 [thread.thread.this]\n+dnl in the current C++0x working draft.\n+dnl\n+dnl --enable-libstdcxx-time\n+dnl --enable-libstdcxx-time=yes\n+dnl        checks for the availability of monotonic and realtime clocks,\n+dnl        nanosleep and sched_yield in libc and libposix4 and, in case, links\n+dnl       the latter\n+dnl --enable-libstdcxx-time=rt\n dnl        also searches (and, in case, links) librt.  Note that this is\n dnl        not always desirable because, in glibc, for example, in turn it\n dnl        triggers the linking of libpthread too, which activates locking,\n dnl        a large overhead for single-thread programs.\n-dnl --enable-clock-gettime=no\n-dnl --disable-clock-gettime\n+dnl --enable-libstdcxx-time=no\n+dnl --disable-libstdcxx-time\n dnl        disables the checks completely\n dnl\n-AC_DEFUN([GLIBCXX_ENABLE_CLOCK_GETTIME], [\n+AC_DEFUN([GLIBCXX_ENABLE_LIBSTDCXX_TIME], [\n \n-  AC_MSG_CHECKING([for clock_gettime clocks])\t\t\t\t\t \n-  GLIBCXX_ENABLE(clock-gettime,$1,[=KIND],\n+  AC_MSG_CHECKING([for clock_gettime, nanosleep and sched_yield])\n+  GLIBCXX_ENABLE(libstdcxx-time,$1,[=KIND],\n     [use KIND for check type],\n     [permit yes|no|rt])\n \n@@ -1103,19 +1105,47 @@ AC_DEFUN([GLIBCXX_ENABLE_CLOCK_GETTIME], [\n   CXXFLAGS=\"$CXXFLAGS -fno-exceptions\"\n   ac_save_LIBS=\"$LIBS\"\n \n-  ac_has_clock_monotonic=no;  \n+  ac_has_clock_monotonic=no;\n   ac_has_clock_realtime=no;\n \n-  if test x\"$enable_clock_gettime\" != x\"no\"; then\n+  if test x\"$enable_libstdcxx_time\" != x\"no\"; then\n \n-    if test x\"$enable_clock_gettime\" = x\"rt\"; then\n+    if test x\"$enable_libstdcxx_time\" = x\"rt\"; then\n       AC_SEARCH_LIBS(clock_gettime, [rt posix4])\n+      AC_SEARCH_LIBS(nanosleep, [rt posix4])\n     else\n       AC_SEARCH_LIBS(clock_gettime, [posix4])\n+      AC_SEARCH_LIBS(nanosleep, [posix4])\n     fi\n \n     case \"$ac_cv_search_clock_gettime\" in\n       -l*) GLIBCXX_LIBS=$ac_cv_search_clock_gettime\n+      ;;\n+    esac\n+    case \"$ac_cv_search_nanosleep\" in\n+      -l*) GLIBCXX_LIBS=\"$GLIBCXX_LIBS $ac_cv_search_nanosleep\"\n+      ;;\n+    esac\n+\n+    AC_SEARCH_LIBS(sched_yield, [rt posix4])\n+\n+    case \"$ac_cv_search_sched_yield\" in\n+      -lposix4*)\n+      GLIBCXX_LIBS=\"$GLIBCXX_LIBS $ac_cv_search_sched_yield\"\n+      AC_DEFINE(_GLIBCXX_USE_SCHED_YIELD, 1,\n+                [ Defined if sched_yield is available. ])\n+      ;;\n+      -lrt*)\n+      if test x\"$enable_libstdcxx_time\" = x\"rt\"; then\n+        GLIBCXX_LIBS=\"$GLIBCXX_LIBS $ac_cv_search_sched_yield\"\n+\tAC_DEFINE(_GLIBCXX_USE_SCHED_YIELD, 1, \n+\t          [ Defined if sched_yield is available. ])\n+      fi\n+      ;;\n+      *)\n+      AC_DEFINE(_GLIBCXX_USE_SCHED_YIELD, 1,\n+                [ Defined if sched_yield is available. ])\n+      ;;\n     esac\n \n     AC_CHECK_HEADERS(unistd.h, ac_has_unistd_h=yes, ac_has_unistd_h=no)\n@@ -1146,8 +1176,20 @@ AC_DEFUN([GLIBCXX_ENABLE_CLOCK_GETTIME], [\n         ], [ac_has_clock_realtime=yes], [ac_has_clock_realtime=no])\n \n       AC_MSG_RESULT($ac_has_clock_realtime)\n-    fi\n \n+      AC_MSG_CHECKING([for nanosleep])\n+      AC_TRY_LINK(\n+        [#include <unistd.h>\n+         #include <time.h>\n+        ],\n+        [#if _POSIX_TIMERS > 0\n+          timespec tp;\n+         #endif\n+          nanosleep(&tp, 0);\n+        ], [ac_has_nanosleep=yes], [ac_has_nanosleep=no])\n+\n+      AC_MSG_RESULT($ac_has_nanosleep)\n+    fi\n   fi\n \n   if test x\"$ac_has_clock_monotonic\" = x\"yes\"; then\n@@ -1160,6 +1202,11 @@ AC_DEFUN([GLIBCXX_ENABLE_CLOCK_GETTIME], [\n       [ Defined if clock_gettime has realtime clock support. ])\n   fi\n \n+  if test x\"$ac_has_nanosleep\" = x\"yes\"; then\n+    AC_DEFINE(_GLIBCXX_USE_NANOSLEEP, 1,\n+      [ Defined if nanosleep is available. ])\n+  fi\n+\n   AC_SUBST(GLIBCXX_LIBS)\n \n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n@@ -1200,39 +1247,6 @@ AC_DEFUN([GLIBCXX_CHECK_GETTIMEOFDAY], [\n   AC_LANG_RESTORE\n ])\n \n-dnl\n-dnl Check for nanosleep, used in the implementation of 30.2.2\n-dnl [thread.thread.this] in the current C++0x working draft.\n-dnl\n-AC_DEFUN([GLIBCXX_CHECK_NANOSLEEP], [\n-\n-  AC_MSG_CHECKING([for nanosleep])\n-\n-  AC_LANG_SAVE\n-  AC_LANG_CPLUSPLUS\n-  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -fno-exceptions\"\n-\n-  ac_has_nanosleep=no;\n-  AC_CHECK_HEADERS(time.h, ac_has_time_h=yes, ac_has_time_h=no)\n-  if test x\"$ac_has_time_h\" = x\"yes\"; then\n-    AC_MSG_CHECKING([for nanosleep])\n-    AC_TRY_COMPILE([#include <time.h>],                                                                                                         \n-      [timespec ts; nanosleep(&ts, 0);],\n-      [ac_has_nanosleep=yes], [ac_has_nanosleep=no])\n-\n-    AC_MSG_RESULT($ac_has_nanosleep)\n-  fi\n-\n-  if test x\"$ac_has_nanosleep\" = x\"yes\"; then\n-    AC_DEFINE(_GLIBCXX_USE_NANOSLEEP, 1,\n-      [ Defined if nanosleep is available. ])\n-  fi\n-\n-  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n-  AC_LANG_RESTORE\n-])\n-\n dnl\n dnl Check for ISO/IEC 9899:1999 \"C99\" support to ISO/IEC DTR 19768 \"TR1\"\n dnl facilities in Chapter 8, \"C compatibility\"."}, {"sha": "10246a0a1c36531b41784073d9c424cc6aff1cb7", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=959d14e166813ae53bfc2e0bb5c2953bce764702", "patch": "@@ -415,9 +415,6 @@\n /* Define to 1 if you have the <tgmath.h> header file. */\n #undef HAVE_TGMATH_H\n \n-/* Define to 1 if you have the <time.h> header file. */\n-#undef HAVE_TIME_H\n-\n /* Define to 1 if the target supports thread-local storage. */\n #undef HAVE_TLS\n \n@@ -815,6 +812,9 @@\n    of TR1 (Chapter 5.1). */\n #undef _GLIBCXX_USE_RANDOM_TR1\n \n+/* Defined if sched_yield is available. */\n+#undef _GLIBCXX_USE_SCHED_YIELD\n+\n /* Define if code specialized for wchar_t should be used. */\n #undef _GLIBCXX_USE_WCHAR_T\n "}, {"sha": "887ea3f0c88274b488958c5abfba63a6b0c59076", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=959d14e166813ae53bfc2e0bb5c2953bce764702", "patch": "@@ -901,21 +901,12 @@ GLIBCXX_3.4.11 {\n     _ZNSt22condition_variable_anyD2Ev;\n \n     # thread\n-    _ZNKSt6thread6get_idEv;\n-    _ZNKSt6thread8joinableEv;\n     _ZNSt10shared_ptrISt18__thread_data_baseED1Ev;\n-    _ZNSt11this_thread5yieldEv;\n-    _ZNSt11this_thread6get_idEv;\n     _ZNSt12bad_weak_ptrD0Ev;\n     _ZNSt12bad_weak_ptrD1Ev;\n     _ZNSt6thread14__start_threadEv;\n     _ZNSt6thread4joinEv;\n-    _ZNSt6thread4swapEOS_;\n     _ZNSt6thread6detachEv;\n-    _ZNSt6threadC1Ev;\n-    _ZNSt6threadC2Ev;\n-    _ZNSt6threadD1Ev;\n-    _ZNSt6threadD2Ev;\n \n     # system_error\n     _ZSt15system_category;"}, {"sha": "714b9b5abc8564fa70477127c781a55695c7086c", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 548, "deletions": 276, "changes": 824, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=959d14e166813ae53bfc2e0bb5c2953bce764702", "patch": "@@ -1052,7 +1052,7 @@ Optional Features:\n   --enable-fully-dynamic-string\n                           do not put empty strings in per-process static\n                           memory [default=no]\n-  --enable-clock-gettime=KIND\n+  --enable-libstdcxx-time=KIND\n                           use KIND for check type [default=no]\n   --enable-tls            Use thread-local storage [default=yes]\n   --disable-rpath         do not hardcode runtime library paths\n@@ -21711,25 +21711,25 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-# For clock_gettime support.\n+# For clock_gettime, nanosleep and sched_yield support.\n # NB: The default is [no], because otherwise it requires linking.\n \n \n-  echo \"$as_me:$LINENO: checking for clock_gettime clocks\" >&5\n-echo $ECHO_N \"checking for clock_gettime clocks... $ECHO_C\" >&6\n-   # Check whether --enable-clock-gettime or --disable-clock-gettime was given.\n-if test \"${enable_clock_gettime+set}\" = set; then\n-  enableval=\"$enable_clock_gettime\"\n+  echo \"$as_me:$LINENO: checking for clock_gettime, nanosleep and sched_yield\" >&5\n+echo $ECHO_N \"checking for clock_gettime, nanosleep and sched_yield... $ECHO_C\" >&6\n+   # Check whether --enable-libstdcxx-time or --disable-libstdcxx-time was given.\n+if test \"${enable_libstdcxx_time+set}\" = set; then\n+  enableval=\"$enable_libstdcxx_time\"\n \n       case \"$enableval\" in\n        yes|no|rt) ;;\n-       *) { { echo \"$as_me:$LINENO: error: Unknown argument to enable/disable clock-gettime\" >&5\n-echo \"$as_me: error: Unknown argument to enable/disable clock-gettime\" >&2;}\n+       *) { { echo \"$as_me:$LINENO: error: Unknown argument to enable/disable libstdcxx-time\" >&5\n+echo \"$as_me: error: Unknown argument to enable/disable libstdcxx-time\" >&2;}\n    { (exit 1); exit 1; }; } ;;\n                           esac\n \n else\n-  enable_clock_gettime=no\n+  enable_libstdcxx_time=no\n fi;\n \n \n@@ -21748,9 +21748,9 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   ac_has_clock_monotonic=no;\n   ac_has_clock_realtime=no;\n \n-  if test x\"$enable_clock_gettime\" != x\"no\"; then\n+  if test x\"$enable_libstdcxx_time\" != x\"no\"; then\n \n-    if test x\"$enable_clock_gettime\" = x\"rt\"; then\n+    if test x\"$enable_libstdcxx_time\" = x\"rt\"; then\n       echo \"$as_me:$LINENO: checking for library containing clock_gettime\" >&5\n echo $ECHO_N \"checking for library containing clock_gettime... $ECHO_C\" >&6\n if test \"${ac_cv_search_clock_gettime+set}\" = set; then\n@@ -21887,14 +21887,13 @@ if test \"$ac_cv_search_clock_gettime\" != no; then\n \n fi\n \n-    else\n-      echo \"$as_me:$LINENO: checking for library containing clock_gettime\" >&5\n-echo $ECHO_N \"checking for library containing clock_gettime... $ECHO_C\" >&6\n-if test \"${ac_cv_search_clock_gettime+set}\" = set; then\n+      echo \"$as_me:$LINENO: checking for library containing nanosleep\" >&5\n+echo $ECHO_N \"checking for library containing nanosleep... $ECHO_C\" >&6\n+if test \"${ac_cv_search_nanosleep+set}\" = set; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n   ac_func_search_save_LIBS=$LIBS\n-ac_cv_search_clock_gettime=no\n+ac_cv_search_nanosleep=no\n if test x$gcc_no_link = xyes; then\n   { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n@@ -21913,11 +21912,11 @@ extern \"C\"\n #endif\n /* We use char because int might match the return type of a gcc2\n    builtin and then its argument prototype would still apply.  */\n-char clock_gettime ();\n+char nanosleep ();\n int\n main ()\n {\n-clock_gettime ();\n+nanosleep ();\n   ;\n   return 0;\n }\n@@ -21944,16 +21943,16 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; }; then\n-  ac_cv_search_clock_gettime=\"none required\"\n+  ac_cv_search_nanosleep=\"none required\"\n else\n   echo \"$as_me: failed program was:\" >&5\n sed 's/^/| /' conftest.$ac_ext >&5\n \n fi\n rm -f conftest.err conftest.$ac_objext \\\n       conftest$ac_exeext conftest.$ac_ext\n-if test \"$ac_cv_search_clock_gettime\" = no; then\n-  for ac_lib in posix4; do\n+if test \"$ac_cv_search_nanosleep\" = no; then\n+  for ac_lib in rt posix4; do\n     LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n     if test x$gcc_no_link = xyes; then\n   { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n@@ -21973,11 +21972,11 @@ extern \"C\"\n #endif\n /* We use char because int might match the return type of a gcc2\n    builtin and then its argument prototype would still apply.  */\n-char clock_gettime ();\n+char nanosleep ();\n int\n main ()\n {\n-clock_gettime ();\n+nanosleep ();\n   ;\n   return 0;\n }\n@@ -22004,7 +22003,7 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; }; then\n-  ac_cv_search_clock_gettime=\"-l$ac_lib\"\n+  ac_cv_search_nanosleep=\"-l$ac_lib\"\n break\n else\n   echo \"$as_me: failed program was:\" >&5\n@@ -22017,47 +22016,51 @@ rm -f conftest.err conftest.$ac_objext \\\n fi\n LIBS=$ac_func_search_save_LIBS\n fi\n-echo \"$as_me:$LINENO: result: $ac_cv_search_clock_gettime\" >&5\n-echo \"${ECHO_T}$ac_cv_search_clock_gettime\" >&6\n-if test \"$ac_cv_search_clock_gettime\" != no; then\n-  test \"$ac_cv_search_clock_gettime\" = \"none required\" || LIBS=\"$ac_cv_search_clock_gettime $LIBS\"\n+echo \"$as_me:$LINENO: result: $ac_cv_search_nanosleep\" >&5\n+echo \"${ECHO_T}$ac_cv_search_nanosleep\" >&6\n+if test \"$ac_cv_search_nanosleep\" != no; then\n+  test \"$ac_cv_search_nanosleep\" = \"none required\" || LIBS=\"$ac_cv_search_nanosleep $LIBS\"\n \n fi\n \n-    fi\n-\n-    case \"$ac_cv_search_clock_gettime\" in\n-      -l*) GLIBCXX_LIBS=$ac_cv_search_clock_gettime\n-    esac\n-\n-\n-for ac_header in unistd.h\n-do\n-as_ac_Header=`echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n-if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n-  echo \"$as_me:$LINENO: checking for $ac_header\" >&5\n-echo $ECHO_N \"checking for $ac_header... $ECHO_C\" >&6\n-if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n+    else\n+      echo \"$as_me:$LINENO: checking for library containing clock_gettime\" >&5\n+echo $ECHO_N \"checking for library containing clock_gettime... $ECHO_C\" >&6\n+if test \"${ac_cv_search_clock_gettime+set}\" = set; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-fi\n-echo \"$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`\" >&5\n-echo \"${ECHO_T}`eval echo '${'$as_ac_Header'}'`\" >&6\n else\n-  # Is the header compilable?\n-echo \"$as_me:$LINENO: checking $ac_header usability\" >&5\n-echo $ECHO_N \"checking $ac_header usability... $ECHO_C\" >&6\n+  ac_func_search_save_LIBS=$LIBS\n+ac_cv_search_clock_gettime=no\n+if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-$ac_includes_default\n-#include <$ac_header>\n+\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+/* We use char because int might match the return type of a gcc2\n+   builtin and then its argument prototype would still apply.  */\n+char clock_gettime ();\n+int\n+main ()\n+{\n+clock_gettime ();\n+  ;\n+  return 0;\n+}\n _ACEOF\n-rm -f conftest.$ac_objext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n-  (eval $ac_compile) 2>conftest.er1\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n   ac_status=$?\n   grep -v '^ *+' conftest.er1 >conftest.err\n   rm -f conftest.er1\n@@ -22071,122 +22074,100 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest.$ac_objext'\n+\t { ac_try='test -s conftest$ac_exeext'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; }; then\n-  ac_header_compiler=yes\n+  ac_cv_search_clock_gettime=\"none required\"\n else\n   echo \"$as_me: failed program was:\" >&5\n sed 's/^/| /' conftest.$ac_ext >&5\n \n-ac_header_compiler=no\n fi\n-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n-echo \"$as_me:$LINENO: result: $ac_header_compiler\" >&5\n-echo \"${ECHO_T}$ac_header_compiler\" >&6\n-\n-# Is the header present?\n-echo \"$as_me:$LINENO: checking $ac_header presence\" >&5\n-echo $ECHO_N \"checking $ac_header presence... $ECHO_C\" >&6\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+if test \"$ac_cv_search_clock_gettime\" = no; then\n+  for ac_lib in posix4; do\n+    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n+    if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <$ac_header>\n+\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+/* We use char because int might match the return type of a gcc2\n+   builtin and then its argument prototype would still apply.  */\n+char clock_gettime ();\n+int\n+main ()\n+{\n+clock_gettime ();\n+  ;\n+  return 0;\n+}\n _ACEOF\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_cpp conftest.$ac_ext\\\"\") >&5\n-  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n   ac_status=$?\n   grep -v '^ *+' conftest.er1 >conftest.err\n   rm -f conftest.er1\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } >/dev/null; then\n-  if test -s conftest.err; then\n-    ac_cpp_err=$ac_cxx_preproc_warn_flag\n-    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag\n-  else\n-    ac_cpp_err=\n-  fi\n-else\n-  ac_cpp_err=yes\n-fi\n-if test -z \"$ac_cpp_err\"; then\n-  ac_header_preproc=yes\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_search_clock_gettime=\"-l$ac_lib\"\n+break\n else\n   echo \"$as_me: failed program was:\" >&5\n sed 's/^/| /' conftest.$ac_ext >&5\n \n-  ac_header_preproc=no\n-fi\n-rm -f conftest.err conftest.$ac_ext\n-echo \"$as_me:$LINENO: result: $ac_header_preproc\" >&5\n-echo \"${ECHO_T}$ac_header_preproc\" >&6\n-\n-# So?  What about this header?\n-case $ac_header_compiler:$ac_header_preproc:$ac_cxx_preproc_warn_flag in\n-  yes:no: )\n-    { echo \"$as_me:$LINENO: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!\" >&5\n-echo \"$as_me: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!\" >&2;}\n-    { echo \"$as_me:$LINENO: WARNING: $ac_header: proceeding with the compiler's result\" >&5\n-echo \"$as_me: WARNING: $ac_header: proceeding with the compiler's result\" >&2;}\n-    ac_header_preproc=yes\n-    ;;\n-  no:yes:* )\n-    { echo \"$as_me:$LINENO: WARNING: $ac_header: present but cannot be compiled\" >&5\n-echo \"$as_me: WARNING: $ac_header: present but cannot be compiled\" >&2;}\n-    { echo \"$as_me:$LINENO: WARNING: $ac_header:     check for missing prerequisite headers?\" >&5\n-echo \"$as_me: WARNING: $ac_header:     check for missing prerequisite headers?\" >&2;}\n-    { echo \"$as_me:$LINENO: WARNING: $ac_header: see the Autoconf documentation\" >&5\n-echo \"$as_me: WARNING: $ac_header: see the Autoconf documentation\" >&2;}\n-    { echo \"$as_me:$LINENO: WARNING: $ac_header:     section \\\"Present But Cannot Be Compiled\\\"\" >&5\n-echo \"$as_me: WARNING: $ac_header:     section \\\"Present But Cannot Be Compiled\\\"\" >&2;}\n-    { echo \"$as_me:$LINENO: WARNING: $ac_header: proceeding with the preprocessor's result\" >&5\n-echo \"$as_me: WARNING: $ac_header: proceeding with the preprocessor's result\" >&2;}\n-    { echo \"$as_me:$LINENO: WARNING: $ac_header: in the future, the compiler will take precedence\" >&5\n-echo \"$as_me: WARNING: $ac_header: in the future, the compiler will take precedence\" >&2;}\n-    (\n-      cat <<\\_ASBOX\n-## ----------------------------------------- ##\n-## Report this to the package-unused lists.  ##\n-## ----------------------------------------- ##\n-_ASBOX\n-    ) |\n-      sed \"s/^/$as_me: WARNING:     /\" >&2\n-    ;;\n-esac\n-echo \"$as_me:$LINENO: checking for $ac_header\" >&5\n-echo $ECHO_N \"checking for $ac_header... $ECHO_C\" >&6\n-if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  eval \"$as_ac_Header=\\$ac_header_preproc\"\n fi\n-echo \"$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`\" >&5\n-echo \"${ECHO_T}`eval echo '${'$as_ac_Header'}'`\" >&6\n-\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+  done\n fi\n-if test `eval echo '${'$as_ac_Header'}'` = yes; then\n-  cat >>confdefs.h <<_ACEOF\n-#define `echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n-_ACEOF\n- ac_has_unistd_h=yes\n-else\n-  ac_has_unistd_h=no\n+LIBS=$ac_func_search_save_LIBS\n fi\n+echo \"$as_me:$LINENO: result: $ac_cv_search_clock_gettime\" >&5\n+echo \"${ECHO_T}$ac_cv_search_clock_gettime\" >&6\n+if test \"$ac_cv_search_clock_gettime\" != no; then\n+  test \"$ac_cv_search_clock_gettime\" = \"none required\" || LIBS=\"$ac_cv_search_clock_gettime $LIBS\"\n \n-done\n-\n+fi\n \n-    if test x\"$ac_has_unistd_h\" = x\"yes\"; then\n-      echo \"$as_me:$LINENO: checking for monotonic clock\" >&5\n-echo $ECHO_N \"checking for monotonic clock... $ECHO_C\" >&6\n-      if test x$gcc_no_link = xyes; then\n+      echo \"$as_me:$LINENO: checking for library containing nanosleep\" >&5\n+echo $ECHO_N \"checking for library containing nanosleep... $ECHO_C\" >&6\n+if test \"${ac_cv_search_nanosleep+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  ac_func_search_save_LIBS=$LIBS\n+ac_cv_search_nanosleep=no\n+if test x$gcc_no_link = xyes; then\n   { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n    { (exit 1); exit 1; }; }\n@@ -22197,17 +22178,18 @@ _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <unistd.h>\n-         #include <time.h>\n \n+/* Override any gcc2 internal prototype to avoid an error.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+/* We use char because int might match the return type of a gcc2\n+   builtin and then its argument prototype would still apply.  */\n+char nanosleep ();\n int\n main ()\n {\n-#if _POSIX_TIMERS > 0 && defined(_POSIX_MONOTONIC_CLOCK)\n-          timespec tp;\n-         #endif\n-          clock_gettime(CLOCK_MONOTONIC, &tp);\n-\n+nanosleep ();\n   ;\n   return 0;\n }\n@@ -22234,22 +22216,18 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; }; then\n-  ac_has_clock_monotonic=yes\n+  ac_cv_search_nanosleep=\"none required\"\n else\n   echo \"$as_me: failed program was:\" >&5\n sed 's/^/| /' conftest.$ac_ext >&5\n \n-ac_has_clock_monotonic=no\n fi\n rm -f conftest.err conftest.$ac_objext \\\n       conftest$ac_exeext conftest.$ac_ext\n-\n-      echo \"$as_me:$LINENO: result: $ac_has_clock_monotonic\" >&5\n-echo \"${ECHO_T}$ac_has_clock_monotonic\" >&6\n-\n-      echo \"$as_me:$LINENO: checking for realtime clock\" >&5\n-echo $ECHO_N \"checking for realtime clock... $ECHO_C\" >&6\n-      if test x$gcc_no_link = xyes; then\n+if test \"$ac_cv_search_nanosleep\" = no; then\n+  for ac_lib in posix4; do\n+    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n+    if test x$gcc_no_link = xyes; then\n   { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n    { (exit 1); exit 1; }; }\n@@ -22260,17 +22238,18 @@ _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <unistd.h>\n-         #include <time.h>\n \n+/* Override any gcc2 internal prototype to avoid an error.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+/* We use char because int might match the return type of a gcc2\n+   builtin and then its argument prototype would still apply.  */\n+char nanosleep ();\n int\n main ()\n {\n-#if _POSIX_TIMERS > 0\n-          timespec tp;\n-         #endif\n-          clock_gettime(CLOCK_REALTIME, &tp);\n-\n+nanosleep ();\n   ;\n   return 0;\n }\n@@ -22297,101 +22276,134 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; }; then\n-  ac_has_clock_realtime=yes\n+  ac_cv_search_nanosleep=\"-l$ac_lib\"\n+break\n else\n   echo \"$as_me: failed program was:\" >&5\n sed 's/^/| /' conftest.$ac_ext >&5\n \n-ac_has_clock_realtime=no\n fi\n rm -f conftest.err conftest.$ac_objext \\\n       conftest$ac_exeext conftest.$ac_ext\n+  done\n+fi\n+LIBS=$ac_func_search_save_LIBS\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_search_nanosleep\" >&5\n+echo \"${ECHO_T}$ac_cv_search_nanosleep\" >&6\n+if test \"$ac_cv_search_nanosleep\" != no; then\n+  test \"$ac_cv_search_nanosleep\" = \"none required\" || LIBS=\"$ac_cv_search_nanosleep $LIBS\"\n \n-      echo \"$as_me:$LINENO: result: $ac_has_clock_realtime\" >&5\n-echo \"${ECHO_T}$ac_has_clock_realtime\" >&6\n-    fi\n+fi\n \n-  fi\n+    fi\n \n-  if test x\"$ac_has_clock_monotonic\" = x\"yes\"; then\n+    case \"$ac_cv_search_clock_gettime\" in\n+      -l*) GLIBCXX_LIBS=$ac_cv_search_clock_gettime\n+      ;;\n+    esac\n+    case \"$ac_cv_search_nanosleep\" in\n+      -l*) GLIBCXX_LIBS=\"$GLIBCXX_LIBS $ac_cv_search_nanosleep\"\n+      ;;\n+    esac\n \n-cat >>confdefs.h <<\\_ACEOF\n-#define _GLIBCXX_USE_CLOCK_MONOTONIC 1\n+    echo \"$as_me:$LINENO: checking for library containing sched_yield\" >&5\n+echo $ECHO_N \"checking for library containing sched_yield... $ECHO_C\" >&6\n+if test \"${ac_cv_search_sched_yield+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  ac_func_search_save_LIBS=$LIBS\n+ac_cv_search_sched_yield=no\n+if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n _ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n \n-  fi\n-\n-  if test x\"$ac_has_clock_realtime\" = x\"yes\"; then\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define _GLIBCXX_USE_CLOCK_REALTIME 1\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+/* We use char because int might match the return type of a gcc2\n+   builtin and then its argument prototype would still apply.  */\n+char sched_yield ();\n+int\n+main ()\n+{\n+sched_yield ();\n+  ;\n+  return 0;\n+}\n _ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_search_sched_yield=\"none required\"\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n \n-  fi\n-\n-\n-\n-  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n-  LIBS=\"$ac_save_LIBS\"\n-  ac_ext=c\n-ac_cpp='$CPP $CPPFLAGS'\n-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_c_compiler_gnu\n-\n-\n-\n-# For gthread support\n-\n-\n-\n-  ac_ext=cc\n-ac_cpp='$CXXCPP $CPPFLAGS'\n-ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n-\n-\n-  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -fno-exceptions -I${toplevel_srcdir}/gcc\"\n-\n-  target_thread_file=`$CXX -v 2>&1 | sed -n 's/^Thread model: //p'`\n-  case $target_thread_file in\n-    posix)\n-      CXXFLAGS=\"$CXXFLAGS -DSUPPORTS_WEAK -DGTHREAD_USE_WEAK -D_PTHREADS\"\n-  esac\n-\n-  echo \"$as_me:$LINENO: checking for gthreads library\" >&5\n-echo $ECHO_N \"checking for gthreads library... $ECHO_C\" >&6\n-\n-  cat >conftest.$ac_ext <<_ACEOF\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+if test \"$ac_cv_search_sched_yield\" = no; then\n+  for ac_lib in rt posix4; do\n+    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n+    if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include \"gthr.h\"\n+\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+/* We use char because int might match the return type of a gcc2\n+   builtin and then its argument prototype would still apply.  */\n+char sched_yield ();\n int\n main ()\n {\n-\n-      #ifndef __GTHREADS_CXX0X\n-      #error\n-      #endif\n-\n-      // In case of POSIX threads check _POSIX_TIMEOUTS too.\n-      #if (defined(_PTHREADS) \\\n-           && (!defined(_POSIX_TIMEOUTS) || _POSIX_TIMEOUTS <= 0))\n-      #error\n-      #endif\n-\n+sched_yield ();\n   ;\n   return 0;\n }\n _ACEOF\n-rm -f conftest.$ac_objext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n-  (eval $ac_compile) 2>conftest.er1\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n   ac_status=$?\n   grep -v '^ *+' conftest.er1 >conftest.err\n   rm -f conftest.er1\n@@ -22405,61 +22417,63 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest.$ac_objext'\n+\t { ac_try='test -s conftest$ac_exeext'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; }; then\n-  ac_has_gthreads=yes\n+  ac_cv_search_sched_yield=\"-l$ac_lib\"\n+break\n else\n   echo \"$as_me: failed program was:\" >&5\n sed 's/^/| /' conftest.$ac_ext >&5\n \n-ac_has_gthreads=no\n fi\n-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+  done\n+fi\n+LIBS=$ac_func_search_save_LIBS\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_search_sched_yield\" >&5\n+echo \"${ECHO_T}$ac_cv_search_sched_yield\" >&6\n+if test \"$ac_cv_search_sched_yield\" != no; then\n+  test \"$ac_cv_search_sched_yield\" = \"none required\" || LIBS=\"$ac_cv_search_sched_yield $LIBS\"\n \n-  echo \"$as_me:$LINENO: result: $ac_has_gthreads\" >&5\n-echo \"${ECHO_T}$ac_has_gthreads\" >&6\n+fi\n \n-  if test x\"$ac_has_gthreads\" = x\"yes\"; then\n+\n+    case \"$ac_cv_search_sched_yield\" in\n+      -lposix4*)\n+      GLIBCXX_LIBS=\"$GLIBCXX_LIBS $ac_cv_search_sched_yield\"\n \n cat >>confdefs.h <<\\_ACEOF\n-#define _GLIBCXX_HAS_GTHREADS 1\n+#define _GLIBCXX_USE_SCHED_YIELD 1\n _ACEOF\n \n-  fi\n-\n-  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n-  ac_ext=c\n-ac_cpp='$CPP $CPPFLAGS'\n-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_c_compiler_gnu\n-\n-\n-\n-# For nanosleep support\n-\n-\n-  echo \"$as_me:$LINENO: checking for nanosleep\" >&5\n-echo $ECHO_N \"checking for nanosleep... $ECHO_C\" >&6\n+      ;;\n+      -lrt*)\n+      if test x\"$enable_libstdcxx_time\" = x\"rt\"; then\n+        GLIBCXX_LIBS=\"$GLIBCXX_LIBS $ac_cv_search_sched_yield\"\n \n+cat >>confdefs.h <<\\_ACEOF\n+#define _GLIBCXX_USE_SCHED_YIELD 1\n+_ACEOF\n \n+      fi\n+      ;;\n+      *)\n \n-  ac_ext=cc\n-ac_cpp='$CXXCPP $CPPFLAGS'\n-ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+cat >>confdefs.h <<\\_ACEOF\n+#define _GLIBCXX_USE_SCHED_YIELD 1\n+_ACEOF\n \n-  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -fno-exceptions\"\n+      ;;\n+    esac\n \n-  ac_has_nanosleep=no;\n \n-for ac_header in time.h\n+for ac_header in unistd.h\n do\n as_ac_Header=`echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n@@ -22603,34 +22617,172 @@ if test `eval echo '${'$as_ac_Header'}'` = yes; then\n   cat >>confdefs.h <<_ACEOF\n #define `echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n _ACEOF\n- ac_has_time_h=yes\n+ ac_has_unistd_h=yes\n else\n-  ac_has_time_h=no\n+  ac_has_unistd_h=no\n fi\n \n done\n \n-  if test x\"$ac_has_time_h\" = x\"yes\"; then\n-    echo \"$as_me:$LINENO: checking for nanosleep\" >&5\n+\n+    if test x\"$ac_has_unistd_h\" = x\"yes\"; then\n+      echo \"$as_me:$LINENO: checking for monotonic clock\" >&5\n+echo $ECHO_N \"checking for monotonic clock... $ECHO_C\" >&6\n+      if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <unistd.h>\n+         #include <time.h>\n+\n+int\n+main ()\n+{\n+#if _POSIX_TIMERS > 0 && defined(_POSIX_MONOTONIC_CLOCK)\n+          timespec tp;\n+         #endif\n+          clock_gettime(CLOCK_MONOTONIC, &tp);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_has_clock_monotonic=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_has_clock_monotonic=no\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+\n+      echo \"$as_me:$LINENO: result: $ac_has_clock_monotonic\" >&5\n+echo \"${ECHO_T}$ac_has_clock_monotonic\" >&6\n+\n+      echo \"$as_me:$LINENO: checking for realtime clock\" >&5\n+echo $ECHO_N \"checking for realtime clock... $ECHO_C\" >&6\n+      if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <unistd.h>\n+         #include <time.h>\n+\n+int\n+main ()\n+{\n+#if _POSIX_TIMERS > 0\n+          timespec tp;\n+         #endif\n+          clock_gettime(CLOCK_REALTIME, &tp);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_has_clock_realtime=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_has_clock_realtime=no\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+\n+      echo \"$as_me:$LINENO: result: $ac_has_clock_realtime\" >&5\n+echo \"${ECHO_T}$ac_has_clock_realtime\" >&6\n+\n+      echo \"$as_me:$LINENO: checking for nanosleep\" >&5\n echo $ECHO_N \"checking for nanosleep... $ECHO_C\" >&6\n-    cat >conftest.$ac_ext <<_ACEOF\n+      if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <time.h>\n+#include <unistd.h>\n+         #include <time.h>\n+\n int\n main ()\n {\n-timespec ts; nanosleep(&ts, 0);\n+#if _POSIX_TIMERS > 0\n+          timespec tp;\n+         #endif\n+          nanosleep(&tp, 0);\n+\n   ;\n   return 0;\n }\n _ACEOF\n-rm -f conftest.$ac_objext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n-  (eval $ac_compile) 2>conftest.er1\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n   ac_status=$?\n   grep -v '^ *+' conftest.er1 >conftest.err\n   rm -f conftest.er1\n@@ -22644,7 +22796,7 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest.$ac_objext'\n+\t { ac_try='test -s conftest$ac_exeext'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -22657,10 +22809,28 @@ sed 's/^/| /' conftest.$ac_ext >&5\n \n ac_has_nanosleep=no\n fi\n-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n \n-    echo \"$as_me:$LINENO: result: $ac_has_nanosleep\" >&5\n+      echo \"$as_me:$LINENO: result: $ac_has_nanosleep\" >&5\n echo \"${ECHO_T}$ac_has_nanosleep\" >&6\n+    fi\n+  fi\n+\n+  if test x\"$ac_has_clock_monotonic\" = x\"yes\"; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define _GLIBCXX_USE_CLOCK_MONOTONIC 1\n+_ACEOF\n+\n+  fi\n+\n+  if test x\"$ac_has_clock_realtime\" = x\"yes\"; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define _GLIBCXX_USE_CLOCK_REALTIME 1\n+_ACEOF\n+\n   fi\n \n   if test x\"$ac_has_nanosleep\" = x\"yes\"; then\n@@ -22671,6 +22841,108 @@ _ACEOF\n \n   fi\n \n+\n+\n+  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+  LIBS=\"$ac_save_LIBS\"\n+  ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+\n+# For gthread support\n+\n+\n+\n+  ac_ext=cc\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$CXXFLAGS -fno-exceptions -I${toplevel_srcdir}/gcc\"\n+\n+  target_thread_file=`$CXX -v 2>&1 | sed -n 's/^Thread model: //p'`\n+  case $target_thread_file in\n+    posix)\n+      CXXFLAGS=\"$CXXFLAGS -DSUPPORTS_WEAK -DGTHREAD_USE_WEAK -D_PTHREADS\"\n+  esac\n+\n+  echo \"$as_me:$LINENO: checking for gthreads library\" >&5\n+echo $ECHO_N \"checking for gthreads library... $ECHO_C\" >&6\n+\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include \"gthr.h\"\n+int\n+main ()\n+{\n+\n+      #ifndef __GTHREADS_CXX0X\n+      #error\n+      #endif\n+\n+      // In case of POSIX threads check _POSIX_TIMEOUTS too.\n+      #if (defined(_PTHREADS) \\\n+           && (!defined(_POSIX_TIMEOUTS) || _POSIX_TIMEOUTS <= 0))\n+      #error\n+      #endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_has_gthreads=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_has_gthreads=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+  echo \"$as_me:$LINENO: result: $ac_has_gthreads\" >&5\n+echo \"${ECHO_T}$ac_has_gthreads\" >&6\n+\n+  if test x\"$ac_has_gthreads\" = x\"yes\"; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define _GLIBCXX_HAS_GTHREADS 1\n+_ACEOF\n+\n+  fi\n+\n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n   ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'"}, {"sha": "ae97d89687600ded22a6e2544cfee3f393ad9484", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=959d14e166813ae53bfc2e0bb5c2953bce764702", "patch": "@@ -145,16 +145,13 @@ GLIBCXX_CHECK_STDIO_MACROS\n # For gettimeofday support.\n GLIBCXX_CHECK_GETTIMEOFDAY\n \n-# For clock_gettime support.\n+# For clock_gettime, nanosleep and sched_yield support.\n # NB: The default is [no], because otherwise it requires linking.\n-GLIBCXX_ENABLE_CLOCK_GETTIME([no])\n+GLIBCXX_ENABLE_LIBSTDCXX_TIME([no])\n \n # For gthread support\n GLIBCXX_CHECK_GTHREADS\n \n-# For nanosleep support\n-GLIBCXX_CHECK_NANOSLEEP\n-\n AC_LC_MESSAGES\n \n # Check for available headers."}, {"sha": "7fa5a1e14a71bfb2500d4f7460a0763ed40e2a5e", "filename": "libstdc++-v3/doc/xml/manual/configure.xml", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconfigure.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconfigure.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconfigure.xml?ref=959d14e166813ae53bfc2e0bb5c2953bce764702", "patch": "@@ -327,17 +327,19 @@\n      </para>\n  </listitem></varlistentry>\n \n- <varlistentry><term><code>--enable-clock-gettime=OPTION</code></term>\n+ <varlistentry><term><code>--enable-libstdcxx-time=OPTION</code></term>\n  <listitem><para>Enables link-type checks for the availability of the\n-        clock_gettime clocks, used in [time.clock] of the current C++0x draft.\n-        The choice OPTION=yes checks for the availability of the monotonic and\n-        realtime clocks in libc and libposix4.  In case of need the latter is \n-        also linked to libstdc++ as part of the build process.  OPTION=rt\n-        also searches (and, in case, links) librt.   Note that the latter\n-        is not always desirable because, in glibc, for example, in turn it\n-        triggers the linking of libpthread too, which activates locking,\n-        a large overhead for single-thread programs.  OPTION=no skips the\n-        tests completely.  The default is OPTION=no.\n+        clock_gettime clocks, used in the implementation of [time.clock],\n+        and of the nanosleep and sched_yield functions, used in the\n+        implementation of [thread.thread.this] of the current C++0x draft.\n+        The choice OPTION=yes checks for the availability of the facilities\n+        in libc and libposix4.  In case of need the latter is also linked\n+        to libstdc++ as part of the build process.  OPTION=rt also searches\n+        (and, in case, links) librt.   Note that the latter is not always\n+        desirable because, in glibc, for example, in turn it triggers the\n+        linking of libpthread too, which activates locking, a large overhead\n+        for single-thread programs.  OPTION=no skips the tests completely.\n+        The default is OPTION=no.\n     </para>\n  </listitem></varlistentry>\n "}, {"sha": "422e36265395168f81b2d0150017d7f33b765780", "filename": "libstdc++-v3/include/std/thread", "status": "modified", "additions": 39, "deletions": 18, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread?ref=959d14e166813ae53bfc2e0bb5c2953bce764702", "patch": "@@ -1,6 +1,6 @@\n // <thread> -*- C++ -*-\n \n-// Copyright (C) 2008 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -96,7 +96,7 @@ namespace std\n     typedef __gthread_t native_handle_type;\n \n     // cons\n-    thread();\n+    thread() = default;\n     \n     template<typename _Callable>\n       explicit thread(_Callable __f)\n@@ -108,7 +108,8 @@ namespace std\n       : _M_thread_data(__make_thread_data(std::bind(__f, __args...)))\n       { __start_thread(); }\n \n-    ~thread();\n+    ~thread()\n+    { detach(); }\n \n     thread(const thread&) = delete;\n     thread(thread&&);\n@@ -117,7 +118,8 @@ namespace std\n \n     // members\n     void \n-    swap(thread&& __t);\n+    swap(thread&& __t)\n+    { std::swap(_M_thread_data, __t._M_thread_data); }\n \n     bool \n     joinable() const;\n@@ -128,7 +130,7 @@ namespace std\n     void \n     detach();\n \n-    id\n+    thread::id\n     get_id() const;\n \n     native_handle_type \n@@ -181,18 +183,20 @@ namespace std\n     thread::id\n     get_id();\n \n-    void\n-    yield();\n+#ifdef _GLIBCXX_USE_SCHED_YIELD\n+    inline void\n+    yield()\n+    { __gthread_yield(); }\n+#endif\n \n+#ifdef _GLIBCXX_USE_NANOSLEEP\n     template<typename _Clock, typename _Duration>\n-      void\n+      inline void\n       sleep_until(const chrono::time_point<_Clock, _Duration>& __atime)\n-      {\n-\tsleep_for(__atime - _Clock::now());\n-      }\n+      { sleep_for(__atime - _Clock::now()); }\n \n     template<typename _Rep, typename _Period>\n-      void\n+      inline void\n       sleep_for(const chrono::duration<_Rep, _Period>& __rtime)\n       {\n \tchrono::seconds __s =\n@@ -207,10 +211,9 @@ namespace std\n \t    static_cast<long>(__ns.count())\n \t  };\n \n-#ifdef _GLIBCXX_USE_NANOSLEEP\n \t::nanosleep(&__ts, 0);\n-#endif\n       }\n+#endif\n   }\n \n   /// thread::id\n@@ -226,10 +229,8 @@ namespace std\n \n     friend bool \n     operator==(thread::id __x, thread::id __y)\n-    { \n-      return \n-\tstatic_cast<bool>(__gthread_equal(__x._M_thread_id, __y._M_thread_id));\n-    }\n+    { return static_cast<bool>(__gthread_equal(__x._M_thread_id,\n+\t\t\t\t\t       __y._M_thread_id)); }\n \n     friend bool\n     operator<(thread::id __x, thread::id __y)\n@@ -271,6 +272,26 @@ namespace std\n       else\n \treturn __out << __id._M_thread_id;\n     }  \n+\n+  inline bool\n+  thread::joinable() const\n+  { return get_id() != thread::id(); }\n+\n+  inline thread::id\n+  thread::get_id() const\n+  {\n+    if(_M_thread_data)\n+      return thread::id(_M_thread_data->_M_thread_handle);\n+    else\n+      return thread::id();\n+  }\n+\n+  namespace this_thread\n+  {\n+    inline thread::id\n+    get_id()\n+    { return thread::id(__gthread_self()); }\n+  }\n }\n \n #endif // _GLIBCXX_HAS_GTHREADS && _GLIBCXX_USE_C99_STDINT_TR1"}, {"sha": "b7a4f83a8e54c4a5cf4d1328e95d888b83dbcbff", "filename": "libstdc++-v3/src/thread.cc", "status": "modified", "additions": 1, "deletions": 39, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Fsrc%2Fthread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Fsrc%2Fthread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fthread.cc?ref=959d14e166813ae53bfc2e0bb5c2953bce764702", "patch": "@@ -1,6 +1,6 @@\n // thread -*- C++ -*-\n \n-// Copyright (C) 2008 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -58,27 +58,6 @@ namespace std\n     }\n   }\n \n-  thread::thread()\n-  { }\n-\n-  thread::~thread()\n-  {\n-    detach();\n-  }\n-\n-  thread::id\n-  thread::get_id() const\n-  {\n-    if(_M_thread_data)\n-      return thread::id(_M_thread_data->_M_thread_handle); \n-    else\n-      return thread::id();\n-  }\n-\n-  bool\n-  thread::joinable() const\n-  { return get_id() != id(); }\n-  \n   void\n   thread::join()\n   {\n@@ -108,12 +87,6 @@ namespace std\n       }\n   }\n \n-  void\n-  thread::swap(thread&& __t)\n-  {\n-    std::swap(_M_thread_data, __t._M_thread_data);\n-  }\n-\n   void \n   thread::__start_thread()\n   {\n@@ -123,17 +96,6 @@ namespace std\n     if(__e)\n       __throw_system_error(__e);\n   }\n-\n-  namespace this_thread\n-  {\n-    thread::id\n-    get_id()\n-    { return thread::id(__gthread_self()); }\n-    \n-    void\n-    yield()\n-    { __gthread_yield(); }   \n-  }\n }\n \n #endif // _GLIBCXX_HAS_GTHREADS && _GLIBCXX_USE_C99_STDINT_TR1"}, {"sha": "a632a45942f046bcaa9108f1a2726398dfca58b8", "filename": "libstdc++-v3/testsuite/30_threads/thread/this_thread/2.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fthis_thread%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fthis_thread%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fthis_thread%2F2.cc?ref=959d14e166813ae53bfc2e0bb5c2953bce764702", "patch": "@@ -4,8 +4,9 @@\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }\n // { dg-require-gthreads \"\" }\n+// { dg-require-sched-yield \"\" }\n \n-// Copyright (C) 2008 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "8270376d57e80d3d55c06b072b380ea304c03a80", "filename": "libstdc++-v3/testsuite/lib/dg-options.exp", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp?ref=959d14e166813ae53bfc2e0bb5c2953bce764702", "patch": "@@ -1,6 +1,7 @@\n # Handlers for additional dg-xxx keywords in tests.\n \n-# Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n+# Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009\n+# Free Software Foundation, Inc.\n #\n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -125,6 +126,15 @@ proc dg-require-nanosleep { args } {\n     return\n }\n \n+proc dg-require-sched-yield { args } {\n+    if { ![ check_v3_target_sched_yield ] } {\n+        upvar dg-do-what dg-do-what\n+        set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+        return\n+    }\n+    return\n+}\n+\n proc dg-require-string-conversions { args } {\n     if { ![ check_v3_target_string_conversions ] } {\n         upvar dg-do-what dg-do-what"}, {"sha": "bd01b25bc184dfdbcec71c2ed8b4d3541ad93e2d", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 59, "deletions": 1, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959d14e166813ae53bfc2e0bb5c2953bce764702/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=959d14e166813ae53bfc2e0bb5c2953bce764702", "patch": "@@ -1,6 +1,6 @@\n # libstdc++ \"tool init file\" for DejaGNU\n \n-# Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+# Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n # Free Software Foundation, Inc.\n #\n # This program is free software; you can redistribute it and/or modify\n@@ -1261,6 +1261,64 @@ proc check_v3_target_nanosleep { } {\n     return $et_nanosleep\n }\n \n+proc check_v3_target_sched_yield { } {\n+    global cxxflags\n+    global DEFAULT_CXXFLAGS\n+    global et_sched_yield\n+\n+    global tool\n+\n+    if { ![info exists et_sched_yield_target_name] } {\n+        set et_sched_yield_target_name \"\"\n+    }\n+\n+    # If the target has changed since we set the cached value, clear it.\n+    set current_target [current_target_name]\n+    if { $current_target != $et_sched_yield_target_name } {\n+        verbose \"check_v3_target_sched_yield: `$et_sched_yield_target_name'\" 2\n+        set et_sched_yield_target_name $current_target\n+        if [info exists et_sched_yield] {\n+            verbose \"check_v3_target_sched_yield: removing cached result\" 2\n+            unset et_sched_yield\n+        }\n+    }\n+\n+    if [info exists et_sched_yield] {\n+        verbose \"check_v3_target_sched_yield: using cached result\" 2\n+    } else {\n+        set et_sched_yield 0\n+\n+        # Set up and compile a C++0x test program that depends\n+        # on the sched_yield facility to be available.\n+        set src sched_yield[pid].cc\n+        set exe sched_yield[pid].exe\n+\n+        set f [open $src \"w\"]\n+        puts $f \"#include <bits/c++config.h>\"\n+        puts $f \"int main()\"\n+        puts $f \"#ifdef _GLIBCXX_USE_SCHED_YIELD\"\n+        puts $f \"{ return 0; }\"\n+        puts $f \"#endif\"\n+        close $f\n+\n+        set cxxflags_saved $cxxflags\n+        set cxxflags \"$cxxflags $DEFAULT_CXXFLAGS -Werror\"\n+\n+        set lines [v3_target_compile $src $exe executable \"\"]\n+        set cxxflags $cxxflags_saved\n+        file delete $src\n+\n+        if [string match \"\" $lines] {\n+            # No error message, compilation succeeded.\n+            set et_sched_yield 1\n+        } else {\n+            verbose \"check_v3_target_sched_yield: compilation failed\" 2\n+        }\n+    }\n+    verbose \"check_v3_target_sched_yield: $et_sched_yield\" 2\n+    return $et_sched_yield\n+}\n+\n proc check_v3_target_string_conversions { } {\n     global cxxflags\n     global DEFAULT_CXXFLAGS"}]}