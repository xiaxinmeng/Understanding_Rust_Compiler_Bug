{"sha": "63c59f054a5cd6d356ad8bce79182ab205b7aa43", "node_id": "C_kwDOANBUbNoAKDYzYzU5ZjA1NGE1Y2Q2ZDM1NmFkOGJjZTc5MTgyYWIyMDViN2FhNDM", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-12-06T18:29:31Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-12-06T18:29:31Z"}, "message": "ranger: Add shortcuts for single-successor blocks\n\nWhen compiling an optabs.ii at -O2 with a release-checking build,\nthere were 6,643,575 calls to gimple_outgoing_range_stmt_p.  96.8% of\nthem were for blocks with a single successor, which never have a control\nstatement that generates new range info.  This patch therefore adds a\nshortcut for that case.\n\nThis gives a ~1% compile-time improvement for the test.\n\nI tried making the function inline (in the header) so that the\nsingle_succ_p didn't need to be repeated, but it seemed to make things\nslightly worse.\n\ngcc/\n\t* gimple-range-edge.cc (gimple_outgoing_range::edge_range_p): Add\n\ta shortcut for blocks with single successors.\n\t* gimple-range-gori.cc (gori_map::calculate_gori): Likewise.", "tree": {"sha": "5527a2db354d9a14fc0a562bd663cf251cbe6770", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5527a2db354d9a14fc0a562bd663cf251cbe6770"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63c59f054a5cd6d356ad8bce79182ab205b7aa43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63c59f054a5cd6d356ad8bce79182ab205b7aa43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63c59f054a5cd6d356ad8bce79182ab205b7aa43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63c59f054a5cd6d356ad8bce79182ab205b7aa43/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d27b7e69872b34890077e3dff291b4bcbc52e4cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d27b7e69872b34890077e3dff291b4bcbc52e4cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d27b7e69872b34890077e3dff291b4bcbc52e4cd"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "9e805230004d58b72179b1904350fa034e78986f", "filename": "gcc/gimple-range-edge.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63c59f054a5cd6d356ad8bce79182ab205b7aa43/gcc%2Fgimple-range-edge.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63c59f054a5cd6d356ad8bce79182ab205b7aa43/gcc%2Fgimple-range-edge.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-edge.cc?ref=63c59f054a5cd6d356ad8bce79182ab205b7aa43", "patch": "@@ -182,6 +182,9 @@ gimple_outgoing_range::calc_switch_ranges (gswitch *sw)\n gimple *\n gimple_outgoing_range::edge_range_p (irange &r, edge e)\n {\n+  if (single_succ_p (e->src))\n+    return NULL;\n+\n   // Determine if there is an outgoing edge.\n   gimple *s = gimple_outgoing_range_stmt_p (e->src);\n   if (!s)"}, {"sha": "8691abab4435455ba64a552bc60575a788efe5bb", "filename": "gcc/gimple-range-gori.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63c59f054a5cd6d356ad8bce79182ab205b7aa43/gcc%2Fgimple-range-gori.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63c59f054a5cd6d356ad8bce79182ab205b7aa43/gcc%2Fgimple-range-gori.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-gori.cc?ref=63c59f054a5cd6d356ad8bce79182ab205b7aa43", "patch": "@@ -555,6 +555,9 @@ gori_map::calculate_gori (basic_block bb)\n   m_outgoing[bb->index] = BITMAP_ALLOC (&m_bitmaps);\n   m_incoming[bb->index] = BITMAP_ALLOC (&m_bitmaps);\n \n+  if (single_succ_p (bb))\n+    return;\n+\n   // If this block's last statement may generate range informaiton, go\n   // calculate it.\n   gimple *stmt = gimple_outgoing_range_stmt_p (bb);"}]}