{"sha": "69fbfdd8c6f44d244d7caef4e58967054272a9d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlmYmZkZDhjNmY0NGQyNDRkN2NhZWY0ZTU4OTY3MDU0MjcyYTlkMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-09-04T12:41:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-09-04T12:41:42Z"}, "message": "Trivial reformatting.\n\nFrom-SVN: r87084", "tree": {"sha": "e955e740b4369d434da4a91f050f98e9e0e66dee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e955e740b4369d434da4a91f050f98e9e0e66dee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69fbfdd8c6f44d244d7caef4e58967054272a9d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69fbfdd8c6f44d244d7caef4e58967054272a9d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69fbfdd8c6f44d244d7caef4e58967054272a9d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69fbfdd8c6f44d244d7caef4e58967054272a9d1/comments", "author": null, "committer": null, "parents": [{"sha": "c51c248f9f4a90d1112006ae5bc8c8ca52828da5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c51c248f9f4a90d1112006ae5bc8c8ca52828da5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c51c248f9f4a90d1112006ae5bc8c8ca52828da5"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "465f6605299b17d110dbb8d141e55f3fbdd1c3b1", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fbfdd8c6f44d244d7caef4e58967054272a9d1/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fbfdd8c6f44d244d7caef4e58967054272a9d1/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=69fbfdd8c6f44d244d7caef4e58967054272a9d1", "patch": "@@ -433,8 +433,7 @@ copy_list (tree list)\n tree\n build_int_cst (tree type, HOST_WIDE_INT low)\n {\n-  return build_int_cst_wide (type, low,\n-\t\t\t     low < 0 ? -1 : 0);\n+  return build_int_cst_wide (type, low, low < 0 ? -1 : 0);\n }\n \n /* Create an INT_CST node with a LOW value zero extended.  */"}]}