{"sha": "fd0eb89726112b81c4157c301d3699a4f1bf31d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQwZWI4OTcyNjExMmI4MWM0MTU3YzMwMWQzNjk5YTRmMWJmMzFkNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2008-06-13T06:56:31Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-06-13T06:56:31Z"}, "message": "mips.c (BUILTIN_AVAIL_NON_MIPS16): New macro.\n\ngcc/\n\t* config/mips/mips.c (BUILTIN_AVAIL_NON_MIPS16): New macro.\n\t(AVAIL_NON_MIPS16): Likewise.\n\t(mips_builtin_description): Replace target_flags with a predicate.\n\t(paired_single, sb1_paired_single, mips3d, dsp, dspr2, dsp_32)\n\t(dspr2_32): New availability predicates.\n\t(MIPS_BUILTIN): New macro.\n\t(DIRECT_BUILTIN, CMP_SCALAR_BUILTINS, CMP_PS_BUILTINS)\n\t(CMP_4S_BUILTINS, MOVTF_BUILTINS, CMP_BUILTINS)\n\t(DIRECT_NO_TARGET_BUILTIN, BPOSGE_BUILTIN): Use it.\n\tReplace the TARGET_FLAGS parameters with AVAIL parameters.\n\t(mips_ps_bdesc, mips_sb1_bdesc, mips_dsp_bdesc)\n\t(mips_dsp_32only_bdesc): Merge into...\n\t(mips_builtins): ...this new array.\n\t(mips_bdesc_map, mips_bdesc_arrays): Delete.\n\t(mips_init_builtins): Update after above changes.\n\t(mips_expand_builtin_1): Merge into...\n\t(mips_expand_builtin): ...here and update after above changes.\n\nFrom-SVN: r136738", "tree": {"sha": "f783f9f47540912b992e817fdbb20023d5e44b6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f783f9f47540912b992e817fdbb20023d5e44b6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd0eb89726112b81c4157c301d3699a4f1bf31d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0eb89726112b81c4157c301d3699a4f1bf31d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd0eb89726112b81c4157c301d3699a4f1bf31d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0eb89726112b81c4157c301d3699a4f1bf31d5/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad90a34ad33c4fe115a9fcb538b13e8469679b05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad90a34ad33c4fe115a9fcb538b13e8469679b05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad90a34ad33c4fe115a9fcb538b13e8469679b05"}], "stats": {"total": 673, "additions": 337, "deletions": 336}, "files": [{"sha": "961a1309961f79918fd5f3f178eeb57a9980ab1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0eb89726112b81c4157c301d3699a4f1bf31d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0eb89726112b81c4157c301d3699a4f1bf31d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd0eb89726112b81c4157c301d3699a4f1bf31d5", "patch": "@@ -1,3 +1,23 @@\n+2008-06-13  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c (BUILTIN_AVAIL_NON_MIPS16): New macro.\n+\t(AVAIL_NON_MIPS16): Likewise.\n+\t(mips_builtin_description): Replace target_flags with a predicate.\n+\t(paired_single, sb1_paired_single, mips3d, dsp, dspr2, dsp_32)\n+\t(dspr2_32): New availability predicates.\n+\t(MIPS_BUILTIN): New macro.\n+\t(DIRECT_BUILTIN, CMP_SCALAR_BUILTINS, CMP_PS_BUILTINS)\n+\t(CMP_4S_BUILTINS, MOVTF_BUILTINS, CMP_BUILTINS)\n+\t(DIRECT_NO_TARGET_BUILTIN, BPOSGE_BUILTIN): Use it.\n+\tReplace the TARGET_FLAGS parameters with AVAIL parameters.\n+\t(mips_ps_bdesc, mips_sb1_bdesc, mips_dsp_bdesc)\n+\t(mips_dsp_32only_bdesc): Merge into...\n+\t(mips_builtins): ...this new array.\n+\t(mips_bdesc_map, mips_bdesc_arrays): Delete.\n+\t(mips_init_builtins): Update after above changes.\n+\t(mips_expand_builtin_1): Merge into...\n+\t(mips_expand_builtin): ...here and update after above changes.\n+\n 2008-06-12  Paul Brook  <paul@codesourcery.com>\n \n \t* longlong.h (__arm__): Define count_leading_zeros."}, {"sha": "69f8258e8f01283bf5d41283f2fee4fd004e3e92", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 317, "deletions": 336, "changes": 653, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0eb89726112b81c4157c301d3699a4f1bf31d5/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0eb89726112b81c4157c301d3699a4f1bf31d5/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=fd0eb89726112b81c4157c301d3699a4f1bf31d5", "patch": "@@ -10146,6 +10146,23 @@ mips_prefetch_cookie (rtx write, rtx locality)\n   return GEN_INT (INTVAL (write) + 6);\n }\n \f\n+/* Flags that indicate when a built-in function is available.\n+\n+   BUILTIN_AVAIL_NON_MIPS16\n+\tThe function is available on the current target, but only\n+\tin non-MIPS16 mode.  */\n+#define BUILTIN_AVAIL_NON_MIPS16 1\n+\n+/* Declare an availability predicate for built-in functions that\n+   require non-MIPS16 mode and also require COND to be true.\n+   NAME is the main part of the predicate's name.  */\n+#define AVAIL_NON_MIPS16(NAME, COND)\t\t\t\t\t\\\n+ static unsigned int\t\t\t\t\t\t\t\\\n+ mips_builtin_avail_##NAME (void)\t\t\t\t\t\\\n+ {\t\t\t\t\t\t\t\t\t\\\n+   return (COND) ? BUILTIN_AVAIL_NON_MIPS16 : 0;\t\t\t\\\n+ }\n+\n /* This structure describes a single built-in function.  */\n struct mips_builtin_description {\n   /* The code of the main .md file instruction.  See mips_builtin_type\n@@ -10164,309 +10181,297 @@ struct mips_builtin_description {\n   /* The function's prototype.  */\n   enum mips_function_type function_type;\n \n-  /* The target flags required for this function.  */\n-  int target_flags;\n+  /* Whether the function is available.  */\n+  unsigned int (*avail) (void);\n };\n \n-/* Define a MIPS_BUILTIN_DIRECT function for instruction CODE_FOR_mips_<INSN>.\n-   FUNCTION_TYPE and TARGET_FLAGS are mips_builtin_description fields.  */\n-#define DIRECT_BUILTIN(INSN, FUNCTION_TYPE, TARGET_FLAGS)\t\t\\\n-  { CODE_FOR_mips_ ## INSN, 0, \"__builtin_mips_\" #INSN,\t\t\t\\\n-    MIPS_BUILTIN_DIRECT, FUNCTION_TYPE, TARGET_FLAGS }\n+AVAIL_NON_MIPS16 (paired_single, TARGET_PAIRED_SINGLE_FLOAT)\n+AVAIL_NON_MIPS16 (sb1_paired_single, TARGET_SB1 && TARGET_PAIRED_SINGLE_FLOAT)\n+AVAIL_NON_MIPS16 (mips3d, TARGET_MIPS3D)\n+AVAIL_NON_MIPS16 (dsp, TARGET_DSP)\n+AVAIL_NON_MIPS16 (dspr2, TARGET_DSPR2)\n+AVAIL_NON_MIPS16 (dsp_32, !TARGET_64BIT && TARGET_DSP)\n+AVAIL_NON_MIPS16 (dspr2_32, !TARGET_64BIT && TARGET_DSPR2)\n+\n+/* Construct a mips_builtin_description from the given arguments.\n+\n+   INSN is the name of the associated instruction pattern, without the\n+   leading CODE_FOR_mips_.\n+\n+   CODE is the floating-point condition code associated with the\n+   function.  It can be 'f' if the field is not applicable.\n+\n+   NAME is the name of the function itself, without the leading\n+   \"__builtin_mips_\".\n+\n+   BUILTIN_TYPE and FUNCTION_TYPE are mips_builtin_description fields.\n+\n+   AVAIL is the name of the availability predicate, without the leading\n+   mips_builtin_avail_.  */\n+#define MIPS_BUILTIN(INSN, COND, NAME, BUILTIN_TYPE,\t\t\t\\\n+\t\t     FUNCTION_TYPE, AVAIL)\t\t\t\t\\\n+  { CODE_FOR_mips_ ## INSN, MIPS_FP_COND_ ## COND,\t\t\t\\\n+    \"__builtin_mips_\" NAME, BUILTIN_TYPE, FUNCTION_TYPE,\t\t\\\n+    mips_builtin_avail_ ## AVAIL }\n+\n+/* Define __builtin_mips_<INSN>, which is a MIPS_BUILTIN_DIRECT function\n+   mapped to instruction CODE_FOR_mips_<INSN>,  FUNCTION_TYPE and AVAIL\n+   are as for MIPS_BUILTIN.  */\n+#define DIRECT_BUILTIN(INSN, FUNCTION_TYPE, AVAIL)\t\t\t\\\n+  MIPS_BUILTIN (INSN, f, #INSN, MIPS_BUILTIN_DIRECT, FUNCTION_TYPE, AVAIL)\n \n /* Define __builtin_mips_<INSN>_<COND>_{s,d} functions, both of which\n-   require TARGET_FLAGS.  */\n-#define CMP_SCALAR_BUILTINS(INSN, COND, TARGET_FLAGS)\t\t\t\\\n-  { CODE_FOR_mips_ ## INSN ## _cond_s, MIPS_FP_COND_ ## COND,\t\t\\\n-    \"__builtin_mips_\" #INSN \"_\" #COND \"_s\",\t\t\t\t\\\n-    MIPS_BUILTIN_CMP_SINGLE, MIPS_INT_FTYPE_SF_SF, TARGET_FLAGS },\t\\\n-  { CODE_FOR_mips_ ## INSN ## _cond_d, MIPS_FP_COND_ ## COND,\t\t\\\n-    \"__builtin_mips_\" #INSN \"_\" #COND \"_d\",\t\t\t\t\\\n-    MIPS_BUILTIN_CMP_SINGLE, MIPS_INT_FTYPE_DF_DF, TARGET_FLAGS }\n+   are subject to mips_builtin_avail_<AVAIL>.  */\n+#define CMP_SCALAR_BUILTINS(INSN, COND, AVAIL)\t\t\t\t\\\n+  MIPS_BUILTIN (INSN ## _cond_s, COND, #INSN \"_\" #COND \"_s\",\t\t\\\n+\t\tMIPS_BUILTIN_CMP_SINGLE, MIPS_INT_FTYPE_SF_SF, AVAIL),\t\\\n+  MIPS_BUILTIN (INSN ## _cond_d, COND, #INSN \"_\" #COND \"_d\",\t\t\\\n+\t\tMIPS_BUILTIN_CMP_SINGLE, MIPS_INT_FTYPE_DF_DF, AVAIL)\n \n /* Define __builtin_mips_{any,all,upper,lower}_<INSN>_<COND>_ps.\n-   The lower and upper forms require TARGET_FLAGS while the any and all\n-   forms require MASK_MIPS3D.  */\n-#define CMP_PS_BUILTINS(INSN, COND, TARGET_FLAGS)\t\t\t\\\n-  { CODE_FOR_mips_ ## INSN ## _cond_ps, MIPS_FP_COND_ ## COND,\t\t\\\n-    \"__builtin_mips_any_\" #INSN \"_\" #COND \"_ps\",\t\t\t\\\n-    MIPS_BUILTIN_CMP_ANY, MIPS_INT_FTYPE_V2SF_V2SF, MASK_MIPS3D },\t\\\n-  { CODE_FOR_mips_ ## INSN ## _cond_ps, MIPS_FP_COND_ ## COND,\t\t\\\n-    \"__builtin_mips_all_\" #INSN \"_\" #COND \"_ps\",\t\t\t\\\n-    MIPS_BUILTIN_CMP_ALL, MIPS_INT_FTYPE_V2SF_V2SF, MASK_MIPS3D },\t\\\n-  { CODE_FOR_mips_ ## INSN ## _cond_ps, MIPS_FP_COND_ ## COND,\t\t\\\n-    \"__builtin_mips_lower_\" #INSN \"_\" #COND \"_ps\",\t\t\t\\\n-    MIPS_BUILTIN_CMP_LOWER, MIPS_INT_FTYPE_V2SF_V2SF, TARGET_FLAGS },\t\\\n-  { CODE_FOR_mips_ ## INSN ## _cond_ps, MIPS_FP_COND_ ## COND,\t\t\\\n-    \"__builtin_mips_upper_\" #INSN \"_\" #COND \"_ps\",\t\t\t\\\n-    MIPS_BUILTIN_CMP_UPPER, MIPS_INT_FTYPE_V2SF_V2SF, TARGET_FLAGS }\n+   The lower and upper forms are subject to mips_builtin_avail_<AVAIL>\n+   while the any and all forms are subject to mips_builtin_avail_mips3d.  */\n+#define CMP_PS_BUILTINS(INSN, COND, AVAIL)\t\t\t\t\\\n+  MIPS_BUILTIN (INSN ## _cond_ps, COND, \"any_\" #INSN \"_\" #COND \"_ps\",\t\\\n+\t\tMIPS_BUILTIN_CMP_ANY, MIPS_INT_FTYPE_V2SF_V2SF,\t\t\\\n+\t\tmips3d),\t\t\t\t\t\t\\\n+  MIPS_BUILTIN (INSN ## _cond_ps, COND, \"all_\" #INSN \"_\" #COND \"_ps\",\t\\\n+\t\tMIPS_BUILTIN_CMP_ALL, MIPS_INT_FTYPE_V2SF_V2SF,\t\t\\\n+\t\tmips3d),\t\t\t\t\t\t\\\n+  MIPS_BUILTIN (INSN ## _cond_ps, COND, \"lower_\" #INSN \"_\" #COND \"_ps\",\t\\\n+\t\tMIPS_BUILTIN_CMP_LOWER, MIPS_INT_FTYPE_V2SF_V2SF,\t\\\n+\t\tAVAIL),\t\t\t\t\t\t\t\\\n+  MIPS_BUILTIN (INSN ## _cond_ps, COND, \"upper_\" #INSN \"_\" #COND \"_ps\",\t\\\n+\t\tMIPS_BUILTIN_CMP_UPPER, MIPS_INT_FTYPE_V2SF_V2SF,\t\\\n+\t\tAVAIL)\n \n /* Define __builtin_mips_{any,all}_<INSN>_<COND>_4s.  The functions\n-   require MASK_MIPS3D.  */\n+   are subject to mips_builtin_avail_mips3d.  */\n #define CMP_4S_BUILTINS(INSN, COND)\t\t\t\t\t\\\n-  { CODE_FOR_mips_ ## INSN ## _cond_4s, MIPS_FP_COND_ ## COND,\t\t\\\n-    \"__builtin_mips_any_\" #INSN \"_\" #COND \"_4s\",\t\t\t\\\n-    MIPS_BUILTIN_CMP_ANY, MIPS_INT_FTYPE_V2SF_V2SF_V2SF_V2SF,\t\t\\\n-    MASK_MIPS3D },\t\t\t\t\t\t\t\\\n-  { CODE_FOR_mips_ ## INSN ## _cond_4s, MIPS_FP_COND_ ## COND,\t\t\\\n-    \"__builtin_mips_all_\" #INSN \"_\" #COND \"_4s\",\t\t\t\\\n-    MIPS_BUILTIN_CMP_ALL, MIPS_INT_FTYPE_V2SF_V2SF_V2SF_V2SF,\t\t\\\n-    MASK_MIPS3D }\n+  MIPS_BUILTIN (INSN ## _cond_4s, COND, \"any_\" #INSN \"_\" #COND \"_4s\",\t\\\n+\t\tMIPS_BUILTIN_CMP_ANY,\t\t\t\t\t\\\n+\t\tMIPS_INT_FTYPE_V2SF_V2SF_V2SF_V2SF, mips3d),\t\t\\\n+  MIPS_BUILTIN (INSN ## _cond_4s, COND, \"all_\" #INSN \"_\" #COND \"_4s\",\t\\\n+\t\tMIPS_BUILTIN_CMP_ALL,\t\t\t\t\t\\\n+\t\tMIPS_INT_FTYPE_V2SF_V2SF_V2SF_V2SF, mips3d)\n \n /* Define __builtin_mips_mov{t,f}_<INSN>_<COND>_ps.  The comparison\n-   instruction requires TARGET_FLAGS.  */\n-#define MOVTF_BUILTINS(INSN, COND, TARGET_FLAGS)\t\t\t\\\n-  { CODE_FOR_mips_ ## INSN ## _cond_ps, MIPS_FP_COND_ ## COND,\t\t\\\n-    \"__builtin_mips_movt_\" #INSN \"_\" #COND \"_ps\",\t\t\t\\\n-    MIPS_BUILTIN_MOVT, MIPS_V2SF_FTYPE_V2SF_V2SF_V2SF_V2SF,\t\t\\\n-    TARGET_FLAGS },\t\t\t\t\t\t\t\\\n-  { CODE_FOR_mips_ ## INSN ## _cond_ps, MIPS_FP_COND_ ## COND,\t\t\\\n-    \"__builtin_mips_movf_\" #INSN \"_\" #COND \"_ps\",\t\t\t\\\n-    MIPS_BUILTIN_MOVF, MIPS_V2SF_FTYPE_V2SF_V2SF_V2SF_V2SF,\t\t\\\n-    TARGET_FLAGS }\n+   instruction requires mips_builtin_avail_<AVAIL>.  */\n+#define MOVTF_BUILTINS(INSN, COND, AVAIL)\t\t\t\t\\\n+  MIPS_BUILTIN (INSN ## _cond_ps, COND, \"movt_\" #INSN \"_\" #COND \"_ps\",\t\\\n+\t\tMIPS_BUILTIN_MOVT, MIPS_V2SF_FTYPE_V2SF_V2SF_V2SF_V2SF,\t\\\n+\t\tAVAIL),\t\t\t\t\t\t\t\\\n+  MIPS_BUILTIN (INSN ## _cond_ps, COND, \"movf_\" #INSN \"_\" #COND \"_ps\",\t\\\n+\t\tMIPS_BUILTIN_MOVF, MIPS_V2SF_FTYPE_V2SF_V2SF_V2SF_V2SF,\t\\\n+\t\tAVAIL)\n \n /* Define all the built-in functions related to C.cond.fmt condition COND.  */\n #define CMP_BUILTINS(COND)\t\t\t\t\t\t\\\n-  MOVTF_BUILTINS (c, COND, MASK_PAIRED_SINGLE_FLOAT),\t\t\t\\\n-  MOVTF_BUILTINS (cabs, COND, MASK_MIPS3D),\t\t\t\t\\\n-  CMP_SCALAR_BUILTINS (cabs, COND, MASK_MIPS3D),\t\t\t\\\n-  CMP_PS_BUILTINS (c, COND, MASK_PAIRED_SINGLE_FLOAT),\t\t\t\\\n-  CMP_PS_BUILTINS (cabs, COND, MASK_MIPS3D),\t\t\t\t\\\n+  MOVTF_BUILTINS (c, COND, paired_single),\t\t\t\t\\\n+  MOVTF_BUILTINS (cabs, COND, mips3d),\t\t\t\t\t\\\n+  CMP_SCALAR_BUILTINS (cabs, COND, mips3d),\t\t\t\t\\\n+  CMP_PS_BUILTINS (c, COND, paired_single),\t\t\t\t\\\n+  CMP_PS_BUILTINS (cabs, COND, mips3d),\t\t\t\t\t\\\n   CMP_4S_BUILTINS (c, COND),\t\t\t\t\t\t\\\n   CMP_4S_BUILTINS (cabs, COND)\n \n-static const struct mips_builtin_description mips_ps_bdesc[] = {\n-  DIRECT_BUILTIN (pll_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, MASK_PAIRED_SINGLE_FLOAT),\n-  DIRECT_BUILTIN (pul_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, MASK_PAIRED_SINGLE_FLOAT),\n-  DIRECT_BUILTIN (plu_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, MASK_PAIRED_SINGLE_FLOAT),\n-  DIRECT_BUILTIN (puu_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, MASK_PAIRED_SINGLE_FLOAT),\n-  DIRECT_BUILTIN (cvt_ps_s, MIPS_V2SF_FTYPE_SF_SF, MASK_PAIRED_SINGLE_FLOAT),\n-  DIRECT_BUILTIN (cvt_s_pl, MIPS_SF_FTYPE_V2SF, MASK_PAIRED_SINGLE_FLOAT),\n-  DIRECT_BUILTIN (cvt_s_pu, MIPS_SF_FTYPE_V2SF, MASK_PAIRED_SINGLE_FLOAT),\n-  DIRECT_BUILTIN (abs_ps, MIPS_V2SF_FTYPE_V2SF, MASK_PAIRED_SINGLE_FLOAT),\n-\n-  DIRECT_BUILTIN (alnv_ps, MIPS_V2SF_FTYPE_V2SF_V2SF_INT,\n-\t\t  MASK_PAIRED_SINGLE_FLOAT),\n-  DIRECT_BUILTIN (addr_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (mulr_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (cvt_pw_ps, MIPS_V2SF_FTYPE_V2SF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (cvt_ps_pw, MIPS_V2SF_FTYPE_V2SF, MASK_MIPS3D),\n-\n-  DIRECT_BUILTIN (recip1_s, MIPS_SF_FTYPE_SF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (recip1_d, MIPS_DF_FTYPE_DF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (recip1_ps, MIPS_V2SF_FTYPE_V2SF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (recip2_s, MIPS_SF_FTYPE_SF_SF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (recip2_d, MIPS_DF_FTYPE_DF_DF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (recip2_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, MASK_MIPS3D),\n-\n-  DIRECT_BUILTIN (rsqrt1_s, MIPS_SF_FTYPE_SF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (rsqrt1_d, MIPS_DF_FTYPE_DF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (rsqrt1_ps, MIPS_V2SF_FTYPE_V2SF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (rsqrt2_s, MIPS_SF_FTYPE_SF_SF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (rsqrt2_d, MIPS_DF_FTYPE_DF_DF, MASK_MIPS3D),\n-  DIRECT_BUILTIN (rsqrt2_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, MASK_MIPS3D),\n-\n-  MIPS_FP_CONDITIONS (CMP_BUILTINS)\n-};\n+/* Define __builtin_mips_<INSN>, which is a MIPS_BUILTIN_DIRECT_NO_TARGET\n+   function mapped to instruction CODE_FOR_mips_<INSN>,  FUNCTION_TYPE\n+   and AVAIL are as for MIPS_BUILTIN.  */\n+#define DIRECT_NO_TARGET_BUILTIN(INSN, FUNCTION_TYPE, AVAIL)\t\t\\\n+  MIPS_BUILTIN (INSN, f, #INSN,\tMIPS_BUILTIN_DIRECT_NO_TARGET,\t\t\\\n+\t\tFUNCTION_TYPE, AVAIL)\n \n-/* Built-in functions for the SB-1 processor.  */\n+/* Define __builtin_mips_bposge<VALUE>.  <VALUE> is 32 for the MIPS32 DSP\n+   branch instruction.  AVAIL is as for MIPS_BUILTIN.  */\n+#define BPOSGE_BUILTIN(VALUE, AVAIL)\t\t\t\t\t\\\n+  MIPS_BUILTIN (bposge, f, \"bposge\" #VALUE,\t\t\t\t\\\n+\t\tMIPS_BUILTIN_BPOSGE ## VALUE, MIPS_SI_FTYPE_VOID, AVAIL)\n \n #define CODE_FOR_mips_sqrt_ps CODE_FOR_sqrtv2sf2\n-\n-static const struct mips_builtin_description mips_sb1_bdesc[] = {\n-  DIRECT_BUILTIN (sqrt_ps, MIPS_V2SF_FTYPE_V2SF, MASK_PAIRED_SINGLE_FLOAT)\n-};\n-\n-/* Built-in functions for the DSP ASE.  */\n-\n #define CODE_FOR_mips_addq_ph CODE_FOR_addv2hi3\n #define CODE_FOR_mips_addu_qb CODE_FOR_addv4qi3\n #define CODE_FOR_mips_subq_ph CODE_FOR_subv2hi3\n #define CODE_FOR_mips_subu_qb CODE_FOR_subv4qi3\n #define CODE_FOR_mips_mul_ph CODE_FOR_mulv2hi3\n \n-/* Define a MIPS_BUILTIN_DIRECT_NO_TARGET function for instruction\n-   CODE_FOR_mips_<INSN>.  FUNCTION_TYPE and TARGET_FLAGS are\n-   mips_builtin_description fields.  */\n-#define DIRECT_NO_TARGET_BUILTIN(INSN, FUNCTION_TYPE, TARGET_FLAGS)\t\\\n-  { CODE_FOR_mips_ ## INSN, 0, \"__builtin_mips_\" #INSN,\t\t\t\\\n-    MIPS_BUILTIN_DIRECT_NO_TARGET, FUNCTION_TYPE, TARGET_FLAGS }\n-\n-/* Define __builtin_mips_bposge<VALUE>.  <VALUE> is 32 for the MIPS32 DSP\n-   branch instruction.  TARGET_FLAGS is a mips_builtin_description field.  */\n-#define BPOSGE_BUILTIN(VALUE, TARGET_FLAGS)\t\t\t\t\\\n-  { CODE_FOR_mips_bposge, 0, \"__builtin_mips_bposge\" #VALUE,\t\t\\\n-    MIPS_BUILTIN_BPOSGE ## VALUE, MIPS_SI_FTYPE_VOID, TARGET_FLAGS }\n-\n-static const struct mips_builtin_description mips_dsp_bdesc[] = {\n-  DIRECT_BUILTIN (addq_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (addq_s_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (addq_s_w, MIPS_SI_FTYPE_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (addu_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (addu_s_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (subq_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (subq_s_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (subq_s_w, MIPS_SI_FTYPE_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (subu_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (subu_s_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (addsc, MIPS_SI_FTYPE_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (addwc, MIPS_SI_FTYPE_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (modsub, MIPS_SI_FTYPE_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (raddu_w_qb, MIPS_SI_FTYPE_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (absq_s_ph, MIPS_V2HI_FTYPE_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (absq_s_w, MIPS_SI_FTYPE_SI, MASK_DSP),\n-  DIRECT_BUILTIN (precrq_qb_ph, MIPS_V4QI_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (precrq_ph_w, MIPS_V2HI_FTYPE_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (precrq_rs_ph_w, MIPS_V2HI_FTYPE_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (precrqu_s_qb_ph, MIPS_V4QI_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (preceq_w_phl, MIPS_SI_FTYPE_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (preceq_w_phr, MIPS_SI_FTYPE_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (precequ_ph_qbl, MIPS_V2HI_FTYPE_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (precequ_ph_qbr, MIPS_V2HI_FTYPE_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (precequ_ph_qbla, MIPS_V2HI_FTYPE_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (precequ_ph_qbra, MIPS_V2HI_FTYPE_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (preceu_ph_qbl, MIPS_V2HI_FTYPE_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (preceu_ph_qbr, MIPS_V2HI_FTYPE_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (preceu_ph_qbla, MIPS_V2HI_FTYPE_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (preceu_ph_qbra, MIPS_V2HI_FTYPE_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (shll_qb, MIPS_V4QI_FTYPE_V4QI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (shll_ph, MIPS_V2HI_FTYPE_V2HI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (shll_s_ph, MIPS_V2HI_FTYPE_V2HI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (shll_s_w, MIPS_SI_FTYPE_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (shrl_qb, MIPS_V4QI_FTYPE_V4QI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (shra_ph, MIPS_V2HI_FTYPE_V2HI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (shra_r_ph, MIPS_V2HI_FTYPE_V2HI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (shra_r_w, MIPS_SI_FTYPE_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (muleu_s_ph_qbl, MIPS_V2HI_FTYPE_V4QI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (muleu_s_ph_qbr, MIPS_V2HI_FTYPE_V4QI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (mulq_rs_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (muleq_s_w_phl, MIPS_SI_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (muleq_s_w_phr, MIPS_SI_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (bitrev, MIPS_SI_FTYPE_SI, MASK_DSP),\n-  DIRECT_BUILTIN (insv, MIPS_SI_FTYPE_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (repl_qb, MIPS_V4QI_FTYPE_SI, MASK_DSP),\n-  DIRECT_BUILTIN (repl_ph, MIPS_V2HI_FTYPE_SI, MASK_DSP),\n-  DIRECT_NO_TARGET_BUILTIN (cmpu_eq_qb, MIPS_VOID_FTYPE_V4QI_V4QI, MASK_DSP),\n-  DIRECT_NO_TARGET_BUILTIN (cmpu_lt_qb, MIPS_VOID_FTYPE_V4QI_V4QI, MASK_DSP),\n-  DIRECT_NO_TARGET_BUILTIN (cmpu_le_qb, MIPS_VOID_FTYPE_V4QI_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (cmpgu_eq_qb, MIPS_SI_FTYPE_V4QI_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (cmpgu_lt_qb, MIPS_SI_FTYPE_V4QI_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (cmpgu_le_qb, MIPS_SI_FTYPE_V4QI_V4QI, MASK_DSP),\n-  DIRECT_NO_TARGET_BUILTIN (cmp_eq_ph, MIPS_VOID_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_NO_TARGET_BUILTIN (cmp_lt_ph, MIPS_VOID_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_NO_TARGET_BUILTIN (cmp_le_ph, MIPS_VOID_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (pick_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (pick_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (packrl_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSP),\n-  DIRECT_NO_TARGET_BUILTIN (wrdsp, MIPS_VOID_FTYPE_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (rddsp, MIPS_SI_FTYPE_SI, MASK_DSP),\n-  DIRECT_BUILTIN (lbux, MIPS_SI_FTYPE_POINTER_SI, MASK_DSP),\n-  DIRECT_BUILTIN (lhx, MIPS_SI_FTYPE_POINTER_SI, MASK_DSP),\n-  DIRECT_BUILTIN (lwx, MIPS_SI_FTYPE_POINTER_SI, MASK_DSP),\n-  BPOSGE_BUILTIN (32, MASK_DSP),\n-\n-  /* The following are for the MIPS DSP ASE REV 2.  */\n-  DIRECT_BUILTIN (absq_s_qb, MIPS_V4QI_FTYPE_V4QI, MASK_DSPR2),\n-  DIRECT_BUILTIN (addu_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (addu_s_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (adduh_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, MASK_DSPR2),\n-  DIRECT_BUILTIN (adduh_r_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, MASK_DSPR2),\n-  DIRECT_BUILTIN (append, MIPS_SI_FTYPE_SI_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (balign, MIPS_SI_FTYPE_SI_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (cmpgdu_eq_qb, MIPS_SI_FTYPE_V4QI_V4QI, MASK_DSPR2),\n-  DIRECT_BUILTIN (cmpgdu_lt_qb, MIPS_SI_FTYPE_V4QI_V4QI, MASK_DSPR2),\n-  DIRECT_BUILTIN (cmpgdu_le_qb, MIPS_SI_FTYPE_V4QI_V4QI, MASK_DSPR2),\n-  DIRECT_BUILTIN (mul_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (mul_s_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (mulq_rs_w, MIPS_SI_FTYPE_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (mulq_s_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (mulq_s_w, MIPS_SI_FTYPE_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (precr_qb_ph, MIPS_V4QI_FTYPE_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (precr_sra_ph_w, MIPS_V2HI_FTYPE_SI_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (precr_sra_r_ph_w, MIPS_V2HI_FTYPE_SI_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (prepend, MIPS_SI_FTYPE_SI_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (shra_qb, MIPS_V4QI_FTYPE_V4QI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (shra_r_qb, MIPS_V4QI_FTYPE_V4QI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (shrl_ph, MIPS_V2HI_FTYPE_V2HI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (subu_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (subu_s_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (subuh_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, MASK_DSPR2),\n-  DIRECT_BUILTIN (subuh_r_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, MASK_DSPR2),\n-  DIRECT_BUILTIN (addqh_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (addqh_r_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (addqh_w, MIPS_SI_FTYPE_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (addqh_r_w, MIPS_SI_FTYPE_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (subqh_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (subqh_r_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (subqh_w, MIPS_SI_FTYPE_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (subqh_r_w, MIPS_SI_FTYPE_SI_SI, MASK_DSPR2)\n-};\n-\n-static const struct mips_builtin_description mips_dsp_32only_bdesc[] = {\n-  DIRECT_BUILTIN (dpau_h_qbl, MIPS_DI_FTYPE_DI_V4QI_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (dpau_h_qbr, MIPS_DI_FTYPE_DI_V4QI_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (dpsu_h_qbl, MIPS_DI_FTYPE_DI_V4QI_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (dpsu_h_qbr, MIPS_DI_FTYPE_DI_V4QI_V4QI, MASK_DSP),\n-  DIRECT_BUILTIN (dpaq_s_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (dpsq_s_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (mulsaq_s_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (dpaq_sa_l_w, MIPS_DI_FTYPE_DI_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (dpsq_sa_l_w, MIPS_DI_FTYPE_DI_SI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (maq_s_w_phl, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (maq_s_w_phr, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (maq_sa_w_phl, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (maq_sa_w_phr, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSP),\n-  DIRECT_BUILTIN (extr_w, MIPS_SI_FTYPE_DI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (extr_r_w, MIPS_SI_FTYPE_DI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (extr_rs_w, MIPS_SI_FTYPE_DI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (extr_s_h, MIPS_SI_FTYPE_DI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (extp, MIPS_SI_FTYPE_DI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (extpdp, MIPS_SI_FTYPE_DI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (shilo, MIPS_DI_FTYPE_DI_SI, MASK_DSP),\n-  DIRECT_BUILTIN (mthlip, MIPS_DI_FTYPE_DI_SI, MASK_DSP),\n-\n-  /* The following are for the MIPS DSP ASE REV 2.  */\n-  DIRECT_BUILTIN (dpa_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (dps_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (madd, MIPS_DI_FTYPE_DI_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (maddu, MIPS_DI_FTYPE_DI_USI_USI, MASK_DSPR2),\n-  DIRECT_BUILTIN (msub, MIPS_DI_FTYPE_DI_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (msubu, MIPS_DI_FTYPE_DI_USI_USI, MASK_DSPR2),\n-  DIRECT_BUILTIN (mulsa_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (mult, MIPS_DI_FTYPE_SI_SI, MASK_DSPR2),\n-  DIRECT_BUILTIN (multu, MIPS_DI_FTYPE_USI_USI, MASK_DSPR2),\n-  DIRECT_BUILTIN (dpax_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (dpsx_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (dpaqx_s_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (dpaqx_sa_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (dpsqx_s_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSPR2),\n-  DIRECT_BUILTIN (dpsqx_sa_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, MASK_DSPR2)\n-};\n-\n-/* This structure describes an array of mips_builtin_description entries.  */\n-struct mips_bdesc_map {\n-  /* The array that this entry describes.  */\n-  const struct mips_builtin_description *bdesc;\n-\n-  /* The number of entries in BDESC.  */\n-  unsigned int size;\n-\n-  /* The target processor that supports the functions in BDESC.\n-     PROCESSOR_MAX means we enable them for all processors.  */\n-  enum processor_type proc;\n-\n-  /* The functions in BDESC are not supported if any of these\n-     target flags are set.  */\n-  int unsupported_target_flags;\n-};\n-\n-/* All MIPS-specific built-in functions.  */\n-static const struct mips_bdesc_map mips_bdesc_arrays[] = {\n-  { mips_ps_bdesc, ARRAY_SIZE (mips_ps_bdesc), PROCESSOR_MAX, 0 },\n-  { mips_sb1_bdesc, ARRAY_SIZE (mips_sb1_bdesc), PROCESSOR_SB1, 0 },\n-  { mips_dsp_bdesc, ARRAY_SIZE (mips_dsp_bdesc), PROCESSOR_MAX, 0 },\n-  { mips_dsp_32only_bdesc, ARRAY_SIZE (mips_dsp_32only_bdesc),\n-    PROCESSOR_MAX, MASK_64BIT }\n+static const struct mips_builtin_description mips_builtins[] = {\n+  DIRECT_BUILTIN (pll_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, paired_single),\n+  DIRECT_BUILTIN (pul_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, paired_single),\n+  DIRECT_BUILTIN (plu_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, paired_single),\n+  DIRECT_BUILTIN (puu_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, paired_single),\n+  DIRECT_BUILTIN (cvt_ps_s, MIPS_V2SF_FTYPE_SF_SF, paired_single),\n+  DIRECT_BUILTIN (cvt_s_pl, MIPS_SF_FTYPE_V2SF, paired_single),\n+  DIRECT_BUILTIN (cvt_s_pu, MIPS_SF_FTYPE_V2SF, paired_single),\n+  DIRECT_BUILTIN (abs_ps, MIPS_V2SF_FTYPE_V2SF, paired_single),\n+\n+  DIRECT_BUILTIN (alnv_ps, MIPS_V2SF_FTYPE_V2SF_V2SF_INT, paired_single),\n+  DIRECT_BUILTIN (addr_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, mips3d),\n+  DIRECT_BUILTIN (mulr_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, mips3d),\n+  DIRECT_BUILTIN (cvt_pw_ps, MIPS_V2SF_FTYPE_V2SF, mips3d),\n+  DIRECT_BUILTIN (cvt_ps_pw, MIPS_V2SF_FTYPE_V2SF, mips3d),\n+\n+  DIRECT_BUILTIN (recip1_s, MIPS_SF_FTYPE_SF, mips3d),\n+  DIRECT_BUILTIN (recip1_d, MIPS_DF_FTYPE_DF, mips3d),\n+  DIRECT_BUILTIN (recip1_ps, MIPS_V2SF_FTYPE_V2SF, mips3d),\n+  DIRECT_BUILTIN (recip2_s, MIPS_SF_FTYPE_SF_SF, mips3d),\n+  DIRECT_BUILTIN (recip2_d, MIPS_DF_FTYPE_DF_DF, mips3d),\n+  DIRECT_BUILTIN (recip2_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, mips3d),\n+\n+  DIRECT_BUILTIN (rsqrt1_s, MIPS_SF_FTYPE_SF, mips3d),\n+  DIRECT_BUILTIN (rsqrt1_d, MIPS_DF_FTYPE_DF, mips3d),\n+  DIRECT_BUILTIN (rsqrt1_ps, MIPS_V2SF_FTYPE_V2SF, mips3d),\n+  DIRECT_BUILTIN (rsqrt2_s, MIPS_SF_FTYPE_SF_SF, mips3d),\n+  DIRECT_BUILTIN (rsqrt2_d, MIPS_DF_FTYPE_DF_DF, mips3d),\n+  DIRECT_BUILTIN (rsqrt2_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, mips3d),\n+\n+  MIPS_FP_CONDITIONS (CMP_BUILTINS),\n+\n+  /* Built-in functions for the SB-1 processor.  */\n+  DIRECT_BUILTIN (sqrt_ps, MIPS_V2SF_FTYPE_V2SF, sb1_paired_single),\n+\n+  /* Built-in functions for the DSP ASE (32-bit and 64-bit).  */\n+  DIRECT_BUILTIN (addq_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_BUILTIN (addq_s_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_BUILTIN (addq_s_w, MIPS_SI_FTYPE_SI_SI, dsp),\n+  DIRECT_BUILTIN (addu_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, dsp),\n+  DIRECT_BUILTIN (addu_s_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, dsp),\n+  DIRECT_BUILTIN (subq_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_BUILTIN (subq_s_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_BUILTIN (subq_s_w, MIPS_SI_FTYPE_SI_SI, dsp),\n+  DIRECT_BUILTIN (subu_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, dsp),\n+  DIRECT_BUILTIN (subu_s_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, dsp),\n+  DIRECT_BUILTIN (addsc, MIPS_SI_FTYPE_SI_SI, dsp),\n+  DIRECT_BUILTIN (addwc, MIPS_SI_FTYPE_SI_SI, dsp),\n+  DIRECT_BUILTIN (modsub, MIPS_SI_FTYPE_SI_SI, dsp),\n+  DIRECT_BUILTIN (raddu_w_qb, MIPS_SI_FTYPE_V4QI, dsp),\n+  DIRECT_BUILTIN (absq_s_ph, MIPS_V2HI_FTYPE_V2HI, dsp),\n+  DIRECT_BUILTIN (absq_s_w, MIPS_SI_FTYPE_SI, dsp),\n+  DIRECT_BUILTIN (precrq_qb_ph, MIPS_V4QI_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_BUILTIN (precrq_ph_w, MIPS_V2HI_FTYPE_SI_SI, dsp),\n+  DIRECT_BUILTIN (precrq_rs_ph_w, MIPS_V2HI_FTYPE_SI_SI, dsp),\n+  DIRECT_BUILTIN (precrqu_s_qb_ph, MIPS_V4QI_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_BUILTIN (preceq_w_phl, MIPS_SI_FTYPE_V2HI, dsp),\n+  DIRECT_BUILTIN (preceq_w_phr, MIPS_SI_FTYPE_V2HI, dsp),\n+  DIRECT_BUILTIN (precequ_ph_qbl, MIPS_V2HI_FTYPE_V4QI, dsp),\n+  DIRECT_BUILTIN (precequ_ph_qbr, MIPS_V2HI_FTYPE_V4QI, dsp),\n+  DIRECT_BUILTIN (precequ_ph_qbla, MIPS_V2HI_FTYPE_V4QI, dsp),\n+  DIRECT_BUILTIN (precequ_ph_qbra, MIPS_V2HI_FTYPE_V4QI, dsp),\n+  DIRECT_BUILTIN (preceu_ph_qbl, MIPS_V2HI_FTYPE_V4QI, dsp),\n+  DIRECT_BUILTIN (preceu_ph_qbr, MIPS_V2HI_FTYPE_V4QI, dsp),\n+  DIRECT_BUILTIN (preceu_ph_qbla, MIPS_V2HI_FTYPE_V4QI, dsp),\n+  DIRECT_BUILTIN (preceu_ph_qbra, MIPS_V2HI_FTYPE_V4QI, dsp),\n+  DIRECT_BUILTIN (shll_qb, MIPS_V4QI_FTYPE_V4QI_SI, dsp),\n+  DIRECT_BUILTIN (shll_ph, MIPS_V2HI_FTYPE_V2HI_SI, dsp),\n+  DIRECT_BUILTIN (shll_s_ph, MIPS_V2HI_FTYPE_V2HI_SI, dsp),\n+  DIRECT_BUILTIN (shll_s_w, MIPS_SI_FTYPE_SI_SI, dsp),\n+  DIRECT_BUILTIN (shrl_qb, MIPS_V4QI_FTYPE_V4QI_SI, dsp),\n+  DIRECT_BUILTIN (shra_ph, MIPS_V2HI_FTYPE_V2HI_SI, dsp),\n+  DIRECT_BUILTIN (shra_r_ph, MIPS_V2HI_FTYPE_V2HI_SI, dsp),\n+  DIRECT_BUILTIN (shra_r_w, MIPS_SI_FTYPE_SI_SI, dsp),\n+  DIRECT_BUILTIN (muleu_s_ph_qbl, MIPS_V2HI_FTYPE_V4QI_V2HI, dsp),\n+  DIRECT_BUILTIN (muleu_s_ph_qbr, MIPS_V2HI_FTYPE_V4QI_V2HI, dsp),\n+  DIRECT_BUILTIN (mulq_rs_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_BUILTIN (muleq_s_w_phl, MIPS_SI_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_BUILTIN (muleq_s_w_phr, MIPS_SI_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_BUILTIN (bitrev, MIPS_SI_FTYPE_SI, dsp),\n+  DIRECT_BUILTIN (insv, MIPS_SI_FTYPE_SI_SI, dsp),\n+  DIRECT_BUILTIN (repl_qb, MIPS_V4QI_FTYPE_SI, dsp),\n+  DIRECT_BUILTIN (repl_ph, MIPS_V2HI_FTYPE_SI, dsp),\n+  DIRECT_NO_TARGET_BUILTIN (cmpu_eq_qb, MIPS_VOID_FTYPE_V4QI_V4QI, dsp),\n+  DIRECT_NO_TARGET_BUILTIN (cmpu_lt_qb, MIPS_VOID_FTYPE_V4QI_V4QI, dsp),\n+  DIRECT_NO_TARGET_BUILTIN (cmpu_le_qb, MIPS_VOID_FTYPE_V4QI_V4QI, dsp),\n+  DIRECT_BUILTIN (cmpgu_eq_qb, MIPS_SI_FTYPE_V4QI_V4QI, dsp),\n+  DIRECT_BUILTIN (cmpgu_lt_qb, MIPS_SI_FTYPE_V4QI_V4QI, dsp),\n+  DIRECT_BUILTIN (cmpgu_le_qb, MIPS_SI_FTYPE_V4QI_V4QI, dsp),\n+  DIRECT_NO_TARGET_BUILTIN (cmp_eq_ph, MIPS_VOID_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_NO_TARGET_BUILTIN (cmp_lt_ph, MIPS_VOID_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_NO_TARGET_BUILTIN (cmp_le_ph, MIPS_VOID_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_BUILTIN (pick_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, dsp),\n+  DIRECT_BUILTIN (pick_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_BUILTIN (packrl_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dsp),\n+  DIRECT_NO_TARGET_BUILTIN (wrdsp, MIPS_VOID_FTYPE_SI_SI, dsp),\n+  DIRECT_BUILTIN (rddsp, MIPS_SI_FTYPE_SI, dsp),\n+  DIRECT_BUILTIN (lbux, MIPS_SI_FTYPE_POINTER_SI, dsp),\n+  DIRECT_BUILTIN (lhx, MIPS_SI_FTYPE_POINTER_SI, dsp),\n+  DIRECT_BUILTIN (lwx, MIPS_SI_FTYPE_POINTER_SI, dsp),\n+  BPOSGE_BUILTIN (32, dsp),\n+\n+  /* The following are for the MIPS DSP ASE REV 2 (32-bit and 64-bit).  */\n+  DIRECT_BUILTIN (absq_s_qb, MIPS_V4QI_FTYPE_V4QI, dspr2),\n+  DIRECT_BUILTIN (addu_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dspr2),\n+  DIRECT_BUILTIN (addu_s_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dspr2),\n+  DIRECT_BUILTIN (adduh_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, dspr2),\n+  DIRECT_BUILTIN (adduh_r_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, dspr2),\n+  DIRECT_BUILTIN (append, MIPS_SI_FTYPE_SI_SI_SI, dspr2),\n+  DIRECT_BUILTIN (balign, MIPS_SI_FTYPE_SI_SI_SI, dspr2),\n+  DIRECT_BUILTIN (cmpgdu_eq_qb, MIPS_SI_FTYPE_V4QI_V4QI, dspr2),\n+  DIRECT_BUILTIN (cmpgdu_lt_qb, MIPS_SI_FTYPE_V4QI_V4QI, dspr2),\n+  DIRECT_BUILTIN (cmpgdu_le_qb, MIPS_SI_FTYPE_V4QI_V4QI, dspr2),\n+  DIRECT_BUILTIN (mul_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dspr2),\n+  DIRECT_BUILTIN (mul_s_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dspr2),\n+  DIRECT_BUILTIN (mulq_rs_w, MIPS_SI_FTYPE_SI_SI, dspr2),\n+  DIRECT_BUILTIN (mulq_s_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dspr2),\n+  DIRECT_BUILTIN (mulq_s_w, MIPS_SI_FTYPE_SI_SI, dspr2),\n+  DIRECT_BUILTIN (precr_qb_ph, MIPS_V4QI_FTYPE_V2HI_V2HI, dspr2),\n+  DIRECT_BUILTIN (precr_sra_ph_w, MIPS_V2HI_FTYPE_SI_SI_SI, dspr2),\n+  DIRECT_BUILTIN (precr_sra_r_ph_w, MIPS_V2HI_FTYPE_SI_SI_SI, dspr2),\n+  DIRECT_BUILTIN (prepend, MIPS_SI_FTYPE_SI_SI_SI, dspr2),\n+  DIRECT_BUILTIN (shra_qb, MIPS_V4QI_FTYPE_V4QI_SI, dspr2),\n+  DIRECT_BUILTIN (shra_r_qb, MIPS_V4QI_FTYPE_V4QI_SI, dspr2),\n+  DIRECT_BUILTIN (shrl_ph, MIPS_V2HI_FTYPE_V2HI_SI, dspr2),\n+  DIRECT_BUILTIN (subu_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dspr2),\n+  DIRECT_BUILTIN (subu_s_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dspr2),\n+  DIRECT_BUILTIN (subuh_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, dspr2),\n+  DIRECT_BUILTIN (subuh_r_qb, MIPS_V4QI_FTYPE_V4QI_V4QI, dspr2),\n+  DIRECT_BUILTIN (addqh_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dspr2),\n+  DIRECT_BUILTIN (addqh_r_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dspr2),\n+  DIRECT_BUILTIN (addqh_w, MIPS_SI_FTYPE_SI_SI, dspr2),\n+  DIRECT_BUILTIN (addqh_r_w, MIPS_SI_FTYPE_SI_SI, dspr2),\n+  DIRECT_BUILTIN (subqh_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dspr2),\n+  DIRECT_BUILTIN (subqh_r_ph, MIPS_V2HI_FTYPE_V2HI_V2HI, dspr2),\n+  DIRECT_BUILTIN (subqh_w, MIPS_SI_FTYPE_SI_SI, dspr2),\n+  DIRECT_BUILTIN (subqh_r_w, MIPS_SI_FTYPE_SI_SI, dspr2),\n+\n+  /* Built-in functions for the DSP ASE (32-bit only).  */\n+  DIRECT_BUILTIN (dpau_h_qbl, MIPS_DI_FTYPE_DI_V4QI_V4QI, dsp_32),\n+  DIRECT_BUILTIN (dpau_h_qbr, MIPS_DI_FTYPE_DI_V4QI_V4QI, dsp_32),\n+  DIRECT_BUILTIN (dpsu_h_qbl, MIPS_DI_FTYPE_DI_V4QI_V4QI, dsp_32),\n+  DIRECT_BUILTIN (dpsu_h_qbr, MIPS_DI_FTYPE_DI_V4QI_V4QI, dsp_32),\n+  DIRECT_BUILTIN (dpaq_s_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dsp_32),\n+  DIRECT_BUILTIN (dpsq_s_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dsp_32),\n+  DIRECT_BUILTIN (mulsaq_s_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dsp_32),\n+  DIRECT_BUILTIN (dpaq_sa_l_w, MIPS_DI_FTYPE_DI_SI_SI, dsp_32),\n+  DIRECT_BUILTIN (dpsq_sa_l_w, MIPS_DI_FTYPE_DI_SI_SI, dsp_32),\n+  DIRECT_BUILTIN (maq_s_w_phl, MIPS_DI_FTYPE_DI_V2HI_V2HI, dsp_32),\n+  DIRECT_BUILTIN (maq_s_w_phr, MIPS_DI_FTYPE_DI_V2HI_V2HI, dsp_32),\n+  DIRECT_BUILTIN (maq_sa_w_phl, MIPS_DI_FTYPE_DI_V2HI_V2HI, dsp_32),\n+  DIRECT_BUILTIN (maq_sa_w_phr, MIPS_DI_FTYPE_DI_V2HI_V2HI, dsp_32),\n+  DIRECT_BUILTIN (extr_w, MIPS_SI_FTYPE_DI_SI, dsp_32),\n+  DIRECT_BUILTIN (extr_r_w, MIPS_SI_FTYPE_DI_SI, dsp_32),\n+  DIRECT_BUILTIN (extr_rs_w, MIPS_SI_FTYPE_DI_SI, dsp_32),\n+  DIRECT_BUILTIN (extr_s_h, MIPS_SI_FTYPE_DI_SI, dsp_32),\n+  DIRECT_BUILTIN (extp, MIPS_SI_FTYPE_DI_SI, dsp_32),\n+  DIRECT_BUILTIN (extpdp, MIPS_SI_FTYPE_DI_SI, dsp_32),\n+  DIRECT_BUILTIN (shilo, MIPS_DI_FTYPE_DI_SI, dsp_32),\n+  DIRECT_BUILTIN (mthlip, MIPS_DI_FTYPE_DI_SI, dsp_32),\n+\n+  /* The following are for the MIPS DSP ASE REV 2 (32-bit only).  */\n+  DIRECT_BUILTIN (dpa_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n+  DIRECT_BUILTIN (dps_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n+  DIRECT_BUILTIN (madd, MIPS_DI_FTYPE_DI_SI_SI, dspr2_32),\n+  DIRECT_BUILTIN (maddu, MIPS_DI_FTYPE_DI_USI_USI, dspr2_32),\n+  DIRECT_BUILTIN (msub, MIPS_DI_FTYPE_DI_SI_SI, dspr2_32),\n+  DIRECT_BUILTIN (msubu, MIPS_DI_FTYPE_DI_USI_USI, dspr2_32),\n+  DIRECT_BUILTIN (mulsa_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n+  DIRECT_BUILTIN (mult, MIPS_DI_FTYPE_SI_SI, dspr2_32),\n+  DIRECT_BUILTIN (multu, MIPS_DI_FTYPE_USI_USI, dspr2_32),\n+  DIRECT_BUILTIN (dpax_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n+  DIRECT_BUILTIN (dpsx_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n+  DIRECT_BUILTIN (dpaqx_s_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n+  DIRECT_BUILTIN (dpaqx_sa_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n+  DIRECT_BUILTIN (dpsqx_s_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n+  DIRECT_BUILTIN (dpsqx_sa_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32)\n };\n \n /* MODE is a vector mode whose elements have type TYPE.  Return the type\n@@ -10545,25 +10550,17 @@ static void\n mips_init_builtins (void)\n {\n   const struct mips_builtin_description *d;\n-  const struct mips_bdesc_map *m;\n-  unsigned int offset;\n+  unsigned int i;\n \n   /* Iterate through all of the bdesc arrays, initializing all of the\n      builtin functions.  */\n-  offset = 0;\n-  for (m = mips_bdesc_arrays;\n-       m < &mips_bdesc_arrays[ARRAY_SIZE (mips_bdesc_arrays)];\n-       m++)\n+  for (i = 0; i < ARRAY_SIZE (mips_builtins); i++)\n     {\n-      if ((m->proc == PROCESSOR_MAX || m->proc == mips_arch)\n-\t  && (m->unsupported_target_flags & target_flags) == 0)\n-\tfor (d = m->bdesc; d < &m->bdesc[m->size]; d++)\n-\t  if ((d->target_flags & target_flags) == d->target_flags)\n-\t    add_builtin_function (d->name,\n-\t\t\t\t  mips_build_function_type (d->function_type),\n-\t\t\t\t  d - m->bdesc + offset,\n-\t\t\t\t  BUILT_IN_MD, NULL, NULL);\n-      offset += m->size;\n+      d = &mips_builtins[i];\n+      if (d->avail ())\n+\tadd_builtin_function (d->name,\n+\t\t\t      mips_build_function_type (d->function_type),\n+\t\t\t      i, BUILT_IN_MD, NULL, NULL);\n     }\n }\n \n@@ -10808,41 +10805,6 @@ mips_expand_builtin_bposge (enum mips_builtin_type builtin_type, rtx target)\n \t\t\t\t       const1_rtx, const0_rtx);\n }\n \n-/* EXP is a CALL_EXPR that calls the function described by BDESC.\n-   Expand the call and return an rtx for its return value.\n-   TARGET, if nonnull, suggests a good place to put this value.  */\n-\n-static rtx\n-mips_expand_builtin_1 (const struct mips_builtin_description *bdesc,\n-\t\t       tree exp, rtx target)\n-{\n-  switch (bdesc->builtin_type)\n-    {\n-    case MIPS_BUILTIN_DIRECT:\n-      return mips_expand_builtin_direct (bdesc->icode, target, exp, true);\n-\n-    case MIPS_BUILTIN_DIRECT_NO_TARGET:\n-      return mips_expand_builtin_direct (bdesc->icode, target, exp, false);\n-\n-    case MIPS_BUILTIN_MOVT:\n-    case MIPS_BUILTIN_MOVF:\n-      return mips_expand_builtin_movtf (bdesc->builtin_type, bdesc->icode,\n-\t\t\t\t\tbdesc->cond, target, exp);\n-\n-    case MIPS_BUILTIN_CMP_ANY:\n-    case MIPS_BUILTIN_CMP_ALL:\n-    case MIPS_BUILTIN_CMP_UPPER:\n-    case MIPS_BUILTIN_CMP_LOWER:\n-    case MIPS_BUILTIN_CMP_SINGLE:\n-      return mips_expand_builtin_compare (bdesc->builtin_type, bdesc->icode,\n-\t\t\t\t\t  bdesc->cond, target, exp);\n-\n-    case MIPS_BUILTIN_BPOSGE32:\n-      return mips_expand_builtin_bposge (bdesc->builtin_type, target);\n-    }\n-  gcc_unreachable ();\n-}\n-\n /* Implement TARGET_EXPAND_BUILTIN.  */\n \n static rtx\n@@ -10851,25 +10813,44 @@ mips_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n \t\t     int ignore ATTRIBUTE_UNUSED)\n {\n   tree fndecl;\n-  unsigned int fcode;\n-  const struct mips_bdesc_map *m;\n+  unsigned int fcode, avail;\n+  const struct mips_builtin_description *d;\n \n   fndecl = TREE_OPERAND (CALL_EXPR_FN (exp), 0);\n   fcode = DECL_FUNCTION_CODE (fndecl);\n+  gcc_assert (fcode < ARRAY_SIZE (mips_builtins));\n+  d = &mips_builtins[fcode];\n+  avail = d->avail ();\n+  gcc_assert (avail != 0);\n   if (TARGET_MIPS16)\n     {\n       error (\"built-in function %qs not supported for MIPS16\",\n \t     IDENTIFIER_POINTER (DECL_NAME (fndecl)));\n       return const0_rtx;\n     }\n-\n-  for (m = mips_bdesc_arrays;\n-       m < &mips_bdesc_arrays[ARRAY_SIZE (mips_bdesc_arrays)];\n-       m++)\n+  switch (d->builtin_type)\n     {\n-      if (fcode < m->size)\n-\treturn mips_expand_builtin_1 (m->bdesc + fcode, exp, target);\n-      fcode -= m->size;\n+    case MIPS_BUILTIN_DIRECT:\n+      return mips_expand_builtin_direct (d->icode, target, exp, true);\n+\n+    case MIPS_BUILTIN_DIRECT_NO_TARGET:\n+      return mips_expand_builtin_direct (d->icode, target, exp, false);\n+\n+    case MIPS_BUILTIN_MOVT:\n+    case MIPS_BUILTIN_MOVF:\n+      return mips_expand_builtin_movtf (d->builtin_type, d->icode,\n+\t\t\t\t\td->cond, target, exp);\n+\n+    case MIPS_BUILTIN_CMP_ANY:\n+    case MIPS_BUILTIN_CMP_ALL:\n+    case MIPS_BUILTIN_CMP_UPPER:\n+    case MIPS_BUILTIN_CMP_LOWER:\n+    case MIPS_BUILTIN_CMP_SINGLE:\n+      return mips_expand_builtin_compare (d->builtin_type, d->icode,\n+\t\t\t\t\t  d->cond, target, exp);\n+\n+    case MIPS_BUILTIN_BPOSGE32:\n+      return mips_expand_builtin_bposge (d->builtin_type, target);\n     }\n   gcc_unreachable ();\n }"}]}