{"sha": "45641b316a7b2c9bdf1d7807631731457b8cc0f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU2NDFiMzE2YTdiMmM5YmRmMWQ3ODA3NjMxNzMxNDU3YjhjYzBmMQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2019-05-17T14:48:37Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-05-17T14:48:37Z"}, "message": "i386: Enable MMX intrinsics without SSE/SSE2/SSSE3\n\nSince MMX intrinsics are marked with SSE/SSE2/SSSE3 for SSE emulation,\nenable them without SSE/SSE2/SSSE3 if MMX is enabled.\n\nRestore TARGET_3DNOW check, which was changed to TARGET_3DNOW_A by\nrevision 271235.\n\ngcc/\n\n\tPR target/90497\n\t* config/i386/i386-expand.c (ix86_expand_builtin): Enable MMX\n\tintrinsics without SSE/SSE2/SSSE3.\n\t* config/i386/mmx.md (mmx_uavgv8qi3): Restore TARGET_3DNOW\n\tcheck.\n\t(*mmx_uavgv8qi3): Likewise.\n\ngcc/testsuite/\n\n\tPR target/90497\n\t* gcc.target/i386/pr90497-1.c: New test.\n\t* gcc.target/i386/pr90497-2.c: Likewise.\n\nFrom-SVN: r271328", "tree": {"sha": "47880a839b3527358636589aa14ed0b1fed043e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47880a839b3527358636589aa14ed0b1fed043e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45641b316a7b2c9bdf1d7807631731457b8cc0f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45641b316a7b2c9bdf1d7807631731457b8cc0f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45641b316a7b2c9bdf1d7807631731457b8cc0f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45641b316a7b2c9bdf1d7807631731457b8cc0f1/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2581344df6f04d63f2662fd7b562bc6b060c557b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2581344df6f04d63f2662fd7b562bc6b060c557b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2581344df6f04d63f2662fd7b562bc6b060c557b"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "b199185527ee0004d5bf0bceff8e3d24d9c3ffaa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45641b316a7b2c9bdf1d7807631731457b8cc0f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45641b316a7b2c9bdf1d7807631731457b8cc0f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45641b316a7b2c9bdf1d7807631731457b8cc0f1", "patch": "@@ -1,3 +1,12 @@\n+2019-05-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/90497\n+\t* config/i386/i386-expand.c (ix86_expand_builtin): Enable MMX\n+\tintrinsics without SSE/SSE2/SSSE3.\n+\t* config/i386/mmx.md (mmx_uavgv8qi3): Restore TARGET_3DNOW\n+\tcheck.\n+\t(*mmx_uavgv8qi3): Likewise.\n+\n 2019-05-17  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-pretty-print.c (dump_ternary_rhs): Handle dumping"}, {"sha": "f2a82a01899643afbfd699f407bb16df8656b661", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45641b316a7b2c9bdf1d7807631731457b8cc0f1/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45641b316a7b2c9bdf1d7807631731457b8cc0f1/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=45641b316a7b2c9bdf1d7807631731457b8cc0f1", "patch": "@@ -10937,8 +10937,10 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n       && (isa & (OPTION_MASK_ISA_FMA | OPTION_MASK_ISA_FMA4)) != 0)\n     isa |= (OPTION_MASK_ISA_FMA | OPTION_MASK_ISA_FMA4);\n   /* Use SSE/SSE2/SSSE3 to emulate MMX intrinsics in 64-bit mode when\n-     MMX is disabled.  */\n-  if (TARGET_MMX_WITH_SSE)\n+     MMX is disabled.  NB: Since MMX intrinsics are marked with\n+     SSE/SSE2/SSSE3, enable them without SSE/SSE2/SSSE3 if MMX is\n+     enabled.  */\n+  if (TARGET_MMX || TARGET_MMX_WITH_SSE)\n     {\n       if (((bisa & (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_MMX))\n \t   == (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_MMX))"}, {"sha": "adad950fa04d6b4d07768026ebe69ae13d3cc88c", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45641b316a7b2c9bdf1d7807631731457b8cc0f1/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45641b316a7b2c9bdf1d7807631731457b8cc0f1/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=45641b316a7b2c9bdf1d7807631731457b8cc0f1", "patch": "@@ -1745,7 +1745,7 @@\n \t\t\t\t  (const_int 1) (const_int 1)]))\n \t    (const_int 1))))]\n   \"(TARGET_MMX || TARGET_MMX_WITH_SSE)\n-   && (TARGET_SSE || TARGET_3DNOW_A)\"\n+   && (TARGET_SSE || TARGET_3DNOW)\"\n   \"ix86_fixup_binary_operands_no_copy (PLUS, V8QImode, operands);\")\n \n (define_insn \"*mmx_uavgv8qi3\"\n@@ -1764,7 +1764,7 @@\n \t\t\t\t  (const_int 1) (const_int 1)]))\n \t    (const_int 1))))]\n   \"(TARGET_MMX || TARGET_MMX_WITH_SSE)\n-   && (TARGET_SSE || TARGET_3DNOW_A)\n+   && (TARGET_SSE || TARGET_3DNOW)\n    && ix86_binary_operator_ok (PLUS, V8QImode, operands)\"\n {\n   /* These two instructions have the same operation, but their encoding"}, {"sha": "d60a7f4a5d09a66537cd0f88872ba681c0ae0693", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45641b316a7b2c9bdf1d7807631731457b8cc0f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45641b316a7b2c9bdf1d7807631731457b8cc0f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45641b316a7b2c9bdf1d7807631731457b8cc0f1", "patch": "@@ -1,3 +1,9 @@\n+2019-05-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/90497\n+\t* gcc.target/i386/pr90497-1.c: New test.\n+\t* gcc.target/i386/pr90497-2.c: Likewise.\n+\n 2019-05-17  Robin Dapp  <rdapp@linux.ibm.com>\n \n \t* gcc.target/s390/global-array-element-pic.c: Add -march=z900."}, {"sha": "ed6ded7efbc966e7c873ce4b734d168ab6f84dcd", "filename": "gcc/testsuite/gcc.target/i386/pr90497-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45641b316a7b2c9bdf1d7807631731457b8cc0f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90497-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45641b316a7b2c9bdf1d7807631731457b8cc0f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90497-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90497-1.c?ref=45641b316a7b2c9bdf1d7807631731457b8cc0f1", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/90497 */\n+/* { dg-do compile } */\n+/* { dg-options \"-mno-sse -mmmx\" { target ia32 } } */\n+/* { dg-options \"-mno-mmx\" { target { ! ia32 } } } */\n+\n+typedef char __v8qi __attribute__ ((__vector_size__ (8)));\n+\n+__v8qi\n+foo (__v8qi x, __v8qi y)\n+{\n+  return __builtin_ia32_pcmpeqb (x, y);\n+}"}, {"sha": "99ee5756b76fde327bebc643e905440aafbb140d", "filename": "gcc/testsuite/gcc.target/i386/pr90497-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45641b316a7b2c9bdf1d7807631731457b8cc0f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90497-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45641b316a7b2c9bdf1d7807631731457b8cc0f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90497-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90497-2.c?ref=45641b316a7b2c9bdf1d7807631731457b8cc0f1", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/90497 */\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-mno-sse -m3dnow\" } */\n+\n+typedef char __v8qi __attribute__ ((__vector_size__ (8)));\n+\n+__v8qi\n+foo (__v8qi x, __v8qi y)\n+{\n+  return __builtin_ia32_pavgusb (x, y);\n+}"}]}