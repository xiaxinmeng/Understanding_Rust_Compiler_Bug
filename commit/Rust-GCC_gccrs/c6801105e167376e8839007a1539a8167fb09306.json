{"sha": "c6801105e167376e8839007a1539a8167fb09306", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY4MDExMDVlMTY3Mzc2ZTg4MzkwMDdhMTUzOWE4MTY3ZmIwOTMwNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-06-08T18:28:52Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-16T09:18:07Z"}, "message": "[Ada] AI12-0373 Additional check on Integer_Literal function\n\ngcc/ada/\n\n\t* sem_ch13.adb (Validate_Literal_Aspect): Ensure that the\n\tparameter is not aliased. Minor reformatting.\n\t* sem_util.adb (Statically_Names_Object): Update comment.", "tree": {"sha": "0447df56247bcc32af52b7f46e0b19db876945e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0447df56247bcc32af52b7f46e0b19db876945e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6801105e167376e8839007a1539a8167fb09306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6801105e167376e8839007a1539a8167fb09306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6801105e167376e8839007a1539a8167fb09306", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6801105e167376e8839007a1539a8167fb09306/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e35dea645d5303b433061df1a27e3f205129de7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e35dea645d5303b433061df1a27e3f205129de7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e35dea645d5303b433061df1a27e3f205129de7"}], "stats": {"total": 39, "additions": 19, "deletions": 20}, "files": [{"sha": "9a2f1d05c2ce84d3aa2e08db809c247b69b65494", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6801105e167376e8839007a1539a8167fb09306/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6801105e167376e8839007a1539a8167fb09306/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=c6801105e167376e8839007a1539a8167fb09306", "patch": "@@ -16016,10 +16016,12 @@ package body Sem_Ch13 is\n       Match_Found : Boolean := False;\n       Is_Match    : Boolean;\n       Match       : Interp;\n+\n    begin\n       if not Is_Type (Typ) then\n          Error_Msg_N (\"aspect can only be specified for a type\", ASN);\n          return;\n+\n       elsif not Is_First_Subtype (Typ) then\n          Error_Msg_N (\"aspect cannot be specified for a subtype\", ASN);\n          return;\n@@ -16030,12 +16032,15 @@ package body Sem_Ch13 is\n             Error_Msg_N (\"aspect cannot be specified for a string type\", ASN);\n             return;\n          end if;\n+\n          Param_Type := Standard_Wide_Wide_String;\n+\n       else\n          if Is_Numeric_Type (Typ) then\n             Error_Msg_N (\"aspect cannot be specified for a numeric type\", ASN);\n             return;\n          end if;\n+\n          Param_Type := Standard_String;\n       end if;\n \n@@ -16059,17 +16064,21 @@ package body Sem_Ch13 is\n            and then Base_Type (Etype (It.Nam)) = Typ\n          then\n             declare\n-               Params : constant List_Id :=\n+               Params     : constant List_Id :=\n                  Parameter_Specifications (Parent (It.Nam));\n                Param_Spec : Node_Id;\n                Param_Id   : Entity_Id;\n+\n             begin\n                if List_Length (Params) = 1 then\n                   Param_Spec := First (Params);\n+\n                   if not More_Ids (Param_Spec) then\n                      Param_Id := Defining_Identifier (Param_Spec);\n+\n                      if Base_Type (Etype (Param_Id)) = Param_Type\n-                        and then Ekind (Param_Id) = E_In_Parameter\n+                       and then Ekind (Param_Id) = E_In_Parameter\n+                       and then not Is_Aliased (Param_Id)\n                      then\n                         Is_Match := True;\n                      end if;\n@@ -16083,6 +16092,7 @@ package body Sem_Ch13 is\n                Error_Msg_N (\"aspect specification is ambiguous\", ASN);\n                return;\n             end if;\n+\n             Match_Found := True;\n             Match := It;\n          end if;"}, {"sha": "b2f41de1689c107054de24bc702d9bb11f294d1a", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6801105e167376e8839007a1539a8167fb09306/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6801105e167376e8839007a1539a8167fb09306/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=c6801105e167376e8839007a1539a8167fb09306", "patch": "@@ -27054,6 +27054,7 @@ package body Sem_Util is\n    -----------------------------\n    -- Statically_Names_Object --\n    -----------------------------\n+\n    function Statically_Names_Object (N : Node_Id) return Boolean is\n    begin\n       if Statically_Denotes_Object (N) then\n@@ -27126,28 +27127,16 @@ package body Sem_Util is\n             then\n                return False;\n             end if;\n+\n             declare\n                Comp : constant Entity_Id :=\n                  Original_Record_Component (Entity (Selector_Name (N)));\n             begin\n-              --  In not calling Has_Discriminant_Dependent_Constraint here,\n-              --  we are anticipating a language definition fixup. The\n-              --  current definition of \"statically names\" includes the\n-              --  wording \"the selector_name names a component that does\n-              --  not depend on a discriminant\", which suggests that this\n-              --  call should not be commented out. But it appears likely\n-              --  that this wording will be updated to only apply to a\n-              --  component declared in a variant part. There is no need\n-              --  to disallow something like\n-              --    with Post => ... and then\n-              --       Some_Record.Some_Discrim_Dep_Array_Component'Old (I)\n-              --  since the evaluation of the 'Old prefix cannot raise an\n-              --  exception. If the language is not updated, then the call\n-              --  below to H_D_C_C will need to be uncommented.\n-\n-               if Is_Declared_Within_Variant (Comp)\n-                  --  or else Has_Discriminant_Dependent_Constraint (Comp)\n-               then\n+              --  AI12-0373 confirms that we should not call\n+              --  Has_Discriminant_Dependent_Constraint here which would be\n+              --  too strong.\n+\n+               if Is_Declared_Within_Variant (Comp) then\n                   return False;\n                end if;\n             end;"}]}