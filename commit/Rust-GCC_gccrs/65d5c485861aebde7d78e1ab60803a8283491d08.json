{"sha": "65d5c485861aebde7d78e1ab60803a8283491d08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVkNWM0ODU4NjFhZWJkZTdkNzhlMWFiNjA4MDNhODI4MzQ5MWQwOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-01-11T09:01:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-01-11T09:01:36Z"}, "message": "extend.texi (malloc attribute): Adjust according to implementation.\n\n2012-01-11  Richard Guenther  <rguenther@suse.de>\n\n\t* doc/extend.texi (malloc attribute): Adjust according to\n\timplementation.\n\nFrom-SVN: r183092", "tree": {"sha": "e26e7c1c5edb15a2312cb7c939787e539b2a8985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e26e7c1c5edb15a2312cb7c939787e539b2a8985"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65d5c485861aebde7d78e1ab60803a8283491d08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d5c485861aebde7d78e1ab60803a8283491d08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65d5c485861aebde7d78e1ab60803a8283491d08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d5c485861aebde7d78e1ab60803a8283491d08/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "87633176610f86df377de7362ebb081394815733", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87633176610f86df377de7362ebb081394815733", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87633176610f86df377de7362ebb081394815733"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "b685805abeb903e7137566538c80505819b0b337", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d5c485861aebde7d78e1ab60803a8283491d08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d5c485861aebde7d78e1ab60803a8283491d08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65d5c485861aebde7d78e1ab60803a8283491d08", "patch": "@@ -1,3 +1,8 @@\n+2012-01-11  Richard Guenther  <rguenther@suse.de>\n+\n+\t* doc/extend.texi (malloc attribute): Adjust according to\n+\timplementation.\n+\n 2012-01-10  Aldy Hernandez  <aldyh@redhat.com>\n \t    Patrick Marlier  <patrick.marlier@gmail.com>\n "}, {"sha": "18ff7462bd72fd848c184c0378a1045ec9cf07d5", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d5c485861aebde7d78e1ab60803a8283491d08/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d5c485861aebde7d78e1ab60803a8283491d08/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=65d5c485861aebde7d78e1ab60803a8283491d08", "patch": "@@ -2771,13 +2771,12 @@ efficient @code{jal} instruction.\n @cindex @code{malloc} attribute\n The @code{malloc} attribute is used to tell the compiler that a function\n may be treated as if any non-@code{NULL} pointer it returns cannot\n-alias any other pointer valid when the function returns.\n+alias any other pointer valid when the function returns and that the memory\n+has undefined content.\n This will often improve optimization.\n Standard functions with this property include @code{malloc} and\n-@code{calloc}.  @code{realloc}-like functions have this property as\n-long as the old pointer is never referred to (including comparing it\n-to the new pointer) after the function returns a non-@code{NULL}\n-value.\n+@code{calloc}.  @code{realloc}-like functions do not have this\n+property as the memory pointed to does not have undefined content.\n \n @item mips16/nomips16\n @cindex @code{mips16} attribute"}]}