{"sha": "3d3707c1d5fd3d1351d9d916dc54697d93686e89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QzNzA3YzFkNWZkM2QxMzUxZDlkOTE2ZGM1NDY5N2Q5MzY4NmU4OQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-04-23T22:58:09Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-04-23T22:58:09Z"}, "message": "For PR java/6314:\n\n\t* jvspec.c (lang_specific_driver): Use --resource, not -R.  Also\n\trecognize `-fcompile-resource='.\n\t* gcj.texi (Invoking gcj): Use --resource, not -R.  Expanded text\n\ta bit.\n\nFrom-SVN: r52690", "tree": {"sha": "a290d78eabcb06c5952f53f57339a82ba9d5ef93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a290d78eabcb06c5952f53f57339a82ba9d5ef93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d3707c1d5fd3d1351d9d916dc54697d93686e89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d3707c1d5fd3d1351d9d916dc54697d93686e89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d3707c1d5fd3d1351d9d916dc54697d93686e89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d3707c1d5fd3d1351d9d916dc54697d93686e89/comments", "author": null, "committer": null, "parents": [{"sha": "50cb21547b32f994d673d568a4ce1e4ed87fec52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50cb21547b32f994d673d568a4ce1e4ed87fec52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50cb21547b32f994d673d568a4ce1e4ed87fec52"}], "stats": {"total": 46, "additions": 24, "deletions": 22}, "files": [{"sha": "b1d06e04c65e8dbfe347fa89761287b81e9fbc94", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d3707c1d5fd3d1351d9d916dc54697d93686e89/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d3707c1d5fd3d1351d9d916dc54697d93686e89/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=3d3707c1d5fd3d1351d9d916dc54697d93686e89", "patch": "@@ -1,3 +1,11 @@\n+2002-04-23  Tom Tromey  <tromey@redhat.com>\n+\n+\tFor PR java/6314:\n+\t* jvspec.c (lang_specific_driver): Use --resource, not -R.  Also\n+\trecognize `-fcompile-resource='.\n+\t* gcj.texi (Invoking gcj): Use --resource, not -R.  Expanded text\n+\ta bit.\n+\n 2002-04-22  Alexandre Petit-Bianco  <apbianco@redhat.com>\n \n \t* jcf-parse.c: (yyparse): Don't prepend \"./\" to relative"}, {"sha": "e8b913ce8a9b9423d6690cb20eaad83b85e4917c", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d3707c1d5fd3d1351d9d916dc54697d93686e89/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d3707c1d5fd3d1351d9d916dc54697d93686e89/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=3d3707c1d5fd3d1351d9d916dc54697d93686e89", "patch": "@@ -150,7 +150,7 @@ gcj [@option{-I}@var{dir}@dots{}] [@option{-d} @var{dir}@dots{}]\n     [@option{--CLASSPATH}=@var{path}] [@option{--classpath}=@var{path}]\n     [@option{-f}@var{option}@dots{}] [@option{--encoding}=@var{name}]\n     [@option{--main}=@var{classname}] [@option{-D}@var{name}[=@var{value}]@dots{}]\n-    [@option{-C}] [@option{-R} @var{resource-name}] [@option{-d} @var{directory}]\n+    [@option{-C}] [@option{--resource} @var{resource-name}] [@option{-d} @var{directory}]\n     [@option{-W}@var{warn}@dots{}]\n     @var{sourcefile}@dots{}\n @c man end\n@@ -213,7 +213,7 @@ in which case they will all be compiled.  If you specify a\n option, all the input files will be compiled together, producing a\n single output file, named @var{FILENAME}.\n This is allowed even when using @code{-S} or @code{-c},\n-but not when using @code{-C} or @code{-R}.\n+but not when using @code{-C} or @code{--resource}.\n (This is an extension beyond the what plain @command{gcc} allows.)\n (If more than one input file is specified, all must currently\n be @code{.java} files, though we hope to fix this.)\n@@ -387,10 +387,14 @@ using the @code{java.lang.System.getProperty} method.\n This option is used to tell @command{gcj} to generate bytecode\n (@file{.class} files) rather than object code.\n \n-@item -R @var{resource-name}\n+@item --resource @var{resource-name}\n This option is used to tell @command{gcj} to compile the contents of a\n given file to object code so it may be accessed at runtime with the core\n-protocol handler as @var{core:/resource-name}.\n+protocol handler as @samp{core:/@var{resource-name}}.  Note that\n+@var{resource-name} is the name of the resource as found at runtime; for\n+instance, it could be used in a call to @code{ResourceBundle.getBundle}.\n+The actual file name to be compiled this way must be specified\n+separately.\n \n @item -d @var{directory}\n When used with @code{-C}, this causes all generated @file{.class} files"}, {"sha": "aad21e136a0d77e55c0a6a700308c106b292d593", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d3707c1d5fd3d1351d9d916dc54697d93686e89/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d3707c1d5fd3d1351d9d916dc54697d93686e89/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=3d3707c1d5fd3d1351d9d916dc54697d93686e89", "patch": "@@ -210,8 +210,8 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n   int saw_libgcj ATTRIBUTE_UNUSED = 0;\n #endif\n \n-  /* Saw -R, -C or -o options, respectively. */\n-  int saw_R = 0;\n+  /* Saw --resource, -C or -o options, respectively. */\n+  int saw_resource = 0;\n   int saw_C = 0;\n   int saw_o = 0;\n \n@@ -303,13 +303,12 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \t      library = 0;\n \t      will_link = 0;\n \t    }\n-\t  else if (strcmp (argv[i], \"-R\") == 0)\n+\t  else if (strncmp (argv[i], \"-fcompile-resource=\", 19) == 0)\n \t    {\n-\t      saw_R = 1;\n-\t      quote = argv[i];\n+\t      saw_resource = 1;\n \t      want_spec_file = 0;\n \t      if (library != 0)\n-\t\tadded -= 2;\n+\t\t--added;\n \t      library = 0;\n \t      will_link = 0;\n \t    }\n@@ -382,7 +381,7 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \t      continue;\n \t    }\n \n-\t  if (saw_R)\n+\t  if (saw_resource)\n \t    {\n \t      args[i] |= RESOURCE_FILE_ARG;\n \t      last_input_index = i;\n@@ -430,10 +429,10 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n     fatal (\"`%s' is not a valid class name\", main_class_name);\n \n   num_args = argc + added;\n-  if (saw_R)\n+  if (saw_resource)\n     {\n       if (! saw_o)\n-\tfatal (\"-R requires -o\");\n+\tfatal (\"--resource requires -o\");\n     }\n   if (saw_C)\n     {\n@@ -514,15 +513,6 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \t  arglist[j] = \"-xnone\";\n \t}\n \n-      if (strcmp (argv[i], \"-R\") == 0)\n-\t{\n-\t  arglist[j] = concat (\"-fcompile-resource=\",\n-\t\t\t       *argv[i+1] == '/' ? \"\" : \"/\",\n-\t\t\t       argv[i+1], NULL);\n-\t  i++;\n-\t  continue;\n-\t}\n-\n       if (strcmp (argv[i], \"-classpath\") == 0\n \t  || strcmp (argv[i], \"-bootclasspath\") == 0\n \t  || strcmp (argv[i], \"-CLASSPATH\") == 0)"}]}