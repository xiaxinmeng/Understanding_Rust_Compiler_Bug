{"sha": "a4f238b6d7ecee86b9c0a664b44add65058b0a91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRmMjM4YjZkN2VjZWU4NmI5YzBhNjY0YjQ0YWRkNjUwNThiMGE5MQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2015-05-21T06:46:55Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2015-05-21T06:46:55Z"}, "message": "genrecog: Address -Wsign-compare diagnostics.\n\n    g++-4.6 [...] [...]/gcc/genrecog.c\n    [...]/gcc/genrecog.c: In function 'state_size find_subroutines(routine_type, state*, vec<state*>&)':\n    [...]/gcc/genrecog.c:3338:35: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n    [...]/gcc/genrecog.c:3347:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n    [...]/gcc/genrecog.c:3359:29: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n    [...]/gcc/genrecog.c:3365:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n\n    3305   state_size size;\n         [...]\n    3337           state_size to_size = find_subroutines (type, trans->to, procs);\n    3338           if (d->next && to_size.depth > MAX_DEPTH)\n         [...]\n    3347               if (to_size.num_statements < MIN_NUM_STATEMENTS)\n         [...]\n    3359   if (size.num_statements > MAX_NUM_STATEMENTS)\n         [...]\n    3365              && size.num_statements > MAX_NUM_STATEMENTS)\n\n     175 static const int MAX_DEPTH = 6;\n         [...]\n     179 static const int MIN_NUM_STATEMENTS = 5;\n         [...]\n     185 static const int MAX_NUM_STATEMENTS = 200;\n         [...]\n    3258 struct state_size\n    3259 {\n         [...]\n    3261   unsigned int num_statements;\n         [...]\n    3265   unsigned int depth;\n    3266 };\n\n\tgcc/\n\t* genrecog.c (MAX_DEPTH, MIN_NUM_STATEMENTS, MAX_NUM_STATEMENTS):\n\tChange to unsigned int.\n\nFrom-SVN: r223469", "tree": {"sha": "cb54e50e2263bea756854df8ace327ea96c585fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb54e50e2263bea756854df8ace327ea96c585fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4f238b6d7ecee86b9c0a664b44add65058b0a91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4f238b6d7ecee86b9c0a664b44add65058b0a91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4f238b6d7ecee86b9c0a664b44add65058b0a91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4f238b6d7ecee86b9c0a664b44add65058b0a91/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "965566df8949a8b081d79569decc2fa424bcb730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/965566df8949a8b081d79569decc2fa424bcb730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/965566df8949a8b081d79569decc2fa424bcb730"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "a62199a2faa963b491f54a89ff0ba926bfec9fef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f238b6d7ecee86b9c0a664b44add65058b0a91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f238b6d7ecee86b9c0a664b44add65058b0a91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4f238b6d7ecee86b9c0a664b44add65058b0a91", "patch": "@@ -1,3 +1,8 @@\n+2015-05-21  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* genrecog.c (MAX_DEPTH, MIN_NUM_STATEMENTS, MAX_NUM_STATEMENTS):\n+\tChange to unsigned int.\n+\n 2015-05-20  Mikhail Maltsev  <maltsevm@gmail.com>\n \n \t* bb-reorder.c (set_edge_can_fallthru_flag): Use rtx_jump_insn where"}, {"sha": "4b6dee64b5a7621a1b9b0592f22588013a81b063", "filename": "gcc/genrecog.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f238b6d7ecee86b9c0a664b44add65058b0a91/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f238b6d7ecee86b9c0a664b44add65058b0a91/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=a4f238b6d7ecee86b9c0a664b44add65058b0a91", "patch": "@@ -172,17 +172,17 @@ static const bool force_unique_params_p = true;\n /* The maximum (approximate) depth of block nesting that an individual\n    routine or subroutine should have.  This limit is about keeping the\n    output readable rather than reducing compile time.  */\n-static const int MAX_DEPTH = 6;\n+static const unsigned int MAX_DEPTH = 6;\n \n /* The minimum number of pseudo-statements that a state must have before\n    we split it out into a subroutine.  */\n-static const int MIN_NUM_STATEMENTS = 5;\n+static const unsigned int MIN_NUM_STATEMENTS = 5;\n \n /* The number of pseudo-statements a state can have before we consider\n    splitting out substates into subroutines.  This limit is about avoiding\n    compile-time problems with very big functions (and also about keeping\n    functions within --param optimization limits, etc.).  */\n-static const int MAX_NUM_STATEMENTS = 200;\n+static const unsigned int MAX_NUM_STATEMENTS = 200;\n \n /* The minimum number of pseudo-statements that can be used in a pattern\n    routine.  */"}]}