{"sha": "9d19c7329c6da0b59df04b32bca26f7d2c1ce20a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQxOWM3MzI5YzZkYTBiNTlkZjA0YjMyYmNhMjZmN2QyYzFjZTIwYQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2011-12-20T21:29:36Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2011-12-20T21:29:36Z"}, "message": "re PR target/49865 (Unnecessary reload causes small bloat)\n\n2011-12-20  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/49865\n\t* ira-costs.c (find_costs_and_classes): Prefer registers even\n          if the memory cost is the same.\n\nFrom-SVN: r182553", "tree": {"sha": "84a9907be731914d6a5e2d06a3ddeca3eab7ae65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84a9907be731914d6a5e2d06a3ddeca3eab7ae65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d19c7329c6da0b59df04b32bca26f7d2c1ce20a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d19c7329c6da0b59df04b32bca26f7d2c1ce20a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d19c7329c6da0b59df04b32bca26f7d2c1ce20a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d19c7329c6da0b59df04b32bca26f7d2c1ce20a/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6904889880ad58684c6eeaf366ab4af6167cd5b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6904889880ad58684c6eeaf366ab4af6167cd5b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6904889880ad58684c6eeaf366ab4af6167cd5b0"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "9bbfbcbaf3058766c49858e309d7d1be280ebfe3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d19c7329c6da0b59df04b32bca26f7d2c1ce20a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d19c7329c6da0b59df04b32bca26f7d2c1ce20a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d19c7329c6da0b59df04b32bca26f7d2c1ce20a", "patch": "@@ -1,3 +1,9 @@\n+2011-12-20  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/49865\n+\t* ira-costs.c (find_costs_and_classes): Prefer registers even\n+          if the memory cost is the same.\n+\n 2011-12-20  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-decl.c (diagnose_mismatched_decls, grokdeclarator, grokfield)"}, {"sha": "4f2f8412f7c9104e11d85d4fea48e7070569cfcd", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d19c7329c6da0b59df04b32bca26f7d2c1ce20a/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d19c7329c6da0b59df04b32bca26f7d2c1ce20a/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=9d19c7329c6da0b59df04b32bca26f7d2c1ce20a", "patch": "@@ -1693,7 +1693,14 @@ find_costs_and_classes (FILE *dump_file)\n \t      else if (i_costs[k] == best_cost)\n \t\tbest = ira_reg_class_subunion[best][rclass];\n \t      if (pass == flag_expensive_optimizations\n-\t\t  && i_costs[k] < i_mem_cost\n+\t\t  /* We still prefer registers to memory even at this\n+\t\t     stage if their costs are the same.  We will make\n+\t\t     a final decision during assigning hard registers\n+\t\t     when we have all info including more accurate\n+\t\t     costs which might be affected by assigning hard\n+\t\t     registers to other pseudos because the pseudos\n+\t\t     involved in moves can be coalesced.  */\n+\t\t  && i_costs[k] <= i_mem_cost\n \t\t  && (reg_class_size[reg_class_subunion[alt_class][rclass]]\n \t\t      > reg_class_size[alt_class]))\n \t\talt_class = reg_class_subunion[alt_class][rclass];"}]}