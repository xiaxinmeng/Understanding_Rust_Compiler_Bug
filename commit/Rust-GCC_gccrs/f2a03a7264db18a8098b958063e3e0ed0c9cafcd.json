{"sha": "f2a03a7264db18a8098b958063e3e0ed0c9cafcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJhMDNhNzI2NGRiMThhODA5OGI5NTgwNjNlM2UwZWQwYzljYWZjZA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-01-16T14:50:39Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-01-16T14:50:39Z"}, "message": "[AArch64] Fix PR 64263: Do not try to split constants when destination is SIMD reg\n\n\tPR target/64263\n\t* config/aarch64/aarch64.md (*movsi_aarch64): Don't split if the\n\tdestination is not a GP reg.\n\t(*movdi_aarch64): Likewise.\n\n\t* gcc.target/aarch64/pr64263_1.c: New test.\n\nCo-Authored-By: Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>\n\nFrom-SVN: r219745", "tree": {"sha": "7d9c95c807a621fd56505f3cff59dd45bff22ecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d9c95c807a621fd56505f3cff59dd45bff22ecb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2a03a7264db18a8098b958063e3e0ed0c9cafcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2a03a7264db18a8098b958063e3e0ed0c9cafcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2a03a7264db18a8098b958063e3e0ed0c9cafcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2a03a7264db18a8098b958063e3e0ed0c9cafcd/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e989e68d934ac328137abc8a2d08b110fac96872", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e989e68d934ac328137abc8a2d08b110fac96872", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e989e68d934ac328137abc8a2d08b110fac96872"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "8990f4940b6ddfc16bb4e9028ad8bf2b6e6c9a39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2a03a7264db18a8098b958063e3e0ed0c9cafcd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2a03a7264db18a8098b958063e3e0ed0c9cafcd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2a03a7264db18a8098b958063e3e0ed0c9cafcd", "patch": "@@ -1,3 +1,11 @@\n+2015-01-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+            Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>\n+\n+\tPR target/64263\n+\t* config/aarch64/aarch64.md (*movsi_aarch64): Don't split if the\n+\tdestination is not a GP reg.\n+\t(*movdi_aarch64): Likewise.\n+\n 2015-01-16  David Edelsohn  <dje.gcc@gmail.com>\n \n \tPR target/64623"}, {"sha": "fde5e4f0223bbee213ff5e8d8955ebf8ba5d053f", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2a03a7264db18a8098b958063e3e0ed0c9cafcd/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2a03a7264db18a8098b958063e3e0ed0c9cafcd/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=f2a03a7264db18a8098b958063e3e0ed0c9cafcd", "patch": "@@ -859,7 +859,8 @@\n    fmov\\\\t%s0, %w1\n    fmov\\\\t%w0, %s1\n    fmov\\\\t%s0, %s1\"\n-   \"CONST_INT_P (operands[1]) && !aarch64_move_imm (INTVAL (operands[1]), SImode)\"\n+   \"CONST_INT_P (operands[1]) && !aarch64_move_imm (INTVAL (operands[1]), SImode)\n+    && GP_REGNUM_P (REGNO (operands[0]))\"\n    [(const_int 0)]\n    \"{\n        aarch64_expand_mov_immediate (operands[0], operands[1]);\n@@ -891,7 +892,8 @@\n    fmov\\\\t%x0, %d1\n    fmov\\\\t%d0, %d1\n    movi\\\\t%d0, %1\"\n-   \"(CONST_INT_P (operands[1]) && !aarch64_move_imm (INTVAL (operands[1]), DImode))\"\n+   \"(CONST_INT_P (operands[1]) && !aarch64_move_imm (INTVAL (operands[1]), DImode))\n+    && GP_REGNUM_P (REGNO (operands[0]))\"\n    [(const_int 0)]\n    \"{\n        aarch64_expand_mov_immediate (operands[0], operands[1]);"}, {"sha": "231b947cde603cdde90f59da7796228162bf1edf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2a03a7264db18a8098b958063e3e0ed0c9cafcd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2a03a7264db18a8098b958063e3e0ed0c9cafcd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2a03a7264db18a8098b958063e3e0ed0c9cafcd", "patch": "@@ -1,3 +1,8 @@\n+2015-01-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/64263\n+\t* gcc.target/aarch64/pr64263_1.c: New test.\n+\n 2015-01-16  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \tPR tree-optimization/64434"}, {"sha": "047e6236668a7a2f2422b242fc4063e0e9b09f27", "filename": "gcc/testsuite/gcc.target/aarch64/pr64263_1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2a03a7264db18a8098b958063e3e0ed0c9cafcd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr64263_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2a03a7264db18a8098b958063e3e0ed0c9cafcd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr64263_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr64263_1.c?ref=f2a03a7264db18a8098b958063e3e0ed0c9cafcd", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern long int vget_lane_s64_1 (int64x1_t, const int);\n+\n+void\n+foo ()\n+{\n+  int8x8_t val14;\n+  int8x8_t val15;\n+  uint8x8_t val16;\n+  uint32x4_t val40;\n+  val14 = vcreate_s8 (0xff0080f6807f807fUL);\n+  val15 = vcreate_s8 (0x10807fff7f808080UL);\n+  val16 = vcgt_s8 (val14, val15);\n+  val40 = vreinterpretq_u32_u64 (\n+    vdupq_n_u64 (\n+         vget_lane_s64_1 (\n+         vreinterpret_s64_u8 (val16), 0)\n+    ));\n+}"}]}