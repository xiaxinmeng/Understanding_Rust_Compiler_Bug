{"sha": "6302b84be1ba1822f36eeeca858c267ea8852693", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMwMmI4NGJlMWJhMTgyMmYzNmVlZWNhODU4YzI2N2VhODg1MjY5Mw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2012-05-01T08:47:43Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2012-05-01T08:47:43Z"}, "message": "linux-eabi.h (GLIBC_DYNAMIC_LINKER_DEFAULT): Avoid ifdef comparing enumeration values.\n\n\t* arm/linux-eabi.h (GLIBC_DYNAMIC_LINKER_DEFAULT): Avoid ifdef\n\tcomparing enumeration values.  Update comments.\n\nFrom-SVN: r187012", "tree": {"sha": "83426ab7e67ed46883bfe723b1befcafdfcd32c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83426ab7e67ed46883bfe723b1befcafdfcd32c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6302b84be1ba1822f36eeeca858c267ea8852693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6302b84be1ba1822f36eeeca858c267ea8852693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6302b84be1ba1822f36eeeca858c267ea8852693", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6302b84be1ba1822f36eeeca858c267ea8852693/comments", "author": null, "committer": null, "parents": [{"sha": "56ca756cd95ffa1e2dadabd88a0b31380b84be64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56ca756cd95ffa1e2dadabd88a0b31380b84be64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56ca756cd95ffa1e2dadabd88a0b31380b84be64"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "829f6923da2573b063ab2ae75f52c341c7babe93", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6302b84be1ba1822f36eeeca858c267ea8852693/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6302b84be1ba1822f36eeeca858c267ea8852693/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6302b84be1ba1822f36eeeca858c267ea8852693", "patch": "@@ -1,3 +1,8 @@\n+2012-05-01  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm/linux-eabi.h (GLIBC_DYNAMIC_LINKER_DEFAULT): Avoid ifdef\n+\tcomparing enumeration values.  Update comments.\n+\n 2012-05-01  Alan Modra  <amodra@gmail.com>\n \n \tPR target/53038"}, {"sha": "46d3bc675fb4d00a9ce8875a13fd700da8edb874", "filename": "gcc/config/arm/linux-eabi.h", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6302b84be1ba1822f36eeeca858c267ea8852693/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6302b84be1ba1822f36eeeca858c267ea8852693/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-eabi.h?ref=6302b84be1ba1822f36eeeca858c267ea8852693", "patch": "@@ -32,7 +32,8 @@\n   while (false)\n \n /* We default to a soft-float ABI so that binaries can run on all\n-   target hardware.  */\n+   target hardware.  If you override this to use the hard-float ABI then\n+   change the setting of GLIBC_DYNAMIC_LINKER_DEFAULT as well.  */\n #undef  TARGET_DEFAULT_FLOAT_ABI\n #define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_SOFT\n \n@@ -59,16 +60,19 @@\n #undef  SUBTARGET_EXTRA_LINK_SPEC\n #define SUBTARGET_EXTRA_LINK_SPEC \" -m \" TARGET_LINKER_EMULATION\n \n-/* Use ld-linux.so.3 so that it will be possible to run \"classic\"\n-   GNU/Linux binaries on an EABI system.  */\n+/* GNU/Linux on ARM currently supports three dynamic linkers:\n+   - ld-linux.so.2 - for the legacy ABI\n+   - ld-linux.so.3 - for the EABI-derived soft-float ABI\n+   - ld-linux-armhf.so.3 - for the EABI-derived hard-float ABI.\n+   All the dynamic linkers live in /lib.\n+   We default to soft-float, but this can be overridden by changing both\n+   GLIBC_DYNAMIC_LINKER_DEFAULT and TARGET_DEFAULT_FLOAT_ABI.  */\n+\n #undef  GLIBC_DYNAMIC_LINKER\n #define GLIBC_DYNAMIC_LINKER_SOFT_FLOAT \"/lib/ld-linux.so.3\"\n #define GLIBC_DYNAMIC_LINKER_HARD_FLOAT \"/lib/ld-linux-armhf.so.3\"\n-#if TARGET_DEFAULT_FLOAT_ABI == ARM_FLOAT_ABI_HARD\n-#define GLIBC_DYNAMIC_LINKER_DEFAULT GLIBC_DYNAMIC_LINKER_HARD_FLOAT\n-#else\n #define GLIBC_DYNAMIC_LINKER_DEFAULT GLIBC_DYNAMIC_LINKER_SOFT_FLOAT\n-#endif\n+\n #define GLIBC_DYNAMIC_LINKER \\\n    \"%{mfloat-abi=hard:\" GLIBC_DYNAMIC_LINKER_HARD_FLOAT \"} \\\n     %{mfloat-abi=soft*:\" GLIBC_DYNAMIC_LINKER_SOFT_FLOAT \"} \\"}]}