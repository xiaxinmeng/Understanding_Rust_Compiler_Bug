{"sha": "d3b92f35d84f44a8599028086286699213b73e7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNiOTJmMzVkODRmNDRhODU5OTAyODA4NjI4NjY5OTIxM2I3M2U3Yw==", "commit": {"author": {"name": "Tejas Joshi", "email": "tejasjoshi9673@gmail.com", "date": "2019-08-26T12:41:59Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2019-08-26T12:41:59Z"}, "message": "i386: Roundeven expansion for SSE4.1+\n\ngcc/ChangeLog:\n\n2019-08-26  Tejas Joshi  <tejasjoshi9673@gmail.com>\n            Uros Bizjak  <ubizjak@gmail.com>\n\n\t* builtins.c (mathfn_built_in_2): Change CASE_MATHFN to\n\tCASE_MATHFN_FLOATN for roundeven.\n\t* config/i386/i386.c (ix86_i387_mode_needed): Add case\n\tI387_ROUNDEVEN.\n\t(ix86_mode_needed): Likewise.\n\t(ix86_mode_after): Likewise.\n\t(ix86_mode_entry): Likewise.\n\t(ix86_mode_exit): Likewise.\n\t(ix86_emit_mode_set): Likewise.\n\t(emit_i387_cw_initialization): Add case I387_CW_ROUNDEVEN.\n\t* config/i386/i386.h (ix86_stack_slot): Add SLOT_CW_ROUNDEVEN.\n\t(ix86_entry): Add I387_ROUNDEVEN.\n\t(avx_u128_state): Add I387_CW_ANY.\n\t* config/i386/i386.md: Define UNSPEC_FRNDINT_ROUNDEVEN.\n\t(define_int_iterator): Likewise.\n\t(define_int_attr): Likewise for rounding_insn, rounding and ROUNDING.\n\t(define_constant): Define ROUND_ROUNDEVEN mode.\n\t(define_attr): Add roundeven mode for i387_cw.\n\t(<rouding_insn><mode>2): Add condition for ROUND_ROUNDEVEN.\n\t* internal-fn.def (ROUNDEVEN): New builtin function.\n\t* optabs.def (roundeven_optab): New optab.\n\ngcc/testsuite/ChangeLog:\n\n2019-08-26  Tejas Joshi  <tejasjoshi9673@gmail.com>\n\n\t* gcc.target/i386/sse4_1-round-roundeven-1.c: New test.\n\t* gcc.target/i386/sse4_1-round-roundeven-2.c: New test.\n\n\nCo-Authored-By: Uros Bizjak <ubizjak@gmail.com>\n\nFrom-SVN: r274928", "tree": {"sha": "68dd8aabf68a9b3ef68b677082dbe5c480fe7ae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68dd8aabf68a9b3ef68b677082dbe5c480fe7ae5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3b92f35d84f44a8599028086286699213b73e7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3b92f35d84f44a8599028086286699213b73e7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3b92f35d84f44a8599028086286699213b73e7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3b92f35d84f44a8599028086286699213b73e7c/comments", "author": {"login": "Joshi-Tejas", "id": 30776933, "node_id": "MDQ6VXNlcjMwNzc2OTMz", "avatar_url": "https://avatars.githubusercontent.com/u/30776933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Joshi-Tejas", "html_url": "https://github.com/Joshi-Tejas", "followers_url": "https://api.github.com/users/Joshi-Tejas/followers", "following_url": "https://api.github.com/users/Joshi-Tejas/following{/other_user}", "gists_url": "https://api.github.com/users/Joshi-Tejas/gists{/gist_id}", "starred_url": "https://api.github.com/users/Joshi-Tejas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Joshi-Tejas/subscriptions", "organizations_url": "https://api.github.com/users/Joshi-Tejas/orgs", "repos_url": "https://api.github.com/users/Joshi-Tejas/repos", "events_url": "https://api.github.com/users/Joshi-Tejas/events{/privacy}", "received_events_url": "https://api.github.com/users/Joshi-Tejas/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d7b99f95bf2517caab5f9300090b471135b4fc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d7b99f95bf2517caab5f9300090b471135b4fc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d7b99f95bf2517caab5f9300090b471135b4fc0"}], "stats": {"total": 108, "additions": 99, "deletions": 9}, "files": [{"sha": "aa2bec6169bcb6a2046f2929a95bd9d204d47fa7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3b92f35d84f44a8599028086286699213b73e7c", "patch": "@@ -1,3 +1,28 @@\n+2019-08-26  Tejas Joshi  <tejasjoshi9673@gmail.com>\n+            Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* builtins.c (mathfn_built_in_2): Change CASE_MATHFN to\n+\tCASE_MATHFN_FLOATN for roundeven.\n+\t* config/i386/i386.c (ix86_i387_mode_needed): Add case\n+\tI387_ROUNDEVEN.\n+\t(ix86_mode_needed): Likewise.\n+\t(ix86_mode_after): Likewise.\n+\t(ix86_mode_entry): Likewise.\n+\t(ix86_mode_exit): Likewise.\n+\t(ix86_emit_mode_set): Likewise.\n+\t(emit_i387_cw_initialization): Add case I387_CW_ROUNDEVEN.\n+\t* config/i386/i386.h (ix86_stack_slot): Add SLOT_CW_ROUNDEVEN.\n+\t(ix86_entry): Add I387_ROUNDEVEN.\n+\t(avx_u128_state): Add I387_CW_ANY.\n+\t* config/i386/i386.md: Define UNSPEC_FRNDINT_ROUNDEVEN.\n+\t(define_int_iterator): Likewise.\n+\t(define_int_attr): Likewise for rounding_insn, rounding and ROUNDING.\n+\t(define_constant): Define ROUND_ROUNDEVEN mode.\n+\t(define_attr): Add roundeven mode for i387_cw.\n+\t(<rouding_insn><mode>2): Add condition for ROUND_ROUNDEVEN.\n+\t* internal-fn.def (ROUNDEVEN): New builtin function.\n+\t* optabs.def (roundeven_optab): New optab.\n+\n 2019-08-26  Tejas Joshi  <tejasjoshi9673@gmail.com>\n \n         * builtins.c (mathfn_built_in_2): Added CASE_MATHFN_FLOATN"}, {"sha": "c712c03dbe2705603273ca7ee40dd540fba1c276", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d3b92f35d84f44a8599028086286699213b73e7c", "patch": "@@ -13557,6 +13557,11 @@ ix86_i387_mode_needed (int entity, rtx_insn *insn)\n \n   switch (entity)\n     {\n+    case I387_ROUNDEVEN:\n+      if (mode == I387_CW_ROUNDEVEN)\n+\treturn mode;\n+      break;\n+\n     case I387_TRUNC:\n       if (mode == I387_CW_TRUNC)\n \treturn mode;\n@@ -13591,6 +13596,7 @@ ix86_mode_needed (int entity, rtx_insn *insn)\n       return ix86_dirflag_mode_needed (insn);\n     case AVX_U128:\n       return ix86_avx_u128_mode_needed (insn);\n+    case I387_ROUNDEVEN:\n     case I387_TRUNC:\n     case I387_FLOOR:\n     case I387_CEIL:\n@@ -13651,6 +13657,7 @@ ix86_mode_after (int entity, int mode, rtx_insn *insn)\n       return mode;\n     case AVX_U128:\n       return ix86_avx_u128_mode_after (mode, insn);\n+    case I387_ROUNDEVEN:\n     case I387_TRUNC:\n     case I387_FLOOR:\n     case I387_CEIL:\n@@ -13703,6 +13710,7 @@ ix86_mode_entry (int entity)\n       return ix86_dirflag_mode_entry ();\n     case AVX_U128:\n       return ix86_avx_u128_mode_entry ();\n+    case I387_ROUNDEVEN:\n     case I387_TRUNC:\n     case I387_FLOOR:\n     case I387_CEIL:\n@@ -13740,6 +13748,7 @@ ix86_mode_exit (int entity)\n       return X86_DIRFLAG_ANY;\n     case AVX_U128:\n       return ix86_avx_u128_mode_exit ();\n+    case I387_ROUNDEVEN:\n     case I387_TRUNC:\n     case I387_FLOOR:\n     case I387_CEIL:\n@@ -13774,6 +13783,12 @@ emit_i387_cw_initialization (int mode)\n \n   switch (mode)\n     {\n+    case I387_CW_ROUNDEVEN:\n+      /* round to nearest */\n+      emit_insn (gen_andhi3 (reg, reg, GEN_INT (0x0c00)));\n+      slot = SLOT_CW_ROUNDEVEN;\n+      break;\n+\n     case I387_CW_TRUNC:\n       /* round toward zero (truncate) */\n       emit_insn (gen_iorhi3 (reg, reg, GEN_INT (0x0c00)));\n@@ -13820,6 +13835,7 @@ ix86_emit_mode_set (int entity, int mode, int prev_mode ATTRIBUTE_UNUSED,\n       if (mode == AVX_U128_CLEAN)\n \temit_insn (gen_avx_vzeroupper ());\n       break;\n+    case I387_ROUNDEVEN:\n     case I387_TRUNC:\n     case I387_FLOOR:\n     case I387_CEIL:"}, {"sha": "a1d0484d71fed80b57e3857ccb61577b6171c1a9", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=d3b92f35d84f44a8599028086286699213b73e7c", "patch": "@@ -2511,6 +2511,7 @@ enum ix86_stack_slot\n {\n   SLOT_TEMP = 0,\n   SLOT_CW_STORED,\n+  SLOT_CW_ROUNDEVEN,\n   SLOT_CW_TRUNC,\n   SLOT_CW_FLOOR,\n   SLOT_CW_CEIL,\n@@ -2522,6 +2523,7 @@ enum ix86_entity\n {\n   X86_DIRFLAG = 0,\n   AVX_U128,\n+  I387_ROUNDEVEN,\n   I387_TRUNC,\n   I387_FLOOR,\n   I387_CEIL,\n@@ -2557,7 +2559,7 @@ enum avx_u128_state\n \n #define NUM_MODES_FOR_MODE_SWITCHING\t\t\t\\\n   { X86_DIRFLAG_ANY, AVX_U128_ANY,\t\t\t\\\n-    I387_CW_ANY, I387_CW_ANY, I387_CW_ANY }\n+    I387_CW_ANY, I387_CW_ANY, I387_CW_ANY, I387_CW_ANY  }\n \n \f\n /* Avoid renaming of stack registers, as doing so in combination with"}, {"sha": "7ad9788241988e1949bcd243ae7853ec906f9f57", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d3b92f35d84f44a8599028086286699213b73e7c", "patch": "@@ -141,6 +141,7 @@\n   UNSPEC_FXAM\n \n   ;; x87 Rounding\n+  UNSPEC_FRNDINT_ROUNDEVEN\n   UNSPEC_FRNDINT_FLOOR\n   UNSPEC_FRNDINT_CEIL\n   UNSPEC_FRNDINT_TRUNC\n@@ -303,7 +304,8 @@\n \n ;; Constants to represent rounding modes in the ROUND instruction\n (define_constants\n-  [(ROUND_FLOOR\t\t\t0x1)\n+  [(ROUND_ROUNDEVEN\t\t0x0)\n+   (ROUND_FLOOR\t\t\t0x1)\n    (ROUND_CEIL\t\t\t0x2)\n    (ROUND_TRUNC\t\t\t0x3)\n    (ROUND_MXCSR\t\t\t0x4)\n@@ -779,7 +781,7 @@\n \n ;; Defines rounding mode of an FP operation.\n \n-(define_attr \"i387_cw\" \"trunc,floor,ceil,uninitialized,any\"\n+(define_attr \"i387_cw\" \"roundeven,floor,ceil,trunc,uninitialized,any\"\n   (const_string \"any\"))\n \n ;; Define attribute to indicate AVX insns with partial XMM register update.\n@@ -16212,7 +16214,8 @@\n })\n \n (define_int_iterator FRNDINT_ROUNDING\n-\t[UNSPEC_FRNDINT_FLOOR\n+\t[UNSPEC_FRNDINT_ROUNDEVEN\n+\t UNSPEC_FRNDINT_FLOOR\n \t UNSPEC_FRNDINT_CEIL\n \t UNSPEC_FRNDINT_TRUNC])\n \n@@ -16222,21 +16225,24 @@\n \n ;; Base name for define_insn\n (define_int_attr rounding_insn\n-\t[(UNSPEC_FRNDINT_FLOOR \"floor\")\n+\t[(UNSPEC_FRNDINT_ROUNDEVEN \"roundeven\")\n+\t (UNSPEC_FRNDINT_FLOOR \"floor\")\n \t (UNSPEC_FRNDINT_CEIL \"ceil\")\n \t (UNSPEC_FRNDINT_TRUNC \"btrunc\")\n \t (UNSPEC_FIST_FLOOR \"floor\")\n \t (UNSPEC_FIST_CEIL \"ceil\")])\n \n (define_int_attr rounding\n-\t[(UNSPEC_FRNDINT_FLOOR \"floor\")\n+\t[(UNSPEC_FRNDINT_ROUNDEVEN \"roundeven\")\n+\t (UNSPEC_FRNDINT_FLOOR \"floor\")\n \t (UNSPEC_FRNDINT_CEIL \"ceil\")\n \t (UNSPEC_FRNDINT_TRUNC \"trunc\")\n \t (UNSPEC_FIST_FLOOR \"floor\")\n \t (UNSPEC_FIST_CEIL \"ceil\")])\n \n (define_int_attr ROUNDING\n-\t[(UNSPEC_FRNDINT_FLOOR \"FLOOR\")\n+\t[(UNSPEC_FRNDINT_ROUNDEVEN \"ROUNDEVEN\")\n+\t (UNSPEC_FRNDINT_FLOOR \"FLOOR\")\n \t (UNSPEC_FRNDINT_CEIL \"CEIL\")\n \t (UNSPEC_FRNDINT_TRUNC \"TRUNC\")\n \t (UNSPEC_FIST_FLOOR \"FLOOR\")\n@@ -16299,8 +16305,9 @@\n \t|| TARGET_MIX_SSE_I387)\n     && (flag_fp_int_builtin_inexact || !flag_trapping_math))\n    || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n-       && (TARGET_SSE4_1 || flag_fp_int_builtin_inexact\n-\t   || !flag_trapping_math))\"\n+       && (TARGET_SSE4_1\n+\t  || (ROUND_<ROUNDING> != ROUND_ROUNDEVEN\n+\t      && (flag_fp_int_builtin_inexact || !flag_trapping_math))))\"\n {\n   if (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n       && (TARGET_SSE4_1 || flag_fp_int_builtin_inexact || !flag_trapping_math))"}, {"sha": "b5a6ca33223728f9c39bca0211b7a9728e665d5e", "filename": "gcc/internal-fn.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Finternal-fn.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Finternal-fn.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.def?ref=d3b92f35d84f44a8599028086286699213b73e7c", "patch": "@@ -238,6 +238,7 @@ DEF_INTERNAL_FLT_FLOATN_FN (FLOOR, ECF_CONST, floor, unary)\n DEF_INTERNAL_FLT_FLOATN_FN (NEARBYINT, ECF_CONST, nearbyint, unary)\n DEF_INTERNAL_FLT_FLOATN_FN (RINT, ECF_CONST, rint, unary)\n DEF_INTERNAL_FLT_FLOATN_FN (ROUND, ECF_CONST, round, unary)\n+DEF_INTERNAL_FLT_FLOATN_FN (ROUNDEVEN, ECF_CONST, roundeven, unary)\n DEF_INTERNAL_FLT_FLOATN_FN (TRUNC, ECF_CONST, btrunc, unary)\n \n /* Binary math functions.  */"}, {"sha": "0860b38badbb2531f7292159bc63f03d9b1aa23c", "filename": "gcc/optabs.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Foptabs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Foptabs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.def?ref=d3b92f35d84f44a8599028086286699213b73e7c", "patch": "@@ -271,6 +271,7 @@ OPTAB_D (fnms_optab, \"fnms$a4\")\n \n OPTAB_D (rint_optab, \"rint$a2\")\n OPTAB_D (round_optab, \"round$a2\")\n+OPTAB_D (roundeven_optab, \"roundeven$a2\")\n OPTAB_D (floor_optab, \"floor$a2\")\n OPTAB_D (ceil_optab, \"ceil$a2\")\n OPTAB_D (btrunc_optab, \"btrunc$a2\")"}, {"sha": "0f0089acdea5125c33f4e247f3a42a6025ff1533", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=d3b92f35d84f44a8599028086286699213b73e7c", "patch": "@@ -1817,6 +1817,7 @@ subst_stack_regs_pat (rtx_insn *insn, stack_ptr regstack, rtx pat)\n \t      case UNSPEC_FRNDINT:\n \t      case UNSPEC_F2XM1:\n \n+\t      case UNSPEC_FRNDINT_ROUNDEVEN:\n \t      case UNSPEC_FRNDINT_FLOOR:\n \t      case UNSPEC_FRNDINT_CEIL:\n \t      case UNSPEC_FRNDINT_TRUNC:"}, {"sha": "b5a2d7bb50e42815f64a3838bce507a25a6fc782", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3b92f35d84f44a8599028086286699213b73e7c", "patch": "@@ -1,3 +1,8 @@\n+2019-08-26  Tejas Joshi  <tejasjoshi9673@gmail.com>\n+\n+\t* gcc.target/i386/sse4_1-round-roundeven-1.c: New test.\n+\t* gcc.target/i386/sse4_1-round-roundeven-2.c: New test.\n+\n 2019-08-26  Tejas Joshi  <tejasjoshi9673@gmail.com>\n \n         * gcc.dg/torture/builtin-round-roundeven.c: New test."}, {"sha": "36332630618f6280b72b7798f91884e72cb9fc81", "filename": "gcc/testsuite/gcc.target/i386/sse4_1-round-roundeven-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-round-roundeven-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-round-roundeven-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-round-roundeven-1.c?ref=d3b92f35d84f44a8599028086286699213b73e7c", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse4.1\" } */\n+\n+__attribute__((noinline, noclone)) double\n+f1 (double x)\n+{\n+  return __builtin_roundeven (x);\n+}\n+\n+__attribute__((noinline, noclone)) float\n+f2 (float x)\n+{\n+  return __builtin_roundevenf (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"roundsd\\[^\\n\\r\\]*xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"roundss\\[^\\n\\r\\]*xmm\" 1 } } */"}, {"sha": "9505796dafb93779836f56846b788b3107623dae", "filename": "gcc/testsuite/gcc.target/i386/sse4_1-round-roundeven-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-round-roundeven-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b92f35d84f44a8599028086286699213b73e7c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-round-roundeven-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-round-roundeven-2.c?ref=d3b92f35d84f44a8599028086286699213b73e7c", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target sse4 } */\n+/* { dg-options \"-O2 -msse4.1\" } */\n+\n+#include \"sse4_1-check.h\"\n+#include \"sse4_1-round-roundeven-1.c\"\n+\n+static void\n+sse4_1_test (void)\n+{\n+  if (f1 (0.5) != 0.0 || f1 (1.5) != 2.0 || f1 (-0.5) != 0.0 || f1 (-1.5) != -2.0)\n+    abort ();\n+  if (f2 (0.5f) != 0.0f || f2 (1.5f) != 2.0f || f2 (-0.5f) != 0.0f || f2 (-1.5f) != -2.0f)\n+    abort ();\n+}"}]}