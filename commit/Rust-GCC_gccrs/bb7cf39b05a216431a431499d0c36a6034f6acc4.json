{"sha": "bb7cf39b05a216431a431499d0c36a6034f6acc4", "node_id": "C_kwDOANBUbNoAKGJiN2NmMzliMDVhMjE2NDMxYTQzMTQ5OWQwYzM2YTYwMzRmNmFjYzQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-04-29T11:17:13Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-04-29T13:40:59Z"}, "message": "libstdc++: Add missing exports for ppc64le --with-long-double-format=ibm [PR105417]\n\nThe --with-long-double-abi=ibm build is missing some exports that are\npresent in the --with-long-double-abi=ieee build. Those symbols never\nshould have been exported at all, but now that they have been, they\nshould be exported consistently by both ibm and ieee.\n\nThis simply defines them as aliases for equivalent symbols that are\nalready present. The abi-tag on num_get::_M_extract_int isn't really\nneeded, because it only uses a std::string as a local variable, not in\nthe return type or function parameters, so it's safe to define the\n_M_extract_int[abi:cxx11] symbols as aliases for the corresponding\nfunction without the abi-tag.\n\nThis causes some new symbols to be added to the GLIBCXX_3.4.29 version\nfor the ibm long double build mode, but there is no advantage to adding\nthem to 3.4.30 for that build. That would just create more\ninconsistencies.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/105417\n\t* config/abi/post/powerpc64-linux-gnu/baseline_symbols.txt:\n\tRegenerate.\n\t* src/c++11/compatibility-ldbl-alt128.cc [_GLIBCXX_USE_DUAL_ABI]:\n\tDefine __gnu_ieee128::num_get<C>::_M_extract_int[abi:cxx11]<I>\n\tsymbols as aliases for corresponding symbols without abi-tag.", "tree": {"sha": "33eadd4ca49ff604b8abdd42d193316ac484618f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33eadd4ca49ff604b8abdd42d193316ac484618f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb7cf39b05a216431a431499d0c36a6034f6acc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb7cf39b05a216431a431499d0c36a6034f6acc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb7cf39b05a216431a431499d0c36a6034f6acc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb7cf39b05a216431a431499d0c36a6034f6acc4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19c62569ccf20d2744b63482a470474391d28c02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19c62569ccf20d2744b63482a470474391d28c02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19c62569ccf20d2744b63482a470474391d28c02"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "5d54eda0e1d9b6c79e1f28bfb8047f16e084a0b0", "filename": "libstdc++-v3/config/abi/post/powerpc64-linux-gnu/baseline_symbols.txt", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb7cf39b05a216431a431499d0c36a6034f6acc4/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fpowerpc64-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb7cf39b05a216431a431499d0c36a6034f6acc4/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fpowerpc64-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fpowerpc64-linux-gnu%2Fbaseline_symbols.txt?ref=bb7cf39b05a216431a431499d0c36a6034f6acc4", "patch": "@@ -550,6 +550,12 @@ FUNC:_ZNKSt15basic_streambufIwSt11char_traitsIwEE6getlocEv@@GLIBCXX_3.4\n FUNC:_ZNKSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strEv@@GLIBCXX_3.4\n FUNC:_ZNKSt15basic_stringbufIwSt11char_traitsIwESaIwEE3strEv@@GLIBCXX_3.4\n FUNC:_ZNKSt16bad_array_length4whatEv@@CXXABI_1.3.8\n+FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11IjEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n+FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11IlEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n+FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11ImEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n+FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11ItEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n+FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11IxEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n+FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intB5cxx11IyEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n@@ -581,6 +587,12 @@ FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traits\n FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES4_S4_RSt8ios_baseRSt12_Ios_IostateRy@@GLIBCXX_IEEE128_3.4.29\n FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8__do_getES4_S4_RSt8ios_baseRSt12_Ios_IostateRd@@GLIBCXX_IEEE128_3.4.29\n FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8__do_getES4_S4_RSt8ios_baseRSt12_Ios_IostateRg@@GLIBCXX_IEEE128_3.4.29\n+FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11IjEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n+FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11IlEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n+FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11ImEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n+FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11ItEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n+FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11IxEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n+FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intB5cxx11IyEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29\n FUNC:_ZNKSt17__gnu_cxx_ieee1287num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_@@GLIBCXX_IEEE128_3.4.29"}, {"sha": "939e69d10b22888c8f1231d05729dc9bcd058f43", "filename": "libstdc++-v3/src/c++11/compatibility-ldbl-alt128.cc", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb7cf39b05a216431a431499d0c36a6034f6acc4/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-ldbl-alt128.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb7cf39b05a216431a431499d0c36a6034f6acc4/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-ldbl-alt128.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-ldbl-alt128.cc?ref=bb7cf39b05a216431a431499d0c36a6034f6acc4", "patch": "@@ -241,4 +241,40 @@ _ZNKSt4hashIu9__ieee128EclEu9__ieee128 (void)\n # error \"Configuration error\"\n #endif\n \n+#if defined _GLIBCXX_USE_DUAL_ABI && defined __LONG_DOUBLE_IEEE128__\n+// PR libstdc++/105417\n+// The --with-long-double-abi=ibm build is missing some exports that are present in the\n+// --with-long-double-abi=ieee build. Those symbols never should have been exported at all,\n+// but now that they have been, they should be exported consistently by both ibm and ieee.\n+\n+#define STR_(X) #X\n+#define STR(X) STR_(X)\n+#define JOIN_(X,Y) X ## Y\n+#define JOIN(X,Y) JOIN_(X,Y)\n+\n+#define NUM_GET_TYPE(C, I) _ZNKSt17__gnu_cxx_ieee1287num_getI ## C ## St19istreambuf_iteratorI ## C ## St11char_traitsI ## C\n+#define FUNC_NAME(TAG, INT) EEE14_M_extract_int ## TAG ## I ## INT ## EES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRT_\n+\n+// This defines __gnu_ieee128::num_get<CHAR>::_M_extract_int[abi:cxx11]<INT> as an alias for\n+// __gnu_ieee128::num_get<CHAR>::_M_extract_int<INT> (i.e. the same name without the abi-tag).\n+#define ALIAS(CHAR,MANGLED_CHAR,INT) extern \"C\" std::istreambuf_iterator<CHAR> \\\n+  JOIN(NUM_GET_TYPE(MANGLED_CHAR,INT), FUNC_NAME(B5cxx11,INT)) (void) \\\n+  __attribute__((alias (STR(NUM_GET_TYPE(MANGLED_CHAR,INT)) STR(FUNC_NAME(,INT)))))\n+\n+ALIAS(char,c,j);\n+ALIAS(char,c,l);\n+ALIAS(char,c,m);\n+ALIAS(char,c,t);\n+ALIAS(char,c,x);\n+ALIAS(char,c,y);\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+ALIAS(wchar_t,w,j);\n+ALIAS(wchar_t,w,l);\n+ALIAS(wchar_t,w,m);\n+ALIAS(wchar_t,w,t);\n+ALIAS(wchar_t,w,x);\n+ALIAS(wchar_t,w,y);\n+#endif\n+#endif\n+\n #endif"}]}