{"sha": "ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E5MGIxZWQ5YWM3ZTlhYWFjYjNlZjBlYjA1NWQyZjU5NGQzMDQ5Mw==", "commit": {"author": {"name": "Yuri Rumyantsev", "email": "ysrumyan@gmail.com", "date": "2016-01-11T12:07:31Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-01-11T12:07:31Z"}, "message": "re PR rtl-optimization/68920 (Undesirable if-conversion for a rarely taken branch)\n\ngcc/\n\n2016-01-11  Yuri Rumyantsev  <ysrumyan@gmail.com>\n\n\tPR rtl-optimization/68920\n\t* config/i386/i386.c (ix86_option_override_internal): Restrict number\n\tof conditional moves for  RTL if-conversion to 1 for\n\tTARGET_ONE_IF_CONV_INSN.\n\t* config/i386/i386.h (TARGET_ONE_IF_CONV_INSN): New macros.\n\t* config/i386/x86-tune.def (X86_TUNE_ONE_IF_CONV_INSN): New macros.\n\t* params.def (PARAM_MAX_RTL_IF_CONVERSION_INSNS) : Introduce new\n\tparameter to restirct number of conditional moves for\n\tRTL if-conversion.\n\t* doc/invoke.texi (max-rtl-if-conversion-insns): Document it.\n\t* ifcvt.c (bb_ok_for_noce_convert_multiple_sets): Limit number of\n\tconditionl moves.\n\ngcc/testsuite/\n\n2016-01-11  Yuri Rumyantsev  <ysrumyan@gmail.com>\n\n\tPR rtl-optimization/68920\n\t* gcc.dg/ifcvt-4.c: Add \"--param max-rtl-if-conversion-insns=3\" option\n\tfor ix86 targets.\n\t* gcc.dg/ifcvt-5.c: New test.\n\nFrom-SVN: r232220", "tree": {"sha": "aff7cf99fbd76cee5e9f06139145d6518bc63045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aff7cf99fbd76cee5e9f06139145d6518bc63045"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/comments", "author": {"login": "ysrumyan", "id": 44425612, "node_id": "MDQ6VXNlcjQ0NDI1NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/44425612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysrumyan", "html_url": "https://github.com/ysrumyan", "followers_url": "https://api.github.com/users/ysrumyan/followers", "following_url": "https://api.github.com/users/ysrumyan/following{/other_user}", "gists_url": "https://api.github.com/users/ysrumyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysrumyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysrumyan/subscriptions", "organizations_url": "https://api.github.com/users/ysrumyan/orgs", "repos_url": "https://api.github.com/users/ysrumyan/repos", "events_url": "https://api.github.com/users/ysrumyan/events{/privacy}", "received_events_url": "https://api.github.com/users/ysrumyan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4934671aed067e0a8c3ac3fcc5871dd27a706ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4934671aed067e0a8c3ac3fcc5871dd27a706ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4934671aed067e0a8c3ac3fcc5871dd27a706ed"}], "stats": {"total": 78, "additions": 73, "deletions": 5}, "files": [{"sha": "0e7202b6e4eb970fc0f99c9b9b41cf430710f32f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "patch": "@@ -1,3 +1,18 @@\n+2016-01-11  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR rtl-optimization/68920\n+\t* config/i386/i386.c (ix86_option_override_internal): Restrict number\n+\tof conditional moves for  RTL if-conversion to 1 for\n+\tTARGET_ONE_IF_CONV_INSN.\n+\t* config/i386/i386.h (TARGET_ONE_IF_CONV_INSN): New macros.\n+\t* config/i386/x86-tune.def (X86_TUNE_ONE_IF_CONV_INSN): New macros.\n+\t* params.def (PARAM_MAX_RTL_IF_CONVERSION_INSNS) : Introduce new\n+\tparameter to restirct number of conditional moves for\n+\tRTL if-conversion.\n+\t* doc/invoke.texi (max-rtl-if-conversion-insns): Document it.\n+\t* ifcvt.c (bb_ok_for_noce_convert_multiple_sets): Limit number of\n+\tconditionl moves.\n+\n 2016-01-11  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR bootstrap/69123"}, {"sha": "c0b2cce4f3f87f071644a978979523144116c239", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "patch": "@@ -5343,6 +5343,13 @@ ix86_option_override_internal (bool main_args_p,\n \t\t\t opts->x_param_values,\n \t\t\t opts_set->x_param_values);\n \n+  /* Restrict number of if-converted SET insns to 1.  */\n+  if (TARGET_ONE_IF_CONV_INSN)\n+    maybe_set_param_value (PARAM_MAX_RTL_IF_CONVERSION_INSNS,\n+\t\t\t   1,\n+\t\t\t   opts->x_param_values,\n+\t\t\t   opts_set->x_param_values);\n+\n   /* Enable sw prefetching at -O3 for CPUS that prefetching is helpful.  */\n   if (opts->x_flag_prefetch_loop_arrays < 0\n       && HAVE_prefetch"}, {"sha": "dcaa011a2be117515414a66f19de9d2b764ad95c", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "patch": "@@ -499,6 +499,8 @@ extern unsigned char ix86_tune_features[X86_TUNE_LAST];\n     ix86_tune_features[X86_TUNE_ADJUST_UNROLL]\n #define TARGET_AVOID_FALSE_DEP_FOR_BMI \\\n \tix86_tune_features[X86_TUNE_AVOID_FALSE_DEP_FOR_BMI]\n+#define TARGET_ONE_IF_CONV_INSN \\\n+\tix86_tune_features[X86_TUNE_ONE_IF_CONV_INSN]\n \n /* Feature tests against the various architecture variations.  */\n enum ix86_arch_indices {"}, {"sha": "9d25e51d40788aca504453a4f778f259a3b1a144", "filename": "gcc/config/i386/x86-tune.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune.def?ref=ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "patch": "@@ -550,3 +550,8 @@ DEF_TUNE (X86_TUNE_PROMOTE_QI_REGS, \"promote_qi_regs\", 0)\n    unrolling small loop less important. For, such architectures we adjust\n    the unroll factor so that the unrolled loop fits the loop buffer.  */\n DEF_TUNE (X86_TUNE_ADJUST_UNROLL, \"adjust_unroll_factor\", m_BDVER3 | m_BDVER4)\n+\n+/* X86_TUNE_ONE_IF_CONV_INSNS: Restrict a number of set insns to be\n+   if-converted to one.  */\n+DEF_TUNE (X86_TUNE_ONE_IF_CONV_INSN, \"one_if_conv_insn\",\n+\t  m_SILVERMONT | m_KNL | m_INTEL | m_CORE_ALL | m_GENERIC)"}, {"sha": "77115a7d6a592c0426a81e82a4df5aaf6a33d90c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "patch": "@@ -10365,6 +10365,14 @@ In each case, the @var{value} is an integer.  The allowable choices for\n When branch is predicted to be taken with probability lower than this threshold\n (in percent), then it is considered well predictable. The default is 10.\n \n+@item max-rtl-if-conversion-insns\n+RTL if-conversion tries to remove conditional branches around a block and\n+replace them with conditionally executed instructions.  This parameter\n+gives the maximum number of instructions in a block which should be\n+considered for if-conversion.  The default is 10, though the compiler will\n+also use other heuristics to decide whether if-conversion is likely to be\n+profitable.\n+\n @item max-crossjump-edges\n The maximum number of incoming edges to consider for cross-jumping.\n The algorithm used by @option{-fcrossjumping} is @math{O(N^2)} in"}, {"sha": "723ea3eee91f587cd4d4bc64a7bef64a7b5d5be9", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "patch": "@@ -44,6 +44,7 @@\n #include \"shrink-wrap.h\"\n #include \"rtl-iter.h\"\n #include \"ifcvt.h\"\n+#include \"params.h\"\n \n #ifndef MAX_CONDITIONAL_EXECUTE\n #define MAX_CONDITIONAL_EXECUTE \\\n@@ -3242,6 +3243,8 @@ bb_ok_for_noce_convert_multiple_sets (basic_block test_bb,\n {\n   rtx_insn *insn;\n   unsigned count = 0;\n+  unsigned param = PARAM_VALUE (PARAM_MAX_RTL_IF_CONVERSION_INSNS);\n+  unsigned limit = MIN (ii->branch_cost, param);\n \n   FOR_BB_INSNS (test_bb, insn)\n     {\n@@ -3277,8 +3280,8 @@ bb_ok_for_noce_convert_multiple_sets (basic_block test_bb,\n   /* FORNOW: Our cost model is a count of the number of instructions we\n      would if-convert.  This is suboptimal, and should be improved as part\n      of a wider rework of branch_cost.  */\n-  if (count > ii->branch_cost)\n-    return FALSE;\n+  if (count > limit)\n+    return false;\n \n   return count > 0;\n }\n@@ -3823,7 +3826,6 @@ cond_move_process_if_block (struct noce_if_info *if_info)\n     }\n \n   num_updated_if_blocks++;\n-\n   success_p = TRUE;\n \n done:\n@@ -4810,7 +4812,6 @@ find_if_case_1 (basic_block test_bb, edge then_edge, edge else_edge)\n \n   num_true_changes++;\n   num_updated_if_blocks++;\n-\n   return TRUE;\n }\n "}, {"sha": "308844afde3d52cda1f7c61e2fd1dfb51834606d", "filename": "gcc/params.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "patch": "@@ -1177,6 +1177,12 @@ DEFPARAM (PARAM_MAX_SSA_NAME_QUERY_DEPTH,\n \t  \"Maximum recursion depth allowed when querying a property of an\"\n \t  \" SSA name.\",\n \t  2, 1, 0)\n+\n+DEFPARAM (PARAM_MAX_RTL_IF_CONVERSION_INSNS,\n+\t  \"max-rtl-if-conversion-insns\",\n+\t  \"Maximum number of insns in a basic block to consider for RTL \"\n+\t  \"if-conversion.\",\n+\t  10, 0, 99)\n /*\n \n Local variables:"}, {"sha": "c1ae6efdc5db499f1842150550d1a64b011f7c93", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "patch": "@@ -1,3 +1,10 @@\n+2016-01-11  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR rtl-optimization/68920\n+\t* gcc.dg/ifcvt-4.c: Add \"--param max-rtl-if-conversion-insns=3\" option\n+\tfor ix86 targets.\n+\t* gcc.dg/ifcvt-5.c: New test.\n+\n 2016-01-11  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR bootstrap/69123"}, {"sha": "9a91a195ad8c20dd6d090a86aae99a4038b88473", "filename": "gcc/testsuite/gcc.dg/ifcvt-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-4.c?ref=ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-fdump-rtl-ce1 -O2\" } */\n+/* { dg-options \"-fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-insns=3\" } */\n /* { dg-skip-if \"Multiple set if-conversion not guaranteed on all subtargets\" { \"arm*-*-* powerpc64le*-*-*\" } {\"*\"} { \"\" } }  */\n \n int"}, {"sha": "0b73e54473ae066d9771a087e30295e6fc7d6c29", "filename": "gcc/testsuite/gcc.dg/ifcvt-5.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-5.c?ref=ca90b1ed9ac7e9aaacb3ef0eb055d2f594d30493", "patch": "@@ -0,0 +1,17 @@\n+/* Check that multi-insn if-conversion is not done if the override\n+   parameter would not allow it.  */\n+\n+/* { dg-options \"-fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-insns=1\" } */\n+int\n+foo (int x, int y, int a)\n+{\n+  int i = x;\n+  int j = y;\n+  if (x > y)\n+    {\n+      i = a;\n+      j = i;\n+    }\n+  return i * j;\n+}\n+/* { dg-final { scan-rtl-dump \"0 true changes made\" \"ce1\" } } */"}]}