{"sha": "67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdjODYxNzgwZjk0NWNhNzlhOGQ2ZDViZjdjYjhkM2MyMmZjN2Y3NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T09:22:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T09:22:16Z"}, "message": "[multiple changes]\n\n2011-09-02  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-dect.adb, prj-env.adb, prj-nmsc.adb, prj-proc.adb, prj-tree.adb,\n\tprj.adb, prj.ads, sem_ch5.adb: Minor reformatting.\n\n2011-09-02  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_attr.adb (Analyze_Attribute, case Unrestriced_Access):\n\tGuard against a prefix that is an N_Has_Entity but has no\n\tassociated entity.\n\n2011-09-02  Yannick Moy  <moy@adacore.com>\n\n\t* lib-xref-alfa.adb (Is_Alfa_Reference): Ignore IN parameters in Alfa\n\treferences.\n\n2011-09-02  Yannick Moy  <moy@adacore.com>\n\n\t* opt.ads (Warn_On_Suspicious_Contract): New warning flag.\n\t* sem_ch3.adb (Analyze_Declarations): Call checker for suspicious\n\tcontracts.\n\t* sem_ch6.adb, sem_ch6.ads (Check_Subprogram_Contract): New\n\tprocedure looking for suspicious postconditions.\n\t* usage.adb (Usage): New options -gnatw.t and -gnatw.T.\n\t* warnsw.adb (Set_Dot_Warning_Switch): Take into account new\n\toptions -gnatw.t and -gnatw.T.\n\nFrom-SVN: r178448", "tree": {"sha": "4459b4c7195e54733ab438adc02e57d4a9026f80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4459b4c7195e54733ab438adc02e57d4a9026f80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/comments", "author": null, "committer": null, "parents": [{"sha": "5415acbd64a2d286fae516cad1733bbf977a9a1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5415acbd64a2d286fae516cad1733bbf977a9a1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5415acbd64a2d286fae516cad1733bbf977a9a1f"}], "stats": {"total": 372, "additions": 318, "deletions": 54}, "files": [{"sha": "6abbf3449801a3d746ace278176ebe3cf60c7106", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -1,3 +1,30 @@\n+2011-09-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-dect.adb, prj-env.adb, prj-nmsc.adb, prj-proc.adb, prj-tree.adb,\n+\tprj.adb, prj.ads, sem_ch5.adb: Minor reformatting.\n+\n+2011-09-02  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute, case Unrestriced_Access):\n+\tGuard against a prefix that is an N_Has_Entity but has no\n+\tassociated entity.\n+\n+2011-09-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* lib-xref-alfa.adb (Is_Alfa_Reference): Ignore IN parameters in Alfa\n+\treferences.\n+\n+2011-09-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* opt.ads (Warn_On_Suspicious_Contract): New warning flag.\n+\t* sem_ch3.adb (Analyze_Declarations): Call checker for suspicious\n+\tcontracts.\n+\t* sem_ch6.adb, sem_ch6.ads (Check_Subprogram_Contract): New\n+\tprocedure looking for suspicious postconditions.\n+\t* usage.adb (Usage): New options -gnatw.t and -gnatw.T.\n+\t* warnsw.adb (Set_Dot_Warning_Switch): Take into account new\n+\toptions -gnatw.t and -gnatw.T.\n+\n 2011-09-02  Pascal Obry  <obry@adacore.com>\n \n \t* prj.adb: Minor code refactoring. Move check for null project in"}, {"sha": "ce9546327f3a1156f555e26309671cb16b02e858", "filename": "gcc/ada/lib-xref-alfa.adb", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Flib-xref-alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Flib-xref-alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-alfa.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -608,11 +608,20 @@ package body Alfa is\n             --  On non-callable entities, the only references of interest are\n             --  reads and writes.\n \n-            if Ekind (E) in Overloadable_Kind then\n-               return Typ = 's';\n-            else\n-               return Typ = 'r' or else Typ = 'm';\n-            end if;\n+            case Ekind (E) is\n+               when Overloadable_Kind =>\n+                  return Typ = 's';\n+\n+               --  References to IN parameters are not considered in Alfa\n+               --  section, as these will be translated as constants in the\n+               --  intermediate language for formal verification.\n+\n+               when E_In_Parameter =>\n+                  return False;\n+\n+               when others =>\n+                  return Typ = 'r' or else Typ = 'm';\n+            end case;\n          end Is_Alfa_Reference;\n \n          -------------------"}, {"sha": "9e4ee4a7f11d75fc8808685057f90816360570c6", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -1550,6 +1550,12 @@ package Opt is\n    --  clauses that are affected by non-standard bit-order. The default is\n    --  that this warning is enabled.\n \n+   Warn_On_Suspicious_Contract : Boolean := True;\n+   --  GNAT\n+   --  Set to True to generate warnings for suspicious contracts expressed as\n+   --  pragmas or aspects precondition and postcondition. The default is that\n+   --  this warning is enabled.\n+\n    Warn_On_Suspicious_Modulus_Value : Boolean := True;\n    --  GNAT\n    --  Set to True to generate warnings for suspicious modulus values. The"}, {"sha": "b1a1738412cc17dd11ae7e3816fa9c491b5b296e", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -23,10 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with GNAT.Case_Util;        use GNAT.Case_Util;\n-with GNAT.Spelling_Checker; use GNAT.Spelling_Checker;\n-with GNAT.Strings;\n-\n with Err_Vars;    use Err_Vars;\n with Opt;         use Opt;\n with Prj.Attr;    use Prj.Attr;\n@@ -37,32 +33,34 @@ with Prj.Tree;    use Prj.Tree;\n with Snames;\n with Uintp;       use Uintp;\n \n-package body Prj.Dect is\n+with GNAT;                  use GNAT;\n+with GNAT.Case_Util;        use GNAT.Case_Util;\n+with GNAT.Spelling_Checker; use GNAT.Spelling_Checker;\n+with GNAT.Strings;\n \n-   use GNAT;\n+package body Prj.Dect is\n \n    type Zone is (In_Project, In_Package, In_Case_Construction);\n-   --  Used to indicate if we are parsing a package (In_Package),\n-   --  a case construction (In_Case_Construction) or none of those two\n-   --  (In_Project).\n+   --  Used to indicate if we are parsing a package (In_Package), a case\n+   --  construction (In_Case_Construction) or none of those two (In_Project).\n \n    procedure Rename_Obsolescent_Attributes\n      (In_Tree         : Project_Node_Tree_Ref;\n       Attribute       : Project_Node_Id;\n       Current_Package : Project_Node_Id);\n-   --  Rename obsolescent attributes in the tree.\n-   --  When the attribute has been renamed since its initial introduction in\n-   --  the design of projects, we replace the old name in the tree with the\n-   --  new name, so that the code does not have to check both names forever.\n+   --  Rename obsolescent attributes in the tree. When the attribute has been\n+   --  renamed since its initial introduction in the design of projects, we\n+   --  replace the old name in the tree with the new name, so that the code\n+   --  does not have to check both names forever.\n \n    procedure Check_Attribute_Allowed\n      (In_Tree   : Project_Node_Tree_Ref;\n       Project   : Project_Node_Id;\n       Attribute : Project_Node_Id;\n       Flags     : Processing_Flags);\n-   --  Check whether the attribute is valid in this project.\n-   --  In particular, depending on the type of project (qualifier), some\n-   --  attributes might be disabled.\n+   --  Check whether the attribute is valid in this project. In particular,\n+   --  depending on the type of project (qualifier), some attributes might\n+   --  be disabled.\n \n    procedure Check_Package_Allowed\n      (In_Tree         : Project_Node_Tree_Ref;\n@@ -244,7 +242,7 @@ package body Prj.Dect is\n    begin\n       case Qualif is\n          when Aggregate | Aggregate_Library =>\n-            if Name = Snames.Name_Languages\n+            if        Name = Snames.Name_Languages\n               or else Name = Snames.Name_Source_Files\n               or else Name = Snames.Name_Source_List_File\n               or else Name = Snames.Name_Locally_Removed_Files"}, {"sha": "9f29313a0b6e8c3fce8117924d718bec8a73f702", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -778,10 +778,9 @@ package body Prj.Env is\n       In_Tree  : Project_Tree_Ref;\n       Name     : out Path_Name_Type)\n    is\n-      File   : File_Descriptor := Invalid_FD;\n-\n-      Buffer      : String_Access := new String (1 .. Buffer_Initial);\n-      Buffer_Last : Natural := 0;\n+      File        : File_Descriptor := Invalid_FD;\n+      Buffer      : String_Access   := new String (1 .. Buffer_Initial);\n+      Buffer_Last : Natural         := 0;\n \n       procedure Put_Name_Buffer;\n       --  Put the line contained in the Name_Buffer in the global buffer\n@@ -833,7 +832,7 @@ package body Prj.Env is\n             if Source.Replaced_By = No_Source\n               and then Source.Path.Name /= No_Path\n               and then (Source.Language.Config.Kind = File_Based\n-                        or else Source.Unit /= No_Unit_Index)\n+                         or else Source.Unit /= No_Unit_Index)\n             then\n                if Source.Unit /= No_Unit_Index then\n \n@@ -1141,7 +1140,7 @@ package body Prj.Env is\n \n             if not Main_Project_Only\n               or else (Unit.File_Names (Spec) /= null\n-                       and then Unit.File_Names (Spec).Project = The_Project)\n+                        and then Unit.File_Names (Spec).Project = The_Project)\n             then\n                declare\n                   Current_Name : File_Name_Type;\n@@ -1668,7 +1667,7 @@ package body Prj.Env is\n       --  For the object path, we make a distinction depending on\n       --  Including_Libraries.\n \n-      if Objects_Path and then Including_Libraries then\n+      if Objects_Path and Including_Libraries then\n          if Project.Objects_Path_File_With_Libs = No_Path then\n             Object_Path_Table.Init (Object_Paths);\n             Process_Object_Dirs := True;\n@@ -1688,7 +1687,7 @@ package body Prj.Env is\n       --  If there is something to do, set Seen to False for all projects,\n       --  then call the recursive procedure Add for Project.\n \n-      if Process_Source_Dirs or else Process_Object_Dirs then\n+      if Process_Source_Dirs or Process_Object_Dirs then\n          For_All_Projects (Project, In_Tree, Dummy);\n       end if;\n "}, {"sha": "2c8d96a171eb06406fc862fa7d128920af032f73", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -36,8 +36,9 @@ with Sinput.P;\n with Snames;   use Snames;\n with Targparm; use Targparm;\n \n+with Ada;                        use Ada;\n with Ada.Characters.Handling;    use Ada.Characters.Handling;\n-with Ada.Directories;            use Ada, Ada.Directories;\n+with Ada.Directories;            use Ada.Directories;\n with Ada.Strings;                use Ada.Strings;\n with Ada.Strings.Fixed;          use Ada.Strings.Fixed;\n with Ada.Strings.Maps.Constants; use Ada.Strings.Maps.Constants;\n@@ -5194,13 +5195,13 @@ package body Prj.Nmsc is\n \n       No_Sources : constant Boolean :=\n                      ((not Source_Files.Default\n-                       and then Source_Files.Values = Nil_String)\n+                        and then Source_Files.Values = Nil_String)\n                       or else\n                         (not Source_Dirs.Default\n-                         and then Source_Dirs.Values = Nil_String)\n+                          and then Source_Dirs.Values = Nil_String)\n                       or else\n                         (not Languages.Default\n-                         and then Languages.Values = Nil_String))\n+                          and then Languages.Values = Nil_String))\n                      and then Project.Extends = No_Project;\n \n    --  Start of processing for Get_Directories\n@@ -5248,6 +5249,7 @@ package body Prj.Nmsc is\n                Externally_Built => Project.Externally_Built);\n \n             if not Dir_Exists and then not Project.Externally_Built then\n+\n                --  The object directory does not exist, report an error if the\n                --  project is not externally built.\n \n@@ -7270,9 +7272,9 @@ package body Prj.Nmsc is\n \n       --  Loop through subdirectories\n \n-      Source_Dir := Project.Project.Source_Dirs;\n       Src_Dir_Rank := Project.Project.Source_Dir_Ranks;\n \n+      Source_Dir := Project.Project.Source_Dirs;\n       while Source_Dir /= Nil_String loop\n          begin\n             Num_Nod := Shared.Number_Lists.Table (Src_Dir_Rank);\n@@ -7322,7 +7324,7 @@ package body Prj.Nmsc is\n \n                      if not Opt.Follow_Links_For_Files\n                        or else Is_Regular_File\n-                         (Display_Source_Directory & Name (1 .. Last))\n+                                 (Display_Source_Directory & Name (1 .. Last))\n                      then\n                         Name_Len := Last;\n                         Name_Buffer (1 .. Name_Len) := Name (1 .. Last);"}, {"sha": "269bc4552db583fc814e96e4fe2626542c5eafd4", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -1364,7 +1364,7 @@ package body Prj.Proc is\n          Reset_Tree             => Reset_Tree);\n \n       if Project_Qualifier_Of\n-        (From_Project_Node, From_Project_Node_Tree) /= Configuration\n+           (From_Project_Node, From_Project_Node_Tree) /= Configuration\n       then\n          Process_Project_Tree_Phase_2\n            (In_Tree                => In_Tree,\n@@ -1566,8 +1566,8 @@ package body Prj.Proc is\n                      --  declaration.\n \n                      Copy_Package_Declarations\n-                       (From       =>\n-                          Shared.Packages.Table (Renamed_Package).Decl,\n+                       (From       => Shared.Packages.Table\n+                                        (Renamed_Package).Decl,\n                         To         => Shared.Packages.Table (New_Pkg).Decl,\n                         New_Loc    => Location_Of (Current_Item, Node_Tree),\n                         Restricted => False,\n@@ -2577,6 +2577,7 @@ package body Prj.Proc is\n          Loaded_Project : Prj.Tree.Project_Node_Id;\n          Success        : Boolean := True;\n          Tree           : Project_Tree_Ref;\n+\n       begin\n          if Project.Qualifier not in Aggregate_Project then\n             return;\n@@ -2711,6 +2712,7 @@ package body Prj.Proc is\n          end loop;\n \n          if Attribute1 = No_Variable or else Attr_Value1.Value.Default then\n+\n             --  Attribute Languages is not declared in the extending project.\n             --  Check if it is declared in the project being extended.\n \n@@ -2754,8 +2756,8 @@ package body Prj.Proc is\n             Imported         : Project_List;\n             Declaration_Node : Project_Node_Id  := Empty_Node;\n \n-            Name      : constant Name_Id :=\n-                          Name_Of (From_Project_Node, From_Project_Node_Tree);\n+            Name : constant Name_Id :=\n+                     Name_Of (From_Project_Node, From_Project_Node_Tree);\n \n             Name_Node : constant Tree_Private_Part.Project_Name_And_Node :=\n                           Tree_Private_Part.Projects_Htable.Get\n@@ -2837,7 +2839,9 @@ package body Prj.Proc is\n                Initialize_And_Copy (Child_Env, Copy_From => Env);\n \n             elsif Project.Qualifier = Aggregate_Library then\n+\n                --  The child environment is the same as the current one\n+\n                Child_Env := Env;\n \n             else\n@@ -2888,9 +2892,9 @@ package body Prj.Proc is\n \n                if Project.Qualifier = Aggregate_Library then\n                   declare\n-                     L : Aggregated_Project_List :=\n-                           Project.Aggregated_Projects;\n+                     L : Aggregated_Project_List;\n                   begin\n+                     L := Project.Aggregated_Projects;\n                      while L /= null loop\n                         Project.Imported_Projects :=\n                           new Project_List_Element'"}, {"sha": "8072c9daae4e46451811d77a682016719010c576", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -104,6 +104,7 @@ package body Prj.Tree is\n       Zone := In_Tree.Project_Nodes.Table (To).Comments;\n \n       if No (Zone) then\n+\n          --  Create new N_Comment_Zones node\n \n          Project_Node_Table.Increment_Last (In_Tree.Project_Nodes);"}, {"sha": "7795cc9c50551d5f001502a6cfaae02ba196e7ad", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -393,9 +393,7 @@ package body Prj is\n       if Iter.Language = No_Language_Index then\n          if Iter.All_Projects then\n             Iter.Project := Iter.Project.Next;\n-\n             Project_Changed (Iter);\n-\n          else\n             Iter.Project := null;\n          end if;\n@@ -582,7 +580,6 @@ package body Prj is\n \n       begin\n          Iterator := For_Each_Source (In_Tree => Tree, Project => Proj);\n-\n          while Element (Iterator) /= No_Source loop\n             if Element (Iterator).File = Base_Name\n               and then (Index = 0 or else Element (Iterator).Index = Index)\n@@ -1662,6 +1659,7 @@ package body Prj is\n       Root_Tree    : Project_Tree_Ref)\n    is\n       Agg : Aggregated_Project_List;\n+\n    begin\n       Action (Root_Project, Root_Tree);\n \n@@ -1674,6 +1672,8 @@ package body Prj is\n       end if;\n    end For_Project_And_Aggregated;\n \n+--  Package initialization for Prj\n+\n begin\n    --  Make sure that the standard config and user project file extensions are\n    --  compatible with canonical case file naming."}, {"sha": "e88455dec3c6c08d0cc047144bbb97f2f29470c6", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -77,8 +77,8 @@ package Prj is\n    --    Aggregate_Library:    aggregate library project is ...\n    --    Configuration:        configuration project is ...\n \n-   subtype Aggregate_Project\n-     is Project_Qualifier range Aggregate .. Aggregate_Library;\n+   subtype Aggregate_Project is\n+     Project_Qualifier range Aggregate .. Aggregate_Library;\n \n    All_Packages : constant String_List_Access;\n    --  Default value of parameter Packages of procedures Parse, in Prj.Pars and"}, {"sha": "480e9a62c8e0762cc760cb8663cc6b5f35734707", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -4942,7 +4942,10 @@ package body Sem_Attr is\n          if Comes_From_Source (N) then\n             Check_Restriction (No_Unchecked_Access, N);\n \n-            if Nkind (P) in N_Has_Entity and then Is_Object (Entity (P)) then\n+            if Nkind (P) in N_Has_Entity\n+                 and then Present (Entity (P))\n+                 and then Is_Object (Entity (P))\n+            then\n                Check_Restriction (No_Implicit_Aliasing, N);\n             end if;\n          end if;"}, {"sha": "4102bea43784be8732531503bffe7687fc6425e2", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -2192,6 +2192,8 @@ package body Sem_Ch3 is\n                   Prag := Next_Pragma (Prag);\n                end loop;\n \n+               Check_Subprogram_Contract (Sent);\n+\n                Prag := Spec_TC_List (Contract (Sent));\n                while Present (Prag) loop\n                   Analyze_TC_In_Decl_Part (Prag, Sent);"}, {"sha": "5a2d2b372165e920d70355aae079ed60033ea27d", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -2261,9 +2261,9 @@ package body Sem_Ch5 is\n          Analyze (Subt);\n       end if;\n \n-      --  If domain of iteration is an expression, create a declaration for it,\n-      --  so that finalization actions are introduced outside of the loop.\n-      --  The declaration must be a renaming because the  body of the loop may\n+      --  If domain of iteration is an expression, create a declaration for\n+      --  it, so that finalization actions are introduced outside of the loop.\n+      --  The declaration must be a renaming because the body of the loop may\n       --  assign to elements.\n \n       if not Is_Entity_Name (Iter_Name) then"}, {"sha": "648cdcb2e508722499e045161a1e7ea37e6c730c", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -5454,6 +5454,207 @@ package body Sem_Ch6 is\n       end if;\n    end Check_Returns;\n \n+   -------------------------------\n+   -- Check_Subprogram_Contract --\n+   -------------------------------\n+\n+   procedure Check_Subprogram_Contract (Spec_Id : Entity_Id) is\n+\n+--        Inherited : constant Subprogram_List :=\n+--                      Inherited_Subprograms (Spec_Id);\n+      --  List of subprograms inherited by this subprogram\n+\n+      Last_Postcondition         : Node_Id := Empty;\n+      --  Last postcondition on the subprogram, or else Empty if either no\n+      --  postcondition or only inherited postconditions.\n+\n+      Attribute_Result_Mentioned : Boolean := False;\n+      --  Whether attribute 'Result is mentioned in a postcondition\n+\n+      Post_State_Mentioned       : Boolean := False;\n+      --  Whether some expression mentioned in a postcondition can have a\n+      --  different value in the post-state than in the pre-state.\n+\n+      function Check_Attr_Result (N : Node_Id) return Traverse_Result;\n+      --  Check whether N is a reference to the attribute 'Result, and if so\n+      --  set Attribute_Result_Mentioned and return Abandon. Otherwise return\n+      --  OK.\n+\n+      function Check_Post_State (N : Node_Id) return Traverse_Result;\n+      --  Check whether the value of evaluating N can be different in the\n+      --  post-state, compared to the same evaluation in the pre-state, and\n+      --  if so set Post_State_Mentioned and return Abandon. Return Skip on\n+      --  reference to attribute 'Old, in order to ignore its prefix, which\n+      --  is precisely evaluated in the pre-state. Otherwise return OK.\n+\n+      procedure Process_Post_Conditions\n+        (Spec  : Node_Id;\n+         Class : Boolean);\n+      --  This processes the Spec_PPC_List from Spec, processing any\n+      --  postconditions from the list. If Class is True, then only\n+      --  postconditions marked with Class_Present are considered. The\n+      --  caller has checked that Spec_PPC_List is non-Empty.\n+\n+      function Find_Attribute_Result is new Traverse_Func (Check_Attr_Result);\n+\n+      function Find_Post_State is new Traverse_Func (Check_Post_State);\n+\n+      -----------------------\n+      -- Check_Attr_Result --\n+      -----------------------\n+\n+      function Check_Attr_Result (N : Node_Id) return Traverse_Result is\n+      begin\n+         if Nkind (N) = N_Attribute_Reference\n+           and then\n+             Get_Attribute_Id (Attribute_Name (N)) = Attribute_Result\n+         then\n+            Attribute_Result_Mentioned := True;\n+            return Abandon;\n+         else\n+            return OK;\n+         end if;\n+      end Check_Attr_Result;\n+\n+      ----------------------\n+      -- Check_Post_State --\n+      ----------------------\n+\n+      function Check_Post_State (N : Node_Id) return Traverse_Result is\n+         Found : Boolean := False;\n+\n+      begin\n+         case Nkind (N) is\n+            when N_Function_Call        |\n+                 N_Explicit_Dereference =>\n+               Found := True;\n+\n+            when N_Identifier    |\n+                 N_Expanded_Name =>\n+               declare\n+                  E : constant Entity_Id := Entity (N);\n+               begin\n+                  if Is_Entity_Name (N)\n+                    and then Present (E)\n+                    and then Ekind (E) in Assignable_Kind\n+                  then\n+                     Found := True;\n+                  end if;\n+               end;\n+\n+            when N_Attribute_Reference =>\n+               case Get_Attribute_Id (Attribute_Name (N)) is\n+                  when Attribute_Old =>\n+                     return Skip;\n+                  when Attribute_Result =>\n+                     Found := True;\n+                  when others =>\n+                     null;\n+               end case;\n+\n+            when others =>\n+               null;\n+         end case;\n+\n+         if Found then\n+            Post_State_Mentioned := True;\n+            return Abandon;\n+         else\n+            return OK;\n+         end if;\n+      end Check_Post_State;\n+\n+      -----------------------------\n+      -- Process_Post_Conditions --\n+      -----------------------------\n+\n+      procedure Process_Post_Conditions\n+        (Spec  : Node_Id;\n+         Class : Boolean)\n+      is\n+         Prag    : Node_Id;\n+         Arg     : Node_Id;\n+         Ignored : Traverse_Final_Result;\n+         pragma Unreferenced (Ignored);\n+\n+      begin\n+         Prag := Spec_PPC_List (Contract (Spec));\n+\n+         loop\n+            Arg := First (Pragma_Argument_Associations (Prag));\n+\n+            --  Since pre- and postconditions are listed in reverse order, the\n+            --  first postcondition in the list is the last in the source.\n+\n+            if Pragma_Name (Prag) = Name_Postcondition\n+              and then not Class\n+              and then No (Last_Postcondition)\n+            then\n+               Last_Postcondition := Prag;\n+            end if;\n+\n+            --  For functions, look for presence of 'Result in postcondition\n+\n+            if Ekind_In (Spec_Id, E_Function, E_Generic_Function) then\n+               Ignored := Find_Attribute_Result (Arg);\n+            end if;\n+\n+            --  For each individual non-inherited postcondition, look for\n+            --  presence of an expression that could be evaluated differently\n+            --  in post-state.\n+\n+            if Pragma_Name (Prag) = Name_Postcondition\n+              and then not Class\n+            then\n+               Post_State_Mentioned := False;\n+               Ignored              := Find_Post_State (Arg);\n+\n+               if not Post_State_Mentioned then\n+                  Error_Msg_N (\"?postcondition only refers to pre-state\",\n+                               Prag);\n+               end if;\n+            end if;\n+\n+            Prag := Next_Pragma (Prag);\n+            exit when No (Prag);\n+         end loop;\n+      end Process_Post_Conditions;\n+\n+   --  Start of processing for Check_Subprogram_Contract\n+\n+   begin\n+      if not Warn_On_Suspicious_Contract then\n+         return;\n+      end if;\n+\n+      if Present (Spec_PPC_List (Contract (Spec_Id))) then\n+         Process_Post_Conditions (Spec_Id, Class => False);\n+      end if;\n+\n+      --  Process inherited postconditions\n+\n+      --  Code is currently commented out as, in some cases, it causes crashes\n+      --  because Direct_Primitive_Operations is not available for a private\n+      --  type. This may cause more warnings to be issued than necessary.\n+\n+--        for J in Inherited'Range loop\n+--           if Present (Spec_PPC_List (Contract (Inherited (J)))) then\n+--              Process_Post_Conditions (Inherited (J), Class => True);\n+--           end if;\n+--        end loop;\n+\n+      --  Issue warning for functions whose postcondition does not mention\n+      --  'Result after all postconditions have been processed.\n+\n+      if Ekind_In (Spec_Id, E_Function, E_Generic_Function)\n+        and then Present (Last_Postcondition)\n+        and then not Attribute_Result_Mentioned\n+      then\n+         Error_Msg_N (\"?function postcondition does not mention result\",\n+                      Last_Postcondition);\n+      end if;\n+   end Check_Subprogram_Contract;\n+\n    ----------------------------\n    -- Check_Subprogram_Order --\n    ----------------------------"}, {"sha": "1ca6f3bebdbc20e315aeee5521c3754263f5f7ed", "filename": "gcc/ada/sem_ch6.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fsem_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fsem_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.ads?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -113,6 +113,10 @@ package Sem_Ch6 is\n    --  type-conformant subprogram that becomes hidden by the new subprogram.\n    --  Is_Primitive indicates whether the subprogram is primitive.\n \n+   procedure Check_Subprogram_Contract (Spec_Id : Entity_Id);\n+   --  Spec_Id is the spec entity for a subprogram. This routine issues\n+   --  warnings on suspicious contracts if Warn_On_Suspicious_Contract is set.\n+\n    procedure Check_Subtype_Conformant\n      (New_Id                   : Entity_Id;\n       Old_Id                   : Entity_Id;"}, {"sha": "1d79f66a0a7da44e27baeefa12024a3775eb9e07", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -484,6 +484,8 @@ begin\n    Write_Line (\"        .S*  turn off warnings for overridden size clause\");\n    Write_Line (\"        t    turn on warnings for tracking deleted code\");\n    Write_Line (\"        T*   turn off warnings for tracking deleted code\");\n+   Write_Line (\"        .t*  turn on warnings for suspicious contract\");\n+   Write_Line (\"        .T   turn off warnings for suspicious contract\");\n    Write_Line (\"        u+   turn on warnings for unused entity\");\n    Write_Line (\"        U*   turn off warnings for unused entity\");\n    Write_Line (\"        .u   turn on warnings for unordered enumeration\");"}, {"sha": "96a8e8f5df6fc4b1e4e81a661ed64ac62ab7c0ef", "filename": "gcc/ada/warnsw.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fwarnsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74/gcc%2Fada%2Fwarnsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.adb?ref=67c861780f945ca79a8d6d5bf7cb8d3c22fc7f74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -143,6 +143,12 @@ package body Warnsw is\n          when 'S' =>\n             Warn_On_Overridden_Size             := False;\n \n+         when 't' =>\n+            Warn_On_Suspicious_Contract         := True;\n+\n+         when 'T' =>\n+            Warn_On_Suspicious_Contract         := False;\n+\n          when 'u' =>\n             Warn_On_Unordered_Enumeration_Type  := True;\n "}]}