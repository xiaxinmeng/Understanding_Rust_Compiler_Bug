{"sha": "9fc2854deca262d8a469dea2d0a32fc6e9572c9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZjMjg1NGRlY2EyNjJkOGE0NjlkZWEyZDBhMzJmYzZlOTU3MmM5ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-22T14:44:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-22T14:44:16Z"}, "message": "[multiple changes]\n\n2010-10-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* uname.adb (Get_Unit_Name.Add_Node_Name): If encountering an error\n\tnode in the unit name, propagate Program_Error to guard against\n\tcascaded errors.\n\n2010-10-22  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch8.adb (Find_Selected_Component): Do not generate a subtype for\n\tselected components of dispatch table wrappers.\n\n2010-10-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch9.adb (Make_Initialize_Protection): A protected type that\n\timplements an interface must be treated as if it has entries, to\n\tsupport dispatching select statements.\n\n2010-10-22  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_aggr.adb, sem_ch3.adb: Minor reformatting.\n\nFrom-SVN: r165831", "tree": {"sha": "51ef9fba1b2786bfc48f6f17f974ddd1c84a951c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51ef9fba1b2786bfc48f6f17f974ddd1c84a951c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fc2854deca262d8a469dea2d0a32fc6e9572c9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc2854deca262d8a469dea2d0a32fc6e9572c9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fc2854deca262d8a469dea2d0a32fc6e9572c9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/comments", "author": null, "committer": null, "parents": [{"sha": "f915704fd6b530a9712bfe9e8625e0374f2a4e95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f915704fd6b530a9712bfe9e8625e0374f2a4e95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f915704fd6b530a9712bfe9e8625e0374f2a4e95"}], "stats": {"total": 71, "additions": 60, "deletions": 11}, "files": [{"sha": "52be441e1794c1c244e5f6ec84fc783c59d38d4e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9fc2854deca262d8a469dea2d0a32fc6e9572c9e", "patch": "@@ -1,3 +1,24 @@\n+2010-10-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* uname.adb (Get_Unit_Name.Add_Node_Name): If encountering an error\n+\tnode in the unit name, propagate Program_Error to guard against\n+\tcascaded errors.\n+\n+2010-10-22  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch8.adb (Find_Selected_Component): Do not generate a subtype for\n+\tselected components of dispatch table wrappers.\n+\n+2010-10-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch9.adb (Make_Initialize_Protection): A protected type that\n+\timplements an interface must be treated as if it has entries, to\n+\tsupport dispatching select statements.\n+\n+2010-10-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_aggr.adb, sem_ch3.adb: Minor reformatting.\n+\n 2010-10-22  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_aggr.adb (Resolve_Array_Aggregate.Add): If the type of the"}, {"sha": "f9cbec8c775221d3a7829cfc4cf7b779fff86fbc", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=9fc2854deca262d8a469dea2d0a32fc6e9572c9e", "patch": "@@ -12343,6 +12343,11 @@ package body Exp_Ch9 is\n       --  is a pointer to the record generated by the compiler to represent\n       --  the protected object.\n \n+      --  A protected type without entries that covers an interface and\n+      --  overrides the abstract routines with protected procedures is\n+      --  considered equivalent to a protected type with entries in the\n+      --  context of dispatching select statements.\n+\n       if Has_Entry\n         or else Has_Interrupt_Handler (Ptyp)\n         or else Has_Attach_Handler (Ptyp)\n@@ -12368,7 +12373,10 @@ package body Exp_Ch9 is\n                   raise Program_Error;\n             end case;\n \n-            if Has_Entry or else not Restricted then\n+            if Has_Entry\n+              or else not Restricted\n+              or else Has_Interfaces (Protect_Rec)\n+            then\n                Append_To (Args,\n                  Make_Attribute_Reference (Loc,\n                    Prefix => Make_Identifier (Loc, Name_uInit),"}, {"sha": "e66d15b3a5e86e1f9194f3bcf64cdcbe1957d45b", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=9fc2854deca262d8a469dea2d0a32fc6e9572c9e", "patch": "@@ -892,7 +892,7 @@ package body Sem_Aggr is\n \n    procedure Resolve_Aggregate (N : Node_Id; Typ : Entity_Id) is\n       Loc   : constant Source_Ptr := Sloc (N);\n-      Pkind : constant Node_Kind := Nkind (Parent (N));\n+      Pkind : constant Node_Kind  := Nkind (Parent (N));\n \n       Aggr_Subtyp : Entity_Id;\n       --  The actual aggregate subtype. This is not necessarily the same as Typ"}, {"sha": "ddbb77f1a3a3b10ffb9f95eafc79203e213a186f", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=9fc2854deca262d8a469dea2d0a32fc6e9572c9e", "patch": "@@ -5035,9 +5035,9 @@ package body Sem_Ch3 is\n          --  The new type has fewer discriminants, so we need to create a new\n          --  corresponding record, which is derived from the corresponding\n          --  record of the parent, and has a stored constraint that captures\n-         --  the values of the discriminant constraints.\n-         --  The corresponding record is needed only if expander is active\n-         --  and code generation is enabled.\n+         --  the values of the discriminant constraints. The corresponding\n+         --  record is needed only if expander is active and code generation is\n+         --  enabled.\n \n          --  The type declaration for the derived corresponding record has the\n          --  same discriminant part and constraints as the current declaration."}, {"sha": "81c65087a3bad9b90da9030c1052d447975c591e", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=9fc2854deca262d8a469dea2d0a32fc6e9572c9e", "patch": "@@ -5368,9 +5368,29 @@ package body Sem_Ch8 is\n                  and then (not Is_Entity_Name (P)\n                             or else Chars (Entity (P)) /= Name_uInit)\n                then\n-                  C_Etype :=\n-                    Build_Actual_Subtype_Of_Component (\n-                      Etype (Selector), N);\n+                  --  Do not build the subtype when referencing components of\n+                  --  dispatch table wrappers. Required to avoid generating\n+                  --  elaboration code with HI runtimes.\n+\n+                  if RTU_Loaded (Ada_Tags)\n+                    and then RTE_Available (RE_Dispatch_Table_Wrapper)\n+                    and then Scope (Selector) = RTE (RE_Dispatch_Table_Wrapper)\n+                  then\n+                     C_Etype := Empty;\n+\n+                  elsif RTU_Loaded (Ada_Tags)\n+                    and then RTE_Available (RE_No_Dispatch_Table_Wrapper)\n+                    and then Scope (Selector)\n+                               = RTE (RE_No_Dispatch_Table_Wrapper)\n+                  then\n+                     C_Etype := Empty;\n+\n+                  else\n+                     C_Etype :=\n+                       Build_Actual_Subtype_Of_Component (\n+                         Etype (Selector), N);\n+                  end if;\n+\n                else\n                   C_Etype := Empty;\n                end if;"}, {"sha": "8ddc5a6c01d9d233baff8b6e5bcd4c81bcc74644", "filename": "gcc/ada/uname.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/gcc%2Fada%2Funame.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc2854deca262d8a469dea2d0a32fc6e9572c9e/gcc%2Fada%2Funame.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Funame.adb?ref=9fc2854deca262d8a469dea2d0a32fc6e9572c9e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009  Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -225,10 +225,10 @@ package body Uname is\n          Kind : constant Node_Kind := Nkind (Node);\n \n       begin\n-         --  Just ignore an error node (someone else will give a message)\n+         --  Bail out on error node (guard against parse error)\n \n          if Node = Error then\n-            return;\n+            raise Program_Error;\n \n          --  Otherwise see what kind of node we have\n "}]}