{"sha": "53ffb43a79780b6e33e1816831724c0fb3d2fa32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNmZmI0M2E3OTc4MGI2ZTMzZTE4MTY4MzE3MjRjMGZiM2QyZmEzMg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-05-29T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-05-29T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "15bfd740c08c6bf2f290fff7a5da494fd1e9059d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15bfd740c08c6bf2f290fff7a5da494fd1e9059d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53ffb43a79780b6e33e1816831724c0fb3d2fa32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53ffb43a79780b6e33e1816831724c0fb3d2fa32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53ffb43a79780b6e33e1816831724c0fb3d2fa32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53ffb43a79780b6e33e1816831724c0fb3d2fa32/comments", "author": null, "committer": null, "parents": [{"sha": "3d8d5ddb539a5254c7ef83414377f4c74c7701d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d8d5ddb539a5254c7ef83414377f4c74c7701d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d8d5ddb539a5254c7ef83414377f4c74c7701d4"}], "stats": {"total": 281, "additions": 280, "deletions": 1}, "files": [{"sha": "7bbef9e0356249c47be8cda323ba98c6799d9392", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ffb43a79780b6e33e1816831724c0fb3d2fa32/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ffb43a79780b6e33e1816831724c0fb3d2fa32/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=53ffb43a79780b6e33e1816831724c0fb3d2fa32", "patch": "@@ -1,3 +1,9 @@\n+2020-05-28  Nicolas B\u00e9rtolo  <nicolasbertolo@gmail.com>\n+\n+\t* configure.ac: Don't require --enable-host-shared when building\n+\tfor Mingw.\n+\t* configure: Regenerate.\n+\n 2020-05-18  Jason Merrill  <jason@redhat.com>\n \n \t* configure.ac: Update bootstrap dialect to -std=c++11."}, {"sha": "39c23eeaf0b75af60822e5618b30384b118ba192", "filename": "contrib/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ffb43a79780b6e33e1816831724c0fb3d2fa32/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ffb43a79780b6e33e1816831724c0fb3d2fa32/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=53ffb43a79780b6e33e1816831724c0fb3d2fa32", "patch": "@@ -1,3 +1,23 @@\n+2020-05-28  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* gcc-changelog/git_email.py (GitEmail.__init__): Interpret file\n+\trenamings as a file deletion plus a file addition.\n+\t* gcc-changelog/git_repository.py (parse_git_revisions):\n+\tLikewise.\n+\t* gcc-changelog/test_email.py: New testcase.\n+\t* gcc-changelog/test_patches.txt: New testcase.\n+\n+2020-05-28  Martin Liska  <mliska@suse.cz>\n+\n+\t* check-params-in-docs.py: Update to new format\n+\tof help.  Apply flake8 corrections.\n+\n+2020-05-28  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Support renaming of files.\n+\tOne needs unidiff 0.6.0+.\n+\t* test_mklog.py: Test it.\n+\n 2020-05-27  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-git-customization.sh: Use git-backport.py to drop"}, {"sha": "4fc37369d391e6eb05613e16c64b630f7dd8bf11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53ffb43a79780b6e33e1816831724c0fb3d2fa32", "patch": "@@ -1,3 +1,132 @@\n+2020-05-28  Nicolas B\u00e9rtolo  <nicolasbertolo@gmail.com>\n+\n+\t* Makefile.in: don't look for libiberty in the \"pic\" subdirectory\n+\twhen building for Mingw. Add dependency on xgcc with the proper\n+\textension.\n+\n+2020-05-28  Jeff Law  <law@redhat.com>\n+\n+\t* config/h8300/logical.md (bclrhi_msx): Remove pattern.\n+\n+2020-05-28  Jeff Law  <law@redhat.com>\n+\n+\t* config/h8300/logical.md (HImode H8/SX bit-and splitter): Don't\n+\tmake a nonzero adjustment to the memory offset.\n+\t(b<ior,xor>hi_msx): Turn into a splitter.\n+\n+2020-05-28  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+\n+\t* gimple-ssa-store-merging.c (merged_store_group::can_be_merged_into):\n+\tFix off-by-one error.\n+\n+2020-05-28  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.h (aarch64_frame): Add a comment above\n+\twb_candidate1 and wb_candidate2.\n+\t* config/aarch64/aarch64.c (aarch64_layout_frame): Invalidate\n+\twb_candidate1 and wb_candidate2 if we decided not to use them.\n+\n+2020-05-28  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR testsuite/95361\n+\t* config/aarch64/aarch64.c (aarch64_expand_epilogue): Assert that\n+\twe have at least some CFI operations when using a frame pointer.\n+\tOnly redefine the CFA if we have CFI operations.\n+\n+2020-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_prologue_cost_for_slp): Remove\n+\tcase for !SLP_TREE_VECTYPE.\n+\t(vect_slp_analyze_node_operations): Adjust.\n+\n+2020-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vectorizer.h (_slp_tree::vec_defs): Add.\n+\t(SLP_TREE_VEC_DEFS): Likewise.\n+\t* tree-vect-slp.c (_slp_tree::_slp_tree): Adjust.\n+\t(_slp_tree::~_slp_tree): Likewise.\n+\t(vect_mask_constant_operand_p): Remove unused function.\n+\t(vect_get_constant_vectors): Rename to...\n+\t(vect_create_constant_vectors): ... this.  Take the\n+\tinvariant node as argument and code generate it.  Remove\n+\tdead code, remove temporary asserts.  Pass a NULL stmt_info\n+\tto vect_init_vector.\n+\t(vect_get_slp_defs): Simplify.\n+\t(vect_schedule_slp_instance): Code-generate externals and\n+\tinvariants using vect_create_constant_vectors.\n+\n+2020-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-stmts.c (vect_finish_stmt_generation_1):\n+\tConditionalize stmt_info use, assert the new stmt cannot throw\n+\twhen not specified.\n+\t(vect_finish_stmt_generation): Adjust assert.\n+\n+2020-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/95273\n+\tPR tree-optimization/95356\n+\t* tree-vect-stmts.c (vectorizable_shift): Adjust when and to\n+\twhat we set the vector type of the shift operand SLP node\n+\tagain.\n+\n+2020-05-28  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\t* config/arm/arm.c (mve_vector_mem_operand): Fix unwanted\n+\tfall-throughs.\n+\n+2020-05-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR web/95380\n+\t* doc/invoke.texi: Add missing params, remove max-once-peeled-insns and\n+\trename ipcp-unit-growth to ipa-cp-unit-growth.\n+\n+2020-05-28  Hongtao Liu  <hongtao.liu@intel.com>\n+\n+\t* config/i386/sse.md (*avx512vl_<code>v2div2qi2_store_1): Rename\n+\tfrom *avx512vl_<code>v2div2qi_store and refine memory size of\n+\tthe pattern.\n+\t(*avx512vl_<code>v2div2qi2_mask_store_1): Ditto.\n+\t(*avx512vl_<code><mode>v4qi2_store_1): Ditto.\n+\t(*avx512vl_<code><mode>v4qi2_mask_store_1): Ditto.\n+\t(*avx512vl_<code><mode>v8qi2_store_1): Ditto.\n+\t(*avx512vl_<code><mode>v8qi2_mask_store_1): Ditto.\n+\t(*avx512vl_<code><mode>v4hi2_store_1): Ditto.\n+\t(*avx512vl_<code><mode>v4hi2_mask_store_1): Ditto.\n+\t(*avx512vl_<code>v2div2hi2_store_1): Ditto.\n+\t(*avx512vl_<code>v2div2hi2_mask_store_1): Ditto.\n+\t(*avx512vl_<code>v2div2si2_store_1): Ditto.\n+\t(*avx512vl_<code>v2div2si2_mask_store_1): Ditto.\n+\t(*avx512f_<code>v8div16qi2_store_1): Ditto.\n+\t(*avx512f_<code>v8div16qi2_mask_store_1): Ditto.\n+\t(*avx512vl_<code>v2div2qi2_store_2): New define_insn_and_split.\n+\t(*avx512vl_<code>v2div2qi2_mask_store_2): Ditto.\n+\t(*avx512vl_<code><mode>v4qi2_store_2): Ditto.\n+\t(*avx512vl_<code><mode>v4qi2_mask_store_2): Ditto.\n+\t(*avx512vl_<code><mode>v8qi2_store_2): Ditto.\n+\t(*avx512vl_<code><mode>v8qi2_mask_store_2): Ditto.\n+\t(*avx512vl_<code><mode>v4hi2_store_2): Ditto.\n+\t(*avx512vl_<code><mode>v4hi2_mask_store_2): Ditto.\n+\t(*avx512vl_<code>v2div2hi2_store_2): Ditto.\n+\t(*avx512vl_<code>v2div2hi2_mask_store_2): Ditto.\n+\t(*avx512vl_<code>v2div2si2_store_2): Ditto.\n+\t(*avx512vl_<code>v2div2si2_mask_store_2): Ditto.\n+\t(*avx512f_<code>v8div16qi2_store_2): Ditto.\n+\t(*avx512f_<code>v8div16qi2_mask_store_2): Ditto.\n+\t* config/i386/i386-builtin-types.def: Adjust builtin type.\n+\t* config/i386/i386-expand.c: Ditto.\n+\t* config/i386/i386-builtin.def: Adjust builtin.\n+\t* config/i386/avx512fintrin.h: Ditto.\n+\t* config/i386/avx512vlbwintrin.h: Ditto.\n+\t* config/i386/avx512vlintrin.h: Ditto.\n+\n+2020-05-28  Dong JianQiang  <dongjianqiang2@huawei.com>\n+\n+\tPR gcov-profile/95332\n+\t* gcov-io.c (gcov_var::endian): Move field.\n+\t(from_file): Add IN_GCOV_TOOL check.\n+\t* gcov-io.h (gcov_magic): Ditto.\n+\n 2020-05-28  Max Filippov  <jcmvbkbc@gmail.com>\n \n \t* config/xtensa/xtensa.c (xtensa_delegitimize_address): New"}, {"sha": "065a3b8561060b690fc38f19ee0eb77303caa29d", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=53ffb43a79780b6e33e1816831724c0fb3d2fa32", "patch": "@@ -1 +1 @@\n-20200528\n+20200529"}, {"sha": "7efb6bfc5444555950756bbf6ced03f98d4cf524", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=53ffb43a79780b6e33e1816831724c0fb3d2fa32", "patch": "@@ -1,3 +1,7 @@\n+2020-05-28  Nicolas B\u00e9rtolo  <nicolasbertolo@gmail.com>\n+\n+\t* Make-lang.in: Remove extra slash.\n+\n 2020-05-19  Martin Liska  <mliska@suse.cz>\n \n \t* c-parser.c: Fix typo."}, {"sha": "a83f991d8e23339040e55c7e868d2991b23cffc2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=53ffb43a79780b6e33e1816831724c0fb3d2fa32", "patch": "@@ -1,3 +1,17 @@\n+2020-05-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/95328\n+\t* decl.c (cp_finish_decomp): Call complete_type before checking\n+\tCOMPLETE_TYPE_P.\n+\n+2020-05-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/94926\n+\t* decl.c (cp_finish_decl): Revert r9-297 change.\n+\t(check_static_variable_definition): Likewise.\n+\t* constexpr.c (ensure_literal_type_for_constexpr_object): Likewise.\n+\t* pt.c (instantiate_decl): Return early on type error.\n+\n 2020-05-27  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/95319"}, {"sha": "147196a6738a2bb595fc35bebcab3a3043a102e0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=53ffb43a79780b6e33e1816831724c0fb3d2fa32", "patch": "@@ -1,3 +1,20 @@\n+2020-05-28  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/95373\n+\t* primary.c (is_inquiry_ref): Check validity of inquiry\n+\treferences against selected Fortran standard.\n+\n+2020-05-28  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\t    Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\t    Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/94397\n+\t* match.c (gfc_match_type_spec): New variable ok initialised\n+\tto true. Set ok with the return value of gfc_reduce_init_expr\n+\tcalled only if the expression is not EXPR_CONSTANT and is not\n+\tEXPR_VARIABLE. Add !ok to the check for type not being integer\n+\tor the rank being greater than zero.\n+\n 2020-05-27  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/95090"}, {"sha": "85e30f6390e47e7c7b9f2035b8439d43ac64d250", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=53ffb43a79780b6e33e1816831724c0fb3d2fa32", "patch": "@@ -1,3 +1,25 @@\n+2020-05-28  Nicolas B\u00e9rtolo  <nicolasbertolo@gmail.com>\n+\n+\t* Make-lang.in: Remove extra slash. Build libgccjit.dll and its\n+\timport library in Windows.\n+\t* config-lang.in: Update comment about --enable-host-shared.\n+\t* jit-w32.h: New file.\n+\t* jit-w32.c: New file.\n+\t(print_last_error): New function that prints the error\n+\tstring corresponding to GetLastError().\n+\t(get_TOKEN_USER_current_user): Helper function used for getting\n+\tthe SID belonging to the current user.\n+\t(create_directory_for_current_user): Helper function to create\n+\ta directory with permissions such that only the current user can\n+\taccess it.\n+\t(win_mkdtemp): Create a temporary directory using Windows APIs.\n+\t* jit-playback.c: Do not chmod files in Windows. Use LoadLibrary,\n+\tFreeLibrary and GetProcAddress instead of libdl.\n+\t* jit-result.h, jit-result.c: Introduce result::handle_t to\n+\tabstract over the types used for dynamic library handles.\n+\t* jit-tempdir.c: Do not use mkdtemp() in Windows, use\n+\twin_mkdtemp().\n+\n 2020-05-27  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR jit/95314"}, {"sha": "8111a85230547842e7ef403511e1fbefa3f6f521", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ffb43a79780b6e33e1816831724c0fb3d2fa32/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=53ffb43a79780b6e33e1816831724c0fb3d2fa32", "patch": "@@ -1,3 +1,59 @@\n+2020-05-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/95328\n+\t* g++.dg/cpp1z/decomp53.C: New test.\n+\n+2020-05-28  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/95373\n+\t* gfortran.dg/pr95373_1.f90: New test.\n+\t* gfortran.dg/pr95373_2.f90: New test.\n+\n+2020-05-28  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp1z/pr86648.C: Expect error.\n+\t* g++.dg/cpp1z/static2.C: Expect error.\n+\t* g++.dg/cpp0x/nsdmi16.C: New test.\n+\n+2020-05-28  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/cpp0x/initlist-array12.C: Fix the definition of\n+\tinitializer_list for ilp32 target.\n+\n+2020-05-28  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/ext/tmplattr10.C: Only run in c++11.\n+\n+2020-05-28  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* gcc.dg/builtin-bswap-10.c: Check \"! int128\" instead of ilp32\n+\n+2020-05-28  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\t    Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/94397\n+\t* gfortran.dg/pr94397.F90: New test.\n+\n+2020-05-28  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/shrink_wrap_1.c: New test.\n+\n+2020-05-28  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR testsuite/95361\n+\t* gcc.target/aarch64/sve/pr95361.c: New test.\n+\n+2020-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/95273\n+\tPR tree-optimization/95356\n+\t* gcc.target/i386/pr95356.c: New testcase.\n+\n+2020-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/95363\n+\t* gcc.dg/vect/bb-slp-pr95271.c: Fix on ilp32 targets.\n+\n 2020-05-28  Alexandre Oliva  <oliva@adacore.com>\n \n \t* lib/gcc-defs.exp: Avoid introducing empty arguments between"}, {"sha": "06e7986cdf8a333a14cc83fe1a2c1748a60b2cfa", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ffb43a79780b6e33e1816831724c0fb3d2fa32/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ffb43a79780b6e33e1816831724c0fb3d2fa32/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=53ffb43a79780b6e33e1816831724c0fb3d2fa32", "patch": "@@ -1,3 +1,9 @@\n+2020-05-28  Dong JianQiang  <dongjianqiang2@huawei.com>\n+\n+\tPR gcov-profile/95332\n+\t* libgcov-util.c (read_gcda_file): Call gcov_magic.\n+\t* libgcov.h (gcov_magic): Disable GCC poison.\n+\n 2020-05-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/95212"}, {"sha": "9ab019f5714daa5eb67c6ff193ef26895af38628", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ffb43a79780b6e33e1816831724c0fb3d2fa32/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ffb43a79780b6e33e1816831724c0fb3d2fa32/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=53ffb43a79780b6e33e1816831724c0fb3d2fa32", "patch": "@@ -1,3 +1,8 @@\n+2020-05-28  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR libfortran/95104\n+\t* io/unit.c (unlock_unit): Guard by check for NULL pointer.\n+\n 2020-05-26  Harald Anlauf  <anlauf@gmx.de>\n \t    Steven G. Kargl   <kargl@gcc.gnu.org>\n "}]}