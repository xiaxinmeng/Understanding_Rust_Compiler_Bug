{"sha": "a5fb7ad2d1326974357dee443562bdc5b700e3db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVmYjdhZDJkMTMyNjk3NDM1N2RlZTQ0MzU2MmJkYzViNzAwZTNkYg==", "commit": {"author": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2016-10-08T17:04:35Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh3492@gcc.gnu.org", "date": "2016-10-08T17:04:35Z"}, "message": "diagnostic-core.h (warning_at_rich_loc_n): Declare.\n\n2016-10-08  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n\n\t* diagnostic-core.h (warning_at_rich_loc_n): Declare.\n\t* diagnostic.c (warning_at_rich_loc_n): New function.\n\t(diagnostic_n_impl_richloc): Likewise.\n\t(diagnostic_n_impl): Move most of the function to\n\tdiagnostic_n_impl_richloc and call it.\n\nFrom-SVN: r240891", "tree": {"sha": "40a8e38ed15b8f38742563f23685bc43b2118f81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40a8e38ed15b8f38742563f23685bc43b2118f81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5fb7ad2d1326974357dee443562bdc5b700e3db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fb7ad2d1326974357dee443562bdc5b700e3db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5fb7ad2d1326974357dee443562bdc5b700e3db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fb7ad2d1326974357dee443562bdc5b700e3db/comments", "author": null, "committer": null, "parents": [{"sha": "9c453de707ce714df89fa97e842933934ac3fc42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c453de707ce714df89fa97e842933934ac3fc42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c453de707ce714df89fa97e842933934ac3fc42"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "92ea9a3f39dc2f5f84b5a2bb504190619ec6d8ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fb7ad2d1326974357dee443562bdc5b700e3db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fb7ad2d1326974357dee443562bdc5b700e3db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5fb7ad2d1326974357dee443562bdc5b700e3db", "patch": "@@ -1,3 +1,11 @@\n+2016-10-08  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\t* diagnostic-core.h (warning_at_rich_loc_n): Declare.\n+\t* diagnostic.c (warning_at_rich_loc_n): New function.\n+\t(diagnostic_n_impl_richloc): Likewise.\n+\t(diagnostic_n_impl): Move most of the function to\n+\tdiagnostic_n_impl_richloc and call it.\n+\n 2016-10-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gen-pass-instances.awk: Rewritten."}, {"sha": "4a1766c1ab36565a9222100788ad1059cb7e0ed8", "filename": "gcc/diagnostic-core.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fb7ad2d1326974357dee443562bdc5b700e3db/gcc%2Fdiagnostic-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fb7ad2d1326974357dee443562bdc5b700e3db/gcc%2Fdiagnostic-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-core.h?ref=a5fb7ad2d1326974357dee443562bdc5b700e3db", "patch": "@@ -65,6 +65,9 @@ extern bool warning_at (location_t, int, const char *, ...)\n     ATTRIBUTE_GCC_DIAG(3,4);\n extern bool warning_at_rich_loc (rich_location *, int, const char *, ...)\n     ATTRIBUTE_GCC_DIAG(3,4);\n+extern bool warning_at_rich_loc_n (rich_location *, int, int, const char *,\n+\t\t\t\t  const char *, ...)\n+    ATTRIBUTE_GCC_DIAG(4, 6) ATTRIBUTE_GCC_DIAG(5, 6);\n extern void error (const char *, ...) ATTRIBUTE_GCC_DIAG(1,2);\n extern void error_n (location_t, int, const char *, const char *, ...)\n     ATTRIBUTE_GCC_DIAG(3,5) ATTRIBUTE_GCC_DIAG(4,5);"}, {"sha": "167a1b587664c2d412419d625a7d5a6aee3df852", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 37, "deletions": 7, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fb7ad2d1326974357dee443562bdc5b700e3db/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fb7ad2d1326974357dee443562bdc5b700e3db/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=a5fb7ad2d1326974357dee443562bdc5b700e3db", "patch": "@@ -53,6 +53,10 @@ static bool diagnostic_impl (rich_location *, int, const char *,\n static bool diagnostic_n_impl (location_t, int, int, const char *,\n \t\t\t       const char *, va_list *,\n \t\t\t       diagnostic_t) ATTRIBUTE_GCC_DIAG(5,0);\n+static bool diagnostic_n_impl_richloc (rich_location *, int, int, const char *,\n+\t\t\t\t       const char *, va_list *,\n+\t\t\t\t       diagnostic_t) ATTRIBUTE_GCC_DIAG(5,0);\n+\n static void error_recursion (diagnostic_context *) ATTRIBUTE_NORETURN;\n static void real_abort (void) ATTRIBUTE_NORETURN;\n \n@@ -1064,6 +1068,22 @@ diagnostic_impl (rich_location *richloc, int opt,\n   return report_diagnostic (&diagnostic);\n }\n \n+/* Same as diagonostic_n_impl taking rich_location instead of location_t.  */\n+static bool\n+diagnostic_n_impl_richloc (rich_location *richloc, int opt, int n,\n+\t\t\t   const char *singular_gmsgid,\n+\t\t\t   const char *plural_gmsgid,\n+\t\t\t   va_list *ap, diagnostic_t kind)\n+{\n+  diagnostic_info diagnostic;\n+  diagnostic_set_info_translated (&diagnostic,\n+                                  ngettext (singular_gmsgid, plural_gmsgid, n),\n+                                  ap, richloc, kind);\n+  if (kind == DK_WARNING)\n+    diagnostic.option_index = opt;\n+  return report_diagnostic (&diagnostic);\n+} \n+\n /* Implement inform_n, warning_n, and error_n, as documented and\n    defined below.  */\n static bool\n@@ -1072,14 +1092,9 @@ diagnostic_n_impl (location_t location, int opt, int n,\n \t\t   const char *plural_gmsgid,\n \t\t   va_list *ap, diagnostic_t kind)\n {\n-  diagnostic_info diagnostic;\n   rich_location richloc (line_table, location);\n-  diagnostic_set_info_translated (&diagnostic,\n-                                  ngettext (singular_gmsgid, plural_gmsgid, n),\n-                                  ap, &richloc, kind);\n-  if (kind == DK_WARNING)\n-    diagnostic.option_index = opt;\n-  return report_diagnostic (&diagnostic);\n+  return diagnostic_n_impl_richloc (&richloc, opt, n,\n+\t\t\t\t    singular_gmsgid, plural_gmsgid, ap, kind);\n }\n \n bool\n@@ -1170,6 +1185,21 @@ warning_at_rich_loc (rich_location *richloc, int opt, const char *gmsgid, ...)\n   return ret;\n }\n \n+/* Same as warning_at_rich_loc but for plural variant.  */\n+\n+bool\n+warning_at_rich_loc_n (rich_location *richloc, int opt, int n,\n+\t\t       const char *singular_gmsgid, const char *plural_gmsgid, ...)\n+{\n+  va_list ap;\n+  va_start (ap, plural_gmsgid);\n+  bool ret = diagnostic_n_impl_richloc (richloc, opt, n,\n+\t\t\t\t\tsingular_gmsgid, plural_gmsgid,\n+\t\t\t\t\t&ap, DK_WARNING);\n+  va_end (ap);\n+  return ret;\n+}\n+\n /* A warning at LOCATION.  Use this for code which is correct according to the\n    relevant language specification but is likely to be buggy anyway.\n    Returns true if the warning was printed, false if it was inhibited.  */"}]}