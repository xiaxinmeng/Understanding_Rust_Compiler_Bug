{"sha": "e6f323372efa29091cf052a276c15b9e6ebc00ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZmMzIzMzcyZWZhMjkwOTFjZjA1MmEyNzZjMTViOWU2ZWJjMDBhZQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2020-07-06T06:46:52Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2020-07-06T06:46:52Z"}, "message": "nvptx: Add support for vadd.add and vsub.add instructions.\n\nThe following patch adds support for three-input addition instructions to\nthe nvptx backend.  The PTX ISA's \"vadd.u32.u32.u32.add d, a, b, c\"\ninstruction effectively implements 32-bit d = a+b+c, and the\n\"vsub.u32.u32.u32 d,a,b,c\" instruction that provides 32-bit d = (a-b)+c.\nThe hope is that these mnemonics help ptxas generate the low-level\nhardware's IADD3 instruction.\n\n2020-07-06  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog:\n\t* config/nvptx/nvptx.md (*vadd_addsi4): New instruction.\n\t(*vsub_addsi4): New instruction.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.target/nvptx/vadd_add.c: New test.\n\t* gcc.target/nvptx/vsub_add.c: New test.", "tree": {"sha": "91c29733a9092d427fcb4bd44c9015f68d3e72c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91c29733a9092d427fcb4bd44c9015f68d3e72c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6f323372efa29091cf052a276c15b9e6ebc00ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6f323372efa29091cf052a276c15b9e6ebc00ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6f323372efa29091cf052a276c15b9e6ebc00ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6f323372efa29091cf052a276c15b9e6ebc00ae/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf2bfc7c8013b7fc72ec5f104156fce736c2b3e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf2bfc7c8013b7fc72ec5f104156fce736c2b3e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf2bfc7c8013b7fc72ec5f104156fce736c2b3e1"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "6545b81f948daf84685e4ab66699c79a6da2215b", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f323372efa29091cf052a276c15b9e6ebc00ae/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f323372efa29091cf052a276c15b9e6ebc00ae/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=e6f323372efa29091cf052a276c15b9e6ebc00ae", "patch": "@@ -373,6 +373,22 @@\n   \"\"\n   \"%.\\\\tadd%t0\\\\t%0, %1, %2;\")\n \n+(define_insn \"*vadd_addsi4\"\n+  [(set (match_operand:SI 0 \"nvptx_register_operand\" \"=R\")\n+        (plus:SI (plus:SI (match_operand:SI 1 \"nvptx_register_operand\" \"R\")\n+\t\t\t  (match_operand:SI 2 \"nvptx_register_operand\" \"R\"))\n+\t\t (match_operand:SI 3 \"nvptx_register_operand\" \"R\")))]\n+  \"\"\n+  \"%.\\\\tvadd%t0%t1%t2.add\\\\t%0, %1, %2, %3;\")\n+\n+(define_insn \"*vsub_addsi4\"\n+  [(set (match_operand:SI 0 \"nvptx_register_operand\" \"=R\")\n+        (plus:SI (minus:SI (match_operand:SI 1 \"nvptx_register_operand\" \"R\")\n+\t\t\t   (match_operand:SI 2 \"nvptx_register_operand\" \"R\"))\n+\t\t (match_operand:SI 3 \"nvptx_register_operand\" \"R\")))]\n+  \"\"\n+  \"%.\\\\tvsub%t0%t1%t2.add\\\\t%0, %1, %2, %3;\")\n+\n (define_insn \"sub<mode>3\"\n   [(set (match_operand:HSDIM 0 \"nvptx_register_operand\" \"=R\")\n \t(minus:HSDIM (match_operand:HSDIM 1 \"nvptx_register_operand\" \"R\")"}, {"sha": "dcb23942f36f197a41a69336fd3d6b11cbf5b3c0", "filename": "gcc/testsuite/gcc.target/nvptx/vadd_add.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f323372efa29091cf052a276c15b9e6ebc00ae/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fvadd_add.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f323372efa29091cf052a276c15b9e6ebc00ae/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fvadd_add.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fvadd_add.c?ref=e6f323372efa29091cf052a276c15b9e6ebc00ae", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int foo(int x, int y, int z)\n+{\n+  return x + y + z;\n+}\n+\n+unsigned int bar(unsigned int x, unsigned int y, unsigned int z)\n+{\n+  return x + y + z;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vadd.u32.u32.u32.add\" 2 } } */\n+"}, {"sha": "3f632c9ba8281e72381e518973817f34549282cd", "filename": "gcc/testsuite/gcc.target/nvptx/vsub_add.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f323372efa29091cf052a276c15b9e6ebc00ae/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fvsub_add.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f323372efa29091cf052a276c15b9e6ebc00ae/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fvsub_add.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fvsub_add.c?ref=e6f323372efa29091cf052a276c15b9e6ebc00ae", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int foo(int x, int y, int z)\n+{\n+  return (x - y) + z;\n+}\n+\n+int bar(int x, int y, int z)\n+{\n+  return x + (y - z);\n+}\n+\n+unsigned int ufoo(unsigned int x, unsigned int y, unsigned int z)\n+{\n+  return (x - y) + z;\n+}\n+\n+unsigned int ubar(unsigned int x, unsigned int y, unsigned int z)\n+{\n+  return x + (y - z);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vsub.u32.u32.u32.add\" 4 } } */\n+"}]}