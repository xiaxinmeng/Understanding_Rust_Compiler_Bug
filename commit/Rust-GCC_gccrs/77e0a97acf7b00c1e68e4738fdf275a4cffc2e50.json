{"sha": "77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdlMGE5N2FjZjdiMDBjMWU2OGU0NzM4ZmRmMjc1YTRjZmZjMmU1MA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-08-02T15:59:01Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-08-02T15:59:01Z"}, "message": "[nvptx] Ignore c++ exceptions\n\nThe nvptx port can't support exceptions using sjlj, because ptx does not\nsupport sjlj.  However, default_except_unwind_info still returns UI_SJLJ, even\neven if we configure with --disable-sjlj-exceptions, because UI_SJLJ is the\nfallback option.\n\nThe reason default_except_unwind_info doesn't return UI_DWARF2 is because\nDWARF2_UNWIND_INFO is not defined in defaults.h, because\nINCOMING_RETURN_ADDR_RTX is not defined, because there's no ptx equivalent.\n\nTestcase libgomp.c++/for-15.C currently doesn't compile unless fno-exceptions\nis added because:\n- it tries to generate sjlj exception handling code, and\n- it tries to generate exception tables using label-addressed .byte sequence.\n  Ptx doesn't support generating random data at a label, nor being able to\n  load/write data relative to a label.\n\nThis patch fixes the first problem by using UI_TARGET for nvptx.\n\nThe second problem is worked around by generating all .byte sequences commented\nout.  It would be better to have a narrower workaround, and define\nTARGET_ASM_BYTE_OP to \"error: .byte unsupported \" or some such.\n\nThis patch does not enable exceptions for nvptx, it merely allows c++ programs\nto run correctly if they do no use exception handling.\n\nBuild and reg-tested on x86_64 with nvptx accelerator.\n\n2018-08-02  Tom de Vries  <tdevries@suse.de>\n\n\tPR target/86660\n\t* common/config/nvptx/nvptx-common.c (nvptx_except_unwind_info): New\n\tfunction.  Return UI_TARGET unconditionally.\n\t(TARGET_EXCEPT_UNWIND_INFO): Redefine to nvptx_except_unwind_info.\n\t* config/nvptx/nvptx.c (TARGET_ASM_BYTE_OP): Emit commented out '.byte'.\n\n\t* testsuite/libgomp.oacc-c++/routine-1-auto.C: Remove -fno-exceptions.\n\t* testsuite/libgomp.oacc-c++/routine-1-template-auto.C: Same.\n\t* testsuite/libgomp.oacc-c++/routine-1-template-trailing-return-type.C:\n\tSame.\n\t* testsuite/libgomp.oacc-c++/routine-1-template.C: Same.\n\t* testsuite/libgomp.oacc-c++/routine-1-trailing-return-type.C: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/routine-1.c: Same.\n\nFrom-SVN: r263265", "tree": {"sha": "f979379356a2fb786a69e3e12808e4d7a1454b24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f979379356a2fb786a69e3e12808e4d7a1454b24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "007b11a588a3f8dde791abc3c4185ae1b875f857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/007b11a588a3f8dde791abc3c4185ae1b875f857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/007b11a588a3f8dde791abc3c4185ae1b875f857"}], "stats": {"total": 43, "additions": 31, "deletions": 12}, "files": [{"sha": "4a6ef9207d01565e2caefd03a3924495534a1ece", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "patch": "@@ -1,3 +1,11 @@\n+2018-08-02  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/86660\n+\t* common/config/nvptx/nvptx-common.c (nvptx_except_unwind_info): New\n+\tfunction.  Return UI_TARGET unconditionally.\n+\t(TARGET_EXCEPT_UNWIND_INFO): Redefine to nvptx_except_unwind_info.\n+\t* config/nvptx/nvptx.c (TARGET_ASM_BYTE_OP): Emit commented out '.byte'.\n+\n 2018-08-02  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* genemit.c (print_overload_test): Fix typo."}, {"sha": "f31e0696281d25600017b20247e99fafa02e115a", "filename": "gcc/common/config/nvptx/nvptx-common.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/gcc%2Fcommon%2Fconfig%2Fnvptx%2Fnvptx-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/gcc%2Fcommon%2Fconfig%2Fnvptx%2Fnvptx-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fnvptx%2Fnvptx-common.c?ref=77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "patch": "@@ -30,10 +30,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts.h\"\n #include \"flags.h\"\n \n+enum unwind_info_type\n+nvptx_except_unwind_info (struct gcc_options *opts ATTRIBUTE_UNUSED)\n+{\n+  return UI_TARGET;\n+}\n+\n #undef TARGET_HAVE_NAMED_SECTIONS\n #define TARGET_HAVE_NAMED_SECTIONS false\n \n #undef TARGET_DEFAULT_TARGET_FLAGS\n #define TARGET_DEFAULT_TARGET_FLAGS MASK_ABI64\n \n+#undef TARGET_EXCEPT_UNWIND_INFO\n+#define TARGET_EXCEPT_UNWIND_INFO nvptx_except_unwind_info\n+\n struct gcc_targetm_common targetm_common = TARGETM_COMMON_INITIALIZER;"}, {"sha": "62fefda8612037ef1dbcada6aeae25c1548521f0", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "patch": "@@ -6051,6 +6051,9 @@ nvptx_can_change_mode_class (machine_mode, machine_mode, reg_class_t)\n #undef TARGET_HAVE_SPECULATION_SAFE_VALUE\n #define TARGET_HAVE_SPECULATION_SAFE_VALUE speculation_safe_value_not_needed\n \n+#undef TARGET_ASM_BYTE_OP\n+#define TARGET_ASM_BYTE_OP \"// .byte \"\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-nvptx.h\""}, {"sha": "a44dc7c90d06cc2bfdb46530103ec25a83bf5f41", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "patch": "@@ -1,3 +1,14 @@\n+2018-08-02  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/86660\n+\t* testsuite/libgomp.oacc-c++/routine-1-auto.C: Remove -fno-exceptions.\n+\t* testsuite/libgomp.oacc-c++/routine-1-template-auto.C: Same.\n+\t* testsuite/libgomp.oacc-c++/routine-1-template-trailing-return-type.C:\n+\tSame.\n+\t* testsuite/libgomp.oacc-c++/routine-1-template.C: Same.\n+\t* testsuite/libgomp.oacc-c++/routine-1-trailing-return-type.C: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/routine-1.c: Same.\n+\n 2018-08-01  Cesar Philippidis  <cesar@codesourcery.com>\n \t    Thomas Schwinge <thomas@codesourcery.com>\n "}, {"sha": "771a2734306added2d16ba677e7d3ca2a75c2c09", "filename": "libgomp/testsuite/libgomp.oacc-c++/routine-1-auto.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-auto.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-auto.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-auto.C?ref=77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "patch": "@@ -1,7 +1,5 @@\n // Routine with \"auto\" return type.\n \n-// { dg-additional-options \"-fno-exceptions\" }\n-\n #define TEMPLATE\n #define TYPE int\n #define RETURN_1 auto"}, {"sha": "17bdaa0c1c16851ebf1612685283526c40b68954", "filename": "libgomp/testsuite/libgomp.oacc-c++/routine-1-template-auto.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-template-auto.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-template-auto.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-template-auto.C?ref=77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "patch": "@@ -1,7 +1,5 @@\n // Templated routine with \"auto\" return type.\n \n-// { dg-additional-options \"-fno-exceptions\" }\n-\n #define TEMPLATE template<typename TYPE>\n #define RETURN_1 auto\n #define RETURN_2"}, {"sha": "99faa8650414e43a1e8b82b98b44ddc35c340d98", "filename": "libgomp/testsuite/libgomp.oacc-c++/routine-1-template-trailing-return-type.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-template-trailing-return-type.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-template-trailing-return-type.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-template-trailing-return-type.C?ref=77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "patch": "@@ -1,7 +1,5 @@\n // Templated routine using trailing return type syntax.\n \n-// { dg-additional-options \"-fno-exceptions\" }\n-\n #define TEMPLATE template<typename TYPE>\n #define RETURN_1 auto\n #define RETURN_2 -> TYPE"}, {"sha": "89defb196b12a60d353ede0b6bea9d62829cfd7d", "filename": "libgomp/testsuite/libgomp.oacc-c++/routine-1-template.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-template.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-template.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-template.C?ref=77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "patch": "@@ -1,7 +1,5 @@\n // Templated routine.\n \n-// { dg-additional-options \"-fno-exceptions\" }\n-\n #define TEMPLATE template<typename TYPE>\n #define RETURN_1 TYPE\n #define RETURN_2"}, {"sha": "767e0ce46660ee2eb15726d4084586e2deab9466", "filename": "libgomp/testsuite/libgomp.oacc-c++/routine-1-trailing-return-type.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-trailing-return-type.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-trailing-return-type.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Froutine-1-trailing-return-type.C?ref=77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "patch": "@@ -1,7 +1,5 @@\n // Routine using trailing return type syntax.\n \n-// { dg-additional-options \"-fno-exceptions\" }\n-\n #define TEMPLATE\n #define TYPE int\n #define RETURN_1 auto"}, {"sha": "0f70e264240d16b055db97aa8637156ca7358468", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/routine-1.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77e0a97acf7b00c1e68e4738fdf275a4cffc2e50/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-1.c?ref=77e0a97acf7b00c1e68e4738fdf275a4cffc2e50", "patch": "@@ -1,5 +1,3 @@\n-// { dg-additional-options \"-fno-exceptions\" }\n-\n // Defaults, if not \"#include\"d from ../libgomp.oacc-c++/routine-1-*.C.\n #ifndef TEMPLATE\n # define TEMPLATE"}]}