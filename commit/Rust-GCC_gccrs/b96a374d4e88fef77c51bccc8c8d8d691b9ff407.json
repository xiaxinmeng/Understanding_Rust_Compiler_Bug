{"sha": "b96a374d4e88fef77c51bccc8c8d8d691b9ff407", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk2YTM3NGQ0ZTg4ZmVmNzdjNTFiY2NjOGM4ZDhkNjkxYjlmZjQwNw==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-07-07T15:56:23Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-07-07T15:56:23Z"}, "message": "i386-protos.h: Convert prototypes to ISO C90.\n\n\n\t* config/i386/i386-protos.h: Convert prototypes to ISO C90.\n\t* config/i386/i386.c: Likewise.\n\nFrom-SVN: r69044", "tree": {"sha": "47595b960040fbe47cb8cc01af75bd7b94665d4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47595b960040fbe47cb8cc01af75bd7b94665d4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b96a374d4e88fef77c51bccc8c8d8d691b9ff407", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96a374d4e88fef77c51bccc8c8d8d691b9ff407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b96a374d4e88fef77c51bccc8c8d8d691b9ff407", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96a374d4e88fef77c51bccc8c8d8d691b9ff407/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "273fc01eaf3159757426bfd88c231afddac3517f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/273fc01eaf3159757426bfd88c231afddac3517f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/273fc01eaf3159757426bfd88c231afddac3517f"}], "stats": {"total": 1700, "additions": 648, "deletions": 1052}, "files": [{"sha": "4dc13477ad68f5e138f1090981afa1125627f43e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96a374d4e88fef77c51bccc8c8d8d691b9ff407/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96a374d4e88fef77c51bccc8c8d8d691b9ff407/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b96a374d4e88fef77c51bccc8c8d8d691b9ff407", "patch": "@@ -1,3 +1,8 @@\n+2003-07-07  Andreas Jaeger  <aj@suse.de>\n+\n+\t* config/i386/i386-protos.h: Convert prototypes to ISO C90.\n+\t* config/i386/i386.c: Likewise.\n+\n 2003-07-07  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md: Use gen_int_mode instead of"}, {"sha": "ba6f114c86177c6e0f909653c9761b5bc90618d9", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 193, "deletions": 202, "changes": 395, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96a374d4e88fef77c51bccc8c8d8d691b9ff407/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96a374d4e88fef77c51bccc8c8d8d691b9ff407/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=b96a374d4e88fef77c51bccc8c8d8d691b9ff407", "patch": "@@ -20,222 +20,213 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n /* Functions in i386.c */\n-extern void override_options PARAMS ((void));\n-extern void optimization_options PARAMS ((int, int));\n+extern void override_options (void);\n+extern void optimization_options (int, int);\n \n-extern int ix86_can_use_return_insn_p PARAMS ((void));\n-extern int ix86_frame_pointer_required PARAMS ((void));\n-extern void ix86_setup_frame_addresses PARAMS ((void));\n+extern int ix86_can_use_return_insn_p (void);\n+extern int ix86_frame_pointer_required (void);\n+extern void ix86_setup_frame_addresses (void);\n \n-extern void ix86_file_end PARAMS ((void));\n-extern HOST_WIDE_INT ix86_initial_elimination_offset PARAMS((int, int));\n-extern void ix86_expand_prologue PARAMS ((void));\n-extern void ix86_expand_epilogue PARAMS ((int));\n+extern void ix86_file_end (void);\n+extern HOST_WIDE_INT ix86_initial_elimination_offset (int, int);\n+extern void ix86_expand_prologue (void);\n+extern void ix86_expand_epilogue (int);\n \n-extern void ix86_output_addr_vec_elt PARAMS ((FILE *, int));\n-extern void ix86_output_addr_diff_elt PARAMS ((FILE *, int, int));\n+extern void ix86_output_addr_vec_elt (FILE *, int);\n+extern void ix86_output_addr_diff_elt (FILE *, int, int);\n \n #ifdef RTX_CODE\n-extern int ix86_aligned_p PARAMS ((rtx));\n-\n-extern int standard_80387_constant_p PARAMS ((rtx));\n-extern const char *standard_80387_constant_opcode PARAMS ((rtx));\n-extern rtx standard_80387_constant_rtx PARAMS ((int));\n-extern int standard_sse_constant_p PARAMS ((rtx));\n-extern int symbolic_reference_mentioned_p PARAMS ((rtx));\n-extern bool extended_reg_mentioned_p PARAMS ((rtx));\n-extern bool x86_extended_QIreg_mentioned_p PARAMS ((rtx));\n-extern bool x86_extended_reg_mentioned_p PARAMS ((rtx));\n-\n-extern int any_fp_register_operand PARAMS ((rtx, enum machine_mode));\n-extern int register_and_not_any_fp_reg_operand PARAMS ((rtx, enum machine_mode));\n-\n-extern int fp_register_operand PARAMS ((rtx, enum machine_mode));\n-extern int register_and_not_fp_reg_operand PARAMS ((rtx, enum machine_mode));\n-\n-extern int x86_64_general_operand PARAMS ((rtx, enum machine_mode));\n-extern int x86_64_szext_general_operand PARAMS ((rtx, enum machine_mode));\n-extern int x86_64_nonmemory_operand PARAMS ((rtx, enum machine_mode));\n-extern int x86_64_szext_nonmemory_operand PARAMS ((rtx, enum machine_mode));\n-extern int x86_64_immediate_operand PARAMS ((rtx, enum machine_mode));\n-extern int x86_64_zext_immediate_operand PARAMS ((rtx, enum machine_mode));\n-extern int const_int_1_operand PARAMS ((rtx, enum machine_mode));\n-extern int symbolic_operand PARAMS ((rtx, enum machine_mode));\n-extern int tls_symbolic_operand PARAMS ((rtx, enum machine_mode));\n-extern int global_dynamic_symbolic_operand PARAMS ((rtx, enum machine_mode));\n-extern int local_dynamic_symbolic_operand PARAMS ((rtx, enum machine_mode));\n-extern int initial_exec_symbolic_operand PARAMS ((rtx, enum machine_mode));\n-extern int local_exec_symbolic_operand PARAMS ((rtx, enum machine_mode));\n-extern int pic_symbolic_operand PARAMS ((rtx, enum machine_mode));\n-extern int call_insn_operand PARAMS ((rtx, enum machine_mode));\n-extern int sibcall_insn_operand PARAMS ((rtx, enum machine_mode));\n-extern int constant_call_address_operand PARAMS ((rtx, enum machine_mode));\n-extern int const0_operand PARAMS ((rtx, enum machine_mode));\n-extern int const1_operand PARAMS ((rtx, enum machine_mode));\n-extern int const248_operand PARAMS ((rtx, enum machine_mode));\n-extern int incdec_operand PARAMS ((rtx, enum machine_mode));\n-extern int reg_no_sp_operand PARAMS ((rtx, enum machine_mode));\n-extern int mmx_reg_operand PARAMS ((rtx, enum machine_mode));\n-extern int general_no_elim_operand PARAMS ((rtx, enum machine_mode));\n-extern int nonmemory_no_elim_operand PARAMS ((rtx, enum machine_mode));\n-extern int q_regs_operand PARAMS ((rtx, enum machine_mode));\n-extern int non_q_regs_operand PARAMS ((rtx, enum machine_mode));\n-extern int sse_comparison_operator PARAMS ((rtx, enum machine_mode));\n-extern int fcmov_comparison_operator PARAMS ((rtx, enum machine_mode));\n-extern int cmp_fp_expander_operand PARAMS ((rtx, enum machine_mode));\n-extern int ix86_comparison_operator PARAMS ((rtx, enum machine_mode));\n-extern int ext_register_operand PARAMS ((rtx, enum machine_mode));\n-extern int binary_fp_operator PARAMS ((rtx, enum machine_mode));\n-extern int mult_operator PARAMS ((rtx, enum machine_mode));\n-extern int div_operator PARAMS ((rtx, enum machine_mode));\n-extern int arith_or_logical_operator PARAMS ((rtx, enum machine_mode));\n-extern int promotable_binary_operator PARAMS ((rtx, enum machine_mode));\n-extern int memory_displacement_operand PARAMS ((rtx, enum machine_mode));\n-extern int cmpsi_operand PARAMS ((rtx, enum machine_mode));\n-extern int long_memory_operand PARAMS ((rtx, enum machine_mode));\n-extern int aligned_operand PARAMS ((rtx, enum machine_mode));\n-extern enum machine_mode ix86_cc_mode PARAMS ((enum rtx_code, rtx, rtx));\n-\n-extern int ix86_expand_movstr PARAMS ((rtx, rtx, rtx, rtx));\n-extern int ix86_expand_clrstr PARAMS ((rtx, rtx, rtx));\n-extern int ix86_expand_strlen PARAMS ((rtx, rtx, rtx, rtx));\n-\n-extern bool legitimate_constant_p PARAMS ((rtx));\n-extern bool constant_address_p PARAMS ((rtx));\n-extern bool legitimate_pic_operand_p PARAMS ((rtx));\n-extern int legitimate_pic_address_disp_p PARAMS ((rtx));\n-extern int legitimate_address_p PARAMS ((enum machine_mode, rtx, int));\n-extern rtx legitimize_pic_address PARAMS ((rtx, rtx));\n-extern rtx legitimize_address PARAMS ((rtx, rtx, enum machine_mode));\n-\n-extern void print_reg PARAMS ((rtx, int, FILE*));\n-extern void print_operand PARAMS ((FILE*, rtx, int));\n-extern void print_operand_address PARAMS ((FILE*, rtx));\n-extern bool output_addr_const_extra PARAMS ((FILE*, rtx));\n-\n-extern void split_di PARAMS ((rtx[], int, rtx[], rtx[]));\n-extern void split_ti PARAMS ((rtx[], int, rtx[], rtx[]));\n-\n-extern const char *output_set_got PARAMS ((rtx));\n-extern const char *output_387_binary_op PARAMS ((rtx, rtx*));\n-extern const char *output_fix_trunc PARAMS ((rtx, rtx*));\n-extern const char *output_fp_compare PARAMS ((rtx, rtx*, int, int));\n-\n-extern void i386_dwarf_output_addr_const PARAMS ((FILE*, rtx));\n-extern void i386_output_dwarf_dtprel PARAMS ((FILE*, int, rtx));\n-\n-extern void ix86_expand_clear PARAMS ((rtx));\n-extern void ix86_expand_move PARAMS ((enum machine_mode, rtx[]));\n-extern void ix86_expand_vector_move PARAMS ((enum machine_mode, rtx[]));\n-extern void ix86_expand_binary_operator PARAMS ((enum rtx_code,\n-\t\t\t\t\t       enum machine_mode, rtx[]));\n-extern int ix86_binary_operator_ok PARAMS ((enum rtx_code, enum machine_mode,\n-\t\t\t\t\t  rtx[]));\n-extern void ix86_expand_unary_operator PARAMS ((enum rtx_code, enum machine_mode,\n-\t\t\t\t\t      rtx[]));\n-extern int ix86_unary_operator_ok PARAMS ((enum rtx_code, enum machine_mode,\n-\t\t\t\t\t rtx[]));\n-extern int ix86_match_ccmode PARAMS ((rtx, enum machine_mode));\n-extern rtx ix86_expand_compare PARAMS ((enum rtx_code, rtx *, rtx *));\n-extern int ix86_use_fcomi_compare PARAMS ((enum rtx_code));\n-extern void ix86_expand_branch PARAMS ((enum rtx_code, rtx));\n-extern int ix86_expand_setcc PARAMS ((enum rtx_code, rtx));\n-extern int ix86_expand_int_movcc PARAMS ((rtx[]));\n-extern int ix86_expand_fp_movcc PARAMS ((rtx[]));\n-extern int ix86_expand_int_addcc PARAMS ((rtx[]));\n-extern void ix86_expand_call PARAMS ((rtx, rtx, rtx, rtx, rtx, int));\n-extern void x86_initialize_trampoline PARAMS ((rtx, rtx, rtx));\n-extern rtx ix86_zero_extend_to_Pmode PARAMS ((rtx));\n-extern void ix86_split_long_move PARAMS ((rtx[]));\n-extern void ix86_split_ashldi PARAMS ((rtx *, rtx));\n-extern void ix86_split_ashrdi PARAMS ((rtx *, rtx));\n-extern void ix86_split_lshrdi PARAMS ((rtx *, rtx));\n-extern rtx ix86_find_base_term PARAMS ((rtx));\n-\n-extern rtx assign_386_stack_local PARAMS ((enum machine_mode, int));\n-extern int ix86_attr_length_immediate_default PARAMS ((rtx, int));\n-extern int ix86_attr_length_address_default PARAMS ((rtx));\n-\n-extern enum machine_mode ix86_fp_compare_mode PARAMS ((enum rtx_code));\n-\n-extern int x86_64_sign_extended_value PARAMS ((rtx));\n-extern int x86_64_zero_extended_value PARAMS ((rtx));\n-extern rtx ix86_libcall_value PARAMS ((enum machine_mode));\n-extern bool ix86_function_value_regno_p PARAMS ((int));\n-extern bool ix86_function_arg_regno_p PARAMS ((int));\n-extern int ix86_function_arg_boundary PARAMS ((enum machine_mode, tree));\n-extern int ix86_return_in_memory PARAMS ((tree));\n-extern void ix86_va_start PARAMS ((tree, rtx));\n-extern rtx ix86_va_arg PARAMS ((tree, tree));\n-extern void ix86_setup_incoming_varargs PARAMS ((CUMULATIVE_ARGS *,\n-\t\t\t\t\t\t enum machine_mode,\n-\t\t\t\t\t\t tree, int *, int));\n-\n-extern rtx ix86_force_to_memory PARAMS ((enum machine_mode, rtx));\n-extern void ix86_free_from_memory PARAMS ((enum machine_mode));\n-extern void ix86_split_fp_branch PARAMS ((enum rtx_code code, rtx,\n-\t\t\t\t\t  rtx, rtx, rtx, rtx));\n-extern int ix86_hard_regno_mode_ok PARAMS ((int, enum machine_mode));\n-extern int ix86_register_move_cost PARAMS ((enum machine_mode, enum reg_class,\n-\t\t\t\t\t    enum reg_class));\n-extern int ix86_secondary_memory_needed PARAMS ((enum reg_class,\n-\t\t\t\t\t\t enum reg_class,\n-\t\t\t\t\t\t enum machine_mode, int));\n-extern enum reg_class ix86_preferred_reload_class PARAMS ((rtx,\n-\t\t\t\t\t\t\t   enum reg_class));\n-extern int ix86_memory_move_cost PARAMS ((enum machine_mode, enum reg_class,\n-\t\t\t\t\t  int));\n-extern void ix86_set_move_mem_attrs PARAMS ((rtx, rtx, rtx, rtx, rtx));\n-extern void emit_i387_cw_initialization PARAMS ((rtx, rtx));\n-extern bool ix86_fp_jump_nontrivial_p PARAMS ((enum rtx_code));\n-extern void x86_order_regs_for_local_alloc PARAMS ((void));\n-extern void x86_function_profiler PARAMS ((FILE *, int));\n-extern void x86_emit_floatuns PARAMS ((rtx [2]));\n+extern int ix86_aligned_p (rtx);\n+\n+extern int standard_80387_constant_p (rtx);\n+extern const char *standard_80387_constant_opcode (rtx);\n+extern rtx standard_80387_constant_rtx (int);\n+extern int standard_sse_constant_p (rtx);\n+extern int symbolic_reference_mentioned_p (rtx);\n+extern bool extended_reg_mentioned_p (rtx);\n+extern bool x86_extended_QIreg_mentioned_p (rtx);\n+extern bool x86_extended_reg_mentioned_p (rtx);\n+\n+extern int any_fp_register_operand (rtx, enum machine_mode);\n+extern int register_and_not_any_fp_reg_operand (rtx, enum machine_mode);\n+\n+extern int fp_register_operand (rtx, enum machine_mode);\n+extern int register_and_not_fp_reg_operand (rtx, enum machine_mode);\n+\n+extern int x86_64_general_operand (rtx, enum machine_mode);\n+extern int x86_64_szext_general_operand (rtx, enum machine_mode);\n+extern int x86_64_nonmemory_operand (rtx, enum machine_mode);\n+extern int x86_64_szext_nonmemory_operand (rtx, enum machine_mode);\n+extern int x86_64_immediate_operand (rtx, enum machine_mode);\n+extern int x86_64_zext_immediate_operand (rtx, enum machine_mode);\n+extern int const_int_1_operand (rtx, enum machine_mode);\n+extern int symbolic_operand (rtx, enum machine_mode);\n+extern int tls_symbolic_operand (rtx, enum machine_mode);\n+extern int global_dynamic_symbolic_operand (rtx, enum machine_mode);\n+extern int local_dynamic_symbolic_operand (rtx, enum machine_mode);\n+extern int initial_exec_symbolic_operand (rtx, enum machine_mode);\n+extern int local_exec_symbolic_operand (rtx, enum machine_mode);\n+extern int pic_symbolic_operand (rtx, enum machine_mode);\n+extern int call_insn_operand (rtx, enum machine_mode);\n+extern int sibcall_insn_operand (rtx, enum machine_mode);\n+extern int constant_call_address_operand (rtx, enum machine_mode);\n+extern int const0_operand (rtx, enum machine_mode);\n+extern int const1_operand (rtx, enum machine_mode);\n+extern int const248_operand (rtx, enum machine_mode);\n+extern int incdec_operand (rtx, enum machine_mode);\n+extern int reg_no_sp_operand (rtx, enum machine_mode);\n+extern int mmx_reg_operand (rtx, enum machine_mode);\n+extern int general_no_elim_operand (rtx, enum machine_mode);\n+extern int nonmemory_no_elim_operand (rtx, enum machine_mode);\n+extern int q_regs_operand (rtx, enum machine_mode);\n+extern int non_q_regs_operand (rtx, enum machine_mode);\n+extern int sse_comparison_operator (rtx, enum machine_mode);\n+extern int fcmov_comparison_operator (rtx, enum machine_mode);\n+extern int cmp_fp_expander_operand (rtx, enum machine_mode);\n+extern int ix86_comparison_operator (rtx, enum machine_mode);\n+extern int ext_register_operand (rtx, enum machine_mode);\n+extern int binary_fp_operator (rtx, enum machine_mode);\n+extern int mult_operator (rtx, enum machine_mode);\n+extern int div_operator (rtx, enum machine_mode);\n+extern int arith_or_logical_operator (rtx, enum machine_mode);\n+extern int promotable_binary_operator (rtx, enum machine_mode);\n+extern int memory_displacement_operand (rtx, enum machine_mode);\n+extern int cmpsi_operand (rtx, enum machine_mode);\n+extern int long_memory_operand (rtx, enum machine_mode);\n+extern int aligned_operand (rtx, enum machine_mode);\n+extern enum machine_mode ix86_cc_mode (enum rtx_code, rtx, rtx);\n+\n+extern int ix86_expand_movstr (rtx, rtx, rtx, rtx);\n+extern int ix86_expand_clrstr (rtx, rtx, rtx);\n+extern int ix86_expand_strlen (rtx, rtx, rtx, rtx);\n+\n+extern bool legitimate_constant_p (rtx);\n+extern bool constant_address_p (rtx);\n+extern bool legitimate_pic_operand_p (rtx);\n+extern int legitimate_pic_address_disp_p (rtx);\n+extern int legitimate_address_p (enum machine_mode, rtx, int);\n+extern rtx legitimize_pic_address (rtx, rtx);\n+extern rtx legitimize_address (rtx, rtx, enum machine_mode);\n+\n+extern void print_reg (rtx, int, FILE*);\n+extern void print_operand (FILE*, rtx, int);\n+extern void print_operand_address (FILE*, rtx);\n+extern bool output_addr_const_extra (FILE*, rtx);\n+\n+extern void split_di (rtx[], int, rtx[], rtx[]);\n+extern void split_ti (rtx[], int, rtx[], rtx[]);\n+\n+extern const char *output_set_got (rtx);\n+extern const char *output_387_binary_op (rtx, rtx*);\n+extern const char *output_fix_trunc (rtx, rtx*);\n+extern const char *output_fp_compare (rtx, rtx*, int, int);\n+\n+extern void i386_dwarf_output_addr_const (FILE*, rtx);\n+extern void i386_output_dwarf_dtprel (FILE*, int, rtx);\n+\n+extern void ix86_expand_clear (rtx);\n+extern void ix86_expand_move (enum machine_mode, rtx[]);\n+extern void ix86_expand_vector_move (enum machine_mode, rtx[]);\n+extern void ix86_expand_binary_operator (enum rtx_code,\n+\t\t\t\t\t enum machine_mode, rtx[]);\n+extern int ix86_binary_operator_ok (enum rtx_code, enum machine_mode, rtx[]);\n+extern void ix86_expand_unary_operator (enum rtx_code, enum machine_mode,\n+\t\t\t\t\trtx[]);\n+extern int ix86_unary_operator_ok (enum rtx_code, enum machine_mode, rtx[]);\n+extern int ix86_match_ccmode (rtx, enum machine_mode);\n+extern rtx ix86_expand_compare (enum rtx_code, rtx *, rtx *);\n+extern int ix86_use_fcomi_compare (enum rtx_code);\n+extern void ix86_expand_branch (enum rtx_code, rtx);\n+extern int ix86_expand_setcc (enum rtx_code, rtx);\n+extern int ix86_expand_int_movcc (rtx[]);\n+extern int ix86_expand_fp_movcc (rtx[]);\n+extern int ix86_expand_int_addcc (rtx[]);\n+extern void ix86_expand_call (rtx, rtx, rtx, rtx, rtx, int);\n+extern void x86_initialize_trampoline (rtx, rtx, rtx);\n+extern rtx ix86_zero_extend_to_Pmode (rtx);\n+extern void ix86_split_long_move (rtx[]);\n+extern void ix86_split_ashldi (rtx *, rtx);\n+extern void ix86_split_ashrdi (rtx *, rtx);\n+extern void ix86_split_lshrdi (rtx *, rtx);\n+extern rtx ix86_find_base_term (rtx);\n+\n+extern rtx assign_386_stack_local (enum machine_mode, int);\n+extern int ix86_attr_length_immediate_default (rtx, int);\n+extern int ix86_attr_length_address_default (rtx);\n+\n+extern enum machine_mode ix86_fp_compare_mode (enum rtx_code);\n+\n+extern int x86_64_sign_extended_value (rtx);\n+extern int x86_64_zero_extended_value (rtx);\n+extern rtx ix86_libcall_value (enum machine_mode);\n+extern bool ix86_function_value_regno_p (int);\n+extern bool ix86_function_arg_regno_p (int);\n+extern int ix86_function_arg_boundary (enum machine_mode, tree);\n+extern int ix86_return_in_memory (tree);\n+extern void ix86_va_start (tree, rtx);\n+extern rtx ix86_va_arg (tree, tree);\n+extern void ix86_setup_incoming_varargs (CUMULATIVE_ARGS *,\n+\t\t\t\t\t enum machine_mode, tree, int *, int);\n+\n+extern rtx ix86_force_to_memory (enum machine_mode, rtx);\n+extern void ix86_free_from_memory (enum machine_mode);\n+extern void ix86_split_fp_branch (enum rtx_code code, rtx, rtx, rtx, rtx, rtx);\n+extern int ix86_hard_regno_mode_ok (int, enum machine_mode);\n+extern int ix86_register_move_cost (enum machine_mode, enum reg_class,\n+\t\t\t\t    enum reg_class);\n+extern int ix86_secondary_memory_needed (enum reg_class, enum reg_class,\n+\t\t\t\t\t enum machine_mode, int);\n+extern enum reg_class ix86_preferred_reload_class (rtx, enum reg_class);\n+extern int ix86_memory_move_cost (enum machine_mode, enum reg_class, int);\n+extern void ix86_set_move_mem_attrs (rtx, rtx, rtx, rtx, rtx);\n+extern void emit_i387_cw_initialization (rtx, rtx);\n+extern bool ix86_fp_jump_nontrivial_p (enum rtx_code);\n+extern void x86_order_regs_for_local_alloc (void);\n+extern void x86_function_profiler (FILE *, int);\n+extern void x86_emit_floatuns (rtx [2]);\n \n \n #ifdef TREE_CODE\n-extern void init_cumulative_args PARAMS ((CUMULATIVE_ARGS *, tree, rtx, tree));\n-extern rtx function_arg PARAMS ((CUMULATIVE_ARGS *, enum machine_mode, tree, int));\n-extern int function_arg_pass_by_reference PARAMS ((CUMULATIVE_ARGS *,\n-\t\t\t\t\t\t   enum machine_mode,\n-\t\t\t\t\t\t   tree, int));\n-extern void function_arg_advance PARAMS ((CUMULATIVE_ARGS *, enum machine_mode,\n-\t\t\t\t\ttree, int));\n-extern rtx ix86_function_value PARAMS ((tree));\n-extern void ix86_init_builtins PARAMS ((void));\n-extern rtx ix86_expand_builtin PARAMS ((tree, rtx, rtx, enum machine_mode, int));\n+extern void init_cumulative_args (CUMULATIVE_ARGS *, tree, rtx, tree);\n+extern rtx function_arg (CUMULATIVE_ARGS *, enum machine_mode, tree, int);\n+extern int function_arg_pass_by_reference (CUMULATIVE_ARGS *,\n+\t\t\t\t\t   enum machine_mode, tree, int);\n+extern void function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode,\n+\t\t\t\t  tree, int);\n+extern rtx ix86_function_value (tree);\n+extern void ix86_init_builtins (void);\n+extern rtx ix86_expand_builtin (tree, rtx, rtx, enum machine_mode, int);\n #endif\n \n #endif\n \n #ifdef TREE_CODE\n-extern int ix86_return_pops_args PARAMS ((tree, tree, int));\n-extern tree ix86_build_va_list PARAMS ((void));\n-\n-extern int ix86_data_alignment PARAMS ((tree, int));\n-extern int ix86_local_alignment PARAMS ((tree, int));\n-extern int ix86_constant_alignment PARAMS ((tree, int));\n-extern tree ix86_handle_dll_attribute PARAMS ((tree *, tree, tree, int, bool *));\n-extern tree ix86_handle_shared_attribute PARAMS ((tree *, tree, tree, int, bool *));\n-\n-extern unsigned int i386_pe_section_type_flags PARAMS ((tree, const char *,\n-\t\t\t\t\t\t\tint));\n-extern void i386_pe_asm_named_section PARAMS ((const char *, unsigned int));\n-extern int x86_field_alignment PARAMS ((tree, int));\n+extern int ix86_return_pops_args (tree, tree, int);\n+extern tree ix86_build_va_list (void);\n+\n+extern int ix86_data_alignment (tree, int);\n+extern int ix86_local_alignment (tree, int);\n+extern int ix86_constant_alignment (tree, int);\n+extern tree ix86_handle_dll_attribute (tree *, tree, tree, int, bool *);\n+extern tree ix86_handle_shared_attribute (tree *, tree, tree, int, bool *);\n+\n+extern unsigned int i386_pe_section_type_flags (tree, const char *, int);\n+extern void i386_pe_asm_named_section (const char *, unsigned int);\n+extern int x86_field_alignment (tree, int);\n #endif\n \n-extern rtx ix86_tls_get_addr PARAMS ((void));\n-extern bool ix86_must_pass_in_stack PARAMS ((enum machine_mode mode, tree));\n+extern rtx ix86_tls_get_addr (void);\n+extern bool ix86_must_pass_in_stack (enum machine_mode mode, tree);\n \n /* In winnt.c  */\n-extern int i386_pe_dllexport_name_p PARAMS ((const char *));\n-extern int i386_pe_dllimport_name_p PARAMS ((const char *));\n-extern void i386_pe_unique_section PARAMS ((tree, int));\n-extern void i386_pe_declare_function_type PARAMS ((FILE *, const char *, int));\n-extern void i386_pe_record_external_function PARAMS ((const char *));\n-extern void i386_pe_record_exported_symbol PARAMS ((const char *, int));\n-extern void i386_pe_asm_file_end PARAMS ((FILE *));\n-extern void i386_pe_encode_section_info PARAMS ((tree, rtx, int));\n-extern const char *i386_pe_strip_name_encoding PARAMS ((const char *));\n-extern const char *i386_pe_strip_name_encoding_full PARAMS ((const char *));\n-extern void i386_pe_output_labelref PARAMS ((FILE *, const char *));\n+extern int i386_pe_dllexport_name_p (const char *);\n+extern int i386_pe_dllimport_name_p (const char *);\n+extern void i386_pe_unique_section (tree, int);\n+extern void i386_pe_declare_function_type (FILE *, const char *, int);\n+extern void i386_pe_record_external_function (const char *);\n+extern void i386_pe_record_exported_symbol (const char *, int);\n+extern void i386_pe_asm_file_end (FILE *);\n+extern void i386_pe_encode_section_info (tree, rtx, int);\n+extern const char *i386_pe_strip_name_encoding (const char *);\n+extern const char *i386_pe_strip_name_encoding_full (const char *);\n+extern void i386_pe_output_labelref (FILE *, const char *);"}, {"sha": "1f273b404e7d22259afd2b073ce42a277a6898d9", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 450, "deletions": 850, "changes": 1300, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96a374d4e88fef77c51bccc8c8d8d691b9ff407/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96a374d4e88fef77c51bccc8c8d8d691b9ff407/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b96a374d4e88fef77c51bccc8c8d8d691b9ff407"}]}