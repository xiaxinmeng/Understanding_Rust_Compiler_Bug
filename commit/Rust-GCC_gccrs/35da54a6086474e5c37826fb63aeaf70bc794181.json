{"sha": "35da54a6086474e5c37826fb63aeaf70bc794181", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVkYTU0YTYwODY0NzRlNWMzNzgyNmZiNjNhZWFmNzBiYzc5NDE4MQ==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2014-09-03T09:37:36Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2014-09-03T09:37:36Z"}, "message": "[NDS32] Prepare necessary varargs information in compute_stack_frame().\n\n\t* config/nds32/nds32.c (nds32_compute_stack_frame): Prepare necessary\n\tvarargs information.\n\nFrom-SVN: r214862", "tree": {"sha": "1b0529ab62449376c46c245d1fe0643c9feba0cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b0529ab62449376c46c245d1fe0643c9feba0cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35da54a6086474e5c37826fb63aeaf70bc794181", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35da54a6086474e5c37826fb63aeaf70bc794181", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35da54a6086474e5c37826fb63aeaf70bc794181", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35da54a6086474e5c37826fb63aeaf70bc794181/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4a6a4d9a0a2f8e25a7799ca4054bdf3aba374b3"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "31baaaddc4b15b6daf4c35bbd51273e45fd3ef0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35da54a6086474e5c37826fb63aeaf70bc794181/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35da54a6086474e5c37826fb63aeaf70bc794181/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35da54a6086474e5c37826fb63aeaf70bc794181", "patch": "@@ -1,3 +1,8 @@\n+2014-09-03  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32.c (nds32_compute_stack_frame): Prepare necessary\n+\tvarargs information.\n+\n 2014-09-03  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32.c (nds32_setup_incoming_varargs): New"}, {"sha": "5fbdac869d27d5cefafc5c232ae2cb294d389a84", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 26, "deletions": 14, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35da54a6086474e5c37826fb63aeaf70bc794181/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35da54a6086474e5c37826fb63aeaf70bc794181/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=35da54a6086474e5c37826fb63aeaf70bc794181", "patch": "@@ -150,16 +150,30 @@ nds32_compute_stack_frame (void)\n   cfun->machine->naked_p = 0;\n \n   /* Get variadic arguments size to prepare pretend arguments and\n-     push them into stack at prologue.\n-     Currently, we do not push variadic arguments by ourself.\n-     We have GCC handle all the works.\n-     The caller will push all corresponding nameless arguments into stack,\n-     and the callee is able to retrieve them without problems.\n-     These variables are still preserved in case one day\n-     we would like caller passing arguments with registers.  */\n-  cfun->machine->va_args_size = 0;\n-  cfun->machine->va_args_first_regno = SP_REGNUM;\n-  cfun->machine->va_args_last_regno  = SP_REGNUM;\n+     we will push them into stack at prologue by ourself.  */\n+  cfun->machine->va_args_size = crtl->args.pretend_args_size;\n+  if (cfun->machine->va_args_size != 0)\n+    {\n+      cfun->machine->va_args_first_regno\n+        = NDS32_GPR_ARG_FIRST_REGNUM\n+          + NDS32_MAX_GPR_REGS_FOR_ARGS\n+          - (crtl->args.pretend_args_size / UNITS_PER_WORD);\n+      cfun->machine->va_args_last_regno\n+        = NDS32_GPR_ARG_FIRST_REGNUM + NDS32_MAX_GPR_REGS_FOR_ARGS - 1;\n+    }\n+  else\n+    {\n+      cfun->machine->va_args_first_regno = SP_REGNUM;\n+      cfun->machine->va_args_last_regno  = SP_REGNUM;\n+    }\n+\n+  /* Important: We need to make sure that varargs area is 8-byte alignment.  */\n+  block_size = cfun->machine->va_args_size;\n+  if (!NDS32_DOUBLE_WORD_ALIGN_P (block_size))\n+    {\n+      cfun->machine->va_args_area_padding_bytes\n+\t= NDS32_ROUND_UP_DOUBLE_WORD (block_size) - block_size;\n+    }\n \n   /* Get local variables, incoming variables, and temporary variables size.\n      Note that we need to make sure it is 8-byte alignment because\n@@ -323,12 +337,10 @@ nds32_compute_stack_frame (void)\n     }\n \n   /* Important: We need to make sure that\n-                (va_args_size + fp_size + gp_size\n-                 + lp_size + callee_saved_regs_size)\n+                (fp_size + gp_size + lp_size + callee_saved_regs_size)\n                 is 8-byte alignment.\n                 If it is not, calculate the padding bytes.  */\n-  block_size = cfun->machine->va_args_size\n-\t       + cfun->machine->fp_size\n+  block_size = cfun->machine->fp_size\n \t       + cfun->machine->gp_size\n \t       + cfun->machine->lp_size\n \t       + cfun->machine->callee_saved_regs_size;"}]}