{"sha": "9328dd5725be9ddbca3350bf0586b30c3b920a6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMyOGRkNTcyNWJlOWRkYmNhMzM1MGJmMDU4NmIzMGMzYjkyMGE2ZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-01-17T16:04:10Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-01-17T16:04:10Z"}, "message": "tree.c (substitute_in_expr): Add missing 'break'.\n\n        * tree.c (substitute_in_expr): Add missing 'break'.\nada/\n        * utils.c (build_function_stub): Properly build the call expression.\n\nFrom-SVN: r131600", "tree": {"sha": "4bcac1ec5fb387062d0ec563f1ec4118134654c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bcac1ec5fb387062d0ec563f1ec4118134654c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9328dd5725be9ddbca3350bf0586b30c3b920a6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9328dd5725be9ddbca3350bf0586b30c3b920a6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9328dd5725be9ddbca3350bf0586b30c3b920a6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9328dd5725be9ddbca3350bf0586b30c3b920a6d/comments", "author": null, "committer": null, "parents": [{"sha": "7c1950cdf15a9a1b0509ef0cff47411a2a812ec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c1950cdf15a9a1b0509ef0cff47411a2a812ec2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c1950cdf15a9a1b0509ef0cff47411a2a812ec2"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "572b6edab601a16e4bced3fa784b70f565e24a05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9328dd5725be9ddbca3350bf0586b30c3b920a6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9328dd5725be9ddbca3350bf0586b30c3b920a6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9328dd5725be9ddbca3350bf0586b30c3b920a6d", "patch": "@@ -1,3 +1,7 @@\n+2008-01-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree.c (substitute_in_expr): Add missing 'break'.\n+\n 2008-01-17  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/34825"}, {"sha": "33293cf9096d4ab29021781454d27c12f12b4f68", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9328dd5725be9ddbca3350bf0586b30c3b920a6d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9328dd5725be9ddbca3350bf0586b30c3b920a6d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9328dd5725be9ddbca3350bf0586b30c3b920a6d", "patch": "@@ -1,3 +1,7 @@\n+2008-01-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* utils.c (build_function_stub): Properly build the call expression.\n+\n 2008-01-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* decl.c (gnat_to_gnu_entity) <object>: Process renamings"}, {"sha": "32cbbffa2a962275aa6591c04458e7896fc05055", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9328dd5725be9ddbca3350bf0586b30c3b920a6d/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9328dd5725be9ddbca3350bf0586b30c3b920a6d/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=9328dd5725be9ddbca3350bf0586b30c3b920a6d", "patch": "@@ -3022,9 +3022,9 @@ build_function_stub (tree gnu_subprog, Entity_Id gnat_subprog)\n   /* Invoke the internal subprogram.  */\n   gnu_subprog_addr = build1 (ADDR_EXPR, build_pointer_type (gnu_subprog_type),\n \t\t\t     gnu_subprog);\n-  gnu_subprog_call = build3 (CALL_EXPR, TREE_TYPE (gnu_subprog_type),\n-\t\t\t     gnu_subprog_addr, nreverse (gnu_param_list),\n-\t\t\t     NULL_TREE);\n+  gnu_subprog_call = build_call_list (TREE_TYPE (gnu_subprog_type),\n+\t\t\t\t      gnu_subprog_addr,\n+\t\t\t\t      nreverse (gnu_param_list));\n \n   /* Propagate the return value, if any.  */\n   if (VOID_TYPE_P (TREE_TYPE (gnu_subprog_type)))"}, {"sha": "b5a41620f9effe7663ef50f4f7333eacd8e7b16c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9328dd5725be9ddbca3350bf0586b30c3b920a6d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9328dd5725be9ddbca3350bf0586b30c3b920a6d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9328dd5725be9ddbca3350bf0586b30c3b920a6d", "patch": "@@ -1,3 +1,7 @@\n+2008-01-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/discr5.adb: New test.\n+\n 2008-01-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.c-torture/compile/20080114-1.c: Use empty asm statements."}, {"sha": "631db55dba0706db96e775be7ff850f3d59a2e84", "filename": "gcc/testsuite/gnat.dg/discr5.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9328dd5725be9ddbca3350bf0586b30c3b920a6d/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9328dd5725be9ddbca3350bf0586b30c3b920a6d/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr5.adb?ref=9328dd5725be9ddbca3350bf0586b30c3b920a6d", "patch": "@@ -0,0 +1,17 @@\n+-- { dg-do compile }\n+\n+procedure Discr5 is\n+\n+   type Enum is (Ten, Twenty);\n+   for Enum use (10, 20);\n+   type Arr is array (Enum range <>) of Integer;\n+   type Rec (Discr: Enum := Ten) is record\n+      case Discr is\n+         when others =>\n+            A: Arr (Ten .. Discr);\n+      end case;\n+   end record;\n+\n+begin\n+   null;\n+end;"}, {"sha": "b96dc35293f562e0cf4c84cf8764f034e3f01008", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9328dd5725be9ddbca3350bf0586b30c3b920a6d/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9328dd5725be9ddbca3350bf0586b30c3b920a6d/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=9328dd5725be9ddbca3350bf0586b30c3b920a6d", "patch": "@@ -2530,8 +2530,8 @@ substitute_in_expr (tree exp, tree f, tree r)\n \t{\n \t  tree copy = NULL_TREE;\n \t  int i;\n-\t  int n = TREE_OPERAND_LENGTH (exp);\n-\t  for (i = 1; i < n; i++)\n+\n+\t  for (i = 1; i < TREE_OPERAND_LENGTH (exp); i++)\n \t    {\n \t      tree op = TREE_OPERAND (exp, i);\n \t      tree newop = SUBSTITUTE_IN_EXPR (op, f, r);\n@@ -2546,6 +2546,7 @@ substitute_in_expr (tree exp, tree f, tree r)\n \t  else\n \t    return exp;\n \t}\n+\tbreak;\n \n       default:\n \tgcc_unreachable ();"}]}