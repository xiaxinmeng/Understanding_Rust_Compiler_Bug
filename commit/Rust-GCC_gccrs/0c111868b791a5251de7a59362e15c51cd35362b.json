{"sha": "0c111868b791a5251de7a59362e15c51cd35362b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMxMTE4NjhiNzkxYTUyNTFkZTdhNTkzNjJlMTVjNTFjZDM1MzYyYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-07-23T12:57:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-07-23T12:57:22Z"}, "message": "[Ada] Add push/pop capability in Output\n\nAdd the capability to use the Write_* procedures in an environment where\nyou want to write debugging info but still use them to write to other\nfiles (such a C source files).\n\ngcc/ada/\n\n\t* output.ads (Push_Output, Pop_Output): New procedures.\n\t* output.adb (FD_Array, FD_Stack, FD_Stack_Idx): New type and vars.\n\t(Push_Output, Pop_Output): New procedures.", "tree": {"sha": "dba4bb4460ca9b0d833195f5a60c1648197b878e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dba4bb4460ca9b0d833195f5a60c1648197b878e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c111868b791a5251de7a59362e15c51cd35362b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c111868b791a5251de7a59362e15c51cd35362b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c111868b791a5251de7a59362e15c51cd35362b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c111868b791a5251de7a59362e15c51cd35362b/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2949e0865723e011279a504e3fe913062c8d6e0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2949e0865723e011279a504e3fe913062c8d6e0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2949e0865723e011279a504e3fe913062c8d6e0b"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "971819b9bf306f1a67731214fc7543206275a855", "filename": "gcc/ada/output.adb", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c111868b791a5251de7a59362e15c51cd35362b/gcc%2Fada%2Foutput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c111868b791a5251de7a59362e15c51cd35362b/gcc%2Fada%2Foutput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.adb?ref=0c111868b791a5251de7a59362e15c51cd35362b", "patch": "@@ -45,6 +45,13 @@ package body Output is\n    Current_FD : File_Descriptor := Standout;\n    --  File descriptor for current output\n \n+   type FD_Array is array (Nat range 1 .. 3) of File_Descriptor;\n+   FD_Stack     : FD_Array;\n+   FD_Stack_Idx : Nat := FD_Array'First - 1;\n+   --  Maintain a small stack for Push_Output and Pop_Output. We'd normally\n+   --  use Table for this and allow an unlimited depth, but we're the target\n+   --  of a pragma Elaborate_All in Table, so we can't use it here.\n+\n    Special_Output_Proc : Output_Proc := null;\n    --  Record argument to last call to Set_Special_Output. If this is\n    --  non-null, then we are in special output mode.\n@@ -228,6 +235,28 @@ package body Output is\n         (Cur_Indentation - Indentation_Amount) mod Indentation_Limit;\n    end Outdent;\n \n+   ----------------\n+   -- Pop_Output --\n+   ----------------\n+\n+   procedure Pop_Output is\n+   begin\n+      pragma Assert (FD_Stack_Idx >= FD_Array'First);\n+      Current_FD := FD_Stack (FD_Stack_Idx);\n+      FD_Stack_Idx := FD_Stack_Idx - 1;\n+   end Pop_Output;\n+\n+   -----------------\n+   -- Push_Output --\n+   -----------------\n+\n+   procedure Push_Output is\n+   begin\n+      pragma Assert (FD_Stack_Idx < FD_Array'Last);\n+      FD_Stack_Idx := FD_Stack_Idx + 1;\n+      FD_Stack (FD_Stack_Idx) := Current_FD;\n+   end Push_Output;\n+\n    ---------------------------\n    -- Restore_Output_Buffer --\n    ---------------------------"}, {"sha": "55d308a9b34a4a27613e686c9ab2f8c1cbb271a2", "filename": "gcc/ada/output.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c111868b791a5251de7a59362e15c51cd35362b/gcc%2Fada%2Foutput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c111868b791a5251de7a59362e15c51cd35362b/gcc%2Fada%2Foutput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.ads?ref=0c111868b791a5251de7a59362e15c51cd35362b", "patch": "@@ -95,6 +95,15 @@ package Output is\n    --  output will appear on the given file descriptor only after special\n    --  output has been cancelled.\n \n+   procedure Push_Output;\n+   --  Saves the current output destination on a stack, but leaves it\n+   --  unchanged. This subprogram only supports a small stack and is normally\n+   --  used with a depth of one.\n+\n+   procedure Pop_Output;\n+   --  Changes the current output destination to be the last output destination\n+   --  popped using Push_Output.\n+\n    procedure Indent;\n    --  Increases the current indentation level. Whenever a line is written\n    --  (triggered by Eol), an appropriate amount of whitespace is added to the"}]}