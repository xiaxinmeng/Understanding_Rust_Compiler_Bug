{"sha": "d71b0a9a041430612883f7f891bb25b8e21b6f2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcxYjBhOWEwNDE0MzA2MTI4ODNmN2Y4OTFiYjI1YjhlMjFiNmYyYw==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2018-12-11T11:12:26Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-11T11:12:26Z"}, "message": "[Ada] Do not expand code inside ignored ghost bodies\n\nWhile ignored ghost code is not compiled into the executable, it may\nlead to compilation errors when it makes use of language features\nrequiring runtime support that is not available in the available runtime\nlibrary.  These errors are spurious, as the executable will never call\nin these runtime units.\n\nThis patch deactivates the expansion of code inside ignored ghost bodies\nof subprograms and packages, so that this code is still checked for\npossible semantic errors, but it does not force the presence of useless\nruntime units.\n\nThere is no impact on the executable produced.\n\n2018-12-11  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Deactivate\n\texpansion in ignored ghost subprogram body.\n\t* sem_ch7.adb (Analyze_Package_Body_Helper): Deactivate\n\texpansion in ignored ghost package body.\n\ngcc/testsuite/\n\n\t* gnat.dg/ghost4.adb: New testcase.\n\nFrom-SVN: r267015", "tree": {"sha": "c32b8439fc729f4c8dfb939fa06b43990cc92e88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c32b8439fc729f4c8dfb939fa06b43990cc92e88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d71b0a9a041430612883f7f891bb25b8e21b6f2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d71b0a9a041430612883f7f891bb25b8e21b6f2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d71b0a9a041430612883f7f891bb25b8e21b6f2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d71b0a9a041430612883f7f891bb25b8e21b6f2c/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c13269965084ccb19233411164b52c7f187a5fb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c13269965084ccb19233411164b52c7f187a5fb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c13269965084ccb19233411164b52c7f187a5fb6"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "fd56c3aae97dd6fbb0edc6117d038d71ab41584e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71b0a9a041430612883f7f891bb25b8e21b6f2c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71b0a9a041430612883f7f891bb25b8e21b6f2c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d71b0a9a041430612883f7f891bb25b8e21b6f2c", "patch": "@@ -1,3 +1,10 @@\n+2018-12-11  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Deactivate\n+\texpansion in ignored ghost subprogram body.\n+\t* sem_ch7.adb (Analyze_Package_Body_Helper): Deactivate\n+\texpansion in ignored ghost package body.\n+\n 2018-12-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_unst.adb (Register_Subprogram): A subprogram whose address"}, {"sha": "c291fb635c382241766d7596f72085f015ed1416", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71b0a9a041430612883f7f891bb25b8e21b6f2c/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71b0a9a041430612883f7f891bb25b8e21b6f2c/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=d71b0a9a041430612883f7f891bb25b8e21b6f2c", "patch": "@@ -3370,6 +3370,7 @@ package body Sem_Ch6 is\n \n       Saved_GM   : constant Ghost_Mode_Type := Ghost_Mode;\n       Saved_IGR  : constant Node_Id         := Ignored_Ghost_Region;\n+      Saved_EA   : constant Boolean         := Expander_Active;\n       Saved_ISMP : constant Boolean         :=\n                      Ignore_SPARK_Mode_Pragmas_In_Instance;\n       --  Save the Ghost and SPARK mode-related data to restore on exit\n@@ -3610,6 +3611,18 @@ package body Sem_Ch6 is\n          end if;\n       end if;\n \n+      --  Deactivate expansion inside the body of ignored Ghost entities,\n+      --  as this code will ultimately be ignored. This avoids requiring the\n+      --  presence of run-time units which are not needed. Only do this for\n+      --  user entities, as internally generated entitities might still need\n+      --  to be expanded (e.g. those generated for types).\n+\n+      if Present (Ignored_Ghost_Region)\n+        and then Comes_From_Source (Body_Id)\n+      then\n+         Expander_Active := False;\n+      end if;\n+\n       --  Previously we scanned the body to look for nested subprograms, and\n       --  rejected an inline directive if nested subprograms were present,\n       --  because the back-end would generate conflicting symbols for the\n@@ -4588,6 +4601,10 @@ package body Sem_Ch6 is\n       end if;\n \n    <<Leave>>\n+      if Present (Ignored_Ghost_Region) then\n+         Expander_Active := Saved_EA;\n+      end if;\n+\n       Ignore_SPARK_Mode_Pragmas_In_Instance := Saved_ISMP;\n       Restore_Ghost_Region (Saved_GM, Saved_IGR);\n    end Analyze_Subprogram_Body_Helper;"}, {"sha": "01c2260885f5cbae766f4c117ceaf653f42d485e", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71b0a9a041430612883f7f891bb25b8e21b6f2c/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71b0a9a041430612883f7f891bb25b8e21b6f2c/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=d71b0a9a041430612883f7f891bb25b8e21b6f2c", "patch": "@@ -669,6 +669,7 @@ package body Sem_Ch7 is\n \n       Saved_GM   : constant Ghost_Mode_Type := Ghost_Mode;\n       Saved_IGR  : constant Node_Id         := Ignored_Ghost_Region;\n+      Saved_EA   : constant Boolean         := Expander_Active;\n       Saved_ISMP : constant Boolean         :=\n                      Ignore_SPARK_Mode_Pragmas_In_Instance;\n       --  Save the Ghost and SPARK mode-related data to restore on exit\n@@ -780,6 +781,18 @@ package body Sem_Ch7 is\n \n       Mark_And_Set_Ghost_Body (N, Spec_Id);\n \n+      --  Deactivate expansion inside the body of ignored Ghost entities,\n+      --  as this code will ultimately be ignored. This avoids requiring the\n+      --  presence of run-time units which are not needed. Only do this for\n+      --  user entities, as internally generated entitities might still need\n+      --  to be expanded (e.g. those generated for types).\n+\n+      if Present (Ignored_Ghost_Region)\n+        and then Comes_From_Source (Body_Id)\n+      then\n+         Expander_Active := False;\n+      end if;\n+\n       --  If the body completes the initial declaration of a compilation unit\n       --  which is subject to pragma Elaboration_Checks, set the model of the\n       --  pragma because it applies to all parts of the unit.\n@@ -1075,6 +1088,10 @@ package body Sem_Ch7 is\n          end if;\n       end if;\n \n+      if Present (Ignored_Ghost_Region) then\n+         Expander_Active := Saved_EA;\n+      end if;\n+\n       Ignore_SPARK_Mode_Pragmas_In_Instance := Saved_ISMP;\n       Restore_Ghost_Region (Saved_GM, Saved_IGR);\n    end Analyze_Package_Body_Helper;"}, {"sha": "b718fed5f17e3656841a316e36be1ab0fc8d7027", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71b0a9a041430612883f7f891bb25b8e21b6f2c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71b0a9a041430612883f7f891bb25b8e21b6f2c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d71b0a9a041430612883f7f891bb25b8e21b6f2c", "patch": "@@ -1,3 +1,7 @@\n+2018-12-11  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat.dg/ghost4.adb: New testcase.\n+\n 2018-12-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/iter4.adb: New testcase."}, {"sha": "884c1e61cc5d7f50628f6c2dd8dda5c70a65a473", "filename": "gcc/testsuite/gnat.dg/ghost4.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71b0a9a041430612883f7f891bb25b8e21b6f2c/gcc%2Ftestsuite%2Fgnat.dg%2Fghost4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71b0a9a041430612883f7f891bb25b8e21b6f2c/gcc%2Ftestsuite%2Fgnat.dg%2Fghost4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fghost4.adb?ref=d71b0a9a041430612883f7f891bb25b8e21b6f2c", "patch": "@@ -0,0 +1,15 @@\n+pragma Restrictions (No_Secondary_Stack);\n+\n+procedure Ghost4 is\n+\n+   procedure Dummy with Ghost is\n+      function Slice (S : String) return String is\n+         (S (S'First .. S'First + 3));\n+\n+      X : String := Slice (\"hello\");\n+   begin\n+         null;\n+   end Dummy;\n+begin\n+   Dummy;\n+end Ghost4;"}]}