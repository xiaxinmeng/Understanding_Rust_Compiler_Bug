{"sha": "60a1fb353771ec09209e14f804ec205a352af363", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBhMWZiMzUzNzcxZWMwOTIwOWUxNGY4MDRlYzIwNWEzNTJhZjM2Mw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@google.com", "date": "2012-05-23T23:42:25Z"}, "committer": {"name": "Doug Evans", "email": "devans@gcc.gnu.org", "date": "2012-05-23T23:42:25Z"}, "message": "leb128.h: #include stdint.h, inttypes.h.\n\n\t* leb128.h: #include stdint.h, inttypes.h.\n\t(read_uleb128_to_uint64): Renamed from read_uleb128_to_ull.\n\tChange to take a uint64_t * argument instead of unsigned long long.\n\t(read_sleb128_to_uint64): Renamed from read_sleb128_to_ll.\n\tChange to take an int64_t * argument instead of long long.\n\nFrom-SVN: r187818", "tree": {"sha": "0e8345ced8e876bd6d2b29c9b317a2e4141219b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e8345ced8e876bd6d2b29c9b317a2e4141219b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60a1fb353771ec09209e14f804ec205a352af363", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60a1fb353771ec09209e14f804ec205a352af363", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60a1fb353771ec09209e14f804ec205a352af363", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60a1fb353771ec09209e14f804ec205a352af363/comments", "author": null, "committer": null, "parents": [{"sha": "fb9098887bbc4ee48ee1d9ed9b8b31eea4758808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb9098887bbc4ee48ee1d9ed9b8b31eea4758808", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb9098887bbc4ee48ee1d9ed9b8b31eea4758808"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "fd8bdc97001f9ff8a730dccb9e7f8dd69d7959c7", "filename": "include/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60a1fb353771ec09209e14f804ec205a352af363/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60a1fb353771ec09209e14f804ec205a352af363/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=60a1fb353771ec09209e14f804ec205a352af363", "patch": "@@ -1,3 +1,11 @@\n+2012-05-23  Doug Evans  <dje@google.com>\n+\n+\t* leb128.h: #include stdint.h, inttypes.h.\n+\t(read_uleb128_to_uint64): Renamed from read_uleb128_to_ull.\n+\tChange to take a uint64_t * argument instead of unsigned long long.\n+\t(read_sleb128_to_uint64): Renamed from read_sleb128_to_ll.\n+\tChange to take an int64_t * argument instead of long long.\n+\n 2012-05-22  Doug Evans  <dje@google.com>\n \n \t* leb128.h: New file."}, {"sha": "f584f72e5a9af9b8a9a2dcb2bd959d894a0f9238", "filename": "include/leb128.h", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60a1fb353771ec09209e14f804ec205a352af363/include%2Fleb128.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60a1fb353771ec09209e14f804ec205a352af363/include%2Fleb128.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fleb128.h?ref=60a1fb353771ec09209e14f804ec205a352af363", "patch": "@@ -19,7 +19,12 @@ Boston, MA 02110-1301, USA.  */\n \n /* The functions defined here can be speed critical.\n    Since they are all pretty small we keep things simple and just define\n-   them all as \"static inline\".  */\n+   them all as \"static inline\".\n+\n+   WARNING: This file is used by GDB which is stuck at C90. :-(\n+   Though it can use stdint.h, inttypes.h.\n+   Therefore if you want to add support for \"long long\" you need\n+   to wrap it in #ifdef CC_HAS_LONG_LONG.  */\n \n #ifndef LEB128_H\n #define LEB128_H\n@@ -30,6 +35,13 @@ Boston, MA 02110-1301, USA.  */\n /* Get a definition for NULL, size_t.  */\n #include <stddef.h>\n \n+#ifdef HAVE_STDINT_H\n+#include <stdint.h>\n+#endif\n+#ifdef HAVE_INTTYPES_H\n+#include <inttypes.h>\n+#endif\n+\n /* Decode the unsigned LEB128 constant at BUF into the variable pointed to\n    by R, and return the number of bytes read.\n    If we read off the end of the buffer, zero is returned,\n@@ -39,12 +51,12 @@ Boston, MA 02110-1301, USA.  */\n    read to avoid const-vs-non-const problems.  */\n \n static inline size_t\n-read_uleb128_to_ull (const unsigned char *buf, const unsigned char *buf_end,\n-\t\t     unsigned long long *r)\n+read_uleb128_to_uint64 (const unsigned char *buf, const unsigned char *buf_end,\n+\t\t\tuint64_t *r)\n {\n   const unsigned char *p = buf;\n   unsigned int shift = 0;\n-  unsigned long long result = 0;\n+  uint64_t result = 0;\n   unsigned char byte;\n \n   while (1)\n@@ -53,7 +65,7 @@ read_uleb128_to_ull (const unsigned char *buf, const unsigned char *buf_end,\n \treturn 0;\n \n       byte = *p++;\n-      result |= ((unsigned long long) (byte & 0x7f)) << shift;\n+      result |= ((uint64_t) (byte & 0x7f)) << shift;\n       if ((byte & 0x80) == 0)\n \tbreak;\n       shift += 7;\n@@ -72,12 +84,12 @@ read_uleb128_to_ull (const unsigned char *buf, const unsigned char *buf_end,\n    read to avoid const-vs-non-const problems.  */\n \n static inline size_t\n-read_sleb128_to_ll (const unsigned char *buf, const unsigned char *buf_end,\n-\t\t    long long *r)\n+read_sleb128_to_int64 (const unsigned char *buf, const unsigned char *buf_end,\n+\t\t       int64_t *r)\n {\n   const unsigned char *p = buf;\n   unsigned int shift = 0;\n-  long long result = 0;\n+  int64_t result = 0;\n   unsigned char byte;\n \n   while (1)\n@@ -86,13 +98,13 @@ read_sleb128_to_ll (const unsigned char *buf, const unsigned char *buf_end,\n \treturn 0;\n \n       byte = *p++;\n-      result |= ((unsigned long long) (byte & 0x7f)) << shift;\n+      result |= ((uint64_t) (byte & 0x7f)) << shift;\n       shift += 7;\n       if ((byte & 0x80) == 0)\n \tbreak;\n     }\n   if (shift < (sizeof (*r) * 8) && (byte & 0x40) != 0)\n-    result |= -(((unsigned long long) 1) << shift);\n+    result |= -(((uint64_t) 1) << shift);\n \n   *r = result;\n   return p - buf;"}]}