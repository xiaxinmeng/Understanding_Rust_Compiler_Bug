{"sha": "16f67b79ab89d12af2b5c8e829a785244e7718af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZmNjdiNzlhYjg5ZDEyYWYyYjVjOGU4MjlhNzg1MjQ0ZTc3MThhZg==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2007-08-16T12:18:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-16T12:18:26Z"}, "message": "exp_attr.adb (Attribute_Priority): Add missing support for entries and entry barriers.\n\n2007-08-16  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_attr.adb (Attribute_Priority): Add missing support for entries\n\tand entry barriers.\n\nFrom-SVN: r127539", "tree": {"sha": "b413891c0ec0f5493b8752ce24875040cc31417b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b413891c0ec0f5493b8752ce24875040cc31417b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16f67b79ab89d12af2b5c8e829a785244e7718af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f67b79ab89d12af2b5c8e829a785244e7718af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16f67b79ab89d12af2b5c8e829a785244e7718af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f67b79ab89d12af2b5c8e829a785244e7718af/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19590d704b6d6eb487b63e112490e1d19946bae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19590d704b6d6eb487b63e112490e1d19946bae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19590d704b6d6eb487b63e112490e1d19946bae7"}], "stats": {"total": 76, "additions": 66, "deletions": 10}, "files": [{"sha": "272d8e2cbcd2f8f913b56cca08ae38528e5da805", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 66, "deletions": 10, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f67b79ab89d12af2b5c8e829a785244e7718af/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f67b79ab89d12af2b5c8e829a785244e7718af/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=16f67b79ab89d12af2b5c8e829a785244e7718af", "patch": "@@ -37,7 +37,9 @@ with Exp_Strm; use Exp_Strm;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n with Exp_VFpt; use Exp_VFpt;\n+with Freeze;   use Freeze;\n with Gnatvsn;  use Gnatvsn;\n+with Itypes;   use Itypes;\n with Lib;      use Lib;\n with Namet;    use Namet;\n with Nmake;    use Nmake;\n@@ -3134,16 +3136,66 @@ package body Exp_Attr is\n                Subprg := Scope (Subprg);\n             end loop;\n \n-            Object_Parm :=\n-              Make_Attribute_Reference (Loc,\n-                 Prefix =>\n-                   Make_Selected_Component (Loc,\n-                     Prefix => New_Reference_To\n+            --  Use of 'Priority inside protected entries and barriers (in\n+            --  both cases the type of the first formal of their expanded\n+            --  subprogram is Address)\n+\n+            if Etype (First_Entity (Protected_Body_Subprogram (Subprg)))\n+              = RTE (RE_Address)\n+            then\n+               declare\n+                  New_Itype : Entity_Id;\n+\n+               begin\n+                  --  In the expansion of protected entries the type of the\n+                  --  first formal of the Protected_Body_Subprogram is an\n+                  --  Address. In order to reference the _object component\n+                  --  we generate:\n+\n+                  --    type T is access p__ptTV;\n+                  --    freeze T []\n+\n+                  New_Itype := Create_Itype (E_Access_Type, N);\n+                  Set_Etype (New_Itype, New_Itype);\n+                  Init_Esize (New_Itype);\n+                  Init_Size_Align (New_Itype);\n+                  Set_Directly_Designated_Type (New_Itype,\n+                    Corresponding_Record_Type (Conctyp));\n+                  Freeze_Itype (New_Itype, N);\n+\n+                  --  Generate:\n+                  --    T!(O)._object'unchecked_access\n+\n+                  Object_Parm :=\n+                    Make_Attribute_Reference (Loc,\n+                       Prefix =>\n+                         Make_Selected_Component (Loc,\n+                           Prefix =>\n+                             Unchecked_Convert_To (New_Itype,\n+                               New_Reference_To\n                                  (First_Entity\n-                                   (Protected_Body_Subprogram (Subprg)), Loc),\n-                   Selector_Name =>\n-                       Make_Identifier (Loc, Name_uObject)),\n-                 Attribute_Name => Name_Unchecked_Access);\n+                                   (Protected_Body_Subprogram (Subprg)),\n+                                  Loc)),\n+                           Selector_Name =>\n+                             Make_Identifier (Loc, Name_uObject)),\n+                       Attribute_Name => Name_Unchecked_Access);\n+               end;\n+\n+            --  Use of 'Priority inside a protected subprogram\n+\n+            else\n+               Object_Parm :=\n+                 Make_Attribute_Reference (Loc,\n+                    Prefix =>\n+                      Make_Selected_Component (Loc,\n+                        Prefix => New_Reference_To\n+                                    (First_Entity\n+                                      (Protected_Body_Subprogram (Subprg)),\n+                                       Loc),\n+                        Selector_Name =>\n+                          Make_Identifier (Loc, Name_uObject)),\n+                    Attribute_Name => Name_Unchecked_Access);\n+            end if;\n \n             --  Select the appropriate run-time subprogram\n \n@@ -3161,7 +3213,11 @@ package body Exp_Attr is\n                 Parameter_Associations => New_List (Object_Parm));\n \n             Rewrite (N, Call);\n-            Analyze_And_Resolve (N, Typ);\n+\n+            --  Avoid the generation of extra checks on the pointer to the\n+            --  protected object.\n+\n+            Analyze_And_Resolve (N, Typ, Suppress => Access_Check);\n          end;\n \n       ------------------"}]}