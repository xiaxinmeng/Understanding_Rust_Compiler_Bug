{"sha": "b6ab76d653319cd1136a4a619d714d45c9ce12f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZhYjc2ZDY1MzMxOWNkMTEzNmE0YTYxOWQ3MTRkNDVjOWNlMTJmMA==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2004-01-26T00:28:33Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2004-01-26T00:28:33Z"}, "message": "Fix last commit.\n\nFrom-SVN: r76608", "tree": {"sha": "9422d5c2b50a3adac7af468fb48180569df8f8e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9422d5c2b50a3adac7af468fb48180569df8f8e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6ab76d653319cd1136a4a619d714d45c9ce12f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ab76d653319cd1136a4a619d714d45c9ce12f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6ab76d653319cd1136a4a619d714d45c9ce12f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ab76d653319cd1136a4a619d714d45c9ce12f0/comments", "author": null, "committer": null, "parents": [{"sha": "b7bbb57472941fa0fd404dde046a1ed9f5c497f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7bbb57472941fa0fd404dde046a1ed9f5c497f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7bbb57472941fa0fd404dde046a1ed9f5c497f0"}], "stats": {"total": 15, "additions": 0, "deletions": 15}, "files": [{"sha": "31c1e83aa84b8d5431d1eb489837369f331aa1a2", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6ab76d653319cd1136a4a619d714d45c9ce12f0/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6ab76d653319cd1136a4a619d714d45c9ce12f0/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=b6ab76d653319cd1136a4a619d714d45c9ce12f0", "patch": "@@ -3896,21 +3896,6 @@ int valid_operands (enum rtx_code code, rtx *operands, enum machine_mode mode)\n }\n \n \n-int valid_operands (enum rtx_code code, rtx *operands, enum machine_mode mode)\n-{\n-\n-  /* If we are not optimizing then we have to let anything go and let\n-     reload fix things up.  instantiate_decl in function.c can produce\n-     invalid insns by changing the offset of a memory operand from a\n-     valid one into an invalid one, when the second operand is also a\n-     memory operand.  The alternative is not to allow two memory\n-     operands for an insn when not optimizing.  The problem only rarely\n-     occurs, for example with the C-torture program DFcmp.c.  */\n-\n-  return ! optimize || c4x_valid_operands (code, operands, mode, 0);\n-}\n-\n-\n int\n legitimize_operands (enum rtx_code code, rtx *operands, enum machine_mode mode)\n {"}]}