{"sha": "6f26f15f136506e40bb7a3a4f1cd5ca171322928", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYyNmYxNWYxMzY1MDZlNDBiYjdhM2E0ZjFjZDVjYTE3MTMyMjkyOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-02-06T19:46:51Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-02-06T19:46:51Z"}, "message": "sse.md (vector modes -> vec_extract* splitter): Use explicit subreg RTX with operand 1.\n\n\t* config/i386/sse.md (vector modes -> vec_extract* splitter): Use\n\texplicit subreg RTX with operand 1.  Use VECTOR_MODE_P predicate\n\tto simplify split condition.\n\nFrom-SVN: r245217", "tree": {"sha": "7e33af951f13b8f811f2fb26879e284f973efef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e33af951f13b8f811f2fb26879e284f973efef2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f26f15f136506e40bb7a3a4f1cd5ca171322928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f26f15f136506e40bb7a3a4f1cd5ca171322928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f26f15f136506e40bb7a3a4f1cd5ca171322928", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f26f15f136506e40bb7a3a4f1cd5ca171322928/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc06356ab8e628d54dbfe1f4c7a8c39aea6a06aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc06356ab8e628d54dbfe1f4c7a8c39aea6a06aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc06356ab8e628d54dbfe1f4c7a8c39aea6a06aa"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "a29c20e35cae3ebbfa606ddde347be1015ee9a9e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f26f15f136506e40bb7a3a4f1cd5ca171322928/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f26f15f136506e40bb7a3a4f1cd5ca171322928/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f26f15f136506e40bb7a3a4f1cd5ca171322928", "patch": "@@ -1,3 +1,9 @@\n+2017-02-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (vector modes -> vec_extract* splitter): Use\n+\texplicit subreg RTX with operand 1.  Use VECTOR_MODE_P predicate\n+\tto simplify split condition.\n+\n 2017-02-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* omp-expand.c (oxpand_omp_atomic_fetch_op,"}, {"sha": "1654890fc4e0dc832f0d248a348b9e97f2f9cc87", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f26f15f136506e40bb7a3a4f1cd5ca171322928/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f26f15f136506e40bb7a3a4f1cd5ca171322928/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=6f26f15f136506e40bb7a3a4f1cd5ca171322928", "patch": "@@ -13669,26 +13669,19 @@\n ;; vector modes into vec_extract*.\n (define_split\n   [(set (match_operand:SWI48x 0 \"nonimmediate_operand\")\n-\t(match_operand:SWI48x 1 \"register_operand\"))]\n+\t(subreg:SWI48x (match_operand 1 \"register_operand\") 0))]\n   \"can_create_pseudo_p ()\n-   && SUBREG_P (operands[1])\n-   && REG_P (SUBREG_REG (operands[1]))\n-   && (GET_MODE_CLASS (GET_MODE (SUBREG_REG (operands[1]))) == MODE_VECTOR_INT\n-       || (GET_MODE_CLASS (GET_MODE (SUBREG_REG (operands[1])))\n-\t   == MODE_VECTOR_FLOAT))\n-   && SUBREG_BYTE (operands[1]) == 0\n-   && TARGET_SSE\n-   && (GET_MODE_SIZE (GET_MODE (SUBREG_REG (operands[1]))) == 16\n-       || (GET_MODE_SIZE (GET_MODE (SUBREG_REG (operands[1]))) == 32\n-\t   && TARGET_AVX)\n-       || (GET_MODE_SIZE (GET_MODE (SUBREG_REG (operands[1]))) == 64\n-\t   && TARGET_AVX512F))\n+   && REG_P (operands[1])\n+   && VECTOR_MODE_P (GET_MODE (operands[1]))\n+   && ((TARGET_SSE && GET_MODE_SIZE (GET_MODE (operands[1])) == 16)\n+       || (TARGET_AVX && GET_MODE_SIZE (GET_MODE (operands[1])) == 32)\n+       || (TARGET_AVX512F && GET_MODE_SIZE (GET_MODE (operands[1])) == 64))\n    && (<MODE>mode == SImode || TARGET_64BIT || MEM_P (operands[0]))\"\n   [(set (match_dup 0) (vec_select:SWI48x (match_dup 1)\n \t\t\t\t\t (parallel [(const_int 0)])))]\n {\n   rtx tmp;\n-  operands[1] = SUBREG_REG (operands[1]);\n+\n   switch (GET_MODE_SIZE (GET_MODE (operands[1])))\n     {\n     case 64:"}]}