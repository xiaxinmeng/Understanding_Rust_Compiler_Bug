{"sha": "ae78a89f5210015ef21d107ad57d10bcb7ac852c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU3OGE4OWY1MjEwMDE1ZWYyMWQxMDdhZDU3ZDEwYmNiN2FjODUyYw==", "commit": {"author": {"name": "Sudakshina Das", "email": "sudi.das@arm.com", "date": "2018-11-12T14:58:39Z"}, "committer": {"name": "Sudakshina Das", "email": "sudi@gcc.gnu.org", "date": "2018-11-12T14:58:39Z"}, "message": "[GCC, ARM] Enable armv8.5-a and add +sb and +predres for previous ARMv8-a in ARM\n\nThis patch adds -march=armv8.5-a to the Arm backend.\nArmv8.5-A also adds two new security features:\n- Speculation Barrier instruction\n- Execution and Data Prediction Restriction Instructions\nThese are made optional to all older Armv8-A versions. Thus we are adding two\nnew options \"+sb\" and \"+predres\" to all older Armv8-A. These are passed on to\nthe assembler and have no code generation effects and have already gone in the\ntrunk of binutils.\n\n*** gcc/ChangeLog ***\n\n2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n\n\t* config/arm/arm-cpus.in (armv8_5, sb, predres): New features.\n\t(ARMv8_5a): New fgroup.\n\t(armv8.5-a): New arch.\n\t(armv8-a, armv8.1-a, armv8.2-a, armv8.3-a, armv8.4-a): New options\n\tsb and predres.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/t-aprofile: Add matching rules for -march=armv8.5-a\n\t* config/arm/t-arm-elf (all_v8_archs): Add armv8.5-a.\n\t* config/arm/t-multilib (v8_5_a_simd_variants): New variable.\n\tAdd matching rules for -march=armv8.5-a and extensions.\n\t* doc/invoke.texi (ARM options): Document -march=armv8.5-a.\n\tAdd sb and predres to all armv8-a except armv8.5-a.\n\n*** gcc/testsuite/ChangeLog ***\n\n2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n\n\t* gcc.target/arm/multilib.exp: Add some -march=armv8.5-a\n\tcombination tests.\n\nFrom-SVN: r266031", "tree": {"sha": "af3d820d01d81196e0da79115a18ebd09b3b82e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af3d820d01d81196e0da79115a18ebd09b3b82e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae78a89f5210015ef21d107ad57d10bcb7ac852c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae78a89f5210015ef21d107ad57d10bcb7ac852c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae78a89f5210015ef21d107ad57d10bcb7ac852c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae78a89f5210015ef21d107ad57d10bcb7ac852c/comments", "author": {"login": "sudakshina-das-arm", "id": 28538945, "node_id": "MDQ6VXNlcjI4NTM4OTQ1", "avatar_url": "https://avatars.githubusercontent.com/u/28538945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sudakshina-das-arm", "html_url": "https://github.com/sudakshina-das-arm", "followers_url": "https://api.github.com/users/sudakshina-das-arm/followers", "following_url": "https://api.github.com/users/sudakshina-das-arm/following{/other_user}", "gists_url": "https://api.github.com/users/sudakshina-das-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/sudakshina-das-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sudakshina-das-arm/subscriptions", "organizations_url": "https://api.github.com/users/sudakshina-das-arm/orgs", "repos_url": "https://api.github.com/users/sudakshina-das-arm/repos", "events_url": "https://api.github.com/users/sudakshina-das-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/sudakshina-das-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27922d518d3c81c85df4b2d391bc54e85dab01f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27922d518d3c81c85df4b2d391bc54e85dab01f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27922d518d3c81c85df4b2d391bc54e85dab01f5"}], "stats": {"total": 142, "additions": 135, "deletions": 7}, "files": [{"sha": "82da0eaadba7765698dc827b7837ce4f8aa6cfb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae78a89f5210015ef21d107ad57d10bcb7ac852c", "patch": "@@ -1,3 +1,18 @@\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* config/arm/arm-cpus.in (armv8_5, sb, predres): New features.\n+\t(ARMv8_5a): New fgroup.\n+\t(armv8.5-a): New arch.\n+\t(armv8-a, armv8.1-a, armv8.2-a, armv8.3-a, armv8.4-a): New options\n+\tsb and predres.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/t-aprofile: Add matching rules for -march=armv8.5-a\n+\t* config/arm/t-arm-elf (all_v8_archs): Add armv8.5-a.\n+\t* config/arm/t-multilib (v8_5_a_simd_variants): New variable.\n+\tAdd matching rules for -march=armv8.5-a and extensions.\n+\t* doc/invoke.texi (ARM options): Document -march=armv8.5-a.\n+\tAdd sb and predres to all armv8-a except armv8.5-a.\n+\n 2018-11-12  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vrp.h (value_range[_base]::set): Make public.  Provide"}, {"sha": "c71409e5dd9bcad525ed98cefd839bed0fd6f8ee", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=ae78a89f5210015ef21d107ad57d10bcb7ac852c", "patch": "@@ -114,6 +114,9 @@ define feature armv8_3\n # Architecture rel 8.4.\n define feature armv8_4\n \n+# Architecture rel 8.5.\n+define feature armv8_5\n+\n # M-Profile security extensions.\n define feature cmse\n \n@@ -174,6 +177,14 @@ define feature quirk_cm3_ldrd\n # (Very) slow multiply operations.  Should probably be a tuning bit.\n define feature smallmul\n \n+# Speculation Barrier Instruction for v8-A architectures, added by\n+# default to v8.5-A\n+define feature sb\n+\n+# Execution and Data Prediction Restriction Instruction for\n+# v8-A architectures, added by default from v8.5-A\n+define feature predres\n+\n # Feature groups.  Conventionally all (or mostly) upper case.\n # ALL_FPU lists all the feature bits associated with the floating-point\n # unit; these will all be removed if the floating-point unit is disabled\n@@ -235,6 +246,7 @@ define fgroup ARMv8_1a    ARMv8a crc32 armv8_1\n define fgroup ARMv8_2a    ARMv8_1a armv8_2\n define fgroup ARMv8_3a    ARMv8_2a armv8_3\n define fgroup ARMv8_4a    ARMv8_3a armv8_4\n+define fgroup ARMv8_5a    ARMv8_4a armv8_5 sb predres\n define fgroup ARMv8m_base ARMv6m armv8 cmse tdiv\n define fgroup ARMv8m_main ARMv7m armv8 cmse\n define fgroup ARMv8r      ARMv8a\n@@ -505,6 +517,8 @@ begin arch armv8-a\n  option crypto add FP_ARMv8 CRYPTO\n  option nocrypto remove ALL_CRYPTO\n  option nofp remove ALL_FP\n+ option sb add sb\n+ option predres add predres\n end arch armv8-a\n \n begin arch armv8.1-a\n@@ -517,6 +531,8 @@ begin arch armv8.1-a\n  option crypto add FP_ARMv8 CRYPTO\n  option nocrypto remove ALL_CRYPTO\n  option nofp remove ALL_FP\n+ option sb add sb\n+ option predres add predres\n end arch armv8.1-a\n \n begin arch armv8.2-a\n@@ -532,6 +548,8 @@ begin arch armv8.2-a\n  option nocrypto remove ALL_CRYPTO\n  option nofp remove ALL_FP\n  option dotprod add FP_ARMv8 DOTPROD\n+ option sb add sb\n+ option predres add predres\n end arch armv8.2-a\n \n begin arch armv8.3-a\n@@ -547,6 +565,8 @@ begin arch armv8.3-a\n  option nocrypto remove ALL_CRYPTO\n  option nofp remove ALL_FP\n  option dotprod add FP_ARMv8 DOTPROD\n+ option sb add sb\n+ option predres add predres\n end arch armv8.3-a\n \n begin arch armv8.4-a\n@@ -560,8 +580,23 @@ begin arch armv8.4-a\n  option crypto add FP_ARMv8 CRYPTO DOTPROD\n  option nocrypto remove ALL_CRYPTO\n  option nofp remove ALL_FP\n+ option sb add sb\n+ option predres add predres\n end arch armv8.4-a\n \n+begin arch armv8.5-a\n+ tune for cortex-a53\n+ tune flags CO_PROC\n+ base 8A\n+ profile A\n+ isa ARMv8_5a\n+ option simd add FP_ARMv8 DOTPROD\n+ option fp16 add fp16 fp16fml FP_ARMv8 DOTPROD\n+ option crypto add FP_ARMv8 CRYPTO DOTPROD\n+ option nocrypto remove ALL_CRYPTO\n+ option nofp remove ALL_FP\n+end arch armv8.5-a\n+\n begin arch armv8-m.base\n  tune for cortex-m23\n  base 8M_BASE"}, {"sha": "945a668f061aabac0786e5b18e7ea5851fc86868", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=ae78a89f5210015ef21d107ad57d10bcb7ac852c", "patch": "@@ -332,19 +332,22 @@ EnumValue\n Enum(arm_arch) String(armv8.4-a) Value(24)\n \n EnumValue\n-Enum(arm_arch) String(armv8-m.base) Value(25)\n+Enum(arm_arch) String(armv8.5-a) Value(25)\n \n EnumValue\n-Enum(arm_arch) String(armv8-m.main) Value(26)\n+Enum(arm_arch) String(armv8-m.base) Value(26)\n \n EnumValue\n-Enum(arm_arch) String(armv8-r) Value(27)\n+Enum(arm_arch) String(armv8-m.main) Value(27)\n \n EnumValue\n-Enum(arm_arch) String(iwmmxt) Value(28)\n+Enum(arm_arch) String(armv8-r) Value(28)\n \n EnumValue\n-Enum(arm_arch) String(iwmmxt2) Value(29)\n+Enum(arm_arch) String(iwmmxt) Value(29)\n+\n+EnumValue\n+Enum(arm_arch) String(iwmmxt2) Value(30)\n \n Enum\n Name(arm_fpu) Type(enum fpu_type)"}, {"sha": "945a938b4fed1283290224e836782fbb3069e9d9", "filename": "gcc/config/arm/t-aprofile", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Fconfig%2Farm%2Ft-aprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Fconfig%2Farm%2Ft-aprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-aprofile?ref=ae78a89f5210015ef21d107ad57d10bcb7ac852c", "patch": "@@ -103,6 +103,13 @@ MULTILIB_MATCHES\t+= march?armv8-a=march?armv8.4-a\n MULTILIB_MATCHES\t+= $(foreach ARCH, $(v8_4_a_simd_variants), \\\n \t\t\t     march?armv8-a+simd=march?armv8.4-a$(ARCH))\n \n+# Baseline v8.5-a: map down to baseline v8-a\n+MULTILIB_MATCHES\t+= march?armv8-a=march?armv8.5-a\n+\n+# Map all v8.5-a SIMD variants to v8-a+simd\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(v8_5_a_simd_variants), \\\n+\t\t\t     march?armv8-a+simd=march?armv8.5-a$(ARCH))\n+\n # Use Thumb libraries for everything.\n \n MULTILIB_REUSE\t\t+= mthumb/march.armv7-a/mfloat-abi.soft=marm/march.armv7-a/mfloat-abi.soft"}, {"sha": "d8853aa8f5afcccb0e4f4187c44de01a23b89402", "filename": "gcc/config/arm/t-arm-elf", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Fconfig%2Farm%2Ft-arm-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Fconfig%2Farm%2Ft-arm-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm-elf?ref=ae78a89f5210015ef21d107ad57d10bcb7ac852c", "patch": "@@ -46,7 +46,8 @@ all_early_arch\t:= armv5tej armv6 armv6j armv6k armv6z armv6kz \\\n \n all_v7_a_r\t:= armv7-a armv7ve armv7-r\n \n-all_v8_archs\t:= armv8-a armv8-a+crc armv8.1-a armv8.2-a armv8.3-a armv8.4-a\n+all_v8_archs\t:= armv8-a armv8-a+crc armv8.1-a armv8.2-a armv8.3-a armv8.4-a \\\n+\t\t   armv8.5-a\n \n # No floating point variants, require thumb1 softfp\n all_nofp_t\t:= armv6-m armv6s-m armv8-m.base"}, {"sha": "f05a994d7368e89978729c62131c1c61aaa6bddd", "filename": "gcc/config/arm/t-multilib", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Fconfig%2Farm%2Ft-multilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Fconfig%2Farm%2Ft-multilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-multilib?ref=ae78a89f5210015ef21d107ad57d10bcb7ac852c", "patch": "@@ -70,6 +70,7 @@ v8_a_simd_variants\t:= $(call all_feat_combs, simd crypto)\n v8_1_a_simd_variants\t:= $(call all_feat_combs, simd crypto)\n v8_2_a_simd_variants\t:= $(call all_feat_combs, simd fp16 fp16fml crypto dotprod)\n v8_4_a_simd_variants\t:= $(call all_feat_combs, simd fp16 crypto)\n+v8_5_a_simd_variants\t:= $(call all_feat_combs, simd fp16 crypto)\n v8_r_nosimd_variants\t:= +crc\n \n ifneq (,$(HAS_APROFILE))\n@@ -163,6 +164,13 @@ MULTILIB_MATCHES\t+= march?armv7=march?armv8.4-a\n MULTILIB_MATCHES\t+= $(foreach ARCH, $(v8_4_a_simd_variants), \\\n \t\t\t     march?armv7+fp=march?armv8.4-a$(ARCH))\n \n+# Baseline v8.5-a: map down to baseline v8-a\n+MULTILIB_MATCHES\t+= march?armv7=march?armv8.5-a\n+\n+# Map all v8.5-a SIMD variants\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(v8_5_a_simd_variants), \\\n+\t\t\t     march?armv7+fp=march?armv8.5-a$(ARCH))\n+\n # Use Thumb libraries for everything.\n \n MULTILIB_REUSE\t\t+= mthumb/march.armv7/mfloat-abi.soft=marm/march.armv7/mfloat-abi.soft\n@@ -176,4 +184,4 @@ MULTILIB_REUSE\t\t+= $(foreach MODE, arm thumb, \\\n \t\t\t     $(foreach ARCH, armv7, \\\n \t\t\t       mthumb/march.$(ARCH)/mfloat-abi.soft=m$(MODE)/march.$(ARCH)/mfloat-abi.softfp))\n \n-endif\t\t# Not APROFILE.\n\\ No newline at end of file\n+endif\t\t# Not APROFILE."}, {"sha": "5eef746e7d1aaa5ce9ff7132b463921f993d2048", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ae78a89f5210015ef21d107ad57d10bcb7ac852c", "patch": "@@ -16500,6 +16500,7 @@ Permissible names are:\n @samp{armv7}, @samp{armv7-a}, @samp{armv7ve}, \n @samp{armv8-a}, @samp{armv8.1-a}, @samp{armv8.2-a}, @samp{armv8.3-a},\n @samp{armv8.4-a},\n+@samp{armv8.5-a},\n @samp{armv7-r},\n @samp{armv8-r},\n @samp{armv6-m}, @samp{armv6s-m},\n@@ -16676,6 +16677,10 @@ The cryptographic instructions.\n Disable the cryptographic instructions.\n @item +nofp\n Disable the floating-point, Advanced SIMD and cryptographic instructions.\n+@item +sb\n+Speculation Barrier Instruction.\n+@item +predres\n+Execution and Data Prediction Restriction Instructions.\n @end table\n \n @item armv8.1-a\n@@ -16692,6 +16697,12 @@ Disable the cryptographic instructions.\n \n @item +nofp\n Disable the floating-point, Advanced SIMD and cryptographic instructions.\n+\n+@item +sb\n+Speculation Barrier Instruction.\n+\n+@item +predres\n+Execution and Data Prediction Restriction Instructions.\n @end table\n \n @item armv8.2-a\n@@ -16721,6 +16732,12 @@ Disable the cryptographic extension.\n \n @item +nofp\n Disable the floating-point, Advanced SIMD and cryptographic instructions.\n+\n+@item +sb\n+Speculation Barrier Instruction.\n+\n+@item +predres\n+Execution and Data Prediction Restriction Instructions.\n @end table\n \n @item armv8.4-a\n@@ -16742,6 +16759,35 @@ floating-point instructions as well as the Dot Product extension.\n @item +nocrypto\n Disable the cryptographic extension.\n \n+@item +nofp\n+Disable the floating-point, Advanced SIMD and cryptographic instructions.\n+\n+@item +sb\n+Speculation Barrier Instruction.\n+\n+@item +predres\n+Execution and Data Prediction Restriction Instructions.\n+@end table\n+\n+@item armv8.5-a\n+@table @samp\n+@item +fp16\n+The half-precision floating-point data processing instructions.\n+This also enables the Advanced SIMD and floating-point instructions as well\n+as the Dot Product extension and the half-precision floating-point fmla\n+extension.\n+\n+@item +simd\n+The ARMv8.3-A Advanced SIMD and floating-point instructions as well as the\n+Dot Product extension.\n+\n+@item +crypto\n+The cryptographic instructions.  This also enables the Advanced SIMD and\n+floating-point instructions as well as the Dot Product extension.\n+\n+@item +nocrypto\n+Disable the cryptographic extension.\n+\n @item +nofp\n Disable the floating-point, Advanced SIMD and cryptographic instructions.\n @end table"}, {"sha": "ec4309b335bedb4dc6f42e3439987afce3a6b292", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae78a89f5210015ef21d107ad57d10bcb7ac852c", "patch": "@@ -1,3 +1,8 @@\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* gcc.target/arm/multilib.exp: Add some -march=armv8.5-a\n+\tcombination tests.\n+\n 2018-11-11  Xianmiao Qu  <xianmiao_qu@c-sky.com>\n \n \t* gcc.target/csky/fnmul-1.c: New."}, {"sha": "cdd06f8265f9b1ac76d4aae9be003c519682eee6", "filename": "gcc/testsuite/gcc.target/arm/multilib.exp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae78a89f5210015ef21d107ad57d10bcb7ac852c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp?ref=ae78a89f5210015ef21d107ad57d10bcb7ac852c", "patch": "@@ -108,6 +108,14 @@ if {[multilib_config \"aprofile\"] } {\n \t{-march=armv8.4-a+simd+fp16 -mfloat-abi=softfp} \"thumb/v8-a+simd/softfp\"\n \t{-march=armv8.4-a+simd+fp16+nofp -mfloat-abi=softfp} \"thumb/v8-a/nofp\"\n \t{-march=armv8.4-a+simd+nofp+fp16 -mfloat-abi=softfp} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv8.5-a+crypto -mfloat-abi=soft} \"thumb/v8-a/nofp\"\n+\t{-march=armv8.5-a+simd+crypto -mfloat-abi=softfp} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv8.5-a+simd+crypto+nofp -mfloat-abi=softfp} \"thumb/v8-a/nofp\"\n+\t{-march=armv8.5-a+simd+nofp+crypto -mfloat-abi=softfp} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv8.5-a+fp16 -mfloat-abi=soft} \"thumb/v8-a/nofp\"\n+\t{-march=armv8.5-a+simd+fp16 -mfloat-abi=softfp} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv8.5-a+simd+fp16+nofp -mfloat-abi=softfp} \"thumb/v8-a/nofp\"\n+\t{-march=armv8.5-a+simd+nofp+fp16 -mfloat-abi=softfp} \"thumb/v8-a+simd/softfp\"\n \t{-mcpu=cortex-a53+crypto -mfloat-abi=hard} \"thumb/v8-a+simd/hard\"\n \t{-mcpu=cortex-a53+nofp -mfloat-abi=softfp} \"thumb/v8-a/nofp\"\n \t{-march=armv8-a+crc -mfloat-abi=hard -mfpu=vfp} \"thumb/v8-a+simd/hard\""}]}