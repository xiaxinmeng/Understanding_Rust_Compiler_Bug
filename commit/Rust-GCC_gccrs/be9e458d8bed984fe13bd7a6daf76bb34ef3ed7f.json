{"sha": "be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU5ZTQ1OGQ4YmVkOTg0ZmUxM2JkN2E2ZGFmNzZiYjM0ZWYzZWQ3Zg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-05-20T19:10:57Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-05-20T19:10:57Z"}, "message": "CWG 2094 - volatile scalars are trivially copyable.\n\n\tPR c++/85679\n\t* tree.c (trivially_copyable_p): Don't check CP_TYPE_VOLATILE_P for\n\tscalar types.\n\n\t* g++.dg/ext/is_trivially_constructible1.C: Change the expected result\n\tfor volatile int.\n\t* g++.dg/ext/is_trivially_copyable.C: New test.\n\n\t* testsuite/20_util/is_trivially_copyable/value.cc: Change the expected\n\tresult for volatile int.\n\nFrom-SVN: r271435", "tree": {"sha": "79965ad0b9b9ae9d443f1d8e5c49d9dd87b6bfaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79965ad0b9b9ae9d443f1d8e5c49d9dd87b6bfaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f12ea6acdeb3b62ddb8324bc71a67c6a189f6c3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12ea6acdeb3b62ddb8324bc71a67c6a189f6c3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f12ea6acdeb3b62ddb8324bc71a67c6a189f6c3c"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "f5f6c444436d5f1565e78b3492c10f7794c8a053", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f", "patch": "@@ -1,3 +1,10 @@\n+2019-05-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tCWG 2094 - volatile scalars are trivially copyable.\n+\tPR c++/85679\n+\t* tree.c (trivially_copyable_p): Don't check CP_TYPE_VOLATILE_P for\n+\tscalar types.\n+\n 2019-05-20  Marek Polacek  <polacek@redhat.com>\n \n \t* pt.c (convert_template_argument): Add a diagnostic for the"}, {"sha": "78139329476d78d5bd722cf9c9c88e4e171858ea", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f", "patch": "@@ -4098,7 +4098,8 @@ trivially_copyable_p (const_tree t)\n \t    && !TYPE_HAS_COMPLEX_MOVE_ASSIGN (t)\n \t    && TYPE_HAS_TRIVIAL_DESTRUCTOR (t));\n   else\n-    return !CP_TYPE_VOLATILE_P (t) && scalarish_type_p (t);\n+    /* CWG 2094 makes volatile-qualified scalars trivially copyable again.  */\n+    return scalarish_type_p (t);\n }\n \n /* Returns 1 iff type T is a trivial type, as defined in [basic.types] and"}, {"sha": "c100f6ae53e142ba6ff5a6efac2fa3218b33ffd0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f", "patch": "@@ -1,3 +1,11 @@\n+2019-05-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tCWG 2094 - volatile scalars are trivially copyable.\n+\tPR c++/85679\n+\t* g++.dg/ext/is_trivially_constructible1.C: Change the expected result\n+\tfor volatile int.\n+\t* g++.dg/ext/is_trivially_copyable.C: New test.\n+\n 2019-05-20  Marek Polacek  <polacek@redhat.com>\n \n \t* g++.dg/ext/utf8-2.C: Accept both \"char\" and \"char8_t\" in aka."}, {"sha": "d28f2f7b24ede40bb247434d5b53962ef562a409", "filename": "gcc/testsuite/g++.dg/ext/is_trivially_constructible1.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_trivially_constructible1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_trivially_constructible1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_trivially_constructible1.C?ref=be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f", "patch": "@@ -48,7 +48,9 @@ SA(!__is_trivially_constructible(int*, const int*));\n SA(!__is_trivially_constructible(D));\n \n SA(__is_trivially_copyable(int));\n-SA(!__is_trivially_copyable(volatile int));\n+// Changed in CWG 2094, which made volatile-qualified scalars trivially\n+// copyable.\n+SA(__is_trivially_copyable(volatile int));\n \n struct E1 {const int val;};\n SA(__is_trivially_copyable(E1));"}, {"sha": "6f93602c8c274aed6e4ad57cb810ffefa36dc894", "filename": "gcc/testsuite/g++.dg/ext/is_trivially_copyable.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_trivially_copyable.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_trivially_copyable.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_trivially_copyable.C?ref=be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f", "patch": "@@ -0,0 +1,16 @@\n+// CWG 2094 - volatile scalars are trivially copyable.\n+// PR c++/85679\n+// { dg-do compile { target c++11 } }\n+\n+#define SA(X) static_assert((X),#X)\n+\n+struct S{};\n+\n+SA(__is_trivially_copyable(S volatile));\n+SA(__is_trivially_copyable(S volatile[]));\n+SA(__is_trivially_copyable(S const volatile));\n+SA(__is_trivially_copyable(S const volatile[]));\n+SA(__is_trivially_copyable(int volatile));\n+SA(__is_trivially_copyable(int volatile[]));\n+SA(__is_trivially_copyable(int const volatile));\n+SA(__is_trivially_copyable(int const volatile[]));"}, {"sha": "19ba2355c432971925cd88ced5182f87964df775", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f", "patch": "@@ -1,3 +1,10 @@\n+2019-05-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tCWG 2094 - volatile scalars are trivially copyable.\n+\tPR c++/85679\n+\t* testsuite/20_util/is_trivially_copyable/value.cc: Change the expected\n+\tresult for volatile int.\n+\n 2019-05-20  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/17_intro/names.cc: Do not check 'ptr' on Solaris."}, {"sha": "022f0c0b248732893e41157bb3b3c072337d503d", "filename": "libstdc++-v3/testsuite/20_util/is_trivially_copyable/value.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_trivially_copyable%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_trivially_copyable%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_trivially_copyable%2Fvalue.cc?ref=be9e458d8bed984fe13bd7a6daf76bb34ef3ed7f", "patch": "@@ -46,8 +46,10 @@ void test01()\n \n   static_assert(test_property<is_trivially_copyable, \n \t\tint>(true), \"\");\n+  // Changed in CWG 2094, which made volatile-qualified scalars trivially\n+  // copyable.\n   static_assert(test_property<is_trivially_copyable,\n-\t\tvolatile int>(false), \"\");\n+\t\tvolatile int>(true), \"\");\n   static_assert(test_property<is_trivially_copyable, \n \t\tTType>(true), \"\");\n   static_assert(test_property<is_trivially_copyable, "}]}