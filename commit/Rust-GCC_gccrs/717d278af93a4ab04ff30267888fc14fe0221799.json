{"sha": "717d278af93a4ab04ff30267888fc14fe0221799", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE3ZDI3OGFmOTNhNGFiMDRmZjMwMjY3ODg4ZmMxNGZlMDIyMTc5OQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2021-05-05T08:41:41Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2021-05-06T14:53:58Z"}, "message": "ipa-sra: Do not bail out when callers cannot be cloned\n\nIPA-SRA fails to produce (very simple) edge summaries when a caller\ncannot be cloned or its signature cannot be changed which makes it\nless powerful for no good reason.  This patch fixes that problem.\n\ngcc/ChangeLog:\n\n2021-04-12  Martin Jambor  <mjambor@suse.cz>\n\n\t* ipa-sra.c (ipa_sra_dump_all_summaries): Dump edge summaries even\n\twhen there is no function summary.\n\t(ipa_sra_summarize_function): produce edge summaries even when\n\tbailing out early.\n\ngcc/testsuite/ChangeLog:\n\n2021-04-12  Martin Jambor  <mjambor@suse.cz>\n\n\t* gcc.dg/ipa/ipa-sra-1.c (main): Revert change done by\n\t05193687dde, make the argv again pointer to an array.", "tree": {"sha": "1d2601279fe43004293dd3ad06779e9ab2a3a6c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d2601279fe43004293dd3ad06779e9ab2a3a6c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/717d278af93a4ab04ff30267888fc14fe0221799", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717d278af93a4ab04ff30267888fc14fe0221799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717d278af93a4ab04ff30267888fc14fe0221799", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717d278af93a4ab04ff30267888fc14fe0221799/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "861c6411ea70f18bf04c0b276a03af04636b9b3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861c6411ea70f18bf04c0b276a03af04636b9b3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/861c6411ea70f18bf04c0b276a03af04636b9b3a"}], "stats": {"total": 45, "additions": 24, "deletions": 21}, "files": [{"sha": "3f90d4d81b681534c88ff34763eaf8e9a9b077b0", "filename": "gcc/ipa-sra.c", "status": "modified", "additions": 23, "deletions": 20, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717d278af93a4ab04ff30267888fc14fe0221799/gcc%2Fipa-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717d278af93a4ab04ff30267888fc14fe0221799/gcc%2Fipa-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-sra.c?ref=717d278af93a4ab04ff30267888fc14fe0221799", "patch": "@@ -2795,27 +2795,27 @@ ipa_sra_dump_all_summaries (FILE *f)\n \n       isra_func_summary *ifs = func_sums->get (node);\n       if (!ifs)\n+\tfprintf (f, \"  Function does not have any associated IPA-SRA \"\n+\t\t \"summary\\n\");\n+      else\n \t{\n-\t  fprintf (f, \"  Function does not have any associated IPA-SRA \"\n-\t\t   \"summary\\n\");\n-\t  continue;\n-\t}\n-      if (!ifs->m_candidate)\n-\t{\n-\t  fprintf (f, \"  Not a candidate function\\n\");\n-\t  continue;\n+\t  if (!ifs->m_candidate)\n+\t    {\n+\t      fprintf (f, \"  Not a candidate function\\n\");\n+\t      continue;\n+\t    }\n+\t  if (ifs->m_returns_value)\n+\t    fprintf (f, \"  Returns value\\n\");\n+\t  if (vec_safe_is_empty (ifs->m_parameters))\n+\t    fprintf (f, \"  No parameter information. \\n\");\n+\t  else\n+\t    for (unsigned i = 0; i < ifs->m_parameters->length (); ++i)\n+\t      {\n+\t\tfprintf (f, \"  Descriptor for parameter %i:\\n\", i);\n+\t\tdump_isra_param_descriptor (f, &(*ifs->m_parameters)[i]);\n+\t      }\n+\t  fprintf (f, \"\\n\");\n \t}\n-      if (ifs->m_returns_value)\n-\t  fprintf (f, \"  Returns value\\n\");\n-      if (vec_safe_is_empty (ifs->m_parameters))\n-\tfprintf (f, \"  No parameter information. \\n\");\n-      else\n-\tfor (unsigned i = 0; i < ifs->m_parameters->length (); ++i)\n-\t  {\n-\t    fprintf (f, \"  Descriptor for parameter %i:\\n\", i);\n-\t    dump_isra_param_descriptor (f, &(*ifs->m_parameters)[i]);\n-\t  }\n-      fprintf (f, \"\\n\");\n \n       struct cgraph_edge *cs;\n       for (cs = node->callees; cs; cs = cs->next_callee)\n@@ -4063,7 +4063,10 @@ ipa_sra_summarize_function (cgraph_node *node)\n     fprintf (dump_file, \"Creating summary for %s/%i:\\n\", node->name (),\n \t     node->order);\n   if (!ipa_sra_preliminary_function_checks (node))\n-    return;\n+    {\n+      isra_analyze_all_outgoing_calls (node);\n+      return;\n+    }\n   gcc_obstack_init (&gensum_obstack);\n   isra_func_summary *ifs = func_sums->get_create (node);\n   ifs->m_candidate = true;"}, {"sha": "4a22e3978f9233ae6635de8cce3070846b5466a5", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-sra-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717d278af93a4ab04ff30267888fc14fe0221799/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-sra-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717d278af93a4ab04ff30267888fc14fe0221799/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-sra-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-sra-1.c?ref=717d278af93a4ab04ff30267888fc14fe0221799", "patch": "@@ -24,7 +24,7 @@ ox (struct bovid cow)\n }\n \n int\n-main (int argc, char **argv)\n+main (int argc, char *argv[])\n {\n   struct bovid cow;\n "}]}