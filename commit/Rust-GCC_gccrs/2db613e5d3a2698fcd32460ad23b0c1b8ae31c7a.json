{"sha": "2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRiNjEzZTVkM2EyNjk4ZmNkMzI0NjBhZDIzYjBjMWI4YWUzMWM3YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-10-04T21:14:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-10-04T21:14:18Z"}, "message": "PR c++/77775 - misoptimization of PMF comparison\n\n\t* constexpr.c (cxx_eval_component_reference): Use name matching\n\tfor PMFs.\n\nFrom-SVN: r240757", "tree": {"sha": "1a5e32cc80f2acb985b965737519edc6c20b1820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a5e32cc80f2acb985b965737519edc6c20b1820"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76b294d48d6c375b76f1695ea56c960d5473439b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76b294d48d6c375b76f1695ea56c960d5473439b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76b294d48d6c375b76f1695ea56c960d5473439b"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "b7a57e072da300a962933f75effed78ec8163c5a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a", "patch": "@@ -1,3 +1,9 @@\n+2016-09-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/77775\n+\t* constexpr.c (cxx_eval_component_reference): Use name matching\n+\tfor PMFs.\n+\n 2016-10-04  Jason Merrill  <jason@redhat.com>\n \n \tImplement P0091R2, Template argument deduction for class templates."}, {"sha": "4acbb2600b4b5c293ea11a71450cf291c6529668", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a", "patch": "@@ -2315,9 +2315,13 @@ cxx_eval_component_reference (const constexpr_ctx *ctx, tree t,\n     }\n   if (*non_constant_p)\n     return t;\n+  bool pmf = TYPE_PTRMEMFUNC_P (TREE_TYPE (whole));\n   FOR_EACH_CONSTRUCTOR_ELT (CONSTRUCTOR_ELTS (whole), i, field, value)\n     {\n-      if (field == part)\n+      /* Use name match for PMF fields, as a variant will have a\n+\t different FIELD_DECL with a different type.  */\n+      if (pmf ? DECL_NAME (field) == DECL_NAME (part)\n+\t  : field == part)\n \t{\n \t  if (value)\n \t    return value;\n@@ -2342,6 +2346,8 @@ cxx_eval_component_reference (const constexpr_ctx *ctx, tree t,\n   if (is_really_empty_class (TREE_TYPE (t)))\n     return build_constructor (TREE_TYPE (t), NULL);\n \n+  gcc_assert (DECL_CONTEXT (part) == TYPE_MAIN_VARIANT (TREE_TYPE (whole)));\n+\n   if (CONSTRUCTOR_NO_IMPLICIT_ZERO (whole))\n     {\n       /* 'whole' is part of the aggregate initializer we're currently"}, {"sha": "b6a7935746f222b3016852002d85901e23420acc", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-pmf1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-pmf1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-pmf1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-pmf1.C?ref=2db613e5d3a2698fcd32460ad23b0c1b8ae31c7a", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/77775\n+// { dg-options -fdump-tree-gimple }\n+// { dg-final { scan-tree-dump \"== viewAdded\" \"gimple\" { target c++11 } } }\n+\n+namespace Sublime {\n+struct View;\n+struct AreaIndex;\n+struct Area {\n+  void qt_static_metacall();\n+  void viewAdded(AreaIndex *, View *);\n+};\n+}\n+void Sublime::Area::qt_static_metacall() {\n+  typedef void (Area::*_t)(AreaIndex *, View *);\n+  if (*reinterpret_cast<_t *>(1) == _t(&Area::viewAdded))\n+    __builtin_abort();\n+}"}]}