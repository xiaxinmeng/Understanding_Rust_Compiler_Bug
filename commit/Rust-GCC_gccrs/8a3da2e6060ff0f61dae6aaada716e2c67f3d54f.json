{"sha": "8a3da2e6060ff0f61dae6aaada716e2c67f3d54f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEzZGEyZTYwNjBmZjBmNjFkYWU2YWFhZGE3MTZlMmM2N2YzZDU0Zg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-10-09T09:34:15Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-10-12T10:55:17Z"}, "message": "PR target/97349 AArch64: Incorrect types for some Neon vdupq_n_<...> intrinsics\n\nThis patch fixes the PR by adjusting the input types of the intrinsic\nprototypes to the ones mandated by ACLE\nTurns out the tests in the testsuite were already using the correct\nones, but implicit conversions hid the bug...\n\nBootstrapped and tested on aarch64-none-linux-gnu.\n\ngcc/\n\tPR target/97349\n\t* config/aarch64/arm_neon.h (vdupq_n_p8, vdupq_n_p16,\n\tvdupq_n_p64, vdupq_n_s8, vdupq_n_s16, vdupq_n_u8, vdupq_n_u16):\n\tFix argument type.\n\ngcc/testsuite/\n\tPR target/97349\n\t* gcc.target/aarch64/simd/pr97349.c: New test.", "tree": {"sha": "13cc03719a90225864301b2a72c642b667e6ac5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13cc03719a90225864301b2a72c642b667e6ac5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a3da2e6060ff0f61dae6aaada716e2c67f3d54f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a3da2e6060ff0f61dae6aaada716e2c67f3d54f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a3da2e6060ff0f61dae6aaada716e2c67f3d54f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a3da2e6060ff0f61dae6aaada716e2c67f3d54f/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1a10a0b8c4e161070f88de3af9d20f9f866a23f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1a10a0b8c4e161070f88de3af9d20f9f866a23f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1a10a0b8c4e161070f88de3af9d20f9f866a23f"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "85c0d62ca128bc1019164c41724e1d140478fed3", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a3da2e6060ff0f61dae6aaada716e2c67f3d54f/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a3da2e6060ff0f61dae6aaada716e2c67f3d54f/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=8a3da2e6060ff0f61dae6aaada716e2c67f3d54f", "patch": "@@ -15615,37 +15615,37 @@ vdupq_n_f64 (float64_t __a)\n \n __extension__ extern __inline poly8x16_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-vdupq_n_p8 (uint32_t __a)\n+vdupq_n_p8 (poly8_t __a)\n {\n   return (poly8x16_t) {__a, __a, __a, __a, __a, __a, __a, __a,\n \t\t       __a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline poly16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-vdupq_n_p16 (uint32_t __a)\n+vdupq_n_p16 (poly16_t __a)\n {\n   return (poly16x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline poly64x2_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-vdupq_n_p64 (uint64_t __a)\n+vdupq_n_p64 (poly64_t __a)\n {\n   return (poly64x2_t) {__a, __a};\n }\n \n __extension__ extern __inline int8x16_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-vdupq_n_s8 (int32_t __a)\n+vdupq_n_s8 (int8_t __a)\n {\n   return (int8x16_t) {__a, __a, __a, __a, __a, __a, __a, __a,\n \t\t      __a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline int16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-vdupq_n_s16 (int32_t __a)\n+vdupq_n_s16 (int16_t __a)\n {\n   return (int16x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};\n }\n@@ -15666,15 +15666,15 @@ vdupq_n_s64 (int64_t __a)\n \n __extension__ extern __inline uint8x16_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-vdupq_n_u8 (uint32_t __a)\n+vdupq_n_u8 (uint8_t __a)\n {\n   return (uint8x16_t) {__a, __a, __a, __a, __a, __a, __a, __a,\n \t\t       __a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline uint16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-vdupq_n_u16 (uint32_t __a)\n+vdupq_n_u16 (uint16_t __a)\n {\n   return (uint16x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};\n }"}, {"sha": "026767a7243e31be886ea05cdb267fbcc0fa6ff4", "filename": "gcc/testsuite/gcc.target/aarch64/simd/pr97349.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a3da2e6060ff0f61dae6aaada716e2c67f3d54f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fpr97349.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a3da2e6060ff0f61dae6aaada716e2c67f3d54f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fpr97349.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fpr97349.c?ref=8a3da2e6060ff0f61dae6aaada716e2c67f3d54f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+\n+#include <arm_neon.h>\n+\n+poly16x8_t  (*fp0)(poly16_t) = vdupq_n_p16;\n+poly64x2_t  (*fp1)(poly64_t) = vdupq_n_p64;\n+poly8x16_t  (*fp2)(poly8_t)  = vdupq_n_p8;\n+int16x8_t   (*fp3)(int16_t)  = vdupq_n_s16;\n+int8x16_t   (*fp4)(int8_t)   = vdupq_n_s8;\n+uint16x8_t  (*fp5)(uint16_t) = vdupq_n_u16;\n+uint8x16_t  (*fp6)(uint8_t)  = vdupq_n_u8;\n+"}]}