{"sha": "3345e74299687de6144b87c0632018cafd4ccf3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM0NWU3NDI5OTY4N2RlNjE0NGI4N2MwNjMyMDE4Y2FmZDRjY2YzYg==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-06-20T14:15:16Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-06-20T14:15:16Z"}, "message": "PR fortran/95707 - ICE in finish_equivalences, at fortran/trans-common.c:1319\n\nWith submodules and equivalence declarations, name mangling may result in\nlong internal symbols overflowing internal buffers.  We now check that\nwe do not exceed the enlarged buffer sizes.\n\ngcc/fortran/\n\tPR fortran/95707\n\t* gfortran.h (gfc_common_head): Enlarge buffer.\n\t* trans-common.c (gfc_sym_mangled_common_id): Enlarge temporary\n\tbuffers, and add check on length on mangled name to prevent\n\toverflow.", "tree": {"sha": "ae7ae1f8af38ba7f0d9e29f3cabbd3624f69ccf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae7ae1f8af38ba7f0d9e29f3cabbd3624f69ccf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3345e74299687de6144b87c0632018cafd4ccf3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3345e74299687de6144b87c0632018cafd4ccf3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3345e74299687de6144b87c0632018cafd4ccf3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3345e74299687de6144b87c0632018cafd4ccf3b/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd6546ac0e8fb2f4ff2a4bb2db2363ca02bdb7ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6546ac0e8fb2f4ff2a4bb2db2363ca02bdb7ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd6546ac0e8fb2f4ff2a4bb2db2363ca02bdb7ba"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "836e0b3063dbb66fffa51a414f0b2dfc42d46c17", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3345e74299687de6144b87c0632018cafd4ccf3b/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3345e74299687de6144b87c0632018cafd4ccf3b/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=3345e74299687de6144b87c0632018cafd4ccf3b", "patch": "@@ -1677,8 +1677,8 @@ typedef struct gfc_common_head\n   char use_assoc, saved, threadprivate;\n   unsigned char omp_declare_target : 1;\n   unsigned char omp_declare_target_link : 1;\n-  /* Provide sufficient space to hold \"symbol.eq.1234567890\".  */\n-  char name[GFC_MAX_SYMBOL_LEN + 1 + 14];\n+  /* Provide sufficient space to hold \"symbol.symbol.eq.1234567890\".  */\n+  char name[2*GFC_MAX_SYMBOL_LEN + 1 + 14 + 1];\n   struct gfc_symbol *head;\n   const char* binding_label;\n   int is_bind_c;"}, {"sha": "c6383fc23529e23f4d942baadb0d9882e640e1d9", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3345e74299687de6144b87c0632018cafd4ccf3b/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3345e74299687de6144b87c0632018cafd4ccf3b/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=3345e74299687de6144b87c0632018cafd4ccf3b", "patch": "@@ -242,11 +242,13 @@ static tree\n gfc_sym_mangled_common_id (gfc_common_head *com)\n {\n   int has_underscore;\n-  /* Provide sufficient space to hold \"symbol.eq.1234567890__\".  */\n-  char mangled_name[GFC_MAX_MANGLED_SYMBOL_LEN + 1 + 16];\n-  char name[GFC_MAX_SYMBOL_LEN + 1 + 16];\n+  /* Provide sufficient space to hold \"symbol.symbol.eq.1234567890__\".  */\n+  char mangled_name[2*GFC_MAX_MANGLED_SYMBOL_LEN + 1 + 16 + 1];\n+  char name[sizeof (mangled_name) - 2];\n \n   /* Get the name out of the common block pointer.  */\n+  size_t len = strlen (com->name);\n+  gcc_assert (len < sizeof (name));\n   strcpy (name, com->name);\n \n   /* If we're suppose to do a bind(c).  */"}, {"sha": "3279a6320cfae7b945fcbc24a4b4d358b95ac3d4", "filename": "gcc/testsuite/gfortran.dg/pr95707.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3345e74299687de6144b87c0632018cafd4ccf3b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95707.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3345e74299687de6144b87c0632018cafd4ccf3b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95707.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95707.f90?ref=3345e74299687de6144b87c0632018cafd4ccf3b", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do compile }\n+! { dg-options \"-fsecond-underscore\" }\n+! PR fortran/95707 - ICE in finish_equivalences, at fortran/trans-common.c:1319\n+\n+module m2345678901234567890123456789012345678901234567890123456789_123\n+  interface\n+     module subroutine s2345678901234567890123456789012345678901234567890123456789_123\n+     end\n+  end interface\n+end\n+submodule(m2345678901234567890123456789012345678901234567890123456789_123) &\n+          n2345678901234567890123456789012345678901234567890123456789_123\n+  real :: a(4), u(3,2)\n+  real :: b(4), v(4,2)\n+  equivalence (a(1),u(1,1)), (b(1),v(1,1))\n+end"}]}