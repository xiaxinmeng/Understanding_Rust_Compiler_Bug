{"sha": "2b9f972f5835e362de8040cf6ceb2c231ab09120", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI5Zjk3MmY1ODM1ZTM2MmRlODA0MGNmNmNlYjJjMjMxYWIwOTEyMA==", "commit": {"author": {"name": "Mumit Khan", "email": "khan@xraylith.wisc.edu", "date": "1999-02-09T23:52:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-02-09T23:52:06Z"}, "message": "cygwin.h (SUBTARGET_OVERRIDE_OPTIONS): New macro to ignore fpic/fPIC for windows32 targets.\n\n\t* i386/cygwin.h (SUBTARGET_OVERRIDE_OPTIONS): New macro to ignore\n\tfpic/fPIC for windows32 targets.\n\t* i386/xm-cygwin.h (GET_ENV_PATH_LIST): Replace '\\\\' in windows32\n\tpaths with '/'.\n\t* i386/mingw32.h (CPP_SPEC): Define.\n\t(CPP_PREDEFINES): Add MINGW32 version id.\n\t* i386/crtdll.h (CPP_PREDEFINES): Likewise.\n\nFrom-SVN: r25121", "tree": {"sha": "831a4ecca51800bd58326c80f3fdd0517625144a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/831a4ecca51800bd58326c80f3fdd0517625144a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b9f972f5835e362de8040cf6ceb2c231ab09120", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b9f972f5835e362de8040cf6ceb2c231ab09120", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b9f972f5835e362de8040cf6ceb2c231ab09120", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b9f972f5835e362de8040cf6ceb2c231ab09120/comments", "author": null, "committer": null, "parents": [{"sha": "82281fc2c1ac0709fe8ee1e425e647355b733a74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82281fc2c1ac0709fe8ee1e425e647355b733a74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82281fc2c1ac0709fe8ee1e425e647355b733a74"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "6db6024724b8eec2e5fc36a6ba8e4debdc724248", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b9f972f5835e362de8040cf6ceb2c231ab09120/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b9f972f5835e362de8040cf6ceb2c231ab09120/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b9f972f5835e362de8040cf6ceb2c231ab09120", "patch": "@@ -7,6 +7,14 @@ Tue Feb  9 17:27:29 GMT 1999  Nathan Sidwell  <nathan@acm.org>\n \n Tue Feb  9 16:52:22 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \n+\t* i386/cygwin.h (SUBTARGET_OVERRIDE_OPTIONS): New macro to ignore \n+\tfpic/fPIC for windows32 targets.\n+\t* i386/xm-cygwin.h (GET_ENV_PATH_LIST): Replace '\\\\' in windows32\n+\tpaths with '/'.\n+\t* i386/mingw32.h (CPP_SPEC): Define.\n+\t(CPP_PREDEFINES): Add MINGW32 version id.\n+\t* i386/crtdll.h (CPP_PREDEFINES): Likewise.\n+\n \t* Makefile.in (collect2$(exeext)): Delete redundant dependency and\n \tadd missing exeext to target.\n "}, {"sha": "4334da0bd91cb2de5a707c01583c9cf530687946", "filename": "gcc/config/i386/crtdll.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b9f972f5835e362de8040cf6ceb2c231ab09120/gcc%2Fconfig%2Fi386%2Fcrtdll.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b9f972f5835e362de8040cf6ceb2c231ab09120/gcc%2Fconfig%2Fi386%2Fcrtdll.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcrtdll.h?ref=2b9f972f5835e362de8040cf6ceb2c231ab09120", "patch": "@@ -3,7 +3,7 @@\n    as distinct from winnt.h, which is used to build GCC for use with a\n    windows style library and tool set and uses the Microsoft tools.\n    This variant uses CRTDLL.DLL insted of MSVCRTDLL.DLL.\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -24,7 +24,7 @@ Boston, MA 02111-1307, USA. */\n \n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Di386 -D_WIN32 -DWIN32 -D__WIN32__ \\\n-  -D__MINGW32__ -DWINNT  -D_X86_=1 -D__STDC__=1\\\n+  -D__MINGW32__=0.2 -DWINNT  -D_X86_=1 -D__STDC__=1\\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   -D_stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\"}, {"sha": "1c235358cbfd8686c10436513f0bd70c2085a342", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b9f972f5835e362de8040cf6ceb2c231ab09120/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b9f972f5835e362de8040cf6ceb2c231ab09120/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=2b9f972f5835e362de8040cf6ceb2c231ab09120", "patch": "@@ -2,7 +2,7 @@\n    hosting on Windows NT 3.x, using a Unix style C library and tools,\n    as distinct from winnt.h, which is used to build GCC for use with a\n    windows style library and tool set and uses the Microsoft tools.\n-   Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -235,6 +235,20 @@ switch_to_section (section, decl) \t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\\\n   } while (0)\n \n+/* Don't allow flag_pic to propagate since gas may produce invalid code\n+   otherwise. */\n+\n+#undef  SUBTARGET_OVERRIDE_OPTIONS\n+#define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (flag_pic)\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      warning (\"-f%s ignored for target (all code is position independent)\",\\\n+\t       (flag_pic > 1) ? \"PIC\" : \"pic\");\t\t\t\t\\\n+      flag_pic = 0;\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+} while (0)\t\t\t\t\t\t\t\t\\\n+\n /* Define this macro if references to a symbol must be treated\n    differently depending on something about the variable or\n    function named by the symbol (such as what section it is in)."}, {"sha": "f8da4894ad072dacfd4ff1ed342a7c3b5b105543", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b9f972f5835e362de8040cf6ceb2c231ab09120/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b9f972f5835e362de8040cf6ceb2c231ab09120/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=2b9f972f5835e362de8040cf6ceb2c231ab09120", "patch": "@@ -2,7 +2,7 @@\n    hosting on Windows32, using GNU tools and the Windows32 API Library,\n    as distinct from winnt.h, which is used to build GCC for use with a\n    windows style library and tool set and uses the Microsoft tools.\n-   Copyright (C) 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1998, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -31,7 +31,7 @@ Boston, MA 02111-1307, USA. */\n    distinguish MSVC from CRTDLL runtime in mingw headers. */\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Di386 -D_WIN32 -DWIN32 -D__WIN32__ \\\n-  -D__MINGW32__ -D__MSVCRT__ -DWINNT  -D_X86_=1 -D__STDC__=1\\\n+  -D__MINGW32__=0.2 -D__MSVCRT__ -DWINNT  -D_X86_=1 -D__STDC__=1\\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   -D_stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\\n@@ -44,6 +44,9 @@ Boston, MA 02111-1307, USA. */\n \n #define STANDARD_INCLUDE_COMPONENT \"MINGW32\"\n \n+#undef CPP_SPEC\n+#define CPP_SPEC \"-remap %(cpp_cpu) %{posix:-D_POSIX_SOURCE}\"\n+\n /* For Windows applications, include more libraries, but always include\n    kernel32.  */\n #undef LIB_SPEC"}, {"sha": "e877665b47a06d0bacb676d32ab8a579ffa588d4", "filename": "gcc/config/i386/xm-cygwin.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b9f972f5835e362de8040cf6ceb2c231ab09120/gcc%2Fconfig%2Fi386%2Fxm-cygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b9f972f5835e362de8040cf6ceb2c231ab09120/gcc%2Fconfig%2Fi386%2Fxm-cygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-cygwin.h?ref=2b9f972f5835e362de8040cf6ceb2c231ab09120", "patch": "@@ -1,6 +1,6 @@\n /* Configuration for GNU C-compiler for hosting on Windows NT.\n    using a unix style C library.\n-   Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -47,9 +47,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n   if (_epath != NULL && *_epath != 0\t\t\t\t\t\\\n       && cygwin32_posix_path_list_p (_epath))\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n+      char *p;\t\t\t\t\t\t\t\t\\\n       _win32epath = (char *) xmalloc\t\t\t\t\t\\\n \t(cygwin32_posix_to_win32_path_list_buf_size (_epath));\t\t\\\n       cygwin32_posix_to_win32_path_list (_epath, _win32epath);\t\t\\\n+      for (p = _win32epath; p && *p; ++p)\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+\t  if (*p == '\\\\')\t\t\t\t\t\t\\\n+\t    *p = '/';\t\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   (VAR) = _win32epath;\t\t\t\t\t\t\t\\\n } while (0)"}]}