{"sha": "0b5ccc800e06364b31cec61c45aede13e6c68a58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI1Y2NjODAwZTA2MzY0YjMxY2VjNjFjNDVhZWRlMTNlNmM2OGE1OA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2018-11-06T10:42:05Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2018-11-06T10:42:05Z"}, "message": "Cherry-pick Solaris sanitizer fixes (PR sanitizer/80953)\n\n\tPR sanitizer/80953\n\t* sanitizer_common/sanitizer_internal_defs.h,\n\tsanitizer_common/sanitizer_platform_limits_solaris.h,\n\tsanitizer_common/sanitizer_procmaps_solaris.cc,\n\tsanitizer_common/sanitizer_solaris.cc: Cherry-pick compiler-rt\n\trevision 346153.\n\t* sanitizer_common/sanitizer_stacktrace.h,\n\tsanitizer_common/sanitizer_stacktrace_sparc.cc: Cherry-pick\n\tcompiler-rt revision 346155.\n\nFrom-SVN: r265836", "tree": {"sha": "4823738feeeda4151ec7d68b864b520d544e5efb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4823738feeeda4151ec7d68b864b520d544e5efb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b5ccc800e06364b31cec61c45aede13e6c68a58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5ccc800e06364b31cec61c45aede13e6c68a58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b5ccc800e06364b31cec61c45aede13e6c68a58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5ccc800e06364b31cec61c45aede13e6c68a58/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a98b4bfc3d952f0c5b71419a5eba51553dcc776", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a98b4bfc3d952f0c5b71419a5eba51553dcc776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a98b4bfc3d952f0c5b71419a5eba51553dcc776"}], "stats": {"total": 70, "additions": 48, "deletions": 22}, "files": [{"sha": "a9bbf889cbc8ae165a809d8f7f99a3cae5ca11a0", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=0b5ccc800e06364b31cec61c45aede13e6c68a58", "patch": "@@ -1,3 +1,15 @@\n+2018-11-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR sanitizer/80953\n+\t* sanitizer_common/sanitizer_internal_defs.h,\n+\tsanitizer_common/sanitizer_platform_limits_solaris.h,\n+\tsanitizer_common/sanitizer_procmaps_solaris.cc,\n+\tsanitizer_common/sanitizer_solaris.cc: Cherry-pick compiler-rt\n+\trevision 346153.\n+\t* sanitizer_common/sanitizer_stacktrace.h,\n+\tsanitizer_common/sanitizer_stacktrace_sparc.cc: Cherry-pick\n+\tcompiler-rt revision 346155.\n+\n 2018-11-05  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* LOCAL_PATCHES: Add r258525."}, {"sha": "26bea8bed91f98734d3758ce1b68263a2556af8c", "filename": "libsanitizer/sanitizer_common/sanitizer_internal_defs.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2Fsanitizer_common%2Fsanitizer_internal_defs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2Fsanitizer_common%2Fsanitizer_internal_defs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_internal_defs.h?ref=0b5ccc800e06364b31cec61c45aede13e6c68a58", "patch": "@@ -170,6 +170,7 @@ typedef int pid_t;\n \n #if SANITIZER_FREEBSD || SANITIZER_NETBSD || \\\n     SANITIZER_OPENBSD || SANITIZER_MAC || \\\n+    (SANITIZER_SOLARIS && (defined(_LP64) || _FILE_OFFSET_BITS == 64)) || \\\n     (SANITIZER_LINUX && defined(__x86_64__))\n typedef u64 OFF_T;\n #else"}, {"sha": "97788d61d62f9ed3ab6b5a04b2367a4084300bdc", "filename": "libsanitizer/sanitizer_common/sanitizer_platform_limits_solaris.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_solaris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_solaris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_solaris.h?ref=0b5ccc800e06364b31cec61c45aede13e6c68a58", "patch": "@@ -208,8 +208,7 @@ struct __sanitizer_cmsghdr {\n   int cmsg_type;\n };\n \n-#if SANITIZER_SOLARIS32 && 0\n-// FIXME: need to deal with large file and non-large file cases\n+#if SANITIZER_SOLARIS && (defined(_LP64) || _FILE_OFFSET_BITS == 64)\n struct __sanitizer_dirent {\n   unsigned long long d_ino;\n   long long d_off;"}, {"sha": "9e5e37e6b9dcd28e0a9e1ac9817f921dd5da40f6", "filename": "libsanitizer/sanitizer_common/sanitizer_procmaps_solaris.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2Fsanitizer_common%2Fsanitizer_procmaps_solaris.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2Fsanitizer_common%2Fsanitizer_procmaps_solaris.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_procmaps_solaris.cc?ref=0b5ccc800e06364b31cec61c45aede13e6c68a58", "patch": "@@ -13,6 +13,8 @@\n #include \"sanitizer_common.h\"\n #include \"sanitizer_procmaps.h\"\n \n+// Before Solaris 11.4, <procfs.h> doesn't work in a largefile environment.\n+#undef _FILE_OFFSET_BITS\n #include <procfs.h>\n #include <limits.h>\n "}, {"sha": "9d0c3d93d44d74f2fdf8dbc8a9348c171277d0a6", "filename": "libsanitizer/sanitizer_common/sanitizer_solaris.cc", "status": "modified", "additions": 28, "deletions": 17, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2Fsanitizer_common%2Fsanitizer_solaris.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2Fsanitizer_common%2Fsanitizer_solaris.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_solaris.cc?ref=0b5ccc800e06364b31cec61c45aede13e6c68a58", "patch": "@@ -48,10 +48,21 @@ namespace __sanitizer {\n   DECLARE__REAL(ret_type, func, __VA_ARGS__); \\\n   ret_type internal_ ## func(__VA_ARGS__)\n \n+#if !defined(_LP64) && _FILE_OFFSET_BITS == 64\n+#define _REAL64(func) _ ## func ## 64\n+#else\n+#define _REAL64(func) _REAL(func)\n+#endif\n+#define DECLARE__REAL64(ret_type, func, ...) \\\n+  extern \"C\" ret_type _REAL64(func)(__VA_ARGS__)\n+#define DECLARE__REAL_AND_INTERNAL64(ret_type, func, ...) \\\n+  DECLARE__REAL64(ret_type, func, __VA_ARGS__); \\\n+  ret_type internal_ ## func(__VA_ARGS__)\n+\n // ---------------------- sanitizer_libc.h\n-DECLARE__REAL_AND_INTERNAL(uptr, mmap, void *addr, uptr /*size_t*/ length,\n-                           int prot, int flags, int fd, OFF_T offset) {\n-  return (uptr)_REAL(mmap)(addr, length, prot, flags, fd, offset);\n+DECLARE__REAL_AND_INTERNAL64(uptr, mmap, void *addr, uptr /*size_t*/ length,\n+                             int prot, int flags, int fd, OFF_T offset) {\n+  return (uptr)_REAL64(mmap)(addr, length, prot, flags, fd, offset);\n }\n \n DECLARE__REAL_AND_INTERNAL(uptr, munmap, void *addr, uptr length) {\n@@ -66,14 +77,14 @@ DECLARE__REAL_AND_INTERNAL(uptr, close, fd_t fd) {\n   return _REAL(close)(fd);\n }\n \n-extern \"C\" int _REAL(open)(const char *, int, ...);\n+extern \"C\" int _REAL64(open)(const char *, int, ...);\n \n uptr internal_open(const char *filename, int flags) {\n-  return _REAL(open)(filename, flags);\n+  return _REAL64(open)(filename, flags);\n }\n \n uptr internal_open(const char *filename, int flags, u32 mode) {\n-  return _REAL(open)(filename, flags, mode);\n+  return _REAL64(open)(filename, flags, mode);\n }\n \n uptr OpenFile(const char *filename, bool write) {\n@@ -94,16 +105,16 @@ DECLARE__REAL_AND_INTERNAL(uptr, ftruncate, fd_t fd, uptr size) {\n   return ftruncate(fd, size);\n }\n \n-DECLARE__REAL_AND_INTERNAL(uptr, stat, const char *path, void *buf) {\n-  return _REAL(stat)(path, (struct stat *)buf);\n+DECLARE__REAL_AND_INTERNAL64(uptr, stat, const char *path, void *buf) {\n+  return _REAL64(stat)(path, (struct stat *)buf);\n }\n \n-DECLARE__REAL_AND_INTERNAL(uptr, lstat, const char *path, void *buf) {\n-  return _REAL(lstat)(path, (struct stat *)buf);\n+DECLARE__REAL_AND_INTERNAL64(uptr, lstat, const char *path, void *buf) {\n+  return _REAL64(lstat)(path, (struct stat *)buf);\n }\n \n-DECLARE__REAL_AND_INTERNAL(uptr, fstat, fd_t fd, void *buf) {\n-  return _REAL(fstat)(fd, (struct stat *)buf);\n+DECLARE__REAL_AND_INTERNAL64(uptr, fstat, fd_t fd, void *buf) {\n+  return _REAL64(fstat)(fd, (struct stat *)buf);\n }\n \n uptr internal_filesize(fd_t fd) {\n@@ -153,13 +164,13 @@ DECLARE__REAL_AND_INTERNAL(uptr, getpid, void) {\n }\n \n // FIXME: This might be wrong: _getdents doesn't take a struct linux_dirent *.\n-DECLARE__REAL_AND_INTERNAL(uptr, getdents, fd_t fd, struct linux_dirent *dirp,\n-                           unsigned int count) {\n-  return _REAL(getdents)(fd, dirp, count);\n+DECLARE__REAL_AND_INTERNAL64(uptr, getdents, fd_t fd, struct linux_dirent *dirp,\n+                             unsigned int count) {\n+  return _REAL64(getdents)(fd, dirp, count);\n }\n \n-DECLARE__REAL_AND_INTERNAL(uptr, lseek, fd_t fd, OFF_T offset, int whence) {\n-  return _REAL(lseek)(fd, offset, whence);\n+DECLARE__REAL_AND_INTERNAL64(uptr, lseek, fd_t fd, OFF_T offset, int whence) {\n+  return _REAL64(lseek)(fd, offset, whence);\n }\n \n // FIXME: This might be wrong: _sigfillset doesn't take a"}, {"sha": "7f3756c2cba816e1892a83fc041192369aad14fd", "filename": "libsanitizer/sanitizer_common/sanitizer_stacktrace.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace.h?ref=0b5ccc800e06364b31cec61c45aede13e6c68a58", "patch": "@@ -17,7 +17,7 @@ namespace __sanitizer {\n \n static const u32 kStackTraceMax = 256;\n \n-#if SANITIZER_LINUX &&  (defined(__sparc__) || defined(__mips__))\n+#if defined(__sparc__) || (SANITIZER_LINUX && defined(__mips__))\n # define SANITIZER_CAN_FAST_UNWIND 0\n #elif SANITIZER_WINDOWS\n # define SANITIZER_CAN_FAST_UNWIND 0"}, {"sha": "7e7017bb1b1d9a9afdad52ecd97579516872dd25", "filename": "libsanitizer/sanitizer_common/sanitizer_stacktrace_sparc.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace_sparc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5ccc800e06364b31cec61c45aede13e6c68a58/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace_sparc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace_sparc.cc?ref=0b5ccc800e06364b31cec61c45aede13e6c68a58", "patch": "@@ -13,7 +13,7 @@\n \n // This file is ported to Sparc v8, but it should be easy to port to\n // Sparc v9.\n-#if defined(__sparcv8__)\n+#if defined(__sparcv8__) || defined(__sparcv8) || defined(__sparc_v8__)\n \n #include \"sanitizer_common.h\"\n #include \"sanitizer_stacktrace.h\"\n@@ -53,4 +53,5 @@ void BufferedStackTrace::FastUnwindStack(uptr pc, uptr bp, uptr stack_top,\n \n }  // namespace __sanitizer\n \n-#endif  // !defined(__sparcv8__)\n+#endif  // !defined(__sparcv8__) && !defined(__sparcv8) &&\n+        // !defined(__sparc_v8__)"}]}