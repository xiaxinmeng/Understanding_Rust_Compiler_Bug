{"sha": "8199eea14f1ab32d805cc4be98ecfb5424a78671", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE5OWVlYTE0ZjFhYjMyZDgwNWNjNGJlOThlY2ZiNTQyNGE3ODY3MQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-05-18T18:51:08Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-05-18T18:51:08Z"}, "message": "re PR fortran/48700 (memory leak with MOVE_ALLOC)\n\n2011-05-18  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/48700\n\t* trans-intrinsic.c (gfc_conv_intrinsic_move_alloc): Deallocate 'TO'\n\targument to avoid memory leaks.\n\n\n2011-05-18  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/48700\n\t* gfortran.dg/move_alloc_4.f90: New.\n\nFrom-SVN: r173874", "tree": {"sha": "ad7ecddf948f98d5f55288d89f5c8fa76fad0fd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad7ecddf948f98d5f55288d89f5c8fa76fad0fd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8199eea14f1ab32d805cc4be98ecfb5424a78671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8199eea14f1ab32d805cc4be98ecfb5424a78671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8199eea14f1ab32d805cc4be98ecfb5424a78671", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8199eea14f1ab32d805cc4be98ecfb5424a78671/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5ee67520324dd4185e13374613b55970cfe5169", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5ee67520324dd4185e13374613b55970cfe5169", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5ee67520324dd4185e13374613b55970cfe5169"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "3cfaa0d4245709802855677e302462f7b80be8a2", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8199eea14f1ab32d805cc4be98ecfb5424a78671/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8199eea14f1ab32d805cc4be98ecfb5424a78671/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=8199eea14f1ab32d805cc4be98ecfb5424a78671", "patch": "@@ -6958,15 +6958,28 @@ gfc_conv_intrinsic_move_alloc (gfc_code *code)\n   if (code->ext.actual->expr->rank == 0)\n     {\n       /* Scalar arguments: Generate pointer assignments.  */\n-      gfc_expr *from, *to;\n+      gfc_expr *from, *to, *deal;\n       stmtblock_t block;\n       tree tmp;\n+      gfc_se se;\n \n       from = code->ext.actual->expr;\n       to = code->ext.actual->next->expr;\n \n       gfc_start_block (&block);\n \n+      /* Deallocate 'TO' argument.  */\n+      gfc_init_se (&se, NULL);\n+      se.want_pointer = 1;\n+      deal = gfc_copy_expr (to);\n+      if (deal->ts.type == BT_CLASS)\n+\tgfc_add_data_component (deal);\n+      gfc_conv_expr (&se, deal);\n+      tmp = gfc_deallocate_scalar_with_status (se.expr, NULL, true,\n+\t\t\t\t\t       deal, deal->ts);\n+      gfc_add_expr_to_block (&block, tmp);\n+      gfc_free_expr (deal);\n+\n       if (to->ts.type == BT_CLASS)\n \ttmp = gfc_trans_class_assign (to, from, EXEC_POINTER_ASSIGN);\n       else"}, {"sha": "1f5deed60feebb71be3f3174a7045837ad389752", "filename": "gcc/testsuite/gfortran.dg/move_alloc_4.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8199eea14f1ab32d805cc4be98ecfb5424a78671/gcc%2Ftestsuite%2Fgfortran.dg%2Fmove_alloc_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8199eea14f1ab32d805cc4be98ecfb5424a78671/gcc%2Ftestsuite%2Fgfortran.dg%2Fmove_alloc_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmove_alloc_4.f90?ref=8199eea14f1ab32d805cc4be98ecfb5424a78671", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do run }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR 48700: memory leak with MOVE_ALLOC\n+!\n+! Contributed by Salvatore Filippone <sfilippone@uniroma2.it>\n+\n+program testmv3\n+  type bar\n+    integer, allocatable  :: ia(:), ja(:)\n+  end type\n+\n+  type(bar), allocatable :: sm,sm2\n+\n+  allocate(sm)\n+  allocate(sm%ia(10),sm%ja(10))\n+\n+  call move_alloc(sm2,sm)\n+\n+end program testmv3 \n+\n+! { dg-final { scan-tree-dump-times \"__builtin_free\" 9 \"original\" } }"}]}