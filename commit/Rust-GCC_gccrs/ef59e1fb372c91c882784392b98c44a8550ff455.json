{"sha": "ef59e1fb372c91c882784392b98c44a8550ff455", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY1OWUxZmIzNzJjOTFjODgyNzg0MzkyYjk4YzQ0YTg1NTBmZjQ1NQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2020-08-03T12:10:45Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2020-08-03T12:11:55Z"}, "message": "genmatch: Avoid unused parameter warnings in generated code.\n\nThis patch silences a number of unused parameter warnings whilst\ncompiling both generic-match.c and gimple-match.c.  The problem is\nthat multiple (polymorphic) functions are generated for generic_simplify\nand gimple_simplify, each handling tree codes with a specific number\nof children.  Currently, there are no simplifications for tree codes\nwith four or five children, leading to functions with \"empty\" bodies\nand unused function arguments.  This patch detects those cases, and\ngenerates stub functions (with anonymous arguments) to silence these\nwarnings.\n\n2020-08-03  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\t* genmatch.c (decision_tree::gen): Emit stub functions for\n\ttree code operand counts that have no simplifications.\n\t(main): Correct comment typo.", "tree": {"sha": "f92947af7835476adf21e2d2b8ed7992eb40b32b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f92947af7835476adf21e2d2b8ed7992eb40b32b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef59e1fb372c91c882784392b98c44a8550ff455", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef59e1fb372c91c882784392b98c44a8550ff455", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef59e1fb372c91c882784392b98c44a8550ff455", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef59e1fb372c91c882784392b98c44a8550ff455/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2ae6d5c053315c94143103eeae1d3cba005ad9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ae6d5c053315c94143103eeae1d3cba005ad9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2ae6d5c053315c94143103eeae1d3cba005ad9d"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "4e13bc515796616f8cccfa8ad0b147134be90929", "filename": "gcc/genmatch.c", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef59e1fb372c91c882784392b98c44a8550ff455/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef59e1fb372c91c882784392b98c44a8550ff455/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=ef59e1fb372c91c882784392b98c44a8550ff455", "patch": "@@ -3803,6 +3803,8 @@ decision_tree::gen (FILE *f, bool gimple)\n \n   for (unsigned n = 1; n <= 5; ++n)\n     {\n+      bool has_kids_p = false;\n+\n       /* First generate split-out functions.  */\n       for (unsigned j = 0; j < root->kids.length (); j++)\n \t{\n@@ -3841,6 +3843,32 @@ decision_tree::gen (FILE *f, bool gimple)\n \t  else\n \t    fprintf (f, \"  return NULL_TREE;\\n\");\n \t  fprintf (f, \"}\\n\");\n+\t  has_kids_p = true;\n+\t}\n+\n+      /* If this main entry has no children, avoid generating code\n+\t with compiler warnings, by generating a simple stub.  */\n+      if (! has_kids_p)\n+\t{\n+\t  if (gimple)\n+\t    fprintf (f, \"\\nstatic bool\\n\"\n+\t\t\t\"gimple_simplify (gimple_match_op*, gimple_seq*,\\n\"\n+\t\t\t\"                 tree (*)(tree), code_helper,\\n\"\n+\t\t\t\"                 const tree\");\n+\t  else\n+\t    fprintf (f, \"\\ntree\\n\"\n+\t\t\t\"generic_simplify (location_t, enum tree_code,\\n\"\n+\t\t\t\"                  const tree\");\n+\t  for (unsigned i = 0; i < n; ++i)\n+\t    fprintf (f, \", tree\");\n+\t  fprintf (f, \")\\n\");\n+\t  fprintf (f, \"{\\n\");\n+\t  if (gimple)\n+\t    fprintf (f, \"  return false;\\n\");\n+\t  else\n+\t    fprintf (f, \"  return NULL_TREE;\\n\");\n+\t  fprintf (f, \"}\\n\");\n+\t  continue;\n \t}\n \n       /* Then generate the main entry with the outermost switch and\n@@ -5079,7 +5107,7 @@ round_alloc_size (size_t s)\n }\n \n \n-/* The genmatch generator progam.  It reads from a pattern description\n+/* The genmatch generator program.  It reads from a pattern description\n    and outputs GIMPLE or GENERIC IL matching and simplification routines.  */\n \n int"}]}