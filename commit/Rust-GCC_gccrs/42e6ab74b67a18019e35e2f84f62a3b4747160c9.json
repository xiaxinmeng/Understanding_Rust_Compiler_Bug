{"sha": "42e6ab74b67a18019e35e2f84f62a3b4747160c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJlNmFiNzRiNjdhMTgwMTllMzVlMmY4NGY2MmEzYjQ3NDcxNjBjOQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2015-07-14T22:34:23Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2015-07-14T22:34:23Z"}, "message": "nios2.h (SMALL_INT12): New macro.\n\n2015-07-14  Sandra Loosemore  <sandra@codesourcery.com>\n\t    Cesar Philippidis  <cesar@codesourcery.com>\n\t    Chung-Lin Tang  <cltang@codesourcery.com>\n\n\tgcc/\n\t* config/nios2/nios2.h (SMALL_INT12): New macro.\n\t* config/nios2/nios2.c (nios2_valid_addr_offset_p): New function.\n\t(nios2_valid_addr_expr_p): Use it.\n\t(nios2_symbol_ref_in_small_data_p): Disallow GP-relative addressing\n\twith implicit \"io\" instructions on R2.\n\t* config/nios2/constraints.md (w): New constraint.\n\t* config/nios2/predicates.md (ldstio_memory_operand): New.\n\t* config/nios2/nios2.md (ld<bhw_uns>io, ld<bh>io): Update memory\n\toperand predicate and constraint.\n\t(ld<bh>io_signed, st<bhw>io>): Likewise.\n\t* doc/md.texi (Machine Constraints): Document w constraint.\n\n\tgcc/testsuite/\n\t* gcc.target/nios2/r2-io-range.c: New.\n\t* gcc.target/nios2/r2-stio-1.c: New.\n\t* gcc.target/nios2/r2-stio-2.c: New.\n\t* gcc.target/nios2/nios2-ldxio.c: New.\n\t* gcc.target/nios2/nios2-stxio.c: Change to assemble test instead\n\tof just compile.  Add more tests.\n\nCo-Authored-By: Cesar Philippidis <cesar@codesourcery.com>\nCo-Authored-By: Chung-Lin Tang <cltang@codesourcery.com>\n\nFrom-SVN: r225792", "tree": {"sha": "bf04fdbea43651a05a4d5427cd7eeafe6ceca391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf04fdbea43651a05a4d5427cd7eeafe6ceca391"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42e6ab74b67a18019e35e2f84f62a3b4747160c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42e6ab74b67a18019e35e2f84f62a3b4747160c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42e6ab74b67a18019e35e2f84f62a3b4747160c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42e6ab74b67a18019e35e2f84f62a3b4747160c9/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77c50d73f614a99388b94e0b5a9c393723c06f8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77c50d73f614a99388b94e0b5a9c393723c06f8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77c50d73f614a99388b94e0b5a9c393723c06f8c"}], "stats": {"total": 207, "additions": 201, "deletions": 6}, "files": [{"sha": "80b38cdb51ef369d7eaed9f826c1268ec04a25b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -1,3 +1,19 @@\n+2015-07-14  Sandra Loosemore  <sandra@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\t    Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\t* config/nios2/nios2.h (SMALL_INT12): New macro.\n+\t* config/nios2/nios2.c (nios2_valid_addr_offset_p): New function.\n+\t(nios2_valid_addr_expr_p): Use it.\n+\t(nios2_symbol_ref_in_small_data_p): Disallow GP-relative addressing\n+\twith implicit \"io\" instructions on R2.\n+\t* config/nios2/constraints.md (w): New constraint.\n+\t* config/nios2/predicates.md (ldstio_memory_operand): New.\n+\t* config/nios2/nios2.md (ld<bhw_uns>io, ld<bh>io): Update memory\n+\toperand predicate and constraint.\n+\t(ld<bh>io_signed, st<bhw>io>): Likewise.\n+\t* doc/md.texi (Machine Constraints): Document w constraint.\n+\n 2015-07-14  Sandra Loosemore  <sandra@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n \t    Chung-Lin Tang  <cltang@codesourcery.com>"}, {"sha": "7c7afdfb11506785147074d0953692659a741d12", "filename": "gcc/config/nios2/constraints.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Fconfig%2Fnios2%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Fconfig%2Fnios2%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fconstraints.md?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -28,6 +28,10 @@\n ;;  N: 0 to 255 (for custom instruction numbers)\n ;;  O: 0 to 31 (for control register numbers)\n ;;\n+;; We use the following constraint letters for memory constraints\n+;;\n+;;  w: memory operands for load/store IO and cache instructions\n+;;\n ;; We use the following built-in register classes:\n ;;\n ;;  r: general purpose register (r0..r31)\n@@ -89,3 +93,7 @@\n (define_constraint \"T\"\n   \"A constant unspec offset representing a relocation.\"\n   (match_test \"nios2_unspec_reloc_p (op)\"))\n+\n+(define_memory_constraint \"w\"\n+  \"A memory operand suitable for load/store IO and cache instructions.\"\n+  (match_operand 0 \"ldstio_memory_operand\"))"}, {"sha": "93e0a869f32de2466d74401d64ca97f8699a3e4c", "filename": "gcc/config/nios2/nios2.c", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Fconfig%2Fnios2%2Fnios2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Fconfig%2Fnios2%2Fnios2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.c?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -1627,6 +1627,21 @@ nios2_regno_ok_for_base_p (int regno, bool strict_p)\n \t  || regno == ARG_POINTER_REGNUM);\n }\n \n+/* Return true if OFFSET is permitted in a load/store address expression.\n+   Normally any 16-bit value is permitted, but on R2 if we may be emitting\n+   the IO forms of these instructions we must restrict the offset to fit\n+   in a 12-bit field instead.  */\n+\n+static bool\n+nios2_valid_addr_offset_p (rtx offset)\n+{\n+  return (CONST_INT_P (offset)\n+\t  && ((TARGET_ARCH_R2 && (TARGET_BYPASS_CACHE\n+\t\t\t\t  || TARGET_BYPASS_CACHE_VOLATILE))\n+\t      ? SMALL_INT12 (INTVAL (offset))\n+\t      : SMALL_INT (INTVAL (offset))));\n+}\n+\n /* Return true if the address expression formed by BASE + OFFSET is\n    valid.  */\n static bool\n@@ -1637,7 +1652,7 @@ nios2_valid_addr_expr_p (rtx base, rtx offset, bool strict_p)\n   return (REG_P (base)\n \t  && nios2_regno_ok_for_base_p (REGNO (base), strict_p)\n \t  && (offset == NULL_RTX\n-\t      || const_arith_operand (offset, Pmode)\n+\t      || nios2_valid_addr_offset_p (offset)\n \t      || nios2_unspec_reloc_p (offset)));\n }\n \n@@ -1739,6 +1754,13 @@ nios2_symbol_ref_in_small_data_p (rtx sym)\n   if (SYMBOL_REF_TLS_MODEL (sym) != 0)\n     return false;\n \n+  /* On Nios II R2, there is no GP-relative relocation that can be\n+     used with \"io\" instructions.  So, if we are implicitly generating\n+     those instructions, we cannot emit GP-relative accesses.  */\n+  if (TARGET_ARCH_R2\n+      && (TARGET_BYPASS_CACHE || TARGET_BYPASS_CACHE_VOLATILE))\n+    return false;\n+\n   /* If the user has explicitly placed the symbol in a small data section\n      via an attribute, generate gp-relative addressing even if the symbol\n      is external, weak, or larger than we'd automatically put in the"}, {"sha": "58afaec69ce10186da166b89d23ee5015d730a57", "filename": "gcc/config/nios2/nios2.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Fconfig%2Fnios2%2Fnios2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Fconfig%2Fnios2%2Fnios2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.h?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -216,6 +216,7 @@ enum reg_class\n /* Tests for various kinds of constants used in the Nios II port.  */\n \n #define SMALL_INT(X) ((unsigned HOST_WIDE_INT)(X) + 0x8000 < 0x10000)\n+#define SMALL_INT12(X) ((unsigned HOST_WIDE_INT)(X) + 0x800 < 0x1000)\n #define SMALL_INT_UNSIGNED(X) ((X) >= 0 && (X) < 0x10000)\n #define UPPER16_INT(X) (((X) & 0xffff) == 0)\n #define SHIFT_INT(X) ((X) >= 0 && (X) <= 31)"}, {"sha": "8cf2347e05cc851e58073638bac3b3effb649383", "filename": "gcc/config/nios2/nios2.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Fconfig%2Fnios2%2Fnios2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Fconfig%2Fnios2%2Fnios2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.md?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -221,14 +221,14 @@\n (define_insn \"ld<bhw_uns>io\"\n   [(set (match_operand:BHW 0 \"register_operand\" \"=r\")\n         (unspec_volatile:BHW\n-          [(match_operand:BHW 1 \"memory_operand\" \"m\")] UNSPECV_LDXIO))]\n+          [(match_operand:BHW 1 \"ldstio_memory_operand\" \"w\")] UNSPECV_LDXIO))]\n   \"\"\n   \"ld<bhw_uns>io\\\\t%0, %1\"\n   [(set_attr \"type\" \"ld\")])\n \n (define_expand \"ld<bh>io\"\n   [(set (match_operand:BH 0 \"register_operand\" \"=r\")\n-        (match_operand:BH 1 \"memory_operand\"    \"m\"))]\n+        (match_operand:BH 1 \"ldstio_memory_operand\" \"w\"))]\n   \"\"\n {\n   rtx tmp = gen_reg_rtx (SImode);\n@@ -241,13 +241,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n         (sign_extend:SI\n           (unspec_volatile:BH\n-            [(match_operand:BH 1 \"memory_operand\" \"m\")] UNSPECV_LDXIO)))]\n+            [(match_operand:BH 1 \"ldstio_memory_operand\" \"w\")] UNSPECV_LDXIO)))]\n   \"\"\n   \"ld<bh>io\\\\t%0, %1\"\n   [(set_attr \"type\" \"ld\")])\n \n (define_insn \"st<bhw>io\"\n-  [(set (match_operand:BHW 0 \"memory_operand\" \"=m\")\n+  [(set (match_operand:BHW 0 \"ldstio_memory_operand\" \"=w\")\n         (unspec_volatile:BHW\n           [(match_operand:BHW 1 \"reg_or_0_operand\" \"rM\")] UNSPECV_STXIO))]\n   \"\""}, {"sha": "fa578035ccad3373a3f6702b855532f6d46f8c85", "filename": "gcc/config/nios2/predicates.md", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Fconfig%2Fnios2%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Fconfig%2Fnios2%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fpredicates.md?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -83,3 +83,20 @@\n                                          &XEXP (op, 0), &XEXP (op, 1),\n                                          false));\n })\n+\n+(define_predicate \"ldstio_memory_operand\"\n+  (match_code \"mem\")\n+{\n+  if (TARGET_ARCH_R2)\n+    {\n+      rtx addr = XEXP (op, 0);\n+      if (REG_P (addr))\n+        return true;\n+      else if (GET_CODE (addr) == PLUS)\n+        return (REG_P (XEXP (addr, 0))\n+                && CONST_INT_P (XEXP (addr, 1))\n+                && SMALL_INT12 (INTVAL (XEXP (addr, 1))));\n+      return false;\n+    }\n+  return memory_operand (op, mode);\n+})"}, {"sha": "84c39a853e9adf39e2e85b55333188fb1b76cd9d", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -2996,6 +2996,10 @@ Matches immediates which are addresses in the small\n data section and therefore can be added to @code{gp}\n as a 16-bit immediate to re-create their 32-bit value.\n \n+@item w\n+A memory operand suitable for load/store IO and cache\n+instructions.\n+\n @ifset INTERNALS\n @item T\n A @code{const} wrapped @code{UNSPEC} expression,"}, {"sha": "6dd4feb719d75b52ec9c13cd03de2b1d5d2bef0d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -1,3 +1,14 @@\n+2015-07-14  Sandra Loosemore  <sandra@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\t    Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\t* gcc.target/nios2/r2-io-range.c: New.\n+\t* gcc.target/nios2/r2-stio-1.c: New.\n+\t* gcc.target/nios2/r2-stio-2.c: New.\n+\t* gcc.target/nios2/nios2-ldxio.c: New.\n+\t* gcc.target/nios2/nios2-stxio.c: Change to assemble test instead\n+\tof just compile.  Add more tests.\n+\n 2015-07-14  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tgfortran.dg/pr66864.f90: New test."}, {"sha": "ac661a0e2a66745ba8571c643cb07272b7018fe9", "filename": "gcc/testsuite/gcc.target/nios2/nios2-ldxio.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-ldxio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-ldxio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-ldxio.c?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -0,0 +1,52 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O\" } */\n+\n+void test_ldbio (unsigned char* p1, unsigned char* p2)\n+{\n+  __builtin_ldbio (p1);\n+  __builtin_ldbio (p2);\n+  __builtin_ldbio (p2 + 1);\n+  __builtin_ldbio (p2 + 2);\n+  __builtin_ldbio (p2 + 2047);\n+  __builtin_ldbio (p2 + 2048);\n+}\n+\n+void test_ldbuio (unsigned char* p1, unsigned char* p2)\n+{\n+  __builtin_ldbuio (p1);\n+  __builtin_ldbuio (p2);\n+  __builtin_ldbuio (p2 + 1);\n+  __builtin_ldbuio (p2 + 2);\n+  __builtin_ldbuio (p2 + 2047);\n+  __builtin_ldbuio (p2 + 2048);\n+}\n+\n+void test_ldhio (unsigned short* p1, unsigned short* p2)\n+{\n+  __builtin_ldhio (p1);\n+  __builtin_ldhio (p2);\n+  __builtin_ldhio (p2 + 1);\n+  __builtin_ldhio (p2 + 2);\n+  __builtin_ldhio (p2 + 1023);\n+  __builtin_ldhio (p2 + 1024);\n+}\n+\n+void test_ldhuio (unsigned short* p1, unsigned short* p2)\n+{\n+  __builtin_ldhuio (p1);\n+  __builtin_ldhuio (p2);\n+  __builtin_ldhuio (p2 + 1);\n+  __builtin_ldhuio (p2 + 2);\n+  __builtin_ldhuio (p2 + 1023);\n+  __builtin_ldhuio (p2 + 1024);\n+}\n+\n+void test_ldwio (unsigned int* p1, unsigned int* p2)\n+{\n+  __builtin_ldwio (p1);\n+  __builtin_ldwio (p2);\n+  __builtin_ldwio (p2 + 1);\n+  __builtin_ldwio (p2 + 2);\n+  __builtin_ldwio (p2 + 511);\n+  __builtin_ldwio (p2 + 512);\n+}"}, {"sha": "0e675be39626461813b1c807b208c80acee519af", "filename": "gcc/testsuite/gcc.target/nios2/nios2-stxio.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-stxio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-stxio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-stxio.c?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -1,11 +1,14 @@\n-/* { dg-do compile } */\n+/* { dg-do assemble } */\n+/* { dg-options \"-O\" } */\n \n void test_stbio (unsigned char* p1, unsigned char* p2)\n {\n   __builtin_stbio (p1, *p2);\n   __builtin_stbio (p2, 0);\n   __builtin_stbio (p2 + 1, 0x80);\n   __builtin_stbio (p2 + 2, 0x7f);\n+  __builtin_stbio (p2 + 2047, 0x80);\n+  __builtin_stbio (p2 + 2048, 0x7f);\n }\n \n void test_sthio (unsigned short* p1, unsigned short* p2)\n@@ -14,6 +17,8 @@ void test_sthio (unsigned short* p1, unsigned short* p2)\n   __builtin_sthio (p2, 0);\n   __builtin_sthio (p2 + 1, 0x8000);\n   __builtin_sthio (p2 + 2, 0x7fff);\n+  __builtin_sthio (p2 + 1023, 0x8000);\n+  __builtin_sthio (p2 + 1024, 0x7fff);\n }\n \n void test_stwio (unsigned int* p1, unsigned int* p2)\n@@ -22,4 +27,7 @@ void test_stwio (unsigned int* p1, unsigned int* p2)\n   __builtin_stwio (p2, 0);\n   __builtin_stwio (p2 + 1, 0x80000000);\n   __builtin_stwio (p2 + 2, 0x7fffffff);\n+  __builtin_stwio (p2 + 511, 5);\n+  __builtin_stwio (p2 + 512, 5);\n }\n+"}, {"sha": "2064ff6b0d4d69023cb6c2b1fc5b6c3353252bb0", "filename": "gcc/testsuite/gcc.target/nios2/r2-io-range.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fr2-io-range.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fr2-io-range.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fr2-io-range.c?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=r2 -mbypass-cache\" } */\n+\n+/* Check that the compiler is aware of the reduced offset range for ldio/stio\n+   instructions in the Nios II R2 encoding.  */\n+\n+unsigned int too_big (unsigned int *p)\n+{\n+  return *(p + 0x400);\n+}\n+\n+unsigned int small_enough (unsigned int *p)\n+{\n+  return *(p + 0x100);\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\tldwio\\t.*, 4096\\\\(r.*\\\\)\" } }  */\n+/* { dg-final { scan-assembler \"\\tldwio\\t.*, 1024\\\\(r.*\\\\)\" } }  */"}, {"sha": "5aadd20d340dcf66f304aaad6e3ca99e0fe44acc", "filename": "gcc/testsuite/gcc.target/nios2/r2-stio-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fr2-stio-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fr2-stio-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fr2-stio-1.c?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mgpopt -march=r2\" } */\n+\n+/* The ldio/stio builtins must not use GP-relative addresses for\n+   small data objects in R2.  This is because the address offset field\n+   has been reduced to 12 bits in R2, and %gprel is a 16-bit relocation.  */\n+\n+extern volatile unsigned int frob;\n+\n+volatile unsigned int frob = 0;\n+\n+void foo (unsigned int val)\n+{\n+  __builtin_stwio (&frob, val);\n+}\n+\n+/* { dg-final { scan-assembler \"stwio\\\\t\" } } */\n+/* { dg-final { scan-assembler-not \"stwio\\\\t.*%gprel(frob)\" } } */\n+"}, {"sha": "0a6de908d6eee8351ecbaa28a322da2dfc06576c", "filename": "gcc/testsuite/gcc.target/nios2/r2-stio-2.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fr2-stio-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e6ab74b67a18019e35e2f84f62a3b4747160c9/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fr2-stio-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fr2-stio-2.c?ref=42e6ab74b67a18019e35e2f84f62a3b4747160c9", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mgpopt -march=r2 -mbypass-cache\" } */\n+\n+/* Implicit ldio/stio operations must not use GP-relative addresses for\n+   small data objects in R2.  This is because the address offset field\n+   has been reduced to 12 bits in R2, and %gprel is a 16-bit relocation.  */\n+\n+extern volatile unsigned int frob;\n+\n+volatile unsigned int frob = 0;\n+\n+void foo (unsigned int val)\n+{\n+  frob = val;\n+}\n+\n+/* { dg-final { scan-assembler \"stwio\\\\t\" } } */\n+/* { dg-final { scan-assembler-not \"stwio\\\\t.*%gprel(frob)\" } } */\n+"}]}