{"sha": "27c171775abb943d59e2b3fb6fbc0b3680fc7a39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdjMTcxNzc1YWJiOTQzZDU5ZTJiM2ZiNmZiYzBiMzY4MGZjN2EzOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-17T23:47:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-17T23:47:45Z"}, "message": "libstdc++: Add comparison operators to <chrono> types\n\nSome more C++20 changes from P1614R2, \"The Mothership has Landed\".\n\n\t* include/std/chrono (duration, time_point): Define operator<=> and\n\tremove redundant operator!= for C++20.\n\t* testsuite/20_util/duration/comparison_operators/three_way.cc: New\n\ttest.\n\t* testsuite/20_util/time_point/comparison_operators/three_way.cc: New\n\ttest.", "tree": {"sha": "ca2266294ce8b4edfcf898f16c522d8579753cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca2266294ce8b4edfcf898f16c522d8579753cc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27c171775abb943d59e2b3fb6fbc0b3680fc7a39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c171775abb943d59e2b3fb6fbc0b3680fc7a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27c171775abb943d59e2b3fb6fbc0b3680fc7a39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c171775abb943d59e2b3fb6fbc0b3680fc7a39/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9960294062dbda0847d26a1b5ee37a55210d69c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9960294062dbda0847d26a1b5ee37a55210d69c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9960294062dbda0847d26a1b5ee37a55210d69c"}], "stats": {"total": 134, "additions": 134, "deletions": 0}, "files": [{"sha": "40345cc7044f10c0082d992df6cd34d7ad528cf0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c171775abb943d59e2b3fb6fbc0b3680fc7a39/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c171775abb943d59e2b3fb6fbc0b3680fc7a39/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=27c171775abb943d59e2b3fb6fbc0b3680fc7a39", "patch": "@@ -1,5 +1,12 @@\n 2020-04-18  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/chrono (duration, time_point): Define operator<=> and\n+\tremove redundant operator!= for C++20.\n+\t* testsuite/20_util/duration/comparison_operators/three_way.cc: New\n+\ttest.\n+\t* testsuite/20_util/time_point/comparison_operators/three_way.cc: New\n+\ttest.\n+\n \t* testsuite/util/native_type/native_priority_queue.hpp: Use\n \tallocator_traits to rebind allocator.\n "}, {"sha": "6d78f32ac783005725e466ec035a58d9271a55f3", "filename": "libstdc++-v3/include/std/chrono", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c171775abb943d59e2b3fb6fbc0b3680fc7a39/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c171775abb943d59e2b3fb6fbc0b3680fc7a39/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono?ref=27c171775abb943d59e2b3fb6fbc0b3680fc7a39", "patch": "@@ -43,6 +43,7 @@\n #include <bits/parse_numbers.h> // for literals support.\n #if __cplusplus > 201703L\n # include <concepts>\n+# include <compare>\n #endif\n \n namespace std _GLIBCXX_VISIBILITY(default)\n@@ -668,12 +669,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \treturn __ct(__lhs).count() < __ct(__rhs).count();\n       }\n \n+#if __cpp_lib_three_way_comparison\n+    template<typename _Rep1, typename _Period1,\n+\t     typename _Rep2, typename _Period2>\n+      requires three_way_comparable<common_type_t<_Rep1, _Rep2>>\n+      constexpr auto\n+      operator<=>(const duration<_Rep1, _Period1>& __lhs,\n+\t\t  const duration<_Rep2, _Period2>& __rhs)\n+      {\n+\tusing __ct = common_type_t<duration<_Rep1, _Period1>,\n+\t\t\t\t   duration<_Rep2, _Period2>>;\n+\treturn __ct(__lhs).count() <=> __ct(__rhs).count();\n+      }\n+#else\n     template<typename _Rep1, typename _Period1,\n \t     typename _Rep2, typename _Period2>\n       constexpr bool\n       operator!=(const duration<_Rep1, _Period1>& __lhs,\n \t\t const duration<_Rep2, _Period2>& __rhs)\n       { return !(__lhs == __rhs); }\n+#endif\n \n     template<typename _Rep1, typename _Period1,\n \t     typename _Rep2, typename _Period2>\n@@ -903,11 +918,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t const time_point<_Clock, _Dur2>& __rhs)\n       { return __lhs.time_since_epoch() == __rhs.time_since_epoch(); }\n \n+#if __cpp_lib_three_way_comparison\n+    template<typename _Clock, typename _Dur1,\n+\t     three_way_comparable_with<_Dur1> _Dur2>\n+      constexpr auto\n+      operator<=>(const time_point<_Clock, _Dur1>& __lhs,\n+\t\t  const time_point<_Clock, _Dur2>& __rhs)\n+      { return __lhs.time_since_epoch() <=> __rhs.time_since_epoch(); }\n+#else\n     template<typename _Clock, typename _Dur1, typename _Dur2>\n       constexpr bool\n       operator!=(const time_point<_Clock, _Dur1>& __lhs,\n \t\t const time_point<_Clock, _Dur2>& __rhs)\n       { return !(__lhs == __rhs); }\n+#endif\n \n     template<typename _Clock, typename _Dur1, typename _Dur2>\n       constexpr bool"}, {"sha": "12c20f82811d8264f568f439444f5944171b2d65", "filename": "libstdc++-v3/testsuite/20_util/duration/comparison_operators/three_way.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c171775abb943d59e2b3fb6fbc0b3680fc7a39/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcomparison_operators%2Fthree_way.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c171775abb943d59e2b3fb6fbc0b3680fc7a39/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcomparison_operators%2Fthree_way.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcomparison_operators%2Fthree_way.cc?ref=27c171775abb943d59e2b3fb6fbc0b3680fc7a39", "patch": "@@ -0,0 +1,62 @@\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.8.3 Class template duration [time.duration]\n+\n+#include <chrono>\n+#include <testsuite_hooks.h>\n+\n+// C++20 27.5.6 Comparisons [time.duration.comparisons]\n+\n+void\n+test01()\n+{\n+  using namespace std::chrono;\n+\n+  duration<int> d0(12);\n+  duration<int> d1(3);\n+  duration<long> d2(3);\n+\n+  VERIFY(d1 < d0);\n+  VERIFY(d0 > d1);\n+  VERIFY( std::is_lt(d1 <=> d0) );\n+  VERIFY( std::is_gt(d0 <=> d1) );\n+\n+  VERIFY(d0 != d1);\n+  VERIFY(d1 == d2);\n+  VERIFY( std::is_neq(d0 <=> d1) );\n+  VERIFY( std::is_eq(d1 <=> d2) );\n+\n+  VERIFY(d1 <= d2);\n+  VERIFY(d1 >= d2);\n+  VERIFY( std::is_lteq(d1 <=> d2) );\n+  VERIFY( std::is_gteq(d1 <=> d2) );\n+\n+  VERIFY(d1 <= d0);\n+  VERIFY(d0 >= d1);\n+  VERIFY( std::is_lteq(d1 <=> d0) );\n+  VERIFY( std::is_gteq(d0 <=> d1) );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "b753bcf253edf9b4bca40e62173008c84b684626", "filename": "libstdc++-v3/testsuite/20_util/time_point/comparison_operators/three_way.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c171775abb943d59e2b3fb6fbc0b3680fc7a39/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Fcomparison_operators%2Fthree_way.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c171775abb943d59e2b3fb6fbc0b3680fc7a39/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Fcomparison_operators%2Fthree_way.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Fcomparison_operators%2Fthree_way.cc?ref=27c171775abb943d59e2b3fb6fbc0b3680fc7a39", "patch": "@@ -0,0 +1,41 @@\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <chrono>\n+#include <testsuite_hooks.h>\n+\n+// C++20 27.6.6 Comparisons [time.point.comparisons]\n+\n+void\n+test01()\n+{\n+  using namespace std::chrono;\n+\n+  auto ns = system_clock::now();\n+  auto s = time_point_cast<seconds>(ns + seconds(2));\n+\n+  VERIFY( s != ns );\n+  VERIFY( std::is_lt(ns <=> s) );\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}]}