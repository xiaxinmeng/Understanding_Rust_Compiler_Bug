{"sha": "e219f32f4b52e334503376ba983ee1503dd34e09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIxOWYzMmY0YjUyZTMzNDUwMzM3NmJhOTgzZWUxNTAzZGQzNGUwOQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-12-11T14:40:36Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-12-11T14:40:36Z"}, "message": "re PR fortran/42335 ([OOP] ICE on CLASS IS (bad_identifier))\n\ngcc/fortran/\n2009-12-11 Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/42335\n\t* symbol.c (select_type_insert_tmp): Add an extra check for\n\terror recovery.\n\n\ngcc/testsuite/\n2009-12-11  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/42335\n\t* gfortran.dg/select_type_11.f03: New test.\n\nFrom-SVN: r155162", "tree": {"sha": "ca2cc8d506c36f950dfd34db4731f0c40b750d52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca2cc8d506c36f950dfd34db4731f0c40b750d52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e219f32f4b52e334503376ba983ee1503dd34e09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e219f32f4b52e334503376ba983ee1503dd34e09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e219f32f4b52e334503376ba983ee1503dd34e09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e219f32f4b52e334503376ba983ee1503dd34e09/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63a00e0d9139428cec7f5b5471ae036ee3d73db4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a00e0d9139428cec7f5b5471ae036ee3d73db4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63a00e0d9139428cec7f5b5471ae036ee3d73db4"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "7000e25e5f87644e10ba90c40a208943e4606e01", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e219f32f4b52e334503376ba983ee1503dd34e09/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e219f32f4b52e334503376ba983ee1503dd34e09/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e219f32f4b52e334503376ba983ee1503dd34e09", "patch": "@@ -1,3 +1,9 @@\n+2009-12-11 Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42335\n+\t* symbol.c (select_type_insert_tmp): Add an extra check for\n+\terror recovery.\n+\n 2009-12-10  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/40287"}, {"sha": "1b40d9a549acaa4c6a78962a16d078d907062624", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e219f32f4b52e334503376ba983ee1503dd34e09/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e219f32f4b52e334503376ba983ee1503dd34e09/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=e219f32f4b52e334503376ba983ee1503dd34e09", "patch": "@@ -2476,7 +2476,7 @@ select_type_insert_tmp (gfc_symtree **st)\n {\n   gfc_select_type_stack *stack = select_type_stack;\n   for (; stack; stack = stack->prev)\n-    if ((*st)->n.sym == stack->selector)\n+    if ((*st)->n.sym == stack->selector && stack->tmp)\n       *st = stack->tmp;\n }\n "}, {"sha": "598c1aa20f56175e611039509a99f721fb8b1893", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e219f32f4b52e334503376ba983ee1503dd34e09/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e219f32f4b52e334503376ba983ee1503dd34e09/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e219f32f4b52e334503376ba983ee1503dd34e09", "patch": "@@ -1,3 +1,8 @@\n+2009-12-11  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42335\n+\t* gfortran.dg/select_type_11.f03: New test.\n+\n 2009-12-11  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42225"}, {"sha": "54501d6ab1edbea6025a42723adfd63813614da4", "filename": "gcc/testsuite/gfortran.dg/select_type_11.f03", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e219f32f4b52e334503376ba983ee1503dd34e09/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_11.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e219f32f4b52e334503376ba983ee1503dd34e09/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_11.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_11.f03?ref=e219f32f4b52e334503376ba983ee1503dd34e09", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do compile }\n+!\n+! PR 42335: [OOP] ICE on CLASS IS (bad_identifier)\n+!\n+! Contributed by Harald Anlauf <anlauf@gmx.de>\n+\n+  implicit none\n+  type, abstract :: vector_class\n+  end type vector_class\n+\n+  type, extends(vector_class) :: trivial_vector_type\n+    real :: elements(100)\n+  end type trivial_vector_type\n+\n+contains\n+\n+  subroutine bar (this,v)\n+    class(trivial_vector_type), intent(inout) :: this\n+    class(vector_class),        intent(in)    :: v\n+\n+    select type (v)\n+    class is (bad_id)                    ! { dg-error \"is not an accessible derived type\" }\n+       this%elements(:) = v%elements(:)  ! { dg-error \"is not a member of\" }\n+    end select\n+\n+  end subroutine bar\n+\n+end"}]}