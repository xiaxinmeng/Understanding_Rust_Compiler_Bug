{"sha": "bceb07e3584c9d8ea3e5760636ae24ff7f8606ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNlYjA3ZTM1ODRjOWQ4ZWEzZTU3NjA2MzZhZTI0ZmY3Zjg2MDZmZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-05-13T20:12:06Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-05-13T20:12:06Z"}, "message": "PR libstdc++/90454.cc path construction from void*\n\nMake the filesystem::path constructors SFINAE away for void* arguments,\ninstead of giving an error due to iterator_traits<void*>::reference.\n\n\tPR libstdc++/90454.cc path construction from void*\n\t* include/bits/fs_path.h (path::_Path): Use remove_pointer so that\n\tpointers to void are rejected as well as void.\n\t* include/experimental/bits/fs_path.h (path::_Path): Likewise.\n\t* testsuite/27_io/filesystem/path/construct/80762.cc: Also check\n\tpointers to void.\n\t* testsuite/experimental/filesystem/path/construct/80762.cc: Likewise.\n\nFrom-SVN: r271134", "tree": {"sha": "548aa85b283f5123201fab5a3f4c86265bd3d498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/548aa85b283f5123201fab5a3f4c86265bd3d498"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dd50fc6f13c02d9d548fd57e7f8f7020241e317", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dd50fc6f13c02d9d548fd57e7f8f7020241e317", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dd50fc6f13c02d9d548fd57e7f8f7020241e317"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "c25f2ac76414e7ad95a09442c5d4ab73e0d326dc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bceb07e3584c9d8ea3e5760636ae24ff7f8606ff", "patch": "@@ -1,5 +1,13 @@\n 2019-05-13  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/90454.cc path construction from void*\n+\t* include/bits/fs_path.h (path::_Path): Use remove_pointer so that\n+\tpointers to void are rejected as well as void.\n+\t* include/experimental/bits/fs_path.h (path::_Path): Likewise.\n+\t* testsuite/27_io/filesystem/path/construct/80762.cc: Also check\n+\tpointers to void.\n+\t* testsuite/experimental/filesystem/path/construct/80762.cc: Likewise.\n+\n \t* doc/xml/manual/policy_data_structures.xml: Comment out stray\n \t<remark> elements. Fix formatting of bibliography references.\n "}, {"sha": "cec35614b42570764d18f080c461063ee1815ba0", "filename": "libstdc++-v3/include/bits/fs_path.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h?ref=bceb07e3584c9d8ea3e5760636ae24ff7f8606ff", "patch": "@@ -115,7 +115,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n     template<typename _Tp1, typename _Tp2 = void>\n       using _Path = typename\n \tstd::enable_if<__and_<__not_<is_same<remove_cv_t<_Tp1>, path>>,\n-\t\t\t      __not_<is_void<_Tp1>>,\n+\t\t\t      __not_<is_void<remove_pointer_t<_Tp1>>>,\n \t\t\t      __constructible_from<_Tp1, _Tp2>>::value,\n \t\t       path>::type;\n "}, {"sha": "588f06822beb60939a352cdb9f4d5dc41a25964d", "filename": "libstdc++-v3/include/experimental/bits/fs_path.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h?ref=bceb07e3584c9d8ea3e5760636ae24ff7f8606ff", "patch": "@@ -128,11 +128,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       : decltype(__is_path_src(std::declval<_Source>(), 0))\n       { };\n \n-    template<typename _Tp1, typename _Tp2 = void>\n+    template<typename _Tp1, typename _Tp2 = void,\n+\t     typename _Tp1_nocv = typename remove_cv<_Tp1>::type,\n+\t     typename _Tp1_noptr = typename remove_pointer<_Tp1>::type>\n       using _Path = typename\n-\tstd::enable_if<__and_<__not_<is_same<typename remove_cv<_Tp1>::type,\n-\t\t\t\t\t     path>>,\n-\t\t\t      __not_<is_void<_Tp1>>,\n+\tstd::enable_if<__and_<__not_<is_same<_Tp1_nocv, path>>,\n+\t\t\t      __not_<is_void<_Tp1_noptr>>,\n \t\t\t      __constructible_from<_Tp1, _Tp2>>::value,\n \t\t       path>::type;\n "}, {"sha": "e22e3deb56e49ce37462fd7c417ab0111d8835f7", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/construct/80762.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fconstruct%2F80762.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fconstruct%2F80762.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fconstruct%2F80762.cc?ref=bceb07e3584c9d8ea3e5760636ae24ff7f8606ff", "patch": "@@ -22,8 +22,18 @@\n \n using std::filesystem::path;\n \n+// PR libstdc++/80762.cc\n static_assert( !std::is_constructible_v<path, void> );\n static_assert( !std::is_constructible_v<path, volatile path> );\n static_assert( !std::is_constructible_v<path, volatile path&> );\n static_assert( !std::is_constructible_v<path, const volatile path> );\n static_assert( !std::is_constructible_v<path, const volatile path&> );\n+\n+// PR libstdc++/90454.cc\n+static_assert( !std::is_constructible_v<path, void*> );\n+static_assert( !std::is_constructible_v<path, const void*> );\n+static_assert( !std::is_constructible_v<path, volatile void*> );\n+static_assert( !std::is_constructible_v<path, const volatile void*> );\n+static_assert( !std::is_constructible_v<path, void*&> );\n+static_assert( !std::is_constructible_v<path, void* const&> );\n+static_assert( !std::is_constructible_v<path, const void* const&> );"}, {"sha": "98dadabcffba77bf25a1ead29e864579dd444b69", "filename": "libstdc++-v3/testsuite/experimental/filesystem/path/construct/80762.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fconstruct%2F80762.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bceb07e3584c9d8ea3e5760636ae24ff7f8606ff/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fconstruct%2F80762.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fconstruct%2F80762.cc?ref=bceb07e3584c9d8ea3e5760636ae24ff7f8606ff", "patch": "@@ -22,8 +22,18 @@\n \n using std::experimental::filesystem::path;\n \n+// PR libstdc++/80762.cc\n static_assert( !std::is_constructible<path, void>::value, \"\" );\n static_assert( !std::is_constructible<path, volatile path>::value, \"\" );\n static_assert( !std::is_constructible<path, volatile path&>::value, \"\" );\n static_assert( !std::is_constructible<path, const volatile path>::value, \"\" );\n static_assert( !std::is_constructible<path, const volatile path&>::value, \"\" );\n+\n+// PR libstdc++/90454.cc\n+static_assert( !std::is_constructible<path, void*>::value, \"\" );\n+static_assert( !std::is_constructible<path, const void*>::value, \"\" );\n+static_assert( !std::is_constructible<path, volatile void*>::value, \"\" );\n+static_assert( !std::is_constructible<path, const volatile void*>::value, \"\" );\n+static_assert( !std::is_constructible<path, void*&>::value, \"\" );\n+static_assert( !std::is_constructible<path, void* const&>::value, \"\" );\n+static_assert( !std::is_constructible<path, const void* const&>::value, \"\" );"}]}