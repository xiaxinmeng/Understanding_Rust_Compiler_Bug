{"sha": "2c05525623d96388cf938f268225813ec2edd5ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMwNTUyNTYyM2Q5NjM4OGNmOTM4ZjI2ODIyNTgxM2VjMmVkZDVlYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2016-03-02T23:28:11Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2016-03-02T23:28:11Z"}, "message": "re PR libffi/70024 (libffi ABI change w/o SONAME bump)\n\nPR libffi/70024\n\n  * Makefile.am (libffi_version_script): New.\n  (libffi_version_dep): New.\n  (libffi_version_info): New.\n  (libffi_la_LDFLAGS): Include libffi_version_info, libffi_version_script.\n  (libffi_la_DEPENDENCIES): Include libffi_version_dep.\n  * acinclude.m4 (LIBAT_ENABLE, LIBAT_CHECK_LINKER_FEATURES): New.\n  (LIBAT_ENABLE_SYMVERS, LIBAT_BUILD_VERSIONED_SHLIB): New.\n  (LIBAT_BUILD_VERSIONED_SHLIB_GNU): New.\n  (LIBAT_BUILD_VERSIONED_SHLIB_SUN): New.\n  * configure.ac: Invoke LIBAT_ENABLE_SYMVERS.\n  * libffi.map: New file.\n  * libtool-version: Increase to 5.0.0.\n  * Makefile.in, configure: Rebuild.\n  * man/Makefile.in, testsuite/Makefile.in: Rebuild.\n\nFrom-SVN: r233921", "tree": {"sha": "e6339d88ccba4974c6acd946bfc41d39d4147e3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6339d88ccba4974c6acd946bfc41d39d4147e3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c05525623d96388cf938f268225813ec2edd5ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c05525623d96388cf938f268225813ec2edd5ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c05525623d96388cf938f268225813ec2edd5ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c05525623d96388cf938f268225813ec2edd5ec/comments", "author": null, "committer": null, "parents": [{"sha": "9d83ef7171f5692a1eb019e149e4365859ce6251", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d83ef7171f5692a1eb019e149e4365859ce6251", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d83ef7171f5692a1eb019e149e4365859ce6251"}], "stats": {"total": 974, "additions": 965, "deletions": 9}, "files": [{"sha": "b85daa79da13c94a623036b24c51da270b3978a3", "filename": "libffi/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=2c05525623d96388cf938f268225813ec2edd5ec", "patch": "@@ -1,3 +1,21 @@\n+2016-03-02  Richard Henderson  <rth@redhat.com>\n+\n+\tPR libffi/70024\n+\t* Makefile.am (libffi_version_script): New.\n+\t(libffi_version_dep): New.\n+\t(libffi_version_info): New.\n+\t(libffi_la_LDFLAGS): Include libffi_version_info, libffi_version_script.\n+\t(libffi_la_DEPENDENCIES): Include libffi_version_dep.\n+\t* acinclude.m4 (LIBAT_ENABLE, LIBAT_CHECK_LINKER_FEATURES): New.\n+\t(LIBAT_ENABLE_SYMVERS, LIBAT_BUILD_VERSIONED_SHLIB): New.\n+\t(LIBAT_BUILD_VERSIONED_SHLIB_GNU): New.\n+\t(LIBAT_BUILD_VERSIONED_SHLIB_SUN): New.\n+\t* configure.ac: Invoke LIBAT_ENABLE_SYMVERS.\n+\t* libffi.map: New file.\n+\t* libtool-version: Increase to 5.0.0.\n+\t* Makefile.in, configure: Rebuild.\n+\t* man/Makefile.in, testsuite/Makefile.in: Rebuild.\n+\n 2015-10-26  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR libffi/65441"}, {"sha": "4710f7f9fd99669580f2b7389071fdc1db36d1a2", "filename": "libffi/Makefile.am", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=2c05525623d96388cf938f268225813ec2edd5ec", "patch": "@@ -188,7 +188,6 @@ EXTRA_libffi_la_SOURCES = \\\n \n TARGET_OBJ = @TARGET_OBJ@\n libffi_la_LIBADD = $(TARGET_OBJ)\n-libffi_la_DEPENDENCIES = $(TARGET_OBJ)\n \n libffi_convenience_la_SOURCES = $(libffi_la_SOURCES)\n EXTRA_libffi_convenience_la_SOURCES = $(EXTRA_libffi_la_SOURCES)\n@@ -205,7 +204,32 @@ if FFI_DEBUG\n AM_CFLAGS += -DFFI_DEBUG\n endif\n \n-libffi_la_LDFLAGS = -no-undefined -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LTLDFLAGS) $(AM_LTLDFLAGS)\n+if LIBAT_BUILD_VERSIONED_SHLIB\n+if LIBAT_BUILD_VERSIONED_SHLIB_GNU\n+libffi_version_script = -Wl,--version-script,$(top_srcdir)/libffi.map\n+libffi_version_dep = $(top_srcdir)/libffi.map\n+endif\n+if LIBAT_BUILD_VERSIONED_SHLIB_SUN\n+libffi_version_script = -Wl,-M,libffi.map-sun\n+libffi_version_dep = libffi.map-sun\n+libffi.map-sun : $(top_srcdir)/libffi.map \\\n+                $(top_srcdir)/../contrib/make_sunver.pl \\\n+                $(libffi_la_OBJECTS) $(libffi_la_LIBADD)\n+        perl $(top_srcdir)/../contrib/make_sunver.pl \\\n+          $(top_srcdir)/libffi.map \\\n+          $(libffi_la_OBJECTS:%.lo=.libs/%.o) \\\n+         `echo $(libffi_la_LIBADD) | \\\n+            sed 's,\\([^/        ]*\\)\\.l\\([ao]\\),.libs/\\1.\\2,g'` \\\n+         > $@ || (rm -f $@ ; exit 1)\n+endif\n+else\n+libffi_version_script =\n+libffi_version_dep =\n+endif\n+libffi_version_info = -version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n+\n+libffi_la_LDFLAGS = -no-undefined $(libffi_version_info) $(libffi_version_script) $(LTLDFLAGS) $(AM_LTLDFLAGS)\n+libffi_la_DEPENDENCIES = $(libffi_la_LIBADD) $(libffi_version_dep)\n \n AM_CPPFLAGS = -I. -I$(top_srcdir)/include -Iinclude -I$(top_srcdir)/src\n AM_CCASFLAGS = $(AM_CPPFLAGS)"}, {"sha": "da41ab95fb7549a0111d8679e32bf7623925885b", "filename": "libffi/Makefile.in", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=2c05525623d96388cf938f268225813ec2edd5ec", "patch": "@@ -248,6 +248,7 @@ NM = @NM@\n NMEDIT = @NMEDIT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n+OPT_LDFLAGS = @OPT_LDFLAGS@\n OTOOL = @OTOOL@\n OTOOL64 = @OTOOL64@\n PACKAGE = @PACKAGE@\n@@ -259,6 +260,7 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n RANLIB = @RANLIB@\n+SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SED = @SED@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n@@ -478,15 +480,22 @@ EXTRA_libffi_la_SOURCES = \\\n \tsrc/xtensa/ffi.c src/xtensa/sysv.S\n \n libffi_la_LIBADD = $(TARGET_OBJ)\n-libffi_la_DEPENDENCIES = $(TARGET_OBJ)\n libffi_convenience_la_SOURCES = $(libffi_la_SOURCES)\n EXTRA_libffi_convenience_la_SOURCES = $(EXTRA_libffi_la_SOURCES)\n libffi_convenience_la_LIBADD = $(libffi_la_LIBADD)\n libffi_convenience_la_DEPENDENCIES = $(libffi_la_DEPENDENCIES)\n nodist_libffi_convenience_la_SOURCES = $(nodist_libffi_la_SOURCES)\n LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n AM_CFLAGS = -Wall -g -fexceptions $(am__append_2)\n-libffi_la_LDFLAGS = -no-undefined -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LTLDFLAGS) $(AM_LTLDFLAGS)\n+@LIBAT_BUILD_VERSIONED_SHLIB_FALSE@libffi_version_script = \n+@LIBAT_BUILD_VERSIONED_SHLIB_GNU_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@libffi_version_script = -Wl,--version-script,$(top_srcdir)/libffi.map\n+@LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@libffi_version_script = -Wl,-M,libffi.map-sun\n+@LIBAT_BUILD_VERSIONED_SHLIB_FALSE@libffi_version_dep = \n+@LIBAT_BUILD_VERSIONED_SHLIB_GNU_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@libffi_version_dep = $(top_srcdir)/libffi.map\n+@LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@libffi_version_dep = libffi.map-sun\n+libffi_version_info = -version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n+libffi_la_LDFLAGS = -no-undefined $(libffi_version_info) $(libffi_version_script) $(LTLDFLAGS) $(AM_LTLDFLAGS)\n+libffi_la_DEPENDENCIES = $(libffi_la_LIBADD) $(libffi_version_dep)\n AM_CPPFLAGS = -I. -I$(top_srcdir)/include -Iinclude -I$(top_srcdir)/src\n AM_CCASFLAGS = $(AM_CPPFLAGS)\n all: fficonfig.h\n@@ -1892,6 +1901,15 @@ doc/libffi.info: $(STAMP_BUILD_INFO)\n stamp-build-info: doc/libffi.texi $(srcdir)/doc/version.texi doc/$(am__dirstamp)\n \t$(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I $(srcdir)/doc -o doc/libffi.info $(srcdir)/doc/libffi.texi\n \t@touch $@\n+@LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@libffi.map-sun : $(top_srcdir)/libffi.map \\\n+@LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@                $(top_srcdir)/../contrib/make_sunver.pl \\\n+@LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@                $(libffi_la_OBJECTS) $(libffi_la_LIBADD)\n+@LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@        perl $(top_srcdir)/../contrib/make_sunver.pl \\\n+@LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@          $(top_srcdir)/libffi.map \\\n+@LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@          $(libffi_la_OBJECTS:%.lo=.libs/%.o) \\\n+@LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@         `echo $(libffi_la_LIBADD) | \\\n+@LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@            sed 's,\\([^/        ]*\\)\\.l\\([ao]\\),.libs/\\1.\\2,g'` \\\n+@LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBAT_BUILD_VERSIONED_SHLIB_TRUE@         > $@ || (rm -f $@ ; exit 1)\n \n # Multilib support.  Automake should provide these on its own.\n all-recursive: all-multi"}, {"sha": "270dadfcc18195973cf7b77b519047fcd7f5d176", "filename": "libffi/acinclude.m4", "status": "modified", "additions": 381, "deletions": 0, "changes": 381, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Facinclude.m4?ref=2c05525623d96388cf938f268225813ec2edd5ec", "patch": "@@ -90,3 +90,384 @@ if test $ac_cv_func_mmap_anon = yes; then\n \t    [Define if mmap with MAP_ANON(YMOUS) works.])\n fi\n ])\n+\n+dnl ----------------------------------------------------------------------\n+dnl This whole bit snagged from libstdc++-v3, via libatomic.\n+\n+dnl\n+dnl LIBAT_ENABLE\n+dnl    (FEATURE, DEFAULT, HELP-ARG, HELP-STRING)\n+dnl    (FEATURE, DEFAULT, HELP-ARG, HELP-STRING, permit a|b|c)\n+dnl    (FEATURE, DEFAULT, HELP-ARG, HELP-STRING, SHELL-CODE-HANDLER)\n+dnl\n+dnl See docs/html/17_intro/configury.html#enable for documentation.\n+dnl\n+m4_define([LIBAT_ENABLE],[dnl\n+m4_define([_g_switch],[--enable-$1])dnl\n+m4_define([_g_help],[AC_HELP_STRING(_g_switch$3,[$4 @<:@default=$2@:>@])])dnl\n+ AC_ARG_ENABLE($1,_g_help,\n+  m4_bmatch([$5],\n+   [^permit ],\n+     [[\n+      case \"$enableval\" in\n+       m4_bpatsubst([$5],[permit ])) ;;\n+       *) AC_MSG_ERROR(Unknown argument to enable/disable $1) ;;\n+          dnl Idea for future:  generate a URL pointing to\n+          dnl \"onlinedocs/configopts.html#whatever\"\n+      esac\n+     ]],\n+   [^$],\n+     [[\n+      case \"$enableval\" in\n+       yes|no) ;;\n+       *) AC_MSG_ERROR(Argument to enable/disable $1 must be yes or no) ;;\n+      esac\n+     ]],\n+   [[$5]]),\n+  [enable_]m4_bpatsubst([$1],-,_)[=][$2])\n+m4_undefine([_g_switch])dnl\n+m4_undefine([_g_help])dnl\n+])\n+\n+dnl\n+dnl If GNU ld is in use, check to see if tricky linker opts can be used.  If\n+dnl the native linker is in use, all variables will be defined to something\n+dnl safe (like an empty string).\n+dnl\n+dnl Defines:\n+dnl  SECTION_LDFLAGS='-Wl,--gc-sections' if possible\n+dnl  OPT_LDFLAGS='-Wl,-O1' if possible\n+dnl  LD (as a side effect of testing)\n+dnl Sets:\n+dnl  with_gnu_ld\n+dnl  libat_ld_is_gold (possibly)\n+dnl  libat_gnu_ld_version (possibly)\n+dnl\n+dnl The last will be a single integer, e.g., version 1.23.45.0.67.89 will\n+dnl set libat_gnu_ld_version to 12345.  Zeros cause problems.\n+dnl\n+AC_DEFUN([LIBAT_CHECK_LINKER_FEATURES], [\n+  # If we're not using GNU ld, then there's no point in even trying these\n+  # tests.  Check for that first.  We should have already tested for gld\n+  # by now (in libtool), but require it now just to be safe...\n+  test -z \"$SECTION_LDFLAGS\" && SECTION_LDFLAGS=''\n+  test -z \"$OPT_LDFLAGS\" && OPT_LDFLAGS=''\n+  AC_REQUIRE([AC_PROG_LD])\n+  AC_REQUIRE([AC_PROG_AWK])\n+\n+  # The name set by libtool depends on the version of libtool.  Shame on us\n+  # for depending on an impl detail, but c'est la vie.  Older versions used\n+  # ac_cv_prog_gnu_ld, but now it's lt_cv_prog_gnu_ld, and is copied back on\n+  # top of with_gnu_ld (which is also set by --with-gnu-ld, so that actually\n+  # makes sense).  We'll test with_gnu_ld everywhere else, so if that isn't\n+  # set (hence we're using an older libtool), then set it.\n+  if test x${with_gnu_ld+set} != xset; then\n+    if test x${ac_cv_prog_gnu_ld+set} != xset; then\n+      # We got through \"ac_require(ac_prog_ld)\" and still not set?  Huh?\n+      with_gnu_ld=no\n+    else\n+      with_gnu_ld=$ac_cv_prog_gnu_ld\n+    fi\n+  fi\n+\n+  # Start by getting the version number.  I think the libtool test already\n+  # does some of this, but throws away the result.\n+  libat_ld_is_gold=no\n+  if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n+    libat_ld_is_gold=yes\n+  fi\n+  changequote(,)\n+  ldver=`$LD --version 2>/dev/null |\n+         sed -e 's/GNU gold /GNU ld /;s/GNU ld version /GNU ld /;s/GNU ld ([^)]*) /GNU ld /;s/GNU ld \\([0-9.][0-9.]*\\).*/\\1/; q'`\n+  changequote([,])\n+  libat_gnu_ld_version=`echo $ldver | \\\n+         $AWK -F. '{ if (NF<3) [$]3=0; print ([$]1*100+[$]2)*100+[$]3 }'`\n+\n+  # Set --gc-sections.\n+  if test \"$with_gnu_ld\" = \"notbroken\"; then\n+    # GNU ld it is!  Joy and bunny rabbits!\n+\n+    # All these tests are for C++; save the language and the compiler flags.\n+    # Need to do this so that g++ won't try to link in libstdc++\n+    ac_test_CFLAGS=\"${CFLAGS+set}\"\n+    ac_save_CFLAGS=\"$CFLAGS\"\n+    CFLAGS='-x c++  -Wl,--gc-sections'\n+\n+    # Check for -Wl,--gc-sections\n+    # XXX This test is broken at the moment, as symbols required for linking\n+    # are now in libsupc++ (not built yet).  In addition, this test has\n+    # cored on solaris in the past.  In addition, --gc-sections doesn't\n+    # really work at the moment (keeps on discarding used sections, first\n+    # .eh_frame and now some of the glibc sections for iconv).\n+    # Bzzzzt.  Thanks for playing, maybe next time.\n+    AC_MSG_CHECKING([for ld that supports -Wl,--gc-sections])\n+    AC_TRY_RUN([\n+     int main(void)\n+     {\n+       try { throw 1; }\n+       catch (...) { };\n+       return 0;\n+     }\n+    ], [ac_sectionLDflags=yes],[ac_sectionLDflags=no], [ac_sectionLDflags=yes])\n+    if test \"$ac_test_CFLAGS\" = set; then\n+      CFLAGS=\"$ac_save_CFLAGS\"\n+    else\n+      # this is the suspicious part\n+      CFLAGS=''\n+    fi\n+    if test \"$ac_sectionLDflags\" = \"yes\"; then\n+      SECTION_LDFLAGS=\"-Wl,--gc-sections $SECTION_LDFLAGS\"\n+    fi\n+    AC_MSG_RESULT($ac_sectionLDflags)\n+  fi\n+\n+  # Set linker optimization flags.\n+  if test x\"$with_gnu_ld\" = x\"yes\"; then\n+    OPT_LDFLAGS=\"-Wl,-O1 $OPT_LDFLAGS\"\n+  fi\n+\n+  AC_SUBST(SECTION_LDFLAGS)\n+  AC_SUBST(OPT_LDFLAGS)\n+])\n+\n+\n+dnl\n+dnl If GNU ld is in use, check to see if tricky linker opts can be used.  If\n+dnl the native linker is in use, all variables will be defined to something\n+dnl safe (like an empty string).\n+dnl\n+dnl Defines:\n+dnl  SECTION_LDFLAGS='-Wl,--gc-sections' if possible\n+dnl  OPT_LDFLAGS='-Wl,-O1' if possible\n+dnl  LD (as a side effect of testing)\n+dnl Sets:\n+dnl  with_gnu_ld\n+dnl  libat_ld_is_gold (possibly)\n+dnl  libat_gnu_ld_version (possibly)\n+dnl\n+dnl The last will be a single integer, e.g., version 1.23.45.0.67.89 will\n+dnl set libat_gnu_ld_version to 12345.  Zeros cause problems.\n+dnl\n+AC_DEFUN([LIBAT_CHECK_LINKER_FEATURES], [\n+  # If we're not using GNU ld, then there's no point in even trying these\n+  # tests.  Check for that first.  We should have already tested for gld\n+  # by now (in libtool), but require it now just to be safe...\n+  test -z \"$SECTION_LDFLAGS\" && SECTION_LDFLAGS=''\n+  test -z \"$OPT_LDFLAGS\" && OPT_LDFLAGS=''\n+  AC_REQUIRE([AC_PROG_LD])\n+  AC_REQUIRE([AC_PROG_AWK])\n+\n+  # The name set by libtool depends on the version of libtool.  Shame on us\n+  # for depending on an impl detail, but c'est la vie.  Older versions used\n+  # ac_cv_prog_gnu_ld, but now it's lt_cv_prog_gnu_ld, and is copied back on\n+  # top of with_gnu_ld (which is also set by --with-gnu-ld, so that actually\n+  # makes sense).  We'll test with_gnu_ld everywhere else, so if that isn't\n+  # set (hence we're using an older libtool), then set it.\n+  if test x${with_gnu_ld+set} != xset; then\n+    if test x${ac_cv_prog_gnu_ld+set} != xset; then\n+      # We got through \"ac_require(ac_prog_ld)\" and still not set?  Huh?\n+      with_gnu_ld=no\n+    else\n+      with_gnu_ld=$ac_cv_prog_gnu_ld\n+    fi\n+  fi\n+\n+  # Start by getting the version number.  I think the libtool test already\n+  # does some of this, but throws away the result.\n+  libat_ld_is_gold=no\n+  if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n+    libat_ld_is_gold=yes\n+  fi\n+  changequote(,)\n+  ldver=`$LD --version 2>/dev/null |\n+         sed -e 's/GNU gold /GNU ld /;s/GNU ld version /GNU ld /;s/GNU ld ([^)]*) /GNU ld /;s/GNU ld \\([0-9.][0-9.]*\\).*/\\1/; q'`\n+  changequote([,])\n+  libat_gnu_ld_version=`echo $ldver | \\\n+         $AWK -F. '{ if (NF<3) [$]3=0; print ([$]1*100+[$]2)*100+[$]3 }'`\n+\n+  # Set --gc-sections.\n+  if test \"$with_gnu_ld\" = \"notbroken\"; then\n+    # GNU ld it is!  Joy and bunny rabbits!\n+\n+    # All these tests are for C++; save the language and the compiler flags.\n+    # Need to do this so that g++ won't try to link in libstdc++\n+    ac_test_CFLAGS=\"${CFLAGS+set}\"\n+    ac_save_CFLAGS=\"$CFLAGS\"\n+    CFLAGS='-x c++  -Wl,--gc-sections'\n+\n+    # Check for -Wl,--gc-sections\n+    # XXX This test is broken at the moment, as symbols required for linking\n+    # are now in libsupc++ (not built yet).  In addition, this test has\n+    # cored on solaris in the past.  In addition, --gc-sections doesn't\n+    # really work at the moment (keeps on discarding used sections, first\n+    # .eh_frame and now some of the glibc sections for iconv).\n+    # Bzzzzt.  Thanks for playing, maybe next time.\n+    AC_MSG_CHECKING([for ld that supports -Wl,--gc-sections])\n+    AC_TRY_RUN([\n+     int main(void)\n+     {\n+       try { throw 1; }\n+       catch (...) { };\n+       return 0;\n+     }\n+    ], [ac_sectionLDflags=yes],[ac_sectionLDflags=no], [ac_sectionLDflags=yes])\n+    if test \"$ac_test_CFLAGS\" = set; then\n+      CFLAGS=\"$ac_save_CFLAGS\"\n+    else\n+      # this is the suspicious part\n+      CFLAGS=''\n+    fi\n+    if test \"$ac_sectionLDflags\" = \"yes\"; then\n+      SECTION_LDFLAGS=\"-Wl,--gc-sections $SECTION_LDFLAGS\"\n+    fi\n+    AC_MSG_RESULT($ac_sectionLDflags)\n+  fi\n+\n+  # Set linker optimization flags.\n+  if test x\"$with_gnu_ld\" = x\"yes\"; then\n+    OPT_LDFLAGS=\"-Wl,-O1 $OPT_LDFLAGS\"\n+  fi\n+\n+  AC_SUBST(SECTION_LDFLAGS)\n+  AC_SUBST(OPT_LDFLAGS)\n+])\n+\n+\n+dnl\n+dnl Add version tags to symbols in shared library (or not), additionally\n+dnl marking other symbols as private/local (or not).\n+dnl\n+dnl --enable-symvers=style adds a version script to the linker call when\n+dnl       creating the shared library.  The choice of version script is\n+dnl       controlled by 'style'.\n+dnl --disable-symvers does not.\n+dnl  +  Usage:  LIBAT_ENABLE_SYMVERS[(DEFAULT)]\n+dnl       Where DEFAULT is either 'yes' or 'no'.  Passing `yes' tries to\n+dnl       choose a default style based on linker characteristics.  Passing\n+dnl       'no' disables versioning.\n+dnl\n+AC_DEFUN([LIBAT_ENABLE_SYMVERS], [\n+\n+LIBAT_ENABLE(symvers,yes,[=STYLE],\n+  [enables symbol versioning of the shared library],\n+  [permit yes|no|gnu*|sun])\n+\n+# If we never went through the LIBAT_CHECK_LINKER_FEATURES macro, then we\n+# don't know enough about $LD to do tricks...\n+AC_REQUIRE([LIBAT_CHECK_LINKER_FEATURES])\n+\n+# Turn a 'yes' into a suitable default.\n+if test x$enable_symvers = xyes ; then\n+  # FIXME  The following test is too strict, in theory.\n+  if test $enable_shared = no || test \"x$LD\" = x; then\n+    enable_symvers=no\n+  else\n+    if test $with_gnu_ld = yes ; then\n+      enable_symvers=gnu\n+    else\n+      case ${target_os} in\n+        # Sun symbol versioning exists since Solaris 2.5.\n+        solaris2.[[5-9]]* | solaris2.1[[0-9]]*)\n+          enable_symvers=sun ;;\n+        *)\n+          enable_symvers=no ;;\n+      esac\n+    fi\n+  fi\n+fi\n+\n+# Check if 'sun' was requested on non-Solaris 2 platforms.\n+if test x$enable_symvers = xsun ; then\n+  case ${target_os} in\n+    solaris2*)\n+      # All fine.\n+      ;;\n+    *)\n+      # Unlikely to work.\n+      AC_MSG_WARN([=== You have requested Sun symbol versioning, but])\n+      AC_MSG_WARN([=== you are not targetting Solaris 2.])\n+      AC_MSG_WARN([=== Symbol versioning will be disabled.])\n+      enable_symvers=no\n+      ;;\n+  esac\n+fi\n+\n+# Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n+if test $enable_symvers != no; then\n+  AC_MSG_CHECKING([for shared libgcc])\n+  ac_save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=' -lgcc_s'\n+  AC_TRY_LINK(, [return 0;], libat_shared_libgcc=yes, libat_shared_libgcc=no)\n+  CFLAGS=\"$ac_save_CFLAGS\"\n+  if test $libat_shared_libgcc = no; then\n+    cat > conftest.c <<EOF\n+int main (void) { return 0; }\n+EOF\n+changequote(,)dnl\n+    libat_libgcc_s_suffix=`${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS \\\n+\t\t\t     -shared -shared-libgcc -o conftest.so \\\n+\t\t\t     conftest.c -v 2>&1 >/dev/null \\\n+\t\t\t     | sed -n 's/^.* -lgcc_s\\([^ ]*\\) .*$/\\1/p'`\n+changequote([,])dnl\n+    rm -f conftest.c conftest.so\n+    if test x${libat_libgcc_s_suffix+set} = xset; then\n+      CFLAGS=\" -lgcc_s$libat_libgcc_s_suffix\"\n+      AC_TRY_LINK(, [return 0;], libat_shared_libgcc=yes)\n+      CFLAGS=\"$ac_save_CFLAGS\"\n+    fi\n+  fi\n+  AC_MSG_RESULT($libat_shared_libgcc)\n+fi\n+\n+# For GNU ld, we need at least this version.  The format is described in\n+# LIBAT_CHECK_LINKER_FEATURES above.\n+libat_min_gnu_ld_version=21400\n+# XXXXXXXXXXX libat_gnu_ld_version=21390\n+\n+# Check to see if unspecified \"yes\" value can win, given results above.\n+# Change \"yes\" into either \"no\" or a style name.\n+if test $enable_symvers != no && test $libat_shared_libgcc = yes; then\n+  if test $with_gnu_ld = yes; then\n+    if test $libat_gnu_ld_version -ge $libat_min_gnu_ld_version ; then\n+      enable_symvers=gnu\n+    elif test $libat_ld_is_gold = yes ; then\n+      enable_symvers=gnu\n+    else\n+      # The right tools, the right setup, but too old.  Fallbacks?\n+      AC_MSG_WARN(=== Linker version $libat_gnu_ld_version is too old for)\n+      AC_MSG_WARN(=== full symbol versioning support in this release of GCC.)\n+      AC_MSG_WARN(=== You would need to upgrade your binutils to version)\n+      AC_MSG_WARN(=== $libat_min_gnu_ld_version or later and rebuild GCC.)\n+      if test $libat_gnu_ld_version -ge 21200 ; then\n+        # Globbing fix is present, proper block support is not.\n+        dnl AC_MSG_WARN([=== Dude, you are soooo close.  Maybe we can fake it.])\n+        dnl enable_symvers=???\n+        AC_MSG_WARN([=== Symbol versioning will be disabled.])\n+        enable_symvers=no\n+      else\n+        # 2.11 or older.\n+        AC_MSG_WARN([=== Symbol versioning will be disabled.])\n+        enable_symvers=no\n+      fi\n+    fi\n+  elif test $enable_symvers = sun; then\n+    : All interesting versions of Sun ld support sun style symbol versioning.\n+  else\n+    # just fail for now\n+    AC_MSG_WARN([=== You have requested some kind of symbol versioning, but])\n+    AC_MSG_WARN([=== either you are not using a supported linker, or you are])\n+    AC_MSG_WARN([=== not building a shared libgcc_s (which is required).])\n+    AC_MSG_WARN([=== Symbol versioning will be disabled.])\n+    enable_symvers=no\n+  fi\n+fi\n+if test $enable_symvers = gnu; then\n+  AC_DEFINE(LIBAT_GNU_SYMBOL_VERSIONING, 1,\n+\t    [Define to 1 if GNU symbol versioning is used for libatomic.])\n+fi\n+\n+AM_CONDITIONAL(LIBAT_BUILD_VERSIONED_SHLIB, test $enable_symvers != no)\n+AM_CONDITIONAL(LIBAT_BUILD_VERSIONED_SHLIB_GNU, test $enable_symvers = gnu)\n+AM_CONDITIONAL(LIBAT_BUILD_VERSIONED_SHLIB_SUN, test $enable_symvers = sun)\n+AC_MSG_NOTICE(versioning on shared library symbols is $enable_symvers)\n+])"}, {"sha": "f40dd4d01a4832d62de4e6d12a3afe4dae2fb410", "filename": "libffi/configure", "status": "modified", "additions": 440, "deletions": 4, "changes": 444, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=2c05525623d96388cf938f268225813ec2edd5ec", "patch": "@@ -604,6 +604,14 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+LIBAT_BUILD_VERSIONED_SHLIB_SUN_FALSE\n+LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE\n+LIBAT_BUILD_VERSIONED_SHLIB_GNU_FALSE\n+LIBAT_BUILD_VERSIONED_SHLIB_GNU_TRUE\n+LIBAT_BUILD_VERSIONED_SHLIB_FALSE\n+LIBAT_BUILD_VERSIONED_SHLIB_TRUE\n+OPT_LDFLAGS\n+SECTION_LDFLAGS\n toolexeclibdir\n toolexecdir\n FFI_DEBUG_FALSE\n@@ -768,6 +776,7 @@ enable_debug\n enable_structs\n enable_raw_api\n enable_purify_safety\n+enable_symvers\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1416,6 +1425,8 @@ Optional Features:\n   --disable-structs       omit code for struct support\n   --disable-raw-api       make the raw api unavailable\n   --enable-purify-safety  purify-safe mode\n+  --enable-symvers=STYLE  enables symbol versioning of the shared library\n+                          [default=yes]\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -9347,7 +9358,7 @@ _LT_EOF\n \tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n \t  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \telse\n-\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \tfi\n \taix_use_runtimelinking=no\n \n@@ -11375,7 +11386,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11378 \"configure\"\n+#line 11389 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11481,7 +11492,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11484 \"configure\"\n+#line 11495 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13833,7 +13844,7 @@ $as_echo_n \"checking whether the $compiler linker ($LD) supports shared librarie\n     if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n       export_symbols_cmds_CXX='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n     else\n-      export_symbols_cmds_CXX='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+      export_symbols_cmds_CXX='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n     fi\n     ;;\n   pw32*)\n@@ -16009,6 +16020,419 @@ else\n   multilib_arg=\n fi\n \n+# Check linker support.\n+\n+\n+# Check whether --with-gnu-ld was given.\n+if test \"${with_gnu_ld+set}\" = set; then :\n+  withval=$with_gnu_ld; test \"$withval\" = no || with_gnu_ld=yes\n+else\n+  with_gnu_ld=no\n+fi\n+\n+ac_prog=ld\n+if test \"$GCC\" = yes; then\n+  # Check if gcc -print-prog-name=ld gives a path.\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld used by $CC\" >&5\n+$as_echo_n \"checking for ld used by $CC... \" >&6; }\n+  case $host in\n+  *-*-mingw*)\n+    # gcc leaves a trailing carriage return which upsets mingw\n+    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n+  *)\n+    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n+  esac\n+  case $ac_prog in\n+    # Accept absolute paths.\n+    [\\\\/]* | ?:[\\\\/]*)\n+      re_direlt='/[^/][^/]*/\\.\\./'\n+      # Canonicalize the pathname of ld\n+      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n+      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n+\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n+      done\n+      test -z \"$LD\" && LD=\"$ac_prog\"\n+      ;;\n+  \"\")\n+    # If it fails, then pretend we aren't using GCC.\n+    ac_prog=ld\n+    ;;\n+  *)\n+    # If it is relative, then search for the first ld in PATH.\n+    with_gnu_ld=unknown\n+    ;;\n+  esac\n+elif test \"$with_gnu_ld\" = yes; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for GNU ld\" >&5\n+$as_echo_n \"checking for GNU ld... \" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for non-GNU ld\" >&5\n+$as_echo_n \"checking for non-GNU ld... \" >&6; }\n+fi\n+if test \"${lt_cv_path_LD+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -z \"$LD\"; then\n+  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n+  for ac_dir in $PATH; do\n+    IFS=\"$lt_save_ifs\"\n+    test -z \"$ac_dir\" && ac_dir=.\n+    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n+      lt_cv_path_LD=\"$ac_dir/$ac_prog\"\n+      # Check to see if the program is GNU ld.  I'd rather use --version,\n+      # but apparently some variants of GNU ld only accept -v.\n+      # Break only if it was the GNU/non-GNU ld that we prefer.\n+      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n+      *GNU* | *'with BFD'*)\n+\ttest \"$with_gnu_ld\" != no && break\n+\t;;\n+      *)\n+\ttest \"$with_gnu_ld\" != yes && break\n+\t;;\n+      esac\n+    fi\n+  done\n+  IFS=\"$lt_save_ifs\"\n+else\n+  lt_cv_path_LD=\"$LD\" # Let the user override the test with a path.\n+fi\n+fi\n+\n+LD=\"$lt_cv_path_LD\"\n+if test -n \"$LD\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LD\" >&5\n+$as_echo \"$LD\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+test -z \"$LD\" && as_fn_error \"no acceptable ld found in \\$PATH\" \"$LINENO\" 5\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld\" >&5\n+$as_echo_n \"checking if the linker ($LD) is GNU ld... \" >&6; }\n+if test \"${lt_cv_prog_gnu_ld+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  # I'd rather use --version here, but apparently some GNU lds only accept -v.\n+case `$LD -v 2>&1 </dev/null` in\n+*GNU* | *'with BFD'*)\n+  lt_cv_prog_gnu_ld=yes\n+  ;;\n+*)\n+  lt_cv_prog_gnu_ld=no\n+  ;;\n+esac\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_gnu_ld\" >&5\n+$as_echo \"$lt_cv_prog_gnu_ld\" >&6; }\n+with_gnu_ld=$lt_cv_prog_gnu_ld\n+\n+\n+\n+\n+\n+\n+\n+  # If we're not using GNU ld, then there's no point in even trying these\n+  # tests.  Check for that first.  We should have already tested for gld\n+  # by now (in libtool), but require it now just to be safe...\n+  test -z \"$SECTION_LDFLAGS\" && SECTION_LDFLAGS=''\n+  test -z \"$OPT_LDFLAGS\" && OPT_LDFLAGS=''\n+\n+\n+\n+  # The name set by libtool depends on the version of libtool.  Shame on us\n+  # for depending on an impl detail, but c'est la vie.  Older versions used\n+  # ac_cv_prog_gnu_ld, but now it's lt_cv_prog_gnu_ld, and is copied back on\n+  # top of with_gnu_ld (which is also set by --with-gnu-ld, so that actually\n+  # makes sense).  We'll test with_gnu_ld everywhere else, so if that isn't\n+  # set (hence we're using an older libtool), then set it.\n+  if test x${with_gnu_ld+set} != xset; then\n+    if test x${ac_cv_prog_gnu_ld+set} != xset; then\n+      # We got through \"ac_require(ac_prog_ld)\" and still not set?  Huh?\n+      with_gnu_ld=no\n+    else\n+      with_gnu_ld=$ac_cv_prog_gnu_ld\n+    fi\n+  fi\n+\n+  # Start by getting the version number.  I think the libtool test already\n+  # does some of this, but throws away the result.\n+  libat_ld_is_gold=no\n+  if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n+    libat_ld_is_gold=yes\n+  fi\n+\n+  ldver=`$LD --version 2>/dev/null |\n+         sed -e 's/GNU gold /GNU ld /;s/GNU ld version /GNU ld /;s/GNU ld ([^)]*) /GNU ld /;s/GNU ld \\([0-9.][0-9.]*\\).*/\\1/; q'`\n+\n+  libat_gnu_ld_version=`echo $ldver | \\\n+         $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n+\n+  # Set --gc-sections.\n+  if test \"$with_gnu_ld\" = \"notbroken\"; then\n+    # GNU ld it is!  Joy and bunny rabbits!\n+\n+    # All these tests are for C++; save the language and the compiler flags.\n+    # Need to do this so that g++ won't try to link in libstdc++\n+    ac_test_CFLAGS=\"${CFLAGS+set}\"\n+    ac_save_CFLAGS=\"$CFLAGS\"\n+    CFLAGS='-x c++  -Wl,--gc-sections'\n+\n+    # Check for -Wl,--gc-sections\n+    # XXX This test is broken at the moment, as symbols required for linking\n+    # are now in libsupc++ (not built yet).  In addition, this test has\n+    # cored on solaris in the past.  In addition, --gc-sections doesn't\n+    # really work at the moment (keeps on discarding used sections, first\n+    # .eh_frame and now some of the glibc sections for iconv).\n+    # Bzzzzt.  Thanks for playing, maybe next time.\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,--gc-sections\" >&5\n+$as_echo_n \"checking for ld that supports -Wl,--gc-sections... \" >&6; }\n+    if test \"$cross_compiling\" = yes; then :\n+  ac_sectionLDflags=yes\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+     int main(void)\n+     {\n+       try { throw 1; }\n+       catch (...) { };\n+       return 0;\n+     }\n+\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  ac_sectionLDflags=yes\n+else\n+  ac_sectionLDflags=no\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+fi\n+\n+    if test \"$ac_test_CFLAGS\" = set; then\n+      CFLAGS=\"$ac_save_CFLAGS\"\n+    else\n+      # this is the suspicious part\n+      CFLAGS=''\n+    fi\n+    if test \"$ac_sectionLDflags\" = \"yes\"; then\n+      SECTION_LDFLAGS=\"-Wl,--gc-sections $SECTION_LDFLAGS\"\n+    fi\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_sectionLDflags\" >&5\n+$as_echo \"$ac_sectionLDflags\" >&6; }\n+  fi\n+\n+  # Set linker optimization flags.\n+  if test x\"$with_gnu_ld\" = x\"yes\"; then\n+    OPT_LDFLAGS=\"-Wl,-O1 $OPT_LDFLAGS\"\n+  fi\n+\n+\n+\n+\n+\n+\n+ # Check whether --enable-symvers was given.\n+if test \"${enable_symvers+set}\" = set; then :\n+  enableval=$enable_symvers;\n+      case \"$enableval\" in\n+       yes|no|gnu*|sun) ;;\n+       *) as_fn_error \"Unknown argument to enable/disable symvers\" \"$LINENO\" 5 ;;\n+                          esac\n+\n+else\n+  enable_symvers=yes\n+fi\n+\n+\n+\n+# If we never went through the LIBAT_CHECK_LINKER_FEATURES macro, then we\n+# don't know enough about $LD to do tricks...\n+\n+\n+# Turn a 'yes' into a suitable default.\n+if test x$enable_symvers = xyes ; then\n+  # FIXME  The following test is too strict, in theory.\n+  if test $enable_shared = no || test \"x$LD\" = x; then\n+    enable_symvers=no\n+  else\n+    if test $with_gnu_ld = yes ; then\n+      enable_symvers=gnu\n+    else\n+      case ${target_os} in\n+        # Sun symbol versioning exists since Solaris 2.5.\n+        solaris2.[5-9]* | solaris2.1[0-9]*)\n+          enable_symvers=sun ;;\n+        *)\n+          enable_symvers=no ;;\n+      esac\n+    fi\n+  fi\n+fi\n+\n+# Check if 'sun' was requested on non-Solaris 2 platforms.\n+if test x$enable_symvers = xsun ; then\n+  case ${target_os} in\n+    solaris2*)\n+      # All fine.\n+      ;;\n+    *)\n+      # Unlikely to work.\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === You have requested Sun symbol versioning, but\" >&5\n+$as_echo \"$as_me: WARNING: === You have requested Sun symbol versioning, but\" >&2;}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === you are not targetting Solaris 2.\" >&5\n+$as_echo \"$as_me: WARNING: === you are not targetting Solaris 2.\" >&2;}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Symbol versioning will be disabled.\" >&5\n+$as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n+      enable_symvers=no\n+      ;;\n+  esac\n+fi\n+\n+# Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n+if test $enable_symvers != no; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for shared libgcc\" >&5\n+$as_echo_n \"checking for shared libgcc... \" >&6; }\n+  ac_save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=' -lgcc_s'\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  libat_shared_libgcc=yes\n+else\n+  libat_shared_libgcc=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+  CFLAGS=\"$ac_save_CFLAGS\"\n+  if test $libat_shared_libgcc = no; then\n+    cat > conftest.c <<EOF\n+int main (void) { return 0; }\n+EOF\n+    libat_libgcc_s_suffix=`${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS \\\n+\t\t\t     -shared -shared-libgcc -o conftest.so \\\n+\t\t\t     conftest.c -v 2>&1 >/dev/null \\\n+\t\t\t     | sed -n 's/^.* -lgcc_s\\([^ ]*\\) .*$/\\1/p'`\n+    rm -f conftest.c conftest.so\n+    if test x${libat_libgcc_s_suffix+set} = xset; then\n+      CFLAGS=\" -lgcc_s$libat_libgcc_s_suffix\"\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  libat_shared_libgcc=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+      CFLAGS=\"$ac_save_CFLAGS\"\n+    fi\n+  fi\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libat_shared_libgcc\" >&5\n+$as_echo \"$libat_shared_libgcc\" >&6; }\n+fi\n+\n+# For GNU ld, we need at least this version.  The format is described in\n+# LIBAT_CHECK_LINKER_FEATURES above.\n+libat_min_gnu_ld_version=21400\n+# XXXXXXXXXXX libat_gnu_ld_version=21390\n+\n+# Check to see if unspecified \"yes\" value can win, given results above.\n+# Change \"yes\" into either \"no\" or a style name.\n+if test $enable_symvers != no && test $libat_shared_libgcc = yes; then\n+  if test $with_gnu_ld = yes; then\n+    if test $libat_gnu_ld_version -ge $libat_min_gnu_ld_version ; then\n+      enable_symvers=gnu\n+    elif test $libat_ld_is_gold = yes ; then\n+      enable_symvers=gnu\n+    else\n+      # The right tools, the right setup, but too old.  Fallbacks?\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Linker version $libat_gnu_ld_version is too old for\" >&5\n+$as_echo \"$as_me: WARNING: === Linker version $libat_gnu_ld_version is too old for\" >&2;}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === full symbol versioning support in this release of GCC.\" >&5\n+$as_echo \"$as_me: WARNING: === full symbol versioning support in this release of GCC.\" >&2;}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === You would need to upgrade your binutils to version\" >&5\n+$as_echo \"$as_me: WARNING: === You would need to upgrade your binutils to version\" >&2;}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === $libat_min_gnu_ld_version or later and rebuild GCC.\" >&5\n+$as_echo \"$as_me: WARNING: === $libat_min_gnu_ld_version or later and rebuild GCC.\" >&2;}\n+      if test $libat_gnu_ld_version -ge 21200 ; then\n+        # Globbing fix is present, proper block support is not.\n+                        { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Symbol versioning will be disabled.\" >&5\n+$as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n+        enable_symvers=no\n+      else\n+        # 2.11 or older.\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Symbol versioning will be disabled.\" >&5\n+$as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n+        enable_symvers=no\n+      fi\n+    fi\n+  elif test $enable_symvers = sun; then\n+    : All interesting versions of Sun ld support sun style symbol versioning.\n+  else\n+    # just fail for now\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === You have requested some kind of symbol versioning, but\" >&5\n+$as_echo \"$as_me: WARNING: === You have requested some kind of symbol versioning, but\" >&2;}\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === either you are not using a supported linker, or you are\" >&5\n+$as_echo \"$as_me: WARNING: === either you are not using a supported linker, or you are\" >&2;}\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === not building a shared libgcc_s (which is required).\" >&5\n+$as_echo \"$as_me: WARNING: === not building a shared libgcc_s (which is required).\" >&2;}\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Symbol versioning will be disabled.\" >&5\n+$as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n+    enable_symvers=no\n+  fi\n+fi\n+if test $enable_symvers = gnu; then\n+\n+$as_echo \"#define LIBAT_GNU_SYMBOL_VERSIONING 1\" >>confdefs.h\n+\n+fi\n+\n+ if test $enable_symvers != no; then\n+  LIBAT_BUILD_VERSIONED_SHLIB_TRUE=\n+  LIBAT_BUILD_VERSIONED_SHLIB_FALSE='#'\n+else\n+  LIBAT_BUILD_VERSIONED_SHLIB_TRUE='#'\n+  LIBAT_BUILD_VERSIONED_SHLIB_FALSE=\n+fi\n+\n+ if test $enable_symvers = gnu; then\n+  LIBAT_BUILD_VERSIONED_SHLIB_GNU_TRUE=\n+  LIBAT_BUILD_VERSIONED_SHLIB_GNU_FALSE='#'\n+else\n+  LIBAT_BUILD_VERSIONED_SHLIB_GNU_TRUE='#'\n+  LIBAT_BUILD_VERSIONED_SHLIB_GNU_FALSE=\n+fi\n+\n+ if test $enable_symvers = sun; then\n+  LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE=\n+  LIBAT_BUILD_VERSIONED_SHLIB_SUN_FALSE='#'\n+else\n+  LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE='#'\n+  LIBAT_BUILD_VERSIONED_SHLIB_SUN_FALSE=\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: versioning on shared library symbols is $enable_symvers\" >&5\n+$as_echo \"$as_me: versioning on shared library symbols is $enable_symvers\" >&6;}\n+\n+\n ac_config_commands=\"$ac_config_commands include\"\n \n ac_config_commands=\"$ac_config_commands src\"\n@@ -16170,6 +16594,18 @@ if test -z \"${FFI_DEBUG_TRUE}\" && test -z \"${FFI_DEBUG_FALSE}\"; then\n   as_fn_error \"conditional \\\"FFI_DEBUG\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${LIBAT_BUILD_VERSIONED_SHLIB_TRUE}\" && test -z \"${LIBAT_BUILD_VERSIONED_SHLIB_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBAT_BUILD_VERSIONED_SHLIB\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBAT_BUILD_VERSIONED_SHLIB_GNU_TRUE}\" && test -z \"${LIBAT_BUILD_VERSIONED_SHLIB_GNU_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBAT_BUILD_VERSIONED_SHLIB_GNU\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBAT_BUILD_VERSIONED_SHLIB_SUN_TRUE}\" && test -z \"${LIBAT_BUILD_VERSIONED_SHLIB_SUN_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBAT_BUILD_VERSIONED_SHLIB_SUN\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n \n : ${CONFIG_STATUS=./config.status}\n ac_write_fail=0"}, {"sha": "6205a10c36babaafbaa5e661cf706b4186a9ae51", "filename": "libffi/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=2c05525623d96388cf938f268225813ec2edd5ec", "patch": "@@ -355,6 +355,9 @@ else\n   multilib_arg=\n fi\n \n+# Check linker support.\n+LIBAT_ENABLE_SYMVERS\n+\n AC_CONFIG_COMMANDS(include, [test -d include || mkdir include])\n AC_CONFIG_COMMANDS(src, [\n test -d src || mkdir src"}, {"sha": "82b25d7267edbf0e82bee8a2dd1696fb21adf05a", "filename": "libffi/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.in?ref=2c05525623d96388cf938f268225813ec2edd5ec", "patch": "@@ -166,6 +166,7 @@ NM = @NM@\n NMEDIT = @NMEDIT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n+OPT_LDFLAGS = @OPT_LDFLAGS@\n OTOOL = @OTOOL@\n OTOOL64 = @OTOOL64@\n PACKAGE = @PACKAGE@\n@@ -177,6 +178,7 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n RANLIB = @RANLIB@\n+SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SED = @SED@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@"}, {"sha": "4a1238b5819fb43fd1ceb6574e4c4bc8a963c76c", "filename": "libffi/libffi.map", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Flibffi.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Flibffi.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Flibffi.map?ref=2c05525623d96388cf938f268225813ec2edd5ec", "patch": "@@ -0,0 +1,70 @@\n+LIBFFI_BASE_5 {\n+  global:\n+\t/* Exported data variables.  */\n+\tffi_type_void;\n+\tffi_type_uint8;\n+\tffi_type_sint8;\n+\tffi_type_uint16;\n+\tffi_type_sint16;\n+\tffi_type_uint32;\n+\tffi_type_sint32;\n+\tffi_type_uint64;\n+\tffi_type_sint64;\n+\tffi_type_float;\n+\tffi_type_double;\n+\tffi_type_longdouble;\n+\tffi_type_pointer;\n+\n+\t/* Exported functions.  */\n+\tffi_call;\n+\tffi_prep_cif;\n+\tffi_prep_cif_var;\n+\n+\tffi_raw_call;\n+\tffi_ptrarray_to_raw;\n+\tffi_raw_to_ptrarray;\n+\tffi_raw_size;\n+\n+\tffi_java_raw_call;\n+\tffi_java_ptrarray_to_raw;\n+\tffi_java_raw_to_ptrarray;\n+\tffi_java_raw_size;\n+\n+\t/* Functions in the ffi.h header, but not exported.\n+\t   These are listed here for documentation purposes only.\n+\tffi_prep_types\n+\tffi_prep_cif_core\n+\t*/\n+\n+  local:\n+\t*;\n+};\n+\n+/* This section is optional based on FFI_TARGET_HAS_COMPLEX_TYPE.  */\n+LIBFFI_COMPLEX_5 {\n+  global:\n+\t/* Exported data variables.  */\n+\tffi_type_complex_float;\n+\tffi_type_complex_double;\n+\tffi_type_complex_longdouble;\n+} LIBFFI_BASE_5;\n+\n+/* This section is optional based on FFI_CLOSURES.  */\n+LIBFFI_CLOSURE_5 {\n+  global:\n+\tffi_closure_alloc;\n+\tffi_closure_free;\n+\tffi_prep_closure;\n+\tffi_prep_closure_loc;\n+\tffi_prep_raw_closure;\n+\tffi_prep_raw_closure_loc;\n+\tffi_prep_java_raw_closure;\n+\tffi_prep_java_raw_closure_loc;\n+} LIBFFI_BASE_5;\n+\n+/* This section is optional based on FFI_GO_CLOSURES.  */\n+LIBFFI_GO_CLOSURE_5 {\n+  global:\n+\tffi_call_go;\n+\tffi_prep_go_closure;\n+} LIBFFI_CLOSURE_5;"}, {"sha": "0a841ca23be133c3ec9b41ea0704e63a130e8dec", "filename": "libffi/libtool-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Flibtool-version", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Flibtool-version", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Flibtool-version?ref=2c05525623d96388cf938f268225813ec2edd5ec", "patch": "@@ -3,4 +3,4 @@\n # a separate file so that version updates don't involve re-running\n # automake.\n # CURRENT:REVISION:AGE\n-4:1:0\n+5:0:0"}, {"sha": "be296a57db983e45498997042102bcdf412df5d3", "filename": "libffi/man/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Fman%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Fman%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fman%2FMakefile.in?ref=2c05525623d96388cf938f268225813ec2edd5ec", "patch": "@@ -164,6 +164,7 @@ NM = @NM@\n NMEDIT = @NMEDIT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n+OPT_LDFLAGS = @OPT_LDFLAGS@\n OTOOL = @OTOOL@\n OTOOL64 = @OTOOL64@\n PACKAGE = @PACKAGE@\n@@ -175,6 +176,7 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n RANLIB = @RANLIB@\n+SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SED = @SED@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@"}, {"sha": "0e244202326ffad1af7e4b14975a9132d797be5c", "filename": "libffi/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c05525623d96388cf938f268225813ec2edd5ec/libffi%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2FMakefile.in?ref=2c05525623d96388cf938f268225813ec2edd5ec", "patch": "@@ -135,6 +135,7 @@ NM = @NM@\n NMEDIT = @NMEDIT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n+OPT_LDFLAGS = @OPT_LDFLAGS@\n OTOOL = @OTOOL@\n OTOOL64 = @OTOOL64@\n PACKAGE = @PACKAGE@\n@@ -146,6 +147,7 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n RANLIB = @RANLIB@\n+SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SED = @SED@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@"}]}