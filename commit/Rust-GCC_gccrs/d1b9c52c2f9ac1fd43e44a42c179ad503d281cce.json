{"sha": "d1b9c52c2f9ac1fd43e44a42c179ad503d281cce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFiOWM1MmMyZjlhYzFmZDQzZTQ0YTQyYzE3OWFkNTAzZDI4MWNjZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-10-22T22:31:18Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-10-22T22:31:18Z"}, "message": "(unroll_loop): Always reject loops with unbalanced blocks.\n\nFrom-SVN: r12999", "tree": {"sha": "fb5f68343a5ec71496748bf5e418721ba897dc12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb5f68343a5ec71496748bf5e418721ba897dc12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1b9c52c2f9ac1fd43e44a42c179ad503d281cce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1b9c52c2f9ac1fd43e44a42c179ad503d281cce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1b9c52c2f9ac1fd43e44a42c179ad503d281cce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1b9c52c2f9ac1fd43e44a42c179ad503d281cce/comments", "author": null, "committer": null, "parents": [{"sha": "c9f99b6a232ac41d3ea3270e2886bc9552d2d9a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9f99b6a232ac41d3ea3270e2886bc9552d2d9a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9f99b6a232ac41d3ea3270e2886bc9552d2d9a4"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "f5e3675f747d6f4409f4299c8ea636056af9074f", "filename": "gcc/unroll.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1b9c52c2f9ac1fd43e44a42c179ad503d281cce/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1b9c52c2f9ac1fd43e44a42c179ad503d281cce/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=d1b9c52c2f9ac1fd43e44a42c179ad503d281cce", "patch": "@@ -268,8 +268,12 @@ unroll_loop (loop_end, insn_count, loop_start, end_insert_before,\n      of block_beg and block_end notes, because that would unbalance the block\n      structure of the function.  This can happen as a result of the\n      \"if (foo) bar; else break;\" optimization in jump.c.  */\n+  /* ??? Gcc has a general policy that -g is never supposed to change the code\n+     that the compiler emits, so we must disable this optimization always,\n+     even if debug info is not being output.  This is rare, so this should\n+     not be a significant performance problem.  */\n \n-  if (write_symbols != NO_DEBUG)\n+  if (1 /* write_symbols != NO_DEBUG */)\n     {\n       int block_begins = 0;\n       int block_ends = 0;"}]}