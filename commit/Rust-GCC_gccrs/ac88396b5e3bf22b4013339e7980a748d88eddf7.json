{"sha": "ac88396b5e3bf22b4013339e7980a748d88eddf7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM4ODM5NmI1ZTNiZjIyYjQwMTMzMzllNzk4MGE3NDhkODhlZGRmNw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-08-03T14:44:54Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-08-03T14:44:54Z"}, "message": "Add a testcase for PR middle-end/47383.\n\n2011-08-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/47383\n\t* gcc.dg/torture/pr47383.c: Likewise.\n\nFrom-SVN: r177277", "tree": {"sha": "6f59fc1c78e261d63109d6d61c0cd299596a55c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f59fc1c78e261d63109d6d61c0cd299596a55c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac88396b5e3bf22b4013339e7980a748d88eddf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac88396b5e3bf22b4013339e7980a748d88eddf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac88396b5e3bf22b4013339e7980a748d88eddf7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac88396b5e3bf22b4013339e7980a748d88eddf7/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "deb8dacccffd4eda62517772bef5fd90e03776d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deb8dacccffd4eda62517772bef5fd90e03776d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deb8dacccffd4eda62517772bef5fd90e03776d7"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "a157259099eb6d91499530d5bab61a5d6028b4f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac88396b5e3bf22b4013339e7980a748d88eddf7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac88396b5e3bf22b4013339e7980a748d88eddf7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ac88396b5e3bf22b4013339e7980a748d88eddf7", "patch": "@@ -1,3 +1,8 @@\n+2011-08-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/47383\n+\t* gcc.dg/torture/pr47383.c: Likewise.\n+\n 2011-08-03  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gnat.dg/specs/debug1.ads: Add missing -margs switch."}, {"sha": "ae8d67051d4945feb1358a0db0f7c4510b2770e1", "filename": "gcc/testsuite/gcc.dg/torture/pr47383.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac88396b5e3bf22b4013339e7980a748d88eddf7/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr47383.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac88396b5e3bf22b4013339e7980a748d88eddf7/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr47383.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr47383.c?ref=ac88396b5e3bf22b4013339e7980a748d88eddf7", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do run } */\n+\n+static int heap[2*(256 +1+29)+1];\n+static int heap_len;\n+static int heap_max;\n+void \n+__attribute__ ((noinline))\n+foo (int elems)\n+{\n+  int n, m;\n+  int max_code = -1;\n+  int node = elems;\n+  heap_len = 0, heap_max = (2*(256 +1+29)+1);\n+  for (n = 0; n < elems; n++)\n+    heap[++heap_len] = max_code = n;\n+  do {\n+    n = heap[1];\n+    heap[1] = heap[heap_len--];\n+    m = heap[1];\n+    heap[--heap_max] = n;\n+    heap[--heap_max] = m;\n+  } while (heap_len >= 2);\n+}\n+\n+int\n+main ()\n+{\n+  foo (286);\n+  return 0;\n+}"}]}