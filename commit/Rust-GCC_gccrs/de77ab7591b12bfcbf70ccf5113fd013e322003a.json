{"sha": "de77ab7591b12bfcbf70ccf5113fd013e322003a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU3N2FiNzU5MWIxMmJmY2JmNzBjY2Y1MTEzZmQwMTNlMzIyMDAzYQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-11-25T13:47:42Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-11-25T13:47:42Z"}, "message": "Properly cast integer constant char. \n\ngcc/\n\n2010-11-25  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/46647\n\t* builtins.c (target_char_cast): Check INTEGER_CST instead of\n\thost_integerp.  Replace tree_low_cst with TREE_INT_CST_LOW.\n\ngcc/testsuite/\n\n2010-11-25  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/46647\n\t* gcc.target/i386/pr46647.c: New.\n\nFrom-SVN: r167146", "tree": {"sha": "699bfbb54b2d8698c6ae57973538cf901d351754", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/699bfbb54b2d8698c6ae57973538cf901d351754"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de77ab7591b12bfcbf70ccf5113fd013e322003a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de77ab7591b12bfcbf70ccf5113fd013e322003a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de77ab7591b12bfcbf70ccf5113fd013e322003a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de77ab7591b12bfcbf70ccf5113fd013e322003a/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5fabb58358641e0d597a966b34e20339c231180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5fabb58358641e0d597a966b34e20339c231180", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5fabb58358641e0d597a966b34e20339c231180"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "57536cd907caf173f18f765bf643a9c5939f7b12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de77ab7591b12bfcbf70ccf5113fd013e322003a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de77ab7591b12bfcbf70ccf5113fd013e322003a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de77ab7591b12bfcbf70ccf5113fd013e322003a", "patch": "@@ -1,3 +1,9 @@\n+2010-11-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/46647\n+\t* builtins.c (target_char_cast): Check INTEGER_CST instead of\n+\thost_integerp.  Replace tree_low_cst with TREE_INT_CST_LOW.\n+\n 2010-11-25  Joseph Myers  <joseph@codesourcery.com>\n \n \t* target.def (supports_split_stack, except_unwind_info): Take"}, {"sha": "a90bf2fb8f5ee904dfb84fc244c43e68d43b1e58", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de77ab7591b12bfcbf70ccf5113fd013e322003a/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de77ab7591b12bfcbf70ccf5113fd013e322003a/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=de77ab7591b12bfcbf70ccf5113fd013e322003a", "patch": "@@ -630,11 +630,11 @@ target_char_cast (tree cst, char *p)\n {\n   unsigned HOST_WIDE_INT val, hostval;\n \n-  if (!host_integerp (cst, 1)\n+  if (TREE_CODE (cst) != INTEGER_CST\n       || CHAR_TYPE_SIZE > HOST_BITS_PER_WIDE_INT)\n     return 1;\n \n-  val = tree_low_cst (cst, 1);\n+  val = TREE_INT_CST_LOW (cst);\n   if (CHAR_TYPE_SIZE < HOST_BITS_PER_WIDE_INT)\n     val &= (((unsigned HOST_WIDE_INT) 1) << CHAR_TYPE_SIZE) - 1;\n "}, {"sha": "2253a94f0df6b22b77982f602a67eb717672f9d6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de77ab7591b12bfcbf70ccf5113fd013e322003a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de77ab7591b12bfcbf70ccf5113fd013e322003a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=de77ab7591b12bfcbf70ccf5113fd013e322003a", "patch": "@@ -1,3 +1,8 @@\n+2010-11-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/46647\n+\t* gcc.target/i386/pr46647.c: New.\n+\n 2010-11-25  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* gcc.dg/dll-8.c: New."}, {"sha": "c7e1542873bf89fb4fbdaaff418e1ede12d8c27e", "filename": "gcc/testsuite/gcc.target/i386/pr46647.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de77ab7591b12bfcbf70ccf5113fd013e322003a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46647.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de77ab7591b12bfcbf70ccf5113fd013e322003a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46647.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46647.c?ref=de77ab7591b12bfcbf70ccf5113fd013e322003a", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mtune=generic\" } */\n+\n+char a[5];\n+int\n+func1 (void)\n+{\n+  __builtin_memset (a,-1,sizeof (a));\n+  return 0;\n+}\n+\n+int a2[5];\n+int\n+func2 (void)\n+{\n+  __builtin_memset (a2,-1,sizeof (a2));\n+  return 0;\n+}\n+\n+char a3[5];\n+int\n+func3 (void)\n+{\n+  __builtin_memset (a3,0x8fffffff,sizeof (a3));\n+  return 0;\n+}\n+\n+char a4[5];\n+int\n+func4 (void)\n+{\n+  __builtin_memset (a4,0x8fffff00,sizeof (a4));\n+  return 0;\n+}\n+\n+int a5[5];\n+int\n+func5 (void)\n+{\n+  __builtin_memset (a5,0x8fffffff,sizeof (a5));\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-not \"call\\[\\\\t \\]*_?memset\" } } */"}]}