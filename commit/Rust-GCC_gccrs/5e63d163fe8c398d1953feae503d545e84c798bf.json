{"sha": "5e63d163fe8c398d1953feae503d545e84c798bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU2M2QxNjNmZThjMzk4ZDE5NTNmZWFlNTAzZDU0NWU4NGM3OThiZg==", "commit": {"author": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-06-26T03:48:12Z"}, "committer": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-06-26T04:00:08Z"}, "message": "mark live symbol in tuple expr", "tree": {"sha": "6762600966d68447c8fe16712d8dab24fd720eb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6762600966d68447c8fe16712d8dab24fd720eb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e63d163fe8c398d1953feae503d545e84c798bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e63d163fe8c398d1953feae503d545e84c798bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e63d163fe8c398d1953feae503d545e84c798bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e63d163fe8c398d1953feae503d545e84c798bf/comments", "author": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9cb0c3d446321e80b3c790b9ade0dda1574dc29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9cb0c3d446321e80b3c790b9ade0dda1574dc29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9cb0c3d446321e80b3c790b9ade0dda1574dc29"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "f718a61b90135a7890269295d8513071cd8e766f", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e63d163fe8c398d1953feae503d545e84c798bf/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e63d163fe8c398d1953feae503d545e84c798bf/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=5e63d163fe8c398d1953feae503d545e84c798bf", "patch": "@@ -1064,6 +1064,15 @@ class TupleExpr : public ExprWithoutBlock\n \n   bool is_unit () const { return tuple_elems.size () == 0; }\n \n+  void iterate (std::function<bool (Expr *)> cb)\n+  {\n+    for (auto &tuple_elem : tuple_elems)\n+      {\n+\tif (!cb (tuple_elem.get ()))\n+\t  return;\n+      }\n+  }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}, {"sha": "67dd76a48c6719b489a9822d3d8c36181a3902f9", "filename": "gcc/rust/lint/rust-lint-marklive.h", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e63d163fe8c398d1953feae503d545e84c798bf/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e63d163fe8c398d1953feae503d545e84c798bf/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.h?ref=5e63d163fe8c398d1953feae503d545e84c798bf", "patch": "@@ -67,18 +67,26 @@ class MarkLive : public MarkLiveBase\n \n   void visit (HIR::GroupedExpr &expr) override\n   {\n-    expr.get_expr_in_parens()->accept_vis(*this);\n+    expr.get_expr_in_parens ()->accept_vis (*this);\n   }\n \n   void visit (HIR::ArrayExpr &expr) override\n   {\n-    expr.get_internal_elements()->accept_vis(*this);\n+    expr.get_internal_elements ()->accept_vis (*this);\n   }\n \n   void visit (HIR::ArrayElemsValues &expr) override\n   {\n-    expr.iterate([&](HIR::Expr *expr) mutable -> bool {\n-      expr->accept_vis(*this);\n+    expr.iterate ([&] (HIR::Expr *expr) mutable -> bool {\n+      expr->accept_vis (*this);\n+      return true;\n+    });\n+  }\n+\n+  void visit (HIR::TupleExpr &expr) override\n+  {\n+    expr.iterate ([&] (HIR::Expr *expr) mutable -> bool {\n+      expr->accept_vis (*this);\n       return true;\n     });\n   }"}, {"sha": "514b586cc09a721f7754f1b37ae2b2809110eae9", "filename": "gcc/testsuite/rust/compile/torture/tuple_function.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e63d163fe8c398d1953feae503d545e84c798bf/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Ftuple_function.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e63d163fe8c398d1953feae503d545e84c798bf/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Ftuple_function.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Ftuple_function.rs?ref=5e63d163fe8c398d1953feae503d545e84c798bf", "patch": "@@ -0,0 +1,6 @@\n+fn foo() -> i32 {\n+    return 1;\n+}\n+fn main() {\n+    let _a = (foo(), 2);\n+}"}]}