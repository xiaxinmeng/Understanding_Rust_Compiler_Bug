{"sha": "0345d1dd2aa75e7af92059cb6bb4a0c0e0570d0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM0NWQxZGQyYWE3NWU3YWY5MjA1OWNiNmJiNGEwYzBlMDU3MGQwYg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-05-06T22:38:57Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-05-06T22:38:57Z"}, "message": "re PR target/53250 ([SH] ICE: in change_address_1, at emit-rtl.c:2018)\n\n\tPR target/53250\n\t* config/sh/sh.c (sh_rtx_costs): Handle SET.\n\nFrom-SVN: r187218", "tree": {"sha": "3ca1d4518bb8bfe8bf9ddee038c0f0f9d445f68d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ca1d4518bb8bfe8bf9ddee038c0f0f9d445f68d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0345d1dd2aa75e7af92059cb6bb4a0c0e0570d0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0345d1dd2aa75e7af92059cb6bb4a0c0e0570d0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0345d1dd2aa75e7af92059cb6bb4a0c0e0570d0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0345d1dd2aa75e7af92059cb6bb4a0c0e0570d0b/comments", "author": null, "committer": null, "parents": [{"sha": "69f088a73a1924110328eac91bcbd8a98f64f62a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69f088a73a1924110328eac91bcbd8a98f64f62a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69f088a73a1924110328eac91bcbd8a98f64f62a"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "aa909e352087a7d41fdfb9e33bc312e2aef3427a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0345d1dd2aa75e7af92059cb6bb4a0c0e0570d0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0345d1dd2aa75e7af92059cb6bb4a0c0e0570d0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0345d1dd2aa75e7af92059cb6bb4a0c0e0570d0b", "patch": "@@ -1,3 +1,8 @@\n+2012-05-07  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/53250\n+\t* config/sh/sh.c (sh_rtx_costs): Handle SET.\n+\n 2012-05-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/53227"}, {"sha": "08ee5b436f5035883274e4082410664e0ee749db", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0345d1dd2aa75e7af92059cb6bb4a0c0e0570d0b/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0345d1dd2aa75e7af92059cb6bb4a0c0e0570d0b/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=0345d1dd2aa75e7af92059cb6bb4a0c0e0570d0b", "patch": "@@ -2999,6 +2999,27 @@ sh_rtx_costs (rtx x, int code, int outer_code, int opno ATTRIBUTE_UNUSED,\n {\n   switch (code)\n     {\n+      /* The lower-subreg pass decides whether to split multi-word regs\n+\t into individual regs by looking at the cost for a SET of certain\n+\t modes with the following patterns:\n+\t   (set (reg) (reg)) \n+\t   (set (reg) (const_int 0))\n+\t On machines that support vector-move operations a multi-word move\n+\t is the same cost as individual reg move.  On SH there is no\n+\t vector-move, so we have to provide the correct cost in the number\n+\t of move insns to load/store the reg of the mode in question.  */\n+    case SET:\n+      if (register_operand (SET_DEST (x), VOIDmode)\n+\t    && (register_operand (SET_SRC (x), VOIDmode)\n+\t\t|| satisfies_constraint_Z (SET_SRC (x))))\n+\t{\n+\t  const enum machine_mode mode = GET_MODE (SET_DEST (x));\n+\t  *total = COSTS_N_INSNS (GET_MODE_SIZE (mode)\n+\t\t\t\t  / mov_insn_size (mode, TARGET_SH2A));\n+\t  return true;\n+        }\n+      return false;\n+\n     case CONST_INT:\n       if (TARGET_SHMEDIA)\n         {"}]}