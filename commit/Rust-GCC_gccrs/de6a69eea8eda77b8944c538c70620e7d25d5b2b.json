{"sha": "de6a69eea8eda77b8944c538c70620e7d25d5b2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU2YTY5ZWVhOGVkYTc3Yjg5NDRjNTM4YzcwNjIwZTdkMjVkNWIyYg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-07-20T13:42:51Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-07-20T13:42:51Z"}, "message": "C: convert return type of lookup_name_fuzzy from tree to const char *\n\ngcc/c-family/ChangeLog:\n\t* c-common.h (lookup_name_fuzzy): Convert return type from tree to\n\tconst char *.\n\ngcc/c/ChangeLog:\n\t* c-decl.c (implicit_decl_warning): Update for conversion of\n\treturn type of lookup_name_fuzzy to const char *.\n\t(undeclared_variable): Likewise.\n\t(lookup_name_fuzzy): Convert return type from tree to\n\tconst char *.\n\t* c-parser.c (c_parser_declaration_or_fndef): Update for\n\tconversion of return type of lookup_name_fuzzy to const char *.\n\t(c_parser_parameter_declaration): Likewise.\n\ngcc/ChangeLog:\n\t* gcc-rich-location.c\n\t(gcc_rich_location::add_fixit_misspelled_id): New overload, taking\n\ta const char *.\n\t* gcc-rich-location.h\n\t(gcc_rich_location::add_fixit_misspelled_id): Likewise.\n\nFrom-SVN: r238517", "tree": {"sha": "9b8be09a9ce188671750b4f8e76df99ec445a22c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b8be09a9ce188671750b4f8e76df99ec445a22c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de6a69eea8eda77b8944c538c70620e7d25d5b2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6a69eea8eda77b8944c538c70620e7d25d5b2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6a69eea8eda77b8944c538c70620e7d25d5b2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6a69eea8eda77b8944c538c70620e7d25d5b2b/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffc2284012c94620bdbffb5276a264bd7fcf7d91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffc2284012c94620bdbffb5276a264bd7fcf7d91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffc2284012c94620bdbffb5276a264bd7fcf7d91"}], "stats": {"total": 73, "additions": 58, "deletions": 15}, "files": [{"sha": "82eb3ccb396b4f0a26694aaf649dce0aa347d7c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de6a69eea8eda77b8944c538c70620e7d25d5b2b", "patch": "@@ -1,3 +1,11 @@\n+2016-07-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc-rich-location.c\n+\t(gcc_rich_location::add_fixit_misspelled_id): New overload, taking\n+\ta const char *.\n+\t* gcc-rich-location.h\n+\t(gcc_rich_location::add_fixit_misspelled_id): Likewise.\n+\n 2016-07-20  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* target.def (addr_space): Add new diagnose_usage to hook vector."}, {"sha": "3842929d32c4d02f916964e58e1be62a6f5676cd", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=de6a69eea8eda77b8944c538c70620e7d25d5b2b", "patch": "@@ -1,3 +1,8 @@\n+2016-07-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-common.h (lookup_name_fuzzy): Convert return type from tree to\n+\tconst char *.\n+\n 2016-07-15  Jason Merrill  <jason@redhat.com>\n \n \t* c-opts.c (c_common_post_options): Update -fabi-version default to 11."}, {"sha": "8c80574a1469ab769cbbde9c1458b406ae9b6437", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=de6a69eea8eda77b8944c538c70620e7d25d5b2b", "patch": "@@ -1000,7 +1000,7 @@ enum lookup_name_fuzzy_kind {\n   /* Any name.  */\n   FUZZY_LOOKUP_NAME\n };\n-extern tree lookup_name_fuzzy (tree, enum lookup_name_fuzzy_kind);\n+extern const char *lookup_name_fuzzy (tree, enum lookup_name_fuzzy_kind);\n \n extern bool vector_targets_convertible_p (const_tree t1, const_tree t2);\n extern bool vector_types_convertible_p (const_tree t1, const_tree t2, bool emit_lax_note);"}, {"sha": "d322761e87b89ca05ed6dc8b2fea8e13be2735bc", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=de6a69eea8eda77b8944c538c70620e7d25d5b2b", "patch": "@@ -1,3 +1,14 @@\n+2016-07-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-decl.c (implicit_decl_warning): Update for conversion of\n+\treturn type of lookup_name_fuzzy to const char *.\n+\t(undeclared_variable): Likewise.\n+\t(lookup_name_fuzzy): Convert return type from tree to\n+\tconst char *.\n+\t* c-parser.c (c_parser_declaration_or_fndef): Update for\n+\tconversion of return type of lookup_name_fuzzy to const char *.\n+\t(c_parser_parameter_declaration): Likewise.\n+\n 2016-07-15  Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* c-parser.c (c_parser_oacc_declare): Don't scan for"}, {"sha": "d9f2dd752dae6be57162c9d195fba48d9e661cd4", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=de6a69eea8eda77b8944c538c70620e7d25d5b2b", "patch": "@@ -3088,7 +3088,7 @@ implicit_decl_warning (location_t loc, tree id, tree olddecl)\n   if (warn_implicit_function_declaration)\n     {\n       bool warned;\n-      tree hint = NULL_TREE;\n+      const char *hint = NULL;\n       if (!olddecl)\n \thint = lookup_name_fuzzy (id, FUZZY_LOOKUP_FUNCTION_NAME);\n \n@@ -3099,7 +3099,7 @@ implicit_decl_warning (location_t loc, tree id, tree olddecl)\n \t    richloc.add_fixit_misspelled_id (loc, hint);\n \t    warned = pedwarn_at_rich_loc\n \t      (&richloc, OPT_Wimplicit_function_declaration,\n-\t       \"implicit declaration of function %qE; did you mean %qE?\",\n+\t       \"implicit declaration of function %qE; did you mean %qs?\",\n \t       id, hint);\n \t  }\n \telse\n@@ -3112,7 +3112,7 @@ implicit_decl_warning (location_t loc, tree id, tree olddecl)\n \t    richloc.add_fixit_misspelled_id (loc, hint);\n \t    warned = warning_at_rich_loc\n \t      (&richloc, OPT_Wimplicit_function_declaration,\n-\t       G_(\"implicit declaration of function %qE;did you mean %qE?\"),\n+\t       G_(\"implicit declaration of function %qE;did you mean %qs?\"),\n \t       id, hint);\n \t  }\n \telse\n@@ -3433,14 +3433,14 @@ undeclared_variable (location_t loc, tree id)\n \n   if (current_function_decl == 0)\n     {\n-      tree guessed_id = lookup_name_fuzzy (id, FUZZY_LOOKUP_NAME);\n+      const char *guessed_id = lookup_name_fuzzy (id, FUZZY_LOOKUP_NAME);\n       if (guessed_id)\n \t{\n \t  gcc_rich_location richloc (loc);\n \t  richloc.add_fixit_misspelled_id (loc, guessed_id);\n \t  error_at_rich_loc (&richloc,\n \t\t\t     \"%qE undeclared here (not in a function);\"\n-\t\t\t     \" did you mean %qE?\",\n+\t\t\t     \" did you mean %qs?\",\n \t\t\t     id, guessed_id);\n \t}\n       else\n@@ -3451,15 +3451,15 @@ undeclared_variable (location_t loc, tree id)\n     {\n       if (!objc_diagnose_private_ivar (id))\n \t{\n-\t  tree guessed_id = lookup_name_fuzzy (id, FUZZY_LOOKUP_NAME);\n+\t  const char *guessed_id = lookup_name_fuzzy (id, FUZZY_LOOKUP_NAME);\n \t  if (guessed_id)\n \t    {\n \t      gcc_rich_location richloc (loc);\n \t      richloc.add_fixit_misspelled_id (loc, guessed_id);\n \t      error_at_rich_loc\n \t\t(&richloc,\n \t\t \"%qE undeclared (first use in this function);\"\n-\t\t \" did you mean %qE?\",\n+\t\t \" did you mean %qs?\",\n \t\t id, guessed_id);\n \t    }\n \t  else\n@@ -4010,7 +4010,7 @@ find_closest_macro_cpp_cb (cpp_reader *, cpp_hashnode *hashnode,\n    It also looks for start_typename keywords, to detect \"singed\" vs \"signed\"\n    typos.  */\n \n-tree\n+const char *\n lookup_name_fuzzy (tree name, enum lookup_name_fuzzy_kind kind)\n {\n   gcc_assert (TREE_CODE (name) == IDENTIFIER_NODE);\n@@ -4100,7 +4100,11 @@ lookup_name_fuzzy (tree name, enum lookup_name_fuzzy_kind kind)\n \t}\n     }\n \n-  return bm.get_best_meaningful_candidate ();\n+  tree best = bm.get_best_meaningful_candidate ();\n+  if (best)\n+    return IDENTIFIER_POINTER (best);\n+  else\n+    return NULL;\n }\n \n \f"}, {"sha": "8952bca363a72b67bc1b88c1ba413ac4732564a8", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=de6a69eea8eda77b8944c538c70620e7d25d5b2b", "patch": "@@ -1698,12 +1698,12 @@ c_parser_declaration_or_fndef (c_parser *parser, bool fndef_ok,\n \t}\n       else\n \t{\n-\t  tree hint = lookup_name_fuzzy (name, FUZZY_LOOKUP_TYPENAME);\n+\t  const char *hint = lookup_name_fuzzy (name, FUZZY_LOOKUP_TYPENAME);\n \t  if (hint)\n \t    {\n \t      richloc.add_fixit_misspelled_id (here, hint);\n \t      error_at_rich_loc (&richloc,\n-\t\t\t\t \"unknown type name %qE; did you mean %qE?\",\n+\t\t\t\t \"unknown type name %qE; did you mean %qs?\",\n \t\t\t\t name, hint);\n \t    }\n \t  else\n@@ -3853,14 +3853,14 @@ c_parser_parameter_declaration (c_parser *parser, tree attrs)\n       c_parser_set_source_position_from_token (token);\n       if (c_parser_next_tokens_start_typename (parser, cla_prefer_type))\n \t{\n-\t  tree hint = lookup_name_fuzzy (token->value, FUZZY_LOOKUP_TYPENAME);\n+\t  const char *hint = lookup_name_fuzzy (token->value,\n+\t\t\t\t\t\tFUZZY_LOOKUP_TYPENAME);\n \t  if (hint)\n \t    {\n-\t      gcc_assert (TREE_CODE (hint) == IDENTIFIER_NODE);\n \t      gcc_rich_location richloc (token->location);\n \t      richloc.add_fixit_misspelled_id (token->location, hint);\n \t      error_at_rich_loc (&richloc,\n-\t\t\t\t \"unknown type name %qE; did you mean %qE?\",\n+\t\t\t\t \"unknown type name %qE; did you mean %qs?\",\n \t\t\t\t token->value, hint);\n \t    }\n \t  else"}, {"sha": "09475ffc2cf38b8e1a7c4be2db399b142cdd36c3", "filename": "gcc/gcc-rich-location.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fgcc-rich-location.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fgcc-rich-location.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc-rich-location.c?ref=de6a69eea8eda77b8944c538c70620e7d25d5b2b", "patch": "@@ -74,3 +74,16 @@ gcc_rich_location::add_fixit_misspelled_id (location_t misspelled_token_loc,\n     = get_range_from_loc (line_table, misspelled_token_loc);\n   add_fixit_replace (misspelled_token_range, IDENTIFIER_POINTER (hint_id));\n }\n+\n+/* As above, but with a const char * for the suggested replacement.  */\n+\n+void\n+gcc_rich_location::add_fixit_misspelled_id (location_t misspelled_token_loc,\n+\t\t\t\t\t    const char *hint)\n+{\n+  gcc_assert (hint);\n+\n+  source_range misspelled_token_range\n+    = get_range_from_loc (line_table, misspelled_token_loc);\n+  add_fixit_replace (misspelled_token_range, hint);\n+}"}, {"sha": "aa69b2eff14ce29098e50995b381ac7796fff94f", "filename": "gcc/gcc-rich-location.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fgcc-rich-location.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6a69eea8eda77b8944c538c70620e7d25d5b2b/gcc%2Fgcc-rich-location.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc-rich-location.h?ref=de6a69eea8eda77b8944c538c70620e7d25d5b2b", "patch": "@@ -45,6 +45,8 @@ class gcc_rich_location : public rich_location\n \n   void add_fixit_misspelled_id (location_t misspelled_token_loc,\n \t\t\t\ttree hint_id);\n+  void add_fixit_misspelled_id (location_t misspelled_token_loc,\n+\t\t\t\tconst char *hint);\n };\n \n #endif /* GCC_RICH_LOCATION_H */"}]}