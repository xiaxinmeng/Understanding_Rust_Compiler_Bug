{"sha": "5312b0660e6f24145896e84382d184c16c884bf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMxMmIwNjYwZTZmMjQxNDU4OTZlODQzODJkMTg0YzE2Yzg4NGJmMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-04-16T09:26:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-04-16T09:26:43Z"}, "message": "alias.c (memrefs_conflict_p): If x and y are the same VALUE, don't call get_addr on both.\n\n\t* alias.c (memrefs_conflict_p): If x and y are the same VALUE,\n\tdon't call get_addr on both.  If one expression is a VALUE and\n\tthe other a REG, check VALUE's locs if the REG isn't among them.\n\nFrom-SVN: r158401", "tree": {"sha": "1728270296344efa111f7dd12bbe6946f34b601b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1728270296344efa111f7dd12bbe6946f34b601b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5312b0660e6f24145896e84382d184c16c884bf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5312b0660e6f24145896e84382d184c16c884bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5312b0660e6f24145896e84382d184c16c884bf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5312b0660e6f24145896e84382d184c16c884bf1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5cc2ee390b7ff74f41ec95aca7510c172c78da0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5cc2ee390b7ff74f41ec95aca7510c172c78da0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5cc2ee390b7ff74f41ec95aca7510c172c78da0"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "7f4c6333a98dfb5f9e8e7ad04802faed7f269014", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5312b0660e6f24145896e84382d184c16c884bf1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5312b0660e6f24145896e84382d184c16c884bf1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5312b0660e6f24145896e84382d184c16c884bf1", "patch": "@@ -1,3 +1,9 @@\n+2010-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* alias.c (memrefs_conflict_p): If x and y are the same VALUE,\n+\tdon't call get_addr on both.  If one expression is a VALUE and\n+\tthe other a REG, check VALUE's locs if the REG isn't among them.\n+\n 2010-04-16  Christian Bruel  <christian.bruel@st.com>\n \n \t* config/sh/sh.h (sh_frame_pointer_required): New function."}, {"sha": "6ec51ec2967bed6aa0709262fc6a86a7d536821e", "filename": "gcc/alias.c", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5312b0660e6f24145896e84382d184c16c884bf1/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5312b0660e6f24145896e84382d184c16c884bf1/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=5312b0660e6f24145896e84382d184c16c884bf1", "patch": "@@ -1789,9 +1789,39 @@ static int\n memrefs_conflict_p (int xsize, rtx x, int ysize, rtx y, HOST_WIDE_INT c)\n {\n   if (GET_CODE (x) == VALUE)\n-    x = get_addr (x);\n+    {\n+      if (REG_P (y))\n+\t{\n+\t  struct elt_loc_list *l;\n+\t  for (l = CSELIB_VAL_PTR (x)->locs; l; l = l->next)\n+\t    if (REG_P (l->loc) && rtx_equal_for_memref_p (l->loc, y))\n+\t      break;\n+\t  if (l)\n+\t    x = y;\n+\t  else\n+\t    x = get_addr (x);\n+\t}\n+      /* Don't call get_addr if y is the same VALUE.  */\n+      else if (x != y)\n+\tx = get_addr (x);\n+    }\n   if (GET_CODE (y) == VALUE)\n-    y = get_addr (y);\n+    {\n+      if (REG_P (x))\n+\t{\n+\t  struct elt_loc_list *l;\n+\t  for (l = CSELIB_VAL_PTR (y)->locs; l; l = l->next)\n+\t    if (REG_P (l->loc) && rtx_equal_for_memref_p (l->loc, x))\n+\t      break;\n+\t  if (l)\n+\t    y = x;\n+\t  else\n+\t    y = get_addr (y);\n+\t}\n+      /* Don't call get_addr if x is the same VALUE.  */\n+      else if (y != x)\n+\ty = get_addr (y);\n+    }\n   if (GET_CODE (x) == HIGH)\n     x = XEXP (x, 0);\n   else if (GET_CODE (x) == LO_SUM)"}]}