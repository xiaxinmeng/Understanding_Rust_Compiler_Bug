{"sha": "025d9908d3e3816f06a045d936c569361522ec6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI1ZDk5MDhkM2UzODE2ZjA2YTA0NWQ5MzZjNTY5MzYxNTIyZWM2ZQ==", "commit": {"author": {"name": "Kevin B. Hendricks", "email": "kevin.hendricks@sympatico.ca", "date": "2003-05-19T17:39:51Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2003-05-19T17:39:51Z"}, "message": "rs6000.c (rs6000_alignment_string, [...]): New variables.\n\n2003-05-18  Kevin B. Hendricks  <kevin.hendricks@sympatico.ca>\n            David Edelsohn  <edelsohn@gnu.org>\n\n        * config/rs6000/rs6000.c (rs6000_alignment_string,\n        rs6000_alignment_flags): New variables.\n        (rs6000_parse_alignment_option): New function.\n        (rs6000_override_options): Call it.\n        * config/rs6000/rs6000.h (TARGET_OPTIONS): Add -malign-XXX option.\n        (MASK_ALIGN_POWER, MASK_ALIGN_NATURAL, TARGET_ALIGN_NATURAL): New\n        macros.\n        * config/rs6000/aix.h (ADJUST_FIELD_ALIGN): Always use COMPUTED\n        natural alignment if TARGET_NATURAL_ALIGNMENT\n        (ROUND_TYPE_ALIGN): Always use default record alignment if\n        TAGET_NATURAL_ALIGNMENT.\n        * config/rs6000/darwin.h (ADJUST_FIELD_ALIGN): Same\n        (ROUND_TYPE_ALIGN): Same.\n        * config/rs6000/linux64.h (ADJUST_FIELD_ALIGN): Same\n        (ROUND_TYPE_ALIGN): Same.\n\nCo-Authored-By: David Edelsohn <edelsohn@gnu.org>\n\nFrom-SVN: r66967", "tree": {"sha": "bdec5aa95ee24c05c7dde6f4af182d9ee60f3d45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdec5aa95ee24c05c7dde6f4af182d9ee60f3d45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/025d9908d3e3816f06a045d936c569361522ec6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/025d9908d3e3816f06a045d936c569361522ec6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/025d9908d3e3816f06a045d936c569361522ec6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/025d9908d3e3816f06a045d936c569361522ec6e/comments", "author": null, "committer": null, "parents": [{"sha": "52a8b7b838128c142fdf8d26ae1d7f073797a7fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a8b7b838128c142fdf8d26ae1d7f073797a7fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52a8b7b838128c142fdf8d26ae1d7f073797a7fa"}], "stats": {"total": 78, "additions": 75, "deletions": 3}, "files": [{"sha": "797e9d530833921e003a46bf3432b644739d0be1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/025d9908d3e3816f06a045d936c569361522ec6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/025d9908d3e3816f06a045d936c569361522ec6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=025d9908d3e3816f06a045d936c569361522ec6e", "patch": "@@ -1,3 +1,22 @@\n+2003-05-19  Kevin B. Hendricks  <kevin.hendricks@sympatico.ca>\n+            David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_alignment_string,\n+\trs6000_alignment_flags): New variables.\n+\t(rs6000_parse_alignment_option): New function.\n+\t(rs6000_override_options): Call it.\n+\t* config/rs6000/rs6000.h (TARGET_OPTIONS): Add -malign-XXX option.\n+\t(MASK_ALIGN_POWER, MASK_ALIGN_NATURAL, TARGET_ALIGN_NATURAL): New\n+\tmacros.\n+\t* config/rs6000/aix.h (ADJUST_FIELD_ALIGN): Always use COMPUTED\n+\tnatural alignment if TARGET_NATURAL_ALIGNMENT\n+\t(ROUND_TYPE_ALIGN): Always use default record alignment if\n+\tTAGET_NATURAL_ALIGNMENT.\n+\t* config/rs6000/darwin.h (ADJUST_FIELD_ALIGN): Same\n+\t(ROUND_TYPE_ALIGN): Same.\n+\t* config/rs6000/linux64.h (ADJUST_FIELD_ALIGN): Same\n+\t(ROUND_TYPE_ALIGN): Same.\n+\n 2003-05-19  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* c-decl.c (finish_decl): When setting the DECL_ASSEMBLER_NAME"}, {"sha": "0ca22cd72d6fcc9a8a7935f20fd8234bb2b31c73", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/025d9908d3e3816f06a045d936c569361522ec6e/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/025d9908d3e3816f06a045d936c569361522ec6e/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=025d9908d3e3816f06a045d936c569361522ec6e", "patch": "@@ -128,12 +128,14 @@\n #define LIB_SPEC \"%{pg:-L/lib/profiled -L/usr/lib/profiled}\\\n %{p:-L/lib/profiled -L/usr/lib/profiled} %{!shared:%{g*:-lg}} -lc\"\n \n+/* This now supports a natural alignment mode. */\n /* AIX word-aligns FP doubles but doubleword-aligns 64-bit ints.  */\n #define ADJUST_FIELD_ALIGN(FIELD, COMPUTED) \\\n+  (TARGET_ALIGN_NATURAL ? (COMPUTED) : \\\n   (TYPE_MODE (TREE_CODE (TREE_TYPE (FIELD)) == ARRAY_TYPE \\\n \t      ? get_inner_array_type (FIELD) \\\n \t      : TREE_TYPE (FIELD)) == DFmode \\\n-   ? MIN ((COMPUTED), 32) : (COMPUTED))\n+   ? MIN ((COMPUTED), 32) : (COMPUTED)))\n \n /* AIX increases natural record alignment to doubleword if the first\n    field is an FP double while the FP fields remain word aligned.  */\n@@ -142,6 +144,7 @@\n     || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\\\n     || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\\\n    && TYPE_FIELDS (STRUCT) != 0\t\t\t\t\\\n+   && TARGET_ALIGN_NATURAL == 0                         \\\n    && DECL_MODE (TYPE_FIELDS (STRUCT)) == DFmode\t\\\n    ? MAX (MAX ((COMPUTED), (SPECIFIED)), 64)\t\t\\\n    : MAX ((COMPUTED), (SPECIFIED)))"}, {"sha": "478b9a6176ba876d342b4edbc43c7eacf13ddfd2", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/025d9908d3e3816f06a045d936c569361522ec6e/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/025d9908d3e3816f06a045d936c569361522ec6e/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=025d9908d3e3816f06a045d936c569361522ec6e", "patch": "@@ -250,12 +250,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Fix for emit_group_load (): force large constants to be pushed via regs.  */\n #define ALWAYS_PUSH_CONSTS_USING_REGS_P\t\t1\n \n+/* This now supports a natural alignment mode */\n /* Darwin word-aligns FP doubles but doubleword-aligns 64-bit ints.  */\n #define ADJUST_FIELD_ALIGN(FIELD, COMPUTED) \\\n+  (TARGET_ALIGN_NATURAL ? (COMPUTED) : \\\n   (TYPE_MODE (TREE_CODE (TREE_TYPE (FIELD)) == ARRAY_TYPE \\\n \t      ? get_inner_array_type (FIELD) \\\n \t      : TREE_TYPE (FIELD)) == DFmode \\\n-   ? MIN ((COMPUTED), 32) : (COMPUTED))\n+   ? MIN ((COMPUTED), 32) : (COMPUTED)))\n \n /* Darwin increases natural record alignment to doubleword if the first\n    field is an FP double while the FP fields remain word aligned.  */\n@@ -264,6 +266,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n     || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\\\n     || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\\\n    && TYPE_FIELDS (STRUCT) != 0\t\t\t\t\\\n+   && TARGET_ALIGN_NATURAL == 0                         \\\n    && DECL_MODE (TYPE_FIELDS (STRUCT)) == DFmode\t\\\n    ? MAX (MAX ((COMPUTED), (SPECIFIED)), 64)\t\t\\\n    : (TARGET_ALTIVEC && TREE_CODE (STRUCT) == VECTOR_TYPE) \\"}, {"sha": "bd3a6a85b1802c119048e3572bf2f593a4886059", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/025d9908d3e3816f06a045d936c569361522ec6e/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/025d9908d3e3816f06a045d936c569361522ec6e/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=025d9908d3e3816f06a045d936c569361522ec6e", "patch": "@@ -119,13 +119,15 @@\n \n #define USER_LABEL_PREFIX  \"\"\n \n+/* This now supports a natural alignment mode. */\n /* AIX word-aligns FP doubles but doubleword-aligns 64-bit ints.  */\n #undef  ADJUST_FIELD_ALIGN\n #define ADJUST_FIELD_ALIGN(FIELD, COMPUTED) \\\n+  (TARGET_ALIGN_NATURAL ? (COMPUTED) : \\\n   (TYPE_MODE (TREE_CODE (TREE_TYPE (FIELD)) == ARRAY_TYPE \\\n \t      ? get_inner_array_type (FIELD) \\\n \t      : TREE_TYPE (FIELD)) == DFmode \\\n-   ? MIN ((COMPUTED), 32) : (COMPUTED))\n+   ? MIN ((COMPUTED), 32) : (COMPUTED)))\n \n /* AIX increases natural record alignment to doubleword if the first\n    field is an FP double while the FP fields remain word aligned.  */\n@@ -135,6 +137,7 @@\n     || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\\\n     || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\\\n    && TYPE_FIELDS (STRUCT) != 0\t\t\t\t\\\n+   && TARGET_ALIGN_NATURAL == 0                         \\\n    && DECL_MODE (TYPE_FIELDS (STRUCT)) == DFmode\t\\\n    ? MAX (MAX ((COMPUTED), (SPECIFIED)), 64)\t\t\\\n    : MAX ((COMPUTED), (SPECIFIED)))"}, {"sha": "ff7cec6a9d6878417c3ebbd40350046c361537ad", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/025d9908d3e3816f06a045d936c569361522ec6e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/025d9908d3e3816f06a045d936c569361522ec6e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=025d9908d3e3816f06a045d936c569361522ec6e", "patch": "@@ -178,6 +178,11 @@ static int rs6000_sr_alias_set;\n int rs6000_default_long_calls;\n const char *rs6000_longcall_switch;\n \n+/* Control alignment for fields within structures. */\n+/* String from -malign-XXXXX. */\n+const char *rs6000_alignment_string;\n+int rs6000_alignment_flags;\n+\n struct builtin_description\n {\n   /* mask is not const because we're going to alter it below.  This\n@@ -290,6 +295,7 @@ static rtx altivec_expand_abs_builtin PARAMS ((enum insn_code, tree, rtx));\n static rtx altivec_expand_predicate_builtin PARAMS ((enum insn_code, const char *, tree, rtx));\n static rtx altivec_expand_stv_builtin PARAMS ((enum insn_code, tree));\n static void rs6000_parse_abi_options PARAMS ((void));\n+static void rs6000_parse_alignment_option PARAMS ((void));\n static void rs6000_parse_tls_size_option PARAMS ((void));\n static void rs6000_parse_yes_no_option (const char *, const char *, int *);\n static int first_altivec_reg_to_save PARAMS ((void));\n@@ -739,6 +745,9 @@ rs6000_override_options (default_cpu)\n   /* Handle -mabi= options.  */\n   rs6000_parse_abi_options ();\n \n+  /* Handle -malign-XXXXX option.  */\n+  rs6000_parse_alignment_option ();\n+\n   /* Handle generic -mFOO=YES/NO options.  */\n   rs6000_parse_yes_no_option (\"vrsave\", rs6000_altivec_vrsave_string,\n \t\t\t      &rs6000_altivec_vrsave);\n@@ -888,6 +897,20 @@ rs6000_parse_abi_options ()\n     error (\"unknown ABI specified: '%s'\", rs6000_abi_string);\n }\n \n+/* Handle -malign-XXXXXX options.  */\n+static void\n+rs6000_parse_alignment_option ()\n+{\n+  if (rs6000_alignment_string == 0\n+      || ! strcmp (rs6000_alignment_string, \"power\"))\n+    rs6000_alignment_flags = MASK_ALIGN_POWER;\n+  else if (! strcmp (rs6000_alignment_string, \"natural\"))\n+    rs6000_alignment_flags = MASK_ALIGN_NATURAL;\n+  else\n+    error (\"unknown -malign-XXXXX option specified: '%s'\",\n+\t   rs6000_alignment_string);\n+}\n+\n /* Validate and record the size specified with the -mtls-size option.  */\n \n static void"}, {"sha": "4eaae019fa5d4cfddf915610c63f5ab0259d3716", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/025d9908d3e3816f06a045d936c569361522ec6e/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/025d9908d3e3816f06a045d936c569361522ec6e/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=025d9908d3e3816f06a045d936c569361522ec6e", "patch": "@@ -402,6 +402,8 @@ extern enum processor_type rs6000_cpu;\n    {\"longcall\", &rs6000_longcall_switch,\t\t\t\t\\\n     N_(\"Avoid all range limits on call instructions\"), 0},\t\t\\\n    {\"no-longcall\", &rs6000_longcall_switch, \"\", 0},\t\t\t\\\n+   {\"align-\", &rs6000_alignment_string,\t\t\t\t\t\\\n+    N_(\"Specify alignment of structure fields default/natural\"), 0},\t\\\n    SUBTARGET_OPTIONS\t\t\t\t\t\t\t\\\n }\n \n@@ -443,6 +445,25 @@ extern const char *rs6000_altivec_vrsave_string;\n extern int rs6000_altivec_vrsave;\n extern const char *rs6000_longcall_switch;\n extern int rs6000_default_long_calls;\n+extern const char* rs6000_alignment_string;\n+extern int rs6000_alignment_flags;\n+\n+/* Alignment options for fields in structures for sub-targets following\n+   AIX-like ABI.\n+   ALIGN_POWER word-aligns FP doubles (default AIX ABI).\n+   ALIGN_NATURAL doubleword-aligns FP doubles (align to object size).\n+\n+   Override the macro definitions when compiling libobjc to avoid undefined\n+   reference to rs6000_alignment_flags due to library's use of GCC alignment\n+   macros which use the macros below.  */\n+   \n+#ifndef IN_TARGET_LIBS\n+#define MASK_ALIGN_POWER   0x00000000\n+#define MASK_ALIGN_NATURAL 0x00000001\n+#define TARGET_ALIGN_NATURAL (rs6000_alignment_flags & MASK_ALIGN_NATURAL)\n+#else\n+#define TARGET_ALIGN_NATURAL 0\n+#endif\n \n #define TARGET_LONG_DOUBLE_128 (rs6000_long_double_type_size == 128)\n #define TARGET_ALTIVEC_ABI rs6000_altivec_abi"}]}