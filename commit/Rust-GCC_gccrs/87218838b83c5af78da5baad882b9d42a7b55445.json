{"sha": "87218838b83c5af78da5baad882b9d42a7b55445", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODcyMTg4MzhiODNjNWFmNzhkYTViYWFkODgyYjlkNDJhN2I1NTQ0NQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-10-12T11:32:02Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-10-12T11:32:02Z"}, "message": "alpha.md (vecmodesuffix): New mode attribute.\n\n\t* config/alpha/alpha.md (vecmodesuffix): New mode attribute.\n\t(modesuffix): Handle V8QI and V4HI modes.\n\t(any_maxmin): New code iterator.\n\t(maxmin): New code attribute.\n\t(<code><mode>3): Macroize insn from {smax,smin,umax,umin}{qi,hi}3\n\tusing any_maxmin code iterator and I12MODE mode iterator.\n\t(<code><mode>3): Macroize insn from {smax,smin,umax,umin}{v8qi,v4hi}3\n\tusing any_maxmin code iterator and VEC12 mode iterator.\n\nFrom-SVN: r192396", "tree": {"sha": "4b4d84b714ffbeeb455796f21fb48468b2e12e8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b4d84b714ffbeeb455796f21fb48468b2e12e8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87218838b83c5af78da5baad882b9d42a7b55445", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87218838b83c5af78da5baad882b9d42a7b55445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87218838b83c5af78da5baad882b9d42a7b55445", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87218838b83c5af78da5baad882b9d42a7b55445/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b06f98418f6aa360a06f368ba75bd1b8c15cfed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b06f98418f6aa360a06f368ba75bd1b8c15cfed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b06f98418f6aa360a06f368ba75bd1b8c15cfed"}], "stats": {"total": 158, "additions": 34, "deletions": 124}, "files": [{"sha": "969d7e9aae81ff7580c41bbcc860a55264de54fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87218838b83c5af78da5baad882b9d42a7b55445/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87218838b83c5af78da5baad882b9d42a7b55445/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87218838b83c5af78da5baad882b9d42a7b55445", "patch": "@@ -1,3 +1,14 @@\n+2012-10-12  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.md (vecmodesuffix): New mode attribute.\n+\t(modesuffix): Handle V8QI and V4HI modes.\n+\t(any_maxmin): New code iterator.\n+\t(maxmin): New code attribute.\n+\t(<code><mode>3): Macroize insn from {smax,smin,umax,umin}{qi,hi}3\n+\tusing any_maxmin code iterator and I12MODE mode iterator.\n+\t(<code><mode>3): Macroize insn from {smax,smin,umax,umin}{v8qi,v4hi}3\n+\tusing any_maxmin code iterator and VEC12 mode iterator.\n+\n 2012-10-12  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* optabs.c (vector_compare_rtx): Change prototype.\n@@ -62,7 +73,7 @@\n \t*mov{qi,hi,si,di}cc_lbc using IMODE mode iterator.\n \t(*mov<mode>cc_lbs): Macroize insn from\n \t*mov{qi,hi,si,di}cc_lbs using IMODE mode iterator.\n-\t(mov<mode>cc): Macroize insn from mov{si,di}cc_lbs\n+\t(mov<mode>cc): Macroize expander from mov{si,di}cc\n \tusing I48MODE mode iterator.\n \n 2012-10-11  Steven Bosscher  <steven@gcc.gnu.org>"}, {"sha": "4f046148c0da9de4dcab36cbb1156f0a779c1d4f", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 22, "deletions": 123, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87218838b83c5af78da5baad882b9d42a7b55445/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87218838b83c5af78da5baad882b9d42a7b55445/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=87218838b83c5af78da5baad882b9d42a7b55445", "patch": "@@ -95,8 +95,16 @@\n (define_mode_iterator I124MODE [QI HI SI])\n (define_mode_iterator I248MODE [HI SI DI])\n (define_mode_iterator I48MODE [SI DI])\n+\n (define_mode_attr DWI [(SI \"DI\") (DI \"TI\")])\n-(define_mode_attr modesuffix [(QI \"b\") (HI \"w\") (SI \"l\") (DI \"q\")])\n+(define_mode_attr modesuffix [(QI \"b\") (HI \"w\") (SI \"l\") (DI \"q\")\n+\t\t  \t      (V8QI \"b8\") (V4HI \"w4\")])\n+(define_mode_attr vecmodesuffix [(QI \"b8\") (HI \"w4\")])\n+\n+(define_code_iterator any_maxmin [smax smin umax umin])\n+\n+(define_code_attr maxmin [(smax \"maxs\") (smin \"mins\")\n+\t\t\t  (umax \"maxu\") (umin \"minu\")])\n \n ;; Where necessary, the suffixes _le and _be are used to distinguish between\n ;; little-endian and big-endian patterns.\n@@ -2723,68 +2731,13 @@\n \t\t\t\t       (match_dup 0) (match_dup 1)))]\n   \"\")\n \n-(define_insn \"sminqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n-\t(smin:QI (match_operand:QI 1 \"reg_or_0_operand\" \"%rJ\")\n-\t\t (match_operand:QI 2 \"reg_or_8bit_operand\" \"rI\")))]\n-  \"TARGET_MAX\"\n-  \"minsb8 %r1,%2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"uminqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n-\t(umin:QI (match_operand:QI 1 \"reg_or_0_operand\" \"%rJ\")\n-\t\t (match_operand:QI 2 \"reg_or_8bit_operand\" \"rI\")))]\n-  \"TARGET_MAX\"\n-  \"minub8 %r1,%2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"smaxqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n-\t(smax:QI (match_operand:QI 1 \"reg_or_0_operand\" \"%rJ\")\n-\t\t (match_operand:QI 2 \"reg_or_8bit_operand\" \"rI\")))]\n-  \"TARGET_MAX\"\n-  \"maxsb8 %r1,%2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"umaxqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n-\t(umax:QI (match_operand:QI 1 \"reg_or_0_operand\" \"%rJ\")\n-\t\t (match_operand:QI 2 \"reg_or_8bit_operand\" \"rI\")))]\n-  \"TARGET_MAX\"\n-  \"maxub8 %r1,%2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"sminhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-\t(smin:HI (match_operand:HI 1 \"reg_or_0_operand\" \"%rJ\")\n-\t\t (match_operand:HI 2 \"reg_or_8bit_operand\" \"rI\")))]\n-  \"TARGET_MAX\"\n-  \"minsw4 %r1,%2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"uminhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-\t(umin:HI (match_operand:HI 1 \"reg_or_0_operand\" \"%rJ\")\n-\t\t (match_operand:HI 2 \"reg_or_8bit_operand\" \"rI\")))]\n-  \"TARGET_MAX\"\n-  \"minuw4 %r1,%2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"smaxhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-\t(smax:HI (match_operand:HI 1 \"reg_or_0_operand\" \"%rJ\")\n-\t\t (match_operand:HI 2 \"reg_or_8bit_operand\" \"rI\")))]\n-  \"TARGET_MAX\"\n-  \"maxsw4 %r1,%2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"umaxhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-\t(umax:HI (match_operand:HI 1 \"reg_or_0_operand\" \"%rJ\")\n-\t\t (match_operand:HI 2 \"reg_or_8bit_operand\" \"rI\")))]\n+(define_insn \"<code><mode>3\"\n+  [(set (match_operand:I12MODE 0 \"register_operand\" \"=r\")\n+\t(any_maxmin:I12MODE\n+\t (match_operand:I12MODE 1 \"reg_or_0_operand\" \"%rJ\")\n+\t (match_operand:I12MODE 2 \"reg_or_8bit_operand\" \"rI\")))]\n   \"TARGET_MAX\"\n-  \"maxuw4 %r1,%2,%0\"\n+  \"<maxmin><vecmodesuffix> %r1,%2,%0\"\n   [(set_attr \"type\" \"mvi\")])\n \n (define_expand \"smaxdi3\"\n@@ -4848,6 +4801,7 @@\n ;; Vector operations\n \n (define_mode_iterator VEC [V8QI V4HI V2SI])\n+(define_mode_iterator VEC12 [V8QI V4HI])\n \n (define_expand \"mov<mode>\"\n   [(set (match_operand:VEC 0 \"nonimmediate_operand\" \"\")\n@@ -4898,68 +4852,13 @@\n   [(set_attr \"type\" \"ilog,multi,ild,ist,fcpys,fld,fst,ftoi,itof\")\n    (set_attr \"isa\" \"*,*,*,*,*,*,*,fix,fix\")])\n \n-(define_insn \"uminv8qi3\"\n-  [(set (match_operand:V8QI 0 \"register_operand\" \"=r\")\n-\t(umin:V8QI (match_operand:V8QI 1 \"reg_or_0_operand\" \"rW\")\n-\t\t   (match_operand:V8QI 2 \"reg_or_0_operand\" \"rW\")))]\n-  \"TARGET_MAX\"\n-  \"minub8 %r1,%r2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"sminv8qi3\"\n-  [(set (match_operand:V8QI 0 \"register_operand\" \"=r\")\n-\t(smin:V8QI (match_operand:V8QI 1 \"reg_or_0_operand\" \"rW\")\n-\t\t   (match_operand:V8QI 2 \"reg_or_0_operand\" \"rW\")))]\n-  \"TARGET_MAX\"\n-  \"minsb8 %r1,%r2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"uminv4hi3\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=r\")\n-\t(umin:V4HI (match_operand:V4HI 1 \"reg_or_0_operand\" \"rW\")\n-\t\t   (match_operand:V4HI 2 \"reg_or_0_operand\" \"rW\")))]\n-  \"TARGET_MAX\"\n-  \"minuw4 %r1,%r2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"sminv4hi3\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=r\")\n-\t(smin:V4HI (match_operand:V4HI 1 \"reg_or_0_operand\" \"rW\")\n-\t\t   (match_operand:V4HI 2 \"reg_or_0_operand\" \"rW\")))]\n-  \"TARGET_MAX\"\n-  \"minsw4 %r1,%r2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"umaxv8qi3\"\n-  [(set (match_operand:V8QI 0 \"register_operand\" \"=r\")\n-\t(umax:V8QI (match_operand:V8QI 1 \"reg_or_0_operand\" \"rW\")\n-\t\t   (match_operand:V8QI 2 \"reg_or_0_operand\" \"rW\")))]\n-  \"TARGET_MAX\"\n-  \"maxub8 %r1,%r2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"smaxv8qi3\"\n-  [(set (match_operand:V8QI 0 \"register_operand\" \"=r\")\n-\t(smax:V8QI (match_operand:V8QI 1 \"reg_or_0_operand\" \"rW\")\n-\t\t   (match_operand:V8QI 2 \"reg_or_0_operand\" \"rW\")))]\n-  \"TARGET_MAX\"\n-  \"maxsb8 %r1,%r2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"umaxv4hi3\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=r\")\n-\t(umax:V4HI (match_operand:V4HI 1 \"reg_or_0_operand\" \"rW\")\n-\t\t   (match_operand:V4HI 2 \"reg_or_0_operand\" \"rW\")))]\n-  \"TARGET_MAX\"\n-  \"maxuw4 %r1,%r2,%0\"\n-  [(set_attr \"type\" \"mvi\")])\n-\n-(define_insn \"smaxv4hi3\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=r\")\n-\t(smax:V4HI (match_operand:V4HI 1 \"reg_or_0_operand\" \"rW\")\n-\t\t   (match_operand:V4HI 2 \"reg_or_0_operand\" \"rW\")))]\n+(define_insn \"<code><mode>3\"\n+  [(set (match_operand:VEC12 0 \"register_operand\" \"=r\")\n+\t(any_maxmin:VEC12\n+\t (match_operand:VEC12 1 \"reg_or_0_operand\" \"rW\")\n+\t (match_operand:VEC12 2 \"reg_or_0_operand\" \"rW\")))]\n   \"TARGET_MAX\"\n-  \"maxsw4 %r1,%r2,%0\"\n+  \"<maxmin><modesuffix> %r1,%r2,%0\"\n   [(set_attr \"type\" \"mvi\")])\n \n (define_insn \"one_cmpl<mode>2\""}]}