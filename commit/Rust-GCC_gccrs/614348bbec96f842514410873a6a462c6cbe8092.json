{"sha": "614348bbec96f842514410873a6a462c6cbe8092", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE0MzQ4YmJlYzk2Zjg0MjUxNDQxMDg3M2E2YTQ2MmM2Y2JlODA5Mg==", "commit": {"author": {"name": "Simon Posnjak", "email": "simon.posnjak@siol.net", "date": "2005-04-18T17:08:58Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2005-04-18T17:08:58Z"}, "message": "Makefile.am: Add CRIS support.\n\n\t* Makefile.am: Add CRIS support.\n\t* configure.ac: Likewise.\n\t* Makefile.in, configure, testsuite/Makefile.in: Regenerate.\n\t* src/cris: New directory.\n\t* src/cris/ffi.c, src/cris/sysv.S, src/cris/ffitarget.h: New files.\n\t* src/prep_cif.c (ffi_prep_cif): Wrap in #ifndef __CRIS__.\n\nCo-Authored-By: Hans-Peter Nilsson <hp@axis.com>\n\nFrom-SVN: r98332", "tree": {"sha": "4ca964a66ba44631a33fa8d08161f42d9e697bf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ca964a66ba44631a33fa8d08161f42d9e697bf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/614348bbec96f842514410873a6a462c6cbe8092", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/614348bbec96f842514410873a6a462c6cbe8092", "html_url": "https://github.com/Rust-GCC/gccrs/commit/614348bbec96f842514410873a6a462c6cbe8092", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/614348bbec96f842514410873a6a462c6cbe8092/comments", "author": null, "committer": null, "parents": [{"sha": "ab54a8fcecba00d08ef24abe4d8602104afeeecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab54a8fcecba00d08ef24abe4d8602104afeeecb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab54a8fcecba00d08ef24abe4d8602104afeeecb"}], "stats": {"total": 761, "additions": 737, "deletions": 24}, "files": [{"sha": "67f54d444338cf38a03da78f15a1d23bb34ca3d7", "filename": "libffi/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614348bbec96f842514410873a6a462c6cbe8092/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614348bbec96f842514410873a6a462c6cbe8092/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=614348bbec96f842514410873a6a462c6cbe8092", "patch": "@@ -1,4 +1,12 @@\n-2005-04-18  Hans-Peter Nilsson  <hp@axis.com>\n+2005-04-18  Simon Posnjak <simon.posnjak@siol.net> \n+\t    Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* Makefile.am: Add CRIS support.\n+\t* configure.ac: Likewise.\n+\t* Makefile.in, configure, testsuite/Makefile.in: Regenerate.\n+\t* src/cris: New directory.\n+\t* src/cris/ffi.c, src/cris/sysv.S, src/cris/ffitarget.h: New files.\n+\t* src/prep_cif.c (ffi_prep_cif): Wrap in #ifndef __CRIS__.\n \n \t* testsuite/lib/libffi-dg.exp (libffi-dg-test-1): Replace \\n with\n \t\\r?\\n in output tests."}, {"sha": "e82786cf1e077e18aaa1b27f216ff2e7e418cac5", "filename": "libffi/Makefile.am", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614348bbec96f842514410873a6a462c6cbe8092/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614348bbec96f842514410873a6a462c6cbe8092/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=614348bbec96f842514410873a6a462c6cbe8092", "patch": "@@ -8,6 +8,7 @@ SUBDIRS = include testsuite\n EXTRA_DIST = LICENSE ChangeLog.v1 \\\n \tsrc/alpha/ffi.c src/alpha/osf.S src/alpha/ffitarget.h \\\n \tsrc/arm/ffi.c src/arm/sysv.S src/arm/ffitarget.h \\\n+\tsrc/cris/ffi.c src/cris/sysv.S src/cris/ffitarget.h \\\n \tsrc/mips/ffi.c src/mips/n32.S src/mips/o32.S \\\n \tsrc/mips/ffitarget.h \\\n \tsrc/m32r/ffi.c src/m32r/sysv.S src/m32r/ffitarget.h \\\n@@ -119,6 +120,9 @@ endif\n if ARM\n nodist_libffi_la_SOURCES += src/arm/sysv.S src/arm/ffi.c\n endif\n+if LIBFFI_CRIS\n+nodist_libffi_la_SOURCES += src/cris/sysv.S src/cris/ffi.c\n+endif\n if FRV\n nodist_libffi_la_SOURCES += src/frv/eabi.S src/frv/ffi.c\n endif"}, {"sha": "f641e80c62e5fd73306177b5da35842d4a6b472d", "filename": "libffi/Makefile.in", "status": "modified", "additions": 45, "deletions": 22, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614348bbec96f842514410873a6a462c6cbe8092/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614348bbec96f842514410873a6a462c6cbe8092/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=614348bbec96f842514410873a6a462c6cbe8092", "patch": "@@ -52,12 +52,13 @@ target_triplet = @target@\n @POWERPC_AIX_TRUE@am__append_11 = src/powerpc/ffi_darwin.c src/powerpc/aix.S src/powerpc/aix_closure.S\n @POWERPC_DARWIN_TRUE@am__append_12 = src/powerpc/ffi_darwin.c src/powerpc/darwin.S src/powerpc/darwin_closure.S\n @ARM_TRUE@am__append_13 = src/arm/sysv.S src/arm/ffi.c\n-@FRV_TRUE@am__append_14 = src/frv/eabi.S src/frv/ffi.c\n-@S390_TRUE@am__append_15 = src/s390/sysv.S src/s390/ffi.c\n-@X86_64_TRUE@am__append_16 = src/x86/ffi64.c src/x86/unix64.S src/x86/ffi.c src/x86/sysv.S\n-@SH_TRUE@am__append_17 = src/sh/sysv.S src/sh/ffi.c\n-@SH64_TRUE@am__append_18 = src/sh64/sysv.S src/sh64/ffi.c\n-@PA_TRUE@am__append_19 = src/pa/linux.S src/pa/ffi.c\n+@LIBFFI_CRIS_TRUE@am__append_14 = src/cris/sysv.S src/cris/ffi.c\n+@FRV_TRUE@am__append_15 = src/frv/eabi.S src/frv/ffi.c\n+@S390_TRUE@am__append_16 = src/s390/sysv.S src/s390/ffi.c\n+@X86_64_TRUE@am__append_17 = src/x86/ffi64.c src/x86/unix64.S src/x86/ffi.c src/x86/sysv.S\n+@SH_TRUE@am__append_18 = src/sh/sysv.S src/sh/ffi.c\n+@SH64_TRUE@am__append_19 = src/sh64/sysv.S src/sh64/ffi.c\n+@PA_TRUE@am__append_20 = src/pa/linux.S src/pa/ffi.c\n DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(srcdir)/../config.guess $(srcdir)/../config.sub \\\n \t$(srcdir)/../depcomp $(srcdir)/../install-sh \\\n@@ -112,34 +113,35 @@ am_libffi_la_OBJECTS = src/debug.lo src/prep_cif.lo src/types.lo \\\n @POWERPC_DARWIN_TRUE@\tsrc/powerpc/darwin.lo \\\n @POWERPC_DARWIN_TRUE@\tsrc/powerpc/darwin_closure.lo\n @ARM_TRUE@am__objects_13 = src/arm/sysv.lo src/arm/ffi.lo\n-@FRV_TRUE@am__objects_14 = src/frv/eabi.lo src/frv/ffi.lo\n-@S390_TRUE@am__objects_15 = src/s390/sysv.lo src/s390/ffi.lo\n-@X86_64_TRUE@am__objects_16 = src/x86/ffi64.lo src/x86/unix64.lo \\\n+@LIBFFI_CRIS_TRUE@am__objects_14 = src/cris/sysv.lo src/cris/ffi.lo\n+@FRV_TRUE@am__objects_15 = src/frv/eabi.lo src/frv/ffi.lo\n+@S390_TRUE@am__objects_16 = src/s390/sysv.lo src/s390/ffi.lo\n+@X86_64_TRUE@am__objects_17 = src/x86/ffi64.lo src/x86/unix64.lo \\\n @X86_64_TRUE@\tsrc/x86/ffi.lo src/x86/sysv.lo\n-@SH_TRUE@am__objects_17 = src/sh/sysv.lo src/sh/ffi.lo\n-@SH64_TRUE@am__objects_18 = src/sh64/sysv.lo src/sh64/ffi.lo\n-@PA_TRUE@am__objects_19 = src/pa/linux.lo src/pa/ffi.lo\n+@SH_TRUE@am__objects_18 = src/sh/sysv.lo src/sh/ffi.lo\n+@SH64_TRUE@am__objects_19 = src/sh64/sysv.lo src/sh64/ffi.lo\n+@PA_TRUE@am__objects_20 = src/pa/linux.lo src/pa/ffi.lo\n nodist_libffi_la_OBJECTS = $(am__objects_1) $(am__objects_2) \\\n \t$(am__objects_3) $(am__objects_4) $(am__objects_5) \\\n \t$(am__objects_6) $(am__objects_7) $(am__objects_8) \\\n \t$(am__objects_9) $(am__objects_10) $(am__objects_11) \\\n \t$(am__objects_12) $(am__objects_13) $(am__objects_14) \\\n \t$(am__objects_15) $(am__objects_16) $(am__objects_17) \\\n-\t$(am__objects_18) $(am__objects_19)\n+\t$(am__objects_18) $(am__objects_19) $(am__objects_20)\n libffi_la_OBJECTS = $(am_libffi_la_OBJECTS) \\\n \t$(nodist_libffi_la_OBJECTS)\n libffi_convenience_la_LIBADD =\n-am__objects_20 = src/debug.lo src/prep_cif.lo src/types.lo \\\n+am__objects_21 = src/debug.lo src/prep_cif.lo src/types.lo \\\n \tsrc/raw_api.lo src/java_raw_api.lo\n-am_libffi_convenience_la_OBJECTS = $(am__objects_20)\n-am__objects_21 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \\\n+am_libffi_convenience_la_OBJECTS = $(am__objects_21)\n+am__objects_22 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \\\n \t$(am__objects_4) $(am__objects_5) $(am__objects_6) \\\n \t$(am__objects_7) $(am__objects_8) $(am__objects_9) \\\n \t$(am__objects_10) $(am__objects_11) $(am__objects_12) \\\n \t$(am__objects_13) $(am__objects_14) $(am__objects_15) \\\n \t$(am__objects_16) $(am__objects_17) $(am__objects_18) \\\n-\t$(am__objects_19)\n-nodist_libffi_convenience_la_OBJECTS = $(am__objects_21)\n+\t$(am__objects_19) $(am__objects_20)\n+nodist_libffi_convenience_la_OBJECTS = $(am__objects_22)\n libffi_convenience_la_OBJECTS = $(am_libffi_convenience_la_OBJECTS) \\\n \t$(nodist_libffi_convenience_la_OBJECTS)\n DEFAULT_INCLUDES = -I. -I$(srcdir) -I.\n@@ -224,6 +226,8 @@ INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+LIBFFI_CRIS_FALSE = @LIBFFI_CRIS_FALSE@\n+LIBFFI_CRIS_TRUE = @LIBFFI_CRIS_TRUE@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@\n@@ -331,6 +335,7 @@ SUBDIRS = include testsuite\n EXTRA_DIST = LICENSE ChangeLog.v1 \\\n \tsrc/alpha/ffi.c src/alpha/osf.S src/alpha/ffitarget.h \\\n \tsrc/arm/ffi.c src/arm/sysv.S src/arm/ffitarget.h \\\n+\tsrc/cris/ffi.c src/cris/sysv.S src/cris/ffitarget.h \\\n \tsrc/mips/ffi.c src/mips/n32.S src/mips/o32.S \\\n \tsrc/mips/ffitarget.h \\\n \tsrc/m32r/ffi.c src/m32r/sysv.S src/m32r/ffitarget.h \\\n@@ -400,7 +405,7 @@ nodist_libffi_la_SOURCES = $(am__append_1) $(am__append_2) \\\n \t$(am__append_9) $(am__append_10) $(am__append_11) \\\n \t$(am__append_12) $(am__append_13) $(am__append_14) \\\n \t$(am__append_15) $(am__append_16) $(am__append_17) \\\n-\t$(am__append_18) $(am__append_19)\n+\t$(am__append_18) $(am__append_19) $(am__append_20)\n libffi_convenience_la_SOURCES = $(libffi_la_SOURCES)\n nodist_libffi_convenience_la_SOURCES = $(nodist_libffi_la_SOURCES)\n AM_CFLAGS = -Wall -g -fexceptions\n@@ -621,6 +626,16 @@ src/arm/sysv.lo: src/arm/$(am__dirstamp) \\\n \tsrc/arm/$(DEPDIR)/$(am__dirstamp)\n src/arm/ffi.lo: src/arm/$(am__dirstamp) \\\n \tsrc/arm/$(DEPDIR)/$(am__dirstamp)\n+src/cris/$(am__dirstamp):\n+\t@$(mkdir_p) src/cris\n+\t@: > src/cris/$(am__dirstamp)\n+src/cris/$(DEPDIR)/$(am__dirstamp):\n+\t@$(mkdir_p) src/cris/$(DEPDIR)\n+\t@: > src/cris/$(DEPDIR)/$(am__dirstamp)\n+src/cris/sysv.lo: src/cris/$(am__dirstamp) \\\n+\tsrc/cris/$(DEPDIR)/$(am__dirstamp)\n+src/cris/ffi.lo: src/cris/$(am__dirstamp) \\\n+\tsrc/cris/$(DEPDIR)/$(am__dirstamp)\n src/frv/$(am__dirstamp):\n \t@$(mkdir_p) src/frv\n \t@: > src/frv/$(am__dirstamp)\n@@ -688,6 +703,10 @@ mostlyclean-compile:\n \t-rm -f src/arm/ffi.lo\n \t-rm -f src/arm/sysv.$(OBJEXT)\n \t-rm -f src/arm/sysv.lo\n+\t-rm -f src/cris/ffi.$(OBJEXT)\n+\t-rm -f src/cris/ffi.lo\n+\t-rm -f src/cris/sysv.$(OBJEXT)\n+\t-rm -f src/cris/sysv.lo\n \t-rm -f src/debug.$(OBJEXT)\n \t-rm -f src/debug.lo\n \t-rm -f src/frv/eabi.$(OBJEXT)\n@@ -783,6 +802,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/types.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@src/alpha/$(DEPDIR)/ffi.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@src/arm/$(DEPDIR)/ffi.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@src/cris/$(DEPDIR)/ffi.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@src/frv/$(DEPDIR)/ffi.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@src/ia64/$(DEPDIR)/ffi.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@src/m32r/$(DEPDIR)/ffi.Plo@am__quote@\n@@ -839,6 +859,7 @@ clean-libtool:\n \t-rm -rf src/.libs src/_libs\n \t-rm -rf src/alpha/.libs src/alpha/_libs\n \t-rm -rf src/arm/.libs src/arm/_libs\n+\t-rm -rf src/cris/.libs src/cris/_libs\n \t-rm -rf src/frv/.libs src/frv/_libs\n \t-rm -rf src/ia64/.libs src/ia64/_libs\n \t-rm -rf src/m32r/.libs src/m32r/_libs\n@@ -996,7 +1017,7 @@ distclean-tags:\n distdir: $(DISTFILES)\n \t$(am__remove_distdir)\n \tmkdir $(distdir)\n-\t$(mkdir_p) $(distdir)/.. $(distdir)/../config $(distdir)/include $(distdir)/src/alpha $(distdir)/src/arm $(distdir)/src/frv $(distdir)/src/m32r $(distdir)/src/m68k $(distdir)/src/mips $(distdir)/src/pa $(distdir)/src/powerpc $(distdir)/src/s390 $(distdir)/src/sh $(distdir)/src/sh64 $(distdir)/src/sparc $(distdir)/src/x86\n+\t$(mkdir_p) $(distdir)/.. $(distdir)/../config $(distdir)/include $(distdir)/src/alpha $(distdir)/src/arm $(distdir)/src/cris $(distdir)/src/frv $(distdir)/src/m32r $(distdir)/src/m68k $(distdir)/src/mips $(distdir)/src/pa $(distdir)/src/powerpc $(distdir)/src/s390 $(distdir)/src/sh $(distdir)/src/sh64 $(distdir)/src/sparc $(distdir)/src/x86\n \t@srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`; \\\n \ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's|.|.|g'`; \\\n \tlist='$(DISTFILES)'; for file in $$list; do \\\n@@ -1169,6 +1190,8 @@ distclean-generic:\n \t-rm -f src/alpha/$(am__dirstamp)\n \t-rm -f src/arm/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f src/arm/$(am__dirstamp)\n+\t-rm -f src/cris/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f src/cris/$(am__dirstamp)\n \t-rm -f src/frv/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f src/frv/$(am__dirstamp)\n \t-rm -f src/ia64/$(DEPDIR)/$(am__dirstamp)\n@@ -1204,7 +1227,7 @@ clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n \n distclean: distclean-multi distclean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n-\t-rm -rf src/$(DEPDIR) src/alpha/$(DEPDIR) src/arm/$(DEPDIR) src/frv/$(DEPDIR) src/ia64/$(DEPDIR) src/m32r/$(DEPDIR) src/m68k/$(DEPDIR) src/mips/$(DEPDIR) src/pa/$(DEPDIR) src/powerpc/$(DEPDIR) src/s390/$(DEPDIR) src/sh/$(DEPDIR) src/sh64/$(DEPDIR) src/sparc/$(DEPDIR) src/x86/$(DEPDIR)\n+\t-rm -rf src/$(DEPDIR) src/alpha/$(DEPDIR) src/arm/$(DEPDIR) src/cris/$(DEPDIR) src/frv/$(DEPDIR) src/ia64/$(DEPDIR) src/m32r/$(DEPDIR) src/m68k/$(DEPDIR) src/mips/$(DEPDIR) src/pa/$(DEPDIR) src/powerpc/$(DEPDIR) src/s390/$(DEPDIR) src/sh/$(DEPDIR) src/sh64/$(DEPDIR) src/sparc/$(DEPDIR) src/x86/$(DEPDIR)\n \t-rm -f Makefile\n distclean-am: clean-am distclean-compile distclean-generic \\\n \tdistclean-hdr distclean-libtool distclean-tags\n@@ -1232,7 +1255,7 @@ installcheck-am:\n maintainer-clean: maintainer-clean-multi maintainer-clean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n \t-rm -rf $(top_srcdir)/autom4te.cache\n-\t-rm -rf src/$(DEPDIR) src/alpha/$(DEPDIR) src/arm/$(DEPDIR) src/frv/$(DEPDIR) src/ia64/$(DEPDIR) src/m32r/$(DEPDIR) src/m68k/$(DEPDIR) src/mips/$(DEPDIR) src/pa/$(DEPDIR) src/powerpc/$(DEPDIR) src/s390/$(DEPDIR) src/sh/$(DEPDIR) src/sh64/$(DEPDIR) src/sparc/$(DEPDIR) src/x86/$(DEPDIR)\n+\t-rm -rf src/$(DEPDIR) src/alpha/$(DEPDIR) src/arm/$(DEPDIR) src/cris/$(DEPDIR) src/frv/$(DEPDIR) src/ia64/$(DEPDIR) src/m32r/$(DEPDIR) src/m68k/$(DEPDIR) src/mips/$(DEPDIR) src/pa/$(DEPDIR) src/powerpc/$(DEPDIR) src/s390/$(DEPDIR) src/sh/$(DEPDIR) src/sh64/$(DEPDIR) src/sparc/$(DEPDIR) src/x86/$(DEPDIR)\n \t-rm -f Makefile\n maintainer-clean-am: distclean-am maintainer-clean-generic\n "}, {"sha": "2f03f2510fad733decfb05e64c04b34544ced4fb", "filename": "libffi/configure", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=614348bbec96f842514410873a6a462c6cbe8092", "patch": "@@ -310,7 +310,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CC ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CFLAGS CCAS CCASFLAGS LN_S RANLIB ac_ct_RANLIB LIBTOOL MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT CPP CPPFLAGS EGREP TESTSUBDIR_TRUE TESTSUBDIR_FALSE AM_RUNTESTFLAGS MIPS_IRIX_TRUE MIPS_IRIX_FALSE MIPS_LINUX_TRUE MIPS_LINUX_FALSE SPARC_TRUE SPARC_FALSE X86_TRUE X86_FALSE X86_WIN32_TRUE X86_WIN32_FALSE ALPHA_TRUE ALPHA_FALSE IA64_TRUE IA64_FALSE M32R_TRUE M32R_FALSE M68K_TRUE M68K_FALSE POWERPC_TRUE POWERPC_FALSE POWERPC_AIX_TRUE POWERPC_AIX_FALSE POWERPC_DARWIN_TRUE POWERPC_DARWIN_FALSE ARM_TRUE ARM_FALSE FRV_TRUE FRV_FALSE S390_TRUE S390_FALSE X86_64_TRUE X86_64_FALSE SH_TRUE SH_FALSE SH64_TRUE SH64_FALSE PA_TRUE PA_FALSE ALLOCA HAVE_LONG_DOUBLE TARGET TARGETDIR toolexecdir toolexeclibdir LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CC ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CFLAGS CCAS CCASFLAGS LN_S RANLIB ac_ct_RANLIB LIBTOOL MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT CPP CPPFLAGS EGREP TESTSUBDIR_TRUE TESTSUBDIR_FALSE AM_RUNTESTFLAGS MIPS_IRIX_TRUE MIPS_IRIX_FALSE MIPS_LINUX_TRUE MIPS_LINUX_FALSE SPARC_TRUE SPARC_FALSE X86_TRUE X86_FALSE X86_WIN32_TRUE X86_WIN32_FALSE ALPHA_TRUE ALPHA_FALSE IA64_TRUE IA64_FALSE M32R_TRUE M32R_FALSE M68K_TRUE M68K_FALSE POWERPC_TRUE POWERPC_FALSE POWERPC_AIX_TRUE POWERPC_AIX_FALSE POWERPC_DARWIN_TRUE POWERPC_DARWIN_FALSE ARM_TRUE ARM_FALSE LIBFFI_CRIS_TRUE LIBFFI_CRIS_FALSE FRV_TRUE FRV_FALSE S390_TRUE S390_FALSE X86_64_TRUE X86_64_FALSE SH_TRUE SH_FALSE SH64_TRUE SH64_FALSE PA_TRUE PA_FALSE ALLOCA HAVE_LONG_DOUBLE TARGET TARGETDIR toolexecdir toolexeclibdir LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -5403,6 +5403,7 @@ powerpc-*-aix*) TARGET=POWERPC_AIX; TARGETDIR=powerpc;;\n rs6000-*-aix*) TARGET=POWERPC_AIX; TARGETDIR=powerpc;;\n arm*-*-linux-*) TARGET=ARM; TARGETDIR=arm;;\n arm*-*-netbsdelf* | arm*-*-knetbsd*-gnu) TARGET=ARM; TARGETDIR=arm;;\n+cris-*-*) TARGET=LIBFFI_CRIS; TARGETDIR=cris;;\n s390-*-linux-*) TARGET=S390; TARGETDIR=s390;;\n s390x-*-linux-*) TARGET=S390; TARGETDIR=s390;;\n x86_64-*-linux* | x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu) TARGET=X86_64; TARGETDIR=x86;;\n@@ -5551,6 +5552,16 @@ fi\n \n \n \n+if test x$TARGET = xLIBFFI_CRIS; then\n+  LIBFFI_CRIS_TRUE=\n+  LIBFFI_CRIS_FALSE='#'\n+else\n+  LIBFFI_CRIS_TRUE='#'\n+  LIBFFI_CRIS_FALSE=\n+fi\n+\n+\n+\n if test x$TARGET = xFRV; then\n   FRV_TRUE=\n   FRV_FALSE='#'\n@@ -7083,6 +7094,13 @@ echo \"$as_me: error: conditional \\\"ARM\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${LIBFFI_CRIS_TRUE}\" && test -z \"${LIBFFI_CRIS_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"LIBFFI_CRIS\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"LIBFFI_CRIS\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${FRV_TRUE}\" && test -z \"${FRV_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"FRV\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -7770,6 +7788,8 @@ s,@POWERPC_DARWIN_TRUE@,$POWERPC_DARWIN_TRUE,;t t\n s,@POWERPC_DARWIN_FALSE@,$POWERPC_DARWIN_FALSE,;t t\n s,@ARM_TRUE@,$ARM_TRUE,;t t\n s,@ARM_FALSE@,$ARM_FALSE,;t t\n+s,@LIBFFI_CRIS_TRUE@,$LIBFFI_CRIS_TRUE,;t t\n+s,@LIBFFI_CRIS_FALSE@,$LIBFFI_CRIS_FALSE,;t t\n s,@FRV_TRUE@,$FRV_TRUE,;t t\n s,@FRV_FALSE@,$FRV_FALSE,;t t\n s,@S390_TRUE@,$S390_TRUE,;t t"}, {"sha": "7bcdaaaa7c29979d3eee0bc7b7fb1d8950091ba9", "filename": "libffi/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=614348bbec96f842514410873a6a462c6cbe8092", "patch": "@@ -68,6 +68,7 @@ powerpc-*-aix*) TARGET=POWERPC_AIX; TARGETDIR=powerpc;;\n rs6000-*-aix*) TARGET=POWERPC_AIX; TARGETDIR=powerpc;;\n arm*-*-linux-*) TARGET=ARM; TARGETDIR=arm;;\n arm*-*-netbsdelf* | arm*-*-knetbsd*-gnu) TARGET=ARM; TARGETDIR=arm;;\n+cris-*-*) TARGET=LIBFFI_CRIS; TARGETDIR=cris;;\n s390-*-linux-*) TARGET=S390; TARGETDIR=s390;;\n s390x-*-linux-*) TARGET=S390; TARGETDIR=s390;;\n x86_64-*-linux* | x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu) TARGET=X86_64; TARGETDIR=x86;;\n@@ -95,6 +96,7 @@ AM_CONDITIONAL(POWERPC, test x$TARGET = xPOWERPC)\n AM_CONDITIONAL(POWERPC_AIX, test x$TARGET = xPOWERPC_AIX)\n AM_CONDITIONAL(POWERPC_DARWIN, test x$TARGET = xPOWERPC_DARWIN)\n AM_CONDITIONAL(ARM, test x$TARGET = xARM)\n+AM_CONDITIONAL(LIBFFI_CRIS, test x$TARGET = xLIBFFI_CRIS)\n AM_CONDITIONAL(FRV, test x$TARGET = xFRV)\n AM_CONDITIONAL(S390, test x$TARGET = xS390)\n AM_CONDITIONAL(X86_64, test x$TARGET = xX86_64)"}, {"sha": "e02253b5af6c885d089d7366fe40317d5a4e34bb", "filename": "libffi/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.in?ref=614348bbec96f842514410873a6a462c6cbe8092", "patch": "@@ -104,6 +104,8 @@ INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+LIBFFI_CRIS_FALSE = @LIBFFI_CRIS_FALSE@\n+LIBFFI_CRIS_TRUE = @LIBFFI_CRIS_TRUE@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@"}, {"sha": "364c990f6f3feeeb583a2457e7223560ffa97c01", "filename": "libffi/src/cris/ffi.c", "status": "added", "additions": 381, "deletions": 0, "changes": 381, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Fsrc%2Fcris%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Fsrc%2Fcris%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fcris%2Fffi.c?ref=614348bbec96f842514410873a6a462c6cbe8092", "patch": "@@ -0,0 +1,381 @@\n+/* -----------------------------------------------------------------------\n+   ffi.c - Copyright (c) 1998 Cygnus Solutions\n+           Copyright (c) 2004 Simon Posnjak\n+\t   Copyright (c) 2005 Axis Communications AB\n+\n+   CRIS Foreign Function Interface\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL SIMON POSNJAK BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#include <ffi.h>\n+#include <ffi_common.h>\n+\n+#define STACK_ARG_SIZE(x) ALIGN(x, FFI_SIZEOF_ARG)\n+\n+static ffi_status\n+initialize_aggregate_packed_struct (ffi_type * arg)\n+{\n+  ffi_type **ptr;\n+\n+  FFI_ASSERT (arg != NULL);\n+\n+  FFI_ASSERT (arg->elements != NULL);\n+  FFI_ASSERT (arg->size == 0);\n+  FFI_ASSERT (arg->alignment == 0);\n+\n+  ptr = &(arg->elements[0]);\n+\n+  while ((*ptr) != NULL)\n+    {\n+      if (((*ptr)->size == 0)\n+\t  && (initialize_aggregate_packed_struct ((*ptr)) != FFI_OK))\n+\treturn FFI_BAD_TYPEDEF;\n+\n+      FFI_ASSERT (ffi_type_test ((*ptr)));\n+\n+      arg->size += (*ptr)->size;\n+\n+      arg->alignment = (arg->alignment > (*ptr)->alignment) ?\n+\targ->alignment : (*ptr)->alignment;\n+\n+      ptr++;\n+    }\n+\n+  if (arg->size == 0)\n+    return FFI_BAD_TYPEDEF;\n+  else\n+    return FFI_OK;\n+}\n+\n+int\n+ffi_prep_args (char *stack, extended_cif * ecif)\n+{\n+  unsigned int i;\n+  unsigned int struct_count = 0;\n+  void **p_argv;\n+  char *argp;\n+  ffi_type **p_arg;\n+\n+  argp = stack;\n+\n+  p_argv = ecif->avalue;\n+\n+  for (i = ecif->cif->nargs, p_arg = ecif->cif->arg_types;\n+       (i != 0); i--, p_arg++)\n+    {\n+      size_t z;\n+\n+      switch ((*p_arg)->type)\n+\t{\n+\tcase FFI_TYPE_STRUCT:\n+\t  {\n+\t    z = (*p_arg)->size;\n+\t    if (z <= 4)\n+\t      {\n+\t\tmemcpy (argp, *p_argv, z);\n+\t\tz = 4;\n+\t      }\n+\t    else if (z <= 8)\n+\t      {\n+\t\tmemcpy (argp, *p_argv, z);\n+\t\tz = 8;\n+\t      }\n+\t    else\n+\t      {\n+\t\tunsigned int uiLocOnStack;\n+\t\tz = sizeof (void *);\n+\t\tuiLocOnStack = 4 * ecif->cif->nargs + struct_count;\n+\t\tstruct_count = struct_count + (*p_arg)->size;\n+\t\t*(unsigned int *) argp =\n+\t\t  (unsigned int) (UINT32 *) (stack + uiLocOnStack);\n+\t\tmemcpy ((stack + uiLocOnStack), *p_argv, (*p_arg)->size);\n+\t      }\n+\t    break;\n+\t  }\n+\tdefault:\n+\t  z = (*p_arg)->size;\n+\t  if (z < sizeof (int))\n+\t    {\n+\t      switch ((*p_arg)->type)\n+\t\t{\n+\t\tcase FFI_TYPE_SINT8:\n+\t\t  *(signed int *) argp = (signed int) *(SINT8 *) (*p_argv);\n+\t\t  break;\n+\n+\t\tcase FFI_TYPE_UINT8:\n+\t\t  *(unsigned int *) argp =\n+\t\t    (unsigned int) *(UINT8 *) (*p_argv);\n+\t\t  break;\n+\n+\t\tcase FFI_TYPE_SINT16:\n+\t\t  *(signed int *) argp = (signed int) *(SINT16 *) (*p_argv);\n+\t\t  break;\n+\n+\t\tcase FFI_TYPE_UINT16:\n+\t\t  *(unsigned int *) argp =\n+\t\t    (unsigned int) *(UINT16 *) (*p_argv);\n+\t\t  break;\n+\n+\t\tdefault:\n+\t\t  FFI_ASSERT (0);\n+\t\t}\n+\t      z = sizeof (int);\n+\t    }\n+\t  else if (z == sizeof (int))\n+\t    *(unsigned int *) argp = (unsigned int) *(UINT32 *) (*p_argv);\n+\t  else\n+\t    memcpy (argp, *p_argv, z);\n+\t  break;\n+\t}\n+      p_argv++;\n+      argp += z;\n+    }\n+\n+  return (struct_count);\n+}\n+\n+ffi_status\n+ffi_prep_cif (ffi_cif * cif,\n+\t      ffi_abi abi, unsigned int nargs,\n+\t      ffi_type * rtype, ffi_type ** atypes)\n+{\n+  unsigned bytes = 0;\n+  unsigned int i;\n+  ffi_type **ptr;\n+\n+  FFI_ASSERT (cif != NULL);\n+  FFI_ASSERT ((abi > FFI_FIRST_ABI) && (abi <= FFI_DEFAULT_ABI));\n+\n+  cif->abi = abi;\n+  cif->arg_types = atypes;\n+  cif->nargs = nargs;\n+  cif->rtype = rtype;\n+\n+  cif->flags = 0;\n+\n+  if ((cif->rtype->size == 0)\n+      && (initialize_aggregate_packed_struct (cif->rtype) != FFI_OK))\n+    return FFI_BAD_TYPEDEF;\n+\n+  FFI_ASSERT_VALID_TYPE (cif->rtype);\n+\n+  for (ptr = cif->arg_types, i = cif->nargs; i > 0; i--, ptr++)\n+    {\n+      if (((*ptr)->size == 0)\n+\t  && (initialize_aggregate_packed_struct ((*ptr)) != FFI_OK))\n+\treturn FFI_BAD_TYPEDEF;\n+\n+      FFI_ASSERT_VALID_TYPE (*ptr);\n+\n+      if (((*ptr)->alignment - 1) & bytes)\n+\tbytes = ALIGN (bytes, (*ptr)->alignment);\n+      if ((*ptr)->type == FFI_TYPE_STRUCT)\n+\t{\n+\t  if ((*ptr)->size > 8)\n+\t    {\n+\t      bytes += (*ptr)->size;\n+\t      bytes += sizeof (void *);\n+\t    }\n+\t  else\n+\t    {\n+\t      if ((*ptr)->size > 4)\n+\t\tbytes += 8;\n+\t      else\n+\t\tbytes += 4;\n+\t    }\n+\t}\n+      else\n+\tbytes += STACK_ARG_SIZE ((*ptr)->size);\n+    }\n+\n+  cif->bytes = bytes;\n+\n+  return ffi_prep_cif_machdep (cif);\n+}\n+\n+ffi_status\n+ffi_prep_cif_machdep (ffi_cif * cif)\n+{\n+  switch (cif->rtype->type)\n+    {\n+    case FFI_TYPE_VOID:\n+    case FFI_TYPE_STRUCT:\n+    case FFI_TYPE_FLOAT:\n+    case FFI_TYPE_DOUBLE:\n+    case FFI_TYPE_SINT64:\n+    case FFI_TYPE_UINT64:\n+      cif->flags = (unsigned) cif->rtype->type;\n+      break;\n+\n+    default:\n+      cif->flags = FFI_TYPE_INT;\n+      break;\n+    }\n+\n+  return FFI_OK;\n+}\n+\n+extern void ffi_call_SYSV (int (*)(char *, extended_cif *),\n+\t\t\t   extended_cif *,\n+\t\t\t   unsigned, unsigned, unsigned *, void (*fn) ())\n+     __attribute__ ((__visibility__ (\"hidden\")));\n+\n+void\n+ffi_call (ffi_cif * cif, void (*fn) (), void *rvalue, void **avalue)\n+{\n+  extended_cif ecif;\n+\n+  ecif.cif = cif;\n+  ecif.avalue = avalue;\n+\n+  if ((rvalue == NULL) && (cif->rtype->type == FFI_TYPE_STRUCT))\n+    {\n+      ecif.rvalue = alloca (cif->rtype->size);\n+    }\n+  else\n+    ecif.rvalue = rvalue;\n+\n+  switch (cif->abi)\n+    {\n+    case FFI_SYSV:\n+      ffi_call_SYSV (ffi_prep_args, &ecif, cif->bytes,\n+\t\t     cif->flags, ecif.rvalue, fn);\n+      break;\n+    default:\n+      FFI_ASSERT (0);\n+      break;\n+    }\n+}\n+\n+/* Because the following variables are not exported outside libffi, we\n+   mark them hidden.  */\n+\n+/* Assembly code for the jump stub.  */\n+extern const char ffi_cris_trampoline_template[]\n+ __attribute__ ((__visibility__ (\"hidden\")));\n+\n+/* Offset into ffi_cris_trampoline_template of where to put the\n+   ffi_prep_closure_inner function.  */\n+extern const int ffi_cris_trampoline_fn_offset\n+ __attribute__ ((__visibility__ (\"hidden\")));\n+\n+/* Offset into ffi_cris_trampoline_template of where to put the\n+   closure data.  */\n+extern const int ffi_cris_trampoline_closure_offset\n+ __attribute__ ((__visibility__ (\"hidden\")));\n+\n+/* This function is sibling-called (jumped to) by the closure\n+   trampoline.  We get R10..R13 at PARAMS[0..3] and a copy of [SP] at\n+   PARAMS[4] to simplify handling of a straddling parameter.  A copy\n+   of R9 is at PARAMS[5] and SP at PARAMS[6].  These parameters are\n+   put at the appropriate place in CLOSURE which is then executed and\n+   the return value is passed back to the caller.  */\n+\n+static unsigned long long\n+ffi_prep_closure_inner (void **params, ffi_closure* closure)\n+{\n+  char *register_args = (char *) params;\n+  void *struct_ret = params[5];\n+  char *stack_args = params[6];\n+  char *ptr = register_args;\n+  ffi_cif *cif = closure->cif;\n+  ffi_type **arg_types = cif->arg_types;\n+\n+  /* Max room needed is number of arguments as 64-bit values.  */\n+  void **avalue = alloca (closure->cif->nargs * sizeof(void *));\n+  int i;\n+  int doing_regs;\n+  long long llret = 0;\n+\n+  /* Find the address of each argument.  */\n+  for (i = 0, doing_regs = 1; i < cif->nargs; i++)\n+    {\n+      /* Types up to and including 8 bytes go by-value.  */\n+      if (arg_types[i]->size <= 4)\n+\t{\n+\t  avalue[i] = ptr;\n+\t  ptr += 4;\n+\t}\n+      else if (arg_types[i]->size <= 8)\n+\t{\n+\t  avalue[i] = ptr;\n+\t  ptr += 8;\n+\t}\n+      else\n+\t{\n+\t  FFI_ASSERT (arg_types[i]->type == FFI_TYPE_STRUCT);\n+\n+\t  /* Passed by-reference, so copy the pointer.  */\n+\t  avalue[i] = *(void **) ptr;\n+\t  ptr += 4;\n+\t}\n+\n+      /* If we've handled more arguments than fit in registers, start\n+\t looking at the those passed on the stack.  Step over the\n+\t first one if we had a straddling parameter.  */\n+      if (doing_regs && ptr >= register_args + 4*4)\n+\t{\n+\t  ptr = stack_args + ((ptr > register_args + 4*4) ? 4 : 0);\n+\t  doing_regs = 0;\n+\t}\n+    }\n+\n+  /* Invoke the closure.  */\n+  (closure->fun) (cif,\n+\n+\t\t  cif->rtype->type == FFI_TYPE_STRUCT\n+\t\t  /* The caller allocated space for the return\n+\t\t     structure, and passed a pointer to this space in\n+\t\t     R9.  */\n+\t\t  ? struct_ret\n+\n+\t\t  /* We take advantage of being able to ignore that\n+\t\t     the high part isn't set if the return value is\n+\t\t     not in R10:R11, but in R10 only.  */\n+\t\t  : (void *) &llret,\n+\n+\t\t  avalue, closure->user_data);\n+\n+  return llret;\n+}\n+\n+/* API function: Prepare the trampoline.  */\n+\n+ffi_status\n+ffi_prep_closure (ffi_closure* closure,\n+\t\t  ffi_cif* cif,\n+\t\t  void (*fun)(ffi_cif *, void *, void **, void*),\n+\t\t  void *user_data)\n+{\n+  void *innerfn = ffi_prep_closure_inner;\n+  FFI_ASSERT (cif->abi == FFI_SYSV);\n+  closure->cif  = cif;\n+  closure->user_data = user_data;\n+  closure->fun  = fun;\n+  memcpy (closure->tramp, ffi_cris_trampoline_template,\n+\t  FFI_CRIS_TRAMPOLINE_CODE_PART_SIZE);\n+  memcpy (closure->tramp + ffi_cris_trampoline_fn_offset,\n+\t  &innerfn, sizeof (void *));\n+  memcpy (closure->tramp + ffi_cris_trampoline_closure_offset,\n+\t  &closure, sizeof (void *));\n+\n+  return FFI_OK;\n+}"}, {"sha": "3fb937c16dc0438407467f6bc1838189cc844050", "filename": "libffi/src/cris/ffitarget.h", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Fsrc%2Fcris%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Fsrc%2Fcris%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fcris%2Fffitarget.h?ref=614348bbec96f842514410873a6a462c6cbe8092", "patch": "@@ -0,0 +1,50 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n+   Target configuration macros for CRIS.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_TARGET_H\n+#define LIBFFI_TARGET_H\n+\n+#ifndef LIBFFI_ASM\n+typedef unsigned long          ffi_arg;\n+typedef signed long            ffi_sarg;\n+\n+typedef enum ffi_abi {\n+  FFI_FIRST_ABI = 0,\n+  FFI_SYSV,\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+  FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n+} ffi_abi;\n+#endif\n+\n+/* ---- Definitions for closures ----------------------------------------- */\n+\n+#define FFI_CLOSURES 1\n+#define FFI_CRIS_TRAMPOLINE_CODE_PART_SIZE 36\n+#define FFI_CRIS_TRAMPOLINE_DATA_PART_SIZE (7*4)\n+#define FFI_TRAMPOLINE_SIZE \\\n+ (FFI_CRIS_TRAMPOLINE_CODE_PART_SIZE + FFI_CRIS_TRAMPOLINE_DATA_PART_SIZE)\n+#define FFI_NATIVE_RAW_API 0\n+\n+#endif"}, {"sha": "79abaee4d959ce87cad13857a68ddb63fc3a95e7", "filename": "libffi/src/cris/sysv.S", "status": "added", "additions": 215, "deletions": 0, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Fsrc%2Fcris%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Fsrc%2Fcris%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fcris%2Fsysv.S?ref=614348bbec96f842514410873a6a462c6cbe8092", "patch": "@@ -0,0 +1,215 @@\n+/* -----------------------------------------------------------------------\n+   sysv.S - Copyright (c) 2004 Simon Posnjak\n+\t    Copyright (c) 2005 Axis Communications AB\n+\n+   CRIS Foreign Function Interface\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL SIMON POSNJAK BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#define LIBFFI_ASM\n+#include <ffi.h>\n+#define CONCAT(x,y) x ## y\n+#define XCONCAT(x,y) CONCAT (x, y)\n+#define L(x) XCONCAT (__USER_LABEL_PREFIX__, x)\n+\n+\t.text\n+\n+\t;; OK, when we get called we should have this (according to\n+\t;; AXIS ETRAX 100LX Programmer's Manual chapter 6.3).\n+\t;;\n+\t;; R10:\t ffi_prep_args (func. pointer)\n+\t;; R11:  &ecif\n+\t;; R12:  cif->bytes\n+\t;; R13:  fig->flags\n+\t;; sp+0: ecif.rvalue\n+\t;; sp+4: fn (function pointer to the function that we need to call)\n+\n+\t.globl  L(ffi_call_SYSV)\n+\t.type   L(ffi_call_SYSV),@function\n+\t.hidden\tL(ffi_call_SYSV)\n+\n+L(ffi_call_SYSV):\n+\t;; Save the regs to the stack.\n+\tpush $srp\n+\t;; Used for stack pointer saving.\n+\tpush $r6\n+\t;; Used for function address pointer.\n+\tpush $r7\n+\t;; Used for stack pointer saving.\n+\tpush $r8\n+\t;; We save fig->flags to stack we will need them after we\n+\t;; call The Function.\n+\tpush $r13\n+\n+\t;; Saving current stack pointer.\n+\tmove.d $sp,$r8\n+\tmove.d $sp,$r6\n+\n+\t;; Move address of ffi_prep_args to r13.\n+\tmove.d $r10,$r13\n+\n+\t;; Make room on the stack for the args of fn.\n+\tsub.d  $r12,$sp\n+\n+\t;; Function void ffi_prep_args(char *stack, extended_cif *ecif) parameters are:\n+\t;; \tr10 <-- stack pointer\n+\t;; \tr11 <-- &ecif (already there)\n+\tmove.d $sp,$r10\n+\n+\t;; Call the function.\n+\tjsr $r13\n+\n+\t;; Save the size of the structures which are passed on stack.\n+\tmove.d $r10,$r7\n+\n+\t;; Move first four args in to r10..r13.\n+\tmove.d [$sp+0],$r10\n+\tmove.d [$sp+4],$r11\n+\tmove.d [$sp+8],$r12\n+\tmove.d [$sp+12],$r13\n+\n+\t;; Adjust the stack and check if any parameters are given on stack.\n+\taddq 16,$sp\n+\tsub.d $r7,$r6\n+\tcmp.d $sp,$r6\n+\n+\tbpl go_on\n+\tnop\n+\n+go_on_no_params_on_stack:\n+\tmove.d $r6,$sp\n+\n+go_on:\n+\t;; Discover if we need to put rval address in to r9.\n+\tmove.d [$r8+0],$r7\n+\tcmpq FFI_TYPE_STRUCT,$r7\n+\tbne call_now\n+\tnop\n+\n+\t;; Move rval address to $r9.\n+\tmove.d [$r8+20],$r9\n+\n+call_now:\n+\t;; Move address of The Function in to r7.\n+\tmove.d [$r8+24],$r7\n+\n+\t;; Call The Function.\n+\tjsr $r7\n+\n+\t;; Reset stack.\n+\tmove.d $r8,$sp\n+\n+\t;; Load rval type (fig->flags) in to r13.\n+\tpop $r13\n+\n+\t;; Detect rval type.\n+\tcmpq FFI_TYPE_VOID,$r13\n+\tbeq epilogue\n+\n+\tcmpq FFI_TYPE_STRUCT,$r13\n+\tbeq epilogue\n+\n+\tcmpq FFI_TYPE_DOUBLE,$r13\n+\tbeq return_double_or_longlong\n+\n+\tcmpq FFI_TYPE_UINT64,$r13\n+\tbeq return_double_or_longlong\n+\n+\tcmpq FFI_TYPE_SINT64,$r13\n+\tbeq return_double_or_longlong\n+\tnop\n+\n+\t;; Just return the 32 bit value.\n+\tba return\n+\tnop\n+\n+return_double_or_longlong:\n+\t;; Load half of the rval to r10 and the other half to r11.\n+\tmove.d [$sp+16],$r13\n+\tmove.d $r10,[$r13]\n+\taddq 4,$r13\n+\tmove.d $r11,[$r13]\n+\tba epilogue\n+\tnop\n+\n+return:\n+\t;; Load the rval to r10.\n+\tmove.d [$sp+16],$r13\n+\tmove.d $r10,[$r13]\n+\n+epilogue:\n+\tpop $r8\n+\tpop $r7\n+\tpop $r6\n+\tJump [$sp+]\n+\n+\t.size   ffi_call_SYSV,.-ffi_call_SYSV\n+\n+/* Save R10..R13 into an array, somewhat like varargs.  Copy the next\n+   argument too, to simplify handling of any straddling parameter.\n+   Save R9 and SP after those.  Jump to function handling the rest.\n+   Since this is a template, copied and the main function filled in by\n+   the user.  */\n+\n+\t.globl\tL(ffi_cris_trampoline_template)\n+\t.type\tL(ffi_cris_trampoline_template),@function\n+\t.hidden\tL(ffi_cris_trampoline_template)\n+\n+L(ffi_cris_trampoline_template):\n+0:\n+\t/* The value we get for \"PC\" is right after the prefix instruction,\n+\t   two bytes from the beginning, i.e. 0b+2. */\n+\tmove.d $r10,[$pc+2f-(0b+2)]\n+\tmove.d $pc,$r10\n+1:\n+\taddq 2f-1b+4,$r10\n+\tmove.d $r11,[$r10+]\n+\tmove.d $r12,[$r10+]\n+\tmove.d $r13,[$r10+]\n+\tmove.d [$sp],$r11\n+\tmove.d $r11,[$r10+]\n+\tmove.d $r9,[$r10+]\n+\tmove.d $sp,[$r10+]\n+\tsubq FFI_CRIS_TRAMPOLINE_DATA_PART_SIZE,$r10\n+\tmove.d 0,$r11\n+3:\n+        jump 0\n+2:\n+\t.size\tffi_cris_trampoline_template,.-0b\n+\n+/* This macro create a constant usable as \"extern const int \\name\" in\n+   C from within libffi, when \\name has no prefix decoration.  */\n+\n+\t.macro const name,value\n+\t.globl\t\\name\n+\t.type\t\\name,@object\n+\t.hidden\t\\name\n+\\name:\n+\t.dword  \\value\n+\t.size\t\\name,4\n+\t.endm\n+\n+/* Constants for offsets within the trampoline.  We could do this with\n+   just symbols, avoiding memory contents and memory accesses, but the\n+   C usage code would look a bit stranger.  */\n+\n+\tconst L(ffi_cris_trampoline_fn_offset),2b-4-0b\n+\tconst L(ffi_cris_trampoline_closure_offset),3b-4-0b"}, {"sha": "0faa5ddeaa3893ea5fa2765fff9646279cea63ec", "filename": "libffi/src/prep_cif.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Fsrc%2Fprep_cif.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Fsrc%2Fprep_cif.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fprep_cif.c?ref=614348bbec96f842514410873a6a462c6cbe8092", "patch": "@@ -81,6 +81,11 @@ static ffi_status initialize_aggregate(/*@out@*/ ffi_type *arg)\n   /*@=usedef@*/\n }\n \n+#ifndef __CRIS__\n+/* The CRIS ABI specifies structure elements to have byte\n+   alignment only, so it completely overrides this functions,\n+   which assumes \"natural\" alignment and padding.  */\n+\n /* Perform machine independent ffi_cif preparation, then call\n    machine dependent routine. */\n \n@@ -158,3 +163,4 @@ ffi_status ffi_prep_cif(/*@out@*/ /*@partial@*/ ffi_cif *cif,\n   /* Perform machine dependent cif processing */\n   return ffi_prep_cif_machdep(cif);\n }\n+#endif /* not __CRIS__ */"}, {"sha": "2dc56ceffc9428aa39804beb50318f2f25ee98c2", "filename": "libffi/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614348bbec96f842514410873a6a462c6cbe8092/libffi%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2FMakefile.in?ref=614348bbec96f842514410873a6a462c6cbe8092", "patch": "@@ -90,6 +90,8 @@ INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+LIBFFI_CRIS_FALSE = @LIBFFI_CRIS_FALSE@\n+LIBFFI_CRIS_TRUE = @LIBFFI_CRIS_TRUE@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@"}]}