{"sha": "b311fd0f70cb3687dd0c2fd01beb358aba3fdb79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMxMWZkMGY3MGNiMzY4N2RkMGMyZmQwMWJlYjM1OGFiYTNmZGI3OQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-25T21:22:02Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-25T21:22:02Z"}, "message": "Eliminate BB_NOTE_LIST scaffolding\n\ngcc/\n\t* sel-sched-ir.h (struct sel_region_bb_info_def): Strengthen field\n\t\"note_list\" from rtx to rtx_insn *.\n\t(BB_NOTE_LIST): Replace this function and...\n\t(SET_BB_NOTE_LIST): ...this function with...\n\t(BB_NOTE_LIST): ...the former macro implementation.\n\n\t* sched-int.h (concat_note_lists): Strengthen param \"from_end\" and\n\tlocal \"from_start\" from rtx to rtx_insn *.  Strengthen param\n\t\"to_endp\" from rtx * to rtx_insn **.\n\n\t* haifa-sched.c (concat_note_lists): Likewise.\n\t* sel-sched-ir.c (init_bb): Eliminate SET_BB_NOTE_LIST in favor of\n\tBB_NOTE_LIST.\n\t(sel_restore_notes): Likewise.\n\t(move_bb_info): Likewise.\n\t(BB_NOTE_LIST): Delete this function.\n\t(SET_BB_NOTE_LIST): Delete this function.\n\t* sel-sched.c (create_block_for_bookkeeping): Eliminate\n\tSET_BB_NOTE_LIST in favor of BB_NOTE_LIST.\n\n/\n\t* rtx-classes-status.txt (TODO): Remove SET_BB_NOTE_LIST.\n\nFrom-SVN: r214482", "tree": {"sha": "45d21174cb693c4107abd15c5d5388f51572e027", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45d21174cb693c4107abd15c5d5388f51572e027"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce1ce33a037057b77a99ed0613f4369546dc82cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce1ce33a037057b77a99ed0613f4369546dc82cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce1ce33a037057b77a99ed0613f4369546dc82cd"}], "stats": {"total": 61, "additions": 37, "deletions": 24}, "files": [{"sha": "1cf31c41155a50632a51eef0a6a90f69408efa01", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=b311fd0f70cb3687dd0c2fd01beb358aba3fdb79", "patch": "@@ -1,3 +1,7 @@\n+2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* rtx-classes-status.txt (TODO): Remove SET_BB_NOTE_LIST.\n+\n 2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n \n \t* rtx-classes-status.txt (TODO): Remove SET_BB_FOOTER."}, {"sha": "0dc27a053a0464092cf89b1384eab44247d0dba0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b311fd0f70cb3687dd0c2fd01beb358aba3fdb79", "patch": "@@ -1,3 +1,25 @@\n+2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* sel-sched-ir.h (struct sel_region_bb_info_def): Strengthen field\n+\t\"note_list\" from rtx to rtx_insn *.\n+\t(BB_NOTE_LIST): Replace this function and...\n+\t(SET_BB_NOTE_LIST): ...this function with...\n+\t(BB_NOTE_LIST): ...the former macro implementation.\n+\n+\t* sched-int.h (concat_note_lists): Strengthen param \"from_end\" and\n+\tlocal \"from_start\" from rtx to rtx_insn *.  Strengthen param\n+\t\"to_endp\" from rtx * to rtx_insn **.\n+\n+\t* haifa-sched.c (concat_note_lists): Likewise.\n+\t* sel-sched-ir.c (init_bb): Eliminate SET_BB_NOTE_LIST in favor of\n+\tBB_NOTE_LIST.\n+\t(sel_restore_notes): Likewise.\n+\t(move_bb_info): Likewise.\n+\t(BB_NOTE_LIST): Delete this function.\n+\t(SET_BB_NOTE_LIST): Delete this function.\n+\t* sel-sched.c (create_block_for_bookkeeping): Eliminate\n+\tSET_BB_NOTE_LIST in favor of BB_NOTE_LIST.\n+\n 2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n \n \t* target.def (reorder): Strengthen param \"ready\" of this DEFHOOK"}, {"sha": "45938bd6e96127e25206ff97490925792b4c02d4", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=b311fd0f70cb3687dd0c2fd01beb358aba3fdb79", "patch": "@@ -4005,9 +4005,9 @@ schedule_insn (rtx_insn *insn)\n \n /* Add note list that ends on FROM_END to the end of TO_ENDP.  */\n void\n-concat_note_lists (rtx from_end, rtx *to_endp)\n+concat_note_lists (rtx_insn *from_end, rtx_insn **to_endp)\n {\n-  rtx from_start;\n+  rtx_insn *from_start;\n \n   /* It's easy when have nothing to concat.  */\n   if (from_end == NULL)"}, {"sha": "9f2a3e4ef50cc2dceee6da4169ab0818cee87f09", "filename": "gcc/sched-int.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/gcc%2Fsched-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/gcc%2Fsched-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-int.h?ref=b311fd0f70cb3687dd0c2fd01beb358aba3fdb79", "patch": "@@ -1370,7 +1370,7 @@ extern int sched_speculate_insn (rtx, ds_t, rtx *);\n extern void unlink_bb_notes (basic_block, basic_block);\n extern void add_block (basic_block, basic_block);\n extern rtx_note *bb_note (basic_block);\n-extern void concat_note_lists (rtx, rtx *);\n+extern void concat_note_lists (rtx_insn *, rtx_insn **);\n extern rtx_insn *sched_emit_insn (rtx);\n extern rtx get_ready_element (int);\n extern int number_in_ready (void);"}, {"sha": "c36658f15c49a3b6836ee22dbe3cf95f3d077eb1", "filename": "gcc/sel-sched-ir.c", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/gcc%2Fsel-sched-ir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/gcc%2Fsel-sched-ir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.c?ref=b311fd0f70cb3687dd0c2fd01beb358aba3fdb79", "patch": "@@ -4623,7 +4623,7 @@ static void\n init_bb (basic_block bb)\n {\n   remove_notes (bb_note (bb), BB_END (bb));\n-  SET_BB_NOTE_LIST (bb) = note_list;\n+  BB_NOTE_LIST (bb) = note_list;\n }\n \n void\n@@ -4658,7 +4658,7 @@ sel_restore_notes (void)\n \t{\n \t  note_list = BB_NOTE_LIST (first);\n \t  restore_other_notes (NULL, first);\n-\t  SET_BB_NOTE_LIST (first) = NULL_RTX;\n+\t  BB_NOTE_LIST (first) = NULL;\n \n \t  FOR_BB_INSNS (first, insn)\n \t    if (NONDEBUG_INSN_P (insn))\n@@ -5266,8 +5266,8 @@ move_bb_info (basic_block merge_bb, basic_block empty_bb)\n {\n   if (in_current_region_p (merge_bb))\n     concat_note_lists (BB_NOTE_LIST (empty_bb),\n-\t\t       &SET_BB_NOTE_LIST (merge_bb));\n-  SET_BB_NOTE_LIST (empty_bb) = NULL_RTX;\n+\t\t       &BB_NOTE_LIST (merge_bb));\n+  BB_NOTE_LIST (empty_bb) = NULL;\n \n }\n \n@@ -6456,17 +6456,6 @@ rtx& SET_VINSN_INSN_RTX (vinsn_t vi)\n   return vi->insn_rtx;\n }\n \n-rtx_insn *BB_NOTE_LIST (basic_block bb)\n-{\n-  rtx note_list = SEL_REGION_BB_INFO (bb)->note_list;\n-  return safe_as_a <rtx_insn *> (note_list);\n-}\n-\n-rtx& SET_BB_NOTE_LIST (basic_block bb)\n-{\n-  return SEL_REGION_BB_INFO (bb)->note_list;\n-}\n-\n rtx_insn *BND_TO (bnd_t bnd)\n {\n   return safe_as_a <rtx_insn *> (bnd->to);"}, {"sha": "2af7f03b9612d0a14e7dd68c7bcf38e8d124e202", "filename": "gcc/sel-sched-ir.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/gcc%2Fsel-sched-ir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/gcc%2Fsel-sched-ir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.h?ref=b311fd0f70cb3687dd0c2fd01beb358aba3fdb79", "patch": "@@ -898,7 +898,7 @@ struct sel_region_bb_info_def\n {\n   /* This insn stream is constructed in such a way that it should be\n      traversed by PREV_INSN field - (*not* NEXT_INSN).  */\n-  rtx note_list;\n+  rtx_insn *note_list;\n \n   /* Cached availability set at the beginning of a block.\n      See also AV_LEVEL () for conditions when this av_set can be used.  */\n@@ -921,8 +921,7 @@ extern vec<sel_region_bb_info_def> sel_region_bb_info;\n    A note_list is a list of various notes that was scattered across BB\n    before scheduling, and will be appended at the beginning of BB after\n    scheduling is finished.  */\n-extern rtx_insn *BB_NOTE_LIST (basic_block);\n-extern rtx& SET_BB_NOTE_LIST (basic_block);\n+#define BB_NOTE_LIST(BB) (SEL_REGION_BB_INFO (BB)->note_list)\n \n #define BB_AV_SET(BB) (SEL_REGION_BB_INFO (BB)->av_set)\n #define BB_AV_LEVEL(BB) (SEL_REGION_BB_INFO (BB)->av_level)"}, {"sha": "15c375ca34cbef44fe8d6ef00a4bf82b7a3bee25", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=b311fd0f70cb3687dd0c2fd01beb358aba3fdb79", "patch": "@@ -4586,8 +4586,8 @@ create_block_for_bookkeeping (edge e1, edge e2)\n \n   /* Move note_list from the upper bb.  */\n   gcc_assert (BB_NOTE_LIST (new_bb) == NULL_RTX);\n-  SET_BB_NOTE_LIST (new_bb) = BB_NOTE_LIST (bb);\n-  SET_BB_NOTE_LIST (bb) = NULL_RTX;\n+  BB_NOTE_LIST (new_bb) = BB_NOTE_LIST (bb);\n+  BB_NOTE_LIST (bb) = NULL;\n \n   gcc_assert (e2->dest == bb);\n "}, {"sha": "dd44bbffb3624445d1d788f8af283fdc2141eb55", "filename": "rtx-classes-status.txt", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/rtx-classes-status.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b311fd0f70cb3687dd0c2fd01beb358aba3fdb79/rtx-classes-status.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/rtx-classes-status.txt?ref=b311fd0f70cb3687dd0c2fd01beb358aba3fdb79", "patch": "@@ -16,7 +16,6 @@ TODO: \"Scaffolding\" to be removed\n =================================\n * DF_REF_INSN\n * SET_BB_HEAD, SET_BB_END, SET_BB_HEADER\n-* SET_BB_NOTE_LIST\n * SET_BND_TO\n * SET_DEP_PRO, SET_DEP_CON\n * SET_NEXT_INSN, SET_PREV_INSN"}]}