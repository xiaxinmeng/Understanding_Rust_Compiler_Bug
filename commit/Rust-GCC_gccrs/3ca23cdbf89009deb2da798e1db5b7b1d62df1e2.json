{"sha": "3ca23cdbf89009deb2da798e1db5b7b1d62df1e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NhMjNjZGJmODkwMDlkZWIyZGE3OThlMWRiNWI3YjFkNjJkZjFlMg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2016-11-21T23:24:13Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-11-21T23:24:13Z"}, "message": "re PR target/68538 (ICE in gen_reg_rtx, at emit-rtl.c:1027 when cross-compiling for cris-linux-gnu target)\n\n\tPR target/68538\n\t* config/cris/cris.md: Don't call copy_to_mode_reg unless\n\tcan_create_pseudo_p is true.\n\n        PR target/68538\n\t* gcc.c-torture/compile/pr68538.c: New test.\n\nFrom-SVN: r242682", "tree": {"sha": "2923d666e7f58a2e7174d0c947ce525fa254e71f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2923d666e7f58a2e7174d0c947ce525fa254e71f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ca23cdbf89009deb2da798e1db5b7b1d62df1e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ca23cdbf89009deb2da798e1db5b7b1d62df1e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ca23cdbf89009deb2da798e1db5b7b1d62df1e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ca23cdbf89009deb2da798e1db5b7b1d62df1e2/comments", "author": null, "committer": null, "parents": [{"sha": "d8fc036893ff96464d5dd5767a97348a9a4f327c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8fc036893ff96464d5dd5767a97348a9a4f327c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8fc036893ff96464d5dd5767a97348a9a4f327c"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "1f2f8ab4cf1044643431c3f6ad3b0da0e57ea944", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca23cdbf89009deb2da798e1db5b7b1d62df1e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca23cdbf89009deb2da798e1db5b7b1d62df1e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ca23cdbf89009deb2da798e1db5b7b1d62df1e2", "patch": "@@ -1,3 +1,9 @@\n+2016-11-21  Jeff Law  <law@redhat.com>\n+\n+\tPR target/68538\n+\t* config/cris/cris.md: Don't call copy_to_mode_reg unless\n+\tcan_create_pseudo_p is true.\n+\n 2016-11-21  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/68803"}, {"sha": "13279b538ba3f9c1bb6c89691d9f36eeca5973de", "filename": "gcc/config/cris/cris.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca23cdbf89009deb2da798e1db5b7b1d62df1e2/gcc%2Fconfig%2Fcris%2Fcris.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca23cdbf89009deb2da798e1db5b7b1d62df1e2/gcc%2Fconfig%2Fcris%2Fcris.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.md?ref=3ca23cdbf89009deb2da798e1db5b7b1d62df1e2", "patch": "@@ -499,7 +499,8 @@\n {\n   if (MEM_P (operands[0])\n       && operands[1] != const0_rtx\n-      && (!TARGET_V32 || (!REG_P (operands[1]) && can_create_pseudo_p ())))\n+      && can_create_pseudo_p ()\n+      && (!TARGET_V32 || !REG_P (operands[1])))\n     operands[1] = copy_to_mode_reg (DImode, operands[1]);\n \n   /* Some other ports (as of 2001-09-10 for example mcore and romp) also"}, {"sha": "e707841acce3ea81fd50d7e4373dfceb6530ca49", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca23cdbf89009deb2da798e1db5b7b1d62df1e2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca23cdbf89009deb2da798e1db5b7b1d62df1e2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ca23cdbf89009deb2da798e1db5b7b1d62df1e2", "patch": "@@ -1,3 +1,8 @@\n+2016-11-21  Jeff Law  <law@redhat.com>\n+\n+        PR target/68538\n+\t* gcc.c-torture/compile/pr68538.c: New test.\n+\n 2016-11-21  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/ppc-round2.c: Allow XSCVDPSXWS and XSCVDPUXWS"}, {"sha": "2822cdb6b5815c63fbfd51b32f38958fa72aa4ae", "filename": "gcc/testsuite/gcc.c-torture/compile/pr68538.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca23cdbf89009deb2da798e1db5b7b1d62df1e2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr68538.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca23cdbf89009deb2da798e1db5b7b1d62df1e2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr68538.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr68538.c?ref=3ca23cdbf89009deb2da798e1db5b7b1d62df1e2", "patch": "@@ -0,0 +1,52 @@\n+struct percpu_counter {\n+\tsigned long long count;\n+};\n+struct blkg_rwstat {\n+\tstruct percpu_counter cpu_cnt[4];\n+};\n+struct cfq_group {\n+\tstruct blkg_rwstat service_time;\n+};\n+struct cfq_queue {\n+\tstruct cfq_group *group;\n+};\n+struct request {\n+\tstruct cfq_queue *active_queue;\n+\tunsigned long long cmd_flags;\n+\tvoid *priv;\n+};\n+static void blkg_rwstat_add(struct blkg_rwstat *rwstat, int rw, unsigned long long val)\n+{\n+\tstruct percpu_counter *cnt;\n+\tif (rw & 1)\n+\t\tcnt = &rwstat->cpu_cnt[1];\n+\telse\n+\t\tcnt = &rwstat->cpu_cnt[0];\n+\tcnt->count += val;\n+\tif (rw & 2)\n+\t\tcnt = &rwstat->cpu_cnt[2];\n+\telse\n+\t\tcnt = &rwstat->cpu_cnt[3];\n+\tcnt->count += val;\n+}\n+extern unsigned long long rq_start_time_ns(void);\n+extern unsigned long long rq_io_start_time_ns(void);\n+extern int rq_is_sync(void);\n+extern void cfq_arm_slice_timer(void);\n+void cfq_completed_request(struct request *rq)\n+{\n+\tstruct cfq_queue *queue = rq->priv;\n+\tint sync = rq_is_sync();\n+\tstruct cfq_group *group = queue->group;\n+\tlong long start_time = rq_start_time_ns();\n+\tlong long io_start_time = rq_io_start_time_ns();\n+\tint rw = rq->cmd_flags;\n+\n+\tif (io_start_time < 1)\n+\t\tblkg_rwstat_add(&group->service_time, rw, 1 - io_start_time);\n+\tblkg_rwstat_add(0, rw, io_start_time - start_time);\n+\n+\tif (rq->active_queue == queue && sync)\n+\t\tcfq_arm_slice_timer();\n+}\n+"}]}