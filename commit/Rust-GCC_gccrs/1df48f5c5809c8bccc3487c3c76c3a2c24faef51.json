{"sha": "1df48f5c5809c8bccc3487c3c76c3a2c24faef51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRmNDhmNWM1ODA5YzhiY2NjMzQ4N2MzYzc2YzNhMmMyNGZhZWY1MQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2009-01-04T13:38:11Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2009-01-04T13:38:11Z"}, "message": "extend.texi (Function Attributes): Move @cindex after @item for 'artifical' and 'flatten'.\n\n\t* doc/extend.texi (Function Attributes): Move @cindex after @item\n\tfor 'artifical' and 'flatten'. Fix grammar for 'externally_visible'\n\tand put in alphabetical order. Fix 'target' name and put in order.\n\t* doc/invoke.texi (-Wstrict-null-sentinel, -fipa-matrix-reorg): Fix\n\ttypos.\n\nFrom-SVN: r143051", "tree": {"sha": "3da8ca4151fa472863ab1150ea257ec994c6fd63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3da8ca4151fa472863ab1150ea257ec994c6fd63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1df48f5c5809c8bccc3487c3c76c3a2c24faef51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1df48f5c5809c8bccc3487c3c76c3a2c24faef51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1df48f5c5809c8bccc3487c3c76c3a2c24faef51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1df48f5c5809c8bccc3487c3c76c3a2c24faef51/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23f2d0170d16eb9224ff19e52312ada7fe3e8e85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23f2d0170d16eb9224ff19e52312ada7fe3e8e85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23f2d0170d16eb9224ff19e52312ada7fe3e8e85"}], "stats": {"total": 376, "additions": 192, "deletions": 184}, "files": [{"sha": "3a822ed6e7e9979653ba6a9ff9655c89db35ea11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df48f5c5809c8bccc3487c3c76c3a2c24faef51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df48f5c5809c8bccc3487c3c76c3a2c24faef51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1df48f5c5809c8bccc3487c3c76c3a2c24faef51", "patch": "@@ -1,3 +1,11 @@\n+2009-01-04  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* doc/extend.texi (Function Attributes): Move @cindex after @item\n+\tfor 'artifical' and 'flatten'. Fix grammar for 'externally_visible'\n+\tand put in alphabetical order. Fix 'target' name and put in order.\n+\t* doc/invoke.texi (-Wstrict-null-sentinel, -fipa-matrix-reorg): Fix\n+\ttypos.\n+\n 2009-01-04  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/s390/s390.md (UNSPEC_MB): Rename from UNSPECV_MB."}, {"sha": "8b178f8dace2ebe89c9fcea81f6fd5981fa1e1d9", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 181, "deletions": 181, "changes": 362, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df48f5c5809c8bccc3487c3c76c3a2c24faef51/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df48f5c5809c8bccc3487c3c76c3a2c24faef51/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=1df48f5c5809c8bccc3487c3c76c3a2c24faef51", "patch": "@@ -1934,16 +1934,16 @@ In C++, this attribute does not depend on @code{extern} in any way,\n but it still requires the @code{inline} keyword to enable its special\n behavior.\n \n-@cindex @code{artificial} function attribute\n @item artificial\n+@cindex @code{artificial} function attribute\n This attribute is useful for small inline wrappers which if possible\n should appear during debugging as a unit, depending on the debug\n info format it will either mean marking the function as artificial\n or using the caller location for all instructions within the inlined\n body.\n \n-@cindex @code{flatten} function attribute\n @item flatten\n+@cindex @code{flatten} function attribute\n Generally, inlining into a function is limited.  For a function marked with\n this attribute, every call inside this function will be inlined, if possible.\n Whether the function itself is considered for inlining depends on its size and\n@@ -2159,6 +2159,12 @@ is an exception handler.  The compiler will generate function entry and\n exit sequences suitable for use in an exception handler when this\n attribute is present.\n \n+@item externally_visible\n+@cindex @code{externally_visible} attribute.\n+This attribute, attached to a global variable or function, nullifies\n+the effect of the @option{-fwhole-program} command-line option, so the\n+object remains visible outside the current compilation unit.\n+\n @item far\n @cindex functions which handle memory bank switching\n On 68HC11 and 68HC12 the @code{far} attribute causes the compiler to\n@@ -2664,179 +2670,6 @@ with the notable exceptions of @code{qsort} and @code{bsearch} that\n take function pointer arguments.  The @code{nothrow} attribute is not\n implemented in GCC versions earlier than 3.3.\n \n-@item option\n-@cindex @code{target} function attribute\n-The @code{target} attribute is used to specify that a function is to\n-be compiled with different target options than specified on the\n-command line.  This can be used for instance to have functions\n-compiled with a different ISA (instruction set architecture) than the\n-default.  You can also use the @samp{#pragma GCC target} pragma to set\n-more than one function to be compiled with specific target options.\n-@xref{Function Specific Option Pragmas}, for details about the\n-@samp{#pragma GCC target} pragma.\n-\n-For instance on a 386, you could compile one function with\n-@code{target(\"sse4.1,arch=core2\")} and another with\n-@code{target(\"sse4a,arch=amdfam10\")} that would be equivalent to\n-compiling the first function with @option{-msse4.1} and\n-@option{-march=core2} options, and the second function with\n-@option{-msse4a} and @option{-march=amdfam10} options.  It is up to the\n-user to make sure that a function is only invoked on a machine that\n-supports the particular ISA it was compiled for (for example by using\n-@code{cpuid} on 386 to determine what feature bits and architecture\n-family are used).\n-\n-@smallexample\n-int core2_func (void) __attribute__ ((__target__ (\"arch=core2\")));\n-int sse3_func (void) __attribute__ ((__target__ (\"sse3\")));\n-@end smallexample\n-\n-On the 386, the following options are allowed:\n-\n-@table @samp\n-@item abm\n-@itemx no-abm\n-@cindex @code{target(\"abm\")} attribute\n-Enable/disable the generation of the advanced bit instructions.\n-\n-@item aes\n-@itemx no-aes\n-@cindex @code{target(\"aes\")} attribute\n-Enable/disable the generation of the AES instructions.\n-\n-@item mmx\n-@itemx no-mmx\n-@cindex @code{target(\"mmx\")} attribute\n-Enable/disable the generation of the MMX instructions.\n-\n-@item pclmul\n-@itemx no-pclmul\n-@cindex @code{target(\"pclmul\")} attribute\n-Enable/disable the generation of the PCLMUL instructions.\n-\n-@item popcnt\n-@itemx no-popcnt\n-@cindex @code{target(\"popcnt\")} attribute\n-Enable/disable the generation of the POPCNT instruction.\n-\n-@item sse\n-@itemx no-sse\n-@cindex @code{target(\"sse\")} attribute\n-Enable/disable the generation of the SSE instructions.\n-\n-@item sse2\n-@itemx no-sse2\n-@cindex @code{target(\"sse2\")} attribute\n-Enable/disable the generation of the SSE2 instructions.\n-\n-@item sse3\n-@itemx no-sse3\n-@cindex @code{target(\"sse3\")} attribute\n-Enable/disable the generation of the SSE3 instructions.\n-\n-@item sse4\n-@itemx no-sse4\n-@cindex @code{target(\"sse4\")} attribute\n-Enable/disable the generation of the SSE4 instructions (both SSE4.1\n-and SSE4.2).\n-\n-@item sse4.1\n-@itemx no-sse4.1\n-@cindex @code{target(\"sse4.1\")} attribute\n-Enable/disable the generation of the sse4.1 instructions.\n-\n-@item sse4.2\n-@itemx no-sse4.2\n-@cindex @code{target(\"sse4.2\")} attribute\n-Enable/disable the generation of the sse4.2 instructions.\n-\n-@item sse4a\n-@itemx no-sse4a\n-@cindex @code{target(\"sse4a\")} attribute\n-Enable/disable the generation of the SSE4A instructions.\n-\n-@item sse5\n-@itemx no-sse5\n-@cindex @code{target(\"sse5\")} attribute\n-Enable/disable the generation of the SSE5 instructions.\n-\n-@item ssse3\n-@itemx no-ssse3\n-@cindex @code{target(\"ssse3\")} attribute\n-Enable/disable the generation of the SSSE3 instructions.\n-\n-@item cld\n-@itemx no-cld\n-@cindex @code{target(\"cld\")} attribute\n-Enable/disable the generation of the CLD before string moves.\n-\n-@item fancy-math-387\n-@itemx no-fancy-math-387\n-@cindex @code{target(\"fancy-math-387\")} attribute\n-Enable/disable the generation of the @code{sin}, @code{cos}, and\n-@code{sqrt} instructions on the 387 floating point unit.\n-\n-@item fused-madd\n-@itemx no-fused-madd\n-@cindex @code{target(\"fused-madd\")} attribute\n-Enable/disable the generation of the fused multiply/add instructions.\n-\n-@item ieee-fp\n-@itemx no-ieee-fp\n-@cindex @code{target(\"ieee-fp\")} attribute\n-Enable/disable the generation of floating point that depends on IEEE arithmetic.\n-\n-@item inline-all-stringops\n-@itemx no-inline-all-stringops\n-@cindex @code{target(\"inline-all-stringops\")} attribute\n-Enable/disable inlining of string operations.\n-\n-@item inline-stringops-dynamically\n-@itemx no-inline-stringops-dynamically\n-@cindex @code{target(\"inline-stringops-dynamically\")} attribute\n-Enable/disable the generation of the inline code to do small string\n-operations and calling the library routines for large operations.\n-\n-@item align-stringops\n-@itemx no-align-stringops\n-@cindex @code{target(\"align-stringops\")} attribute\n-Do/do not align destination of inlined string operations.\n-\n-@item recip\n-@itemx no-recip\n-@cindex @code{target(\"recip\")} attribute\n-Enable/disable the generation of RCPSS, RCPPS, RSQRTSS and RSQRTPS\n-instructions followed an additional Newton-Rhapson step instead of\n-doing a floating point division.\n-\n-@item arch=@var{ARCH}\n-@cindex @code{target(\"arch=@var{ARCH}\")} attribute\n-Specify the architecture to generate code for in compiling the function.\n-\n-@item tune=@var{TUNE}\n-@cindex @code{target(\"tune=@var{TUNE}\")} attribute\n-Specify the architecture to tune for in compiling the function.\n-\n-@item fpmath=@var{FPMATH}\n-@cindex @code{target(\"fpmath=@var{FPMATH}\")} attribute\n-Specify which floating point unit to use.  The\n-@code{target(\"fpmath=sse,387\")} option must be specified as\n-@code{target(\"fpmath=sse+387\")} because the comma would separate\n-different options.\n-@end table\n-\n-On the 386, you can use either multiple strings to specify multiple\n-options, or you can separate the option with a comma (@code{,}).\n-\n-On the 386, the inliner will not inline a function that has different\n-target options than the caller, unless the callee has a subset of the\n-target options of the caller.  For example a function declared with\n-@code{target(\"sse5\")} can inline a function with\n-@code{target(\"sse2\")}, since @code{-msse5} implies @code{-msse2}.\n-\n-The @code{target} attribute is not implemented in GCC versions earlier\n-than 4.4, and at present only the 386 uses it.\n-\n @item optimize\n @cindex @code{optimize} function attribute\n The @code{optimize} attribute is used to specify that a function is to\n@@ -3052,6 +2885,179 @@ On the Intel 386, the @code{stdcall} attribute causes the compiler to\n assume that the called function will pop off the stack space used to\n pass arguments, unless it takes a variable number of arguments.\n \n+@item target\n+@cindex @code{target} function attribute\n+The @code{target} attribute is used to specify that a function is to\n+be compiled with different target options than specified on the\n+command line.  This can be used for instance to have functions\n+compiled with a different ISA (instruction set architecture) than the\n+default.  You can also use the @samp{#pragma GCC target} pragma to set\n+more than one function to be compiled with specific target options.\n+@xref{Function Specific Option Pragmas}, for details about the\n+@samp{#pragma GCC target} pragma.\n+\n+For instance on a 386, you could compile one function with\n+@code{target(\"sse4.1,arch=core2\")} and another with\n+@code{target(\"sse4a,arch=amdfam10\")} that would be equivalent to\n+compiling the first function with @option{-msse4.1} and\n+@option{-march=core2} options, and the second function with\n+@option{-msse4a} and @option{-march=amdfam10} options.  It is up to the\n+user to make sure that a function is only invoked on a machine that\n+supports the particular ISA it was compiled for (for example by using\n+@code{cpuid} on 386 to determine what feature bits and architecture\n+family are used).\n+\n+@smallexample\n+int core2_func (void) __attribute__ ((__target__ (\"arch=core2\")));\n+int sse3_func (void) __attribute__ ((__target__ (\"sse3\")));\n+@end smallexample\n+\n+On the 386, the following options are allowed:\n+\n+@table @samp\n+@item abm\n+@itemx no-abm\n+@cindex @code{target(\"abm\")} attribute\n+Enable/disable the generation of the advanced bit instructions.\n+\n+@item aes\n+@itemx no-aes\n+@cindex @code{target(\"aes\")} attribute\n+Enable/disable the generation of the AES instructions.\n+\n+@item mmx\n+@itemx no-mmx\n+@cindex @code{target(\"mmx\")} attribute\n+Enable/disable the generation of the MMX instructions.\n+\n+@item pclmul\n+@itemx no-pclmul\n+@cindex @code{target(\"pclmul\")} attribute\n+Enable/disable the generation of the PCLMUL instructions.\n+\n+@item popcnt\n+@itemx no-popcnt\n+@cindex @code{target(\"popcnt\")} attribute\n+Enable/disable the generation of the POPCNT instruction.\n+\n+@item sse\n+@itemx no-sse\n+@cindex @code{target(\"sse\")} attribute\n+Enable/disable the generation of the SSE instructions.\n+\n+@item sse2\n+@itemx no-sse2\n+@cindex @code{target(\"sse2\")} attribute\n+Enable/disable the generation of the SSE2 instructions.\n+\n+@item sse3\n+@itemx no-sse3\n+@cindex @code{target(\"sse3\")} attribute\n+Enable/disable the generation of the SSE3 instructions.\n+\n+@item sse4\n+@itemx no-sse4\n+@cindex @code{target(\"sse4\")} attribute\n+Enable/disable the generation of the SSE4 instructions (both SSE4.1\n+and SSE4.2).\n+\n+@item sse4.1\n+@itemx no-sse4.1\n+@cindex @code{target(\"sse4.1\")} attribute\n+Enable/disable the generation of the sse4.1 instructions.\n+\n+@item sse4.2\n+@itemx no-sse4.2\n+@cindex @code{target(\"sse4.2\")} attribute\n+Enable/disable the generation of the sse4.2 instructions.\n+\n+@item sse4a\n+@itemx no-sse4a\n+@cindex @code{target(\"sse4a\")} attribute\n+Enable/disable the generation of the SSE4A instructions.\n+\n+@item sse5\n+@itemx no-sse5\n+@cindex @code{target(\"sse5\")} attribute\n+Enable/disable the generation of the SSE5 instructions.\n+\n+@item ssse3\n+@itemx no-ssse3\n+@cindex @code{target(\"ssse3\")} attribute\n+Enable/disable the generation of the SSSE3 instructions.\n+\n+@item cld\n+@itemx no-cld\n+@cindex @code{target(\"cld\")} attribute\n+Enable/disable the generation of the CLD before string moves.\n+\n+@item fancy-math-387\n+@itemx no-fancy-math-387\n+@cindex @code{target(\"fancy-math-387\")} attribute\n+Enable/disable the generation of the @code{sin}, @code{cos}, and\n+@code{sqrt} instructions on the 387 floating point unit.\n+\n+@item fused-madd\n+@itemx no-fused-madd\n+@cindex @code{target(\"fused-madd\")} attribute\n+Enable/disable the generation of the fused multiply/add instructions.\n+\n+@item ieee-fp\n+@itemx no-ieee-fp\n+@cindex @code{target(\"ieee-fp\")} attribute\n+Enable/disable the generation of floating point that depends on IEEE arithmetic.\n+\n+@item inline-all-stringops\n+@itemx no-inline-all-stringops\n+@cindex @code{target(\"inline-all-stringops\")} attribute\n+Enable/disable inlining of string operations.\n+\n+@item inline-stringops-dynamically\n+@itemx no-inline-stringops-dynamically\n+@cindex @code{target(\"inline-stringops-dynamically\")} attribute\n+Enable/disable the generation of the inline code to do small string\n+operations and calling the library routines for large operations.\n+\n+@item align-stringops\n+@itemx no-align-stringops\n+@cindex @code{target(\"align-stringops\")} attribute\n+Do/do not align destination of inlined string operations.\n+\n+@item recip\n+@itemx no-recip\n+@cindex @code{target(\"recip\")} attribute\n+Enable/disable the generation of RCPSS, RCPPS, RSQRTSS and RSQRTPS\n+instructions followed an additional Newton-Rhapson step instead of\n+doing a floating point division.\n+\n+@item arch=@var{ARCH}\n+@cindex @code{target(\"arch=@var{ARCH}\")} attribute\n+Specify the architecture to generate code for in compiling the function.\n+\n+@item tune=@var{TUNE}\n+@cindex @code{target(\"tune=@var{TUNE}\")} attribute\n+Specify the architecture to tune for in compiling the function.\n+\n+@item fpmath=@var{FPMATH}\n+@cindex @code{target(\"fpmath=@var{FPMATH}\")} attribute\n+Specify which floating point unit to use.  The\n+@code{target(\"fpmath=sse,387\")} option must be specified as\n+@code{target(\"fpmath=sse+387\")} because the comma would separate\n+different options.\n+@end table\n+\n+On the 386, you can use either multiple strings to specify multiple\n+options, or you can separate the option with a comma (@code{,}).\n+\n+On the 386, the inliner will not inline a function that has different\n+target options than the caller, unless the callee has a subset of the\n+target options of the caller.  For example a function declared with\n+@code{target(\"sse5\")} can inline a function with\n+@code{target(\"sse2\")}, since @code{-msse5} implies @code{-msse2}.\n+\n+The @code{target} attribute is not implemented in GCC versions earlier\n+than 4.4, and at present only the 386 uses it.\n+\n @item tiny_data\n @cindex tiny data section on the H8/300H and H8S\n Use this attribute on the H8/300H and H8S to indicate that the specified\n@@ -3251,12 +3257,6 @@ performing a reloadable link on them.\n At present, a declaration to which @code{weakref} is attached can\n only be @code{static}.\n \n-@item externally_visible\n-@cindex @code{externally_visible} attribute.\n-This attribute, attached to a global variable or function nullify\n-effect of @option{-fwhole-program} command line option, so the object\n-remain visible outside the current compilation unit\n-\n @end table\n \n You can specify multiple attributes in a declaration by separating them"}, {"sha": "12a3cabaf318267777b8c44db4b93d8ccbdb64d7", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df48f5c5809c8bccc3487c3c76c3a2c24faef51/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df48f5c5809c8bccc3487c3c76c3a2c24faef51/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1df48f5c5809c8bccc3487c3c76c3a2c24faef51", "patch": "@@ -2152,7 +2152,7 @@ to filter out those warnings.\n Warn also about the use of an uncasted @code{NULL} as sentinel.  When\n compiling only with GCC this is a valid sentinel, as @code{NULL} is defined\n to @code{__null}.  Although it is a null pointer constant not a null pointer,\n-it is guaranteed to of the same size as a pointer.  But this use is\n+it is guaranteed to be of the same size as a pointer.  But this use is\n not portable across different compilers.\n \n @item -Wno-non-template-friend @r{(C++ and Objective-C++ only)}\n@@ -6003,8 +6003,8 @@ This reduces the level of indirection needed for accessing the elements\n of the matrix. The second optimization is matrix transposing that\n attemps to change the order of the matrix's dimensions in order to \n improve cache locality.\n-Both optimizations need fwhole-program flag. \n-Transposing is enabled only if profiling information is avaliable.\n+Both optimizations need the @option{-fwhole-program} flag. \n+Transposing is enabled only if profiling information is available.\n \n \n @item -ftree-sink"}]}