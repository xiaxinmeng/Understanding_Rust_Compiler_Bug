{"sha": "8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY3ZTEyZjBkYWMyMGVkODVmZGI1NjMwNzBkMzk2N2MxMmY3YWUzZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-12-20T11:26:24Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-12-20T11:26:24Z"}, "message": "1.cc: New.\n\n2004-12-20  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/27_io/basic_istream/peek/wchar_t/1.cc: New.\n\t* testsuite/27_io/basic_istream/peek/wchar_t/12296.cc: Likewise.\n\t* testsuite/27_io/basic_istream/peek/wchar_t/6414.cc: Likewise.\n\t* testsuite/27_io/basic_istream/putback/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/read/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/read/wchar_t/2.cc: Likewise.\n\t* testsuite/27_io/basic_istream/read/wchar_t/3.cc: Likewise.\n\t* testsuite/27_io/basic_istream/readsome/wchar_t/6746-1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/readsome/wchar_t/6746-2.cc: Likewise.\n\t* testsuite/27_io/basic_istream/readsome/wchar_t/8258.cc: Likewise.\n\t* testsuite/27_io/basic_istream/seekg/wchar_t/2.cc: Likewise.\n\t* testsuite/27_io/basic_istream/seekg/wchar_t/8348-1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/seekg/wchar_t/8348-2.cc: Likewise.\n\t* testsuite/27_io/basic_istream/seekg/wchar_t/\n\texceptions_badbit_throw.cc: Likewise.\n\t* testsuite/27_io/basic_istream/seekg/wchar_t/fstream.cc: Likewise.\n\t* testsuite/27_io/basic_istream/seekg/wchar_t/sstream.cc: Likewise.\n\t* testsuite/27_io/basic_istream/sentry/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/sentry/wchar_t/12297.cc: Likewise.\n\t* testsuite/27_io/basic_istream/sentry/wchar_t/2.cc: Likewise.\n\t* testsuite/27_io/basic_istream/sentry/wchar_t/3.cc: Likewise.\n\t* testsuite/27_io/basic_istream/tellg/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/tellg/wchar_t/2.cc: Likewise.\n\t* testsuite/27_io/basic_istream/tellg/wchar_t/8348.cc: Likewise.\n\t* testsuite/27_io/basic_istream/tellg/wchar_t/\n\texceptions_badbit_throw.cc: Likewise.\n\t* testsuite/27_io/basic_istream/tellg/wchar_t/fstream.cc: Likewise.\n\t* testsuite/27_io/basic_istream/tellg/wchar_t/sstream.cc: Likewise.\n\t* testsuite/27_io/basic_istream/ws/wchar_t/1.cc: Likewise.\n\n\t* testsuite/data/wistream_extractor_other-1.tst: New.\n\t* testsuite/data/wistream_extractor_other-1.txt: Likewise.\n\t* testsuite/data/wistream_extractor_other-2.tst: Likewise.\n\t* testsuite/data/wistream_seeks-1.tst: Likewise.\n\t* testsuite/data/wistream_seeks-1.txt: Likewise.\n\t* testsuite/data/wistream_unformatted-1.tst: Likewise.\n\t* testsuite/data/wistream_unformatted-1.txt: Likewise.\n\n\t* testsuite/27_io/basic_istream/extractors_other/wchar_t/2.cc:\n\tUse wistream_extractor_other-1.txt.\n\n\t* testsuite/27_io/basic_istream/peek/char/6414.cc: Minor clean-up.\n\t* testsuite/27_io/basic_istream/putback/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/read/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/read/char/2.cc: Likewise.\n\nFrom-SVN: r92414", "tree": {"sha": "ca1a451798f52c067dab556903df2ac70078a7a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca1a451798f52c067dab556903df2ac70078a7a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/comments", "author": null, "committer": null, "parents": [{"sha": "a16da3ae5032c663a270394b6eb477171d11e573", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a16da3ae5032c663a270394b6eb477171d11e573", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a16da3ae5032c663a270394b6eb477171d11e573"}], "stats": {"total": 5094, "additions": 5079, "deletions": 15}, "files": [{"sha": "fecd6252923d60ba6d27fc8b1fa3bc5d4a74cb4f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -1,3 +1,51 @@\n+2004-12-20  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/27_io/basic_istream/peek/wchar_t/1.cc: New.\n+\t* testsuite/27_io/basic_istream/peek/wchar_t/12296.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/peek/wchar_t/6414.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/putback/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/read/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/read/wchar_t/2.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/read/wchar_t/3.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/readsome/wchar_t/6746-1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/readsome/wchar_t/6746-2.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/readsome/wchar_t/8258.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/seekg/wchar_t/2.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/seekg/wchar_t/8348-1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/seekg/wchar_t/8348-2.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/seekg/wchar_t/\n+\texceptions_badbit_throw.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/seekg/wchar_t/fstream.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/seekg/wchar_t/sstream.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/sentry/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/sentry/wchar_t/12297.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/sentry/wchar_t/2.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/sentry/wchar_t/3.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/tellg/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/tellg/wchar_t/2.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/tellg/wchar_t/8348.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/tellg/wchar_t/\n+\texceptions_badbit_throw.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/tellg/wchar_t/fstream.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/tellg/wchar_t/sstream.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/ws/wchar_t/1.cc: Likewise.\n+\n+\t* testsuite/data/wistream_extractor_other-1.tst: New.\n+\t* testsuite/data/wistream_extractor_other-1.txt: Likewise.\n+\t* testsuite/data/wistream_extractor_other-2.tst: Likewise.\n+\t* testsuite/data/wistream_seeks-1.tst: Likewise.\n+\t* testsuite/data/wistream_seeks-1.txt: Likewise.\n+\t* testsuite/data/wistream_unformatted-1.tst: Likewise.\n+\t* testsuite/data/wistream_unformatted-1.txt: Likewise.\n+\n+\t* testsuite/27_io/basic_istream/extractors_other/wchar_t/2.cc:\n+\tUse wistream_extractor_other-1.txt.\n+\n+\t* testsuite/27_io/basic_istream/peek/char/6414.cc: Minor clean-up.\n+\t* testsuite/27_io/basic_istream/putback/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/read/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/read/char/2.cc: Likewise.\n+\n 2004-12-19  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/27_io/basic_istream/exceptions/wchar_t/9561.cc: New."}, {"sha": "f942b26952d4b949e3b14caa7560a5d03be9c843", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_other/wchar_t/2.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fwchar_t%2F2.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -28,7 +28,7 @@\n void test02() \n {\n   bool test __attribute__((unused)) = true;\n-  const char name_01[] = \"istream_extractor_other-1.txt\"; //read \n+  const char name_01[] = \"wistream_extractor_other-1.txt\"; //read \n   const char name_02[] = \"wistream_extractor_other-2.txt\"; //write\n \n   std::wfilebuf fbin, fbout;"}, {"sha": "4f1d3714f63cbd1bb1afd56a45edde53d070e795", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/peek/char/6414.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fchar%2F6414.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fchar%2F6414.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fchar%2F6414.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -1,6 +1,6 @@\n // 2000-06-29 bkoz\n \n-// Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,7 +31,7 @@\n void test04(void)\n {\n   bool test __attribute__((unused)) = true;\n-  std::istream::pos_type pos01, pos02, pos03, pos04, pos05, pos06;\n+  std::istream::pos_type pos01, pos02;\n   const char str_lit01[] = \"istream_seeks-1.txt\";\n   std::ifstream if01(str_lit01, std::ios_base::in | std::ios_base::out);\n  "}, {"sha": "93251c18ac6632c14c40bf35fd392525daa98a81", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/peek/wchar_t/1.cc", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F1.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,92 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  typedef std::wios::traits_type traits_type;\n+\n+  bool test __attribute__((unused)) = true;\n+  const std::wstring str_01;\n+  const std::wstring str_02(L\"soul eyes: john coltrane quartet\");\n+  std::wstring strtmp;\n+\n+  std::wstringbuf isbuf_03(str_02, std::ios_base::in);\n+  std::wstringbuf isbuf_04(str_02, std::ios_base::in);\n+\n+  std::wistream is_00(NULL);\n+  std::wistream is_03(&isbuf_03);\n+  std::wistream is_04(&isbuf_04);\n+  std::ios_base::iostate state1, state2, statefail, stateeof;\n+  statefail = std::ios_base::failbit;\n+  stateeof = std::ios_base::eofbit;\n+\n+  wchar_t carray[60] = L\"\";\n+\n+  // istream& ignore(streamsize n = 1, int_type delim = traits::eof())\n+  is_04.read(carray, 9);\n+  VERIFY( is_04.peek() == L':' );\n+\n+  state1 = is_04.rdstate();\n+  is_04.ignore();\n+  VERIFY( is_04.gcount() == 1 );\n+  state2 = is_04.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( is_04.peek() == L' ' );\n+\n+  state1 = is_04.rdstate();\n+  is_04.ignore(0);\n+  VERIFY( is_04.gcount() == 0 );\n+  state2 = is_04.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( is_04.peek() == L' ' );\n+\n+  state1 = is_04.rdstate();\n+  is_04.ignore(5, traits_type::to_int_type(' '));\n+  VERIFY( is_04.gcount() == 1 );\n+  state2 = is_04.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( is_04.peek() == L'j' );\n+\n+  // int_type peek()\n+  state1 = is_04.rdstate();\n+  VERIFY( is_04.peek() == L'j' );\n+  VERIFY( is_04.gcount() == 0 );\n+  state2 = is_04.rdstate();\n+  VERIFY( state1 == state2 );\n+\n+  is_04.ignore(30);\n+  state1 = is_04.rdstate();\n+  VERIFY( is_04.peek() == traits_type::eof() );\n+  VERIFY( is_04.gcount() == 0 );\n+  state2 = is_04.rdstate();\n+  VERIFY( state1 != state2 );\n+}\n+\n+int \n+main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "43f4b174d86e187d22b9895dd72bd64977a04893", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/peek/wchar_t/12296.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F12296.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F12296.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F12296.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,41 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/12296\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  wistringstream stream;\n+  VERIFY( stream.rdstate() == ios_base::goodbit );\n+  wistringstream::int_type c = stream.peek();\n+  VERIFY( c == istringstream::traits_type::eof() );\n+  VERIFY( stream.rdstate() == ios_base::eofbit );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "938453a7c7a2575bc7c221853ae8203542981e1f", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/peek/wchar_t/6414.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F6414.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F6414.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F6414.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,48 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// NB: ostream has a particular \"seeks\" category. Adopt this for istreams too.\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n+\n+#include <istream>\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+// fstreams\n+void test04(void)\n+{\n+  bool test __attribute__((unused)) = true;\n+  std::wistream::pos_type pos01, pos02;\n+  const char str_lit01[] = \"wistream_seeks-1.txt\";\n+  std::wifstream if01(str_lit01, std::ios_base::in | std::ios_base::out);\n+ \n+  // libstdc++/6414\n+  if01.seekg(0, std::ios_base::beg);\n+  pos01 = if01.tellg();\n+  if01.peek();\n+  pos02 = if01.tellg();\n+  VERIFY( pos02 == pos01 );\n+}\n+\n+int main()\n+{\n+  test04();\n+  return 0;\n+}"}, {"sha": "b2c9efb8037f90003ab98187a3e0feec4dec440e", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/putback/char/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fputback%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fputback%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fputback%2Fchar%2F1.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -27,8 +27,6 @@\n void\n test01()\n {\n-  typedef std::ios::traits_type traits_type;\n-\n   bool test __attribute__((unused)) = true;\n   const std::string str_01;\n   const std::string str_02(\"soul eyes: john coltrane quartet\");\n@@ -41,9 +39,7 @@ test01()\n   std::istream is_00(&isbuf_05);\n   std::istream is_03(&isbuf_03);\n   std::istream is_04(&isbuf_04);\n-  std::ios_base::iostate state1, state2, statefail, stateeof;\n-  statefail = std::ios_base::failbit;\n-  stateeof = std::ios_base::eofbit;\n+  std::ios_base::iostate state1, state2;\n \n   // istream& putback(char c)\n   is_04.ignore(30);"}, {"sha": "6000b97680ad795f9716192469625718d269f243", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/putback/wchar_t/1.cc", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fputback%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fputback%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fputback%2Fwchar_t%2F1.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,74 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  const std::wstring str_01;\n+  const std::wstring str_02(L\"soul eyes: john coltrane quartet\");\n+  std::wstring strtmp;\n+\n+  std::wstringbuf isbuf_03(str_02, std::ios_base::in);\n+  std::wstringbuf isbuf_04(str_02, std::ios_base::in);\n+  std::wstringbuf isbuf_05(str_02, std::ios_base::in);\n+\n+  std::wistream is_00(&isbuf_05);\n+  std::wistream is_03(&isbuf_03);\n+  std::wistream is_04(&isbuf_04);\n+  std::ios_base::iostate state1, state2;\n+\n+  // istream& putback(char_type c)\n+  is_04.ignore(30);\n+  is_04.clear();\n+  state1 = is_04.rdstate();\n+  is_04.putback(L't');\n+  VERIFY( is_04.gcount() == 0 );  // DR 60\n+  state2 = is_04.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( is_04.peek() == L't' );\n+\n+  // istream& unget()\n+  is_04.clear();\n+  state1 = is_04.rdstate();\n+  is_04.unget();\n+  VERIFY( is_04.gcount() == 0 );  // DR 60\n+  state2 = is_04.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( is_04.peek() == L'r' );\n+  \n+  // int sync()\n+  is_00.ignore(10);\n+  int count1 = is_00.gcount();\n+  is_00.sync();\n+  int count2 = is_00.gcount();\n+  VERIFY (count1 == count2 );     // DR 60\n+}\n+\n+int \n+main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "81081b4d31ec86114ea5422037a5921150ea7b0b", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/read/char/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fchar%2F1.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -1,6 +1,6 @@\n // 1999-08-11 bkoz\n \n-// Copyright (C) 1999, 2000, 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,12 +28,8 @@\n void\n test01()\n {\n-  typedef std::ios::traits_type traits_type;\n-\n   bool test __attribute__((unused)) = true;\n-  const std::string str_01;\n   const std::string str_02(\"soul eyes: john coltrane quartet\");\n-  std::string strtmp;\n \n   std::stringbuf isbuf_03(str_02, std::ios_base::in);\n   std::stringbuf isbuf_04(str_02, std::ios_base::in);"}, {"sha": "5214e030a999aa2d438c79b48ab5141924f6ac85", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/read/char/2.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fchar%2F2.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -1,6 +1,6 @@\n // 1999-08-11 bkoz\n \n-// Copyright (C) 1999, 2000, 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,7 +32,6 @@ test04()\n   bool test __attribute__((unused)) = true;\n \n   const std::string str_00(\"Red_Garland_Qunitet-Soul_Junction\");\n-  std::string strtmp;\n   char c_array[str_00.size() + 4];\n \n   std::stringbuf isbuf_00(str_00, std::ios_base::in);"}, {"sha": "dd24afac8aa28150e75299c710966ef69066cf9a", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/read/wchar_t/1.cc", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fwchar_t%2F1.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,70 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <cwchar> // for wcsncmp,...\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  const std::wstring str_02(L\"soul eyes: john coltrane quartet\");\n+\n+  std::wstringbuf isbuf_03(str_02, std::ios_base::in);\n+  std::wstringbuf isbuf_04(str_02, std::ios_base::in);\n+\n+  std::wistream is_00(NULL);\n+  std::wistream is_03(&isbuf_03);\n+  std::wistream is_04(&isbuf_04);\n+  std::ios_base::iostate state1, state2, statefail, stateeof;\n+  statefail = std::ios_base::failbit;\n+  stateeof = std::ios_base::eofbit;\n+\n+  // istream& read(char_type* s, streamsize n)\n+  wchar_t carray[60] = L\"\";\n+  state1 = is_04.rdstate();\n+  is_04.read(carray, 0);\n+  state2 = is_04.rdstate();\n+  VERIFY( state1 == state2 );\n+\n+  state1 = is_04.rdstate();\n+  is_04.read(carray, 9);\n+  state2 = is_04.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( !std::wcsncmp(carray, L\"soul eyes\", 9) );\n+  VERIFY( is_04.peek() == L':' );\n+\n+  state1 = is_03.rdstate();\n+  is_03.read(carray, 60);\n+  state2 = is_03.rdstate();\n+  VERIFY( state1 != state2 );\n+  VERIFY( static_cast<bool>(state2 & stateeof) ); \n+  VERIFY( static_cast<bool>(state2 & statefail) ); \n+  VERIFY( !std::wcsncmp(carray, L\"soul eyes: john coltrane quartet\", 35) );\n+}\n+\n+int \n+main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "977979d49697ec762c36446fe95e6c39011944ed", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/read/wchar_t/2.cc", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fwchar_t%2F2.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,56 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// Jim Parsons <parsons at clearway dot com>\n+// http://gcc.gnu.org/ml/libstdc++/2000-q1/msg00177.html\n+void\n+test04()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const std::wstring str_00(L\"Red_Garland_Qunitet-Soul_Junction\");\n+  wchar_t c_array[str_00.size() + 4];\n+\n+  std::wstringbuf isbuf_00(str_00, std::ios_base::in);\n+  std::wistream is_00(&isbuf_00);\n+  std::ios_base::iostate state1, statefail, stateeof;\n+  statefail = std::ios_base::failbit;\n+  stateeof = std::ios_base::eofbit;\n+\n+  state1 = stateeof | statefail;\n+  VERIFY( is_00.gcount() == 0 );\n+  is_00.read(c_array, str_00.size() + 1);\n+  VERIFY( is_00.gcount() == static_cast<std::streamsize>(str_00.size()) );\n+  VERIFY( is_00.rdstate() == state1 );\n+\n+  is_00.read(c_array, str_00.size());\n+  VERIFY( is_00.rdstate() == state1 );\n+}\n+ \n+int \n+main()\n+{\n+  test04();\n+  return 0;\n+}"}, {"sha": "6910f3633454e05e46af0de0364c6254150d2a38", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/read/wchar_t/3.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fwchar_t%2F3.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,45 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// Theodore Papadopoulo \n+void \n+test09()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  wistringstream iss(L\"Juana Briones\");\n+  wchar_t tab[13];\n+  iss.read(tab, 13);\n+  if (!iss)\n+    test = false;\n+  VERIFY( test );\n+}\n+ \n+int \n+main()\n+{\n+  test09();\n+  return 0;\n+}"}, {"sha": "35fe6d032a7ff6c0793b00c99fcf844084d2d1d7", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/readsome/wchar_t/6746-1.cc", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Freadsome%2Fwchar_t%2F6746-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Freadsome%2Fwchar_t%2F6746-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Freadsome%2Fwchar_t%2F6746-1.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,54 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/6746   \n+void test12()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  streamsize sum = 0;\n+  wistringstream iss(L\"shamma shamma\");\n+      \n+  // test01\n+  size_t i = iss.rdbuf()->in_avail();\n+  VERIFY( i != 0 );\n+    \n+  // test02\n+  streamsize extracted;\n+  do\n+    {\n+      wchar_t buf[1024];\n+      extracted = iss.readsome(buf, sizeof(buf) / sizeof(wchar_t));\n+      sum += extracted;\n+    }\n+  while (iss.good() && extracted);\n+  VERIFY( sum != 0 );\n+}\n+\n+int \n+main()\n+{\n+  test12();\n+  return 0;\n+}"}, {"sha": "30e2a3a131c1bf200e928035835e9f81f67e513f", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/readsome/wchar_t/6746-2.cc", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Freadsome%2Fwchar_t%2F6746-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Freadsome%2Fwchar_t%2F6746-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Freadsome%2Fwchar_t%2F6746-2.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,60 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// The ARM simulator does not provide support for \"fstat\", which\n+// causes \"in_avail\" to return an incorrect value.\n+// { dg-do run { xfail arm*-*-elf arm*-*-eabi } }\n+\n+// 27.6.1.3 unformatted input functions\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n+\n+#include <istream>\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/6746   \n+void test13()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  streamsize sum = 0;\n+  wifstream ifs(\"wistream_unformatted-1.tst\");\n+      \n+  // test01\n+  size_t i = ifs.rdbuf()->in_avail();\n+  VERIFY( i != 0 );\n+    \n+  // test02\n+  streamsize extracted;\n+  do\n+    {\n+      wchar_t buf[1024];\n+      extracted = ifs.readsome(buf, sizeof(buf) / sizeof(wchar_t));\n+      sum += extracted;\n+    }\n+  while (ifs.good() && extracted);\n+  VERIFY( sum != 0 );  \n+}\n+ \n+int \n+main()\n+{\n+  test13();\n+  return 0;\n+}"}, {"sha": "5b9a2bb774de69715b16eec9ed08208750bfe74d", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/readsome/wchar_t/8258.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Freadsome%2Fwchar_t%2F8258.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Freadsome%2Fwchar_t%2F8258.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Freadsome%2Fwchar_t%2F8258.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,47 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <istream>\n+#include <streambuf>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/8258\n+class mybuf : public std::basic_streambuf<wchar_t> \n+{ };\n+\n+void test11()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+  wchar_t arr[10];\n+  mybuf sbuf;\n+  basic_istream<wchar_t, char_traits<wchar_t> > istr(&sbuf);\n+  \n+  VERIFY( istr.rdstate() == ios_base::goodbit );\n+  VERIFY( istr.readsome(arr, 10) == 0 );\n+  VERIFY( istr.rdstate() == ios_base::goodbit );\n+}\n+ \n+int \n+main()\n+{\n+  test11();\n+  return 0;\n+}"}, {"sha": "b40145cbb0adeb2e9d45d3aad8831e0cdcd12e57", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/seekg/wchar_t/2.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F2.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,47 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// DR 60 -- seekg does not effect calls to gcount\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  wistringstream ist(L\"the lamb lies down on broadway\");\n+  wios::pos_type pos = ist.tellg();\n+  ist.ignore(4);\n+  int count1 = ist.gcount();\n+  ist.seekg(pos);\n+  int count2 = ist.gcount();\n+  VERIFY( count1 == count2 );\n+  ist.seekg(wios::off_type(pos), wios::beg);\n+  count2 = ist.gcount();\n+  VERIFY( count1 == count2 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "98e269719dc3a7b6c0132717802a7563ca07b627", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/seekg/wchar_t/8348-1.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F8348-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F8348-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F8348-1.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,50 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// NB: ostream has a particular \"seeks\" category. Adopt this for istreams too.\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/8348\n+void test06(void)\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  wstring num1(L\"555\");\n+\n+  // seekg\n+  {\n+    wistringstream iss(num1);\n+    wistream::pos_type pos1 = iss.tellg();\n+    int asNum = 0;\n+    iss >> asNum;\n+    VERIFY( test = iss.eof() );\n+    VERIFY( test = !iss.fail() );\n+    iss.seekg(pos1);\n+    VERIFY( test = !iss.fail() );\n+  }\n+}\n+\n+int main()\n+{\n+  test06();\n+  return 0;\n+}"}, {"sha": "4d15c1e05fb06ce311b82ed0970acf886be9527f", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/seekg/wchar_t/8348-2.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F8348-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F8348-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F8348-2.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,50 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// NB: ostream has a particular \"seeks\" category. Adopt this for istreams too.\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/8348\n+void test06(void)\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  wstring num1(L\"555\");\n+\n+  // seekg\n+  {\n+    wistringstream iss(num1);\n+    wistream::pos_type pos1 = iss.tellg();\n+    int asNum = 0;\n+    iss >> asNum;\n+    VERIFY( test = iss.eof() );\n+    VERIFY( test = !iss.fail() );\n+    iss.seekg(0, ios_base::beg);\n+    VERIFY( test = !iss.fail() );\n+  }\n+}\n+\n+int main()\n+{\n+  test06();\n+  return 0;\n+}"}, {"sha": "5aa5c819b57a18fb076dd57c2651fd7799584339", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/seekg/wchar_t/exceptions_badbit_throw.cc", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2Fexceptions_badbit_throw.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2Fexceptions_badbit_throw.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2Fexceptions_badbit_throw.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,96 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <istream>\n+#include <streambuf>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+#include <testsuite_io.h>\n+\n+using namespace std;\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  __gnu_test::fail_wstreambuf bib;\n+  wistream stream(&bib);\n+  stream.exceptions(ios_base::badbit);\n+\n+  wistream::pos_type pos;\n+\n+  try\n+    {\n+      stream.seekg(pos);\n+      VERIFY( false );\n+    }\n+  catch (const __gnu_test::positioning_error&) \n+    {\n+      // stream should set badbit and rethrow facet_error.\n+      VERIFY( stream.bad() );\n+      VERIFY( (stream.rdstate() & ios_base::failbit) == 0 );\n+      VERIFY( !stream.eof() );\n+    }\n+  catch (...) \n+    {\n+      VERIFY(false);\n+    }\n+}\n+\n+void test02()\n+{\n+  bool test __attribute__((unused)) = true;\n+  __gnu_test::fail_wstreambuf bib;\n+  wistream stream(&bib);\n+  stream.exceptions(ios_base::badbit);\n+\n+  wistream::off_type off(5);\n+\n+  try\n+    {\n+      stream.seekg(off, ios_base::cur);\n+      VERIFY( false );\n+    }\n+  catch (const __gnu_test::positioning_error&) \n+    {\n+      // stream should set badbit and rethrow facet_error.\n+      VERIFY( stream.bad() );\n+      VERIFY( (stream.rdstate() & ios_base::failbit) == 0 );\n+      VERIFY( !stream.eof() );\n+    }\n+  catch (...) \n+    {\n+      VERIFY(false);\n+    }\n+}\n+\n+// libstdc++/9546\n+int main()\n+{\n+  test01();\n+  test02();\n+  return 0;\n+}"}, {"sha": "71ad9468b25f9e73eb8d52486d5054e41a6e5406", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/seekg/wchar_t/fstream.cc", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2Ffstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2Ffstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2Ffstream.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,125 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// NB: ostream has a particular \"seeks\" category. Adopt this for istreams too.\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n+\n+#include <istream>\n+#include <sstream>\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+// fstreams\n+void test04(void)\n+{\n+  typedef std::wistream::off_type off_type;\n+\n+  bool test __attribute__((unused)) = true;\n+  std::wistream::pos_type pos01, pos02, pos03, pos04, pos05, pos06;\n+  std::ios_base::iostate state01, state02;\n+  const char str_lit01[] = \"wistream_seeks-1.txt\";\n+  const char str_lit02[] = \"wistream_seeks-2.txt\";\n+  std::wifstream if01(str_lit01, std::ios_base::in | std::ios_base::out);\n+  std::wifstream if02(str_lit01, std::ios_base::in);\n+  std::wifstream if03(str_lit02, std::ios_base::out | std::ios_base::trunc); \n+  VERIFY( if01.good() );\n+  VERIFY( if02.good() );\n+  VERIFY( if03.good() );\n+\n+  std::wistream is01(if01.rdbuf());\n+  std::wistream is02(if02.rdbuf());\n+  std::wistream is03(if03.rdbuf());\n+\n+  pos01 = is01.tellg();\n+  pos02 = is01.tellg();\n+  pos03 = is02.tellg();\n+  pos04 = is02.tellg();\n+  pos05 = is03.tellg();\n+  pos06 = is03.tellg();\n+\n+  // istream& seekg(pos_type)\n+  // istream& seekg(off_type, ios_base::seekdir)\n+\n+  // cur \n+  // NB: see library issues list 136. It's the v3 interp that seekg\n+  // only sets the input buffer, or else istreams with buffers that\n+  // have _M_mode == ios_base::out will fail to have consistency\n+  // between seekg and tellg.\n+  state01 = is01.rdstate();\n+  is01.seekg(10, std::ios_base::cur);\n+  state02 = is01.rdstate();\n+  pos01 = is01.tellg(); \n+  VERIFY( pos01 == pos02 + off_type(10) ); \n+  VERIFY( state01 == state02 );\n+  pos02 = is01.tellg(); \n+  VERIFY( pos02 == pos01 ); \n+\n+  state01 = is02.rdstate();\n+  is02.seekg(10, std::ios_base::cur);\n+  state02 = is02.rdstate();\n+  pos03 = is02.tellg(); \n+  VERIFY( pos03 == pos04 + off_type(10) ); \n+  VERIFY( state01 == state02 );\n+  pos04 = is02.tellg(); \n+  VERIFY( pos03 == pos04 ); \n+\n+  state01 = is03.rdstate();\n+  is03.seekg(10, std::ios_base::cur);\n+  state02 = is03.rdstate();\n+  pos05 = is03.tellg(); \n+  VERIFY( pos05 == pos06 + off_type(10) ); \n+  VERIFY( state01 == state02 );\n+  pos06 = is03.tellg(); \n+  VERIFY( pos05 == pos06 ); \n+\n+  // beg\n+  state01 = is01.rdstate();\n+  is01.seekg(20, std::ios_base::beg);\n+  state02 = is01.rdstate();\n+  pos01 = is01.tellg(); \n+  VERIFY( pos01 == pos02 + off_type(10) ); \n+  VERIFY( state01 == state02 );\n+  pos02 = is01.tellg(); \n+  VERIFY( pos02 == pos01 ); \n+\n+  state01 = is02.rdstate();\n+  is02.seekg(20, std::ios_base::beg);\n+  state02 = is02.rdstate();\n+  pos03 = is02.tellg(); \n+  VERIFY( pos03 == pos04 + off_type(10) ); \n+  VERIFY( state01 == state02 );\n+  pos04 = is02.tellg(); \n+  VERIFY( pos03 == pos04 ); \n+\n+  state01 = is03.rdstate();\n+  is03.seekg(20, std::ios_base::beg);\n+  state02 = is03.rdstate();\n+  pos05 = is03.tellg(); \n+  VERIFY( pos05 == pos06 + off_type(10) );\n+  VERIFY( state01 == state02 );\n+  pos06 = is03.tellg(); \n+  VERIFY( pos05 == pos06 );\n+}\n+\n+int main()\n+{\n+  test04();\n+  return 0;\n+}"}, {"sha": "65f7a591c56d48e4dd0aef88f1ee2210b93fc4f6", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/seekg/wchar_t/sstream.cc", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2Fsstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2Fsstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2Fsstream.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,135 @@\n+// 2000-06-29 bkoz\n+\n+// Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// NB: ostream has a particular \"seeks\" category. Adopt this for istreams too.\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n+\n+#include <istream>\n+#include <sstream>\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+// stringstreams\n+void test05(void)\n+{\n+  typedef std::istream::off_type off_type;\n+\n+  bool test __attribute__((unused)) = true;\n+  std::wistream::pos_type pos01, pos02, pos03, pos04, pos05, pos06;\n+  std::ios_base::iostate state01, state02;\n+  const char str_lit01[] = \"wistream_seeks-1.tst\";\n+  std::wifstream if01(str_lit01);\n+  std::wifstream if02(str_lit01);\n+  std::wifstream if03(str_lit01);\n+  VERIFY( if01.good() );\n+  VERIFY( if02.good() );\n+  VERIFY( if03.good() );\n+\n+  std::wstringbuf strbuf01(std::ios_base::in | std::ios_base::out);\n+  if01 >> &strbuf01; \n+  // initialize stringbufs that are ios_base::out\n+  std::wstringbuf strbuf03(strbuf01.str(), std::ios_base::out);\n+  // initialize stringbufs that are ios_base::in\n+  std::wstringbuf strbuf02(strbuf01.str(), std::ios_base::in);\n+\n+  std::wistream is01(&strbuf01);\n+  std::wistream is02(&strbuf02);\n+  std::wistream is03(&strbuf03);\n+\n+  // pos_type tellg()\n+  // in | out\n+  pos01 = is01.tellg();\n+  pos02 = is01.tellg();\n+  pos03 = is02.tellg();\n+  pos04 = is02.tellg();\n+  pos05 = is03.tellg();\n+  pos06 = is03.tellg();\n+\n+  // istream& seekg(pos_type)\n+  // istream& seekg(off_type, ios_base::seekdir)\n+\n+  // cur \n+  // NB: see library issues list 136. It's the v-3 interp that seekg\n+  // only sets the input buffer, or else istreams with buffers that\n+  // have _M_mode == ios_base::out will fail to have consistency\n+  // between seekg and tellg.\n+  state01 = is01.rdstate();\n+  is01.seekg(10, std::ios_base::cur);\n+  state02 = is01.rdstate();\n+  pos01 = is01.tellg(); \n+  VERIFY( pos01 == pos02 + off_type(10) ); \n+  VERIFY( state01 == state02 );\n+  pos02 = is01.tellg(); \n+  VERIFY( pos02 == pos01 ); \n+\n+  state01 = is02.rdstate();\n+  is02.seekg(10, std::ios_base::cur);\n+  state02 = is02.rdstate();\n+  pos03 = is02.tellg(); \n+  VERIFY( pos03 == pos04 + off_type(10) ); \n+  VERIFY( state01 == state02 );\n+  pos04 = is02.tellg(); \n+  VERIFY( pos03 == pos04 ); \n+\n+  state01 = is03.rdstate();\n+  is03.seekg(10, std::ios_base::cur);\n+  state02 = is03.rdstate();\n+  pos05 = is03.tellg(); \n+  VERIFY( pos05 == pos06 ); // as only out buffer \n+  VERIFY( state01 != state02 );\n+  pos06 = is03.tellg(); \n+  VERIFY( pos05 == pos06 ); \n+\n+  // beg\n+  state01 = is01.rdstate();\n+  is01.seekg(20, std::ios_base::beg);\n+  state02 = is01.rdstate();\n+  pos01 = is01.tellg(); \n+  VERIFY( pos01 == pos02 + off_type(10) ); \n+  VERIFY( state01 == state02 );\n+  pos02 = is01.tellg(); \n+  VERIFY( pos02 == pos01 ); \n+\n+  state01 = is02.rdstate();\n+  is02.seekg(20, std::ios_base::beg);\n+  state02 = is02.rdstate();\n+  pos03 = is02.tellg(); \n+  VERIFY( pos03 == pos04 + off_type(10) ); \n+  VERIFY( state01 == state02 );\n+  pos04 = is02.tellg(); \n+  VERIFY( pos03 == pos04 ); \n+\n+  state01 = is03.rdstate();\n+  is03.seekg(20, std::ios_base::beg);\n+  state02 = is03.rdstate();\n+  pos05 = is03.tellg(); \n+  VERIFY( pos05 == pos06 ); // as only out buffer \n+  VERIFY( state01 == state02 );\n+  pos06 = is03.tellg(); \n+  VERIFY( pos05 == pos06 ); \n+}\n+\n+int main()\n+{\n+  test05();\n+  return 0;\n+}"}, {"sha": "b228257c950d9adecd6c6e6059a5aa9d474f6c97", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/sentry/wchar_t/1.cc", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F1.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,64 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// 27.6.1.1.2 class basic_istream::sentry\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  const wchar_t* lit01 = L\"stereolab on the bolsinga tip\";\n+  const std::wstring str01(lit01);\n+\n+  std::wstringbuf strbuf01;\n+  std::wstringbuf strbuf02(str01);\n+  std::wistream istr01(&strbuf01);\n+  std::wistream istr02(&strbuf02);\n+  \n+  // test negatives\n+  std::wistream::sentry sentry01(istr01);\t\n+  VERIFY( bool(sentry01) == false ); \n+\n+  std::wistream::sentry sentry02(istr01, true);\n+  VERIFY( bool(sentry02) == false ); \n+\n+  // positive tests\n+  std::wistream::sentry sentry03(istr02);\t\n+  VERIFY( bool(sentry03) == true ); \n+\n+  std::wistream::sentry sentry04(istr02, true);\n+  VERIFY( bool(sentry04) == true ); \n+}\n+\n+int main() \n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "c870f2b25418600916a72375945b3bb31e3f8286", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/sentry/wchar_t/12297.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F12297.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F12297.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F12297.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,50 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// 27.6.1.1.2 class basic_istream::sentry\n+\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+int main()\n+{\n+  using namespace std;\n+  wistringstream stream;\n+  stream.exceptions(ios_base::eofbit);\n+  \n+  try\n+    {\n+      wistream::sentry sentry(stream, false);\n+      VERIFY( false );\n+    }\n+  catch (ios_base::failure&)\n+    {\n+      VERIFY( stream.rdstate() == (ios_base::eofbit | ios_base::failbit) );\n+    }\n+  \n+  return 0;\n+}"}, {"sha": "1c0ca9a5b43f6b496ba0db32907cbd15735b309a", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/sentry/wchar_t/2.cc", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F2.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,58 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// 27.6.1.1.2 class basic_istream::sentry\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/944\n+void \n+test02()\n+{\n+  using namespace std;\n+  wistringstream in(L\"80.21 56.89 12.3\");\n+  bool test __attribute__((unused)) = true;\n+  int i = 0;\n+  double x;\n+\n+  // ios_base::eof == 2\n+  while (in >> x)\n+    {\n+      ++i;\n+      if (i > 3) \n+\tbreak;\n+    }\n+  VERIFY( i == 3 );\n+}    \n+\n+int main() \n+{\n+  test02();\n+  return 0;\n+}"}, {"sha": "6844aa75793e37f57f8305d674faba5cd38110ec", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/sentry/wchar_t/3.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F3.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,51 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// 27.6.1.1.2 class basic_istream::sentry\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/9562\n+void\n+test03()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::wstringbuf strbuf01;\n+  std::wistream strm1(&strbuf01);\n+  const std::wistream::sentry sentry1(strm1);\n+\n+  VERIFY( bool(sentry1) == false );\n+}\n+\n+int main() \n+{\n+  test03();\n+  return 0;\n+}"}, {"sha": "faa4424bda90303c9c04fa3dc87f634d02914915", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/wchar_t/1.cc", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F1.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,65 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// NB: ostream has a particular \"seeks\" category. Adopt this for istreams too.\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n+\n+#include <istream>\n+#include <sstream>\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  typedef ios::off_type off_type;\n+  typedef ios::pos_type pos_type;\n+\n+  bool test __attribute__((unused)) = true;\n+  const char str_lit01[] = \"wistream_seeks-1.tst\";\n+\n+  // in\n+  wistringstream ist1;\n+  pos_type p3 = ist1.tellg();\n+\n+  wifstream ifs1;\n+  pos_type p4 = ifs1.tellg();\n+\n+  // N.B. We implement the resolution of DR 453 and\n+  // istringstream::tellg() doesn't fail.\n+  VERIFY( p3 == pos_type(off_type(0)) );\n+  VERIFY( p4 == pos_type(off_type(-1)) );\n+\n+  // in\n+  // test ctors leave things in the same positions...\n+  wistringstream ist2(L\"bob_marley:kaya\");\n+  p3 = ist2.tellg();\n+\n+  wifstream ifs2(str_lit01);\n+  p4 = ifs2.tellg();\n+\n+  VERIFY( p3 == p4 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "2306b81db5d64e6c960383494d7caeba0a61c742", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/wchar_t/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F2.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,43 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// DR 60 -- tellg does not effect calls to gcount\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  wistringstream ist(L\"three sides live\");\n+  ist.ignore(4);\n+  int count1 = ist.gcount();\n+  ist.tellg();\n+  int count2 = ist.gcount();\n+  VERIFY( count1 == count2 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "8dd6370fd6c39963ab7f9d0b722e1eab48d695ac", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/wchar_t/8348.cc", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F8348.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F8348.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F8348.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,74 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// NB: ostream has a particular \"seeks\" category. Adopt this for istreams too.\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/8348\n+void test06(void)\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  wstring num1(L\"555\");\n+\n+  // tellg\n+  {\n+    wistringstream iss(num1);\n+    wistream::pos_type pos1 = iss.tellg();\n+    int asNum = 0;\n+    iss >> asNum;\n+    VERIFY( test = iss.eof() );\n+    VERIFY( test = !iss.fail() );\n+    iss.tellg();\n+    VERIFY( test = !iss.fail() );\n+  }\n+\n+  // seekg\n+  {\n+    wistringstream iss(num1);\n+    wistream::pos_type pos1 = iss.tellg();\n+    int asNum = 0;\n+    iss >> asNum;\n+    VERIFY( test = iss.eof() );\n+    VERIFY( test = !iss.fail() );\n+    iss.seekg(0, ios_base::beg);\n+    VERIFY( test = !iss.fail() );\n+  }\n+\n+  // seekg\n+  {\n+    wistringstream iss(num1);\n+    wistream::pos_type pos1 = iss.tellg();\n+    int asNum = 0;\n+    iss >> asNum;\n+    VERIFY( test = iss.eof() );\n+    VERIFY( test = !iss.fail() );\n+    iss.seekg(pos1);\n+    VERIFY( test = !iss.fail() );\n+  }\n+}\n+\n+int main()\n+{\n+  test06();\n+  return 0;\n+}"}, {"sha": "aab0162b2c452ef94603bd10179a3bed9d8d2b7c", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/wchar_t/exceptions_badbit_throw.cc", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2Fexceptions_badbit_throw.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2Fexceptions_badbit_throw.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2Fexceptions_badbit_throw.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,66 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <istream>\n+#include <streambuf>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+#include <testsuite_io.h>\n+\n+using namespace std;\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  __gnu_test::fail_wstreambuf bib;\n+  wistream stream(&bib);\n+  stream.exceptions(ios_base::badbit);\n+\n+  try\n+    {\n+      stream.tellg();\n+      VERIFY( false );\n+    }\n+  catch (const __gnu_test::positioning_error&) \n+    {\n+      // stream should set badbit and rethrow facet_error.\n+      VERIFY( stream.bad() );\n+      VERIFY( (stream.rdstate() & ios_base::failbit) == 0 );\n+      VERIFY( !stream.eof() );\n+    }\n+  catch (...) \n+    {\n+      VERIFY(false);\n+    }\n+}\n+\n+// libstdc++/9546\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "d4fe1ee1aaed01fb41c3bfd7a2e23e0b5e4372b4", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/wchar_t/fstream.cc", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2Ffstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2Ffstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2Ffstream.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,85 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// NB: ostream has a particular \"seeks\" category. Adopt this for istreams too.\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n+\n+#include <istream>\n+#include <sstream>\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+// fstreams\n+void test04(void)\n+{\n+  typedef std::wistream::off_type off_type;\n+\n+  bool test __attribute__((unused)) = true;\n+  std::wistream::pos_type pos01, pos02, pos03, pos04, pos05, pos06;\n+  std::ios_base::iostate state01, state02;\n+  const char str_lit01[] = \"wistream_seeks-1.txt\";\n+  const char str_lit02[] = \"wistream_seeks-2.txt\";\n+  std::wifstream if01(str_lit01, std::ios_base::in | std::ios_base::out);\n+  std::wifstream if02(str_lit01, std::ios_base::in);\n+  std::wifstream if03(str_lit02, std::ios_base::out | std::ios_base::trunc); \n+  VERIFY( if01.good() );\n+  VERIFY( if02.good() );\n+  VERIFY( if03.good() );\n+\n+  std::wistream is01(if01.rdbuf());\n+  std::wistream is02(if02.rdbuf());\n+  std::wistream is03(if03.rdbuf());\n+\n+  // pos_type tellg()\n+  // in | out\n+  pos01 = is01.tellg();\n+  pos02 = is01.tellg();\n+  VERIFY( pos01 == pos02 );\n+\n+  // in\n+  pos03 = is02.tellg();\n+  pos04 = is02.tellg();\n+  VERIFY( pos03 == pos04 );\n+\n+  // out\n+  pos05 = is03.tellg();\n+  pos06 = is03.tellg();\n+  VERIFY( pos05 == pos06 );\n+\n+  // cur \n+  // NB: see library issues list 136. It's the v-3 interp that seekg\n+  // only sets the input buffer, or else istreams with buffers that\n+  // have _M_mode == ios_base::out will fail to have consistency\n+  // between seekg and tellg.\n+  state01 = is01.rdstate();\n+  is01.seekg(10, std::ios_base::cur);\n+  state02 = is01.rdstate();\n+  pos01 = is01.tellg(); \n+  VERIFY( pos01 == pos02 + off_type(10) ); \n+  VERIFY( state01 == state02 );\n+  pos02 = is01.tellg(); \n+  VERIFY( pos02 == pos01 ); \n+}\n+\n+int main()\n+{\n+  test04();\n+  return 0;\n+}"}, {"sha": "1252b2aefbe812e1c6e100c9c27316c87399c5e3", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/wchar_t/sstream.cc", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2Fsstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2Fsstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2Fsstream.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,91 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// NB: ostream has a particular \"seeks\" category. Adopt this for istreams too.\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n+\n+#include <istream>\n+#include <sstream>\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+// stringstreams\n+void test05(void)\n+{\n+  typedef std::wistream::off_type off_type;\n+\n+  bool test __attribute__((unused)) = true;\n+  std::wistream::pos_type pos01, pos02, pos03, pos04, pos05, pos06;\n+  std::ios_base::iostate state01, state02;\n+  const char str_lit01[] = \"wistream_seeks-1.tst\";\n+  std::wifstream if01(str_lit01);\n+  std::wifstream if02(str_lit01);\n+  std::wifstream if03(str_lit01);\n+  VERIFY( if01.good() );\n+  VERIFY( if02.good() );\n+  VERIFY( if03.good() );\n+\n+  std::wstringbuf strbuf01(std::ios_base::in | std::ios_base::out);\n+  if01 >> &strbuf01; \n+  // initialize stringbufs that are ios_base::out\n+  std::wstringbuf strbuf03(strbuf01.str(), std::ios_base::out);\n+  // initialize stringbufs that are ios_base::in\n+  std::wstringbuf strbuf02(strbuf01.str(), std::ios_base::in);\n+\n+  std::wistream is01(&strbuf01);\n+  std::wistream is02(&strbuf02);\n+  std::wistream is03(&strbuf03);\n+\n+  // pos_type tellg()\n+  // in | out\n+  pos01 = is01.tellg();\n+  pos02 = is01.tellg();\n+  VERIFY( pos01 == pos02 );\n+\n+  // in\n+  pos03 = is02.tellg();\n+  pos04 = is02.tellg();\n+  VERIFY( pos03 == pos04 );\n+\n+  // out\n+  pos05 = is03.tellg();\n+  pos06 = is03.tellg();\n+  VERIFY( pos05 == pos06 );\n+\n+  // cur \n+  // NB: see library issues list 136. It's the v-3 interp that seekg\n+  // only sets the input buffer, or else istreams with buffers that\n+  // have _M_mode == ios_base::out will fail to have consistency\n+  // between seekg and tellg.\n+  state01 = is01.rdstate();\n+  is01.seekg(10, std::ios_base::cur);\n+  state02 = is01.rdstate();\n+  pos01 = is01.tellg(); \n+  VERIFY( pos01 == pos02 + off_type(10) ); \n+  VERIFY( state01 == state02 );\n+  pos02 = is01.tellg(); \n+  VERIFY( pos02 == pos01 ); \n+}\n+\n+int main()\n+{\n+  test05();\n+  return 0;\n+}"}, {"sha": "18443605240e7266c750ce99dc35e156c55b1209", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ws/wchar_t/1.cc", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fws%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fws%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fws%2Fwchar_t%2F1.cc?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,79 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.4 standard basic_istream manipulators\n+\n+#include <istream>\n+#include <sstream>\n+#include <stdexcept>\n+#include <testsuite_hooks.h>\n+\n+void test01(void)\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const wchar_t str_lit01[] = L\"  venice \";\n+  const std::wstring str01(L\" santa barbara \");\n+  std::wstring str02(str_lit01);\n+  std::wstring str04;\n+  std::wstring str05;\n+  std::ios_base::iostate flag3, flag4, flag5;\n+\n+  // template<_CharT, _Traits>\n+  //  basic_istream<_CharT, _Traits>& ws(basic_istream<_Char, _Traits>& is)\n+  std::wistringstream iss01(str01);\n+  std::wistringstream iss02(str01);\n+  \n+  iss01 >> str04;\n+  VERIFY( str04.size() != str01.size() );\n+  VERIFY( str04 == L\"santa\" );\n+\n+  iss02 >> std::ws;\n+  iss02 >> str05;\n+  VERIFY( str05.size() != str01.size() );\n+  VERIFY( str05 == L\"santa\" );\n+  VERIFY( str05 == str04 );\n+\n+  iss01 >> str04;\n+  VERIFY( str04.size() != str01.size() );\n+  VERIFY( str04 == L\"barbara\" );\n+  \n+  iss02 >> std::ws;\n+  iss02 >> str05;\n+  VERIFY( str05.size() != str01.size() );\n+  VERIFY( str05 == L\"barbara\" );\n+  VERIFY( str05 == str04 );\n+\n+  flag3 = std::ios_base::eofbit;\n+  flag4 = std::ios_base::badbit;\n+  flag5 = std::ios_base::failbit;\n+  VERIFY( !iss01.fail() );\n+  VERIFY( !iss02.fail() );\n+  VERIFY( !iss01.eof() );\n+  VERIFY( !iss02.eof() );\n+\n+  iss01 >> std::ws;\n+  VERIFY( !iss01.fail() );\n+  VERIFY( iss01.eof() );\n+}\n+\n+int main()\n+{ \n+  test01();\n+  return 0;\n+}"}, {"sha": "717a04c5f4d21c3383f041c59de347ab6dd56eb4", "filename": "libstdc++-v3/testsuite/data/wistream_extractor_other-1.tst", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_extractor_other-1.tst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_extractor_other-1.tst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_extractor_other-1.tst?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,65 @@\n+// 990811 bkoz\n+\n+// Copyright (C) 1999 Cygnus Solutions\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+/mnt/cdrom/yabbyyou_jesusdread/disk_2/King Tubby's - Repatriation\n+/mnt/cdrom/yabbyyou_jesusdread/disk_2/Vivian Jackson and the Prop\n+/mnt/cdrom/yabbyyou_jesusdread/disk_2/Michael Rose - Born Free (d\n+/mnt/cdrom/yabbyyou_jesusdread/disk_2/King Tubby's - Love Thy Nei\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Vivian Jackson and the Defe\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Vivian Jackson and the Ralp\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Tommy McCook and Don D. Jnr\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Big Youth and Vivian Jackso\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/King Tubby's - Big Youth Fi\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Upsetter Mix - Rally Dub\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Dicky Burton - God Is Watch\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Pablo and Vivian Jackson - \n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/King Tubby's - Rock King Tu\n+/mnt/cdrom/TORTOISE_millions_now_living/tortoise_5\n+/mnt/cdrom/TORTOISE_millions_now_living/tortoise_6\n+/mnt/cdrom/bettycarter_i'myours,you'remine/This time\n+/mnt/cdrom/bettycarter_i'myours,you'remine/I'm Yours, You're Mine\n+/mnt/cdrom/bettycarter_i'myours,you'remine/Lonely House\n+/mnt/cdrom/bettycarter_i'myours,you'remine/Close Your Eyes\n+/mnt/cdrom/bettycarter_i'myours,you'remine/Useless Landscape\n+/mnt/cdrom/bettycarter_i'myours,you'remine/East of the Sun\n+/mnt/cdrom/bettycarter_i'myours,you'remine/September Song\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Naima's Love Song\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Stay As Sweet As You Are\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Make Him Believe\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/I Should Care\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Once Upon a Summertime\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/You Go To My Head\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/In the Still Of the Night\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/When It's Sleepy Time Down \n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/The Love We Had Yesterday\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Dip Bag\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/You're Mine, Too\n+/mnt/cdrom/c_adderly_somethin'_else/Autumn Leaves\n+/mnt/cdrom/c_adderly_somethin'_else/Love For Sale\n+/mnt/cdrom/c_adderly_somethin'_else/Somethin' Else\n+/mnt/cdrom/c_adderly_somethin'_else/One For Daddy-O\n+\n+\n+\n+\n+\n+\n+\n+"}, {"sha": "717a04c5f4d21c3383f041c59de347ab6dd56eb4", "filename": "libstdc++-v3/testsuite/data/wistream_extractor_other-1.txt", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_extractor_other-1.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_extractor_other-1.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_extractor_other-1.txt?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,65 @@\n+// 990811 bkoz\n+\n+// Copyright (C) 1999 Cygnus Solutions\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+/mnt/cdrom/yabbyyou_jesusdread/disk_2/King Tubby's - Repatriation\n+/mnt/cdrom/yabbyyou_jesusdread/disk_2/Vivian Jackson and the Prop\n+/mnt/cdrom/yabbyyou_jesusdread/disk_2/Michael Rose - Born Free (d\n+/mnt/cdrom/yabbyyou_jesusdread/disk_2/King Tubby's - Love Thy Nei\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Vivian Jackson and the Defe\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Vivian Jackson and the Ralp\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Tommy McCook and Don D. Jnr\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Big Youth and Vivian Jackso\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/King Tubby's - Big Youth Fi\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Upsetter Mix - Rally Dub\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Dicky Burton - God Is Watch\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Pablo and Vivian Jackson - \n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/King Tubby's - Rock King Tu\n+/mnt/cdrom/TORTOISE_millions_now_living/tortoise_5\n+/mnt/cdrom/TORTOISE_millions_now_living/tortoise_6\n+/mnt/cdrom/bettycarter_i'myours,you'remine/This time\n+/mnt/cdrom/bettycarter_i'myours,you'remine/I'm Yours, You're Mine\n+/mnt/cdrom/bettycarter_i'myours,you'remine/Lonely House\n+/mnt/cdrom/bettycarter_i'myours,you'remine/Close Your Eyes\n+/mnt/cdrom/bettycarter_i'myours,you'remine/Useless Landscape\n+/mnt/cdrom/bettycarter_i'myours,you'remine/East of the Sun\n+/mnt/cdrom/bettycarter_i'myours,you'remine/September Song\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Naima's Love Song\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Stay As Sweet As You Are\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Make Him Believe\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/I Should Care\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Once Upon a Summertime\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/You Go To My Head\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/In the Still Of the Night\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/When It's Sleepy Time Down \n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/The Love We Had Yesterday\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Dip Bag\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/You're Mine, Too\n+/mnt/cdrom/c_adderly_somethin'_else/Autumn Leaves\n+/mnt/cdrom/c_adderly_somethin'_else/Love For Sale\n+/mnt/cdrom/c_adderly_somethin'_else/Somethin' Else\n+/mnt/cdrom/c_adderly_somethin'_else/One For Daddy-O\n+\n+\n+\n+\n+\n+\n+\n+"}, {"sha": "717a04c5f4d21c3383f041c59de347ab6dd56eb4", "filename": "libstdc++-v3/testsuite/data/wistream_extractor_other-2.tst", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_extractor_other-2.tst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_extractor_other-2.tst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_extractor_other-2.tst?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,65 @@\n+// 990811 bkoz\n+\n+// Copyright (C) 1999 Cygnus Solutions\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+/mnt/cdrom/yabbyyou_jesusdread/disk_2/King Tubby's - Repatriation\n+/mnt/cdrom/yabbyyou_jesusdread/disk_2/Vivian Jackson and the Prop\n+/mnt/cdrom/yabbyyou_jesusdread/disk_2/Michael Rose - Born Free (d\n+/mnt/cdrom/yabbyyou_jesusdread/disk_2/King Tubby's - Love Thy Nei\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Vivian Jackson and the Defe\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Vivian Jackson and the Ralp\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Tommy McCook and Don D. Jnr\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Big Youth and Vivian Jackso\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/King Tubby's - Big Youth Fi\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Upsetter Mix - Rally Dub\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Dicky Burton - God Is Watch\n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/Pablo and Vivian Jackson - \n+/mnt/cdrom/yabbyyou_jesusdread/disk_1/King Tubby's - Rock King Tu\n+/mnt/cdrom/TORTOISE_millions_now_living/tortoise_5\n+/mnt/cdrom/TORTOISE_millions_now_living/tortoise_6\n+/mnt/cdrom/bettycarter_i'myours,you'remine/This time\n+/mnt/cdrom/bettycarter_i'myours,you'remine/I'm Yours, You're Mine\n+/mnt/cdrom/bettycarter_i'myours,you'remine/Lonely House\n+/mnt/cdrom/bettycarter_i'myours,you'remine/Close Your Eyes\n+/mnt/cdrom/bettycarter_i'myours,you'remine/Useless Landscape\n+/mnt/cdrom/bettycarter_i'myours,you'remine/East of the Sun\n+/mnt/cdrom/bettycarter_i'myours,you'remine/September Song\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Naima's Love Song\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Stay As Sweet As You Are\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Make Him Believe\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/I Should Care\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Once Upon a Summertime\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/You Go To My Head\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/In the Still Of the Night\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/When It's Sleepy Time Down \n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/The Love We Had Yesterday\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/Dip Bag\n+/mnt/cdrom/bettycarter_it'snotaboutthemelo/You're Mine, Too\n+/mnt/cdrom/c_adderly_somethin'_else/Autumn Leaves\n+/mnt/cdrom/c_adderly_somethin'_else/Love For Sale\n+/mnt/cdrom/c_adderly_somethin'_else/Somethin' Else\n+/mnt/cdrom/c_adderly_somethin'_else/One For Daddy-O\n+\n+\n+\n+\n+\n+\n+\n+"}, {"sha": "5d9eafa2a3612ba400697f457b8c0375a3efbab7", "filename": "libstdc++-v3/testsuite/data/wistream_seeks-1.tst", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_seeks-1.tst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_seeks-1.tst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_seeks-1.tst?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,7 @@\n+bd2\n+456x\n+9mzuv>?@ABCDEFGHIJKLMNOPQRSTUVWXYZracadabras, i wannaz\n+because because\n+because. . \n+of the wonderful things he does!!\n+ok\n\\ No newline at end of file"}, {"sha": "5d9eafa2a3612ba400697f457b8c0375a3efbab7", "filename": "libstdc++-v3/testsuite/data/wistream_seeks-1.txt", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_seeks-1.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_seeks-1.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_seeks-1.txt?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,7 @@\n+bd2\n+456x\n+9mzuv>?@ABCDEFGHIJKLMNOPQRSTUVWXYZracadabras, i wannaz\n+because because\n+because. . \n+of the wonderful things he does!!\n+ok\n\\ No newline at end of file"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "libstdc++-v3/testsuite/data/wistream_seeks-2.tst", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_seeks-2.tst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_seeks-2.tst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_seeks-2.tst?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e"}, {"sha": "9b770a55c3aee1789d596a351f9ea7b044768837", "filename": "libstdc++-v3/testsuite/data/wistream_unformatted-1.tst", "status": "added", "additions": 1500, "deletions": 0, "changes": 1500, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_unformatted-1.tst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_unformatted-1.tst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_unformatted-1.tst?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,1500 @@\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890"}, {"sha": "9b770a55c3aee1789d596a351f9ea7b044768837", "filename": "libstdc++-v3/testsuite/data/wistream_unformatted-1.txt", "status": "added", "additions": 1500, "deletions": 0, "changes": 1500, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_unformatted-1.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7e12f0dac20ed85fdb563070d3967c12f7ae3e/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_unformatted-1.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdata%2Fwistream_unformatted-1.txt?ref=8f7e12f0dac20ed85fdb563070d3967c12f7ae3e", "patch": "@@ -0,0 +1,1500 @@\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890\n+1234567890"}]}