{"sha": "841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQxZmFlZWRkZDFhYWY4YjVjZDQ3MTMyMzZjODU2YTlhYjdhYzZhMA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-01-18T15:19:51Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-01-18T15:19:51Z"}, "message": "EXTRA_SPECS addition\n\nFrom-SVN: r11063", "tree": {"sha": "1c8015ced1b514a776629881bb4493e31c3d07d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c8015ced1b514a776629881bb4493e31c3d07d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/comments", "author": null, "committer": null, "parents": [{"sha": "4a5891aff999a389a317f454e7efce4ada81fb6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5891aff999a389a317f454e7efce4ada81fb6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a5891aff999a389a317f454e7efce4ada81fb6b"}], "stats": {"total": 536, "additions": 176, "deletions": 360}, "files": [{"sha": "6ae4a6436fb36be4a665f44fbe94372bc74c11f8", "filename": "gcc/config/rs6000/aix3newas.h", "status": "modified", "additions": 4, "deletions": 27, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Faix3newas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Faix3newas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix3newas.h?ref=841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "patch": "@@ -26,33 +26,10 @@ Boston, MA 02111-1307, USA.  */\n /* Tell the assembler to assume that all undefined names are external.  */\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"-u \\\n-%{!mcpu*: \\\n-  %{mpower: %{!mpowerpc*: %{!mpower2: -mpwr}}} \\\n-  %{mpower2: -mpwrx} \\\n-  %{mno-power: %{mpowerpc*: -mppc}} \\\n-  %{mno-power: %{!mpowerpc*: -mcom}} \\\n-  %{!mno-power: %{mpowerpc*: -m601}} \\\n-  %{!mno-power: %{!mpowerpc*: %{!mpower2: -mpwr}}}} \\\n-%{mcpu=common: -mcom} \\\n-%{mcpu=power: -mpwr} \\\n-%{mcpu=power2: -mpwrx} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=rios: -mpwr} \\\n-%{mcpu=rios1: -mpwr} \\\n-%{mcpu=rios2: -mpwrx} \\\n-%{mcpu=rsc: -mpwr} \\\n-%{mcpu=rsc1: -mpwr} \\\n-%{mcpu=403: -mppc} \\\n-%{mcpu=505: -mppc} \\\n-%{mcpu=601: -m601} \\\n-%{mcpu=602: -mppc} \\\n-%{mcpu=603: -mppc} \\\n-%{mcpu=603e: -mppc} \\\n-%{mcpu=604: -mppc} \\\n-%{mcpu=620: -mppc} \\\n-%{mcpu=821: -mppc} \\\n-%{mcpu=860: -mppc}\"\n+#define ASM_SPEC \"-u %(asm_cpu)\"\n+\n+#undef ASM_DEFAULT_SPEC\n+#define ASM_DEFAULT_SPEC \"-mpwr\"\n \n /* Define the options for the binder: Start text at 512, align all segments\n    to 512 bytes, and warn if there is text relocation."}, {"sha": "3807d0b29cd3507628dc8525bc07a15dc193cabb", "filename": "gcc/config/rs6000/aix41.h", "status": "modified", "additions": 8, "deletions": 52, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Faix41.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Faix41.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix41.h?ref=841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "patch": "@@ -24,64 +24,20 @@ Boston, MA 02111-1307, USA.  */\n #include \"rs6000/rs6000.h\"\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"-u \\\n-%{!mcpu*: \\\n-  %{mpower2: -mpwrx} \\\n-  %{mpowerpc*: %{!mpower: -mppc}} \\\n-  %{mpower: %{!mpower2: -mpwr}} \\\n-  %{mpowerpc*: %{mpower: -m601}} \\\n-  %{!mpowerpc*: %{!mpower*: -mcom}}} \\\n-%{mcpu=common: -mcom} \\\n-%{mcpu=power: -mpwr} \\\n-%{mcpu=power2: -mpwrx} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=rios: -mpwr} \\\n-%{mcpu=rios1: -mpwr} \\\n-%{mcpu=rios2: -mpwrx} \\\n-%{mcpu=rsc: -mpwr} \\\n-%{mcpu=rsc1: -mpwr} \\\n-%{mcpu=403: -mppc} \\\n-%{mcpu=505: -mppc} \\\n-%{mcpu=601: -m601} \\\n-%{mcpu=602: -mppc} \\\n-%{mcpu=603: -mppc} \\\n-%{mcpu=603e: -mppc} \\\n-%{mcpu=604: -mppc} \\\n-%{mcpu=620: -mppc} \\\n-%{mcpu=821: -mppc} \\\n-%{mcpu=860: -mppc}\"\n+#define ASM_SPEC \"-u %(asm_cpu)\"\n \n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-D_IBMR2 -D_POWER -D_AIX -D_AIX32 \\\n -Asystem(unix) -Asystem(aix)\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"\\\n-%{posix: -D_POSIX_SOURCE} \\\n-%{!mcpu*: \\\n-  %{mpower: %{!mpower2: -D_ARCH_PWR}} \\\n-  %{mpower2: -D_ARCH_PWR2} \\\n-  %{mpowerpc*: -D_ARCH_PPC} \\\n-  %{!mpower*: -D_ARCH_COM}} \\\n-%{mcpu=common: -D_ARCH_COM} \\\n-%{mcpu=power: -D_ARCH_PWR} \\\n-%{mcpu=power2: -D_ARCH_PWR2} \\\n-%{mcpu=powerpc: -D_ARCH_PPC} \\\n-%{mcpu=rios: -D_ARCH_PWR} \\\n-%{mcpu=rios1: -D_ARCH_PWR} \\\n-%{mcpu=rios2: -D_ARCH_PWR2} \\\n-%{mcpu=rsc: -D_ARCH_PWR} \\\n-%{mcpu=rsc1: -D_ARCH_PWR} \\\n-%{mcpu=403: -D_ARCH_PPC} \\\n-%{mcpu=505: -D_ARCH_PPC} \\\n-%{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n-%{mcpu=602: -D_ARCH_PPC} \\\n-%{mcpu=603: -D_ARCH_PPC} \\\n-%{mcpu=603e: -D_ARCH_PPC} \\\n-%{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC} \\\n-%{mcpu=821: -D_ARCH_PPC} \\\n-%{mcpu=860: -D_ARCH_PPC}\"\n+#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE} %(cpp_cpu)\"\n+\n+#undef\tCPP_DEFAULT_SPEC\n+#define CPP_DEFAULT_SPEC \"-D_ARCH_COM\"\n+\n+#undef\tASM_DEFAULT_SPEC\n+#define ASM_DEFAULT_SPEC \"-mcom\"\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT MASK_NEW_MNEMONICS"}, {"sha": "82b059c942ad84d20e73f3274087a3cd72993a6a", "filename": "gcc/config/rs6000/eabiaix.h", "status": "modified", "additions": 2, "deletions": 36, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Feabiaix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Feabiaix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabiaix.h?ref=841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "patch": "@@ -24,42 +24,8 @@ Boston, MA 02111-1307, USA.  */\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_AIX_CALLS)\n \n-#undef CPP_SPEC\n-#define CPP_SPEC \"\\\n-%{posix: -D_POSIX_SOURCE} \\\n-%{mrelocatable: -D_RELOCATABLE} \\\n-%{mcall-sysv: -D_CALL_SYSV} %{mcall-nt: -D_CALL_NT} \\\n-%{mcall-aix: -D_CALL_AIX} %{mcall-aixdesc: -D_CALL_AIX -D_CALL_AIXDESC} \\\n-%{!mcall-sysv: %{!mcall-aix: %{!mcall-aixdesc: %{!mcall-nt: -D_CALL_AIX}}}} \\\n-%{msoft-float: -D_SOFT_FLOAT} %{mcpu=403: -D_SOFT_FLOAT} \\\n-%{mlittle: -D_LITTLE_ENDIAN -Amachine(littleendian)} \\\n-%{mlittle-endian: -D_LITTLE_ENDIAN -Amachine(littleendian)} \\\n-%{!mlittle: %{!mlittle-endian: -D_BIG_ENDIAN -Amachine(bigendian)}} \\\n-%{!mcpu*: \\\n-  %{mpower: %{!mpower2: -D_ARCH_PWR}} \\\n-  %{mpower2: -D_ARCH_PWR2} \\\n-  %{mpowerpc*: -D_ARCH_PPC} \\\n-  %{mno-powerpc: %{!mpower: %{!mpower2: -D_ARCH_COM}}} \\\n-  %{!mno-powerpc: -D_ARCH_PPC}} \\\n-%{mcpu=common: -D_ARCH_COM} \\\n-%{mcpu=power: -D_ARCH_PWR} \\\n-%{mcpu=power2: -D_ARCH_PWR2} \\\n-%{mcpu=powerpc: -D_ARCH_PPC} \\\n-%{mcpu=rios: -D_ARCH_PWR} \\\n-%{mcpu=rios1: -D_ARCH_PWR} \\\n-%{mcpu=rios2: -D_ARCH_PWR2} \\\n-%{mcpu=rsc: -D_ARCH_PWR} \\\n-%{mcpu=rsc1: -D_ARCH_PWR} \\\n-%{mcpu=403: -D_ARCH_PPC} \\\n-%{mcpu=505: -D_ARCH_PPC} \\\n-%{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n-%{mcpu=602: -D_ARCH_PPC} \\\n-%{mcpu=603: -D_ARCH_PPC} \\\n-%{mcpu=603e: -D_ARCH_PPC} \\\n-%{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC} \\\n-%{mcpu=821: -D_ARCH_PPC} \\\n-%{mcpu=860: -D_ARCH_PPC}\"\n+#undef\tCPP_SYSV_DEFAULT_SPEC\n+#define\tCPP_SYSV_DEFAULT_SPEC \"-D_CALL_AIX\"\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are"}, {"sha": "aaa3ecd426c0443cf9a14654f777a40b9b3cdac0", "filename": "gcc/config/rs6000/eabile.h", "status": "modified", "additions": 4, "deletions": 35, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Feabile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Feabile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabile.h?ref=841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "patch": "@@ -25,42 +25,11 @@ Boston, MA 02111-1307, USA.  */\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_LITTLE_ENDIAN)\n \n-#undef CPP_SPEC\n-#define CPP_SPEC \"\\\n-%{posix: -D_POSIX_SOURCE} \\\n-%{mrelocatable: -D_RELOCATABLE} \\\n-%{mcall-sysv: -D_CALL_SYSV} %{mcall-nt: -D_CALL_NT} \\\n-%{mcall-aix: -D_CALL_AIX} %{mcall-aixdesc: -D_CALL_AIX -D_CALL_AIXDESC} \\\n-%{!mcall-sysv: %{!mcall-aix: %{!mcall-aixdesc: %{!mcall-nt: -D_CALL_SYSV}}}} \\\n-%{msoft-float: -D_SOFT_FLOAT} %{mcpu=403: -D_SOFT_FLOAT} \\\n-%{mbig: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n+#undef\tCPP_ENDIAN_SPEC\n+#define\tCPP_ENDIAN_SPEC \\\n+\"%{mbig: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n %{mbig-endian: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n-%{!mbig: %{!mbig-endian: -D_LITTLE_ENDIAN -Amachine(littleendian)}} \\\n-%{!mcpu*: \\\n-  %{mpower: %{!mpower2: -D_ARCH_PWR}} \\\n-  %{mpower2: -D_ARCH_PWR2} \\\n-  %{mpowerpc*: -D_ARCH_PPC} \\\n-  %{mno-powerpc: %{!mpower: %{!mpower2: -D_ARCH_COM}}} \\\n-  %{!mno-powerpc: -D_ARCH_PPC}} \\\n-%{mcpu=common: -D_ARCH_COM} \\\n-%{mcpu=power: -D_ARCH_PWR} \\\n-%{mcpu=power2: -D_ARCH_PWR2} \\\n-%{mcpu=powerpc: -D_ARCH_PPC} \\\n-%{mcpu=rios: -D_ARCH_PWR} \\\n-%{mcpu=rios1: -D_ARCH_PWR} \\\n-%{mcpu=rios2: -D_ARCH_PWR2} \\\n-%{mcpu=rsc: -D_ARCH_PWR} \\\n-%{mcpu=rsc1: -D_ARCH_PWR} \\\n-%{mcpu=403: -D_ARCH_PPC} \\\n-%{mcpu=505: -D_ARCH_PPC} \\\n-%{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n-%{mcpu=602: -D_ARCH_PPC} \\\n-%{mcpu=603: -D_ARCH_PPC} \\\n-%{mcpu=603e: -D_ARCH_PPC} \\\n-%{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC} \\\n-%{mcpu=821: -D_ARCH_PPC} \\\n-%{mcpu=860: -D_ARCH_PPC}\"\n+%{!mbig: %{!mbig-endian: -D_LITTLE_ENDIAN -Amachine(littleendian)}}\"\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are"}, {"sha": "db2c0bb97f55274e9bb8c2a3d61c2a6612419199", "filename": "gcc/config/rs6000/lynx.h", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flynx.h?ref=841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "patch": "@@ -72,34 +72,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* This can become more refined as we have more powerpc options. */\n #undef ASM_SPEC\n-#define ASM_SPEC \"\\\n--u \\\n-%{!mcpu*: \\\n-  %{mpower2: -mpwrx} \\\n-  %{mpowerpc*: %{!mpower: -mppc}} \\\n-  %{mno-powerpc: %{!mpower: %{!mpower2: -mcom}}} \\\n-  %{mno-powerpc: %{mpower: %{!mpower2: -mpwr}}} \\\n-  %{!mno-powerpc: %{mpower: -m601}} \\\n-  %{!mno-powerpc: %{!mpower: -mppc}}} \\\n-%{mcpu=common: -mcom} \\\n-%{mcpu=power: -mpwr} \\\n-%{mcpu=power2: -mpwrx} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=rios: -mpwr} \\\n-%{mcpu=rios1: -mpwr} \\\n-%{mcpu=rios2: -mpwrx} \\\n-%{mcpu=rsc: -mpwr} \\\n-%{mcpu=rsc1: -mpwr} \\\n-%{mcpu=403: -mppc} \\\n-%{mcpu=505: -mppc} \\\n-%{mcpu=601: -m601} \\\n-%{mcpu=602: -mppc} \\\n-%{mcpu=603: -mppc} \\\n-%{mcpu=603e: -mppc} \\\n-%{mcpu=604: -mppc} \\\n-%{mcpu=620: -mppc} \\\n-%{mcpu=821: -mppc} \\\n-%{mcpu=860: -mppc}\"\n+#define ASM_SPEC \"-u %(asm_cpu)\"\n \n #undef SUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES \\"}, {"sha": "83cd7cf3b7d8f6bc0e403a6413d2ec080fce7503", "filename": "gcc/config/rs6000/netware.h", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fnetware.h?ref=841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "patch": "@@ -182,34 +182,7 @@ toc_section ()\t\t\t\t\t\t\t\t\\\n   fprintf (FILE, \".%s\", PREFIX)\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"\\\n--u \\\n-%{!mcpu*: \\\n-  %{mpower2: -mpwrx} \\\n-  %{mpowerpc*: %{!mpower: -mppc}} \\\n-  %{mno-powerpc: %{!mpower: %{!mpower2: -mcom}}} \\\n-  %{mno-powerpc: %{mpower: %{!mpower2: -mpwr}}} \\\n-  %{!mno-powerpc: %{mpower: -m601}} \\\n-  %{!mno-powerpc: %{!mpower: -mppc}}} \\\n-%{mcpu=common: -mcom} \\\n-%{mcpu=power: -mpwr} \\\n-%{mcpu=power2: -mpwrx} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=rios: -mpwr} \\\n-%{mcpu=rios1: -mpwr} \\\n-%{mcpu=rios2: -mpwrx} \\\n-%{mcpu=rsc: -mpwr} \\\n-%{mcpu=rsc1: -mpwr} \\\n-%{mcpu=403: -mppc} \\\n-%{mcpu=505: -mppc} \\\n-%{mcpu=601: -m601} \\\n-%{mcpu=602: -mppc} \\\n-%{mcpu=603: -mppc} \\\n-%{mcpu=603e: -mppc} \\\n-%{mcpu=604: -mppc} \\\n-%{mcpu=620: -mppc} \\\n-%{mcpu=821: -mppc} \\\n-%{mcpu=860: -mppc} \\\n+#define ASM_SPEC \"-u %(asm_cpu) \\\n %{V} %{v:%{!V:-V}} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*}\"\n /* This is the end of what might become sysv4.h.  */\n "}, {"sha": "c050690f49c3073edae8999b2dc0a312e68b8c50", "filename": "gcc/config/rs6000/powerpc.h", "status": "modified", "additions": 6, "deletions": 55, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Fpowerpc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Fpowerpc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpowerpc.h?ref=841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "patch": "@@ -24,66 +24,17 @@ Boston, MA 02111-1307, USA.  */\n #include \"rs6000/rs6000.h\"\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"-u \\\n-%{!mcpu*: \\\n-  %{mpower2: -mpwrx} \\\n-  %{mpowerpc*: %{!mpower: -mppc}} \\\n-  %{mno-powerpc: %{!mpower: %{!mpower2: -mcom}}} \\\n-  %{mno-powerpc: %{mpower: %{!mpower2: -mpwr}}} \\\n-  %{!mno-powerpc: %{mpower: -m601}} \\\n-  %{!mno-powerpc: %{!mpower: -mppc}}} \\\n-%{mcpu=common: -mcom} \\\n-%{mcpu=power: -mpwr} \\\n-%{mcpu=power2: -mpwrx} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=rios: -mpwr} \\\n-%{mcpu=rios1: -mpwr} \\\n-%{mcpu=rios2: -mpwrx} \\\n-%{mcpu=rsc: -mpwr} \\\n-%{mcpu=rsc1: -mpwr} \\\n-%{mcpu=403: -mppc} \\\n-%{mcpu=505: -mppc} \\\n-%{mcpu=601: -m601} \\\n-%{mcpu=602: -mppc} \\\n-%{mcpu=603: -mppc} \\\n-%{mcpu=603e: -mppc} \\\n-%{mcpu=604: -mppc} \\\n-%{mcpu=620: -mppc} \\\n-%{mcpu=821: -mppc} \\\n-%{mcpu=860: -mppc}\"\n+#define ASM_SPEC \"-u %(asm_cpu)\"\n \n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-D_IBMR2 -D_POWER -D_AIX -D_AIX32 \\\n -Asystem(unix) -Asystem(aix) -Acpu(powerpc) -Amachine(powerpc)\"\n \n-#undef CPP_SPEC\n-#define CPP_SPEC \"\\\n-%{posix: -D_POSIX_SOURCE} \\\n-%{!mcpu*: \\\n-  %{mpower: %{!mpower2: -D_ARCH_PWR}} \\\n-  %{mpower2: -D_ARCH_PWR2} \\\n-  %{mpowerpc*: -D_ARCH_PPC} \\\n-  %{mno-powerpc: %{!mpower: %{!mpower2: -D_ARCH_COM}}} \\\n-  %{!mno-powerpc: -D_ARCH_PPC}} \\\n-%{mcpu=common: -D_ARCH_COM} \\\n-%{mcpu=power: -D_ARCH_PWR} \\\n-%{mcpu=power2: -D_ARCH_PWR2} \\\n-%{mcpu=powerpc: -D_ARCH_PPC} \\\n-%{mcpu=rios: -D_ARCH_PWR} \\\n-%{mcpu=rios1: -D_ARCH_PWR} \\\n-%{mcpu=rios2: -D_ARCH_PWR2} \\\n-%{mcpu=rsc: -D_ARCH_PWR} \\\n-%{mcpu=rsc1: -D_ARCH_PWR} \\\n-%{mcpu=403: -D_ARCH_PPC} \\\n-%{mcpu=505: -D_ARCH_PPC} \\\n-%{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n-%{mcpu=602: -D_ARCH_PPC} \\\n-%{mcpu=603: -D_ARCH_PPC} \\\n-%{mcpu=603e: -D_ARCH_PPC} \\\n-%{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC} \\\n-%{mcpu=821: -D_ARCH_PPC} \\\n-%{mcpu=860: -D_ARCH_PPC}\"\n+#undef\tCPP_DEFAULT_SPEC\n+#define\tCPP_DEFAULT_SPEC \"-D_ARCH_PPC\"\n+\n+#undef\tASM_DEFAULT_SPEC\n+#define\tASM_DEFAULT_SPEC \"-mppc\"\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS)"}, {"sha": "51c1ffde1b588a5449021d80e675b22f98dcedbe", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 77, "deletions": 6, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "patch": "@@ -45,19 +45,22 @@ Boston, MA 02111-1307, USA.  */\n    longer be needed.  Also, the extern declaration of mcount in ASM_FILE_START\n    will no longer be needed.  */\n \n-/* #define ASM_SPEC \"-u\" */\n+/* #define ASM_SPEC \"-u %(asm_cpu)\" */\n \n /* Define appropriate architecture macros for preprocessor depending on\n    target switches.  */\n \n-#define CPP_SPEC \"\\\n-%{posix: -D_POSIX_SOURCE} \\\n-%{!mcpu*: \\\n+#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE} %(cpp_cpu)\"\n+\n+/* Common CPP definitions used by CPP_SPEC amonst the various targets\n+   for handling -mcpu=xxx switches.  */\n+#define CPP_CPU_SPEC \\\n+\"%{!mcpu*: \\\n   %{mpower: %{!mpower2: -D_ARCH_PWR}} \\\n   %{mpower2: -D_ARCH_PWR2} \\\n   %{mpowerpc*: -D_ARCH_PPC} \\\n   %{mno-power: %{!mpowerpc*: -D_ARCH_COM}} \\\n-  %{!mno-power: %{!mpower2: -D_ARCH_PWR}}} \\\n+  %{!mno-power: %{!mpower2: %(cpp_default)}}} \\\n %{mcpu=common: -D_ARCH_COM} \\\n %{mcpu=power: -D_ARCH_PWR} \\\n %{mcpu=power2: -D_ARCH_PWR2} \\\n@@ -70,14 +73,82 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=403: -D_ARCH_PPC} \\\n %{mcpu=505: -D_ARCH_PPC} \\\n %{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n-%{mcpu=602: -d_ARCH_PPC} \\\n+%{mcpu=602: -D_ARCH_PPC} \\\n %{mcpu=603: -D_ARCH_PPC} \\\n %{mcpu=603e: -D_ARCH_PPC} \\\n %{mcpu=604: -D_ARCH_PPC} \\\n %{mcpu=620: -D_ARCH_PPC} \\\n %{mcpu=821: -D_ARCH_PPC} \\\n %{mcpu=860: -D_ARCH_PPC}\"\n \n+#ifndef CPP_DEFAULT_SPEC\n+#define CPP_DEFAULT_SPEC \"-D_ARCH_PWR\"\n+#endif\n+\n+#ifndef CPP_SYSV_SPEC\n+#define CPP_SYSV_SPEC \"\"\n+#endif\n+\n+#ifndef CPP_ENDIAN_SPEC\n+#define CPP_ENDIAN_SPEC \"\"\n+#endif\n+\n+#ifndef CPP_SYSV_DEFAULT_SPEC\n+#define CPP_SYSV_DEFAULT_SPEC \"\"\n+#endif\n+\n+/* Common ASM definitions used by ASM_SPEC amonst the various targets\n+   for handling -mcpu=xxx switches.  */\n+#define ASM_CPU_SPEC \\\n+\"%{!mcpu*: \\\n+  %{mpower: %{!mpower2: -mpwr}} \\\n+  %{mpower2: -mpwrx} \\\n+  %{mpowerpc*: -mppc} \\\n+  %{mno-power: %{!mpowerpc*: -mcom}} \\\n+  %{!mno-power: %{!mpower2: %(asm_default)}}} \\\n+%{mcpu=common: -mcom} \\\n+%{mcpu=power: -mpwr} \\\n+%{mcpu=power2: -mpwrx} \\\n+%{mcpu=powerpc: -mppc} \\\n+%{mcpu=rios: -mpwr} \\\n+%{mcpu=rios1: -mpwr} \\\n+%{mcpu=rios2: -mpwrx} \\\n+%{mcpu=rsc: -mpwr} \\\n+%{mcpu=rsc1: -mpwr} \\\n+%{mcpu=403: -mppc} \\\n+%{mcpu=505: -mppc} \\\n+%{mcpu=601: -m601} \\\n+%{mcpu=602: -mppc} \\\n+%{mcpu=603: -mppc} \\\n+%{mcpu=603e: -mppc} \\\n+%{mcpu=604: -mppc} \\\n+%{mcpu=620: -mppc} \\\n+%{mcpu=821: -mppc} \\\n+%{mcpu=860: -mppc}\"\n+\n+#ifndef ASM_DEFAULT_SPEC\n+#define ASM_DEFAULT_SPEC \"-mpwr\"\n+#endif\n+\n+/* This macro defines names of additional specifications to put in the specs\n+   that can be used in various specifications like CC1_SPEC.  Its definition\n+   is an initializer with a subgrouping for each command option.\n+\n+   Each subgrouping contains a string constant, that defines the\n+   specification name, and a string constant that used by the GNU CC driver\n+   program.\n+\n+   Do not define this macro if it does not need to do anything.  */\n+\n+#define EXTRA_SPECS\t\t\t\t\t\\\n+  { \"cpp_cpu\",\t\tCPP_CPU_SPEC },\t\t\t\\\n+  { \"cpp_default\",\tCPP_DEFAULT_SPEC },\t\t\\\n+  { \"cpp_sysv\",\t\tCPP_SYSV_SPEC },\t\t\\\n+  { \"cpp_sysv_default\",\tCPP_SYSV_DEFAULT_SPEC },\t\\\n+  { \"cpp_endian\",\tCPP_ENDIAN_SPEC },\t\t\\\n+  { \"asm_cpu\",\t\tASM_CPU_SPEC },\t\t\t\\\n+  { \"asm_default\",\tASM_DEFAULT_SPEC }\n+\n /* Define the options for the binder: Start text at 512, align all segments\n    to 512 bytes, and warn if there is text relocation.\n "}, {"sha": "08742998820527ffc3a1d2156f310cf4b2a0eeab", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 17, "deletions": 61, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "patch": "@@ -425,34 +425,7 @@ extern int rs6000_pic_labelno;\n /* Pass -mppc to the assembler, since that is what powerpc.h currently\n    implies.  */\n #undef ASM_SPEC\n-#define ASM_SPEC \"\\\n--u \\\n-%{!mcpu*: \\\n-  %{mpower2: -mpwrx} \\\n-  %{mpowerpc*: %{!mpower: -mppc}} \\\n-  %{mno-powerpc: %{!mpower: %{!mpower2: -mcom}}} \\\n-  %{mno-powerpc: %{mpower: %{!mpower2: -mpwr}}} \\\n-  %{!mno-powerpc: %{mpower: -m601}} \\\n-  %{!mno-powerpc: %{!mpower: -mppc}}} \\\n-%{mcpu=common: -mcom} \\\n-%{mcpu=power: -mpwr} \\\n-%{mcpu=power2: -mpwrx} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=rios: -mpwr} \\\n-%{mcpu=rios1: -mpwr} \\\n-%{mcpu=rios2: -mpwrx} \\\n-%{mcpu=rsc: -mpwr} \\\n-%{mcpu=rsc1: -mpwr} \\\n-%{mcpu=403: -mppc} \\\n-%{mcpu=505: -mppc} \\\n-%{mcpu=601: -m601} \\\n-%{mcpu=602: -mppc} \\\n-%{mcpu=603: -mppc} \\\n-%{mcpu=603e: -mppc} \\\n-%{mcpu=604: -mppc} \\\n-%{mcpu=620: -mppc} \\\n-%{mcpu=821: -mppc} \\\n-%{mcpu=860: -mppc} \\\n+#define ASM_SPEC \"-u %(asm_cpu) \\\n %{V} %{v:%{!V:-V}} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n %{mrelocatable} %{mrelocatable-lib} %{memb} \\\n %{mlittle} %{mlittle-endian} %{mbig} %{mbig-endian}\"\n@@ -608,42 +581,25 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{mbig: -oformat elf32-powerpc } %{mbig-endian: -oformat elf32-powerpc }\"\n #endif /* CROSS_COMPILE */\n \n-#undef CPP_SPEC\n-#define CPP_SPEC \"\\\n-%{posix: -D_POSIX_SOURCE} \\\n-%{mrelocatable: -D_RELOCATABLE} \\\n+#undef\tCPP_SYSV_SPEC\n+#define CPP_SYSV_SPEC \\\n+\"%{mrelocatable: -D_RELOCATABLE} \\\n %{mcall-sysv: -D_CALL_SYSV} %{mcall-nt: -D_CALL_NT} \\\n %{mcall-aix: -D_CALL_AIX} %{mcall-aixdesc: -D_CALL_AIX -D_CALL_AIXDESC} \\\n-%{!mcall-sysv: %{!mcall-aix: %{!mcall-aixdesc: %{!mcall-nt: -D_CALL_SYSV}}}} \\\n-%{msoft-float: -D_SOFT_FLOAT} %{mcpu=403: -D_SOFT_FLOAT} \\\n-%{mlittle: -D_LITTLE_ENDIAN -Amachine(littleendian)} \\\n+%{!mcall-sysv: %{!mcall-aix: %{!mcall-aixdesc: %{!mcall-nt: %(cpp_sysv_default) }}}} \\\n+%{msoft-float: -D_SOFT_FLOAT} %{mcpu=403: -D_SOFT_FLOAT}\"\n+\n+#undef\tCPP_SYSV_DEFAULT_SPEC\n+#define\tCPP_SYSV_DEFAULT_SPEC \"-D_CALL_SYSV\"\n+\n+#undef\tCPP_ENDIAN_SPEC\n+#define\tCPP_ENDIAN_SPEC \\\n+\"%{mlittle: -D_LITTLE_ENDIAN -Amachine(littleendian)} \\\n %{mlittle-endian: -D_LITTLE_ENDIAN -Amachine(littleendian)} \\\n-%{!mlittle: %{!mlittle-endian: -D_BIG_ENDIAN -Amachine(bigendian)}} \\\n-%{!mcpu*: \\\n-  %{mpower: %{!mpower2: -D_ARCH_PWR}} \\\n-  %{mpower2: -D_ARCH_PWR2} \\\n-  %{mpowerpc*: -D_ARCH_PPC} \\\n-  %{mno-powerpc: %{!mpower: %{!mpower2: -D_ARCH_COM}}} \\\n-  %{!mno-powerpc: -D_ARCH_PPC}} \\\n-%{mcpu=common: -D_ARCH_COM} \\\n-%{mcpu=power: -D_ARCH_PWR} \\\n-%{mcpu=power2: -D_ARCH_PWR2} \\\n-%{mcpu=powerpc: -D_ARCH_PPC} \\\n-%{mcpu=rios: -D_ARCH_PWR} \\\n-%{mcpu=rios1: -D_ARCH_PWR} \\\n-%{mcpu=rios2: -D_ARCH_PWR2} \\\n-%{mcpu=rsc: -D_ARCH_PWR} \\\n-%{mcpu=rsc1: -D_ARCH_PWR} \\\n-%{mcpu=403: -D_ARCH_PPC} \\\n-%{mcpu=505: -D_ARCH_PPC} \\\n-%{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n-%{mcpu=602: -D_ARCH_PPC} \\\n-%{mcpu=603: -D_ARCH_PPC} \\\n-%{mcpu=603e: -D_ARCH_PPC} \\\n-%{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC} \\\n-%{mcpu=821: -D_ARCH_PPC} \\\n-%{mcpu=860: -D_ARCH_PPC}\"\n+%{!mlittle: %{!mlittle-endian: -D_BIG_ENDIAN -Amachine(bigendian)}}\"\n+\n+#undef CPP_SPEC\n+#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE} %(cpp_sysv) %(cpp_endian) %(cpp_cpu)\"\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are"}, {"sha": "14663a6b6c75d90e535f00c7b68415ab8049d7ff", "filename": "gcc/config/rs6000/sysv4le.h", "status": "modified", "additions": 5, "deletions": 32, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Fsysv4le.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fconfig%2Frs6000%2Fsysv4le.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4le.h?ref=841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "patch": "@@ -25,39 +25,12 @@ Boston, MA 02111-1307, USA.  */\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_LITTLE_ENDIAN)\n \n-#undef CPP_SPEC\n-#define CPP_SPEC \"\\\n-%{posix: -D_POSIX_SOURCE} \\\n-%{mrelocatable: -D_RELOCATABLE} \\\n-%{mcall-sysv: -D_CALL_SYSV} %{mcall-nt: -D_CALL_NT} \\\n-%{mcall-aix: -D_CALL_AIX} %{mcall-aixdesc: -D_CALL_AIX -D_CALL_AIXDESC} \\\n-%{!mcall-sysv: %{!mcall-aix: %{!mcall-aixdesc: %{!mcall-nt: -D_CALL_SYSV}}}} \\\n-%{msoft-float: -D_SOFT_FLOAT} %{mcpu=403: -D_SOFT_FLOAT} \\\n-%{mbig: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n+#undef\tCPP_ENDIAN_SPEC\n+#define\tCPP_ENDIAN_SPEC \\\n+\"%{mbig: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n %{mbig-endian: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n-%{!mbig: %{!mbig-endian: -D_LITTLE_ENDIAN -Amachine(littleendian)}} \\\n-%{!mcpu*: \\\n-  %{mpower: %{!mpower2: -D_ARCH_PWR}} \\\n-  %{mpower2: -D_ARCH_PWR2} \\\n-  %{mpowerpc*: -D_ARCH_PPC} \\\n-  %{mno-powerpc: %{!mpower: %{!mpower2: -D_ARCH_COM}}} \\\n-  %{!mno-powerpc: -D_ARCH_PPC}} \\\n-%{mcpu=common: -D_ARCH_COM} \\\n-%{mcpu=power: -D_ARCH_PWR} \\\n-%{mcpu=power2: -D_ARCH_PWR2} \\\n-%{mcpu=powerpc: -D_ARCH_PPC} \\\n-%{mcpu=rios: -D_ARCH_PWR} \\\n-%{mcpu=rios1: -D_ARCH_PWR} \\\n-%{mcpu=rios2: -D_ARCH_PWR2} \\\n-%{mcpu=rsc: -D_ARCH_PWR} \\\n-%{mcpu=rsc1: -D_ARCH_PWR} \\\n-%{mcpu=403: -D_ARCH_PPC} \\\n-%{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n-%{mcpu=602: -D_ARCH_PPC} \\\n-%{mcpu=603: -D_ARCH_PPC} \\\n-%{mcpu=603e: -D_ARCH_PPC} \\\n-%{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC}\"\n+%{!mbig: %{!mbig-endian: -D_LITTLE_ENDIAN -Amachine(littleendian)}}\"\n+\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are"}, {"sha": "298a4317f7cff97636bea79077d929142cc00b33", "filename": "gcc/gcc.c", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=841faeeddd1aaf8b5cd4713236c856a9ab7ac6a0", "patch": "@@ -546,6 +546,10 @@ static char *startfile_spec = STARTFILE_SPEC;\n static char *switches_need_spaces = SWITCHES_NEED_SPACES;\n static char *multilib_select = MULTILIB_SELECT;\n \n+#ifdef EXTRA_SPECS\n+static struct { char *name, *spec; } extra_specs[] = { EXTRA_SPECS };\n+#endif\n+\n /* This defines which switch letters take arguments.  */\n \n #ifndef SWITCH_TAKES_ARG\n@@ -1254,6 +1258,21 @@ set_spec (name, spec)\n     cross_compile = atoi (sl->spec);\n   else if (! strcmp (name, \"multilib\"))\n     multilib_select = sl->spec;\n+#ifdef EXTRA_SPECS\n+  else\n+    {\n+      int i;\n+      for (i = 0; i < sizeof (extra_specs) / sizeof (extra_specs[0]); i++)\n+\t{\n+\t  if (! strcmp (name, extra_specs[i].name))\n+\t    {\n+\t      extra_specs[i].spec = sl->spec;\n+\t      break;\n+\t    }\n+\t}\n+    }\n+#endif\n+\n   /* Free the old spec */\n   if (old_spec)\n     free (old_spec);\n@@ -2512,6 +2531,14 @@ process_command (argc, argv)\n \t  printf (\"*cross_compile:\\n%d\\n\\n\", cross_compile);\n \t  printf (\"*multilib:\\n%s\\n\\n\", multilib_select);\n \n+#ifdef EXTRA_SPECS\n+\t  {\n+\t    int j;\n+\t    for (j = 0; j < sizeof (extra_specs) / sizeof (extra_specs[0]); j++)\n+\t      printf (\"*%s:\\n%s\\n\\n\", extra_specs[j].name,\n+\t\t      (extra_specs[j].spec) ? extra_specs[j].spec : \"\");\n+\t  }\n+#endif\n \t  exit (0);\n \t}\n       else if (! strcmp (argv[i], \"-dumpversion\"))\n@@ -4314,6 +4341,15 @@ main (argc, argv)\n   if (specs_file != 0 && strcmp (specs_file, \"specs\"))\n     read_specs (specs_file);\n \n+#ifdef EXTRA_SPECS\n+  else\n+    {\n+      int k;\n+      for (k = 0; k < sizeof (extra_specs) / sizeof (extra_specs[0]); k++)\n+\tset_spec (extra_specs[k].name, extra_specs[k].spec);\n+    }\n+#endif\n+\n   /* If not cross-compiling, look for startfiles in the standard places.  */\n   /* The fact that these are done here, after reading the specs file,\n      means that it cannot be found in these directories.\n@@ -4956,6 +4992,21 @@ validate_all_switches ()\n     if (c == '%' && *p == '{')\n       /* We have a switch spec.  */\n       validate_switches (p + 1);\n+\n+#ifdef EXTRA_SPECS\n+  {\n+    int i;\n+    for (i = 0; i < sizeof (extra_specs) / sizeof (extra_specs[0]); i++)\n+      {\n+\tp = extra_specs[i].spec;\n+\twhile (c = *p++)\n+\t  if (c == '%' && *p == '{')\n+\t    /* We have a switch spec.  */\n+\t    validate_switches (p + 1);\n+      }\n+  }\n+#endif\n+\n }\n \n /* Look at the switch-name that comes after START"}]}