{"sha": "9d84ed6812dce4a50e64334e7cc4abdeebe41523", "node_id": "C_kwDOANBUbNoAKDlkODRlZDY4MTJkY2U0YTUwZTY0MzM0ZTdjYzRhYmRlZWJlNDE1MjM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-06T00:16:22Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-06T00:16:22Z"}, "message": "Daily bump.", "tree": {"sha": "38876c5a478f6a0845e025a21c159490aa928d1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38876c5a478f6a0845e025a21c159490aa928d1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d84ed6812dce4a50e64334e7cc4abdeebe41523", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d84ed6812dce4a50e64334e7cc4abdeebe41523", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d84ed6812dce4a50e64334e7cc4abdeebe41523", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d84ed6812dce4a50e64334e7cc4abdeebe41523/comments", "author": null, "committer": null, "parents": [{"sha": "6be9d752142a03830e4202bd73f2765510ff9314", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be9d752142a03830e4202bd73f2765510ff9314", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be9d752142a03830e4202bd73f2765510ff9314"}], "stats": {"total": 227, "additions": 226, "deletions": 1}, "files": [{"sha": "8376a11537d8091007a144c39c5779765e38b43c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d84ed6812dce4a50e64334e7cc4abdeebe41523/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d84ed6812dce4a50e64334e7cc4abdeebe41523/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d84ed6812dce4a50e64334e7cc4abdeebe41523", "patch": "@@ -1,3 +1,86 @@\n+2022-04-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* doc/extend.texi (Common Function Attributes): Document that\n+\t'access' does not imply 'nonnull'.\n+\n+2022-04-05  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/105139\n+\t* config/i386/mmx.md (*movv2qi_internal):\n+\tChange insn mode of alternative 5 to HF for TARGET_AVX512FP16.\n+\n+2022-04-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.md (aarch64_cpymemdi): Turn into a\n+\tdefine_expand and turn operands 0 and 1 from REGs to MEMs.\n+\t(*aarch64_cpymemdi): New pattern.\n+\t(aarch64_setmemdi): Turn into a define_expand and turn operand 0\n+\tfrom a REG to a MEM.\n+\t(*aarch64_setmemdi): New pattern.\n+\t* config/aarch64/aarch64.cc (aarch64_expand_cpymem_mops): Use\n+\tcopy_to_mode_reg on all three registers.  Replace the original\n+\tMEM addresses rather than creating wild reads and writes.\n+\t(aarch64_expand_setmem_mops): Likewise for the size and for the\n+\tdestination memory and address.\n+\n+2022-04-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/103147\n+\t* config/aarch64/aarch64-protos.h (aarch64_simd_switcher): New class.\n+\t* config/aarch64/aarch64-sve-builtins.h (sve_switcher): Inherit\n+\tfrom aarch64_simd_switcher.\n+\t* config/aarch64/aarch64-builtins.cc (aarch64_simd_tuple_modes):\n+\tNew variable.\n+\t(aarch64_lookup_simd_builtin_type): Use it instead of TYPE_MODE.\n+\t(register_tuple_type): Add more asserts.  Expect the alignment\n+\tof the structure to be subject to flag_pack_struct and\n+\tmaximum_field_alignment.  Set aarch64_simd_tuple_modes.\n+\t(aarch64_simd_switcher::aarch64_simd_switcher): New function.\n+\t(aarch64_simd_switcher::~aarch64_simd_switcher): Likewise.\n+\t(handle_arm_neon_h): Hold an aarch64_simd_switcher throughout.\n+\t(aarch64_general_init_builtins): Hold an aarch64_simd_switcher\n+\twhile calling aarch64_init_simd_builtins.\n+\t* config/aarch64/aarch64-sve-builtins.cc (sve_switcher::sve_switcher)\n+\t(sve_switcher::~sve_switcher): Remove code now performed by\n+\taarch64_simd_switcher.\n+\n+2022-04-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/104897\n+\t* config/aarch64/aarch64-sve-builtins.cc\n+\t(function_resolver::infer_vector_or_tuple_type): Use error_n\n+\tfor \"%d vectors\" messages.\n+\n+2022-04-05  Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\t* omp-low.cc (lower_omp_target): Use outer context looked-up 'var' as\n+\targument to lang_hooks.decls.omp_array_data, instead of 'ovar' from\n+\tcurrent clause.\n+\n+2022-04-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/105151\n+\t* passes.def (pass_walloca): Move early instance into\n+\tpass_build_ssa_passes to make SSA form available.\n+\n+2022-04-05  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/101908\n+\t* config/i386/i386.cc (ix86_split_stlf_stall_load): New\n+\tfunction\n+\t(ix86_reorg): Call ix86_split_stlf_stall_load.\n+\t* config/i386/i386.opt (-param=x86-stlf-window-ninsns=): New\n+\tparam.\n+\n+2022-04-05  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* targhooks.cc (default_zero_call_used_regs): Attempt to group\n+\tregs that the target refuses to use in their natural modes.\n+\t(zcur_select_mode_rtx): New.\n+\t* regs.h (struct target_regs): Add x_hard_regno_max_nregs.\n+\t(hard_regno_max_nregs): Define.\n+\t* reginfo.cc (init_reg_modes_target): Set hard_regno_max_nregs.\n+\n 2022-04-04  Alex Coplan  <alex.coplan@arm.com>\n \n \t* doc/match-and-simplify.texi: Fix typos."}, {"sha": "d9e2507b6b25df13cf8197278666f5d062db064d", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d84ed6812dce4a50e64334e7cc4abdeebe41523/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d84ed6812dce4a50e64334e7cc4abdeebe41523/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=9d84ed6812dce4a50e64334e7cc4abdeebe41523", "patch": "@@ -1 +1 @@\n-20220405\n+20220406"}, {"sha": "5db636add148faefbfad5210f7cf69f8dae63f91", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d84ed6812dce4a50e64334e7cc4abdeebe41523/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d84ed6812dce4a50e64334e7cc4abdeebe41523/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9d84ed6812dce4a50e64334e7cc4abdeebe41523", "patch": "@@ -1,3 +1,17 @@\n+2022-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/103852\n+\tDR 1286\n+\t* pt.cc (do_class_deduction): Pedwarn for renaming alias in C++17.\n+\n+2022-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/101677\n+\t* name-lookup.h (struct cp_binding_level): Add requires_expression\n+\tbit-field.\n+\t* parser.cc (cp_parser_requires_expression): Set it.\n+\t(synthesize_implicit_template_parm): Check it.\n+\n 2022-04-04  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/101894"}, {"sha": "03283282c27d1fc5b595bededced8fdb6f18ef7d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d84ed6812dce4a50e64334e7cc4abdeebe41523/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d84ed6812dce4a50e64334e7cc4abdeebe41523/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9d84ed6812dce4a50e64334e7cc4abdeebe41523", "patch": "@@ -1,3 +1,21 @@\n+2022-04-05  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* trans-openmp.cc (gfc_split_omp_clauses): Fix mask for\n+\tEXEC_OMP_MASKED_TASKLOOP.\n+\n+2022-04-05  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/104210\n+\t* arith.cc (eval_intrinsic): Avoid NULL pointer dereference.\n+\t(gfc_zero_size_array): Likewise.\n+\n+2022-04-05  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/105138\n+\t* intrinsic.cc (gfc_is_intrinsic): When a symbol refers to a\n+\tRECURSIVE procedure, it cannot be an INTRINSIC.\n+\n 2022-03-30  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/100892"}, {"sha": "fff168c057b57d503519be4addb1fdd187fc8d32", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d84ed6812dce4a50e64334e7cc4abdeebe41523/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d84ed6812dce4a50e64334e7cc4abdeebe41523/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=9d84ed6812dce4a50e64334e7cc4abdeebe41523", "patch": "@@ -1,3 +1,9 @@\n+2022-04-05  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* be.po, da.po, de.po, el.po, es.po, fi.po, fr.po, hr.po, id.po,\n+\tja.po, nl.po, ru.po, sr.po, sv.po, tr.po, uk.po, vi.po, zh_CN.po,\n+\tzh_TW.po: Update.\n+\n 2022-04-04  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "3d70f27149e3ce0eea1db19730637c7b880f82ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d84ed6812dce4a50e64334e7cc4abdeebe41523/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d84ed6812dce4a50e64334e7cc4abdeebe41523/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d84ed6812dce4a50e64334e7cc4abdeebe41523", "patch": "@@ -1,3 +1,98 @@\n+2022-04-05  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/masked-taskloop.f90: New.\n+\n+2022-04-05  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/105139\n+\t* gcc.target/i386/pr105139.c: New test.\n+\n+2022-04-05  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/104210\n+\t* gfortran.dg/pr104210.f90: New test.\n+\n+2022-04-05  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/105138\n+\t* gfortran.dg/recursive_reference_3.f90: New test.\n+\n+2022-04-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/mops_4.c: New test.\n+\n+2022-04-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/103147\n+\t* gcc.target/aarch64/pr103147-1.c: New test.\n+\t* gcc.target/aarch64/pr103147-2.c: Likewise.\n+\t* gcc.target/aarch64/pr103147-3.c: Likewise.\n+\t* gcc.target/aarch64/pr103147-4.c: Likewise.\n+\t* gcc.target/aarch64/pr103147-5.c: Likewise.\n+\t* gcc.target/aarch64/pr103147-6.c: Likewise.\n+\t* gcc.target/aarch64/pr103147-7.c: Likewise.\n+\t* gcc.target/aarch64/pr103147-8.c: Likewise.\n+\t* gcc.target/aarch64/pr103147-9.c: Likewise.\n+\t* gcc.target/aarch64/pr103147-10.c: Likewise.\n+\t* g++.target/aarch64/pr103147-1.C: Likewise.\n+\t* g++.target/aarch64/pr103147-2.C: Likewise.\n+\t* g++.target/aarch64/pr103147-3.C: Likewise.\n+\t* g++.target/aarch64/pr103147-4.C: Likewise.\n+\t* g++.target/aarch64/pr103147-5.C: Likewise.\n+\t* g++.target/aarch64/pr103147-6.C: Likewise.\n+\t* g++.target/aarch64/pr103147-7.C: Likewise.\n+\t* g++.target/aarch64/pr103147-8.C: Likewise.\n+\t* g++.target/aarch64/pr103147-9.C: Likewise.\n+\t* g++.target/aarch64/pr103147-10.C: Likewise.\n+\n+2022-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/103852\n+\tDR 1286\n+\t* g++.dg/cpp1z/class-deduction-alias1.C: Expect warning.\n+\n+2022-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/101677\n+\t* g++.dg/cpp2a/concepts-pr67178.C: Adjust error.\n+\t* g++.dg/cpp2a/concepts-requires28.C: New test.\n+\n+2022-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/noexcept34.C: Allow more wording variation.\n+\n+2022-04-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/105151\n+\t* gcc.dg/gimplefe-error-14.c: New testcase.\n+\n+2022-04-05  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* gcc.target/s390/zvector/vec-double-compile.c: Expect vl\n+\t  instead of vc*.\n+\t* gcc.target/s390/zvector/vec-float-compile.c: Dito.\n+\t* gcc.target/s390/zvector/vec-signed-compile.c: Dito.\n+\t* gcc.target/s390/zvector/vec-unsigned-compile.c: Dito.\n+\n+2022-04-05  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* gcc.target/s390/ifcvt-two-insns-bool.c: Change nle to h.\n+\t* gcc.target/s390/ifcvt-two-insns-int.c: Dito.\n+\t* gcc.target/s390/ifcvt-two-insns-long.c: Dito.\n+\n+2022-04-05  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* gcc.dg/Wuse-after-free-2.c:\n+\tAdd -fno-tree-loop-distribute-patterns in order to avoid\n+\trawmemchr.\n+\n+2022-04-05  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr101908-1.c: New test.\n+\t* gcc.target/i386/pr101908-2.c: New test.\n+\t* gcc.target/i386/pr101908-3.c: New test.\n+\n 2022-04-04  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/101894"}, {"sha": "cf5bd37e2a69daddd1aacbb1c2c68ea65710d076", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d84ed6812dce4a50e64334e7cc4abdeebe41523/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d84ed6812dce4a50e64334e7cc4abdeebe41523/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=9d84ed6812dce4a50e64334e7cc4abdeebe41523", "patch": "@@ -1,3 +1,8 @@\n+2022-04-05  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* elf.c (elf_zlib_inflate): Don't skip initial aligned byte in\n+\tuncompressed block.\n+\n 2022-02-17  Ian Lance Taylor  <iant@golang.org>\n \n \t* dwarf.c (find_address_ranges): Handle skeleton units."}, {"sha": "f8091c1516dc558cd8dcd81e98ab802de5fb598e", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d84ed6812dce4a50e64334e7cc4abdeebe41523/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d84ed6812dce4a50e64334e7cc4abdeebe41523/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=9d84ed6812dce4a50e64334e7cc4abdeebe41523", "patch": "@@ -1,3 +1,7 @@\n+2022-04-05  Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/use_device_ptr-4.f90: New testcase.\n+\n 2022-04-04  Tom de Vries  <tdevries@suse.de>\n \n \t* testsuite/libgomp.fortran/examples-4/declare_target-1.f90: Use"}]}