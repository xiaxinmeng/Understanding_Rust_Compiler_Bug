{"sha": "04946c6b905572f35f06de34460d20f05203a033", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ5NDZjNmI5MDU1NzJmMzVmMDZkZTM0NDYwZDIwZjA1MjAzYTAzMw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-02-20T18:57:34Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-02-20T18:57:34Z"}, "message": "re PR fortran/48890 ([F95] Wrong length of a character component of named constant derived-type)\n\n2018-02-20  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/48890\n\tPR fortran/83823\n\t* primary.c (gfc_convert_to_structure_constructor):\n\tFor a constant string constructor, make sure the length\n\tis correct.\n\n2018-02-20  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/48890\n\tPR fortran/83823\n\t* gfortran.dg/structure_constructor_14.f90: New test.\n\nFrom-SVN: r257856", "tree": {"sha": "7520b2aad9e38ebed2f705c5a4633c769ef8849e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7520b2aad9e38ebed2f705c5a4633c769ef8849e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04946c6b905572f35f06de34460d20f05203a033", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04946c6b905572f35f06de34460d20f05203a033", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04946c6b905572f35f06de34460d20f05203a033", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04946c6b905572f35f06de34460d20f05203a033/comments", "author": null, "committer": null, "parents": [{"sha": "5a54a15e30542c3cad550e08f3fd6cfcd4969e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a54a15e30542c3cad550e08f3fd6cfcd4969e30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a54a15e30542c3cad550e08f3fd6cfcd4969e30"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "d6d66c5e3f3cef850e41dbb4e53382db57380159", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04946c6b905572f35f06de34460d20f05203a033/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04946c6b905572f35f06de34460d20f05203a033/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=04946c6b905572f35f06de34460d20f05203a033", "patch": "@@ -1,3 +1,11 @@\n+2018-02-20  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/48890\n+\tPR fortran/83823\n+\t* primary.c (gfc_convert_to_structure_constructor):\n+\tFor a constant string constructor, make sure the length\n+\tis correct.\n+\n 2018-02-19  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/83344"}, {"sha": "d889ed10ac38d7092737009ffb171286f698cac7", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04946c6b905572f35f06de34460d20f05203a033/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04946c6b905572f35f06de34460d20f05203a033/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=04946c6b905572f35f06de34460d20f05203a033", "patch": "@@ -2879,6 +2879,38 @@ gfc_convert_to_structure_constructor (gfc_expr *e, gfc_symbol *sym, gfc_expr **c\n       if (!this_comp)\n \tgoto cleanup;\n \n+      /* For a constant string constructor, make sure the length is\n+\t correct; truncate of fill with blanks if needed.  */\n+      if (this_comp->ts.type == BT_CHARACTER && !this_comp->attr.allocatable\n+\t  && this_comp->ts.u.cl && this_comp->ts.u.cl->length\n+\t  && this_comp->ts.u.cl->length->expr_type == EXPR_CONSTANT\n+\t  && actual->expr->expr_type == EXPR_CONSTANT)\n+\t{\n+\t  ptrdiff_t c, e;\n+\t  c = gfc_mpz_get_hwi (this_comp->ts.u.cl->length->value.integer);\n+\t  e = actual->expr->value.character.length;\n+\n+\t  if (c != e)\n+\t    {\n+\t      ptrdiff_t i, to;\n+\t      gfc_char_t *dest;\n+\t      dest = gfc_get_wide_string (c + 1);\n+\n+\t      to = e < c ? e : c;\n+\t      for (i = 0; i < to; i++)\n+\t\tdest[i] = actual->expr->value.character.string[i];\n+\t      \n+\t      for (i = e; i < c; i++)\n+\t\tdest[i] = ' ';\n+\n+\t      dest[c] = '\\0';\n+\t      free (actual->expr->value.character.string);\n+\n+\t      actual->expr->value.character.length = c;\n+\t      actual->expr->value.character.string = dest;\n+\t    }\n+\t}\n+\n       comp_tail->val = actual->expr;\n       if (actual->expr != NULL)\n \tcomp_tail->where = actual->expr->where;"}, {"sha": "6351dd56db771bfa05d96d17ca07809fb1452342", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04946c6b905572f35f06de34460d20f05203a033/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04946c6b905572f35f06de34460d20f05203a033/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=04946c6b905572f35f06de34460d20f05203a033", "patch": "@@ -1,3 +1,9 @@\n+2018-02-20  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/48890\n+\tPR fortran/83823\n+\t* gfortran.dg/structure_constructor_14.f90: New test.\n+\n 2018-02-20  Jeff Law  <law@redhat.com>\n \n         PR middle-end/82123"}, {"sha": "b8892063434fcd759c4d4f4434ce1dddff7f424d", "filename": "gcc/testsuite/gfortran.dg/structure_constructor_14.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04946c6b905572f35f06de34460d20f05203a033/gcc%2Ftestsuite%2Fgfortran.dg%2Fstructure_constructor_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04946c6b905572f35f06de34460d20f05203a033/gcc%2Ftestsuite%2Fgfortran.dg%2Fstructure_constructor_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstructure_constructor_14.f90?ref=04946c6b905572f35f06de34460d20f05203a033", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do  run }\n+! PR 48890, PR 83823\n+! Test fix for wrong length in parameters. Original test cases\n+! by mhp77 (a) gmx.at and Harald Anlauf.\n+\n+program gfcbug145\n+  implicit none\n+  type t_obstyp\n+    character(len=8) :: name\n+  end type t_obstyp\n+  type (t_obstyp) ,parameter :: obstyp(*)= &\n+     [ t_obstyp ('SYNOP' ), &\n+       t_obstyp ('DRIBU' ), &\n+       t_obstyp ('TEMP'  ), &\n+       t_obstyp ('RADAR' )  ]\n+  logical :: mask(size(obstyp)) = .true.\n+  character(len=100) :: line\n+  type (t_obstyp), parameter :: x = t_obstyp('asdf')\n+\n+  write(line,'(20(a8,:,\"|\"))') pack (obstyp% name, mask)\n+  if (line /= 'SYNOP   |DRIBU   |TEMP    |RADAR') STOP 1\n+  write (line,'(\"|\",A,\"|\")') x\n+  if (line /= \"|asdf    |\") STOP 1\n+end program gfcbug145"}]}