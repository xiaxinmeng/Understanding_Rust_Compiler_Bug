{"sha": "a388a7aa66fbd80bd69945b0461d69de7d94c610", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM4OGE3YWE2NmZiZDgwYmQ2OTk0NWIwNDYxZDY5ZGU3ZDk0YzYxMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-19T22:09:11Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-19T22:09:11Z"}, "message": "Fix previous change: {add,sub}qw should be {add,sub}ql.\n\nFix previous change: {add,sub}qw should be {add,sub}ql. For other uses\nof {add,sub}q don't check for address register and always use\n{add,sub}ql.\n\nFrom-SVN: r13523", "tree": {"sha": "54af9a55850ea83d2e90e62ec3f7b6227e39b1d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54af9a55850ea83d2e90e62ec3f7b6227e39b1d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a388a7aa66fbd80bd69945b0461d69de7d94c610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a388a7aa66fbd80bd69945b0461d69de7d94c610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a388a7aa66fbd80bd69945b0461d69de7d94c610", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a388a7aa66fbd80bd69945b0461d69de7d94c610/comments", "author": null, "committer": null, "parents": [{"sha": "883dc89ca676d703431db2490b72ca80c0696eb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/883dc89ca676d703431db2490b72ca80c0696eb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/883dc89ca676d703431db2490b72ca80c0696eb5"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "2244adff18b2866afad4085329781143eba7132c", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a388a7aa66fbd80bd69945b0461d69de7d94c610/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a388a7aa66fbd80bd69945b0461d69de7d94c610/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=a388a7aa66fbd80bd69945b0461d69de7d94c610", "patch": "@@ -2154,36 +2154,32 @@\n #ifndef NO_ADDSUB_Q\n       if (INTVAL (operands[2]) > 0\n \t  && INTVAL (operands[2]) <= 8)\n-\treturn (ADDRESS_REG_P (operands[0]) && !TARGET_5200\n-\t\t? \\\"addq%.w %2,%0\\\"\n-\t\t: \\\"addq%.l %2,%0\\\");\n+\treturn \\\"addq%.l %2,%0\\\";\n       if (INTVAL (operands[2]) < 0\n \t  && INTVAL (operands[2]) >= -8)\n         {\n \t  operands[2] = gen_rtx (CONST_INT, VOIDmode,\n \t\t\t         - INTVAL (operands[2]));\n-\t  return (ADDRESS_REG_P (operands[0]) && !TARGET_5200\n-\t\t  ? \\\"subq%.w %2,%0\\\"\n-\t\t  : \\\"subq%.l %2,%0\\\");\n+\t  return \\\"subq%.l %2,%0\\\";\n \t}\n-      /* On the CPU32 it is faster to use two addqw instructions to\n+      /* On the CPU32 it is faster to use two addql instructions to\n \t add a small integer (8 < N <= 16) to a register.\n-\t Likewise for subqw. */\n+\t Likewise for subql. */\n       if (TARGET_CPU32 && REG_P (operands[0]))\n \t{\n \t  if (INTVAL (operands[2]) > 8\n \t      && INTVAL (operands[2]) <= 16)\n \t    {\n \t      operands[2] = gen_rtx (CONST_INT, VOIDmode, \n \t\t\t\t      INTVAL (operands[2]) - 8);\n-\t      return \\\"addq%.w %#8,%0\\;addq%.w %2,%0\\\";\n+\t      return \\\"addq%.l %#8,%0\\;addq%.l %2,%0\\\";\n \t    }\n \t  if (INTVAL (operands[2]) < -8\n \t      && INTVAL (operands[2]) >= -16)\n \t    {\n \t      operands[2] = gen_rtx (CONST_INT, VOIDmode,\n \t\t\t\t      - INTVAL (operands[2]) - 8);\n-\t      return \\\"subq%.w %#8,%0\\;subq%.w %2,%0\\\";\n+\t      return \\\"subq%.l %#8,%0\\;subq%.l %2,%0\\\";\n \t    }\n \t}\n #endif"}]}