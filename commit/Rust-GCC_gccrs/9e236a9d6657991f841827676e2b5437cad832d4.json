{"sha": "9e236a9d6657991f841827676e2b5437cad832d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUyMzZhOWQ2NjU3OTkxZjg0MTgyNzY3NmUyYjU0MzdjYWQ4MzJkNA==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-02-24T15:47:24Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-02-24T15:47:24Z"}, "message": "re PR c++/9602 (Total confusion about template/friend/virtual/abstract)\n\n\tPR c++/9602\n\t* typeck2.c (abstract_virtuals_error): Don't check when\n\tTYPE is still template parameter dependent.\n\n\t* g++.dg/template/friend16.C: New test.\n\nFrom-SVN: r63362", "tree": {"sha": "861d7f95e4d715c36d8af56b7a637ef2010680f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/861d7f95e4d715c36d8af56b7a637ef2010680f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e236a9d6657991f841827676e2b5437cad832d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e236a9d6657991f841827676e2b5437cad832d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e236a9d6657991f841827676e2b5437cad832d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e236a9d6657991f841827676e2b5437cad832d4/comments", "author": null, "committer": null, "parents": [{"sha": "44ee6e9e621d709c5cfed564ed7f9f97cb1d086a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ee6e9e621d709c5cfed564ed7f9f97cb1d086a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44ee6e9e621d709c5cfed564ed7f9f97cb1d086a"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "cfdaac850d83756ecef0d356a55b92b8d722b7e5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e236a9d6657991f841827676e2b5437cad832d4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e236a9d6657991f841827676e2b5437cad832d4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9e236a9d6657991f841827676e2b5437cad832d4", "patch": "@@ -1,3 +1,9 @@\n+2003-02-24  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/9602\n+\t* typeck2.c (abstract_virtuals_error): Don't check when\n+\tTYPE is still template parameter dependent.\n+\n 2003-02-23  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/5333"}, {"sha": "5758bf4ae2fdb202b23f9c56457fb76bc975b91e", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e236a9d6657991f841827676e2b5437cad832d4/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e236a9d6657991f841827676e2b5437cad832d4/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=9e236a9d6657991f841827676e2b5437cad832d4", "patch": "@@ -143,6 +143,11 @@ abstract_virtuals_error (decl, type)\n        CLASSTYPE_PURE_VIRTUALS holds the inline friends.  */\n     return 0;\n \n+  if (dependent_type_p (type))\n+    /* For a dependent type, we do not yet know which functions are pure\n+       virtuals.  */\n+    return 0;\n+\n   u = CLASSTYPE_PURE_VIRTUALS (type);\n   if (decl)\n     {"}, {"sha": "42df634feaf8780d82e140102ee5c125c946effc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e236a9d6657991f841827676e2b5437cad832d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e236a9d6657991f841827676e2b5437cad832d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e236a9d6657991f841827676e2b5437cad832d4", "patch": "@@ -1,3 +1,8 @@\n+2003-02-24  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/9602\n+\t* g++.dg/template/friend16.C: New test.\n+\n 2003-02-23  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/5333"}, {"sha": "3165ed2b59d8ab404c3bd18054cdd5c87b3ffdcc", "filename": "gcc/testsuite/g++.dg/template/friend16.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e236a9d6657991f841827676e2b5437cad832d4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e236a9d6657991f841827676e2b5437cad832d4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend16.C?ref=9e236a9d6657991f841827676e2b5437cad832d4", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do compile }\n+\n+// Origin: Wolfgang Bangerth <bangerth@ticam.utexas.edu>\n+\n+// PR c++/9602: Inline friend/pure virtual tree data sharing in\n+// class template.\n+\n+template <typename T> struct X {\n+  void foo (X);\n+  friend void bar () {}\n+};\n+    \n+template <typename T>\n+void X<T>::foo (X x) {}\n+    \n+template struct X<int>;"}]}