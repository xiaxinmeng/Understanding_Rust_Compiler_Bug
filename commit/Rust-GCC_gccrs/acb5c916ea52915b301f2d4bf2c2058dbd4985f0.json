{"sha": "acb5c916ea52915b301f2d4bf2c2058dbd4985f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNiNWM5MTZlYTUyOTE1YjMwMWYyZDRiZjJjMjA1OGRiZDQ5ODVmMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-07-26T16:22:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-07-26T16:22:18Z"}, "message": "libgomp.texi: Add function keyword to a couple of Fortran interfaces...\n\n\t* libgomp.texi: Add function keyword to a couple of Fortran\n\tinterfaces, use integer instead of int for Fortran.\n\nFrom-SVN: r162540", "tree": {"sha": "ec93809cdf0c4f6c5a4567e07ea854298ef4dd7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec93809cdf0c4f6c5a4567e07ea854298ef4dd7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acb5c916ea52915b301f2d4bf2c2058dbd4985f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb5c916ea52915b301f2d4bf2c2058dbd4985f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acb5c916ea52915b301f2d4bf2c2058dbd4985f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb5c916ea52915b301f2d4bf2c2058dbd4985f0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f8ac3d7f9914527dbc0052d21326bc351f211e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f8ac3d7f9914527dbc0052d21326bc351f211e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f8ac3d7f9914527dbc0052d21326bc351f211e9"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "03cf70bc0dbb4bcb11f03713d7f06a17086197be", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acb5c916ea52915b301f2d4bf2c2058dbd4985f0/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acb5c916ea52915b301f2d4bf2c2058dbd4985f0/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=acb5c916ea52915b301f2d4bf2c2058dbd4985f0", "patch": "@@ -1,3 +1,8 @@\n+2010-07-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* libgomp.texi: Add function keyword to a couple of Fortran\n+\tinterfaces, use integer instead of int for Fortran.\n+\n 2010-07-26  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* libgomp.texi: Fix spelling and pasto problems throughout."}, {"sha": "20ffd67254220a148cc21d1c91f12361a61b5231", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acb5c916ea52915b301f2d4bf2c2058dbd4985f0/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acb5c916ea52915b301f2d4bf2c2058dbd4985f0/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=acb5c916ea52915b301f2d4bf2c2058dbd4985f0", "patch": "@@ -192,7 +192,7 @@ which enclose the calling call.\n \n @item @emph{Fortran}:\n @multitable @columnfractions .20 .80\n-@item @emph{Interface}: @tab @code{integer omp_get_active_level()}\n+@item @emph{Interface}: @tab @code{integer function omp_get_active_level()}\n @end multitable\n \n @item @emph{See also}:\n@@ -220,7 +220,7 @@ zero to @code{omp_get_level} -1 is returned; if @var{level} is\n \n @item @emph{Fortran}:\n @multitable @columnfractions .20 .80\n-@item @emph{Interface}: @tab @code{integer omp_get_ancestor_thread_num(level)}\n+@item @emph{Interface}: @tab @code{integer function omp_get_ancestor_thread_num(level)}\n @item                   @tab @code{integer level}\n @end multitable\n \n@@ -279,7 +279,7 @@ which enclose the calling call.\n \n @item @emph{Fortran}:\n @multitable @columnfractions .20 .80\n-@item @emph{Interface}: @tab @code{integer omp_level()}\n+@item @emph{Interface}: @tab @code{integer function omp_level()}\n @end multitable\n \n @item @emph{See also}:\n@@ -304,7 +304,7 @@ This function obtains the maximum allowed number of nested, active parallel regi\n \n @item @emph{Fortran}:\n @multitable @columnfractions .20 .80\n-@item @emph{Interface}: @tab @code{int omp_get_max_active_levels()}\n+@item @emph{Interface}: @tab @code{integer function omp_get_max_active_levels()}\n @end multitable\n \n @item @emph{See also}:"}]}