{"sha": "33b35c280747d60086dc2cc640a3c15239ec3e8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNiMzVjMjgwNzQ3ZDYwMDg2ZGMyY2M2NDBhM2MxNTIzOWVjM2U4ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-10-21T07:56:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-10-21T07:56:54Z"}, "message": "re PR tree-optimization/68026 (Regression in GCC-6.0.0's optimizer)\n\n2015-10-21  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/68026\n\t* tree-ssa-ccp.c (get_value_for_expr): Zero-extend mask for\n\tunsigned VARYING values.\n\n\t* gcc.dg/tree-ssa/ssa-ccp-39.c: New testcase.\n\nFrom-SVN: r229117", "tree": {"sha": "28cdc95e77a1644adafeaae0856a3b901aa4e0cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28cdc95e77a1644adafeaae0856a3b901aa4e0cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33b35c280747d60086dc2cc640a3c15239ec3e8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33b35c280747d60086dc2cc640a3c15239ec3e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33b35c280747d60086dc2cc640a3c15239ec3e8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33b35c280747d60086dc2cc640a3c15239ec3e8d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7047bc9c1613aa243357d6db7d66683e3e9e0e4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7047bc9c1613aa243357d6db7d66683e3e9e0e4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7047bc9c1613aa243357d6db7d66683e3e9e0e4d"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "20c272d9edc3f7261d85de30a0cd50369cb6ec12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b35c280747d60086dc2cc640a3c15239ec3e8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b35c280747d60086dc2cc640a3c15239ec3e8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33b35c280747d60086dc2cc640a3c15239ec3e8d", "patch": "@@ -1,3 +1,9 @@\n+2015-10-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68026\n+\t* tree-ssa-ccp.c (get_value_for_expr): Zero-extend mask for\n+\tunsigned VARYING values.\n+\n 2015-10-21  Maxim Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \t* asan.c (asan_emit_stack_protection): Don't pass local stack to"}, {"sha": "1809ddfcce380aa33ee9abdd0c2b4125160c3b2e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b35c280747d60086dc2cc640a3c15239ec3e8d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b35c280747d60086dc2cc640a3c15239ec3e8d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=33b35c280747d60086dc2cc640a3c15239ec3e8d", "patch": "@@ -1,3 +1,8 @@\n+2015-10-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68026\n+\t* gcc.dg/tree-ssa/ssa-ccp-39.c: New testcase.\n+\n 2015-10-21  Maxim Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \t* c-c++-common/ubsan/float-cast-overflow-10.c: Adjust test."}, {"sha": "21af5593f50d93c2c7166c12637ead20d4087c71", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-39.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b35c280747d60086dc2cc640a3c15239ec3e8d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-39.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b35c280747d60086dc2cc640a3c15239ec3e8d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-39.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-39.c?ref=33b35c280747d60086dc2cc640a3c15239ec3e8d", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O -fdump-tree-ccp1\" } */\n+\n+int main (void)\n+{\n+  volatile int x1 = 1;\n+  volatile int x2 = 1;\n+  int x3 = 2;\n+  int t = 1;\n+\n+  t = 3<=(x2|1|x3|x1-1U);\n+\n+  if (t == 1) {} \n+  else { __builtin_abort(); }\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"abort\" \"ccp1\" } } */"}, {"sha": "2c69178a0ae5a21831188c13d4e365e29374d85c", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b35c280747d60086dc2cc640a3c15239ec3e8d/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b35c280747d60086dc2cc640a3c15239ec3e8d/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=33b35c280747d60086dc2cc640a3c15239ec3e8d", "patch": "@@ -629,6 +629,11 @@ get_value_for_expr (tree expr, bool for_bits_p)\n       val.mask = -1;\n       val.value = NULL_TREE;\n     }\n+\n+  if (val.lattice_val == VARYING\n+      && TYPE_UNSIGNED (TREE_TYPE (expr)))\n+    val.mask = wi::zext (val.mask, TYPE_PRECISION (TREE_TYPE (expr)));\n+\n   return val;\n }\n "}]}