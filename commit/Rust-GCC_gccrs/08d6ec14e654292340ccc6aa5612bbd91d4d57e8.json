{"sha": "08d6ec14e654292340ccc6aa5612bbd91d4d57e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhkNmVjMTRlNjU0MjkyMzQwY2NjNmFhNTYxMmJiZDkxZDRkNTdlOA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-04-21T14:56:57Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-04-21T14:56:57Z"}, "message": "c++: Dependent conversion operator in concept [PR94597]\n\nWhen building the parameter mapping for an atomic constraint,\nfind_template_parameters does not spot the template parameter within the\nconversion-type-id of a dependent conversion operator, which later leads to an\nICE during substitution when looking up the missing template argument for this\nunnoticed template parameter.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/94597\n\t* pt.c (any_template_parm_r) <case IDENTIFIER_NODE>: New case.  If this\n\tis a conversion operator, visit its TREE_TYPE.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/94597\n\t* g++.dg/cpp2a/concepts-conv2.C: New test.", "tree": {"sha": "a0ebe0da9ad73b875f0ec24408d16429fe71ebe2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0ebe0da9ad73b875f0ec24408d16429fe71ebe2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08d6ec14e654292340ccc6aa5612bbd91d4d57e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08d6ec14e654292340ccc6aa5612bbd91d4d57e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08d6ec14e654292340ccc6aa5612bbd91d4d57e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08d6ec14e654292340ccc6aa5612bbd91d4d57e8/comments", "author": null, "committer": null, "parents": [{"sha": "6c0ab626113ef20ee2986cb8a102b5394aeb888a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0ab626113ef20ee2986cb8a102b5394aeb888a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c0ab626113ef20ee2986cb8a102b5394aeb888a"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "372fd08d1f907fe18b60c28d4e98232757700446", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08d6ec14e654292340ccc6aa5612bbd91d4d57e8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08d6ec14e654292340ccc6aa5612bbd91d4d57e8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=08d6ec14e654292340ccc6aa5612bbd91d4d57e8", "patch": "@@ -1,3 +1,9 @@\n+2020-04-21  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/94597\n+\t* pt.c (any_template_parm_r) <case IDENTIFIER_NODE>: New case.  If this\n+\tis a conversion operator, visit its TREE_TYPE.\n+\n 2020-04-21  Nathan Sidwell  <nathan@acm.org>\n \n \t* pt.c (tsubst_copy_and_build) [POINTER_PLUS_EXPR]: Check for"}, {"sha": "0fc5b24841f0b6779011b93e1717d52b0114981a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08d6ec14e654292340ccc6aa5612bbd91d4d57e8/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08d6ec14e654292340ccc6aa5612bbd91d4d57e8/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=08d6ec14e654292340ccc6aa5612bbd91d4d57e8", "patch": "@@ -10529,6 +10529,12 @@ any_template_parm_r (tree t, void *data)\n       }\n       break;\n \n+    case IDENTIFIER_NODE:\n+      if (IDENTIFIER_CONV_OP_P (t))\n+\t/* The conversion-type-id of a conversion operator may be dependent.  */\n+\tWALK_SUBTREE (TREE_TYPE (t));\n+      break;\n+\n     default:\n       break;\n     }"}, {"sha": "1f3fb60d6d5d2b60f481def9ec86c7f3d5297592", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08d6ec14e654292340ccc6aa5612bbd91d4d57e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08d6ec14e654292340ccc6aa5612bbd91d4d57e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08d6ec14e654292340ccc6aa5612bbd91d4d57e8", "patch": "@@ -1,3 +1,8 @@\n+2020-04-21  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/94597\n+\t* g++.dg/cpp2a/concepts-conv2.C: New test.\n+\n 2020-04-21  Duan bo  <duanbo3@huawei.com>\n \n \tPR target/94577"}, {"sha": "821042f44ee02e369ac8515a074a952c6a8c49f9", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-conv2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08d6ec14e654292340ccc6aa5612bbd91d4d57e8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-conv2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08d6ec14e654292340ccc6aa5612bbd91d4d57e8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-conv2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-conv2.C?ref=08d6ec14e654292340ccc6aa5612bbd91d4d57e8", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/94597\n+// { dg-do compile { target c++2a } }\n+\n+template <typename b, typename c> concept d = requires(b e) { e.operator c(); };\n+\n+template <typename f, typename g> requires(d<f, g>) bool equal(f, g);\n+\n+template <typename h> struct i {\n+  i(h);\n+  operator h();\n+};\n+\n+static_assert( d<i<float>, float>);\n+static_assert(!d<i<float>, int>);\n+\n+bool fun() {\n+  i a(2.0f);\n+  return equal(a, 3.0f);\n+}"}]}