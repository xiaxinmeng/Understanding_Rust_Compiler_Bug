{"sha": "e42d2d2a20f2bb59928bc895ec9f46503a1b5c73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQyZDJkMmEyMGYyYmI1OTkyOGJjODk1ZWM5ZjQ2NTAzYTFiNWM3Mw==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-07-07T07:34:40Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-09-02T06:11:53Z"}, "message": "Update hf soft-fp from glibc.\n\nlibgcc/ChangeLog\n\n\t* soft-fp/eqhf2.c: New file.\n\t* soft-fp/extendhfdf2.c: New file.\n\t* soft-fp/extendhfsf2.c: New file.\n\t* soft-fp/half.h (FP_CMP_EQ_H): New marco.\n\t* soft-fp/truncdfhf2.c: New file\n\t* soft-fp/truncsfhf2.c: New file", "tree": {"sha": "2ab9b3bbc635aa3e8f53625775be8cd98eef0196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ab9b3bbc635aa3e8f53625775be8cd98eef0196"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f482bf2af86990329b4df660f8c1eb9e094de9f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f482bf2af86990329b4df660f8c1eb9e094de9f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f482bf2af86990329b4df660f8c1eb9e094de9f9"}], "stats": {"total": 252, "additions": 252, "deletions": 0}, "files": [{"sha": "6d6634e5c542a67d608f1823c42eef579f102dd6", "filename": "libgcc/soft-fp/eqhf2.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/libgcc%2Fsoft-fp%2Feqhf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/libgcc%2Fsoft-fp%2Feqhf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Feqhf2.c?ref=e42d2d2a20f2bb59928bc895ec9f46503a1b5c73", "patch": "@@ -0,0 +1,49 @@\n+/* Software floating-point emulation.\n+   Return 0 iff a == b, 1 otherwise\n+   Copyright (C) 2021 Free Software Foundation, Inc.\n+   This file is part of the GNU C Library.\n+\n+   The GNU C Library is free software; you can redistribute it and/or\n+   modify it under the terms of the GNU Lesser General Public\n+   License as published by the Free Software Foundation; either\n+   version 2.1 of the License, or (at your option) any later version.\n+\n+   In addition to the permissions in the GNU Lesser General Public\n+   License, the Free Software Foundation gives you unlimited\n+   permission to link the compiled version of this file into\n+   combinations with other programs, and to distribute those\n+   combinations without any restriction coming from the use of this\n+   file.  (The Lesser General Public License restrictions do apply in\n+   other respects; for example, they cover modification of the file,\n+   and distribution when not linked into a combine executable.)\n+\n+   The GNU C Library is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   Lesser General Public License for more details.\n+\n+   You should have received a copy of the GNU Lesser General Public\n+   License along with the GNU C Library; if not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"soft-fp.h\"\n+#include \"half.h\"\n+\n+CMPtype\n+__eqhf2 (HFtype a, HFtype b)\n+{\n+  FP_DECL_EX;\n+  FP_DECL_H (A);\n+  FP_DECL_H (B);\n+  CMPtype r;\n+\n+  FP_INIT_EXCEPTIONS;\n+  FP_UNPACK_RAW_H (A, a);\n+  FP_UNPACK_RAW_H (B, b);\n+  FP_CMP_EQ_H (r, A, B, 1);\n+  FP_HANDLE_EXCEPTIONS;\n+\n+  return r;\n+}\n+\n+strong_alias (__eqhf2, __nehf2);"}, {"sha": "337ba791d48c78b53f0e4a8943a2580b2eae90a0", "filename": "libgcc/soft-fp/extendhfdf2.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/libgcc%2Fsoft-fp%2Fextendhfdf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/libgcc%2Fsoft-fp%2Fextendhfdf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fextendhfdf2.c?ref=e42d2d2a20f2bb59928bc895ec9f46503a1b5c73", "patch": "@@ -0,0 +1,53 @@\n+/* Software floating-point emulation.\n+   Return an IEEE half converted to IEEE double\n+   Copyright (C) 2021 Free Software Foundation, Inc.\n+   This file is part of the GNU C Library.\n+\n+   The GNU C Library is free software; you can redistribute it and/or\n+   modify it under the terms of the GNU Lesser General Public\n+   License as published by the Free Software Foundation; either\n+   version 2.1 of the License, or (at your option) any later version.\n+\n+   In addition to the permissions in the GNU Lesser General Public\n+   License, the Free Software Foundation gives you unlimited\n+   permission to link the compiled version of this file into\n+   combinations with other programs, and to distribute those\n+   combinations without any restriction coming from the use of this\n+   file.  (The Lesser General Public License restrictions do apply in\n+   other respects; for example, they cover modification of the file,\n+   and distribution when not linked into a combine executable.)\n+\n+   The GNU C Library is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   Lesser General Public License for more details.\n+\n+   You should have received a copy of the GNU Lesser General Public\n+   License along with the GNU C Library; if not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#define FP_NO_EXACT_UNDERFLOW\n+#include \"soft-fp.h\"\n+#include \"half.h\"\n+#include \"double.h\"\n+\n+DFtype\n+__extendhfdf2 (HFtype a)\n+{\n+  FP_DECL_EX;\n+  FP_DECL_H (A);\n+  FP_DECL_D (R);\n+  DFtype r;\n+\n+  FP_INIT_EXCEPTIONS;\n+  FP_UNPACK_RAW_H (A, a);\n+#if _FP_W_TYPE_SIZE < _FP_FRACBITS_D\n+  FP_EXTEND (D, H, 2, 1, R, A);\n+#else\n+  FP_EXTEND (D, H, 1, 1, R, A);\n+#endif\n+  FP_PACK_RAW_D (r, R);\n+  FP_HANDLE_EXCEPTIONS;\n+\n+  return r;\n+}"}, {"sha": "a02f46d9a993672489661b5493a2ee829be75c13", "filename": "libgcc/soft-fp/extendhfsf2.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/libgcc%2Fsoft-fp%2Fextendhfsf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/libgcc%2Fsoft-fp%2Fextendhfsf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fextendhfsf2.c?ref=e42d2d2a20f2bb59928bc895ec9f46503a1b5c73", "patch": "@@ -0,0 +1,49 @@\n+/* Software floating-point emulation.\n+   Return an IEEE half converted to IEEE single\n+   Copyright (C) 2021 Free Software Foundation, Inc.\n+   This file is part of the GNU C Library.\n+\n+   The GNU C Library is free software; you can redistribute it and/or\n+   modify it under the terms of the GNU Lesser General Public\n+   License as published by the Free Software Foundation; either\n+   version 2.1 of the License, or (at your option) any later version.\n+\n+   In addition to the permissions in the GNU Lesser General Public\n+   License, the Free Software Foundation gives you unlimited\n+   permission to link the compiled version of this file into\n+   combinations with other programs, and to distribute those\n+   combinations without any restriction coming from the use of this\n+   file.  (The Lesser General Public License restrictions do apply in\n+   other respects; for example, they cover modification of the file,\n+   and distribution when not linked into a combine executable.)\n+\n+   The GNU C Library is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   Lesser General Public License for more details.\n+\n+   You should have received a copy of the GNU Lesser General Public\n+   License along with the GNU C Library; if not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#define FP_NO_EXACT_UNDERFLOW\n+#include \"soft-fp.h\"\n+#include \"half.h\"\n+#include \"single.h\"\n+\n+SFtype\n+__extendhfsf2 (HFtype a)\n+{\n+  FP_DECL_EX;\n+  FP_DECL_H (A);\n+  FP_DECL_S (R);\n+  SFtype r;\n+\n+  FP_INIT_EXCEPTIONS;\n+  FP_UNPACK_RAW_H (A, a);\n+  FP_EXTEND (S, H, 1, 1, R, A);\n+  FP_PACK_RAW_S (r, R);\n+  FP_HANDLE_EXCEPTIONS;\n+\n+  return r;\n+}"}, {"sha": "4108f5cb3c2848c5165663cbb47ea704cc6da3c7", "filename": "libgcc/soft-fp/half.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/libgcc%2Fsoft-fp%2Fhalf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/libgcc%2Fsoft-fp%2Fhalf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fhalf.h?ref=e42d2d2a20f2bb59928bc895ec9f46503a1b5c73", "patch": "@@ -167,4 +167,5 @@ union _FP_UNION_H\n #define _FP_FRAC_HIGH_RAW_H(X)\t_FP_FRAC_HIGH_1 (X)\n #define _FP_FRAC_HIGH_DW_H(X)\t_FP_FRAC_HIGH_1 (X)\n \n+#define FP_CMP_EQ_H(r, X, Y, ex)\t_FP_CMP_EQ (H, 1, (r), X, Y, (ex))\n #endif /* !SOFT_FP_HALF_H */"}, {"sha": "8bcb27876928049995d7a2f129bdebf3bb90b314", "filename": "libgcc/soft-fp/truncdfhf2.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/libgcc%2Fsoft-fp%2Ftruncdfhf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/libgcc%2Fsoft-fp%2Ftruncdfhf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ftruncdfhf2.c?ref=e42d2d2a20f2bb59928bc895ec9f46503a1b5c73", "patch": "@@ -0,0 +1,52 @@\n+/* Software floating-point emulation.\n+   Truncate IEEE double into IEEE half.\n+   Copyright (C) 2021 Free Software Foundation, Inc.\n+   This file is part of the GNU C Library.\n+\n+   The GNU C Library is free software; you can redistribute it and/or\n+   modify it under the terms of the GNU Lesser General Public\n+   License as published by the Free Software Foundation; either\n+   version 2.1 of the License, or (at your option) any later version.\n+\n+   In addition to the permissions in the GNU Lesser General Public\n+   License, the Free Software Foundation gives you unlimited\n+   permission to link the compiled version of this file into\n+   combinations with other programs, and to distribute those\n+   combinations without any restriction coming from the use of this\n+   file.  (The Lesser General Public License restrictions do apply in\n+   other respects; for example, they cover modification of the file,\n+   and distribution when not linked into a combine executable.)\n+\n+   The GNU C Library is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   Lesser General Public License for more details.\n+\n+   You should have received a copy of the GNU Lesser General Public\n+   License along with the GNU C Library; if not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"soft-fp.h\"\n+#include \"half.h\"\n+#include \"double.h\"\n+\n+HFtype\n+__truncdfhf2 (DFtype a)\n+{\n+  FP_DECL_EX;\n+  FP_DECL_D (A);\n+  FP_DECL_H (R);\n+  HFtype r;\n+\n+  FP_INIT_ROUNDMODE;\n+  FP_UNPACK_SEMIRAW_D (A, a);\n+#if _FP_W_TYPE_SIZE < _FP_FRACBITS_D\n+  FP_TRUNC (H, D, 1, 2, R, A);\n+#else\n+  FP_TRUNC (H, D, 1, 1, R, A);\n+#endif\n+  FP_PACK_SEMIRAW_H (r, R);\n+  FP_HANDLE_EXCEPTIONS;\n+\n+  return r;\n+}"}, {"sha": "25bee29f7f51a4ce57242ce450303d95ff6c31e6", "filename": "libgcc/soft-fp/truncsfhf2.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/libgcc%2Fsoft-fp%2Ftruncsfhf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42d2d2a20f2bb59928bc895ec9f46503a1b5c73/libgcc%2Fsoft-fp%2Ftruncsfhf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ftruncsfhf2.c?ref=e42d2d2a20f2bb59928bc895ec9f46503a1b5c73", "patch": "@@ -0,0 +1,48 @@\n+/* Software floating-point emulation.\n+   Truncate IEEE single into IEEE half.\n+   Copyright (C) 2021 Free Software Foundation, Inc.\n+   This file is part of the GNU C Library.\n+\n+   The GNU C Library is free software; you can redistribute it and/or\n+   modify it under the terms of the GNU Lesser General Public\n+   License as published by the Free Software Foundation; either\n+   version 2.1 of the License, or (at your option) any later version.\n+\n+   In addition to the permissions in the GNU Lesser General Public\n+   License, the Free Software Foundation gives you unlimited\n+   permission to link the compiled version of this file into\n+   combinations with other programs, and to distribute those\n+   combinations without any restriction coming from the use of this\n+   file.  (The Lesser General Public License restrictions do apply in\n+   other respects; for example, they cover modification of the file,\n+   and distribution when not linked into a combine executable.)\n+\n+   The GNU C Library is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   Lesser General Public License for more details.\n+\n+   You should have received a copy of the GNU Lesser General Public\n+   License along with the GNU C Library; if not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"soft-fp.h\"\n+#include \"half.h\"\n+#include \"single.h\"\n+\n+HFtype\n+__truncsfhf2 (SFtype a)\n+{\n+  FP_DECL_EX;\n+  FP_DECL_S (A);\n+  FP_DECL_H (R);\n+  HFtype r;\n+\n+  FP_INIT_ROUNDMODE;\n+  FP_UNPACK_SEMIRAW_S (A, a);\n+  FP_TRUNC (H, S, 1, 1, R, A);\n+  FP_PACK_SEMIRAW_H (r, R);\n+  FP_HANDLE_EXCEPTIONS;\n+\n+  return r;\n+}"}]}