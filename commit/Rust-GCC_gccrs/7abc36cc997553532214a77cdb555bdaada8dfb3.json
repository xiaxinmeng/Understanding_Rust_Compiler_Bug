{"sha": "7abc36cc997553532214a77cdb555bdaada8dfb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FiYzM2Y2M5OTc1NTM1MzIyMTRhNzdjZGI1NTViZGFhZGE4ZGZiMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-12-20T16:32:46Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-12-20T16:32:46Z"}, "message": "[AArch64][SVE] Fix IFN_COND_FMLA movprfx alternative\n\nThis patch fixes a cut-&-pasto in the (match_dup 4) version of\n\"cond_<SVE_COND_FP_TERNARY:optab><SVE_F:mode>\".  (It's a shame\nthat there's so much cut-&-paste in these patterns, but it's hard\nto avoid without more infrastructure.)\n\n2018-12-20  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64-sve.md (*cond_<optab><mode>_4): Use\n\tsve_fmla_op rather than sve_fmad_op for the movprfx alternative.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/fmla_2.c: New test.\n\t* gcc.target/aarch64/sve/fmla_2_run.c: Likewise\n\nFrom-SVN: r267303", "tree": {"sha": "6644181605e8b42689be3e7d532fa8b08be1bbf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6644181605e8b42689be3e7d532fa8b08be1bbf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7abc36cc997553532214a77cdb555bdaada8dfb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abc36cc997553532214a77cdb555bdaada8dfb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7abc36cc997553532214a77cdb555bdaada8dfb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abc36cc997553532214a77cdb555bdaada8dfb3/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab3c292e600b31177c8ddfe1e7a1cda255d39321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab3c292e600b31177c8ddfe1e7a1cda255d39321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab3c292e600b31177c8ddfe1e7a1cda255d39321"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "7d9c5c603258bc58c82df9e422523c394686ee3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abc36cc997553532214a77cdb555bdaada8dfb3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abc36cc997553532214a77cdb555bdaada8dfb3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7abc36cc997553532214a77cdb555bdaada8dfb3", "patch": "@@ -1,3 +1,8 @@\n+2018-12-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64-sve.md (*cond_<optab><mode>_4): Use\n+\tsve_fmla_op rather than sve_fmad_op for the movprfx alternative.\n+\n 2018-12-20  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/88214"}, {"sha": "e47e3bab71c2432f0321c4e9969fcc3e3994e5ac", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abc36cc997553532214a77cdb555bdaada8dfb3/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abc36cc997553532214a77cdb555bdaada8dfb3/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=7abc36cc997553532214a77cdb555bdaada8dfb3", "patch": "@@ -3021,7 +3021,7 @@\n   \"TARGET_SVE\"\n   \"@\n    <sve_fmla_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>, %3.<Vetype>\n-   movprfx\\t%0, %4\\;<sve_fmad_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>, %3.<Vetype>\"\n+   movprfx\\t%0, %4\\;<sve_fmla_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>, %3.<Vetype>\"\n   [(set_attr \"movprfx\" \"*,yes\")]\n )\n "}, {"sha": "da6182cd269a669161e30040dd3dfe04be27f275", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abc36cc997553532214a77cdb555bdaada8dfb3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abc36cc997553532214a77cdb555bdaada8dfb3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7abc36cc997553532214a77cdb555bdaada8dfb3", "patch": "@@ -1,3 +1,8 @@\n+2018-12-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/fmla_2.c: New test.\n+\t* gcc.target/aarch64/sve/fmla_2_run.c: Likewise\n+\n 2018-12-20  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/84053"}, {"sha": "5c04bcdb3f5c42db91554bfcd0a69082c9b2a362", "filename": "gcc/testsuite/gcc.target/aarch64/sve/fmla_2.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abc36cc997553532214a77cdb555bdaada8dfb3/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ffmla_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abc36cc997553532214a77cdb555bdaada8dfb3/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ffmla_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ffmla_2.c?ref=7abc36cc997553532214a77cdb555bdaada8dfb3", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-options \"-O3\" } */\n+\n+#include <stdint.h>\n+\n+#define N 55\n+\n+void __attribute__ ((noipa))\n+f (double *restrict a, double *restrict b, double *restrict c,\n+   double *restrict d, double *restrict e, int64_t *restrict cond)\n+{\n+  for (int i = 0; i < N; ++i)\n+    {\n+      a[i] = cond[i] ? __builtin_fma (c[i], d[i], e[i]) : e[i];\n+      b[i] = cond[i] ? __builtin_fma (c[i], e[i], d[i]) : d[i];\n+    }\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tfmla\\tz[0-9]+\\.d, p[0-7]/m, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n+/* { dg-final { scan-assembler-not {\\tfmad\\t} } } */"}, {"sha": "6d9a2a3ca98f3caa9d2a07e039efb933914c607e", "filename": "gcc/testsuite/gcc.target/aarch64/sve/fmla_2_run.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abc36cc997553532214a77cdb555bdaada8dfb3/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ffmla_2_run.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abc36cc997553532214a77cdb555bdaada8dfb3/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ffmla_2_run.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ffmla_2_run.c?ref=7abc36cc997553532214a77cdb555bdaada8dfb3", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run { target aarch64_sve_hw } } */\n+/* { dg-options \"-O3\" } */\n+\n+#include \"fmla_2.c\"\n+\n+int __attribute__ ((optimize (1)))\n+main (void)\n+{\n+  double a[N], b[N], c[N], d[N], e[N];\n+  int64_t cond[N];\n+\n+  for (int i = 0; i < N; ++i)\n+    {\n+      c[i] = i + i % 5;\n+      d[i] = i + i % 7;\n+      e[i] = i + i % 9;\n+      cond[i] = i % 3;\n+    }\n+\n+  f (a, b, c, d, e, cond);\n+\n+  for (int i = 0; i < N; ++i)\n+    if (a[i] != (cond[i] ? __builtin_fma (c[i], d[i], e[i]) : e[i])\n+\t|| b[i] != (cond[i] ? __builtin_fma (c[i], e[i], d[i]) : d[i]))\n+      __builtin_abort ();\n+\n+  return 0;\n+}"}]}