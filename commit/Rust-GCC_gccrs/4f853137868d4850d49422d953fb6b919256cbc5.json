{"sha": "4f853137868d4850d49422d953fb6b919256cbc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY4NTMxMzc4NjhkNDg1MGQ0OTQyMmQ5NTNmYjZiOTE5MjU2Y2JjNQ==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@suse.com", "date": "2019-01-11T11:20:40Z"}, "committer": {"name": "Jan Beulich", "email": "jbeulich@gcc.gnu.org", "date": "2019-01-11T11:20:40Z"}, "message": "x86-64: {,V}CVT{,U}SI2Sx are ambiguous without suffix\n\nFor 64-bit these should not be emitted without suffix in AT&T mode (as\nbeing ambiguous that way); the suffixes are benign for 32-bit. For\nconsistency also omit the suffix in Intel mode for {,V}CVTSI2SxQ.\n\nThe omission has originally (prior to rev 260691) lead to wrong code\nbeing generated for the 64-bit unsigned-to-float/double conversions (as\ngas guesses an L suffix instead of the required Q one when the operand\nis in memory). In all remaining cases (being changed here) the omission\nwould \"just\" lead to warnings with future gas versions.\n\nAs a result, arrange to check for the L suffixes in 32-bit test cases.\n\nIn order for related test cases to actually test what they're supposed\nto test, add (seemingly unrelated) a few empty \"asm volatile()\".\nPresumably there are more where constant propagation voids the intended\neffect of the tests, but these are ones helping make sure the assembler\nactually still assembles correctly the output after the changes here.\n\nFrom-SVN: r267833", "tree": {"sha": "0151aeb9024ef21eaa45c032e2093a2f051d29b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0151aeb9024ef21eaa45c032e2093a2f051d29b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f853137868d4850d49422d953fb6b919256cbc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f853137868d4850d49422d953fb6b919256cbc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f853137868d4850d49422d953fb6b919256cbc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f853137868d4850d49422d953fb6b919256cbc5/comments", "author": {"login": "jbeulich", "id": 5610135, "node_id": "MDQ6VXNlcjU2MTAxMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeulich", "html_url": "https://github.com/jbeulich", "followers_url": "https://api.github.com/users/jbeulich/followers", "following_url": "https://api.github.com/users/jbeulich/following{/other_user}", "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions", "organizations_url": "https://api.github.com/users/jbeulich/orgs", "repos_url": "https://api.github.com/users/jbeulich/repos", "events_url": "https://api.github.com/users/jbeulich/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeulich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ce7e3f8e9789d9185da6d18c8b31b70185de6dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce7e3f8e9789d9185da6d18c8b31b70185de6dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ce7e3f8e9789d9185da6d18c8b31b70185de6dc"}], "stats": {"total": 69, "additions": 50, "deletions": 19}, "files": [{"sha": "080825432a64fc4c4b9af7f27b6fab5de1a18f48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -1,3 +1,11 @@\n+2019-01-11  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/i386/i386.md (rex64suffix): Add L suffix for SI.\n+\t* config/i386/sse.md (cvtusi2<ssescalarmodesuffix>32<round_name>,\n+\tsse2_cvtsi2sd): Add {l}.\n+\t(sse2_cvtsi2sdq<round_name>): Make q conditional upon AT&T\n+\tsyntax.\n+\n 2019-01-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/88785"}, {"sha": "d085e88bc61d76d86662d84e5b44cd81d99e6076", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -1163,7 +1163,7 @@\n   [(QI \"V64QI\") (HI \"V32HI\") (SI \"V16SI\") (DI \"V8DI\") (SF \"V16SF\") (DF \"V8DF\")])\n \n ;; Instruction suffix for REX 64bit operators.\n-(define_mode_attr rex64suffix [(SI \"\") (DI \"{q}\")])\n+(define_mode_attr rex64suffix [(SI \"{l}\") (DI \"{q}\")])\n (define_mode_attr rex64namesuffix [(SI \"\") (DI \"q\")])\n \n ;; This mode iterator allows :P to be used for patterns that operate on"}, {"sha": "15643fe6b11db06e7633bcae496867a57b44a9b3", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -4781,7 +4781,7 @@\n \t  (match_operand:VF_128 1 \"register_operand\" \"v\")\n \t  (const_int 1)))]\n   \"TARGET_AVX512F && <round_modev4sf_condition>\"\n-  \"vcvtusi2<ssescalarmodesuffix>\\t{%2, <round_op3>%1, %0|%0, %1<round_op3>, %2}\"\n+  \"vcvtusi2<ssescalarmodesuffix>{l}\\t{%2, <round_op3>%1, %0|%0, %1<round_op3>, %2}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<ssescalarmode>\")])\n@@ -5040,9 +5040,9 @@\n \t  (const_int 1)))]\n   \"TARGET_SSE2\"\n   \"@\n-   cvtsi2sd\\t{%2, %0|%0, %2}\n-   cvtsi2sd\\t{%2, %0|%0, %2}\n-   vcvtsi2sd\\t{%2, %1, %0|%0, %1, %2}\"\n+   cvtsi2sd{l}\\t{%2, %0|%0, %2}\n+   cvtsi2sd{l}\\t{%2, %0|%0, %2}\n+   vcvtsi2sd{l}\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"isa\" \"noavx,noavx,avx\")\n    (set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,direct,*\")\n@@ -5062,9 +5062,9 @@\n \t  (const_int 1)))]\n   \"TARGET_SSE2 && TARGET_64BIT\"\n   \"@\n-   cvtsi2sdq\\t{%2, %0|%0, %2}\n-   cvtsi2sdq\\t{%2, %0|%0, %2}\n-   vcvtsi2sdq\\t{%2, <round_op3>%1, %0|%0, %1<round_op3>, %2}\"\n+   cvtsi2sd{q}\\t{%2, %0|%0, %2}\n+   cvtsi2sd{q}\\t{%2, %0|%0, %2}\n+   vcvtsi2sd{q}\\t{%2, <round_op3>%1, %0|%0, %1<round_op3>, %2}\"\n   [(set_attr \"isa\" \"noavx,noavx,avx\")\n    (set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,direct,*\")"}, {"sha": "5fbeb1e5f5b3b668dc52cbb236b83a681d766fb8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -1,3 +1,18 @@\n+2019-01-11  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* gcc.target/i386/avx512f-vcvtsd2si-1.c,\n+\tgcc.target/i386/avx512f-vcvtss2si-1.c,\n+\tgcc.target/i386/avx512f-vcvttsd2si-1.c,\n+\tgcc.target/i386/avx512f-vcvttss2si-1.c: Permit l suffix.\n+\t* gcc.target/i386/avx512f-vcvtsi2ss-1.c,\n+\tgcc.target/i386/avx512f-vcvtusi2sd-1.c,\n+\tgcc.target/i386/avx512f-vcvtusi2ss-1.c: Expect l suffix.\n+\t* gcc.target/i386/avx512f-vcvtusi2sd-2.c,\n+\tgcc.target/i386/avx512f-vcvtusi2sd64-2.c,\n+\tgcc.target/i386/avx512f-vcvtusi2ss-2.c,\n+\tgcc.target/i386/avx512f-vcvtusi2ss64-2.c: Add asm volatile().\n+\tgcc.target/i386/pr19398.c: Permit l or q suffix.\n+\n 2019-01-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/88296"}, {"sha": "845e206e025f9151d1823fd371da70c208dbbd69", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtsd2si-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtsd2si-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtsd2si-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtsd2si-1.c?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mavx512f\" } */\n-/* { dg-final { scan-assembler-times \"vcvtsd2si\\[ \\\\t\\]+\\[^\\n\\]*\\{rn-sae\\}\\[^\\n\\]*%xmm\\[0-9\\]+.{6}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcvtsd2sil?\\[ \\\\t\\]+\\[^\\n\\]*\\{rn-sae\\}\\[^\\n\\]*%xmm\\[0-9\\]+.{6}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n #include <immintrin.h>\n \n volatile __m128d x;"}, {"sha": "8e26576ee7fe753f32878e089166b75135485449", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtsi2ss-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtsi2ss-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtsi2ss-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtsi2ss-1.c?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n-/* { dg-final { scan-assembler-times \"vcvtsi2ss\\[ \\\\t\\]+\\[^%\\n\\]*%e\\[^\\{\\n\\]*\\{rn-sae\\}\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcvtsi2ssl\\[ \\\\t\\]+\\[^%\\n\\]*%e\\[^\\{\\n\\]*\\{rn-sae\\}\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n "}, {"sha": "96289ef95c5f6e651fdef5d71a3b14453e1d2184", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtss2si-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtss2si-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtss2si-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtss2si-1.c?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mavx512f\" } */\n-/* { dg-final { scan-assembler-times \"vcvtss2si\\[ \\\\t\\]+\\[^\\n\\]*\\{rn-sae\\}\\[^\\{\\n\\]*%xmm\\[0-9\\]+.{6}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcvtss2sil?\\[ \\\\t\\]+\\[^\\n\\]*\\{rn-sae\\}\\[^\\{\\n\\]*%xmm\\[0-9\\]+.{6}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n #include <immintrin.h>\n \n volatile __m128 x;"}, {"sha": "e7f23aa7e50a9011eefc5343c7cc4a57152e2c28", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvttsd2si-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttsd2si-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttsd2si-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttsd2si-1.c?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mavx512f\" } */\n-/* { dg-final { scan-assembler-times \"vcvttsd2si\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+.{6}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vcvttsd2si\\[ \\\\t\\]+\\[^\\{\\n\\]*\\{sae\\}\\[^\\n\\]*%xmm\\[0-9\\]+.{6}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcvttsd2sil?\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+.{6}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcvttsd2sil?\\[ \\\\t\\]+\\[^\\{\\n\\]*\\{sae\\}\\[^\\n\\]*%xmm\\[0-9\\]+.{6}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n #include <immintrin.h>\n \n volatile __m128d x;"}, {"sha": "859848201a406c555e2d92e58821036beff123ed", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvttss2si-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttss2si-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttss2si-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvttss2si-1.c?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mavx512f\" } */\n-/* { dg-final { scan-assembler-times \"vcvttss2si\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+.{6}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vcvttss2si\\[ \\\\t\\]+\\[^\\{\\n\\]*\\{sae\\}\\[^\\n\\]*%xmm\\[0-9\\]+.{6}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcvttss2sil?\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+.{6}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcvttss2sil?\\[ \\\\t\\]+\\[^\\{\\n\\]*\\{sae\\}\\[^\\n\\]*%xmm\\[0-9\\]+.{6}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n #include <immintrin.h>\n \n volatile __m128 x;"}, {"sha": "16fd394af56129215a73da06901ead21a191c354", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtusi2sd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2sd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2sd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2sd-1.c?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n-/* { dg-final { scan-assembler-times \"vcvtusi2sd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcvtusi2sdl\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n "}, {"sha": "89e5f5428321a4ab418355d3a42d627aa2eb067b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtusi2sd-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2sd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2sd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2sd-2.c?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -22,7 +22,9 @@ avx512f_test (void)\n   s1.x = _mm_set_pd (-24.43, -43.35);\n   s2 = 0xFEDCA987;\n \n+  asm volatile (\"\" : \"+m\" (s2));\n   res.x = _mm_cvtu32_sd (s1.x, s2);\n+  asm volatile (\"\" : \"+m\" (s2));\n \n   compute_vcvtusi2sd (s1.a, s2, res_ref);\n "}, {"sha": "c2736b7b3ff59245e6e66f269015cad61fa02556", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtusi2sd64-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2sd64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2sd64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2sd64-2.c?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -22,7 +22,9 @@ avx512f_test (void)\n   s1.x = _mm_set_pd (-24.43, -43.35);\n   s2 = 0xFEDCBA9876543210;\n \n+  asm volatile (\"\" : \"+m\" (s2));\n   res.x = _mm_cvtu64_sd (s1.x, s2);\n+  asm volatile (\"\" : \"+m\" (s2));\n \n   compute_vcvtusi2sd (s1.a, s2, res_ref);\n "}, {"sha": "829d2ab9688fcefbd3c5c94ab449f114bc6178c3", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtusi2ss-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2ss-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2ss-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2ss-1.c?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n-/* { dg-final { scan-assembler-times \"vcvtusi2ss\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vcvtusi2ss\\[ \\\\t\\]+\\[^%\\n\\]*%e\\[^\\{\\n\\]*\\{rn-sae\\}\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcvtusi2ssl\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcvtusi2ssl\\[ \\\\t\\]+\\[^%\\n\\]*%e\\[^\\{\\n\\]*\\{rn-sae\\}\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n "}, {"sha": "6d2827d0fdd290d818f34e60ca9bf4b5370c37a7", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtusi2ss-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2ss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2ss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2ss-2.c?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -24,7 +24,9 @@ avx512f_test (void)\n   s1.x = _mm_set_ps (-24.43, 68.346, -43.35, 546.46);\n   s2 = 0xFEDCA987;\n \n+  asm volatile (\"\" : \"+m\" (s2));\n   res.x = _mm_cvtu32_ss (s1.x, s2);\n+  asm volatile (\"\" : \"+m\" (s2));\n \n   compute_vcvtusi2ss (s1.a, s2, res_ref);\n "}, {"sha": "1023e50073592f16a5457be14809dee3bdff5bf6", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vcvtusi2ss64-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2ss64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2ss64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vcvtusi2ss64-2.c?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -24,7 +24,9 @@ avx512f_test (void)\n   s1.x = _mm_set_ps (-24.43, 68.346, -43.35, 546.46);\n   s2 = 0xFEDCBA9876543210;\n \n+  asm volatile (\"\" : \"+m\" (s2));\n   res.x = _mm_cvtu64_ss (s1.x, s2);\n+  asm volatile (\"\" : \"+m\" (s2));\n \n   compute_vcvtusi2ss (s1.a, s2, res_ref);\n "}, {"sha": "c494179e300b274329936548b1aa89493e059446", "filename": "gcc/testsuite/gcc.target/i386/pr19398.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr19398.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f853137868d4850d49422d953fb6b919256cbc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr19398.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr19398.c?ref=4f853137868d4850d49422d953fb6b919256cbc5", "patch": "@@ -6,4 +6,4 @@ int test (float a)\n   return (a * a);\n }\n \n-/* { dg-final { scan-assembler-not \"cvttss2si\\[^\\\\n\\]*%xmm\" } } */\n+/* { dg-final { scan-assembler-not \"cvttss2si\\[lq\\]?\\[^\\\\n\\]*%xmm\" } } */"}]}