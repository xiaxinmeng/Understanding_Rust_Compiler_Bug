{"sha": "b9fb83059d73733742f5511f9261111db8eddbfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlmYjgzMDU5ZDczNzMzNzQyZjU1MTFmOTI2MTExMWRiOGVkZGJmZA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-06-13T18:07:53Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-06-13T18:07:53Z"}, "message": "re PR fortran/89344 (uncaught programmer error:  polymorphic variable is INTENT(IN) but assigned to without error)\n\n2019-06-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/89344\n\t* expr.c (gfc_check_vardef_context): Check for INTENT(IN) variable\n\tin SELECT TYPE construct.\n\n2019-06-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/89344\n\t * gfortran.dg/pr89344.f90: New test.\n\nFrom-SVN: r272255", "tree": {"sha": "64d2a813f0ab7c748fdff8d459e839be182f6eff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64d2a813f0ab7c748fdff8d459e839be182f6eff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9fb83059d73733742f5511f9261111db8eddbfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9fb83059d73733742f5511f9261111db8eddbfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9fb83059d73733742f5511f9261111db8eddbfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9fb83059d73733742f5511f9261111db8eddbfd/comments", "author": null, "committer": null, "parents": [{"sha": "7b6879b2db04384b7228f2aca4533be817b9efbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b6879b2db04384b7228f2aca4533be817b9efbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b6879b2db04384b7228f2aca4533be817b9efbd"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "2b2395c68c14478ad266e9a2493c46f85df7c590", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fb83059d73733742f5511f9261111db8eddbfd/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fb83059d73733742f5511f9261111db8eddbfd/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b9fb83059d73733742f5511f9261111db8eddbfd", "patch": "@@ -1,3 +1,9 @@\n+2019-06-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/89344\n+\t* expr.c (gfc_check_vardef_context): Check for INTENT(IN) variable\n+\tin SELECT TYPE construct.\n+\n 2019-06-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/88810"}, {"sha": "ec9e3288b48bd736ea92b995c90da466bd390d50", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fb83059d73733742f5511f9261111db8eddbfd/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fb83059d73733742f5511f9261111db8eddbfd/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=b9fb83059d73733742f5511f9261111db8eddbfd", "patch": "@@ -6089,7 +6089,12 @@ gfc_check_vardef_context (gfc_expr* e, bool pointer, bool alloc_obj,\n \t    check_intentin = false;\n \t}\n     }\n-  if (check_intentin && sym->attr.intent == INTENT_IN)\n+\n+  if (check_intentin\n+      && (sym->attr.intent == INTENT_IN\n+\t  || (sym->attr.select_type_temporary && sym->assoc\n+\t      && sym->assoc->target && sym->assoc->target->symtree\n+\t      && sym->assoc->target->symtree->n.sym->attr.intent == INTENT_IN)))\n     {\n       if (pointer && is_pointer)\n \t{\n@@ -6101,10 +6106,12 @@ gfc_check_vardef_context (gfc_expr* e, bool pointer, bool alloc_obj,\n \t}\n       if (!pointer && !is_pointer && !sym->attr.pointer)\n \t{\n+\t  const char *name = sym->attr.select_type_temporary\n+\t\t\t   ? sym->assoc->target->symtree->name : sym->name;\n \t  if (context)\n \t    gfc_error (\"Dummy argument %qs with INTENT(IN) in variable\"\n \t\t       \" definition context (%s) at %L\",\n-\t\t       sym->name, context, &e->where);\n+\t\t       name, context, &e->where);\n \t  return false;\n \t}\n     }"}, {"sha": "1761ae7a90bf4fea435298b848d71e4555d647af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fb83059d73733742f5511f9261111db8eddbfd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fb83059d73733742f5511f9261111db8eddbfd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b9fb83059d73733742f5511f9261111db8eddbfd", "patch": "@@ -1,3 +1,8 @@\n+2019-06-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/89344\n+\t* gfortran.dg/pr89344.f90: New test.\n+\n 2019-06-13  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* gcc.dg/darwin-minversion-1.c: Use compile rather than link/run."}, {"sha": "8749071bd25e1272bf95705dad086e4dc3e53f5e", "filename": "gcc/testsuite/gfortran.dg/pr89344.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fb83059d73733742f5511f9261111db8eddbfd/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89344.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fb83059d73733742f5511f9261111db8eddbfd/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89344.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89344.f90?ref=b9fb83059d73733742f5511f9261111db8eddbfd", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+program demo_setval\n+   call setval(value)\n+   write(*,*)'VALUE=',value\n+   contains\n+      subroutine setval(value)\n+         class(*),intent(in) :: value\n+         select type(value)\n+            type is (integer)\n+               value = 10     ! { dg-error \"in variable definition context\" }\n+            type is (real)\n+               value = 10.20  ! { dg-error \"in variable definition context\" }\n+         end select\n+      end subroutine setval\n+end program demo_setval"}]}