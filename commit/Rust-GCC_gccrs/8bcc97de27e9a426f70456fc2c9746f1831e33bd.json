{"sha": "8bcc97de27e9a426f70456fc2c9746f1831e33bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJjYzk3ZGUyN2U5YTQyNmY3MDQ1NmZjMmM5NzQ2ZjE4MzFlMzNiZA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-05-24T00:47:01Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-05-24T00:47:01Z"}, "message": "decl.c (lookup_tag): Remove code no longer needed after name-lookup improvements.\n\n\t* decl.c (lookup_tag): Remove code no longer needed after\n\tname-lookup improvements.\n\t* decl2.c (handle_class_head): Make error-recovery more robust.\n\t* friend.c (make_friend_class): Reject templated typename types.\n\t* lex.c (is_global): A template parameter isn't global.\n\t* parse.y (class_head): Robustify.\n\t* parse.c: Regenerated.\n\nFrom-SVN: r27117", "tree": {"sha": "02bba17e4f73188144bb84601929eb29185fdf4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02bba17e4f73188144bb84601929eb29185fdf4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bcc97de27e9a426f70456fc2c9746f1831e33bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bcc97de27e9a426f70456fc2c9746f1831e33bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bcc97de27e9a426f70456fc2c9746f1831e33bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bcc97de27e9a426f70456fc2c9746f1831e33bd/comments", "author": null, "committer": null, "parents": [{"sha": "480e228634d4693e5f769060cce3504c57a39edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/480e228634d4693e5f769060cce3504c57a39edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/480e228634d4693e5f769060cce3504c57a39edc"}], "stats": {"total": 868, "additions": 441, "deletions": 427}, "files": [{"sha": "cf71347a2748375c62881c8310cebf2dca136e9f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8bcc97de27e9a426f70456fc2c9746f1831e33bd", "patch": "@@ -1,3 +1,13 @@\n+1999-05-24  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl.c (lookup_tag): Remove code no longer needed after\n+\tname-lookup improvements.\n+\t* decl2.c (handle_class_head): Make error-recovery more robust.\n+\t* friend.c (make_friend_class): Reject templated typename types.\n+\t* lex.c (is_global): A template parameter isn't global.\n+\t* parse.y (class_head): Robustify.\n+\t* parse.c: Regenerated.\n+\t\n 1999-05-22  Mark Mitchell  <mark@codesourcery.com>\n \n \t* pt.c (for_each_template_parm): Walk into TYPENAME_TYPEs,"}, {"sha": "cd9955536b947c18583555b86aa716b57bc27d77", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=8bcc97de27e9a426f70456fc2c9746f1831e33bd", "patch": "@@ -5251,59 +5251,6 @@ lookup_tag (form, name, binding_level, thislevel_only)\n \t  else\n \t    return NULL_TREE;\n \t}\n-      if (current_class_type && level->level_chain->namespace_p)\n-\t{\n-\t  /* Try looking in this class's tags before heading into\n-\t     global binding level.  */\n-\t  tree context = current_class_type;\n-\t  while (context)\n-\t    {\n-\t      switch (TREE_CODE_CLASS (TREE_CODE (context)))\n-\t\t{\n-\t\ttree these_tags;\n-\t\tcase 't':\n-\t\t    these_tags = CLASSTYPE_TAGS (context);\n-\t\t    if (ANON_AGGRNAME_P (name))\n-\t\t      while (these_tags)\n-\t\t\t{\n-\t\t\t  if (TYPE_IDENTIFIER (TREE_VALUE (these_tags))\n-\t\t\t      == name)\n-\t\t\t    return TREE_VALUE (tail);\n-\t\t\t  these_tags = TREE_CHAIN (these_tags);\n-\t\t\t}\n-\t\t    else\n-\t\t      while (these_tags)\n-\t\t\t{\n-\t\t\t  if (TREE_PURPOSE (these_tags) == name)\n-\t\t\t    {\n-\t\t\t      if (TREE_CODE (TREE_VALUE (these_tags)) != form)\n-\t\t\t\t{\n-\t\t\t\t  cp_error (\"`%#D' redeclared as %C in class scope\",\n-\t\t\t\t\t    TREE_VALUE (tail), form);\n-\t\t\t\t  return NULL_TREE;\n-\t\t\t\t}\n-\t\t\t      return TREE_VALUE (tail);\n-\t\t\t    }\n-\t\t\t  these_tags = TREE_CHAIN (these_tags);\n-\t\t\t}\n-\t\t    /* If this type is not yet complete, then don't\n-\t\t       look at its context.  */\n-\t\t    if (TYPE_SIZE (context) == NULL_TREE)\n-\t\t      goto no_context;\n-\t\t    /* Go to next enclosing type, if any.  */\n-\t\t    context = DECL_CONTEXT (TYPE_MAIN_DECL (context));\n-\t\t    break;\n-\t        case 'd':\n-\t\t    context = DECL_CONTEXT (context);\n-\t\t    break;\n-\t        default:\n-\t\t    my_friendly_abort (10);\n-\t\t}\n-\t      continue;\n-\t      no_context:\n-\t      break;\n-\t    }\n-\t}\n     }\n   return NULL_TREE;\n }"}, {"sha": "9427c2c6ba4d7fcf9c7dbf797f1b8cb40ca5cf30", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=8bcc97de27e9a426f70456fc2c9746f1831e33bd", "patch": "@@ -5257,7 +5257,10 @@ handle_class_head (aggr, scope, id)\n   else \n     {\n       if (scope)\n-\tcp_error (\"`%T' does not have a nested type named `%D'\", scope, id);\n+\t{\n+\t  cp_error (\"`%T' does not have a nested type named `%D'\", scope, id);\n+\t  return error_mark_node;\n+\t}\n       else\n \tcp_error (\"no file-scope type named `%D'\", id);\n       "}, {"sha": "07cda8f1cfcf14209c897f17c781355458034b5e", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=8bcc97de27e9a426f70456fc2c9746f1831e33bd", "patch": "@@ -266,7 +266,7 @@ make_friend_class (type, friend_type)\n \t\tfriend_type);\n       return;\n     }\n-\n+  \n   if (processing_template_decl > template_class_depth (type))\n     /* If the TYPE is a template then it makes sense for it to be\n        friends with itself; this means that each instantiation is\n@@ -281,6 +281,26 @@ make_friend_class (type, friend_type)\n   else\n     is_template_friend = 0;\n \n+  if (is_template_friend \n+      && TREE_CODE (friend_type) == TYPENAME_TYPE)\n+    {\n+      /* [temp.friend]\n+\n+\t   A friend of a class or class template can be a function or\n+\t   class template, a specialization of a function template or\n+\t   class template, or an ordinary (nontemplate) function or\n+\t   class. \n+\t   \n+\t But, we're looking at something like:\n+\n+\t   template <class T> friend typename S<T>::X;\n+\n+\t which isn't any of these.  */\n+      cp_error (\"typename type `%T' declare `friend'\",\n+\t\tfriend_type);\n+      return;\n+    }\n+\n   GNU_xref_hier (type, friend_type, 0, 0, 1);\n \n   if (is_template_friend)"}, {"sha": "9d074ca726b21872367ea578380e81fa9b070600", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=8bcc97de27e9a426f70456fc2c9746f1831e33bd", "patch": "@@ -2831,6 +2831,12 @@ is_global (d)\n       case TREE_LIST: d = TREE_VALUE (d); continue;\n       default:\n         my_friendly_assert (TREE_CODE_CLASS (TREE_CODE (d)) == 'd', 980629);\n+\n+\t/* A template parameter is not really global, even though it\n+\t   has no enclosing scope.  */\n+\tif (DECL_TEMPLATE_PARM_P (d))\n+\t  return 0;\n+\n         d = CP_DECL_CONTEXT (d);\n         return TREE_CODE (d) == NAMESPACE_DECL;\n       }"}, {"sha": "a6c67aa2b553dade89057ba138142c23f98b4f4a", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 372, "deletions": 370, "changes": 742, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=8bcc97de27e9a426f70456fc2c9746f1831e33bd", "patch": "@@ -693,46 +693,46 @@ static const short yyrline[] = { 0,\n   2031,  2034,  2040,  2043,  2046,  2048,  2050,  2054,  2060,  2068,\n   2075,  2079,  2081,  2086,  2089,  2092,  2094,  2096,  2100,  2105,\n   2112,  2116,  2120,  2127,  2131,  2134,  2137,  2143,  2145,  2157,\n-  2161,  2166,  2188,  2190,  2193,  2195,  2200,  2202,  2204,  2206,\n-  2208,  2210,  2214,  2222,  2225,  2227,  2231,  2238,  2244,  2250,\n-  2256,  2266,  2272,  2276,  2283,  2311,  2321,  2327,  2330,  2333,\n-  2335,  2339,  2341,  2345,  2350,  2356,  2359,  2360,  2381,  2404,\n-  2406,  2410,  2421,  2435,  2436,  2437,  2438,  2441,  2456,  2461,\n-  2467,  2469,  2474,  2476,  2478,  2480,  2482,  2484,  2487,  2497,\n-  2504,  2529,  2535,  2538,  2541,  2543,  2554,  2559,  2562,  2567,\n-  2570,  2577,  2587,  2590,  2597,  2607,  2609,  2612,  2614,  2617,\n-  2624,  2632,  2639,  2645,  2651,  2659,  2663,  2668,  2672,  2675,\n-  2684,  2686,  2690,  2693,  2698,  2702,  2708,  2719,  2722,  2726,\n-  2730,  2738,  2743,  2749,  2752,  2754,  2756,  2762,  2764,  2773,\n-  2776,  2778,  2780,  2782,  2786,  2789,  2792,  2794,  2796,  2798,\n-  2802,  2805,  2816,  2826,  2828,  2829,  2833,  2841,  2843,  2851,\n-  2854,  2856,  2858,  2860,  2864,  2867,  2870,  2872,  2874,  2876,\n-  2880,  2883,  2886,  2888,  2890,  2892,  2894,  2901,  2905,  2910,\n-  2914,  2919,  2921,  2925,  2928,  2930,  2933,  2935,  2936,  2939,\n-  2941,  2943,  2949,  2960,  2966,  2972,  2986,  2988,  2992,  3006,\n-  3008,  3010,  3014,  3020,  3033,  3035,  3039,  3052,  3058,  3060,\n-  3061,  3062,  3070,  3075,  3084,  3085,  3089,  3092,  3098,  3104,\n-  3107,  3109,  3111,  3113,  3117,  3121,  3125,  3128,  3132,  3134,\n-  3143,  3146,  3148,  3150,  3152,  3154,  3156,  3158,  3160,  3164,\n-  3168,  3172,  3176,  3177,  3179,  3181,  3183,  3185,  3187,  3189,\n-  3191,  3193,  3201,  3203,  3204,  3205,  3208,  3214,  3216,  3221,\n-  3223,  3226,  3240,  3243,  3246,  3250,  3253,  3260,  3262,  3265,\n-  3267,  3269,  3272,  3275,  3278,  3281,  3283,  3286,  3290,  3292,\n-  3298,  3300,  3301,  3303,  3308,  3310,  3312,  3314,  3316,  3319,\n-  3320,  3322,  3325,  3326,  3329,  3329,  3332,  3332,  3335,  3335,\n-  3337,  3339,  3341,  3343,  3349,  3355,  3358,  3361,  3367,  3369,\n-  3371,  3375,  3377,  3378,  3379,  3381,  3384,  3391,  3396,  3402,\n-  3406,  3408,  3411,  3413,  3416,  3420,  3422,  3425,  3427,  3430,\n-  3447,  3453,  3461,  3463,  3465,  3469,  3472,  3473,  3481,  3485,\n-  3489,  3492,  3493,  3499,  3502,  3505,  3507,  3511,  3516,  3519,\n-  3529,  3534,  3535,  3542,  3545,  3548,  3550,  3553,  3555,  3565,\n-  3579,  3583,  3586,  3588,  3592,  3596,  3599,  3602,  3604,  3608,\n-  3610,  3617,  3624,  3627,  3631,  3635,  3639,  3645,  3649,  3654,\n-  3656,  3659,  3664,  3670,  3681,  3684,  3686,  3690,  3695,  3697,\n-  3704,  3707,  3709,  3711,  3717,  3722,  3725,  3727,  3729,  3731,\n-  3733,  3735,  3737,  3739,  3741,  3743,  3745,  3747,  3749,  3751,\n-  3753,  3755,  3757,  3759,  3761,  3763,  3765,  3767,  3769,  3771,\n-  3773,  3775,  3777,  3779,  3781,  3783,  3785,  3787,  3790,  3792\n+  2161,  2166,  2190,  2192,  2195,  2197,  2202,  2204,  2206,  2208,\n+  2210,  2212,  2216,  2224,  2227,  2229,  2233,  2240,  2246,  2252,\n+  2258,  2268,  2274,  2278,  2285,  2313,  2323,  2329,  2332,  2335,\n+  2337,  2341,  2343,  2347,  2352,  2358,  2361,  2362,  2383,  2406,\n+  2408,  2412,  2423,  2437,  2438,  2439,  2440,  2443,  2458,  2463,\n+  2469,  2471,  2476,  2478,  2480,  2482,  2484,  2486,  2489,  2499,\n+  2506,  2531,  2537,  2540,  2543,  2545,  2556,  2561,  2564,  2569,\n+  2572,  2579,  2589,  2592,  2599,  2609,  2611,  2614,  2616,  2619,\n+  2626,  2634,  2641,  2647,  2653,  2661,  2665,  2670,  2674,  2677,\n+  2686,  2688,  2692,  2695,  2700,  2704,  2710,  2721,  2724,  2728,\n+  2732,  2740,  2745,  2751,  2754,  2756,  2758,  2764,  2766,  2775,\n+  2778,  2780,  2782,  2784,  2788,  2791,  2794,  2796,  2798,  2800,\n+  2804,  2807,  2818,  2828,  2830,  2831,  2835,  2843,  2845,  2853,\n+  2856,  2858,  2860,  2862,  2866,  2869,  2872,  2874,  2876,  2878,\n+  2882,  2885,  2888,  2890,  2892,  2894,  2896,  2903,  2907,  2912,\n+  2916,  2921,  2923,  2927,  2930,  2932,  2935,  2937,  2938,  2941,\n+  2943,  2945,  2951,  2962,  2968,  2974,  2988,  2990,  2994,  3008,\n+  3010,  3012,  3016,  3022,  3035,  3037,  3041,  3054,  3060,  3062,\n+  3063,  3064,  3072,  3077,  3086,  3087,  3091,  3094,  3100,  3106,\n+  3109,  3111,  3113,  3115,  3119,  3123,  3127,  3130,  3134,  3136,\n+  3145,  3148,  3150,  3152,  3154,  3156,  3158,  3160,  3162,  3166,\n+  3170,  3174,  3178,  3179,  3181,  3183,  3185,  3187,  3189,  3191,\n+  3193,  3195,  3203,  3205,  3206,  3207,  3210,  3216,  3218,  3223,\n+  3225,  3228,  3242,  3245,  3248,  3252,  3255,  3262,  3264,  3267,\n+  3269,  3271,  3274,  3277,  3280,  3283,  3285,  3288,  3292,  3294,\n+  3300,  3302,  3303,  3305,  3310,  3312,  3314,  3316,  3318,  3321,\n+  3322,  3324,  3327,  3328,  3331,  3331,  3334,  3334,  3337,  3337,\n+  3339,  3341,  3343,  3345,  3351,  3357,  3360,  3363,  3369,  3371,\n+  3373,  3377,  3379,  3380,  3381,  3383,  3386,  3393,  3398,  3404,\n+  3408,  3410,  3413,  3415,  3418,  3422,  3424,  3427,  3429,  3432,\n+  3449,  3455,  3463,  3465,  3467,  3471,  3474,  3475,  3483,  3487,\n+  3491,  3494,  3495,  3501,  3504,  3507,  3509,  3513,  3518,  3521,\n+  3531,  3536,  3537,  3544,  3547,  3550,  3552,  3555,  3557,  3567,\n+  3581,  3585,  3588,  3590,  3594,  3598,  3601,  3604,  3606,  3610,\n+  3612,  3619,  3626,  3629,  3633,  3637,  3641,  3647,  3651,  3656,\n+  3658,  3661,  3666,  3672,  3683,  3686,  3688,  3692,  3697,  3699,\n+  3706,  3709,  3711,  3713,  3719,  3724,  3727,  3729,  3731,  3733,\n+  3735,  3737,  3739,  3741,  3743,  3745,  3747,  3749,  3751,  3753,\n+  3755,  3757,  3759,  3761,  3763,  3765,  3767,  3769,  3771,  3773,\n+  3775,  3777,  3779,  3781,  3783,  3785,  3787,  3789,  3792,  3794\n };\n #endif\n \n@@ -6397,10 +6397,12 @@ case 481:\n case 482:\n #line 2167 \"parse.y\"\n {\n-\t\t  if (yyvsp[0].ftype.new_type_flag)\n+\t\t  if (yyvsp[0].ftype.new_type_flag && yyvsp[0].ftype.t != error_mark_node)\n \t\t    pop_scope (CP_DECL_CONTEXT (TYPE_MAIN_DECL (yyvsp[0].ftype.t)));\n \t\t  yyval.ftype.new_type_flag = 0;\n-\t\t  if (TYPE_BINFO (yyvsp[0].ftype.t) == NULL_TREE)\n+\t\t  if (yyvsp[0].ftype.t == error_mark_node)\n+\t\t    yyval.ftype.t = yyvsp[0].ftype.t;\n+\t\t  else if (TYPE_BINFO (yyvsp[0].ftype.t) == NULL_TREE)\n \t\t    {\n \t\t      cp_error (\"%T is not a class type\", yyvsp[0].ftype.t);\n \t\t      yyval.ftype.t = error_mark_node;\n@@ -6417,83 +6419,83 @@ case 482:\n \t\t;\n     break;}\n case 486:\n-#line 2196 \"parse.y\"\n+#line 2198 \"parse.y\"\n { if (pedantic && !in_system_header)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 488:\n-#line 2203 \"parse.y\"\n+#line 2205 \"parse.y\"\n { error (\"storage class specifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 489:\n-#line 2205 \"parse.y\"\n+#line 2207 \"parse.y\"\n { error (\"type specifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 490:\n-#line 2207 \"parse.y\"\n+#line 2209 \"parse.y\"\n { error (\"type qualifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 491:\n-#line 2209 \"parse.y\"\n+#line 2211 \"parse.y\"\n { error (\"no body nor ';' separates two class, struct or union declarations\"); ;\n     break;}\n case 492:\n-#line 2211 \"parse.y\"\n+#line 2213 \"parse.y\"\n { yyval.ttype = build_decl_list (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 493:\n-#line 2216 \"parse.y\"\n+#line 2218 \"parse.y\"\n { \n \t\t  current_aggr = yyvsp[-1].ttype; \n \t\t  yyval.ttype = yyvsp[0].ttype; \n \t\t;\n     break;}\n case 494:\n-#line 2224 \"parse.y\"\n+#line 2226 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 495:\n-#line 2226 \"parse.y\"\n+#line 2228 \"parse.y\"\n { yyungetc ('{', 1); ;\n     break;}\n case 496:\n-#line 2228 \"parse.y\"\n+#line 2230 \"parse.y\"\n { yyungetc (':', 1); ;\n     break;}\n case 497:\n-#line 2233 \"parse.y\"\n+#line 2235 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-2].ttype;\n \t\t  yyval.ftype.t = handle_class_head (yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = 1;\n \t\t;\n     break;}\n case 498:\n-#line 2239 \"parse.y\"\n+#line 2241 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-3].ttype;\n \t\t  yyval.ftype.t = handle_class_head (yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = 1;\n \t\t;\n     break;}\n case 499:\n-#line 2245 \"parse.y\"\n+#line 2247 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-2].ttype;\n \t\t  yyval.ftype.t = handle_class_head (yyvsp[-2].ttype, NULL_TREE, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = 1;\n \t\t;\n     break;}\n case 500:\n-#line 2251 \"parse.y\"\n+#line 2253 \"parse.y\"\n { \n \t\t  current_aggr = yyvsp[-1].ttype; \n \t\t  yyval.ftype.t = yyvsp[0].ttype;\n \t\t  yyval.ftype.new_type_flag = 0;\n \t\t;\n     break;}\n case 501:\n-#line 2257 \"parse.y\"\n+#line 2259 \"parse.y\"\n { \n \t\t  current_aggr = yyvsp[-2].ttype; \n \t\t  yyval.ftype.t = yyvsp[0].ttype;\n@@ -6503,18 +6505,18 @@ case 501:\n \t\t;\n     break;}\n case 502:\n-#line 2268 \"parse.y\"\n+#line 2270 \"parse.y\"\n { \n \t\t  yyval.ftype.t = xref_tag (current_aggr, yyvsp[0].ttype, 1); \n \t\t  yyval.ftype.new_type_flag = 0;\n \t\t;\n     break;}\n case 503:\n-#line 2273 \"parse.y\"\n+#line 2275 \"parse.y\"\n { yyval.ttype = xref_tag (current_aggr, yyvsp[0].ttype, 0); ;\n     break;}\n case 504:\n-#line 2277 \"parse.y\"\n+#line 2279 \"parse.y\"\n { \n \t\t  yyval.ftype.t = yyvsp[-1].ttype;\n \t\t  yyval.ftype.new_type_flag = 0;\n@@ -6523,7 +6525,7 @@ case 504:\n \t\t;\n     break;}\n case 505:\n-#line 2285 \"parse.y\"\n+#line 2287 \"parse.y\"\n { \n \t\t  if (yyvsp[-1].ftype.t != error_mark_node)\n \t\t    {\n@@ -6550,51 +6552,51 @@ case 505:\n \t\t;\n     break;}\n case 506:\n-#line 2313 \"parse.y\"\n+#line 2315 \"parse.y\"\n { yyval.ttype = xref_tag (yyval.ttype, make_anon_name (), 0);\n \t\t  yyungetc ('{', 1); ;\n     break;}\n case 507:\n-#line 2323 \"parse.y\"\n+#line 2325 \"parse.y\"\n {\n \t\t  yyval.ftype.t = yyvsp[0].ttype;\n \t\t  yyval.ftype.new_type_flag = 0;\n \t\t;\n     break;}\n case 509:\n-#line 2332 \"parse.y\"\n+#line 2334 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 510:\n-#line 2334 \"parse.y\"\n+#line 2336 \"parse.y\"\n { yyungetc(':', 1); yyval.ttype = NULL_TREE; ;\n     break;}\n case 511:\n-#line 2336 \"parse.y\"\n+#line 2338 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 513:\n-#line 2342 \"parse.y\"\n+#line 2344 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 514:\n-#line 2347 \"parse.y\"\n+#line 2349 \"parse.y\"\n { yyval.ttype = finish_base_specifier (access_default_node, yyvsp[0].ttype,\n \t\t\t\t\t      current_aggr \n \t\t\t\t\t      == signature_type_node); ;\n     break;}\n case 515:\n-#line 2351 \"parse.y\"\n+#line 2353 \"parse.y\"\n { yyval.ttype = finish_base_specifier (yyvsp[-2].ttype, yyvsp[0].ttype, \n \t\t\t\t\t      current_aggr \n \t\t\t\t\t      == signature_type_node); ;\n     break;}\n case 516:\n-#line 2358 \"parse.y\"\n+#line 2360 \"parse.y\"\n { if (yyval.ttype != error_mark_node) yyval.ttype = TYPE_MAIN_DECL (yyvsp[0].ttype); ;\n     break;}\n case 518:\n-#line 2361 \"parse.y\"\n+#line 2363 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6617,7 +6619,7 @@ case 518:\n \t\t;\n     break;}\n case 519:\n-#line 2382 \"parse.y\"\n+#line 2384 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6640,13 +6642,13 @@ case 519:\n \t\t;\n     break;}\n case 521:\n-#line 2407 \"parse.y\"\n+#line 2409 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  yyval.ttype = access_default_virtual_node; ;\n     break;}\n case 522:\n-#line 2411 \"parse.y\"\n+#line 2413 \"parse.y\"\n {\n \t\t  if (yyvsp[-2].ttype != access_default_virtual_node)\n \t\t    error (\"multiple access specifiers\");\n@@ -6659,7 +6661,7 @@ case 522:\n \t\t;\n     break;}\n case 523:\n-#line 2422 \"parse.y\"\n+#line 2424 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  else if (yyval.ttype == access_public_node)\n@@ -6673,7 +6675,7 @@ case 523:\n \t\t;\n     break;}\n case 528:\n-#line 2443 \"parse.y\"\n+#line 2445 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6685,49 +6687,49 @@ case 528:\n                 ;\n     break;}\n case 529:\n-#line 2458 \"parse.y\"\n+#line 2460 \"parse.y\"\n { \n \t\t  finish_member_declaration (yyvsp[0].ttype);\n \t\t;\n     break;}\n case 530:\n-#line 2462 \"parse.y\"\n+#line 2464 \"parse.y\"\n { \n \t\t  finish_member_declaration (yyvsp[0].ttype);\n \t\t;\n     break;}\n case 532:\n-#line 2470 \"parse.y\"\n+#line 2472 \"parse.y\"\n { error (\"missing ';' before right brace\");\n \t\t  yyungetc ('}', 0); ;\n     break;}\n case 533:\n-#line 2475 \"parse.y\"\n+#line 2477 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 534:\n-#line 2477 \"parse.y\"\n+#line 2479 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 535:\n-#line 2479 \"parse.y\"\n+#line 2481 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 536:\n-#line 2481 \"parse.y\"\n+#line 2483 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 537:\n-#line 2483 \"parse.y\"\n+#line 2485 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 538:\n-#line 2485 \"parse.y\"\n+#line 2487 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 539:\n-#line 2488 \"parse.y\"\n+#line 2490 \"parse.y\"\n {  \n \t\t  if (yyvsp[0].ttype)\n \t\t    yyval.ttype = finish_member_template_decl (yyvsp[0].ttype);\n@@ -6739,14 +6741,14 @@ case 539:\n \t\t;\n     break;}\n case 540:\n-#line 2498 \"parse.y\"\n+#line 2500 \"parse.y\"\n { \n \t\t  yyval.ttype = finish_member_class_template (yyvsp[-1].ftype.t); \n \t\t  finish_template_decl (yyvsp[-2].ttype);\n \t\t;\n     break;}\n case 541:\n-#line 2509 \"parse.y\"\n+#line 2511 \"parse.y\"\n {\n \t\t  /* Most of the productions for component_decl only\n \t\t     allow the creation of one new member, so we call\n@@ -6769,53 +6771,53 @@ case 541:\n \t\t;\n     break;}\n case 542:\n-#line 2530 \"parse.y\"\n+#line 2532 \"parse.y\"\n { \n \t\t  if (!yyvsp[0].itype)\n \t\t    grok_x_components (yyvsp[-1].ttype);\n \t\t  yyval.ttype = NULL_TREE; \n \t\t;\n     break;}\n case 543:\n-#line 2536 \"parse.y\"\n+#line 2538 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 544:\n-#line 2539 \"parse.y\"\n+#line 2541 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 545:\n-#line 2542 \"parse.y\"\n+#line 2544 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 546:\n-#line 2544 \"parse.y\"\n+#line 2546 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 547:\n-#line 2555 \"parse.y\"\n+#line 2557 \"parse.y\"\n { tree specs, attrs;\n \t\t  split_specs_attrs (yyvsp[-4].ttype, &specs, &attrs);\n \t\t  yyval.ttype = grokfield (yyvsp[-3].ttype, specs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, attrs)); ;\n     break;}\n case 548:\n-#line 2560 \"parse.y\"\n+#line 2562 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 549:\n-#line 2563 \"parse.y\"\n+#line 2565 \"parse.y\"\n { yyval.ttype = do_class_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 550:\n-#line 2569 \"parse.y\"\n+#line 2571 \"parse.y\"\n { yyval.itype = 0; ;\n     break;}\n case 551:\n-#line 2571 \"parse.y\"\n+#line 2573 \"parse.y\"\n { \n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n \t\t    yyvsp[0].ttype = finish_member_template_decl (yyvsp[0].ttype);\n@@ -6824,7 +6826,7 @@ case 551:\n \t\t;\n     break;}\n case 552:\n-#line 2578 \"parse.y\"\n+#line 2580 \"parse.y\"\n { \n \t\t  check_multiple_declarators ();\n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n@@ -6834,11 +6836,11 @@ case 552:\n \t\t;\n     break;}\n case 553:\n-#line 2589 \"parse.y\"\n+#line 2591 \"parse.y\"\n { yyval.itype = 0; ;\n     break;}\n case 554:\n-#line 2591 \"parse.y\"\n+#line 2593 \"parse.y\"\n { \n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n \t\t    yyvsp[0].ttype = finish_member_template_decl (yyvsp[0].ttype);\n@@ -6847,7 +6849,7 @@ case 554:\n \t\t;\n     break;}\n case 555:\n-#line 2598 \"parse.y\"\n+#line 2600 \"parse.y\"\n { \n \t\t  check_multiple_declarators ();\n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n@@ -6857,102 +6859,102 @@ case 555:\n \t\t;\n     break;}\n case 560:\n-#line 2619 \"parse.y\"\n+#line 2621 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 561:\n-#line 2625 \"parse.y\"\n+#line 2627 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 562:\n-#line 2634 \"parse.y\"\n+#line 2636 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 563:\n-#line 2640 \"parse.y\"\n+#line 2642 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 564:\n-#line 2646 \"parse.y\"\n+#line 2648 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 565:\n-#line 2652 \"parse.y\"\n+#line 2654 \"parse.y\"\n { split_specs_attrs (yyvsp[-3].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-3].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 566:\n-#line 2661 \"parse.y\"\n+#line 2663 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 567:\n-#line 2664 \"parse.y\"\n+#line 2666 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 568:\n-#line 2670 \"parse.y\"\n+#line 2672 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 569:\n-#line 2673 \"parse.y\"\n+#line 2675 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 570:\n-#line 2676 \"parse.y\"\n+#line 2678 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 572:\n-#line 2687 \"parse.y\"\n+#line 2689 \"parse.y\"\n { TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 573:\n-#line 2692 \"parse.y\"\n+#line 2694 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, NULL_TREE, current_enum_type); ;\n     break;}\n case 574:\n-#line 2694 \"parse.y\"\n+#line 2696 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, yyvsp[0].ttype, current_enum_type); ;\n     break;}\n case 575:\n-#line 2700 \"parse.y\"\n+#line 2702 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 576:\n-#line 2703 \"parse.y\"\n+#line 2705 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[0].ftype.t, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 577:\n-#line 2710 \"parse.y\"\n+#line 2712 \"parse.y\"\n {\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids array dimensions with parenthesized type in new\");\n@@ -6962,101 +6964,101 @@ case 577:\n \t\t;\n     break;}\n case 578:\n-#line 2721 \"parse.y\"\n+#line 2723 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 579:\n-#line 2723 \"parse.y\"\n+#line 2725 \"parse.y\"\n { yyval.ttype = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 580:\n-#line 2728 \"parse.y\"\n+#line 2730 \"parse.y\"\n { yyval.ftype.t = hash_tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 581:\n-#line 2731 \"parse.y\"\n+#line 2733 \"parse.y\"\n { yyval.ftype.t = hash_tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ftype.t); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 582:\n-#line 2740 \"parse.y\"\n+#line 2742 \"parse.y\"\n { yyval.itype = suspend_momentary (); ;\n     break;}\n case 583:\n-#line 2745 \"parse.y\"\n+#line 2747 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 584:\n-#line 2751 \"parse.y\"\n+#line 2753 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 585:\n-#line 2753 \"parse.y\"\n+#line 2755 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 586:\n-#line 2755 \"parse.y\"\n+#line 2757 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = empty_parms (); ;\n     break;}\n case 587:\n-#line 2757 \"parse.y\"\n+#line 2759 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = NULL_TREE; ;\n     break;}\n case 589:\n-#line 2765 \"parse.y\"\n+#line 2767 \"parse.y\"\n {\n \t\t  /* Provide support for '(' attributes '*' declarator ')'\n \t\t     etc */\n \t\t  yyval.ttype = decl_tree_cons (yyvsp[-1].ttype, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 590:\n-#line 2775 \"parse.y\"\n+#line 2777 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 591:\n-#line 2777 \"parse.y\"\n+#line 2779 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 592:\n-#line 2779 \"parse.y\"\n+#line 2781 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 593:\n-#line 2781 \"parse.y\"\n+#line 2783 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 594:\n-#line 2783 \"parse.y\"\n+#line 2785 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 596:\n-#line 2791 \"parse.y\"\n+#line 2793 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 597:\n-#line 2793 \"parse.y\"\n+#line 2795 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 598:\n-#line 2795 \"parse.y\"\n+#line 2797 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 599:\n-#line 2797 \"parse.y\"\n+#line 2799 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 600:\n-#line 2799 \"parse.y\"\n+#line 2801 \"parse.y\"\n { push_nested_class (yyvsp[-1].ttype, 3);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype);\n \t\t  TREE_COMPLEXITY (yyval.ttype) = current_class_depth; ;\n     break;}\n case 602:\n-#line 2807 \"parse.y\"\n+#line 2809 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -7068,7 +7070,7 @@ case 602:\n \t\t;\n     break;}\n case 603:\n-#line 2817 \"parse.y\"\n+#line 2819 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -7078,138 +7080,138 @@ case 603:\n \t\t;\n     break;}\n case 606:\n-#line 2830 \"parse.y\"\n+#line 2832 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 607:\n-#line 2835 \"parse.y\"\n+#line 2837 \"parse.y\"\n { yyval.ttype = get_type_decl (yyvsp[0].ttype); ;\n     break;}\n case 609:\n-#line 2844 \"parse.y\"\n+#line 2846 \"parse.y\"\n {\n \t\t  /* Provide support for '(' attributes '*' declarator ')'\n \t\t     etc */\n \t\t  yyval.ttype = decl_tree_cons (yyvsp[-1].ttype, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 610:\n-#line 2853 \"parse.y\"\n+#line 2855 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 611:\n-#line 2855 \"parse.y\"\n+#line 2857 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 612:\n-#line 2857 \"parse.y\"\n+#line 2859 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 613:\n-#line 2859 \"parse.y\"\n+#line 2861 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 614:\n-#line 2861 \"parse.y\"\n+#line 2863 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 616:\n-#line 2869 \"parse.y\"\n+#line 2871 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 617:\n-#line 2871 \"parse.y\"\n+#line 2873 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 618:\n-#line 2873 \"parse.y\"\n+#line 2875 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 619:\n-#line 2875 \"parse.y\"\n+#line 2877 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 620:\n-#line 2877 \"parse.y\"\n+#line 2879 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 622:\n-#line 2885 \"parse.y\"\n+#line 2887 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 623:\n-#line 2887 \"parse.y\"\n+#line 2889 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 624:\n-#line 2889 \"parse.y\"\n+#line 2891 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 625:\n-#line 2891 \"parse.y\"\n+#line 2893 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 626:\n-#line 2893 \"parse.y\"\n+#line 2895 \"parse.y\"\n { enter_scope_of (yyvsp[0].ttype); ;\n     break;}\n case 627:\n-#line 2895 \"parse.y\"\n+#line 2897 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  enter_scope_of (yyval.ttype);\n \t\t;\n     break;}\n case 628:\n-#line 2903 \"parse.y\"\n+#line 2905 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 629:\n-#line 2906 \"parse.y\"\n+#line 2908 \"parse.y\"\n { got_scope = NULL_TREE;\n  \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 630:\n-#line 2912 \"parse.y\"\n+#line 2914 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 631:\n-#line 2915 \"parse.y\"\n+#line 2917 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 633:\n-#line 2922 \"parse.y\"\n+#line 2924 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 634:\n-#line 2927 \"parse.y\"\n+#line 2929 \"parse.y\"\n { yyval.ttype = build_functional_cast (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 635:\n-#line 2929 \"parse.y\"\n+#line 2931 \"parse.y\"\n { yyval.ttype = reparse_decl_as_expr (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 636:\n-#line 2931 \"parse.y\"\n+#line 2933 \"parse.y\"\n { yyval.ttype = reparse_absdcl_as_expr (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 641:\n-#line 2942 \"parse.y\"\n+#line 2944 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 642:\n-#line 2944 \"parse.y\"\n+#line 2946 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 643:\n-#line 2951 \"parse.y\"\n+#line 2953 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -7221,31 +7223,31 @@ case 643:\n \t\t;\n     break;}\n case 644:\n-#line 2961 \"parse.y\"\n+#line 2963 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = TREE_TYPE (yyval.ttype);\n \t\t;\n     break;}\n case 645:\n-#line 2967 \"parse.y\"\n+#line 2969 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 646:\n-#line 2973 \"parse.y\"\n+#line 2975 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyvsp[-1].ttype)); ;\n     break;}\n case 648:\n-#line 2989 \"parse.y\"\n+#line 2991 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 649:\n-#line 2994 \"parse.y\"\n+#line 2996 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -7260,26 +7262,26 @@ case 649:\n \t\t;\n     break;}\n case 650:\n-#line 3007 \"parse.y\"\n+#line 3009 \"parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[0].ttype); ;\n     break;}\n case 651:\n-#line 3009 \"parse.y\"\n+#line 3011 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 652:\n-#line 3011 \"parse.y\"\n+#line 3013 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 653:\n-#line 3016 \"parse.y\"\n+#line 3018 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t;\n     break;}\n case 654:\n-#line 3021 \"parse.y\"\n+#line 3023 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -7294,15 +7296,15 @@ case 654:\n \t\t;\n     break;}\n case 655:\n-#line 3034 \"parse.y\"\n+#line 3036 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 656:\n-#line 3036 \"parse.y\"\n+#line 3038 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 657:\n-#line 3041 \"parse.y\"\n+#line 3043 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyvsp[-1].ttype = lastiddecl;\n@@ -7316,31 +7318,31 @@ case 657:\n \t\t;\n     break;}\n case 658:\n-#line 3053 \"parse.y\"\n+#line 3055 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 659:\n-#line 3059 \"parse.y\"\n+#line 3061 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype)); ;\n     break;}\n case 662:\n-#line 3063 \"parse.y\"\n+#line 3065 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 663:\n-#line 3072 \"parse.y\"\n+#line 3074 \"parse.y\"\n { yyval.ttype = build_min_nt (TEMPLATE_ID_EXPR, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 664:\n-#line 3077 \"parse.y\"\n+#line 3079 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -7350,156 +7352,156 @@ case 664:\n \t\t;\n     break;}\n case 666:\n-#line 3086 \"parse.y\"\n+#line 3088 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 667:\n-#line 3091 \"parse.y\"\n+#line 3093 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 668:\n-#line 3093 \"parse.y\"\n+#line 3095 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; got_scope = NULL_TREE; ;\n     break;}\n case 669:\n-#line 3100 \"parse.y\"\n+#line 3102 \"parse.y\"\n { got_scope = void_type_node; ;\n     break;}\n case 670:\n-#line 3106 \"parse.y\"\n+#line 3108 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 671:\n-#line 3108 \"parse.y\"\n+#line 3110 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 672:\n-#line 3110 \"parse.y\"\n+#line 3112 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 673:\n-#line 3112 \"parse.y\"\n+#line 3114 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 674:\n-#line 3114 \"parse.y\"\n+#line 3116 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 675:\n-#line 3118 \"parse.y\"\n+#line 3120 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 677:\n-#line 3127 \"parse.y\"\n+#line 3129 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 678:\n-#line 3129 \"parse.y\"\n+#line 3131 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 680:\n-#line 3135 \"parse.y\"\n+#line 3137 \"parse.y\"\n {\n \t\t  /* Provide support for '(' attributes '*' declarator ')'\n \t\t     etc */\n \t\t  yyval.ttype = decl_tree_cons (yyvsp[-1].ttype, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 681:\n-#line 3145 \"parse.y\"\n+#line 3147 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 682:\n-#line 3147 \"parse.y\"\n+#line 3149 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 683:\n-#line 3149 \"parse.y\"\n+#line 3151 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 684:\n-#line 3151 \"parse.y\"\n+#line 3153 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 685:\n-#line 3153 \"parse.y\"\n+#line 3155 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 686:\n-#line 3155 \"parse.y\"\n+#line 3157 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 687:\n-#line 3157 \"parse.y\"\n+#line 3159 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 688:\n-#line 3159 \"parse.y\"\n+#line 3161 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 689:\n-#line 3161 \"parse.y\"\n+#line 3163 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 690:\n-#line 3165 \"parse.y\"\n+#line 3167 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 692:\n-#line 3174 \"parse.y\"\n+#line 3176 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 694:\n-#line 3178 \"parse.y\"\n+#line 3180 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 695:\n-#line 3180 \"parse.y\"\n+#line 3182 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, empty_parms (), yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 696:\n-#line 3182 \"parse.y\"\n+#line 3184 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 697:\n-#line 3184 \"parse.y\"\n+#line 3186 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 698:\n-#line 3186 \"parse.y\"\n+#line 3188 \"parse.y\"\n { yyval.ttype = make_call_declarator (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 699:\n-#line 3188 \"parse.y\"\n+#line 3190 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 700:\n-#line 3190 \"parse.y\"\n+#line 3192 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 701:\n-#line 3192 \"parse.y\"\n+#line 3194 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 702:\n-#line 3194 \"parse.y\"\n+#line 3196 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 709:\n-#line 3217 \"parse.y\"\n+#line 3219 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids label declarations\"); ;\n     break;}\n case 712:\n-#line 3228 \"parse.y\"\n+#line 3230 \"parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -7510,266 +7512,266 @@ case 712:\n \t\t;\n     break;}\n case 713:\n-#line 3242 \"parse.y\"\n+#line 3244 \"parse.y\"\n {;\n     break;}\n case 715:\n-#line 3248 \"parse.y\"\n+#line 3250 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 716:\n-#line 3250 \"parse.y\"\n+#line 3252 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 717:\n-#line 3255 \"parse.y\"\n+#line 3257 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_if_stmt ();\n \t\t  cond_stmt_keyword = \"if\";\n \t\t;\n     break;}\n case 718:\n-#line 3260 \"parse.y\"\n+#line 3262 \"parse.y\"\n { finish_if_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 719:\n-#line 3262 \"parse.y\"\n+#line 3264 \"parse.y\"\n { yyval.ttype = finish_then_clause (yyvsp[-3].ttype); ;\n     break;}\n case 721:\n-#line 3267 \"parse.y\"\n+#line 3269 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 722:\n-#line 3269 \"parse.y\"\n+#line 3271 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 723:\n-#line 3274 \"parse.y\"\n+#line 3276 \"parse.y\"\n {;\n     break;}\n case 725:\n-#line 3280 \"parse.y\"\n+#line 3282 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 726:\n-#line 3282 \"parse.y\"\n+#line 3284 \"parse.y\"\n { finish_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 727:\n-#line 3284 \"parse.y\"\n+#line 3286 \"parse.y\"\n { begin_else_clause (); ;\n     break;}\n case 728:\n-#line 3286 \"parse.y\"\n+#line 3288 \"parse.y\"\n { \n \t\t  finish_else_clause (yyvsp[-3].ttype); \n \t\t  finish_if_stmt ();\n \t\t;\n     break;}\n case 729:\n-#line 3291 \"parse.y\"\n+#line 3293 \"parse.y\"\n { finish_if_stmt (); ;\n     break;}\n case 730:\n-#line 3293 \"parse.y\"\n+#line 3295 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_while_stmt ();\n \t\t  cond_stmt_keyword = \"while\";\n \t\t;\n     break;}\n case 731:\n-#line 3298 \"parse.y\"\n+#line 3300 \"parse.y\"\n { finish_while_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 732:\n-#line 3300 \"parse.y\"\n+#line 3302 \"parse.y\"\n { finish_while_stmt (yyvsp[-3].ttype); ;\n     break;}\n case 733:\n-#line 3302 \"parse.y\"\n+#line 3304 \"parse.y\"\n { yyval.ttype = begin_do_stmt (); ;\n     break;}\n case 734:\n-#line 3304 \"parse.y\"\n+#line 3306 \"parse.y\"\n {\n \t\t  finish_do_body (yyvsp[-2].ttype);\n \t\t  cond_stmt_keyword = \"do\";\n \t\t;\n     break;}\n case 735:\n-#line 3309 \"parse.y\"\n+#line 3311 \"parse.y\"\n { finish_do_stmt (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 736:\n-#line 3311 \"parse.y\"\n+#line 3313 \"parse.y\"\n { yyval.ttype = begin_for_stmt (); ;\n     break;}\n case 737:\n-#line 3313 \"parse.y\"\n+#line 3315 \"parse.y\"\n { finish_for_init_stmt (yyvsp[-2].ttype); ;\n     break;}\n case 738:\n-#line 3315 \"parse.y\"\n+#line 3317 \"parse.y\"\n { finish_for_cond (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 739:\n-#line 3317 \"parse.y\"\n+#line 3319 \"parse.y\"\n { finish_for_expr (yyvsp[-1].ttype, yyvsp[-8].ttype); ;\n     break;}\n case 740:\n-#line 3319 \"parse.y\"\n+#line 3321 \"parse.y\"\n { finish_for_stmt (yyvsp[-3].ttype, yyvsp[-10].ttype); ;\n     break;}\n case 741:\n-#line 3321 \"parse.y\"\n+#line 3323 \"parse.y\"\n { begin_switch_stmt (); ;\n     break;}\n case 742:\n-#line 3323 \"parse.y\"\n+#line 3325 \"parse.y\"\n { yyval.ttype = finish_switch_cond (yyvsp[-1].ttype); ;\n     break;}\n case 743:\n-#line 3325 \"parse.y\"\n+#line 3327 \"parse.y\"\n { finish_switch_stmt (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 744:\n-#line 3327 \"parse.y\"\n+#line 3329 \"parse.y\"\n { finish_case_label (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 746:\n-#line 3330 \"parse.y\"\n+#line 3332 \"parse.y\"\n { finish_case_label (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 748:\n-#line 3333 \"parse.y\"\n+#line 3335 \"parse.y\"\n { finish_case_label (NULL_TREE, NULL_TREE); ;\n     break;}\n case 750:\n-#line 3336 \"parse.y\"\n+#line 3338 \"parse.y\"\n { finish_break_stmt (); ;\n     break;}\n case 751:\n-#line 3338 \"parse.y\"\n+#line 3340 \"parse.y\"\n { finish_continue_stmt (); ;\n     break;}\n case 752:\n-#line 3340 \"parse.y\"\n+#line 3342 \"parse.y\"\n { finish_return_stmt (NULL_TREE); ;\n     break;}\n case 753:\n-#line 3342 \"parse.y\"\n+#line 3344 \"parse.y\"\n { finish_return_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 754:\n-#line 3344 \"parse.y\"\n+#line 3346 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 755:\n-#line 3350 \"parse.y\"\n+#line 3352 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 756:\n-#line 3356 \"parse.y\"\n+#line 3358 \"parse.y\"\n { finish_asm_stmt (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 757:\n-#line 3360 \"parse.y\"\n+#line 3362 \"parse.y\"\n { finish_asm_stmt (yyvsp[-10].ttype, yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 758:\n-#line 3362 \"parse.y\"\n+#line 3364 \"parse.y\"\n { \n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids computed gotos\");\n \t\t  finish_goto_stmt (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 759:\n-#line 3368 \"parse.y\"\n+#line 3370 \"parse.y\"\n { finish_goto_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 760:\n-#line 3370 \"parse.y\"\n+#line 3372 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 761:\n-#line 3372 \"parse.y\"\n+#line 3374 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0);\n \t\t  finish_stmt (); ;\n     break;}\n case 762:\n-#line 3376 \"parse.y\"\n+#line 3378 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 765:\n-#line 3380 \"parse.y\"\n+#line 3382 \"parse.y\"\n { do_local_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 767:\n-#line 3386 \"parse.y\"\n+#line 3388 \"parse.y\"\n {\n \t\t  if (! current_function_parms_stored)\n \t\t    store_parm_decls ();\n \t\t  expand_start_early_try_stmts ();\n \t\t;\n     break;}\n case 768:\n-#line 3392 \"parse.y\"\n+#line 3394 \"parse.y\"\n { \n                   expand_start_all_catch (); \n                 ;\n     break;}\n case 769:\n-#line 3396 \"parse.y\"\n+#line 3398 \"parse.y\"\n {\n \t\t  expand_end_all_catch ();\n \t\t  yyval.itype = yyvsp[-3].itype;\n \t\t;\n     break;}\n case 770:\n-#line 3404 \"parse.y\"\n+#line 3406 \"parse.y\"\n { yyval.ttype = begin_try_block (); ;\n     break;}\n case 771:\n-#line 3406 \"parse.y\"\n+#line 3408 \"parse.y\"\n { finish_try_block (yyvsp[-1].ttype); ;\n     break;}\n case 772:\n-#line 3408 \"parse.y\"\n+#line 3410 \"parse.y\"\n { finish_handler_sequence (yyvsp[-3].ttype); ;\n     break;}\n case 775:\n-#line 3418 \"parse.y\"\n+#line 3420 \"parse.y\"\n { yyval.ttype = begin_handler(); ;\n     break;}\n case 776:\n-#line 3420 \"parse.y\"\n+#line 3422 \"parse.y\"\n { finish_handler_parms (yyvsp[-1].ttype); ;\n     break;}\n case 777:\n-#line 3422 \"parse.y\"\n+#line 3424 \"parse.y\"\n { finish_handler (yyvsp[-3].ttype); ;\n     break;}\n case 780:\n-#line 3432 \"parse.y\"\n+#line 3434 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 781:\n-#line 3448 \"parse.y\"\n+#line 3450 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 782:\n-#line 3455 \"parse.y\"\n+#line 3457 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -7778,98 +7780,98 @@ case 782:\n \t\t;\n     break;}\n case 783:\n-#line 3462 \"parse.y\"\n+#line 3464 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 784:\n-#line 3464 \"parse.y\"\n+#line 3466 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 785:\n-#line 3466 \"parse.y\"\n+#line 3468 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 786:\n-#line 3471 \"parse.y\"\n+#line 3473 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 788:\n-#line 3474 \"parse.y\"\n+#line 3476 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 789:\n-#line 3483 \"parse.y\"\n+#line 3485 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 790:\n-#line 3486 \"parse.y\"\n+#line 3488 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 791:\n-#line 3491 \"parse.y\"\n+#line 3493 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 793:\n-#line 3494 \"parse.y\"\n+#line 3496 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 794:\n-#line 3501 \"parse.y\"\n+#line 3503 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 797:\n-#line 3508 \"parse.y\"\n+#line 3510 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 798:\n-#line 3513 \"parse.y\"\n+#line 3515 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 799:\n-#line 3518 \"parse.y\"\n+#line 3520 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 800:\n-#line 3520 \"parse.y\"\n+#line 3522 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 801:\n-#line 3531 \"parse.y\"\n+#line 3533 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 803:\n-#line 3536 \"parse.y\"\n+#line 3538 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE, yyvsp[0].ftype.t), 0);\n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 804:\n-#line 3544 \"parse.y\"\n+#line 3546 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyval.ttype, 0); ;\n     break;}\n case 805:\n-#line 3546 \"parse.y\"\n+#line 3548 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 806:\n-#line 3549 \"parse.y\"\n+#line 3551 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 807:\n-#line 3551 \"parse.y\"\n+#line 3553 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE,\n \t\t\t\t\t\t\t yyvsp[-1].ftype.t), 1); ;\n     break;}\n case 808:\n-#line 3554 \"parse.y\"\n+#line 3556 \"parse.y\"\n { yyval.ttype = finish_parmlist (NULL_TREE, 1); ;\n     break;}\n case 809:\n-#line 3556 \"parse.y\"\n+#line 3558 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7881,7 +7883,7 @@ case 809:\n \t\t;\n     break;}\n case 810:\n-#line 3566 \"parse.y\"\n+#line 3568 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7894,99 +7896,99 @@ case 810:\n \t\t;\n     break;}\n case 811:\n-#line 3581 \"parse.y\"\n+#line 3583 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 812:\n-#line 3583 \"parse.y\"\n+#line 3585 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 815:\n-#line 3594 \"parse.y\"\n+#line 3596 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 816:\n-#line 3597 \"parse.y\"\n+#line 3599 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 817:\n-#line 3600 \"parse.y\"\n+#line 3602 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 818:\n-#line 3603 \"parse.y\"\n+#line 3605 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 819:\n-#line 3605 \"parse.y\"\n+#line 3607 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 821:\n-#line 3611 \"parse.y\"\n+#line 3613 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 822:\n-#line 3621 \"parse.y\"\n+#line 3623 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 823:\n-#line 3625 \"parse.y\"\n+#line 3627 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 824:\n-#line 3628 \"parse.y\"\n+#line 3630 \"parse.y\"\n { yyval.ftype.t = build_tree_list (build_decl_list (NULL_TREE, yyvsp[-1].ftype.t),\n \t\t\t\t\t  yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 825:\n-#line 3632 \"parse.y\"\n+#line 3634 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 826:\n-#line 3636 \"parse.y\"\n+#line 3638 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 827:\n-#line 3640 \"parse.y\"\n+#line 3642 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 828:\n-#line 3647 \"parse.y\"\n+#line 3649 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 829:\n-#line 3650 \"parse.y\"\n+#line 3652 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 832:\n-#line 3661 \"parse.y\"\n+#line 3663 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 833:\n-#line 3666 \"parse.y\"\n+#line 3668 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 834:\n-#line 3671 \"parse.y\"\n+#line 3673 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -7997,188 +7999,188 @@ case 834:\n \t\t;\n     break;}\n case 835:\n-#line 3683 \"parse.y\"\n+#line 3685 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 836:\n-#line 3685 \"parse.y\"\n+#line 3687 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 837:\n-#line 3687 \"parse.y\"\n+#line 3689 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 838:\n-#line 3692 \"parse.y\"\n+#line 3694 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 840:\n-#line 3698 \"parse.y\"\n+#line 3700 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 841:\n-#line 3706 \"parse.y\"\n+#line 3708 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 842:\n-#line 3708 \"parse.y\"\n+#line 3710 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 843:\n-#line 3710 \"parse.y\"\n+#line 3712 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 844:\n-#line 3712 \"parse.y\"\n+#line 3714 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 845:\n-#line 3719 \"parse.y\"\n+#line 3721 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 846:\n-#line 3724 \"parse.y\"\n+#line 3726 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 847:\n-#line 3726 \"parse.y\"\n+#line 3728 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 848:\n-#line 3728 \"parse.y\"\n+#line 3730 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 849:\n-#line 3730 \"parse.y\"\n+#line 3732 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 850:\n-#line 3732 \"parse.y\"\n+#line 3734 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 851:\n-#line 3734 \"parse.y\"\n+#line 3736 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 852:\n-#line 3736 \"parse.y\"\n+#line 3738 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 853:\n-#line 3738 \"parse.y\"\n+#line 3740 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 854:\n-#line 3740 \"parse.y\"\n+#line 3742 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 855:\n-#line 3742 \"parse.y\"\n+#line 3744 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 856:\n-#line 3744 \"parse.y\"\n+#line 3746 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 857:\n-#line 3746 \"parse.y\"\n+#line 3748 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 858:\n-#line 3748 \"parse.y\"\n+#line 3750 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 859:\n-#line 3750 \"parse.y\"\n+#line 3752 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 860:\n-#line 3752 \"parse.y\"\n+#line 3754 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 861:\n-#line 3754 \"parse.y\"\n+#line 3756 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 862:\n-#line 3756 \"parse.y\"\n+#line 3758 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 863:\n-#line 3758 \"parse.y\"\n+#line 3760 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 864:\n-#line 3760 \"parse.y\"\n+#line 3762 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 865:\n-#line 3762 \"parse.y\"\n+#line 3764 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 866:\n-#line 3764 \"parse.y\"\n+#line 3766 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 867:\n-#line 3766 \"parse.y\"\n+#line 3768 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 868:\n-#line 3768 \"parse.y\"\n+#line 3770 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 869:\n-#line 3770 \"parse.y\"\n+#line 3772 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 870:\n-#line 3772 \"parse.y\"\n+#line 3774 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 871:\n-#line 3774 \"parse.y\"\n+#line 3776 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 872:\n-#line 3776 \"parse.y\"\n+#line 3778 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 873:\n-#line 3778 \"parse.y\"\n+#line 3780 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 874:\n-#line 3780 \"parse.y\"\n+#line 3782 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 875:\n-#line 3782 \"parse.y\"\n+#line 3784 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 876:\n-#line 3784 \"parse.y\"\n+#line 3786 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 877:\n-#line 3786 \"parse.y\"\n+#line 3788 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 878:\n-#line 3788 \"parse.y\"\n+#line 3790 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 879:\n-#line 3791 \"parse.y\"\n+#line 3793 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 880:\n-#line 3793 \"parse.y\"\n+#line 3795 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n@@ -8379,7 +8381,7 @@ case 880:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 3796 \"parse.y\"\n+#line 3798 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "9201ad02090307164bd45b4b210f151d773c9cd8", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=8bcc97de27e9a426f70456fc2c9746f1831e33bd", "patch": "@@ -2165,10 +2165,12 @@ structsp:\n \t\t}\n \t| class_head  %prec EMPTY\n \t\t{\n-\t\t  if ($1.new_type_flag)\n+\t\t  if ($1.new_type_flag && $1.t != error_mark_node)\n \t\t    pop_scope (CP_DECL_CONTEXT (TYPE_MAIN_DECL ($1.t)));\n \t\t  $$.new_type_flag = 0;\n-\t\t  if (TYPE_BINFO ($1.t) == NULL_TREE)\n+\t\t  if ($1.t == error_mark_node)\n+\t\t    $$.t = $1.t;\n+\t\t  else if (TYPE_BINFO ($1.t) == NULL_TREE)\n \t\t    {\n \t\t      cp_error (\"%T is not a class type\", $1.t);\n \t\t      $$.t = error_mark_node;"}, {"sha": "e324491e4b11c756a43d6604609cec7764b9eb11", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash43.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash43.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bcc97de27e9a426f70456fc2c9746f1831e33bd/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash43.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash43.C?ref=8bcc97de27e9a426f70456fc2c9746f1831e33bd", "patch": "@@ -0,0 +1,24 @@\n+// Build don't link:\n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+\n+template <int T>\n+struct S {\n+  struct X {};\n+  struct Y {};\n+\n+  template <int U>\n+  friend struct S<U>::X; // ERROR - typename as friend\n+\n+  template <int U>\n+  friend typename S<U>::Y; // ERROR - typename as friend\n+};\n+\n+struct T {\n+  template <int T>\n+  friend struct S<T>::X; // ERROR - typename as friend\n+};\n+\n+struct U {\n+  template <int T>\n+  friend typename S<T>::X; // ERROR - typename as friend\n+};"}]}