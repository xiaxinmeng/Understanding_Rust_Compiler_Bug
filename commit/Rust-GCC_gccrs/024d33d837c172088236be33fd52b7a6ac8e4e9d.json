{"sha": "024d33d837c172088236be33fd52b7a6ac8e4e9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI0ZDMzZDgzN2MxNzIwODgyMzZiZTMzZmQ1MmI3YTZhYzhlNGU5ZA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2015-03-02T11:11:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-03-02T11:11:01Z"}, "message": "exp_ch9.adb (Build_Corresponding_Record): Propagate type invariants to the corresponding record type.\n\n2015-03-02  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch9.adb (Build_Corresponding_Record): Propagate type\n\tinvariants to the corresponding record type.\n\t* exp_disp.ad[sb] (Set_DT_Position_Value): New subprogram\n\twhich sets the value of the DTC_Entity associated with a given\n\tprimitive of a tagged type and propagates the value to the\n\twrapped subprogram.\n\t(Set_DTC_Entity_Value): Propagate the DTC\n\tvalue to the wrapped entity.\n\t* sem_ch13.adb (Build_Invariant_Procedure): Append the code\n\tassociated with invariants of progenitors.\n\t* sem_ch3.adb (Build_Derived_Record_Type): Inherit type invariants\n\tof parents and progenitors.\n\t(Process_Full_View): Check hidden inheritance of class-wide type\n\tinvariants.\n\t* sem_ch7.adb (Analyze_Package_Specification): Do not generate\n\tthe invariant procedure for interface types; build the invariant\n\tprocedure for tagged types inheriting invariants from their\n\tprogenitors.\n\t* sem_prag.adb (Pragma_Invariant) Allow invariants in interface\n\ttypes but do not build their invariant procedure since their\n\tinvariants will be propagated to the invariant procedure of\n\ttypes covering the interface.\n\t* exp_ch6.adb, exp_disp.adb, sem_ch3.adb, sem_ch7.adb,\n\tsem_ch8.adb, sem_disp.adb: Replace all calls to Set_DT_Position\n\tby calls to Set_DT_Position_Value.\n\nFrom-SVN: r221113", "tree": {"sha": "b4a9f096a4089af6ac6688f769059f5ac21a541f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4a9f096a4089af6ac6688f769059f5ac21a541f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/024d33d837c172088236be33fd52b7a6ac8e4e9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/024d33d837c172088236be33fd52b7a6ac8e4e9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/024d33d837c172088236be33fd52b7a6ac8e4e9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/024d33d837c172088236be33fd52b7a6ac8e4e9d/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c76aa3f9f6a59ad56dcf3bce8197f4ac53242dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c76aa3f9f6a59ad56dcf3bce8197f4ac53242dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c76aa3f9f6a59ad56dcf3bce8197f4ac53242dc"}], "stats": {"total": 265, "additions": 223, "deletions": 42}, "files": [{"sha": "d05d5c41a9a4e20feb74a46c79ac4495c1777868", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=024d33d837c172088236be33fd52b7a6ac8e4e9d", "patch": "@@ -1,3 +1,31 @@\n+2015-03-02  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch9.adb (Build_Corresponding_Record): Propagate type\n+\tinvariants to the corresponding record type.\n+\t* exp_disp.ad[sb] (Set_DT_Position_Value): New subprogram\n+\twhich sets the value of the DTC_Entity associated with a given\n+\tprimitive of a tagged type and propagates the value to the\n+\twrapped subprogram.\n+\t(Set_DTC_Entity_Value): Propagate the DTC\n+\tvalue to the wrapped entity.\n+\t* sem_ch13.adb (Build_Invariant_Procedure): Append the code\n+\tassociated with invariants of progenitors.\n+\t* sem_ch3.adb (Build_Derived_Record_Type): Inherit type invariants\n+\tof parents and progenitors.\n+\t(Process_Full_View): Check hidden inheritance of class-wide type\n+\tinvariants.\n+\t* sem_ch7.adb (Analyze_Package_Specification): Do not generate\n+\tthe invariant procedure for interface types; build the invariant\n+\tprocedure for tagged types inheriting invariants from their\n+\tprogenitors.\n+\t* sem_prag.adb (Pragma_Invariant) Allow invariants in interface\n+\ttypes but do not build their invariant procedure since their\n+\tinvariants will be propagated to the invariant procedure of\n+\ttypes covering the interface.\n+\t* exp_ch6.adb, exp_disp.adb, sem_ch3.adb, sem_ch7.adb,\n+\tsem_ch8.adb, sem_disp.adb: Replace all calls to Set_DT_Position\n+\tby calls to Set_DT_Position_Value.\n+\n 2015-03-02  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_attr.adb (Analyze_Attribute): Factor out heavily indented"}, {"sha": "4210968c0ceec6139a7723a5115a1e5da973d7fc", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=024d33d837c172088236be33fd52b7a6ac8e4e9d", "patch": "@@ -671,7 +671,7 @@ package body Exp_Ch6 is\n               and then Is_Hidden (Par_Op)\n               and then Type_Conformant (Prim_Op, Subp)\n             then\n-               Set_DT_Position (Subp, DT_Position (Prim_Op));\n+               Set_DT_Position_Value (Subp, DT_Position (Prim_Op));\n             end if;\n \n             Next_Elmt (Op_Elmt);"}, {"sha": "9fa05009dbdc43b4af4c88c7883bd11ad1b958f3", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=024d33d837c172088236be33fd52b7a6ac8e4e9d", "patch": "@@ -1240,6 +1240,12 @@ package body Exp_Ch9 is\n       Set_Stored_Constraint             (Rec_Ent, No_Elist);\n       Cdecls := New_List;\n \n+      --  Propagate type invariants to the corresponding record type\n+\n+      Set_Has_Invariants                (Rec_Ent, Has_Invariants (Ctyp));\n+      Set_Has_Inheritable_Invariants    (Rec_Ent,\n+        Has_Inheritable_Invariants (Ctyp));\n+\n       --  Use discriminals to create list of discriminants for record, and\n       --  create new discriminals for use in default expressions, etc. It is\n       --  worth noting that a task discriminant gives rise to 5 entities;"}, {"sha": "e8fb0897fa6692fba4f3ab149b05ba8e557db03c", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 43, "deletions": 13, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=024d33d837c172088236be33fd52b7a6ac8e4e9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,7 +64,6 @@ with Stringt;  use Stringt;\n with SCIL_LL;  use SCIL_LL;\n with Targparm; use Targparm;\n with Tbuild;   use Tbuild;\n-with Uintp;    use Uintp;\n \n package body Exp_Disp is\n \n@@ -8046,7 +8045,7 @@ package body Exp_Disp is\n          --  way we ensure that the final position of all the primitives is\n          --  established by the following stages of this algorithm.\n \n-         Set_DT_Position (Prim, No_Uint);\n+         Set_DT_Position_Value (Prim, No_Uint);\n \n          Next_Elmt (Prim_Elmt);\n       end loop;\n@@ -8104,8 +8103,9 @@ package body Exp_Disp is\n                      if Chars (Node (Op_Elmt_2)) = Chars (Parent_Subp)\n                        and then Type_Conformant (Prim_Op, Node (Op_Elmt_2))\n                      then\n-                        Set_DT_Position (Prim_Op, DT_Position (Parent_Subp));\n-                        Set_DT_Position (Node (Op_Elmt_2),\n+                        Set_DT_Position_Value (Prim_Op,\n+                          DT_Position (Parent_Subp));\n+                        Set_DT_Position_Value (Node (Op_Elmt_2),\n                           DT_Position (Parent_Subp));\n                         Set_Fixed_Prim (UI_To_Int (DT_Position (Prim_Op)));\n \n@@ -8163,10 +8163,11 @@ package body Exp_Disp is\n \n             if In_Predef_Prims_DT (Prim) then\n                if Is_Predefined_Dispatching_Operation (Prim) then\n-                  Set_DT_Position (Prim, Default_Prim_Op_Position (Prim));\n+                  Set_DT_Position_Value (Prim,\n+                    Default_Prim_Op_Position (Prim));\n \n                else pragma Assert (Present (Alias (Prim)));\n-                  Set_DT_Position (Prim,\n+                  Set_DT_Position_Value (Prim,\n                     Default_Prim_Op_Position (Ultimate_Alias (Prim)));\n                end if;\n \n@@ -8181,12 +8182,12 @@ package body Exp_Disp is\n                  and then Present (DTC_Entity (Interface_Alias (Prim))));\n \n                E := Interface_Alias (Prim);\n-               Set_DT_Position (Prim, DT_Position (E));\n+               Set_DT_Position_Value (Prim, DT_Position (E));\n \n                pragma Assert\n                  (DT_Position (Alias (Prim)) = No_Uint\n                     or else DT_Position (Alias (Prim)) = DT_Position (E));\n-               Set_DT_Position (Alias (Prim), DT_Position (E));\n+               Set_DT_Position_Value (Alias (Prim), DT_Position (E));\n                Set_Fixed_Prim (UI_To_Int (DT_Position (Prim)));\n \n             --  Overriding primitives must use the same entry as the\n@@ -8202,7 +8203,7 @@ package body Exp_Disp is\n               and then Present (DTC_Entity (Alias (Prim)))\n             then\n                E := Alias (Prim);\n-               Set_DT_Position (Prim, DT_Position (E));\n+               Set_DT_Position_Value (Prim, DT_Position (E));\n \n                if not Is_Predefined_Dispatching_Alias (E) then\n                   Set_Fixed_Prim (UI_To_Int (DT_Position (E)));\n@@ -8239,7 +8240,7 @@ package body Exp_Disp is\n                   exit when not Fixed_Prim (Nb_Prim);\n                end loop;\n \n-               Set_DT_Position (Prim, UI_From_Int (Nb_Prim));\n+               Set_DT_Position_Value (Prim, UI_From_Int (Nb_Prim));\n                Set_Fixed_Prim (Nb_Prim);\n             end if;\n \n@@ -8268,14 +8269,14 @@ package body Exp_Disp is\n                   Use_Full_View => True)\n             then\n                pragma Assert (DT_Position (Alias (Prim)) /= No_Uint);\n-               Set_DT_Position (Prim, DT_Position (Alias (Prim)));\n+               Set_DT_Position_Value (Prim, DT_Position (Alias (Prim)));\n \n             --  Otherwise it will be placed in the secondary DT\n \n             else\n                pragma Assert\n                  (DT_Position (Interface_Alias (Prim)) /= No_Uint);\n-               Set_DT_Position (Prim,\n+               Set_DT_Position_Value (Prim,\n                  DT_Position (Interface_Alias (Prim)));\n             end if;\n          end if;\n@@ -8713,6 +8714,25 @@ package body Exp_Disp is\n       end if;\n    end Set_CPP_Constructors;\n \n+   ---------------------------\n+   -- Set_DT_Position_Value --\n+   ---------------------------\n+\n+   procedure Set_DT_Position_Value (Prim : Entity_Id; Value : Uint) is\n+   begin\n+      Set_DT_Position (Prim, Value);\n+\n+      --  Propagate the value to the wrapped subprogram (if one is present)\n+\n+      if Ekind_In (Prim, E_Function, E_Procedure)\n+        and then Is_Primitive_Wrapper (Prim)\n+        and then Present (Wrapped_Entity (Prim))\n+        and then Is_Dispatching_Operation (Wrapped_Entity (Prim))\n+      then\n+         Set_DT_Position (Wrapped_Entity (Prim), Value);\n+      end if;\n+   end Set_DT_Position_Value;\n+\n    --------------------------\n    -- Set_DTC_Entity_Value --\n    --------------------------\n@@ -8734,6 +8754,16 @@ package body Exp_Disp is\n          Set_DTC_Entity (Prim,\n            First_Tag_Component (Tagged_Type));\n       end if;\n+\n+      --  Propagate the value to the wrapped subprogram (if one is present)\n+\n+      if Ekind_In (Prim, E_Function, E_Procedure)\n+        and then Is_Primitive_Wrapper (Prim)\n+        and then Present (Wrapped_Entity (Prim))\n+        and then Is_Dispatching_Operation (Wrapped_Entity (Prim))\n+      then\n+         Set_DTC_Entity (Wrapped_Entity (Prim), DTC_Entity (Prim));\n+      end if;\n    end Set_DTC_Entity_Value;\n \n    -----------------"}, {"sha": "9a364660b338cddff4643fd23ee5ae58fc223f0e", "filename": "gcc/ada/exp_disp.ads", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fexp_disp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fexp_disp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.ads?ref=024d33d837c172088236be33fd52b7a6ac8e4e9d", "patch": "@@ -4,9 +4,9 @@\n --                                                                          --\n --                             E X P _ D I S P                              --\n --                                                                          --\n---                                 S p e c                                  --\n+--                                 GS p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,6 +27,7 @@\n --  dispatching expansion.\n \n with Types; use Types;\n+with Uintp; use Uintp;\n \n package Exp_Disp is\n \n@@ -379,11 +380,14 @@ package Exp_Disp is\n    --  target object in its first argument; such implicit argument is explicit\n    --  in the IP procedures built here.\n \n-   procedure Set_DTC_Entity_Value\n-     (Tagged_Type : Entity_Id;\n-      Prim        : Entity_Id);\n+   procedure Set_DT_Position_Value (Prim  : Entity_Id; Value : Uint);\n+   --  Set the position of a dispatching primitive its dispatch table. For\n+   --  subprogram wrappers propagate the value to the wrapped subprogram.\n+\n+   procedure Set_DTC_Entity_Value (Tagged_Type : Entity_Id; Prim : Entity_Id);\n    --  Set the definite value of the DTC_Entity value associated with a given\n-   --  primitive of a tagged type.\n+   --  primitive of a tagged type. For subprogram wrappers propagat the value\n+   --  to the wrapped subprogram.\n \n    procedure Write_DT (Typ : Entity_Id);\n    pragma Export (Ada, Write_DT);"}, {"sha": "5883e4c5e92d328c708b0ffe6127b47eb369efb3", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=024d33d837c172088236be33fd52b7a6ac8e4e9d", "patch": "@@ -7966,6 +7966,30 @@ package body Sem_Ch13 is\n          end loop;\n       end;\n \n+      --  Add invariants of progenitors\n+\n+      if Is_Tagged_Type (Typ) and then not Is_Interface (Typ) then\n+         declare\n+            Ifaces_List : Elist_Id;\n+            AI          : Elmt_Id;\n+            Iface       : Entity_Id;\n+\n+         begin\n+            Collect_Interfaces (Typ, Ifaces_List);\n+\n+            AI := First_Elmt (Ifaces_List);\n+            while Present (AI) loop\n+               Iface := Node (AI);\n+\n+               if not Is_Ancestor (Iface, Typ, Use_Full_View => True) then\n+                  Add_Invariants (Iface, Inherit => True);\n+               end if;\n+\n+               Next_Elmt (AI);\n+            end loop;\n+         end;\n+      end if;\n+\n       --  Build the procedure if we generated at least one Check pragma\n \n       if Stmts /= No_List then"}, {"sha": "681e47cfd89ae8c6d280302f37edba62cded6a97", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 60, "deletions": 2, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=024d33d837c172088236be33fd52b7a6ac8e4e9d", "patch": "@@ -8640,6 +8640,36 @@ package body Sem_Ch3 is\n                   end;\n                end if;\n \n+               --  Propagate inherited invariant information of parents\n+               --  and progenitors\n+\n+               if Ada_Version >= Ada_2012\n+                 and then not Is_Interface (Derived_Type)\n+               then\n+                  if Has_Inheritable_Invariants (Parent_Type) then\n+                     Set_Has_Invariants (Derived_Type);\n+                     Set_Has_Inheritable_Invariants (Derived_Type);\n+\n+                  elsif not Is_Empty_Elmt_List (Ifaces_List) then\n+                     declare\n+                        AI : Elmt_Id;\n+\n+                     begin\n+                        AI := First_Elmt (Ifaces_List);\n+                        while Present (AI) loop\n+                           if Has_Inheritable_Invariants (Node (AI)) then\n+                              Set_Has_Invariants (Derived_Type);\n+                              Set_Has_Inheritable_Invariants (Derived_Type);\n+\n+                              exit;\n+                           end if;\n+\n+                           Next_Elmt (AI);\n+                        end loop;\n+                     end;\n+                  end if;\n+               end if;\n+\n                --  A type extension is automatically Ghost when one of its\n                --  progenitors is Ghost (SPARK RM 6.9(9)). This property is\n                --  also inherited when the parent type is Ghost, but this is\n@@ -14811,7 +14841,7 @@ package body Sem_Ch3 is\n \n          if Present (DTC_Entity (Actual_Subp)) then\n             Set_DTC_Entity (New_Subp, DTC_Entity (Actual_Subp));\n-            Set_DT_Position (New_Subp, DT_Position (Actual_Subp));\n+            Set_DT_Position_Value (New_Subp, DT_Position (Actual_Subp));\n          end if;\n       end if;\n \n@@ -19681,7 +19711,7 @@ package body Sem_Ch3 is\n                         if not Is_Dispatching_Operation (Prim) then\n                            Append_Elmt (Prim, Full_List);\n                            Set_Is_Dispatching_Operation (Prim, True);\n-                           Set_DT_Position (Prim, No_Uint);\n+                           Set_DT_Position_Value (Prim, No_Uint);\n                         end if;\n \n                      elsif Is_Dispatching_Operation (Prim)\n@@ -19837,6 +19867,34 @@ package body Sem_Ch3 is\n          Set_Has_Inheritable_Invariants (Full_T);\n       end if;\n \n+      --  Check hidden inheritance of class-wide type invariants\n+\n+      if Ada_Version >= Ada_2012\n+        and then not Has_Inheritable_Invariants (Full_T)\n+        and then In_Private_Part (Current_Scope)\n+        and then Has_Interfaces (Full_T)\n+      then\n+         declare\n+            Ifaces : Elist_Id;\n+            AI     : Elmt_Id;\n+\n+         begin\n+            Collect_Interfaces (Full_T, Ifaces, Exclude_Parents => True);\n+\n+            AI := First_Elmt (Ifaces);\n+            while Present (AI) loop\n+               if Has_Inheritable_Invariants (Node (AI)) then\n+                  Error_Msg_N\n+                    (\"hidden inheritance of class-wide type invariants \" &\n+                     \"not allowed\", N);\n+                  exit;\n+               end if;\n+\n+               Next_Elmt (AI);\n+            end loop;\n+         end;\n+      end if;\n+\n       --  Propagate predicates to full type, and predicate function if already\n       --  defined. It is not clear that this can actually happen? the partial\n       --  view cannot be frozen yet, and the predicate function has not been"}, {"sha": "8af1f346ebccac1158abc27c626d8b9e0d8c16c8", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 33, "deletions": 14, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=024d33d837c172088236be33fd52b7a6ac8e4e9d", "patch": "@@ -1482,7 +1482,7 @@ package body Sem_Ch7 is\n             end if;\n \n             --  If invariants are present, build the invariant procedure for a\n-            --  private type, but not any of its subtypes.\n+            --  private type, but not any of its subtypes or interface types.\n \n             if Has_Invariants (E) then\n                if Ekind (E) = E_Private_Subtype then\n@@ -1665,23 +1665,42 @@ package body Sem_Ch7 is\n          if Is_Type (E)\n            and then Has_Private_Declaration (E)\n            and then Nkind (Parent (E)) = N_Full_Type_Declaration\n-           and then Has_Aspects (Parent (E))\n          then\n             declare\n-               ASN : Node_Id;\n+               IP_Built : Boolean := False;\n \n             begin\n-               ASN := First (Aspect_Specifications (Parent (E)));\n-               while Present (ASN) loop\n-                  if Nam_In (Chars (Identifier (ASN)), Name_Invariant,\n-                                                       Name_Type_Invariant)\n-                  then\n-                     Build_Invariant_Procedure (E, N);\n-                     exit;\n-                  end if;\n+               if Has_Aspects (Parent (E)) then\n+                  declare\n+                     ASN : Node_Id;\n+\n+                  begin\n+                     ASN := First (Aspect_Specifications (Parent (E)));\n+                     while Present (ASN) loop\n+                        if Nam_In (Chars (Identifier (ASN)),\n+                             Name_Invariant,\n+                             Name_Type_Invariant)\n+                        then\n+                           Build_Invariant_Procedure (E, N);\n+                           IP_Built := True;\n+                           exit;\n+                        end if;\n \n-                  Next (ASN);\n-               end loop;\n+                        Next (ASN);\n+                     end loop;\n+                  end;\n+               end if;\n+\n+               --  Invariants may have been inherited from progenitors\n+\n+               if not IP_Built\n+                 and then Has_Interfaces (E)\n+                 and then Has_Inheritable_Invariants (E)\n+                 and then not Is_Interface (E)\n+                 and then not Is_Class_Wide_Type (E)\n+               then\n+                  Build_Invariant_Procedure (E, N);\n+               end if;\n             end;\n          end if;\n \n@@ -1987,7 +2006,7 @@ package body Sem_Ch7 is\n                        and then Present (DTC_Entity (Alias (Prim_Op)))\n                      then\n                         Set_DTC_Entity_Value (E, New_Op);\n-                        Set_DT_Position (New_Op,\n+                        Set_DT_Position_Value (New_Op,\n                           DT_Position (Alias (Prim_Op)));\n                      end if;\n "}, {"sha": "b86e1514efcf93d4f86b8b61cb89c6d175ab17f3", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=024d33d837c172088236be33fd52b7a6ac8e4e9d", "patch": "@@ -28,6 +28,7 @@ with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n with Errout;   use Errout;\n+with Exp_Disp; use Exp_Disp;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n with Fname;    use Fname;\n@@ -3261,7 +3262,7 @@ package body Sem_Ch8 is\n \n                      if Present (DTC_Entity (Old_S)) then\n                         Set_DTC_Entity  (New_S, DTC_Entity (Old_S));\n-                        Set_DT_Position (New_S, DT_Position (Old_S));\n+                        Set_DT_Position_Value (New_S, DT_Position (Old_S));\n                      end if;\n                   end if;\n                end;"}, {"sha": "bc36c27cb4bebf5a12046dd8b5509aae7cf95eda", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=024d33d837c172088236be33fd52b7a6ac8e4e9d", "patch": "@@ -1122,7 +1122,7 @@ package body Sem_Disp is\n \n                      if Present (DTC_Entity (Old_Subp)) then\n                         Set_DTC_Entity (Subp, DTC_Entity (Old_Subp));\n-                        Set_DT_Position (Subp, DT_Position (Old_Subp));\n+                        Set_DT_Position_Value (Subp, DT_Position (Old_Subp));\n \n                         if not Restriction_Active (No_Dispatching_Calls) then\n                            if Building_Static_DT (Tagged_Type) then\n@@ -1419,7 +1419,7 @@ package body Sem_Disp is\n       end if;\n \n       if not Body_Is_Last_Primitive then\n-         Set_DT_Position (Subp, No_Uint);\n+         Set_DT_Position_Value (Subp, No_Uint);\n \n       elsif Has_Controlled_Component (Tagged_Type)\n         and then Nam_In (Chars (Subp), Name_Initialize,\n@@ -1678,7 +1678,7 @@ package body Sem_Disp is\n \n                Check_Controlling_Formals (Tagged_Type, Old_Subp);\n                Set_Is_Dispatching_Operation (Old_Subp, True);\n-               Set_DT_Position (Old_Subp, No_Uint);\n+               Set_DT_Position_Value (Old_Subp, No_Uint);\n             end if;\n \n             --  If the old subprogram is an explicit renaming of some other"}, {"sha": "602c411e05613ed37a4c31422f64fe98cb3f8ad2", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024d33d837c172088236be33fd52b7a6ac8e4e9d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=024d33d837c172088236be33fd52b7a6ac8e4e9d", "patch": "@@ -15277,6 +15277,11 @@ package body Sem_Prag is\n             if Typ = Any_Type then\n                return;\n \n+            --  Invariants allowed in interface types (RM 7.3.2(3/3))\n+\n+            elsif Is_Interface (Typ) then\n+               null;\n+\n             --  An invariant must apply to a private type, or appear in the\n             --  private part of a package spec and apply to a completion.\n             --  a class-wide invariant can only appear on a private declaration\n@@ -15318,8 +15323,14 @@ package body Sem_Prag is\n             --  procedure declaration, so that calls to it can be generated\n             --  before the body is built (e.g. within an expression function).\n \n-            Insert_After_And_Analyze\n-              (N, Build_Invariant_Procedure_Declaration (Typ));\n+            --  Interface types have no invariant procedure; their invariants\n+            --  are propagated to the build invariant procedure of all the\n+            --  types covering the interface type.\n+\n+            if not Is_Interface (Typ) then\n+               Insert_After_And_Analyze\n+                 (N, Build_Invariant_Procedure_Declaration (Typ));\n+            end if;\n \n             if Class_Present (N) then\n                Set_Has_Inheritable_Invariants (Typ);"}]}