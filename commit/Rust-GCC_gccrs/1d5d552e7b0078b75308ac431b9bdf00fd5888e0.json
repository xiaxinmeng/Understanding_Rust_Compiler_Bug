{"sha": "1d5d552e7b0078b75308ac431b9bdf00fd5888e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ1ZDU1MmU3YjAwNzhiNzUzMDhhYzQzMWI5YmRmMDBmZDU4ODhlMA==", "commit": {"author": {"name": "Gavin Romig-Koch", "email": "gavin@cygnus.com", "date": "1999-10-26T20:29:35Z"}, "committer": {"name": "Gavin Romig-Koch", "email": "gavin@gcc.gnu.org", "date": "1999-10-26T20:29:35Z"}, "message": "mips.h (ISA_HAS_64BIT_REGS,ISA_HAS_BRANCHLIKELY, [...]): New.\n\n\t* config/mips/mips.h (ISA_HAS_64BIT_REGS,ISA_HAS_BRANCHLIKELY,\n\tISA_HAS_FP4,ISA_HAS_CONDMOVE): New.\n\t(GENERATE_BRANCHLIKELY,HAVE_SQRT_P,\n\tCONDITIONAL_REGISTER_USEAGE): Use them.\n\t* config/mips/mips.c (mips_move_1word,mips_move_2words,\n\tgen_conditional_branch,override_options) : Use them.\n\t* config/mips/mips.md : Use them.\n\nFrom-SVN: r30199", "tree": {"sha": "724d5f4709fc70857d961e1bc801bbfaea695a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/724d5f4709fc70857d961e1bc801bbfaea695a76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d5d552e7b0078b75308ac431b9bdf00fd5888e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d5d552e7b0078b75308ac431b9bdf00fd5888e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d5d552e7b0078b75308ac431b9bdf00fd5888e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d5d552e7b0078b75308ac431b9bdf00fd5888e0/comments", "author": null, "committer": null, "parents": [{"sha": "044bdac117fd5be64006b5f627d5f6a8093eb115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/044bdac117fd5be64006b5f627d5f6a8093eb115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/044bdac117fd5be64006b5f627d5f6a8093eb115"}], "stats": {"total": 138, "additions": 81, "deletions": 57}, "files": [{"sha": "7c422111efcb16049346208f6245724de434accd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5d552e7b0078b75308ac431b9bdf00fd5888e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5d552e7b0078b75308ac431b9bdf00fd5888e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d5d552e7b0078b75308ac431b9bdf00fd5888e0", "patch": "@@ -1,3 +1,13 @@\n+1999-10-26  Gavin Romig-Koch  <gavin@cygnus.com>\n+\n+\t* config/mips/mips.h (ISA_HAS_64BIT_REGS,ISA_HAS_BRANCHLIKELY,\n+\tISA_HAS_FP4,ISA_HAS_CONDMOVE): New.\n+\t(GENERATE_BRANCHLIKELY,HAVE_SQRT_P,\n+\tCONDITIONAL_REGISTER_USEAGE): Use them. \n+\t* config/mips/mips.c (mips_move_1word,mips_move_2words,\n+\tgen_conditional_branch,override_options) : Use them.\n+\t* config/mips/mips.md : Use them.\n+\n Tue Oct 26 13:09:23 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* i386.md (zero_extendqihi2): Use SImode register name with andl."}, {"sha": "9be617f94a44e2c5c0d9a5004f62e4aa4c6e6f76", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5d552e7b0078b75308ac431b9bdf00fd5888e0/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5d552e7b0078b75308ac431b9bdf00fd5888e0/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=1d5d552e7b0078b75308ac431b9bdf00fd5888e0", "patch": "@@ -1719,7 +1719,7 @@ mips_move_1word (operands, insn, unsignedp)\n \t\t    ret = \"mflo\\t%0\";\n \t\t}\n \n-\t      else if (ST_REG_P (regno1) && mips_isa >= 4)\n+\t      else if (ST_REG_P (regno1) && ISA_HAS_FP4)\n \t\tret = \"li\\t%0,1\\n\\tmovf\\t%0,%.,%1\";\n \n \t      else\n@@ -1728,7 +1728,7 @@ mips_move_1word (operands, insn, unsignedp)\n \t\t  if (FP_REG_P (regno1))\n \t\t    ret = \"mfc1\\t%0,%1\";\n \n-\t\t  else if (regno1 == FPSW_REGNUM && mips_isa < 4)\n+\t\t  else if (regno1 == FPSW_REGNUM && ! ISA_HAS_FP4)\n \t\t    ret = \"cfc1\\t%0,$31\";\n \t\t}\n \t    }\n@@ -1755,7 +1755,7 @@ mips_move_1word (operands, insn, unsignedp)\n \t\t}\n \t    }\n \n-\t  else if (regno0 == FPSW_REGNUM && mips_isa < 4)\n+\t  else if (regno0 == FPSW_REGNUM && ! ISA_HAS_FP4)\n \t    {\n \t      if (GP_REG_P (regno1))\n \t\t{\n@@ -2218,7 +2218,9 @@ mips_move_2words (operands, insn)\n \t\t       or higher.  For !TARGET_64BIT && gp registers we\n \t\t       need to avoid this by using two li instructions\n \t\t       instead.  */\n-\t\t    if (mips_isa >= 3 && !TARGET_64BIT && !FP_REG_P (regno0))\n+\t\t    if (ISA_HAS_64BIT_REGS \n+\t\t\t&& ! TARGET_64BIT\n+\t\t\t&& ! FP_REG_P (regno0))\n \t\t      {\n \t\t\tsplit_double (op1, operands + 2, operands + 3);\n \t\t\tret = \"li\\t%0,%2\\n\\tli\\t%D0,%3\";\n@@ -2871,7 +2873,7 @@ gen_conditional_branch (operands, test_code)\n \n     case CMP_SF:\n     case CMP_DF:\n-      if (mips_isa < 4)\n+      if (! ISA_HAS_FP4)\n \treg = gen_rtx_REG (CCmode, FPSW_REGNUM);\n       else\n \treg = gen_reg_rtx (CCmode);\n@@ -4363,7 +4365,7 @@ override_options ()\n   if (mips_abi_string == 0 && mips_isa_string \n       && mips_abi != ABI_EABI && mips_abi != ABI_O64)\n     {\n-      if (mips_isa <= 2)\n+      if (! ISA_HAS_64BIT_REGS)\n \tmips_abi = ABI_32;\n       else\n \tmips_abi = ABI_64;\n@@ -4384,9 +4386,9 @@ override_options ()\n   /* If both ABI and ISA were specified, check for conflicts.  */\n   else if (mips_isa_string && mips_abi_string)\n     {\n-      if ((mips_isa <= 2 && (mips_abi == ABI_N32 || mips_abi == ABI_64\n+      if ((! ISA_HAS_64BIT_REGS && (mips_abi == ABI_N32 || mips_abi == ABI_64\n \t\t\t     || mips_abi == ABI_O64))\n-\t  || (mips_isa >= 3 && mips_abi == ABI_32))\n+\t  || (ISA_HAS_64BIT_REGS && mips_abi == ABI_32))\n \terror (\"-mabi=%s does not support -mips%d\", mips_abi_string, mips_isa);\n     }\n \n@@ -4535,24 +4537,24 @@ override_options ()\n \t}\n     }\n \n-  if ((mips_cpu == PROCESSOR_R3000 && mips_isa > 1)\n-      || (mips_cpu == PROCESSOR_R6000 && mips_isa > 2)\n+  if ((mips_cpu == PROCESSOR_R3000 && (mips_isa != 1))\n+      || (mips_cpu == PROCESSOR_R6000 && mips_isa != 1 && mips_isa != 2)\n       || ((mips_cpu == PROCESSOR_R4000\n            || mips_cpu == PROCESSOR_R4100\n            || mips_cpu == PROCESSOR_R4300\n \t   || mips_cpu == PROCESSOR_R4600\n \t   || mips_cpu == PROCESSOR_R4650)\n-\t  && mips_isa > 3))\n+\t  && mips_isa != 1 && mips_isa != 2 && mips_isa != 3))\n     error (\"-mcpu=%s does not support -mips%d\", mips_cpu_string, mips_isa);\n \n   /* make sure sizes of ints/longs/etc. are ok */\n-  if (mips_isa < 3)\n+  if (! ISA_HAS_64BIT_REGS)\n     {\n       if (TARGET_FLOAT64)\n-\tfatal (\"Only MIPS-III or MIPS-IV CPUs can support 64 bit fp registers\");\n+\tfatal (\"-mips%d does not support 64 bit fp registers\", mips_isa);\n \n       else if (TARGET_64BIT)\n-\tfatal (\"Only MIPS-III or MIPS-IV CPUs can support 64 bit gp registers\");\n+\tfatal (\"-mips%d does not support 64 bit gp registers\", mips_isa);\n     }\n \n   if (mips_abi != ABI_32 && mips_abi != ABI_O64)\n@@ -4731,7 +4733,7 @@ override_options ()\n \n \t  if (mode == CCmode)\n \t    {\n-\t      if (mips_isa < 4)\n+\t      if (! ISA_HAS_FP4)\n \t\ttemp = (regno == FPSW_REGNUM);\n \t      else\n \t\ttemp = (ST_REG_P (regno) || GP_REG_P (regno)"}, {"sha": "9e64f3e9701347b367c66239db5663c079c8ebff", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5d552e7b0078b75308ac431b9bdf00fd5888e0/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5d552e7b0078b75308ac431b9bdf00fd5888e0/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=1d5d552e7b0078b75308ac431b9bdf00fd5888e0", "patch": "@@ -542,7 +542,7 @@ extern void\t\tsbss_section PARAMS ((void));\n /* This is meant to be redefined in the host dependent files.  */\n #define SUBTARGET_TARGET_OPTIONS\n \n-#define GENERATE_BRANCHLIKELY  (!TARGET_MIPS16 && (TARGET_MIPS3900 || (mips_isa >= 2)))\n+#define GENERATE_BRANCHLIKELY  (!TARGET_MIPS16 && (TARGET_MIPS3900 || ISA_HAS_BRANCHLIKELY))\n \n /* Generate three-operand multiply instructions for both SImode and DImode.  */\n #define GENERATE_MULT3         (TARGET_MIPS3900\t\t\t\t\\\n@@ -552,7 +552,19 @@ extern void\t\tsbss_section PARAMS ((void));\n    depending on the instruction set architecture level.  */\n \n #define BRANCH_LIKELY_P()\tGENERATE_BRANCHLIKELY\n-#define HAVE_SQRT_P()\t\t(mips_isa >= 2)\n+#define HAVE_SQRT_P()\t\t(mips_isa != 1)\n+\n+/* ISA has instructions for managing 64 bit fp and gp regs (eg. mips3). */\n+#define ISA_HAS_64BIT_REGS\t(mips_isa == 3 || mips_isa == 4 || mips_isa == 64)\n+\n+/* ISA has branch likely instructions (eg. mips2). */ \n+#define ISA_HAS_BRANCHLIKELY\t(mips_isa != 1)\n+\n+/* ISA has the FP instructions introduced in mips4. */\n+#define ISA_HAS_FP4             (mips_isa == 4)\n+\n+/* ISA has the non-FP conditional move instructions introduced in mips4. */\n+#define ISA_HAS_CONDMOVE        (mips_isa == 4)\n \n /* CC1_SPEC causes -mips3 and -mips4 to set -mfp64 and -mgp64; -mips1 or\n    -mips2 sets -mfp32 and -mgp32.  This can be overridden by an explicit\n@@ -622,7 +634,7 @@ do\t\t\t\t\t\t\t\t\t\\\n \tfor (regno = ST_REG_FIRST; regno <= ST_REG_LAST; regno++)\t\\\n \t  fixed_regs[regno] = call_used_regs[regno] = 1;\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n-    else if (mips_isa < 4)\t\t\t\t\t\t\\\n+    else if (! ISA_HAS_FP4)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tint regno;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\"}, {"sha": "e2c99733fe32c6ad22ac3156cf565cf651fc2f49", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5d552e7b0078b75308ac431b9bdf00fd5888e0/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5d552e7b0078b75308ac431b9bdf00fd5888e0/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=1d5d552e7b0078b75308ac431b9bdf00fd5888e0", "patch": "@@ -2075,7 +2075,7 @@\n \t(plus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t\t  (match_operand:DF 2 \"register_operand\" \"f\"))\n \t\t (match_operand:DF 3 \"register_operand\" \"f\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"madd.d\\\\t%0,%3,%1,%2\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -2085,7 +2085,7 @@\n \t(plus:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t\t  (match_operand:SF 2 \"register_operand\" \"f\"))\n \t\t (match_operand:SF 3 \"register_operand\" \"f\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"madd.s\\\\t%0,%3,%1,%2\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -2095,7 +2095,7 @@\n \t(minus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t\t   (match_operand:DF 2 \"register_operand\" \"f\"))\n \t\t  (match_operand:DF 3 \"register_operand\" \"f\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"msub.d\\\\t%0,%3,%1,%2\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -2106,7 +2106,7 @@\n \t\t\t   (match_operand:SF 2 \"register_operand\" \"f\"))\n \t\t  (match_operand:SF 3 \"register_operand\" \"f\")))]\n \t\t  \n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"msub.s\\\\t%0,%3,%1,%2\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -2116,7 +2116,7 @@\n \t(neg:DF (plus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t\t\t  (match_operand:DF 2 \"register_operand\" \"f\"))\n \t\t\t (match_operand:DF 3 \"register_operand\" \"f\"))))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"nmadd.d\\\\t%0,%3,%1,%2\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -2126,7 +2126,7 @@\n \t(neg:SF (plus:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t\t\t  (match_operand:SF 2 \"register_operand\" \"f\"))\n \t\t\t (match_operand:SF 3 \"register_operand\" \"f\"))))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"nmadd.s\\\\t%0,%3,%1,%2\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -2136,7 +2136,7 @@\n \t(minus:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t  (mult:DF (match_operand:DF 2 \"register_operand\" \"f\")\n \t\t\t   (match_operand:DF 3 \"register_operand\" \"f\"))))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"nmsub.d\\\\t%0,%1,%2,%3\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -2146,7 +2146,7 @@\n \t(minus:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t  (mult:SF (match_operand:SF 2 \"register_operand\" \"f\")\n \t\t\t   (match_operand:SF 3 \"register_operand\" \"f\"))))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"nmsub.s\\\\t%0,%1,%2,%3\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -2181,7 +2181,7 @@\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(div:DF (match_operand:DF 1 \"const_float_1_operand\" \"\")\n \t\t(match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && flag_fast_math\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && flag_fast_math\"\n   \"recip.d\\\\t%0,%2\"\n   [(set_attr \"type\"\t\"fdiv\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -2190,7 +2190,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(div:SF (match_operand:SF 1 \"const_float_1_operand\" \"\")\n \t\t(match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && flag_fast_math\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && flag_fast_math\"\n   \"recip.s\\\\t%0,%2\"\n   [(set_attr \"type\"\t\"fdiv\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -2782,7 +2782,7 @@\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(div:DF (match_operand:DF 1 \"const_float_1_operand\" \"\")\n \t\t(sqrt:DF (match_operand:DF 2 \"register_operand\" \"f\"))))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && flag_fast_math\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && flag_fast_math\"\n   \"rsqrt.d\\\\t%0,%2\"\n   [(set_attr \"type\"\t\"fsqrt\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -2791,7 +2791,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(div:SF (match_operand:SF 1 \"const_float_1_operand\" \"\")\n \t\t(sqrt:SF (match_operand:SF 2 \"register_operand\" \"f\"))))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && flag_fast_math\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && flag_fast_math\"\n   \"rsqrt.s\\\\t%0,%2\"\n   [(set_attr \"type\"\t\"fsqrt\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -5565,7 +5565,7 @@ move\\\\t%0,%z4\\\\n\\\\\n (define_insn \"movcc\"\n   [(set (match_operand:CC 0 \"nonimmediate_operand\" \"=d,*d,*d,*d,*R,*m,*d,*f,*f,*f,*f,*R,*m\")\n \t(match_operand:CC 1 \"general_operand\" \"z,*d,*R,*m,*d,*d,*f,*d,*f,*R,*m,*f,*f\"))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"* return mips_move_1word (operands, insn, FALSE);\"\n   [(set_attr \"type\"\t\"move,move,load,load,store,store,xfer,xfer,move,load,load,store,store\")\n    (set_attr \"mode\"\t\"SI\")\n@@ -5577,7 +5577,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n \t(match_operand:CC 1 \"general_operand\" \"z\"))\n    (clobber (match_operand:TF 2 \"register_operand\" \"=&f\"))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"\n {\n   rtx source;\n@@ -5615,7 +5615,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (match_operand:CC 0 \"general_operand\" \"=z\")\n \t(match_operand:CC 1 \"register_operand\" \"z\"))\n    (clobber (match_operand:CC 2 \"register_operand\" \"=&d\"))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"\n {\n   /* This is called when we are copying a condition code register out\n@@ -5657,7 +5657,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(mem:SF (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n \t\t\t (match_operand:SI 2 \"register_operand\" \"d\"))))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"lwxc1\\\\t%0,%1(%2)\"\n   [(set_attr \"type\"\t\"load\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -5666,7 +5666,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(mem:SF (plus:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n \t\t\t (match_operand:DI 2 \"se_register_operand\" \"d\"))))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"lwxc1\\\\t%0,%1(%2)\"\n   [(set_attr \"type\"\t\"load\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -5675,7 +5675,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(mem:DF (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n \t\t\t (match_operand:SI 2 \"register_operand\" \"d\"))))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"ldxc1\\\\t%0,%1(%2)\"\n   [(set_attr \"type\"\t\"load\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -5684,7 +5684,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(mem:DF (plus:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n \t\t\t (match_operand:DI 2 \"se_register_operand\" \"d\"))))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"ldxc1\\\\t%0,%1(%2)\"\n   [(set_attr \"type\"\t\"load\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -5693,7 +5693,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (mem:SF (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n \t\t\t (match_operand:SI 2 \"register_operand\" \"d\")))\n \t(match_operand:SF 0 \"register_operand\" \"f\"))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"swxc1\\\\t%0,%1(%2)\"\n   [(set_attr \"type\"\t\"store\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -5702,7 +5702,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (mem:SF (plus:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n \t\t\t (match_operand:DI 2 \"se_register_operand\" \"d\")))\n \t(match_operand:SF 0 \"register_operand\" \"f\"))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"swxc1\\\\t%0,%1(%2)\"\n   [(set_attr \"type\"\t\"store\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -5711,7 +5711,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (mem:DF (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n \t\t\t (match_operand:SI 2 \"register_operand\" \"d\")))\n \t(match_operand:DF 0 \"register_operand\" \"f\"))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"sdxc1\\\\t%0,%1(%2)\"\n   [(set_attr \"type\"\t\"store\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -5720,7 +5720,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (mem:DF (plus:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n \t\t\t (match_operand:DI 2 \"se_register_operand\" \"d\")))\n \t(match_operand:DF 0 \"register_operand\" \"f\"))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"sdxc1\\\\t%0,%1(%2)\"\n   [(set_attr \"type\"\t\"store\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -9924,7 +9924,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t  (const_int 0)])\n \t (match_operand:SI 2 \"reg_or_0_operand\" \"dJ,0\")\n \t (match_operand:SI 3 \"reg_or_0_operand\" \"0,dJ\")))]\n-  \"mips_isa >= 4\"\n+  \"ISA_HAS_CONDMOVE\"\n   \"@\n     mov%B4\\\\t%0,%z2,%1\n     mov%b4\\\\t%0,%z3,%1\"\n@@ -9939,7 +9939,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t  (const_int 0)])\n \t (match_operand:SI 2 \"reg_or_0_operand\" \"dJ,0\")\n \t (match_operand:SI 3 \"reg_or_0_operand\" \"0,dJ\")))]\n-  \"mips_isa >= 4\"\n+  \"ISA_HAS_CONDMOVE\"\n   \"@\n     mov%B4\\\\t%0,%z2,%1\n     mov%b4\\\\t%0,%z3,%1\"\n@@ -9955,7 +9955,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t\t\t  (const_int 0)])\n \t (match_operand:SI 1 \"reg_or_0_operand\" \"dJ,0\")\n \t (match_operand:SI 2 \"reg_or_0_operand\" \"0,dJ\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"@\n     mov%T3\\\\t%0,%z1,%4\n     mov%t3\\\\t%0,%z2,%4\"\n@@ -9970,7 +9970,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t  (const_int 0)])\n \t (match_operand:DI 2 \"se_reg_or_0_operand\" \"dJ,0\")\n \t (match_operand:DI 3 \"se_reg_or_0_operand\" \"0,dJ\")))]\n-  \"mips_isa >= 4\"\n+  \"ISA_HAS_CONDMOVE\"\n   \"@\n     mov%B4\\\\t%0,%z2,%1\n     mov%b4\\\\t%0,%z3,%1\"\n@@ -9985,7 +9985,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t  (const_int 0)])\n \t (match_operand:DI 2 \"se_reg_or_0_operand\" \"dJ,0\")\n \t (match_operand:DI 3 \"se_reg_or_0_operand\" \"0,dJ\")))]\n-  \"mips_isa >= 4\"\n+  \"ISA_HAS_CONDMOVE\"\n   \"@\n     mov%B4\\\\t%0,%z2,%1\n     mov%b4\\\\t%0,%z3,%1\"\n@@ -10001,7 +10001,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t\t\t  (const_int 0)])\n \t (match_operand:DI 1 \"se_reg_or_0_operand\" \"dJ,0\")\n \t (match_operand:DI 2 \"se_reg_or_0_operand\" \"0,dJ\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"@\n     mov%T3\\\\t%0,%z1,%4\n     mov%t3\\\\t%0,%z2,%4\"\n@@ -10016,7 +10016,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t  (const_int 0)])\n \t (match_operand:SF 2 \"register_operand\" \"f,0\")\n \t (match_operand:SF 3 \"register_operand\" \"0,f\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"@\n     mov%B4.s\\\\t%0,%2,%1\n     mov%b4.s\\\\t%0,%3,%1\"\n@@ -10031,7 +10031,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t  (const_int 0)])\n \t (match_operand:SF 2 \"register_operand\" \"f,0\")\n \t (match_operand:SF 3 \"register_operand\" \"0,f\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"@\n     mov%B4.s\\\\t%0,%2,%1\n     mov%b4.s\\\\t%0,%3,%1\"\n@@ -10047,7 +10047,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t\t\t  (const_int 0)])\n \t (match_operand:SF 1 \"register_operand\" \"f,0\")\n \t (match_operand:SF 2 \"register_operand\" \"0,f\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"@\n     mov%T3.s\\\\t%0,%1,%4\n     mov%t3.s\\\\t%0,%2,%4\"\n@@ -10062,7 +10062,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t  (const_int 0)])\n \t (match_operand:DF 2 \"register_operand\" \"f,0\")\n \t (match_operand:DF 3 \"register_operand\" \"0,f\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"@\n     mov%B4.d\\\\t%0,%2,%1\n     mov%b4.d\\\\t%0,%3,%1\"\n@@ -10077,7 +10077,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t  (const_int 0)])\n \t (match_operand:DF 2 \"register_operand\" \"f,0\")\n \t (match_operand:DF 3 \"register_operand\" \"0,f\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"@\n     mov%B4.d\\\\t%0,%2,%1\n     mov%b4.d\\\\t%0,%3,%1\"\n@@ -10093,7 +10093,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t\t\t  (const_int 0)])\n \t (match_operand:DF 1 \"register_operand\" \"f,0\")\n \t (match_operand:DF 2 \"register_operand\" \"0,f\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"@\n     mov%T3.d\\\\t%0,%1,%4\n     mov%t3.d\\\\t%0,%2,%4\"\n@@ -10108,7 +10108,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t(if_then_else:SI (match_dup 5)\n \t\t\t (match_operand:SI 2 \"reg_or_0_operand\" \"\")\n \t\t\t (match_operand:SI 3 \"reg_or_0_operand\" \"\")))]\n-  \"mips_isa >= 4\"\n+  \"ISA_HAS_CONDMOVE || ISA_HAS_FP4\"\n   \"\n {\n   gen_conditional_move (operands);\n@@ -10121,7 +10121,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t(if_then_else:DI (match_dup 5)\n \t\t\t (match_operand:DI 2 \"se_reg_or_0_operand\" \"\")\n \t\t\t (match_operand:DI 3 \"se_reg_or_0_operand\" \"\")))]\n-  \"mips_isa >= 4\"\n+  \"ISA_HAS_CONDMOVE || ISA_HAS_FP4\" \n   \"\n {\n   gen_conditional_move (operands);\n@@ -10134,7 +10134,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t(if_then_else:SF (match_dup 5)\n \t\t\t (match_operand:SF 2 \"register_operand\" \"\")\n \t\t\t (match_operand:SF 3 \"register_operand\" \"\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"\n {\n   gen_conditional_move (operands);\n@@ -10147,7 +10147,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t(if_then_else:DF (match_dup 5)\n \t\t\t (match_operand:DF 2 \"register_operand\" \"\")\n \t\t\t (match_operand:DF 3 \"register_operand\" \"\")))]\n-  \"mips_isa >= 4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"\n {\n   gen_conditional_move (operands);"}]}