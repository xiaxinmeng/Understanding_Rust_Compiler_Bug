{"sha": "2daec0f0854b1517fa6a2eb44762dda8cb8000ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRhZWMwZjA4NTRiMTUxN2ZhNmEyZWI0NDc2MmRkYThjYjgwMDBlZA==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2006-07-25T12:31:33Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2006-07-25T12:31:33Z"}, "message": "dbxout.c (output_used_types_helper): Push queued types on a VEC.\n\n\t* dbxout.c (output_used_types_helper): Push queued types\n\ton a VEC.\n\t(output_types_sort): New.\n\t(output_used_types): Collect used types on a VEC and sort them\n\tbefore emission.\n\nFrom-SVN: r115735", "tree": {"sha": "e548c4967cb19da7cc4d4fe78c0b1b98e962caf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e548c4967cb19da7cc4d4fe78c0b1b98e962caf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2daec0f0854b1517fa6a2eb44762dda8cb8000ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2daec0f0854b1517fa6a2eb44762dda8cb8000ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2daec0f0854b1517fa6a2eb44762dda8cb8000ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2daec0f0854b1517fa6a2eb44762dda8cb8000ed/comments", "author": null, "committer": null, "parents": [{"sha": "8d1171cbcb9f271c6013fc20365beaa4af61ad07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1171cbcb9f271c6013fc20365beaa4af61ad07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d1171cbcb9f271c6013fc20365beaa4af61ad07"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "69a963c04c7c5dc9d0c1d81f183aa6b7bada0bb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2daec0f0854b1517fa6a2eb44762dda8cb8000ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2daec0f0854b1517fa6a2eb44762dda8cb8000ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2daec0f0854b1517fa6a2eb44762dda8cb8000ed", "patch": "@@ -1,3 +1,11 @@\n+2006-07-25  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* dbxout.c (output_used_types_helper): Push queued types\n+\ton a VEC.\n+\t(output_types_sort): New.\n+\t(output_used_types): Collect used types on a VEC and sort them\n+\tbefore emission.\n+\n 2006-07-24  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/28463"}, {"sha": "df8b0aff4533f9e5d7ca577482b6fc4191165c4d", "filename": "gcc/dbxout.c", "status": "modified", "additions": 42, "deletions": 4, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2daec0f0854b1517fa6a2eb44762dda8cb8000ed/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2daec0f0854b1517fa6a2eb44762dda8cb8000ed/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=2daec0f0854b1517fa6a2eb44762dda8cb8000ed", "patch": "@@ -2373,9 +2373,10 @@ dbxout_expand_expr (tree expr)\n    used types hash to be output.  */\n \n static int\n-output_used_types_helper (void **slot, void *data ATTRIBUTE_UNUSED)\n+output_used_types_helper (void **slot, void *data)\n {\n   tree type = *slot;\n+  VEC(tree, heap) **types_p = data;\n \n   if ((TREE_CODE (type) == RECORD_TYPE\n        || TREE_CODE (type) == UNION_TYPE\n@@ -2384,21 +2385,58 @@ output_used_types_helper (void **slot, void *data ATTRIBUTE_UNUSED)\n       && TYPE_STUB_DECL (type)\n       && DECL_P (TYPE_STUB_DECL (type))\n       && ! DECL_IGNORED_P (TYPE_STUB_DECL (type)))\n-    debug_queue_symbol (TYPE_STUB_DECL (type));\n+    VEC_quick_push (tree, *types_p, TYPE_STUB_DECL (type));\n   else if (TYPE_NAME (type)\n \t   && TREE_CODE (TYPE_NAME (type)) == TYPE_DECL)\n-    debug_queue_symbol (TYPE_NAME (type));\n+    VEC_quick_push (tree, *types_p, TYPE_NAME (type));\n \n   return 1;\n }\n \n+static int\n+output_types_sort (const void *pa, const void *pb)\n+{\n+  const tree lhs = *((const tree *)pa);\n+  const tree rhs = *((const tree *)pb);\n+\n+  if (TYPE_P (lhs))\n+    {\n+      if (TYPE_P (rhs))\n+\treturn TYPE_UID (lhs) - TYPE_UID (rhs);\n+      else\n+\treturn 1;\n+    }\n+  else\n+    {\n+      if (TYPE_P (rhs))\n+\treturn -1;\n+      else\n+\treturn DECL_UID (lhs) - DECL_UID (rhs);\n+    }\n+}\n+\n+\n /* Force all types used by this function to be output in debug\n    information.  */\n static void\n output_used_types (void)\n {\n   if (cfun && cfun->used_types_hash)\n-    htab_traverse (cfun->used_types_hash, output_used_types_helper, NULL);\n+    {\n+      VEC(tree, heap) *types;\n+      int i;\n+      tree type;\n+\n+      types = VEC_alloc (tree, heap, htab_elements (cfun->used_types_hash));\n+      htab_traverse (cfun->used_types_hash, output_used_types_helper, &types);\n+\n+      /* Sort by UID to prevent dependence on hash table ordering.  */\n+      qsort (VEC_address (tree, types), VEC_length (tree, types),\n+\t     sizeof (tree), output_types_sort);\n+\n+      for (i = 0; VEC_iterate (tree, types, i, type); i++)\n+\tdebug_queue_symbol (type);\n+    }\n }\n \n /* Output a .stabs for the symbol defined by DECL,"}]}