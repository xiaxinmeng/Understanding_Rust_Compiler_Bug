{"sha": "6a866023b73e83b4cd3692b3655ad0522fddddaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE4NjYwMjNiNzNlODNiNGNkMzY5MmIzNjU1YWQwNTIyZmRkZGRhYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-05-31T15:42:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-05-31T15:42:10Z"}, "message": "re PR middle-end/44337 (ICE: in expand_assignment, at expr.c:4276)\n\n\tPR middle-end/44337\n\t* expr.c (expand_assignment): Don't store anything for out-of-bounds\n\tarray accesses with non-MEM.\n\n\t* gcc.dg/pr44337.c: New test.\n\nFrom-SVN: r160076", "tree": {"sha": "b716fddb474b0e91db60b56b8c1b3b22c5fde518", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b716fddb474b0e91db60b56b8c1b3b22c5fde518"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a866023b73e83b4cd3692b3655ad0522fddddaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a866023b73e83b4cd3692b3655ad0522fddddaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a866023b73e83b4cd3692b3655ad0522fddddaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a866023b73e83b4cd3692b3655ad0522fddddaa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90a7788bbc9890f681aa8434a861d88c3a9eb815", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90a7788bbc9890f681aa8434a861d88c3a9eb815", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90a7788bbc9890f681aa8434a861d88c3a9eb815"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "809ccb8640ead868cacc36585ee78b1feeb254ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a866023b73e83b4cd3692b3655ad0522fddddaa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a866023b73e83b4cd3692b3655ad0522fddddaa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a866023b73e83b4cd3692b3655ad0522fddddaa", "patch": "@@ -1,5 +1,9 @@\n 2010-05-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/44337\n+\t* expr.c (expand_assignment): Don't store anything for out-of-bounds\n+\tarray accesses with non-MEM.\n+\n \tPR tree-optimization/44182\n \t* tree-inline.c (copy_edges_for_bb): Don't split bb if a stmt that\n \tnewly needs to end a bb is followed by debug stmts, instead return"}, {"sha": "6b2feb685a47250f9e7f801a7a7088fed736af38", "filename": "gcc/expr.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a866023b73e83b4cd3692b3655ad0522fddddaa/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a866023b73e83b4cd3692b3655ad0522fddddaa/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=6a866023b73e83b4cd3692b3655ad0522fddddaa", "patch": "@@ -4268,8 +4268,19 @@ expand_assignment (tree to, tree from, bool nontemporal)\n \t\t\t\t   \t\t\t\t   offset));\n \t}\n \n+      /* No action is needed if the target is not a memory and the field\n+\t lies completely outside that target.  This can occur if the source\n+\t code contains an out-of-bounds access to a small array.  */\n+      if (!MEM_P (to_rtx)\n+\t  && GET_MODE (to_rtx) != BLKmode\n+\t  && (unsigned HOST_WIDE_INT) bitpos\n+\t     >= GET_MODE_BITSIZE (GET_MODE (to_rtx)))\n+\t{\n+\t  expand_normal (from);\n+\t  result = NULL;\n+\t}\n       /* Handle expand_expr of a complex value returning a CONCAT.  */\n-      if (GET_CODE (to_rtx) == CONCAT)\n+      else if (GET_CODE (to_rtx) == CONCAT)\n \t{\n \t  if (COMPLEX_MODE_P (TYPE_MODE (TREE_TYPE (from))))\n \t    {"}, {"sha": "abeee7e7f9bf75bee558013d1080640c3eed9e7f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a866023b73e83b4cd3692b3655ad0522fddddaa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a866023b73e83b4cd3692b3655ad0522fddddaa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a866023b73e83b4cd3692b3655ad0522fddddaa", "patch": "@@ -1,5 +1,8 @@\n 2010-05-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/44337\n+\t* gcc.dg/pr44337.c: New test.\n+\n \tPR tree-optimization/44182\n \t* g++.dg/debug/pr44182.C: New test.\n "}, {"sha": "57e0549247fa3c88e2f463e871d86a9d123aae43", "filename": "gcc/testsuite/gcc.dg/pr44337.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a866023b73e83b4cd3692b3655ad0522fddddaa/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44337.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a866023b73e83b4cd3692b3655ad0522fddddaa/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44337.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44337.c?ref=6a866023b73e83b4cd3692b3655ad0522fddddaa", "patch": "@@ -0,0 +1,10 @@\n+/* PR middle-end/44337 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fno-tree-dce -fno-tree-dse -w\" } */\n+\n+void\n+foo (void)\n+{\n+  _Complex float v[1];\n+  v[1] = 0;\n+}"}]}