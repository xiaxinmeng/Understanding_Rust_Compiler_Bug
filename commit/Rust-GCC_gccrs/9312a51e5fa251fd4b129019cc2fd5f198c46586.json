{"sha": "9312a51e5fa251fd4b129019cc2fd5f198c46586", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMxMmE1MWU1ZmEyNTFmZDRiMTI5MDE5Y2MyZmQ1ZjE5OGM0NjU4Ng==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2006-02-15T09:41:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:41:11Z"}, "message": "gnatcmd.adb (Rules_Switches): New table\n\n2006-02-13  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb (Rules_Switches): New table\n\t(Add_To_Rules_Switches): New procedure\n\t(GNATCmd): For command CHECK, put all options following \"-rules\" in the\n\tRules_Switches table. Append these -rules switches after the -cargs\n\tswitches.\n\nFrom-SVN: r111075", "tree": {"sha": "b03490fd0891577b1a7399099bf6b5c7ead62271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b03490fd0891577b1a7399099bf6b5c7ead62271"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9312a51e5fa251fd4b129019cc2fd5f198c46586", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9312a51e5fa251fd4b129019cc2fd5f198c46586", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9312a51e5fa251fd4b129019cc2fd5f198c46586", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9312a51e5fa251fd4b129019cc2fd5f198c46586/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d566287bc5566c6c67e9d92d03de12450a48f78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d566287bc5566c6c67e9d92d03de12450a48f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d566287bc5566c6c67e9d92d03de12450a48f78"}], "stats": {"total": 95, "additions": 90, "deletions": 5}, "files": [{"sha": "628a11a0d40956666f415e4581679f71354f7ca3", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 90, "deletions": 5, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9312a51e5fa251fd4b129019cc2fd5f198c46586/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9312a51e5fa251fd4b129019cc2fd5f198c46586/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=9312a51e5fa251fd4b129019cc2fd5f198c46586", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -51,9 +51,7 @@ with Ada.Text_IO;             use Ada.Text_IO;\n \n with GNAT.OS_Lib;             use GNAT.OS_Lib;\n \n-with Table;\n-\n-with VMS_Conv; use VMS_Conv;\n+with VMS_Conv;                use VMS_Conv;\n \n procedure GNATCmd is\n    Project_Tree      : constant Project_Tree_Ref := new Project_Tree_Data;\n@@ -92,6 +90,15 @@ procedure GNATCmd is\n       Table_Name           => \"Gnatcmd.Carg_Switches\");\n    --  A table to keep the switches following -cargs for ASIS tools\n \n+   package Rules_Switches is new Table.Table\n+     (Table_Component_Type => String_Access,\n+      Table_Index_Type     => Integer,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 20,\n+      Table_Increment      => 100,\n+      Table_Name           => \"Gnatcmd.Rules_Switches\");\n+   --  A table to keep the switches following -rules for gnatcheck\n+\n    package Library_Paths is new Table.Table (\n      Table_Component_Type => String_Access,\n      Table_Index_Type     => Integer,\n@@ -179,6 +186,10 @@ procedure GNATCmd is\n    --  Add a switch to the Carg_Switches table. If it is the first one,\n    --  put the switch \"-cargs\" at the beginning of the table.\n \n+   procedure Add_To_Rules_Switches (Switch : String_Access);\n+   --  Add a switch to the Rules_Switches table. If it is the first one,\n+   --  put the switch \"-crules\" at the beginning of the table.\n+\n    procedure Check_Files;\n    --  For GNAT LIST, GNAT PRETTY and GNAT METRIC, check if a project\n    --  file is specified, without any file arguments. If it is the case,\n@@ -253,6 +264,23 @@ procedure GNATCmd is\n       Carg_Switches.Table (Carg_Switches.Last) := Switch;\n    end Add_To_Carg_Switches;\n \n+   ---------------------------\n+   -- Add_To_Rules_Switches --\n+   ---------------------------\n+\n+   procedure Add_To_Rules_Switches (Switch : String_Access) is\n+   begin\n+      --  If the Rules_Switches table is empty, put \"-rules\" at the beginning\n+\n+      if Rules_Switches.Last = 0 then\n+         Rules_Switches.Increment_Last;\n+         Rules_Switches.Table (Rules_Switches.Last) := new String'(\"-rules\");\n+      end if;\n+\n+      Rules_Switches.Increment_Last;\n+      Rules_Switches.Table (Rules_Switches.Last) := Switch;\n+   end Add_To_Rules_Switches;\n+\n    -----------------\n    -- Check_Files --\n    -----------------\n@@ -1028,6 +1056,8 @@ begin\n    First_Switches.Set_Last (0);\n    Carg_Switches.Init;\n    Carg_Switches.Set_Last (0);\n+   Rules_Switches.Init;\n+   Rules_Switches.Set_Last (0);\n \n    VMS_Conv.Initialize;\n \n@@ -1952,6 +1982,55 @@ begin\n                                (Project).Object_Directory));\n          end if;\n \n+         --  For gnat check, -rules and the following switches need to be the\n+         --  last options. So, we move all these switches to table\n+         --  Rules_Switches.\n+\n+         if The_Command = Check then\n+            declare\n+               New_Last          : Natural;\n+               --  Set to rank of options preceding \"-rules\"\n+\n+               In_Rules_Switches : Boolean;\n+               --  Set to True when options \"-rules\" is found\n+\n+            begin\n+               New_Last := First_Switches.Last;\n+               In_Rules_Switches := False;\n+\n+               for J in 1 .. First_Switches.Last loop\n+                  if In_Rules_Switches then\n+                     Add_To_Rules_Switches (First_Switches.Table (J));\n+\n+                  elsif First_Switches.Table (J).all = \"-rules\" then\n+                     New_Last := J - 1;\n+                     In_Rules_Switches := True;\n+                  end if;\n+               end loop;\n+\n+               if In_Rules_Switches then\n+                  First_Switches.Set_Last (New_Last);\n+               end if;\n+\n+               New_Last := Last_Switches.Last;\n+               In_Rules_Switches := False;\n+\n+               for J in 1 .. Last_Switches.Last loop\n+                  if In_Rules_Switches then\n+                     Add_To_Rules_Switches (Last_Switches.Table (J));\n+\n+                  elsif Last_Switches.Table (J).all = \"-rules\" then\n+                     New_Last := J - 1;\n+                     In_Rules_Switches := True;\n+                  end if;\n+               end loop;\n+\n+               if In_Rules_Switches then\n+                  Last_Switches.Set_Last (New_Last);\n+               end if;\n+            end;\n+         end if;\n+\n          --  For gnat check, gnat pretty, gnat metric ands gnat list,\n          --  if no file has been put on the command line, call tool with all\n          --  the sources of the main project.\n@@ -1971,7 +2050,8 @@ begin\n          The_Args : Argument_List\n                       (1 .. First_Switches.Last +\n                             Last_Switches.Last +\n-                            Carg_Switches.Last);\n+                            Carg_Switches.Last +\n+                            Rules_Switches.Last);\n          Arg_Num  : Natural := 0;\n \n       begin\n@@ -1990,6 +2070,11 @@ begin\n             The_Args (Arg_Num) := Carg_Switches.Table (J);\n          end loop;\n \n+         for J in 1 .. Rules_Switches.Last loop\n+            Arg_Num := Arg_Num + 1;\n+            The_Args (Arg_Num) := Rules_Switches.Table (J);\n+         end loop;\n+\n          --  If Display_Command is on, only display the generated command\n \n          if Display_Command then"}]}