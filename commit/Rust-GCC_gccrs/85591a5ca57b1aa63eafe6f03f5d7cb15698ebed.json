{"sha": "85591a5ca57b1aa63eafe6f03f5d7cb15698ebed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU1OTFhNWNhNTdiMWFhNjNlYWZlNmYwM2Y1ZDdjYjE1Njk4ZWJlZA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-12-09T14:38:50Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-12-09T14:38:50Z"}, "message": "arm.md (generic_sched): Add cortexa12.\n\n2013-12-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* config/arm/arm.md (generic_sched): Add cortexa12.\n\t(generic_vfp): Likewise.\n\t* config/arm/arm.c (cortexa12_extra_costs): New cost table.\n\t(arm_cortex_a12_tune): New tuning struct.\n\t* config/arm/arm-cores.def: Add cortex-a12.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/arm-tune.md: Likewise.\n\t* config/arm/bpabi.h: Add cortex-a12.\n\t* doc/invoke.texi: Document -mcpu=cortex-a12.\n\nFrom-SVN: r205804", "tree": {"sha": "3b12b5ffb35fff2990162cb3b543b78bbcb510ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b12b5ffb35fff2990162cb3b543b78bbcb510ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "afe0e941d24f11e6975e8b3f0dc2650fbb55654a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afe0e941d24f11e6975e8b3f0dc2650fbb55654a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afe0e941d24f11e6975e8b3f0dc2650fbb55654a"}], "stats": {"total": 147, "additions": 141, "deletions": 6}, "files": [{"sha": "c26294236979909c9ba28f15680f4de40cf589d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85591a5ca57b1aa63eafe6f03f5d7cb15698ebed", "patch": "@@ -1,3 +1,15 @@\n+2013-12-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (generic_sched): Add cortexa12.\n+\t(generic_vfp): Likewise.\n+\t* config/arm/arm.c (cortexa12_extra_costs): New cost table.\n+\t(arm_cortex_a12_tune): New tuning struct.\n+\t* config/arm/arm-cores.def: Add cortex-a12.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm-tune.md: Likewise.\n+\t* config/arm/bpabi.h: Add cortex-a12.\n+\t* doc/invoke.texi: Document -mcpu=cortex-a12.\n+\n 2013-12-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* doc/install.texi (Prerequisites): Explicitly mention C library"}, {"sha": "e7cea63beaee319153615c16821a448cc2626109", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=85591a5ca57b1aa63eafe6f03f5d7cb15698ebed", "patch": "@@ -128,6 +128,7 @@ ARM_CORE(\"cortex-a5\",\t  cortexa5,\t7A,\t\t\t\t FL_LDSCHED, cortex_a5)\n ARM_CORE(\"cortex-a7\",\t  cortexa7,\t7A,\t\t\t\t FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex_a7)\n ARM_CORE(\"cortex-a8\",\t  cortexa8,\t7A,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-a9\",\t  cortexa9,\t7A,\t\t\t\t FL_LDSCHED, cortex_a9)\n+ARM_CORE(\"cortex-a12\",\t  cortexa12,\t7A,\t\t\t\t FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex_a12)\n ARM_CORE(\"cortex-a15\",\t  cortexa15,\t7A,\t\t\t\t FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex_a15)\n ARM_CORE(\"cortex-a53\",\t  cortexa53,\t8A,\t\t\t\t FL_LDSCHED, cortex_a53)\n ARM_CORE(\"cortex-r4\",\t  cortexr4,\t7R,\t\t\t\t FL_LDSCHED, cortex)"}, {"sha": "b3e7a7c62d772ca801a71fa323229751285ccb02", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=85591a5ca57b1aa63eafe6f03f5d7cb15698ebed", "patch": "@@ -246,6 +246,9 @@ Enum(processor_type) String(cortex-a8) Value(cortexa8)\n EnumValue\n Enum(processor_type) String(cortex-a9) Value(cortexa9)\n \n+EnumValue\n+Enum(processor_type) String(cortex-a12) Value(cortexa12)\n+\n EnumValue\n Enum(processor_type) String(cortex-a15) Value(cortexa15)\n "}, {"sha": "e10d0aa95449dca4030bd83ff8141a51b9e0010a", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=85591a5ca57b1aa63eafe6f03f5d7cb15698ebed", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from arm-cores.def\n (define_attr \"tune\"\n-\t\"arm2,arm250,arm3,arm6,arm60,arm600,arm610,arm620,arm7,arm7d,arm7di,arm70,arm700,arm700i,arm710,arm720,arm710c,arm7100,arm7500,arm7500fe,arm7m,arm7dm,arm7dmi,arm8,arm810,strongarm,strongarm110,strongarm1100,strongarm1110,fa526,fa626,arm7tdmi,arm7tdmis,arm710t,arm720t,arm740t,arm9,arm9tdmi,arm920,arm920t,arm922t,arm940t,ep9312,arm10tdmi,arm1020t,arm9e,arm946es,arm966es,arm968es,arm10e,arm1020e,arm1022e,xscale,iwmmxt,iwmmxt2,fa606te,fa626te,fmp626,fa726te,arm926ejs,arm1026ejs,arm1136js,arm1136jfs,arm1176jzs,arm1176jzfs,mpcorenovfp,mpcore,arm1156t2s,arm1156t2fs,genericv7a,cortexa5,cortexa7,cortexa8,cortexa9,cortexa15,cortexa53,cortexr4,cortexr4f,cortexr5,cortexr7,cortexm4,cortexm3,cortexm1,cortexm0,cortexm0plus,marvell_pj4\"\n+\t\"arm2,arm250,arm3,arm6,arm60,arm600,arm610,arm620,arm7,arm7d,arm7di,arm70,arm700,arm700i,arm710,arm720,arm710c,arm7100,arm7500,arm7500fe,arm7m,arm7dm,arm7dmi,arm8,arm810,strongarm,strongarm110,strongarm1100,strongarm1110,fa526,fa626,arm7tdmi,arm7tdmis,arm710t,arm720t,arm740t,arm9,arm9tdmi,arm920,arm920t,arm922t,arm940t,ep9312,arm10tdmi,arm1020t,arm9e,arm946es,arm966es,arm968es,arm10e,arm1020e,arm1022e,xscale,iwmmxt,iwmmxt2,fa606te,fa626te,fmp626,fa726te,arm926ejs,arm1026ejs,arm1136js,arm1136jfs,arm1176jzs,arm1176jzfs,mpcorenovfp,mpcore,arm1156t2s,arm1156t2fs,genericv7a,cortexa5,cortexa7,cortexa8,cortexa9,cortexa12,cortexa15,cortexa53,cortexr4,cortexr4f,cortexr5,cortexr7,cortexm4,cortexm3,cortexm1,cortexm0,cortexm0plus,marvell_pj4\"\n \t(const (symbol_ref \"((enum attr_tune) arm_tune)\")))"}, {"sha": "c961fb1be2e37b5f2a1c5e8096651425ffdc8778", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=85591a5ca57b1aa63eafe6f03f5d7cb15698ebed", "patch": "@@ -1164,6 +1164,106 @@ const struct cpu_cost_table cortexa7_extra_costs =\n   }\n };\n \n+const struct cpu_cost_table cortexa12_extra_costs =\n+{\n+  /* ALU */\n+  {\n+    0,\t\t\t/* Arith.  */\n+    0,\t\t\t/* Logical.  */\n+    0,\t\t\t/* Shift.  */\n+    COSTS_N_INSNS (1),\t/* Shift_reg.  */\n+    COSTS_N_INSNS (1),\t/* Arith_shift.  */\n+    COSTS_N_INSNS (1),\t/* Arith_shift_reg.  */\n+    COSTS_N_INSNS (1),\t/* Log_shift.  */\n+    COSTS_N_INSNS (1),\t/* Log_shift_reg.  */\n+    0,\t\t\t/* Extend.  */\n+    COSTS_N_INSNS (1),\t/* Extend_arith.  */\n+    0,\t\t\t/* Bfi.  */\n+    COSTS_N_INSNS (1),\t/* Bfx.  */\n+    COSTS_N_INSNS (1),\t/* Clz.  */\n+    0,\t\t\t/* non_exec.  */\n+    true\t\t/* non_exec_costs_exec.  */\n+  },\n+  /* MULT SImode */\n+  {\n+    {\n+      COSTS_N_INSNS (2),\t/* Simple.  */\n+      COSTS_N_INSNS (3),\t/* Flag_setting.  */\n+      COSTS_N_INSNS (2),\t/* Extend.  */\n+      COSTS_N_INSNS (3),\t/* Add.  */\n+      COSTS_N_INSNS (2),\t/* Extend_add.  */\n+      COSTS_N_INSNS (18)\t/* Idiv.  */\n+    },\n+    /* MULT DImode */\n+    {\n+      0,\t\t\t/* Simple (N/A).  */\n+      0,\t\t\t/* Flag_setting (N/A).  */\n+      COSTS_N_INSNS (3),\t/* Extend.  */\n+      0,\t\t\t/* Add (N/A).  */\n+      COSTS_N_INSNS (3),\t/* Extend_add.  */\n+      0\t\t\t\t/* Idiv (N/A).  */\n+    }\n+  },\n+  /* LD/ST */\n+  {\n+    COSTS_N_INSNS (3),\t/* Load.  */\n+    COSTS_N_INSNS (3),\t/* Load_sign_extend.  */\n+    COSTS_N_INSNS (3),\t/* Ldrd.  */\n+    COSTS_N_INSNS (3),\t/* Ldm_1st.  */\n+    1,\t\t\t/* Ldm_regs_per_insn_1st.  */\n+    2,\t\t\t/* Ldm_regs_per_insn_subsequent.  */\n+    COSTS_N_INSNS (3),\t/* Loadf.  */\n+    COSTS_N_INSNS (3),\t/* Loadd.  */\n+    0,\t\t\t/* Load_unaligned.  */\n+    0,\t\t\t/* Store.  */\n+    0,\t\t\t/* Strd.  */\n+    0,\t\t\t/* Stm_1st.  */\n+    1,\t\t\t/* Stm_regs_per_insn_1st.  */\n+    2,\t\t\t/* Stm_regs_per_insn_subsequent.  */\n+    COSTS_N_INSNS (2),\t/* Storef.  */\n+    COSTS_N_INSNS (2),\t/* Stored.  */\n+    0\t\t\t/* Store_unaligned.  */\n+  },\n+  {\n+    /* FP SFmode */\n+    {\n+      COSTS_N_INSNS (17),\t/* Div.  */\n+      COSTS_N_INSNS (4),\t/* Mult.  */\n+      COSTS_N_INSNS (8),\t/* Mult_addsub. */\n+      COSTS_N_INSNS (8),\t/* Fma.  */\n+      COSTS_N_INSNS (4),\t/* Addsub.  */\n+      COSTS_N_INSNS (2),\t/* Fpconst. */\n+      COSTS_N_INSNS (2),\t/* Neg.  */\n+      COSTS_N_INSNS (2),\t/* Compare.  */\n+      COSTS_N_INSNS (4),\t/* Widen.  */\n+      COSTS_N_INSNS (4),\t/* Narrow.  */\n+      COSTS_N_INSNS (4),\t/* Toint.  */\n+      COSTS_N_INSNS (4),\t/* Fromint.  */\n+      COSTS_N_INSNS (4)\t\t/* Roundint.  */\n+    },\n+    /* FP DFmode */\n+    {\n+      COSTS_N_INSNS (31),\t/* Div.  */\n+      COSTS_N_INSNS (4),\t/* Mult.  */\n+      COSTS_N_INSNS (8),\t/* Mult_addsub.  */\n+      COSTS_N_INSNS (8),\t/* Fma.  */\n+      COSTS_N_INSNS (4),\t/* Addsub.  */\n+      COSTS_N_INSNS (2),\t/* Fpconst.  */\n+      COSTS_N_INSNS (2),\t/* Neg.  */\n+      COSTS_N_INSNS (2),\t/* Compare.  */\n+      COSTS_N_INSNS (4),\t/* Widen.  */\n+      COSTS_N_INSNS (4),\t/* Narrow.  */\n+      COSTS_N_INSNS (4),\t/* Toint.  */\n+      COSTS_N_INSNS (4),\t/* Fromint.  */\n+      COSTS_N_INSNS (4)\t\t/* Roundint.  */\n+    }\n+  },\n+  /* Vector */\n+  {\n+    COSTS_N_INSNS (1)\t/* Alu.  */\n+  }\n+};\n+\n const struct cpu_cost_table cortexa15_extra_costs =\n {\n   /* ALU */\n@@ -1563,6 +1663,22 @@ const struct tune_params arm_cortex_a9_tune =\n   false                                         /* Prefer Neon for 64-bits bitops.  */\n };\n \n+const struct tune_params arm_cortex_a12_tune =\n+{\n+  arm_9e_rtx_costs,\n+  &cortexa12_extra_costs,\n+  NULL,\n+  1,\t\t\t\t\t\t/* Constant limit.  */\n+  5,\t\t\t\t\t\t/* Max cond insns.  */\n+  ARM_PREFETCH_BENEFICIAL(4,32,32),\n+  false,\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_default_branch_cost,\n+  true,\t\t\t\t\t\t/* Prefer LDRD/STRD.  */\n+  {true, true},\t\t\t\t\t/* Prefer non short circuit.  */\n+  &arm_default_vec_cost,                        /* Vectorizer costs.  */\n+  false                                         /* Prefer Neon for 64-bits bitops.  */\n+};\n+\n /* armv7m tuning.  On Cortex-M4 cores for example, MOVW/MOVT take a single\n    cycle to execute each.  An LDR from the constant pool also takes two cycles\n    to execute, but mildly increases pipelining opportunity (consecutive"}, {"sha": "46fc4422d5ce2268aea898da397ff8d3bc34bf70", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=85591a5ca57b1aa63eafe6f03f5d7cb15698ebed", "patch": "@@ -469,15 +469,15 @@\n \n (define_attr \"generic_sched\" \"yes,no\"\n   (const (if_then_else\n-          (ior (eq_attr \"tune\" \"fa526,fa626,fa606te,fa626te,fmp626,fa726te,arm926ejs,arm1020e,arm1026ejs,arm1136js,arm1136jfs,cortexa5,cortexa7,cortexa8,cortexa9,cortexa15,cortexa53,cortexm4,marvell_pj4\")\n+          (ior (eq_attr \"tune\" \"fa526,fa626,fa606te,fa626te,fmp626,fa726te,arm926ejs,arm1020e,arm1026ejs,arm1136js,arm1136jfs,cortexa5,cortexa7,cortexa8,cortexa9,cortexa12,cortexa15,cortexa53,cortexm4,marvell_pj4\")\n \t       (eq_attr \"tune_cortexr4\" \"yes\"))\n           (const_string \"no\")\n           (const_string \"yes\"))))\n \n (define_attr \"generic_vfp\" \"yes,no\"\n   (const (if_then_else\n \t  (and (eq_attr \"fpu\" \"vfp\")\n-\t       (eq_attr \"tune\" \"!arm1020e,arm1022e,cortexa5,cortexa7,cortexa8,cortexa9,cortexa53,cortexm4,marvell_pj4\")\n+\t       (eq_attr \"tune\" \"!arm1020e,arm1022e,cortexa5,cortexa7,cortexa8,cortexa9,cortexa12,cortexa53,cortexm4,marvell_pj4\")\n \t       (eq_attr \"tune_cortexr4\" \"no\"))\n \t  (const_string \"yes\")\n \t  (const_string \"no\"))))"}, {"sha": "b39c4a91a9d9b0b2dbd99f34150119a11440da69", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=85591a5ca57b1aa63eafe6f03f5d7cb15698ebed", "patch": "@@ -59,6 +59,7 @@\n   \" %{!mlittle-endian:%{march=armv7-a|mcpu=cortex-a5    \\\n    |mcpu=cortex-a7                                      \\\n    |mcpu=cortex-a8|mcpu=cortex-a9|mcpu=cortex-a15       \\\n+   |mcpu=cortex-a12\t\t\t\t\t\\\n    |mcpu=marvell-pj4\t\t\t\t\t\\\n    |mcpu=cortex-a53\t\t\t\t\t\\\n    |mcpu=generic-armv7-a                                \\\n@@ -72,6 +73,7 @@\n   \" %{mbig-endian:%{march=armv7-a|mcpu=cortex-a5        \\\n    |mcpu=cortex-a7                                      \\\n    |mcpu=cortex-a8|mcpu=cortex-a9|mcpu=cortex-a15       \\\n+   |mcpu=cortex-a12\t\t\t\t\t\\\n    |mcpu=cortex-a53\t\t\t\t\t\\\n    |mcpu=marvell-pj4\t\t\t\t\t\\\n    |mcpu=generic-armv7-a                                \\"}, {"sha": "782a4722aaa1258fd138efb5620e14582f580484", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85591a5ca57b1aa63eafe6f03f5d7cb15698ebed/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=85591a5ca57b1aa63eafe6f03f5d7cb15698ebed", "patch": "@@ -12156,9 +12156,10 @@ assembly code.  Permissible names are: @samp{arm2}, @samp{arm250},\n @samp{arm10e}, @samp{arm1020e}, @samp{arm1022e},\n @samp{arm1136j-s}, @samp{arm1136jf-s}, @samp{mpcore}, @samp{mpcorenovfp},\n @samp{arm1156t2-s}, @samp{arm1156t2f-s}, @samp{arm1176jz-s}, @samp{arm1176jzf-s},\n-@samp{cortex-a5}, @samp{cortex-a7}, @samp{cortex-a8}, @samp{cortex-a9}, \n-@samp{cortex-a15}, @samp{cortex-a53}, @samp{cortex-r4}, @samp{cortex-r4f},\n-@samp{cortex-r5}, @samp{cortex-r7}, @samp{cortex-m4}, @samp{cortex-m3},\n+@samp{cortex-a5}, @samp{cortex-a7}, @samp{cortex-a8}, @samp{cortex-a9},\n+@samp{cortex-a12}, @samp{cortex-a15}, @samp{cortex-a53}, @samp{cortex-r4},\n+@samp{cortex-r4f}, @samp{cortex-r5}, @samp{cortex-r7}, @samp{cortex-m4},\n+@samp{cortex-m3},\n @samp{cortex-m1},\n @samp{cortex-m0},\n @samp{cortex-m0plus},"}]}