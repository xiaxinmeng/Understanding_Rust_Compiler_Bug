{"sha": "76d5b80aba9f07dd13dcc7a99cbee8ce7f6f72e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZkNWI4MGFiYTlmMDdkZDEzZGNjN2E5OWNiZWU4Y2U3ZjZmNzJlNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-09-30T06:52:45Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-09-30T06:52:45Z"}, "message": "* ChangeLog: Fix whitespace.\n\nFrom-SVN: r228279", "tree": {"sha": "d13e55adbc531ea63651b6836503a0d5c0122671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d13e55adbc531ea63651b6836503a0d5c0122671"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76d5b80aba9f07dd13dcc7a99cbee8ce7f6f72e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76d5b80aba9f07dd13dcc7a99cbee8ce7f6f72e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76d5b80aba9f07dd13dcc7a99cbee8ce7f6f72e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76d5b80aba9f07dd13dcc7a99cbee8ce7f6f72e5/comments", "author": null, "committer": null, "parents": [{"sha": "6ddd7fcd545796d866c99da45b8251f34e80e88c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ddd7fcd545796d866c99da45b8251f34e80e88c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ddd7fcd545796d866c99da45b8251f34e80e88c"}], "stats": {"total": 75, "additions": 36, "deletions": 39}, "files": [{"sha": "784daccbcdc7615ae1197023906e93d4a448652d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 36, "deletions": 39, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76d5b80aba9f07dd13dcc7a99cbee8ce7f6f72e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76d5b80aba9f07dd13dcc7a99cbee8ce7f6f72e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76d5b80aba9f07dd13dcc7a99cbee8ce7f6f72e5", "patch": "@@ -11,7 +11,7 @@\n \t* graphite-poly.h: Removed compute_deps, and extend_schedule.\n \n 2015-09-29  Sebastian Pop  <s.pop@samsung.com>\n-            Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Aditya Kumar  <aditya.k7@samsung.com>\n \n \tPR tree-optimization/67754\n \t* graphite-optimize-isl.c (optimize_isl): Call\n@@ -46,31 +46,32 @@\n \t(imm->ext_dest_operand splitter): Likewise.\n \n 2015-09-29  Sebastian Pop  <s.pop@samsung.com>\n-            Aditya Kumar  <aditya.k7@samsung.com>\n-\n-            * graphite-sese-to-poly.c (gsi_for_phi_node): Remove.\n-            (nb_data_writes_in_bb): Remove.\n-            (split_pbb): Remove.\n-            (split_reduction_stmt): Remove.\n-            (is_reduction_operation_p): Remove.\n-            (phi_contains_arg): Remove.\n-            (follow_ssa_with_commutative_ops): Remove.\n-            (detect_commutative_reduction_arg): Remove.\n-            (detect_commutative_reduction_assign): Remove.\n-            (follow_inital_value_to_phi): Remove.\n-            (edge_initial_value_for_loop_phi): Remove.\n-            (initial_value_for_loop_phi): Remove.\n-            (used_outside_reduction): Remove.\n-            (detect_commutative_reduction): Remove.\n-            (translate_scalar_reduction_to_array_for_stmt): Remove.\n-            (remove_phi): Remove.\n-            (dr_indices_valid_in_loop): Remove.\n-            (close_phi_written_to_memory): Remove.\n-            (translate_scalar_reduction_to_array): Remove.\n-            (rewrite_commutative_reductions_out_of_ssa_close_phi): Remove.\n-            (rewrite_commutative_reductions_out_of_ssa_loop): Remove.\n-            (rewrite_commutative_reductions_out_of_ssa): Remove.\n-            (build_poly_scop): Remove call to rewrite_commutative_reductions_out_of_ssa.\n+\t    Aditya Kumar  <aditya.k7@samsung.com>\n+\n+\t* graphite-sese-to-poly.c (gsi_for_phi_node): Remove.\n+\t(nb_data_writes_in_bb): Remove.\n+\t(split_pbb): Remove.\n+\t(split_reduction_stmt): Remove.\n+\t(is_reduction_operation_p): Remove.\n+\t(phi_contains_arg): Remove.\n+\t(follow_ssa_with_commutative_ops): Remove.\n+\t(detect_commutative_reduction_arg): Remove.\n+\t(detect_commutative_reduction_assign): Remove.\n+\t(follow_inital_value_to_phi): Remove.\n+\t(edge_initial_value_for_loop_phi): Remove.\n+\t(initial_value_for_loop_phi): Remove.\n+\t(used_outside_reduction): Remove.\n+\t(detect_commutative_reduction): Remove.\n+\t(translate_scalar_reduction_to_array_for_stmt): Remove.\n+\t(remove_phi): Remove.\n+\t(dr_indices_valid_in_loop): Remove.\n+\t(close_phi_written_to_memory): Remove.\n+\t(translate_scalar_reduction_to_array): Remove.\n+\t(rewrite_commutative_reductions_out_of_ssa_close_phi): Remove.\n+\t(rewrite_commutative_reductions_out_of_ssa_loop): Remove.\n+\t(rewrite_commutative_reductions_out_of_ssa): Remove.\n+\t(build_poly_scop): Remove call to\n+\trewrite_commutative_reductions_out_of_ssa.\n \n 2015-09-29  Evandro Menezes  <e.menezes@samsung.com>\n \n@@ -175,7 +176,7 @@\n \t* config/sh/sh.c (sh_override_options_after_change): New.\n \t(TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE): Define.\n \t(sh_option_override): Move align_loops, align_jumps and\n-        align_functions handling into sh_override_options_after_change.\n+\talign_functions handling into sh_override_options_after_change.\n \n 2015-09-28  Nathan Sidwell  <nathan@codesourcery.com>\n \n@@ -196,12 +197,12 @@\n \t* omp-builtins.def (BUILT_IN_GOACC_PARALLEL): Change target fn name.\n \n 2015-09-28  Aditya Kumar  <aditya.k7@samsung.com>\n-            Sebastian Pop  <s.pop@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n \n \t* sese.c (invariant_in_sese_p_rec): Remove unused variable.\n \n 2015-09-28  Aditya Kumar  <aditya.k7@samsung.com>\n-            Sebastian Pop  <s.pop@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n \n \t* graphite-optimize-isl.c (optimize_isl): Use ISL_SCHEDULE_FUSE_MAX.\n \t* graphite-scop-detection.c (struct sese_l): New type.\n@@ -231,8 +232,7 @@\n \t(mark_exit_edges): Deleted.\n \t(create_sese_edges): Deleted.\n \t(build_graphite_scops): Deleted.\n-\t(canonicalize_loop_closed_ssa): Recompute all dominators at the\n-\tend.\n+\t(canonicalize_loop_closed_ssa): Recompute all dominators at the end.\n \t(build_scops): Use the new scop_builder to build scops.\n \t(dot_all_scops_1): Use the new pretty printer.  Print loop father\n \tas well.\n@@ -263,17 +263,15 @@\n \tconstitute a valid SCoP.\n \t(region_has_one_loop): Returns true of a region has only one loop.\n \t(add_scop): Add SCoP to the list of valid scops.  Removes an\n-\talready existing scop if it intersects with or subsumed by this\n-\tone.\n+\talready existing scop if it intersects with or subsumed by this one.\n \t(harmful_stmt_in_region): Returns true if SCoP has any statment\n \twhich cannot be represented by Graphite.\n \t(subsumes): Returns true of SCoP S1 subsumes SCoP S2.\n \t(remove_subscops): Remove any SCoP from the list of already found\n \tSCoPs, if subsumed by S1.\n \t(intersects): Return true if region bounded by SCoPs S1 and S2\n \tintersect.\n-\t(remove_intersecting_scops): Remove any SCoP which intersects with\n-\tS1.\n+\t(remove_intersecting_scops): Remove any SCoP which intersects with S1.\n \t* graphite.c (print_graphite_scop_statistics):\n \t(print_graphite_statistics): Print SCoP info while debugging.\n \t(graphite_initialize): Early exit in case number of loops in a\n@@ -287,7 +285,7 @@\n \tloops.\n \n 2015-09-28  Aditya Kumar  <aditya.k7@samsung.com>\n-            Sebastian Pop  <s.pop@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n \n \tPR tree-optimization/67700\n \t* graphite-sese-to-poly.c (parameter_index_in_region): Call\n@@ -299,8 +297,7 @@\n \n 2015-09-28  David Wohlferd  <dw@LimeGreenSocks.com>\n \n-        * doc/extend.texi (Asm Labels): Break out text for data vs\n-\tfunctions.\n+\t* doc/extend.texi (Asm Labels): Break out text for data vs functions.\n \n 2015-09-28  Jiong Wang  <jiong.wang@arm.com>\n \n@@ -388,7 +385,7 @@\n \twithout FPU.\n \t(untyped_return): Do not load %f0 for a target without FPU.\n \n-2015-09-28  Andrew Pinski  <apinski@cavium.com>    \n+2015-09-28  Andrew Pinski  <apinski@cavium.com>\n \n \t* config/aarch64/aarch64.md (prefetch):\n \tChange the predicate of operand 0 to register_operand."}]}