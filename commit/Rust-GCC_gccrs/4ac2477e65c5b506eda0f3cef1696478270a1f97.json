{"sha": "4ac2477e65c5b506eda0f3cef1696478270a1f97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFjMjQ3N2U2NWM1YjUwNmVkYTBmM2NlZjE2OTY0NzgyNzBhMWY5Nw==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2011-08-02T07:46:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T07:46:39Z"}, "message": "sem_type.ads, [...] (Is_Ancestor): Addition of a new formal (Use_Full_View) which permits this routine to climb...\n\n2011-08-02  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_type.ads, sem_type.adb (Is_Ancestor): Addition of a new formal\n\t(Use_Full_View) which permits this routine to climb through the\n\tancestors using the full-view of private parents.\n\t* sem_util.adb (Collect_Interfaces_Info, Implements_Interface): Set\n\tUse_Full_View to true in calls to Is_Ancestor.\n\t* sem_disp.adb (Override_Dispatching_Operation): Set Use_Full_View to\n\ttrue in call to Is_Ancestor.\n\t* exp_ch3.adb (Build_Offset_To_Top_Functions, Initialize_Tag): Set\n\tUse_Full_View to true in call to Is_Ancestor.\n\t* exp_ch7.adb (Controller_Component): Set Use_Full_View to true in\n\tcall to Is_Ancestor.\n\t* exp_ch4.adb (Expand_N_Type_Conversion, Tagged_Membership): Set\n\tUse_Full_View to true in calls to Is_Ancestor.\n\t* exp_disp.adb (Expand_Interface_Actuals, Make_Secondary_DT, Make_DT,\n\tMake_Select_Specific_Data_Table, Register_Primitive,\n\tSet_All_DT_Position): Set Use_Full_View to true in calls to Is_Ancestor.\n\t* exp_intr.adb (Expand_Dispatching_Constructor_Call): Set Use_Full_View\n\tto true in call to Is_Ancestor.\n\t* exp_util.adb (Find_Interface_ADT, Find_Interface_Tag): Set\n\tUse_Full_View to true in calls to Is_Ancestor.\n\t* exp_cg.adb\n\t(Write_Call_Info): Set Use_Full_View to true in call to Is_Ancestor.\n\t(Write_Type_Info): Set Use_Full_View to true in call to Is_Ancestor.\n\nFrom-SVN: r177087", "tree": {"sha": "61844b84eee7975832e53b9b23a6b4cc4e5590af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61844b84eee7975832e53b9b23a6b4cc4e5590af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ac2477e65c5b506eda0f3cef1696478270a1f97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac2477e65c5b506eda0f3cef1696478270a1f97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac2477e65c5b506eda0f3cef1696478270a1f97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac2477e65c5b506eda0f3cef1696478270a1f97/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9f90d12301fa640d4664b7924cbacb75e9e304d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f90d12301fa640d4664b7924cbacb75e9e304d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f90d12301fa640d4664b7924cbacb75e9e304d2"}], "stats": {"total": 142, "additions": 105, "deletions": 37}, "files": [{"sha": "8a82c4515151c5b62835876bce1bc70846ec6661", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4ac2477e65c5b506eda0f3cef1696478270a1f97", "patch": "@@ -1,3 +1,29 @@\n+2011-08-02  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_type.ads, sem_type.adb (Is_Ancestor): Addition of a new formal\n+\t(Use_Full_View) which permits this routine to climb through the\n+\tancestors using the full-view of private parents.\n+\t* sem_util.adb (Collect_Interfaces_Info, Implements_Interface): Set\n+\tUse_Full_View to true in calls to Is_Ancestor.\n+\t* sem_disp.adb (Override_Dispatching_Operation): Set Use_Full_View to\n+\ttrue in call to Is_Ancestor.\n+\t* exp_ch3.adb (Build_Offset_To_Top_Functions, Initialize_Tag): Set\n+\tUse_Full_View to true in call to Is_Ancestor.\n+\t* exp_ch7.adb (Controller_Component): Set Use_Full_View to true in\n+\tcall to Is_Ancestor.\n+\t* exp_ch4.adb (Expand_N_Type_Conversion, Tagged_Membership): Set\n+\tUse_Full_View to true in calls to Is_Ancestor.\n+\t* exp_disp.adb (Expand_Interface_Actuals, Make_Secondary_DT, Make_DT,\n+\tMake_Select_Specific_Data_Table, Register_Primitive,\n+\tSet_All_DT_Position): Set Use_Full_View to true in calls to Is_Ancestor.\n+\t* exp_intr.adb (Expand_Dispatching_Constructor_Call): Set Use_Full_View\n+\tto true in call to Is_Ancestor.\n+\t* exp_util.adb (Find_Interface_ADT, Find_Interface_Tag): Set\n+\tUse_Full_View to true in calls to Is_Ancestor.\n+\t* exp_cg.adb\n+\t(Write_Call_Info): Set Use_Full_View to true in call to Is_Ancestor.\n+\t(Write_Type_Info): Set Use_Full_View to true in call to Is_Ancestor.\n+\n 2011-08-02  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Minor reformatting."}, {"sha": "e5f618f4f9f253c9418a893a342ea44e8e65b440", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=4ac2477e65c5b506eda0f3cef1696478270a1f97", "patch": "@@ -478,7 +478,8 @@ package body Exp_CG is\n         and then\n           Is_Ancestor\n             (Find_Dispatching_Type (Ultimate_Alias (Prim)),\n-             Root_Type (Ctrl_Typ))\n+             Root_Type (Ctrl_Typ),\n+             Use_Full_View => True)\n       then\n          --  This is a special case in which we generate in the ci file the\n          --  slot number of the renaming primitive (i.e. Base2) but instead of\n@@ -616,7 +617,8 @@ package body Exp_CG is\n          if Present (Overridden_Operation (Prim))\n            and then\n              Is_Ancestor\n-               (Find_Dispatching_Type (Overridden_Operation (Prim)), Typ)\n+               (Find_Dispatching_Type (Overridden_Operation (Prim)), Typ,\n+                Use_Full_View => True)\n          then\n             Write_Char (',');\n             Write_Int\n@@ -642,7 +644,8 @@ package body Exp_CG is\n \n                   if Present (Int_Alias)\n                     and then\n-                      not Is_Ancestor (Find_Dispatching_Type (Int_Alias), Typ)\n+                      not Is_Ancestor (Find_Dispatching_Type (Int_Alias), Typ,\n+                                       Use_Full_View => True)\n                     and then (Alias (Prim_Op)) = Prim\n                   then\n                      Write_Char (',');"}, {"sha": "7eb6c99f2728b0d4c51b527360c6fc1e3d202e79", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=4ac2477e65c5b506eda0f3cef1696478270a1f97", "patch": "@@ -2220,7 +2220,9 @@ package body Exp_Ch3 is\n             --  If the interface is a parent of Rec_Type it shares the primary\n             --  dispatch table and hence there is no need to build the function\n \n-            if not Is_Ancestor (Related_Type (Iface_Comp), Rec_Type) then\n+            if not Is_Ancestor (Related_Type (Iface_Comp), Rec_Type,\n+                                Use_Full_View => True)\n+            then\n                Build_Offset_To_Top_Function (Iface_Comp);\n             end if;\n \n@@ -7297,7 +7299,7 @@ package body Exp_Ch3 is\n          --  Initialize the pointer to the secondary DT associated with the\n          --  interface.\n \n-         if not Is_Ancestor (Iface, Typ) then\n+         if not Is_Ancestor (Iface, Typ, Use_Full_View => True) then\n             Append_To (Stmts_List,\n               Make_Assignment_Statement (Loc,\n                 Name =>\n@@ -7394,7 +7396,7 @@ package body Exp_Ch3 is\n             --  Don't need to set any value if this interface shares\n             --  the primary dispatch table.\n \n-            if not Is_Ancestor (Iface, Typ) then\n+            if not Is_Ancestor (Iface, Typ, Use_Full_View => True) then\n                Append_To (Stmts_List,\n                  Build_Set_Static_Offset_To_Top (Loc,\n                    Iface_Tag    => New_Reference_To (Iface_Tag, Loc),"}, {"sha": "c8ba5e57c79e8239df1d65fa3d51a11fbcaa87c7", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=4ac2477e65c5b506eda0f3cef1696478270a1f97", "patch": "@@ -8628,7 +8628,8 @@ package body Exp_Ch4 is\n                if Is_Class_Wide_Type (Actual_Op_Typ)\n                  and then Actual_Op_Typ /= Actual_Targ_Typ\n                  and then Root_Op_Typ /= Actual_Targ_Typ\n-                 and then Is_Ancestor (Root_Op_Typ, Actual_Targ_Typ)\n+                 and then Is_Ancestor (Root_Op_Typ, Actual_Targ_Typ,\n+                                       Use_Full_View => True)\n                then\n                   Make_Tag_Check (Class_Wide_Type (Actual_Targ_Typ));\n                   Make_Conversion := True;\n@@ -10461,7 +10462,8 @@ package body Exp_Ch4 is\n          --    Obj1 in Iface'Class;  --  Compile time error\n \n          if not Is_Class_Wide_Type (Left_Type)\n-           and then (Is_Ancestor (Etype (Right_Type), Left_Type)\n+           and then (Is_Ancestor (Etype (Right_Type), Left_Type,\n+                                  Use_Full_View => True)\n                        or else (Is_Interface (Etype (Right_Type))\n                                  and then Interface_Present_In_Ancestor\n                                            (Typ   => Left_Type,"}, {"sha": "97ec568e0e99759b1a5e5f846aeeb941bbd4dfc6", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=4ac2477e65c5b506eda0f3cef1696478270a1f97", "patch": "@@ -911,7 +911,9 @@ package body Exp_Ch7 is\n \n             --  Otherwise record the outermost one and continue looking\n \n-            elsif Res = Empty or else Is_Ancestor (Res_Scop, Comp_Scop) then\n+            elsif Res = Empty\n+              or else Is_Ancestor (Res_Scop, Comp_Scop, Use_Full_View => True)\n+            then\n                Res      := Comp;\n                Res_Scop := Comp_Scop;\n             end if;"}, {"sha": "07444e7d4aed68f2885e3d1b9e773aea3f8df114", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=4ac2477e65c5b506eda0f3cef1696478270a1f97", "patch": "@@ -1435,7 +1435,9 @@ package body Exp_Disp is\n             --  a parent of the type of the actual because in this case the\n             --  interface primitives are located in the primary dispatch table.\n \n-            elsif Is_Ancestor (Formal_Typ, Actual_Typ) then\n+            elsif Is_Ancestor (Formal_Typ, Actual_Typ,\n+                               Use_Full_View => True)\n+            then\n                null;\n \n             --  Implicit conversion to the class-wide formal type to force\n@@ -1494,7 +1496,9 @@ package body Exp_Disp is\n             --  a parent of the type of the actual because in this case the\n             --  interface primitives are located in the primary dispatch table.\n \n-            elsif Is_Ancestor (Formal_DDT, Actual_DDT) then\n+            elsif Is_Ancestor (Formal_DDT, Actual_DDT,\n+                               Use_Full_View => True)\n+            then\n                null;\n \n             else\n@@ -4090,7 +4094,8 @@ package body Exp_Disp is\n                      --  Tagged_Type. Otherwise the DT associated with the\n                      --  interface is the primary DT.\n \n-                    and then not Is_Ancestor (Iface, Typ)\n+                    and then not Is_Ancestor (Iface, Typ,\n+                                              Use_Full_View => True)\n                   then\n                      if not Build_Thunks then\n                         Prim_Pos :=\n@@ -5087,7 +5092,7 @@ package body Exp_Disp is\n             begin\n                AI := First_Elmt (Typ_Ifaces);\n                while Present (AI) loop\n-                  if Is_Ancestor (Node (AI), Typ) then\n+                  if Is_Ancestor (Node (AI), Typ, Use_Full_View => True) then\n                      Sec_DT_Tag :=\n                        New_Reference_To (DT_Ptr, Loc);\n                   else\n@@ -5098,7 +5103,8 @@ package body Exp_Disp is\n \n                      while Is_Tag (Node (Elmt))\n                         and then not\n-                          Is_Ancestor (Node (AI), Related_Type (Node (Elmt)))\n+                          Is_Ancestor (Node (AI), Related_Type (Node (Elmt)),\n+                                       Use_Full_View => True)\n                      loop\n                         pragma Assert (Has_Thunks (Node (Elmt)));\n                         Next_Elmt (Elmt);\n@@ -6182,7 +6188,8 @@ package body Exp_Disp is\n             if Present (Interface_Alias (Prim))\n               and then not\n                 Is_Ancestor\n-                  (Find_Dispatching_Type (Interface_Alias (Prim)), Typ)\n+                  (Find_Dispatching_Type (Interface_Alias (Prim)), Typ,\n+                   Use_Full_View => True)\n               and then not Examined (UI_To_Int (DT_Position (Alias (Prim))))\n             then\n                Prim_Pos := DT_Position (Alias (Prim));\n@@ -6983,7 +6990,7 @@ package body Exp_Disp is\n          --  No action needed for interfaces that are ancestors of Typ because\n          --  their primitives are located in the primary dispatch table.\n \n-         if Is_Ancestor (Iface_Typ, Tag_Typ) then\n+         if Is_Ancestor (Iface_Typ, Tag_Typ, Use_Full_View => True) then\n             return L;\n \n          --  No action needed for primitives located in the C++ part of the\n@@ -6999,7 +7006,7 @@ package body Exp_Disp is\n \n          Expand_Interface_Thunk (Prim, Thunk_Id, Thunk_Code);\n \n-         if not Is_Ancestor (Iface_Typ, Tag_Typ)\n+         if not Is_Ancestor (Iface_Typ, Tag_Typ, Use_Full_View => True)\n            and then Present (Thunk_Code)\n          then\n             --  Generate the code necessary to fill the appropriate entry of\n@@ -7357,7 +7364,8 @@ package body Exp_Disp is\n \n             elsif Present (Interface_Alias (Prim))\n               and then Is_Ancestor\n-                         (Find_Dispatching_Type (Interface_Alias (Prim)), Typ)\n+                         (Find_Dispatching_Type (Interface_Alias (Prim)), Typ,\n+                          Use_Full_View => True)\n             then\n                pragma Assert (DT_Position (Prim) = No_Uint\n                  and then Present (DTC_Entity (Interface_Alias (Prim))));\n@@ -7379,7 +7387,8 @@ package body Exp_Disp is\n               and then Chars (Prim) = Chars (Alias (Prim))\n               and then Find_Dispatching_Type (Alias (Prim)) /= Typ\n               and then Is_Ancestor\n-                         (Find_Dispatching_Type (Alias (Prim)), Typ)\n+                         (Find_Dispatching_Type (Alias (Prim)), Typ,\n+                          Use_Full_View => True)\n               and then Present (DTC_Entity (Alias (Prim)))\n             then\n                E := Alias (Prim);\n@@ -7445,7 +7454,8 @@ package body Exp_Disp is\n             --  Check if this entry will be placed in the primary DT\n \n             if Is_Ancestor\n-                (Find_Dispatching_Type (Interface_Alias (Prim)), Typ)\n+                 (Find_Dispatching_Type (Interface_Alias (Prim)), Typ,\n+                  Use_Full_View => True)\n             then\n                pragma Assert (DT_Position (Alias (Prim)) /= No_Uint);\n                Set_DT_Position (Prim, DT_Position (Alias (Prim)));"}, {"sha": "4a300b801992132125c8685e52bd2cabbc32bc46", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=4ac2477e65c5b506eda0f3cef1696478270a1f97", "patch": "@@ -231,7 +231,9 @@ package body Exp_Intr is\n          --  If the result type is not parent of Tag_Arg then we need to\n          --  locate the tag of the secondary dispatch table.\n \n-         if not Is_Ancestor (Etype (Result_Typ), Etype (Tag_Arg)) then\n+         if not Is_Ancestor (Etype (Result_Typ), Etype (Tag_Arg),\n+                             Use_Full_View => True)\n+         then\n             pragma Assert (not Is_Interface (Etype (Tag_Arg)));\n \n             Iface_Tag :="}, {"sha": "74e916f93147599648fd6534919843269cb89543", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=4ac2477e65c5b506eda0f3cef1696478270a1f97", "patch": "@@ -1501,7 +1501,7 @@ package body Exp_Util is\n         (not Is_Class_Wide_Type (Typ)\n           and then Ekind (Typ) /= E_Incomplete_Type);\n \n-      if Is_Ancestor (Iface, Typ) then\n+      if Is_Ancestor (Iface, Typ, Use_Full_View => True) then\n          return First_Elmt (Access_Disp_Table (Typ));\n \n       else\n@@ -1510,7 +1510,8 @@ package body Exp_Util is\n          while Present (ADT)\n            and then Present (Related_Type (Node (ADT)))\n            and then Related_Type (Node (ADT)) /= Iface\n-           and then not Is_Ancestor (Iface, Related_Type (Node (ADT)))\n+           and then not Is_Ancestor (Iface, Related_Type (Node (ADT)),\n+                                     Use_Full_View => True)\n          loop\n             Next_Elmt (ADT);\n          end loop;\n@@ -1576,7 +1577,9 @@ package body Exp_Util is\n             while Present (AI_Elmt) loop\n                AI := Node (AI_Elmt);\n \n-               if AI = Iface or else Is_Ancestor (Iface, AI) then\n+               if AI = Iface\n+                 or else Is_Ancestor (Iface, AI, Use_Full_View => True)\n+               then\n                   Found := True;\n                   return;\n                end if;\n@@ -1628,7 +1631,7 @@ package body Exp_Util is\n       --  If the interface is an ancestor of the type, then it shared the\n       --  primary dispatch table.\n \n-      if Is_Ancestor (Iface, Typ) then\n+      if Is_Ancestor (Iface, Typ, Use_Full_View => True) then\n          pragma Assert (Etype (First_Tag_Component (Typ)) = RTE (RE_Tag));\n          return First_Tag_Component (Typ);\n "}, {"sha": "55c1d329fc5a1875df00a9b9eb98da948f65f6fe", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=4ac2477e65c5b506eda0f3cef1696478270a1f97", "patch": "@@ -2087,7 +2087,7 @@ package body Sem_Disp is\n         and then Etype (Tagged_Type) /= Tagged_Type\n         and then Is_Interface (Find_Dispatching_Type (Alias (Prev_Op)))\n         and then not Is_Ancestor (Find_Dispatching_Type (Alias (Prev_Op)),\n-                                  Tagged_Type)\n+                                  Tagged_Type, Use_Full_View => True)\n         and then not Implements_Interface\n                        (Etype (Tagged_Type),\n                         Find_Dispatching_Type (Alias (Prev_Op)))"}, {"sha": "2e0eb7a621f24c61a1a071faf7ca4365f6aecb58", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=4ac2477e65c5b506eda0f3cef1696478270a1f97", "patch": "@@ -2564,7 +2564,11 @@ package body Sem_Type is\n    -- Is_Ancestor --\n    -----------------\n \n-   function Is_Ancestor (T1, T2 : Entity_Id) return Boolean is\n+   function Is_Ancestor\n+     (T1            : Entity_Id;\n+      T2            : Entity_Id;\n+      Use_Full_View : Boolean := False) return Boolean\n+   is\n       BT1 : Entity_Id;\n       BT2 : Entity_Id;\n       Par : Entity_Id;\n@@ -2624,14 +2628,14 @@ package body Sem_Type is\n             then\n                return True;\n \n+            --  Climb to the ancestor type\n+\n             elsif Etype (Par) /= Par then\n \n-               --  If this is a private type and its parent is an interface\n-               --  then use the parent of the full view (which is a type that\n-               --  implements such interface)\n+               --  Use the full-view of private types (if allowed)\n \n-               if Is_Private_Type (Par)\n-                 and then Is_Interface (Etype (Par))\n+               if Use_Full_View\n+                 and then Is_Private_Type (Par)\n                  and then Present (Full_View (Par))\n                then\n                   Par := Etype (Full_View (Par));"}, {"sha": "40e4c606df36cc1027b85e2667b034e306ef1b56", "filename": "gcc/ada/sem_type.ads", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fsem_type.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fsem_type.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.ads?ref=4ac2477e65c5b506eda0f3cef1696478270a1f97", "patch": "@@ -217,9 +217,23 @@ package Sem_Type is\n    --  but conceptually the resolution of the actual takes place in the\n    --  enclosing context and no special disambiguation rules should be applied.\n \n-   function Is_Ancestor (T1, T2 : Entity_Id) return Boolean;\n+   function Is_Ancestor\n+     (T1            : Entity_Id;\n+      T2            : Entity_Id;\n+      Use_Full_View : Boolean := False) return Boolean;\n    --  T1 is a tagged type (not class-wide). Verify that it is one of the\n-   --  ancestors of type T2 (which may or not be class-wide).\n+   --  ancestors of type T2 (which may or not be class-wide). If Use_Full_View\n+   --  is True then the full-view of private parents is used when climbing\n+   --  through the parents of T2.\n+   --\n+   --  Note: For analysis purposes the flag Use_Full_View must be set to False\n+   --  (otherwise we break the privacy contract since this routine returns true\n+   --  for hidden ancestors of private types). For expansion purposes this flag\n+   --  is generally set to True since the expander must know with precision the\n+   --  ancestors of a tagged type. For example, if a private type derives from\n+   --  an interface type then the interface may not be an ancestor of its full\n+   --  view since the full-view is only required to cover the interface (RM 7.3\n+   --  (7.3/2))) and this knowledge affects construction of dispatch tables.\n \n    function Is_Progenitor\n      (Iface : Entity_Id;"}, {"sha": "6645688c1f4bd5680cbf54b64d7028bcfeffa63e", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2477e65c5b506eda0f3cef1696478270a1f97/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4ac2477e65c5b506eda0f3cef1696478270a1f97", "patch": "@@ -1687,7 +1687,7 @@ package body Sem_Util is\n          --  Associate the primary tag component and the primary dispatch table\n          --  with all the interfaces that are parents of T\n \n-         if Is_Ancestor (Iface, T) then\n+         if Is_Ancestor (Iface, T, Use_Full_View => True) then\n             Append_Elmt (First_Tag_Component (T), Components_List);\n             Append_Elmt (Node (First_Elmt (Access_Disp_Table (T))), Tags_List);\n \n@@ -1700,7 +1700,7 @@ package body Sem_Util is\n                Comp_Iface := Related_Type (Node (Comp_Elmt));\n \n                if Comp_Iface = Iface\n-                 or else Is_Ancestor (Iface, Comp_Iface)\n+                 or else Is_Ancestor (Iface, Comp_Iface, Use_Full_View => True)\n                then\n                   Append_Elmt (Node (Comp_Elmt), Components_List);\n                   Append_Elmt (Search_Tag (Comp_Iface), Tags_List);\n@@ -5504,7 +5504,7 @@ package body Sem_Util is\n \n       Elmt := First_Elmt (Ifaces_List);\n       while Present (Elmt) loop\n-         if Is_Ancestor (Node (Elmt), Typ)\n+         if Is_Ancestor (Node (Elmt), Typ, Use_Full_View => True)\n            and then Exclude_Parents\n          then\n             null;"}]}