{"sha": "3a207e62b364d4f09efda25e9bb4bb1b4845710c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EyMDdlNjJiMzY0ZDRmMDllZmRhMjVlOWJiNGJiMWI0ODQ1NzEwYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T08:57:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T08:57:08Z"}, "message": "[multiple changes]\n\n2010-09-09  Pascal Obry  <obry@adacore.com>\n\n\t* gnat_ugn.texi: Update doc on windows related topics.\n\n2010-09-09  Geert Bosch  <bosch@adacore.com>\n\n\t* s-fatgen.adb: Update comments.\n\nFrom-SVN: r164054", "tree": {"sha": "358e0e0efcf194d3fd0342f0196fdb5a124e166c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/358e0e0efcf194d3fd0342f0196fdb5a124e166c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a207e62b364d4f09efda25e9bb4bb1b4845710c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a207e62b364d4f09efda25e9bb4bb1b4845710c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a207e62b364d4f09efda25e9bb4bb1b4845710c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a207e62b364d4f09efda25e9bb4bb1b4845710c/comments", "author": null, "committer": null, "parents": [{"sha": "edb740aa72b882e6899897d454a5855b3155089a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edb740aa72b882e6899897d454a5855b3155089a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edb740aa72b882e6899897d454a5855b3155089a"}], "stats": {"total": 142, "additions": 73, "deletions": 69}, "files": [{"sha": "4600ec62b16fc7254b55c1bc5ca6e57dda871942", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a207e62b364d4f09efda25e9bb4bb1b4845710c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a207e62b364d4f09efda25e9bb4bb1b4845710c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3a207e62b364d4f09efda25e9bb4bb1b4845710c", "patch": "@@ -1,3 +1,11 @@\n+2010-09-09  Pascal Obry  <obry@adacore.com>\n+\n+\t* gnat_ugn.texi: Update doc on windows related topics.\n+\n+2010-09-09  Geert Bosch  <bosch@adacore.com>\n+\n+\t* s-fatgen.adb: Update comments.\n+\n 2010-09-09  Robert Dewar  <dewar@adacore.com>\n \n \t* par-ch4.adb (Box_Error): New procedure."}, {"sha": "03a1d71e90dd4108ef0fa64b5400d2628c78cfcd", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 43, "deletions": 52, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a207e62b364d4f09efda25e9bb4bb1b4845710c/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a207e62b364d4f09efda25e9bb4bb1b4845710c/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=3a207e62b364d4f09efda25e9bb4bb1b4845710c", "patch": "@@ -26891,8 +26891,8 @@ platforms (NT, 2000, and XP Professional).\n * Windows Calling Conventions::\n * Introduction to Dynamic Link Libraries (DLLs)::\n * Using DLLs with GNAT::\n-* Building DLLs with GNAT::\n * Building DLLs with GNAT Project files::\n+* Building DLLs with GNAT::\n * Building DLLs with gnatdll::\n * GNAT and Windows Resources::\n * Debugging a DLL::\n@@ -26953,11 +26953,7 @@ features are not used, but it is not guaranteed to work.\n \n @item\n It is not possible to link against Microsoft libraries except for\n-import libraries. The library must be built to be compatible with\n-@file{MSVCRT.LIB} (/MD Microsoft compiler option), @file{LIBC.LIB} and\n-@file{LIBCMT.LIB} (/ML or /MT Microsoft compiler options) are known to\n-not be compatible with the GNAT runtime. Even if the library is\n-compatible with @file{MSVCRT.LIB} it is not guaranteed to work.\n+import libraries. Interfacing must be done by the mean of DLLs.\n \n @item\n When the compilation environment is located on FAT32 drives, users may\n@@ -27048,29 +27044,8 @@ interoperability strategy.\n \n If you use @command{gcc} to compile the non-Ada part of your application,\n there are no Windows-specific restrictions that affect the overall\n-interoperability with your Ada code. If you plan to use\n-Microsoft tools (e.g.@: Microsoft Visual C/C++), you should be aware of\n-the following limitations:\n-\n-@itemize @bullet\n-@item\n-You cannot link your Ada code with an object or library generated with\n-Microsoft tools if these use the @code{.tls} section (Thread Local\n-Storage section) since the GNAT linker does not yet support this section.\n-\n-@item\n-You cannot link your Ada code with an object or library generated with\n-Microsoft tools if these use I/O routines other than those provided in\n-the Microsoft DLL: @code{msvcrt.dll}. This is because the GNAT run time\n-uses the services of @code{msvcrt.dll} for its I/Os. Use of other I/O\n-libraries can cause a conflict with @code{msvcrt.dll} services. For\n-instance Visual C++ I/O stream routines conflict with those in\n-@code{msvcrt.dll}.\n-@end itemize\n-\n-@noindent\n-If you do want to use the Microsoft tools for your non-Ada code and hit one\n-of the above limitations, you have two choices:\n+interoperability with your Ada code. If you do want to use the\n+Microsoft tools for your non-Ada code, you have two choices:\n \n @enumerate\n @item\n@@ -27082,15 +27057,19 @@ build the DLL and use GNAT to build your executable\n @item\n Or you can encapsulate your Ada code in a DLL to be linked with the\n other part of your application. In this case, use GNAT to build the DLL\n-(@pxref{Building DLLs with GNAT}) and use the Microsoft or whatever\n-environment to build your executable.\n+(@pxref{Building DLLs with GNAT Project files}) and use the Microsoft\n+or whatever environment to build your executable.\n @end enumerate\n \n @node Windows Calling Conventions\n @section Windows Calling Conventions\n @findex Stdcall\n @findex APIENTRY\n \n+This section pertain only to Win32. On Win64 there is a single native\n+calling convention. All convention specifiers are ignored on this\n+platform.\n+\n @menu\n * C Calling Convention::\n * Stdcall Calling Convention::\n@@ -27394,11 +27373,23 @@ $ gnatmake my_ada_app -largs -lAPI\n \n @noindent\n The argument @option{-largs -lAPI} at the end of the @command{gnatmake} command\n-tells the GNAT linker to look first for a library named @file{API.lib}\n-(Microsoft-style name) and if not found for a libraries named\n-@file{libAPI.dll.a}, @file{API.dll.a} or @file{libAPI.a}.\n-(GNAT-style name). Note that if the Ada package spec for @file{API.dll}\n-contains the following pragma\n+tells the GNAT linker to look for an import library. The linker will\n+look for a library name in this specific order:\n+\n+@enumerate\n+@item @file{libAPI.dll.a}\n+@item @file{API.dll.a}\n+@item @file{libAPI.a}\n+@item @file{API.lib}\n+@item @file{libAPI.dll}\n+@item @file{API.dll}\n+@end enumerate\n+\n+The first three are the GNU style import libraries. The third is the\n+Microsoft style import libraries. The last two are the DLL themself.\n+\n+Note that if the Ada package spec for @file{API.dll} contains the\n+following pragma\n \n @smallexample @c ada\n pragma Linker_Options (\"-lAPI\");\n@@ -27637,6 +27628,19 @@ See the Microsoft documentation for further details about the usage of\n @code{lib}.\n @end enumerate\n \n+@node Building DLLs with GNAT Project files\n+@section Building DLLs with GNAT Project files\n+@cindex DLLs, building\n+\n+@noindent\n+There is nothing specific to Windows in the build process.\n+@pxref{Library Projects}.\n+\n+@noindent\n+Due to a system limitation, it is not possible under Windows to create threads\n+when inside the @code{DllMain} routine which is used for auto-initialization\n+of shared libraries, so it is not possible to have library level tasks in SALs.\n+\n @node Building DLLs with GNAT\n @section Building DLLs with GNAT\n @cindex DLLs, building\n@@ -27699,19 +27703,6 @@ option.\n $ gnatmake main -Iapilib -bargs -shared -largs -Lapilib -lAPI\n @end smallexample\n \n-@node Building DLLs with GNAT Project files\n-@section Building DLLs with GNAT Project files\n-@cindex DLLs, building\n-\n-@noindent\n-There is nothing specific to Windows in the build process.\n-@pxref{Library Projects}.\n-\n-@noindent\n-Due to a system limitation, it is not possible under Windows to create threads\n-when inside the @code{DllMain} routine which is used for auto-initialization\n-of shared libraries, so it is not possible to have library level tasks in SALs.\n-\n @node Building DLLs with gnatdll\n @section Building DLLs with gnatdll\n @cindex DLLs, building\n@@ -27727,9 +27718,9 @@ of shared libraries, so it is not possible to have library level tasks in SALs.\n @end menu\n \n @noindent\n-Note that it is preferred to use the built-in GNAT DLL support\n-(@pxref{Building DLLs with GNAT}) or GNAT Project files\n-(@pxref{Building DLLs with GNAT Project files}) to build DLLs.\n+Note that it is preferred to use GNAT Project files\n+(@pxref{Building DLLs with GNAT Project files}) or the built-in GNAT\n+DLL support (@pxref{Building DLLs with GNAT}) or to build DLLs.\n \n This section explains how to build DLLs containing Ada code using\n @code{gnatdll}. These DLLs will be referred to as Ada DLLs in the"}, {"sha": "1288904278d7fb43d9a5689e8470c75e4477f20a", "filename": "gcc/ada/s-fatgen.adb", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a207e62b364d4f09efda25e9bb4bb1b4845710c/gcc%2Fada%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a207e62b364d4f09efda25e9bb4bb1b4845710c/gcc%2Fada%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.adb?ref=3a207e62b364d4f09efda25e9bb4bb1b4845710c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -162,13 +162,12 @@ package body System.Fat_Gen is\n \n    begin\n       if X = 0.0 then\n+\n+         --  The normalized exponent of zero is zero, see RM A.5.2(15)\n+\n          Frac := X;\n          Expo := 0;\n \n-         --  More useful would be defining Expo to be T'Machine_Emin - 1 or\n-         --  T'Machine_Emin - T'Machine_Mantissa, which would preserve\n-         --  monotonicity of the exponent function ???\n-\n       --  Check for infinities, transfinites, whatnot\n \n       elsif X > T'Safe_Last then\n@@ -205,6 +204,7 @@ package body System.Fat_Gen is\n                   end if;\n \n                   --  Ax < R_Power (N)\n+\n                end loop;\n \n                --  1 <= Ax < Rad\n@@ -229,6 +229,7 @@ package body System.Fat_Gen is\n                   end if;\n \n                   --  R_Neg_Power (N) <= Ax < 1\n+\n                end loop;\n             end if;\n \n@@ -553,8 +554,8 @@ package body System.Fat_Gen is\n    -- Scaling --\n    -------------\n \n-   --  Return x * rad ** adjustment quickly,\n-   --  or quietly underflow to zero, or overflow naturally.\n+   --  Return x * rad ** adjustment quickly, or quietly underflow to zero,\n+   --  or overflow naturally.\n \n    function Scaling (X : T; Adjustment : UI) return T is\n    begin\n@@ -586,6 +587,7 @@ package body System.Fat_Gen is\n                end if;\n \n                --  -Log_Power (N) < Ex <= 0\n+\n             end loop;\n \n             --  Ex = 0\n@@ -611,6 +613,7 @@ package body System.Fat_Gen is\n             end loop;\n \n             --  Ex = 0\n+\n          end if;\n \n          return Y;\n@@ -648,13 +651,13 @@ package body System.Fat_Gen is\n       else\n          Decompose (X, X_Frac, X_Exp);\n \n-         --  A special case, if the number we had was a negative power of\n-         --  two, then we want to add half of what we would otherwise add,\n-         --  since the exponent is going to be reduced.\n+         --  A special case, if the number we had was a negative power of two,\n+         --  then we want to add half of what we would otherwise add, since the\n+         --  exponent is going to be reduced.\n \n          --  Note that X_Frac has the same sign as X, so if X_Frac is -0.5,\n-         --  then we know that we have a negative number (and hence a\n-         --  negative power of 2).\n+         --  then we know that we have a negative number (and hence a negative\n+         --  power of 2).\n \n          if X_Frac = -0.5 then\n             return X + Gradual_Scaling (X_Exp - T'Machine_Mantissa - 1);\n@@ -779,8 +782,8 @@ package body System.Fat_Gen is\n       --  one read, but small enough so that all floating point object sizes\n       --  are a multiple of the Float_Word'Size.\n \n-      --  The following conditions must be met for all possible\n-      --  instantiations of the attributes package:\n+      --  The following conditions must be met for all possible instantiations\n+      --  of the attributes package:\n \n       --    - T'Size is an integral multiple of Float_Word'Size\n \n@@ -795,9 +798,11 @@ package body System.Fat_Gen is\n       type Rep_Index is range 0 .. 7;\n \n       Rep_Words : constant Positive :=\n-         (T'Size + Float_Word'Size - 1) / Float_Word'Size;\n-      Rep_Last  : constant Rep_Index := Rep_Index'Min\n-        (Rep_Index (Rep_Words - 1), (T'Mantissa + 16) / Float_Word'Size);\n+                    (T'Size + Float_Word'Size - 1) / Float_Word'Size;\n+      Rep_Last  : constant Rep_Index :=\n+                    Rep_Index'Min\n+                      (Rep_Index (Rep_Words - 1),\n+                       (T'Mantissa + 16) / Float_Word'Size);\n       --  Determine the number of Float_Words needed for representing the\n       --  entire floating-point value. Do not take into account excessive\n       --  padding, as occurs on IA-64 where 80 bits floats get padded to 128"}]}