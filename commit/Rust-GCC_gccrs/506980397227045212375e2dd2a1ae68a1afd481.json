{"sha": "506980397227045212375e2dd2a1ae68a1afd481", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA2OTgwMzk3MjI3MDQ1MjEyMzc1ZTJkZDJhMWFlNjhhMWFmZDQ4MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-08T22:22:46Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-08T22:22:46Z"}, "message": "(expand_expr, case CONVERT_EXPR): If changing signedness and we have a\npromoted SUBREG, clear the promotion flag.\n\nFrom-SVN: r7686", "tree": {"sha": "c4ce734dd53f8400c19bbc147910521867875b30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4ce734dd53f8400c19bbc147910521867875b30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/506980397227045212375e2dd2a1ae68a1afd481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506980397227045212375e2dd2a1ae68a1afd481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/506980397227045212375e2dd2a1ae68a1afd481", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506980397227045212375e2dd2a1ae68a1afd481/comments", "author": null, "committer": null, "parents": [{"sha": "6be583037c3cc9bd254d252e6b50a7f3dba27879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be583037c3cc9bd254d252e6b50a7f3dba27879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be583037c3cc9bd254d252e6b50a7f3dba27879"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "5dfc87913390f7ec2d2a41603a1330dd3a3fb5bc", "filename": "gcc/expr.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506980397227045212375e2dd2a1ae68a1afd481/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506980397227045212375e2dd2a1ae68a1afd481/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=506980397227045212375e2dd2a1ae68a1afd481", "patch": "@@ -4699,7 +4699,19 @@ expand_expr (exp, target, tmode, modifier)\n     case CONVERT_EXPR:\n     case REFERENCE_EXPR:\n       if (mode == TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0))))\n-\treturn expand_expr (TREE_OPERAND (exp, 0), target, VOIDmode, modifier);\n+\t{\n+\t  op0 = expand_expr (TREE_OPERAND (exp, 0), target, VOIDmode,\n+\t\t\t     modifier);\n+\n+\t  /* If the signedness of the conversion differs and OP0 is\n+\t     a promoted SUBREG, clear that indication since we now\n+\t     have to do the proper extension.  */\n+\t  if (TREE_UNSIGNED (TREE_TYPE (TREE_OPERAND (exp, 0))) != unsignedp\n+\t      && GET_CODE (op0) == SUBREG)\n+\t    SUBREG_PROMOTED_VAR_P (op0) = 0;\n+\n+\t  return op0;\n+\t}\n \n       if (TREE_CODE (type) == UNION_TYPE)\n \t{"}]}