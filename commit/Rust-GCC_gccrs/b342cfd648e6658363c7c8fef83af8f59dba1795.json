{"sha": "b342cfd648e6658363c7c8fef83af8f59dba1795", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM0MmNmZDY0OGU2NjU4MzYzYzdjOGZlZjgzYWY4ZjU5ZGJhMTc5NQ==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-06-07T12:47:24Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-06-07T12:47:24Z"}, "message": "PR fortran/95091 - Buffer overflows with submodules and long symbols\n\nWith submodules, name mangling results in long internal symbols.  This\nrequires adjustment of the sizes of temporaries to avoid buffer overflows.\n\n2020-06-07  Harald Anlauf  <anlauf@gmx.de>\n\ngcc/fortran/\n\tPR fortran/95091\n\t* class.c (get_unique_type_string, gfc_hash_value): Enlarge\n\tbuffers, and check whether the strings returned by\n\tget_unique_type_string() fit.", "tree": {"sha": "9a1a25ff8675055eead33666adabad390ffe3fe4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a1a25ff8675055eead33666adabad390ffe3fe4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b342cfd648e6658363c7c8fef83af8f59dba1795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b342cfd648e6658363c7c8fef83af8f59dba1795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b342cfd648e6658363c7c8fef83af8f59dba1795", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b342cfd648e6658363c7c8fef83af8f59dba1795/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8930b138788258aaad77b8fe821ce44d08a66d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8930b138788258aaad77b8fe821ce44d08a66d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8930b138788258aaad77b8fe821ce44d08a66d1"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "8bb73502f5d98ceb7da25fb1c3f9fadb7b092ead", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b342cfd648e6658363c7c8fef83af8f59dba1795/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b342cfd648e6658363c7c8fef83af8f59dba1795/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=b342cfd648e6658363c7c8fef83af8f59dba1795", "patch": "@@ -509,9 +509,11 @@ get_unique_type_string (char *string, gfc_symbol *derived)\n static void\n get_unique_hashed_string (char *string, gfc_symbol *derived)\n {\n-  /* Provide sufficient space to hold \"symbol_Pdtsymbol\".  */\n-  char tmp[2*GFC_MAX_SYMBOL_LEN+5];\n+  /* Provide sufficient space to hold \"symbol.symbol_symbol\".  */\n+  char tmp[3*GFC_MAX_SYMBOL_LEN+3];\n   get_unique_type_string (&tmp[0], derived);\n+  size_t len = strnlen (tmp, sizeof (tmp));\n+  gcc_assert (len < sizeof (tmp));\n   /* If string is too long, use hash value in hex representation (allow for\n      extra decoration, cf. gfc_build_class_symbol & gfc_find_derived_vtab).\n      We need space to for 15 characters \"__class_\" + symbol name + \"_%d_%da\",\n@@ -532,12 +534,13 @@ unsigned int\n gfc_hash_value (gfc_symbol *sym)\n {\n   unsigned int hash = 0;\n-  /* Provide sufficient space to hold \"symbol_Pdtsymbol\".  */\n-  char c[2*GFC_MAX_SYMBOL_LEN+5];\n+  /* Provide sufficient space to hold \"symbol.symbol_symbol\".  */\n+  char c[3*GFC_MAX_SYMBOL_LEN+3];\n   int i, len;\n \n   get_unique_type_string (&c[0], sym);\n-  len = strlen (c);\n+  len = strnlen (c, sizeof (c));\n+  gcc_assert (len < sizeof (c));\n \n   for (i = 0; i < len; i++)\n     hash = (hash << 6) + (hash << 16) - hash + c[i];"}, {"sha": "1c48dca2f4ace74b91aee11568d686b4adb7d32b", "filename": "gcc/testsuite/gfortran.dg/pr95091.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b342cfd648e6658363c7c8fef83af8f59dba1795/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95091.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b342cfd648e6658363c7c8fef83af8f59dba1795/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95091.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95091.f90?ref=b342cfd648e6658363c7c8fef83af8f59dba1795", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile }\n+! { dg-options \"-fsecond-underscore\" }\n+! PR fortran/95091 - ICE in gfc_hash_value\n+\n+module m2345678901234567890123456789012345678901234567890123456789_123\n+  type t2345678901234567890123456789012345678901234567890123456789_123\n+  end type t2345678901234567890123456789012345678901234567890123456789_123\n+  interface\n+     module subroutine s2345678901234567890123456789012345678901234567890123456789_123 &\n+          (x2345678901234567890123456789012345678901234567890123456789_123)\n+    end\n+  end interface\n+end\n+submodule(m2345678901234567890123456789012345678901234567890123456789_123) &\n+     n2345678901234567890123456789012345678901234567890123456789_123\n+  type, extends(t2345678901234567890123456789012345678901234567890123456789_123) :: &\n+    u2345678901234567890123456789012345678901234567890123456789_123\n+  end type\n+end"}]}