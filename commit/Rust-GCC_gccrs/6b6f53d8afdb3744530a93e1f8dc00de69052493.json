{"sha": "6b6f53d8afdb3744530a93e1f8dc00de69052493", "node_id": "C_kwDOANBUbNoAKDZiNmY1M2Q4YWZkYjM3NDQ1MzBhOTNlMWY4ZGMwMGRlNjkwNTI0OTM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-29T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-29T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "a8892f2725bc4b663f5c9c62b14e17ab322c75fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8892f2725bc4b663f5c9c62b14e17ab322c75fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b6f53d8afdb3744530a93e1f8dc00de69052493", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6f53d8afdb3744530a93e1f8dc00de69052493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b6f53d8afdb3744530a93e1f8dc00de69052493", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6f53d8afdb3744530a93e1f8dc00de69052493/comments", "author": null, "committer": null, "parents": [{"sha": "9ae8b993cd362e8aea4f65580aaf1453120207f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ae8b993cd362e8aea4f65580aaf1453120207f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ae8b993cd362e8aea4f65580aaf1453120207f2"}], "stats": {"total": 385, "additions": 384, "deletions": 1}, "files": [{"sha": "cfacc18c319e5f93273131b33e3004c18014daf6", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1,3 +1,8 @@\n+2022-04-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc-changelog/git_update_version.py (active_refs): Add\n+\treleases/gcc-12.\n+\n 2022-04-25  Martin Liska  <mliska@suse.cz>\n \n \t* filter-clang-warnings.py: Filter out"}, {"sha": "1599c454b23191b29077e37bc0b69bdc627b0d3b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1,3 +1,121 @@\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* doc/gcov.texi (Profiling and Test Coverage in Freestanding\n+\tEnvironments): New section.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* doc/gcov-tool.texi: Document merge-stream subcommand.\n+\t* doc/invoke.texi (fprofile-info-section): Mention merge-stream\n+\tsubcommand of gcov-tool.\n+\t* gcov-tool.cc (gcov_profile_merge_stream): Declare.\n+\t(print_merge_stream_usage_message): New.\n+\t(merge_stream_usage): Likewise.\n+\t(do_merge_stream): Likewise.\n+\t(print_usage): Call print_merge_stream_usage_message().\n+\t(main): Call do_merge_stream() to execute merge-stream subcommand.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* gcov-io.cc (gcov_file_error): New enum.\n+\t(gcov_var): Use gcov_file_error enum for the error member.\n+\t(gcov_open): Use GCOV_FILE_NO_ERROR.\n+\t(gcov_close): Use GCOV_FILE_WRITE_ERROR.\n+\t(gcov_write): Likewise.\n+\t(gcov_write_unsigned): Likewise.\n+\t(gcov_write_string): Likewise.\n+\t(gcov_read_bytes): Set error code if EOF is reached.\n+\t(gcov_read_counter): Use GCOV_FILE_COUNTER_OVERFLOW.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* gcov-io.cc (GCOV_MODE_STDIN): Define.\n+\t(gcov_position): For gcov-tool, return calculated position if file is\n+\tstdin.\n+\t(gcov_open):  For gcov-tool, use stdin if filename is NULL.\n+\t(gcov_close): For gcov-tool, do not close stdin.\n+\t(gcov_read_bytes): For gcov-tool, update position if file is stdin.\n+\t(gcov_sync): For gcov-tool, discard input if file is stdin.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* doc/invoke.texi (fprofile-info-section): Mention\n+\t__gcov_filename_to_gcfn().  Use \"freestanding\" to match with C11\n+\tstandard language.  Fix minor example code issues.\n+\t* gcov-io.h (GCOV_FILENAME_MAGIC): Define and document.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* gcov-io.cc (gcov_seek): Make it static.\n+\t* gcov-io.h (struct gcov_summary): Do not mention gcov_seek().\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* gcov-tool.cc (gcov_do_dump): Add mode parameter.\n+\t(gcov_output_files): Open files for reading and writing.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* gcov-io.cc (gcov_open): Always use the mode parameter.\n+\t* gcov-io.h (gcov_open): Declare it unconditionally.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* gcov-tool.cc (gcov_profile_merge): Adjust return type.\n+\t(profile_merge): Allow merging of directories which contain no profile\n+\tfiles.\n+\n+2022-04-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* doc/invoke.texi (-fdump-analyzer-feasibility): Mention the\n+\tfpath.txt output.\n+\n+2022-04-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386-expand.cc (ix86_expand_int_movcc): Create a\n+\ttemporary only if out overlaps compare_op, not when it overlaps\n+\top0 or op1.\n+\n+2022-04-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR lto/105399\n+\t* cgraph.cc (cgraph_node::verify_node): Don't verify\n+\tsemantic_interposition flag against\n+\topt_for_fn (decl, flag_semantic_interposition) for aliases in lto1.\n+\n+2022-04-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/105331\n+\t* config/i386/i386.cc (ix86_gimplify_va_arg): Mark va_arg_tmp\n+\ttemporary TREE_ADDRESSABLE before trying to gimplify ADDR_EXPR\n+\tof it.\n+\n+2022-04-28  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/install.texi (Configuration): Remove misleading text\n+\taround LE PowerPC Linux multilibs.\n+\n+2022-04-28  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR d/103528\n+\t* doc/install.texi (Tools/packages necessary for building GCC)\n+\t(GDC): Document libphobos requirement.\n+\t(Host/target specific installation notes for GCC, *-*-solaris2*):\n+\tDocument libphobos and GDC specifics.\n+\n+2022-04-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105219\n+\t* tree-vect-loop.cc (vect_transform_loop): Disable\n+\tspecial code narrowing the vectorized epilogue max\n+\titerations when peeling for alignment or gaps was in effect.\n+\n+2022-04-28  Xi Ruoyao  <xry111@mengyan1223.wang>\n+\n+\t* config/loongarch/loongarch.cc\n+\t(loongarch_flatten_aggregate_field): Ignore empty fields for\n+\tRECORD_TYPE.\n+\n 2022-04-27  Lulu Cheng  <chenglulu@loongson.cn>\n \n \t* config/loongarch/loongarch.md: Add fdiv define_expand template,"}, {"sha": "4041ef76b79f95203d4f788ae0346d8fd1ef76a0", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1 +1 @@\n-20220428\n+20220429"}, {"sha": "f4069605f49e1d53f9e517d8794f8925c1a3576b", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1,3 +1,26 @@\n+2022-04-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105285\n+\t* store.cc (binding_cluster::get_any_binding): Handle accessing\n+\tsub_svalues of clusters where the base region has a symbolic\n+\tbinding.\n+\n+2022-04-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* diagnostic-manager.cc (epath_finder::process_worklist_item):\n+\tCall dump_feasible_path when a path that reaches the the target\n+\tenode is found.\n+\t(epath_finder::dump_feasible_path): New.\n+\t* engine.cc (feasibility_state::dump_to_pp): New.\n+\t* exploded-graph.h (feasibility_state::dump_to_pp): New decl.\n+\t* feasible-graph.cc (feasible_graph::dump_feasible_path): New.\n+\t* feasible-graph.h (feasible_graph::dump_feasible_path): New\n+\tdecls.\n+\t* program-point.cc (function_point::print): Fix missing trailing\n+\tnewlines.\n+\t* program-point.h (program_point::print_source_line): Remove\n+\tunimplemented decl.\n+\n 2022-04-25  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/105365"}, {"sha": "6304c14a893c867be3d2ec42e800445b98e2a684", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1,3 +1,45 @@\n+2022-04-28  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105425\n+\t* pt.cc (unify) <case TEMPLATE_PARM_INDEX>: Treat\n+\tDEPENDENT_OPERATOR_TYPE like an empty type.\n+\n+2022-04-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/104051\n+\t* coroutines.cc (coro_diagnose_throwing_final_aw_expr): Handle\n+\tnon-target expression inputs.\n+\n+2022-04-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/105301\n+\t* coroutines.cc (coro_promise_type_found_p): Account for possible\n+\tmutliple overloads of the promise return_value() method.\n+\n+2022-04-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/105287\n+\t* coroutines.cc (maybe_promote_temps): Ensure generated temporaries\n+\tare added to the bind expr.\n+\t(add_var_to_bind): Fix local var naming to use portable punctuation.\n+\t(register_local_var_uses): Do not add synthetic names to unnamed\n+\ttemporaries.\n+\n+2022-04-28  Nathan Sidwell  <nathan@acm.org>\n+\t    Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/103868\n+\t* coroutines.cc (finish_co_await_expr): Do not process non-dependent\n+\tcoroutine expressions at template definition time.\n+\t(finish_co_yield_expr): Likewise.\n+\t(finish_co_return_stmt): Likewise.\n+\n+2022-04-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90107\n+\t* parser.cc (cp_parser_class_specifier_1): Accept :: after a class\n+\tdefinition.\n+\n 2022-04-27  Jason Merrill  <jason@redhat.com>\n \n \t* tree.cc (strip_typedefs): Add default argument comments."}, {"sha": "546f21ce7720f9c5359ce7c26a56cc40198684bd", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1,3 +1,9 @@\n+2022-04-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dmd/MERGE: Merge upstream dmd 313d28b3d.\n+\t* d-port.cc (Port::memicmp): Use d_size_t instead of size_t.\n+\t(Port::valcpy): Likewise.\n+\n 2022-04-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* dmd/MERGE: Merge upstream dmd eb7bee331."}, {"sha": "017f3e6d2da582241299e4c40775ec6f2ee3996c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1,3 +1,8 @@\n+2022-04-28  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* gfortran.texi: Mention r16_ieee and r16_ibm.\n+\t* invoke.texi: Likewise.\n+\n 2022-04-27  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/103662"}, {"sha": "2a7aa6b2e5cdf61305dd100af54e0b5ed671889f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1,3 +1,90 @@\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* gcc.dg/gcov-info-to-gcda.c: Test __gcov_filename_to_gcfn().\n+\n+2022-04-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105285\n+\t* gcc.dg/analyzer/symbolic-12.c: New test.\n+\n+2022-04-28  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105425\n+\t* g++.dg/template/partial-specialization13.C: New test.\n+\n+2022-04-28  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* gcc.dg/lto/pr94157_0.c: Revert last change.\n+\t* lib/prune.exp (prune_gcc_output): Prune new linker warning.\n+\n+2022-04-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR lto/105399\n+\t* g++.dg/lto/pr105399_0.C: New test.\n+\n+2022-04-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/104051\n+\t* g++.dg/coroutines/pr104051.C: New test.\n+\n+2022-04-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/105301\n+\t* g++.dg/coroutines/pr105301.C: New test.\n+\n+2022-04-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/105287\n+\t* g++.dg/coroutines/pr105287.C: New test.\n+\n+2022-04-28  Nathan Sidwell  <nathan@acm.org>\n+\t    Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/103868\n+\t* g++.dg/coroutines/pr103868.C: New test.\n+\n+2022-04-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* gcc.target/i386/memcpy-strategy-10.c: Account for\n+\t__USER_LABEL_PREFIX__.\n+\t* gcc.target/i386/memcpy-strategy-5.c: Likewise.\n+\t* gcc.target/i386/memset-strategy-5.c: Likewise.\n+\t* gcc.target/i386/memset-strategy-7.c: Likewise.\n+\n+2022-04-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* g++.target/i386/mv31.C: Add target supports guard for ifuncs.\n+\n+2022-04-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90107\n+\t* g++.dg/parse/qualified6.C: New test.\n+\n+2022-04-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/105331\n+\t* gcc.dg/pr105331.c: New test.\n+\n+2022-04-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105219\n+\t* gcc.dg/vect/pr105219.c: New testcase.\n+\n+2022-04-28  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/105334\n+\t* gcc.target/powerpc/pr105334.c: New test.\n+\n+2022-04-28  Jia-Wei Chen  <jiawei@iscas.ac.cn>\n+\n+\tPR target/104676\n+\t* gcc.dg/torture/pr104676.c: Add \"{target pthread}\" check.\n+\n+2022-04-28  Xi Ruoyao  <xry111@mengyan1223.wang>\n+\n+\t* gcc.target/loongarch/zero-size-field-pass.c: New test.\n+\t* gcc.target/loongarch/zero-size-field-ret.c: New test.\n+\n 2022-04-27  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* gfortran.dg/pr70673.f90: Removed second invalid"}, {"sha": "f597666f504bd2a2fe25dbbd9201000e8437fdf3", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1,3 +1,68 @@\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* libgcov-util.c (ftw_read_file): Improve notice using xstrerror().\n+\t(gcov_profile_merge_stream): Likewise.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* libgcov-util.c (consume_stream): New.\n+\t(get_target_profiles_for_merge): Likewise.\n+\t(gcov_profile_merge_stream): Likewise.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* libgcov-util.c (ftw_read_file): Use size_t for strlen() variables.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* libgcov-util.c (read_gcda_file): Do not open file.\n+\t(ftw_read_file): Open file here.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* libgcov-util.c (read_gcda_file): Prepend new info object to global\n+\tlist.\n+\t(ftw_read_file): Remove list append here.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* libgcov-util.c (read_gcda_file): Do not duplicate filename.\n+\t(ftw_read_file): Duplicate filename for read_gcda_file().\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* gcov.h (__gcov_info_to_gcda): Mention __gcov_filename_to_gcfn().\n+\t(__gcov_filename_to_gcfn): Declare and document.\n+\t* libgcov-driver.c (dump_string): New.\n+\t(__gcov_filename_to_gcfn): Likewise.\n+\t(__gcov_info_to_gcda): Adjust comment to match C11 standard language.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* libgcov.h (gcov_seek): Remove define and declaration.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* libgcov-driver-system.c (gcov_exit_open_gcda_file): Add mode\n+\tparameter.  Pass mode to gcov_open() calls.\n+\t* libgcov-driver.c (dump_one_gcov):  Add mode parameter.  Pass mode to\n+\tgcov_exit_open_gcda_file() call.\n+\t(gcov_do_dump): Add mode parameter.  Pass mode to dump_one_gcov()\n+\tcalls.\n+\t(__gcov_dump_one):  Open file for reading and writing.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* libgcov-driver-system.c (gcov_exit_open_gcda_file): Open file for\n+\treading and writing.\n+\t* libgcov-util.c (read_gcda_file): Open file for reading.\n+\t* libgcov.h (gcov_open): Delete declaration.\n+\n+2022-04-28  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* libgcov-util.c (gcov_profile_merge): Return the list of merged\n+\tprofiles.  Accept empty target and source profile lists.\n+\n 2022-04-08  Sergei Trofimovich  <siarheit@google.com>\n \n \t* config/ia64/fde-glibc.c: Make a no-op in inhibit_libc mode."}, {"sha": "aff1ab966a04a863145ead6fc94ea761ad11be2b", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1,3 +1,10 @@\n+2022-04-28  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR fortran/104717\n+\t* testsuite/libgomp.oacc-fortran/print-1.f90: Add OpenACC\n+\tprivatization scanning.  For GCN offloading compilation, raise\n+\t'-mgang-private-size'.\n+\n 2022-04-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libgomp/105358"}, {"sha": "de5cce438706b58303b545f82141f05d025a1032", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1,3 +1,7 @@\n+2022-04-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* libdruntime/MERGE: Merge upstream druntime e361d200.\n+\n 2022-04-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* libdruntime/gcc/emutls.d (emutlsDestroyThread): Clear the per-thread"}, {"sha": "c174262986cc4134708f48233274d68bb1803f23", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1,3 +1,19 @@\n+2022-04-28  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/99290\n+\t* src/c++17/fs_ops.cc (fs::copy): Pass error_code to\n+\tdirectory_iterator constructor, and check on each iteration.\n+\t* src/filesystem/ops.cc (fs::copy): Likewise.\n+\t* testsuite/27_io/filesystem/operations/copy.cc: Check for\n+\terrors during recursion.\n+\t* testsuite/experimental/filesystem/operations/copy.cc:\n+\tLikewise.\n+\n+2022-04-28  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* config/abi/pre/gnu-versioned-namespace.ver: Remove\n+\tstd::random_device::* pattern.\n+\n 2022-04-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/abi/post/x86_64-linux-gnu/baseline_symbols.txt: Update."}, {"sha": "d9d586d1fdec2804b8fa328d0fd65a2d9c0d5c26", "filename": "maintainer-scripts/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6f53d8afdb3744530a93e1f8dc00de69052493/maintainer-scripts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6f53d8afdb3744530a93e1f8dc00de69052493/maintainer-scripts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2FChangeLog?ref=6b6f53d8afdb3744530a93e1f8dc00de69052493", "patch": "@@ -1,3 +1,8 @@\n+2022-04-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* crontab: Snapshots from trunk are now GCC 13 related.\n+\tAdd GCC 12 snapshots from the respective branch.\n+\n 2021-05-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* crontab: Stop doing gcc-8 snapshots."}]}