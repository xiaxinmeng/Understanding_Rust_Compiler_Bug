{"sha": "66bc5940f137cfe9a38e37c2619189604fd246b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZiYzU5NDBmMTM3Y2ZlOWEzOGUzN2MyNjE5MTg5NjA0ZmQyNDZiNw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-11-21T07:32:03Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-11-21T07:32:03Z"}, "message": "mkcheck.in (explanation): Don't paste output of passing compiles into log file.\n\n\n2000-11-20  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* mkcheck.in (explanation): Don't paste output of passing compiles\n\tinto log file. Use -static. Get version info.\n\n\t* testsuite/23_containers/vector_ctor.cc (test02): Fix thinko.\n\nFrom-SVN: r37606", "tree": {"sha": "2e7ae88a58eaf808e44c5bd9e7d1a338f4e3eca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e7ae88a58eaf808e44c5bd9e7d1a338f4e3eca5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66bc5940f137cfe9a38e37c2619189604fd246b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66bc5940f137cfe9a38e37c2619189604fd246b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66bc5940f137cfe9a38e37c2619189604fd246b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66bc5940f137cfe9a38e37c2619189604fd246b7/comments", "author": null, "committer": null, "parents": [{"sha": "6b16805ede8c2ea6163d01a61c1a087497d2a769", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b16805ede8c2ea6163d01a61c1a087497d2a769", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b16805ede8c2ea6163d01a61c1a087497d2a769"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "0a460732b04bd01fc6beb811a09b02806c1089f4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66bc5940f137cfe9a38e37c2619189604fd246b7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66bc5940f137cfe9a38e37c2619189604fd246b7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=66bc5940f137cfe9a38e37c2619189604fd246b7", "patch": "@@ -1,4 +1,11 @@\n-2000-11-21  Gabriel Dos Reis  <gdr@codesourcery.com>\n+2000-11-20  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* mkcheck.in (explanation): Don't paste output of passing compiles\n+\tinto log file. Use -static. Get version info.\n+\n+\t* testsuite/23_containers/vector_ctor.cc (test02): Fix thinko.\n+\n+2000-11-20  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* include/bits/std_complex.h (complex<double>): Constructor\n \tcomplex<double>::complex(const complex<float>&) is not explicit;\n@@ -17,8 +24,6 @@\n \n \t* testsuite/23_containers/vector_ctor.cc (test02): Add test from\n \tlibstdc++/102.\n-\n-\t* src/string-inst.cc: Tweaks.\n \t\n 2000-11-20  Joseph S. Myers  <jsm28@cam.ac.uk>\n "}, {"sha": "b4b38e12a14ad676cbef7a31966cd099f92aa99c", "filename": "libstdc++-v3/mkcheck.in", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66bc5940f137cfe9a38e37c2619189604fd246b7/libstdc%2B%2B-v3%2Fmkcheck.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66bc5940f137cfe9a38e37c2619189604fd246b7/libstdc%2B%2B-v3%2Fmkcheck.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmkcheck.in?ref=66bc5940f137cfe9a38e37c2619189604fd246b7", "patch": "@@ -112,28 +112,27 @@ CXX_FLAG=\"-ggdb3 -DDEBUG_ASSERT @SECTION_FLAGS@ @SECTION_LDFLAGS@\"\n SH_FLAG=\"\"\n \n # specific libtool flag(s) to force the use of static libraries, if any\n-#ST_FLAG=\"-static\"\n-ST_FLAG=\"-all-static\"\n+ST_FLAG=\"-static\"\n+#ST_FLAG=\"-all-static\"\n \n # LTCXX == how to call libtool when creating an executable\n-# LTEXE == how to call libtool when running an executable\n # LIBS == any extra needed -l switches, etc (may need more libs, lose lose)\n if [ $WHICH -eq 0 ]; then\n   LTCXX=\"$LIBTOOL --tag=CXX --mode=link \\\n           $CXX $CXX_FLAG $INC_PATH   \\\n           $LIB_PATH/../libsupc++/libsupc++.la  $LIB_PATH/libstdc++.la   \\\n           -no-install\"\n-  LTEXE=\"$LIBTOOL --mode=execute\"\n   LIBS=\"-nodefaultlibs -lc -lgcc -lc\"\n elif [ $WHICH -eq 1 ]; then\n   # For the installed version, we really only need to use libtool and\n   # the .la file to get correct rpaths.\n   LTCXX=\"$LIBTOOL --tag=CXX --mode=link \\\n           $CXX $CXX_FLAG $INC_PATH -L$LIB_PATH   \\\n           $LIB_PATH/libstdc++.la -no-install -rpath $LIB_PATH\"\n-  LTEXE=\"$LIBTOOL --mode=execute\"\n   LIBS=\n fi\n+# LTEXE == how to call libtool when running an executable\n+LTEXE=\"$LIBTOOL --mode=execute\"\n \n # Set up the testing directory, which should be in a directory called\n # \"testsuite\" in the root level of the build directory.\n@@ -200,8 +199,7 @@ chmod u+w $TEST_DIR/*.tst\n \n # Emit useful info about compiler and platform\n echo \"host: $(uname -mrsv)\" >> $RESULTS_FILE\n-echo \"compiler: $($CXX -v 2>&1 | tail -1)\" >> $RESULTS_FILE\n-echo \"$($CXX -v 2>&1 | grep ^Configured)\" >> $RESULTS_FILE\n+echo \"compiler: $($CXX -v 2>&1)\" >> $RESULTS_FILE\n echo \"compiler flags: $CXX_FLAG\" >> $RESULTS_FILE\n echo \"date: $(date +%Y%m%d)\" >> $RESULTS_FILE\n echo \"\" >> $RESULTS_FILE\n@@ -377,12 +375,9 @@ test_file()\n     # eventually have to calculate time_t anyhow.  Or 3) just grab two\n     # time_t's (no more overhead than grabbing two date(1)'s).\n     compiler_invocation=\"$LTCXX $S_FLAG $SRC_NAME -o $EXENAME $LIBS\"\n-    # Why the leading weird character, like a colon?  That way you can\n-    # 'grep -v ^: *mkchecklog.txt' and just see the errors.\n-    #printf \"\\n: \" >> $LOG_FILE\n     printf \"\\n\" >> $LOG_FILE\n     COMP_TIME_START=$($TEST_DIR/printnow)\n-    $compiler_invocation\n+    $compiler_invocation >> compile.out 2>&1\n     COMP_TIME_END=$($TEST_DIR/printnow)\n \n     if [ $COMP_TIME_START -lt $COMP_TIME_END ]; then\n@@ -392,6 +387,7 @@ test_file()\n     fi\n \n     if [ -f $EXENAME ]; then\n+        rm compile.out\n         size_command TEXT\n         size_command DATA\n         size_command SIZE\n@@ -427,7 +423,8 @@ test_file()\n         fi\n     else\n         # the file did not compile/link.\n-        $compiler_invocation >> $LOG_FILE 2>&1\n+       `cat compile.out > $LOG_FILE` \n+\trm compile.out\n         RESULT=\"-b\"\n         TEXT=\"0\"\n         DATA=\"0\""}]}