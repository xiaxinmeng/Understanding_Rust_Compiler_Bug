{"sha": "2cc7d3a7da20bcfd854302b1f265c6551b8a3741", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNjN2QzYTdkYTIwYmNmZDg1NDMwMmIxZjI2NWM2NTUxYjhhMzc0MQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-05-01T18:51:15Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-05-01T18:51:15Z"}, "message": "-Wformat: fix nonsensical \"wide character\" message (PR c/84258)\n\ngcc/c-family/ChangeLog:\n\tPR c/84258\n\t* c-format.c (struct format_check_results): Add field\n\t\"number_non_char\".\n\t(check_format_info): Initialize it, and warn if encountered.\n\t(check_format_arg): Distinguish between wide char and\n\teverything else when detecting arrays of non-char.\n\ngcc/testsuite/ChangeLog:\n\tPR c/84258\n\t* c-c++-common/Wformat-pr84258.c: New test.\n\nFrom-SVN: r259807", "tree": {"sha": "6a4fbd7ff8617e1040301cc5459a55a9fbb6c517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a4fbd7ff8617e1040301cc5459a55a9fbb6c517"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cc7d3a7da20bcfd854302b1f265c6551b8a3741", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cc7d3a7da20bcfd854302b1f265c6551b8a3741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cc7d3a7da20bcfd854302b1f265c6551b8a3741", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cc7d3a7da20bcfd854302b1f265c6551b8a3741/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41e2c1b0b4effb21729299c5dd7b3b2abd03d87b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e2c1b0b4effb21729299c5dd7b3b2abd03d87b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41e2c1b0b4effb21729299c5dd7b3b2abd03d87b"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "a6ae85f24cdf49001b4c999f202382f35f959889", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7d3a7da20bcfd854302b1f265c6551b8a3741/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7d3a7da20bcfd854302b1f265c6551b8a3741/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=2cc7d3a7da20bcfd854302b1f265c6551b8a3741", "patch": "@@ -1,3 +1,12 @@\n+2018-05-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/84258\n+\t* c-format.c (struct format_check_results): Add field\n+\t\"number_non_char\".\n+\t(check_format_info): Initialize it, and warn if encountered.\n+\t(check_format_arg): Distinguish between wide char and\n+\teverything else when detecting arrays of non-char.\n+\n 2018-04-30  David Malcolm  <dmalcolm@redhat.com>\n \n \t* c-format.c (get_corrected_substring): Update for"}, {"sha": "a0192dd3296bc18b6ebd7355a4e93785a8b89761", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7d3a7da20bcfd854302b1f265c6551b8a3741/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7d3a7da20bcfd854302b1f265c6551b8a3741/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=2cc7d3a7da20bcfd854302b1f265c6551b8a3741", "patch": "@@ -974,6 +974,8 @@ struct format_check_results\n   /* Number of leaves of the format argument that were wide string\n      literals.  */\n   int number_wide;\n+  /* Number of leaves of the format argument that are not array of \"char\".  */\n+  int number_non_char;\n   /* Number of leaves of the format argument that were empty strings.  */\n   int number_empty;\n   /* Number of leaves of the format argument that were unterminated\n@@ -1435,6 +1437,7 @@ check_format_info (function_format_info *info, tree params,\n   res.extra_arg_loc = UNKNOWN_LOCATION;\n   res.number_dollar_extra_args = 0;\n   res.number_wide = 0;\n+  res.number_non_char = 0;\n   res.number_empty = 0;\n   res.number_unterminated = 0;\n   res.number_other = 0;\n@@ -1511,6 +1514,10 @@ check_format_info (function_format_info *info, tree params,\n   if (res.number_wide > 0)\n     warning_at (loc, OPT_Wformat_, \"format is a wide character string\");\n \n+  if (res.number_non_char > 0)\n+    warning_at (loc, OPT_Wformat_,\n+\t\t\"format string is not an array of type %qs\", \"char\");\n+\n   if (res.number_unterminated > 0)\n     warning_at (loc, OPT_Wformat_, \"unterminated format string\");\n }\n@@ -1656,9 +1663,16 @@ check_format_arg (void *ctx, tree format_tree,\n       res->number_non_literal++;\n       return;\n     }\n-  if (TYPE_MAIN_VARIANT (TREE_TYPE (TREE_TYPE (format_tree))) != char_type_node)\n+  tree underlying_type\n+    = TYPE_MAIN_VARIANT (TREE_TYPE (TREE_TYPE (format_tree)));\n+  if (underlying_type != char_type_node)\n     {\n-      res->number_wide++;\n+      if (underlying_type == char16_type_node\n+\t  || underlying_type == char32_type_node\n+\t  || underlying_type == wchar_type_node)\n+\tres->number_wide++;\n+      else\n+\tres->number_non_char++;\n       return;\n     }\n   format_chars = TREE_STRING_POINTER (format_tree);"}, {"sha": "f5b94c65dafa4a989992f5a1c957eee14330a6b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7d3a7da20bcfd854302b1f265c6551b8a3741/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7d3a7da20bcfd854302b1f265c6551b8a3741/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2cc7d3a7da20bcfd854302b1f265c6551b8a3741", "patch": "@@ -1,3 +1,8 @@\n+2018-05-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/84258\n+\t* c-c++-common/Wformat-pr84258.c: New test.\n+\n 2018-05-01  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n         PR tree-optimization/82665"}, {"sha": "d2870a887019394060bcb04c5047e1ca68d41da2", "filename": "gcc/testsuite/c-c++-common/Wformat-pr84258.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7d3a7da20bcfd854302b1f265c6551b8a3741/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWformat-pr84258.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7d3a7da20bcfd854302b1f265c6551b8a3741/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWformat-pr84258.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWformat-pr84258.c?ref=2cc7d3a7da20bcfd854302b1f265c6551b8a3741", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-options \"-Wformat\" } */\n+\n+int main (int argc, char **argv)\n+{\n+  char buf[10];\n+\n+  char c[] = \"%i\";\n+  unsigned char uc[] = \"%i\";\n+  const char cc[] = \"%i\";\n+  const unsigned char cuc[] = \"%i\";\n+\n+  __builtin_sprintf(buf, (char *)c, 1);\n+  __builtin_sprintf(buf, (char *)uc, 1);\n+  __builtin_sprintf(buf, (char *)cc, 1);\n+  __builtin_sprintf(buf, (char *)cuc, 1); /* { dg-warning \"format string is not an array of type 'char'\" } */\n+  __builtin_sprintf(buf, (const char *)L\"foo\"); /* { dg-warning \"format is a wide character string\" } */\n+\n+  return 0;\n+}"}]}