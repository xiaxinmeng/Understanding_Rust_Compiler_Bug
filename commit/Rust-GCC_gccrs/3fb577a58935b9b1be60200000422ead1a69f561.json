{"sha": "3fb577a58935b9b1be60200000422ead1a69f561", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZiNTc3YTU4OTM1YjliMWJlNjAyMDAwMDA0MjJlYWQxYTY5ZjU2MQ==", "commit": {"author": {"name": "Ranjit Mathew", "email": "rmathew@hotmail.com", "date": "2004-04-30T18:14:07Z"}, "committer": {"name": "Ranjit Mathew", "email": "rmathew@gcc.gnu.org", "date": "2004-04-30T18:14:07Z"}, "message": "re PR java/15133 (gcjh generates wrong method signatures)\n\n\tFixes PR java/15133\n\t* gjavah.c (struct method_name): Add member is_native.\n\t(overloaded_jni_method_exists_p): Match candidate method only if\n\tit is native.\n\t(print_method_info): Initialise is_native flag from the method's\n\taccess flags.\n\nFrom-SVN: r81357", "tree": {"sha": "7fe8152ed2c2c8729bfed1222c9bda338b620f08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fe8152ed2c2c8729bfed1222c9bda338b620f08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fb577a58935b9b1be60200000422ead1a69f561", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fb577a58935b9b1be60200000422ead1a69f561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fb577a58935b9b1be60200000422ead1a69f561", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fb577a58935b9b1be60200000422ead1a69f561/comments", "author": null, "committer": null, "parents": [{"sha": "693446fc3343a269cf01f3bd6a6d2626951b59b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693446fc3343a269cf01f3bd6a6d2626951b59b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/693446fc3343a269cf01f3bd6a6d2626951b59b5"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "b566ffff82c8b9d5ad75501b2c2c7c2c18e37102", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fb577a58935b9b1be60200000422ead1a69f561/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fb577a58935b9b1be60200000422ead1a69f561/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=3fb577a58935b9b1be60200000422ead1a69f561", "patch": "@@ -1,3 +1,12 @@\n+2004-04-30  Ranjit Mathew  <rmathew@hotmail.com>\n+\n+\tFixes PR java/15133\n+\t* gjavah.c (struct method_name): Add member is_native.\n+\t(overloaded_jni_method_exists_p): Match candidate method only if\n+\tit is native.\n+\t(print_method_info): Initialise is_native flag from the method's\n+\taccess flags.\n+\n 2004-04-30  Roger Sayle  <roger@eyesopen.com>\n \n \t* builtins.c (java_builtins): Add acos, asin, ceil and floor."}, {"sha": "45e5f251b9f0efe3c5ea572c9e3efd73d081a55f", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fb577a58935b9b1be60200000422ead1a69f561/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fb577a58935b9b1be60200000422ead1a69f561/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=3fb577a58935b9b1be60200000422ead1a69f561", "patch": "@@ -119,6 +119,7 @@ struct method_name\n   int length;\n   unsigned char *signature;\n   int sig_length;\n+  int is_native;\n   struct method_name *next;\n };\n \n@@ -634,7 +635,7 @@ name_is_method_p (const unsigned char *name, int length)\n   return 0;\n }\n \n-/* If there is already a method named NAME, whose signature is not\n+/* If there is already a native method named NAME, whose signature is not\n    SIGNATURE, then return true.  Otherwise return false.  */\n static int\n overloaded_jni_method_exists_p (const unsigned char *name, int length,\n@@ -644,7 +645,8 @@ overloaded_jni_method_exists_p (const unsigned char *name, int length,\n \n   for (p = method_name_list; p != NULL; p = p->next)\n     {\n-      if (p->length == length\n+      if (p->is_native\n+          && p->length == length\n \t  && ! memcmp (p->name, name, length)\n \t  && (p->sig_length != sig_length\n \t      || memcmp (p->signature, signature, sig_length)))\n@@ -851,6 +853,7 @@ print_method_info (FILE *stream, JCF* jcf, int name_index, int sig_index,\n       nn->next = method_name_list;\n       nn->sig_length = JPOOL_UTF_LENGTH (jcf, sig_index);\n       nn->signature = xmalloc (nn->sig_length);\n+      nn->is_native = METHOD_IS_NATIVE (flags);\n       memcpy (nn->signature, JPOOL_UTF_DATA (jcf, sig_index),\n \t      nn->sig_length);\n       method_name_list = nn;"}]}