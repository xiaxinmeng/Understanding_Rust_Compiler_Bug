{"sha": "126437c5dad88fb2cc6172f09c556ff09844b649", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI2NDM3YzVkYWQ4OGZiMmNjNjE3MmYwOWM1NTZmZjA5ODQ0YjY0OQ==", "commit": {"author": {"name": "Jonathan Yong", "email": "10walls@gmail.com", "date": "2017-03-02T11:00:28Z"}, "committer": {"name": "Jonathan Yong", "email": "jyong@gcc.gnu.org", "date": "2017-03-02T11:00:28Z"}, "message": "unwind-seh.c: Suppress warnings for RtlUnwindEx calls.\n\n\t* unwind-seh.c: Suppress warnings for RtlUnwindEx calls.\n\nFrom-SVN: r245834", "tree": {"sha": "6c57a3a2135243282baaed4fdd23be2deee85c4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c57a3a2135243282baaed4fdd23be2deee85c4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/126437c5dad88fb2cc6172f09c556ff09844b649", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/126437c5dad88fb2cc6172f09c556ff09844b649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/126437c5dad88fb2cc6172f09c556ff09844b649", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/126437c5dad88fb2cc6172f09c556ff09844b649/comments", "author": {"login": "jon-y", "id": 4688224, "node_id": "MDQ6VXNlcjQ2ODgyMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4688224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jon-y", "html_url": "https://github.com/jon-y", "followers_url": "https://api.github.com/users/jon-y/followers", "following_url": "https://api.github.com/users/jon-y/following{/other_user}", "gists_url": "https://api.github.com/users/jon-y/gists{/gist_id}", "starred_url": "https://api.github.com/users/jon-y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jon-y/subscriptions", "organizations_url": "https://api.github.com/users/jon-y/orgs", "repos_url": "https://api.github.com/users/jon-y/repos", "events_url": "https://api.github.com/users/jon-y/events{/privacy}", "received_events_url": "https://api.github.com/users/jon-y/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5a216fa21f6c67e75a91b7063d1767cff00138b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5a216fa21f6c67e75a91b7063d1767cff00138b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5a216fa21f6c67e75a91b7063d1767cff00138b"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "11b1ff9f850137da4c230431c2eddf21142a64c4", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/126437c5dad88fb2cc6172f09c556ff09844b649/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/126437c5dad88fb2cc6172f09c556ff09844b649/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=126437c5dad88fb2cc6172f09c556ff09844b649", "patch": "@@ -1,3 +1,7 @@\n+2017-03-02  Jonathan Yong <10walls@gmail.com>\n+\n+\t* unwind-seh.c: Suppress warnings for RtlUnwindEx calls.\n+\n 2017-02-16  Andrew Pinski  <apinski@cavium.com>\n \n \t* config/aarch64/value-unwind.h: New file."}, {"sha": "91edc1a61daaf6517c508cdf662c90491a4c8d58", "filename": "libgcc/unwind-seh.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/126437c5dad88fb2cc6172f09c556ff09844b649/libgcc%2Funwind-seh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/126437c5dad88fb2cc6172f09c556ff09844b649/libgcc%2Funwind-seh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Funwind-seh.c?ref=126437c5dad88fb2cc6172f09c556ff09844b649", "patch": "@@ -221,7 +221,7 @@ _GCC_specific_handler (PEXCEPTION_RECORD ms_exc, void *this_frame,\n \t test is that we're the target frame.  */\n       if (ms_exc->ExceptionInformation[1] == (_Unwind_Ptr) this_frame)\n \t{\n-\t  RtlUnwindEx (this_frame, ms_exc->ExceptionInformation[2],\n+\t  RtlUnwindEx (this_frame, (PVOID) ms_exc->ExceptionInformation[2],\n \t\t       ms_exc, gcc_exc, ms_orig_context,\n \t\t       ms_disp->HistoryTable);\n \t  abort ();\n@@ -313,7 +313,7 @@ _GCC_specific_handler (PEXCEPTION_RECORD ms_exc, void *this_frame,\n \t  ms_exc->ExceptionInformation[3] = gcc_context.reg[1];\n \n \t  /* Begin phase 2.  Perform the unwinding.  */\n-\t  RtlUnwindEx (this_frame, gcc_context.ra, ms_exc,\n+\t  RtlUnwindEx (this_frame, (PVOID)gcc_context.ra, ms_exc,\n \t\t       (PVOID)gcc_context.reg[0], ms_orig_context,\n \t\t       ms_disp->HistoryTable);\n \t}\n@@ -365,7 +365,7 @@ _Unwind_Resume (struct _Unwind_Exception *gcc_exc)\n   ms_context.ContextFlags = CONTEXT_ALL;\n   RtlCaptureContext (&ms_context);\n \n-  RtlUnwindEx ((void *) gcc_exc->private_[1], gcc_exc->private_[2],\n+  RtlUnwindEx ((void *) gcc_exc->private_[1], (PVOID)gcc_exc->private_[2],\n \t       &ms_exc, gcc_exc, &ms_context, &ms_history);\n \n   /* Is RtlUnwindEx declared noreturn?  */"}]}