{"sha": "c4f0333bbc9247b6488224d1a9969e216e6426e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRmMDMzM2JiYzkyNDdiNjQ4ODIyNGQxYTk5NjllMjE2ZTY0MjZlOQ==", "commit": {"author": {"name": "Dave Korn", "email": "dave.korn.cygwin@gmail.com", "date": "2009-09-30T22:20:54Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2009-09-30T22:20:54Z"}, "message": "configure.host (libgcj_sublib_ltflags): New variable.\n\n\t* configure.host (libgcj_sublib_ltflags): New variable.\n\t* configure.ac (LIBGCJ_SUBLIB_LTFLAGS): AC_SUBST variable for\n\tthe above in makefiles.\n\t* configure: Regenerate.\n\n\t* Makefile.am (libgcj_la_LDFLAGS_NOUNDEF): Rename from this ...\n\t(LIBJAVA_LDFLAGS_NOUNDEF): ... to this, initialise from\n\tLIBGCJ_SUBLIB_LTFLAGS (only when building sublibs), and ...\n\t(libgij_la_LDFLAGS, libgcj_tools_la_LDFLAGS, libjvm_la_LDFLAGS,\n\tlib_gnu_awt_xlib_la_LDFLAGS, libgcj_bc_la_LDFLAGS): ... use it in\n\tall these places to replace hard-coded -no-undefined and -bindir\n\tflags, as well as ...\n\t(libgcj_la_LDFLAGS): ... updating existing reference here.\n\t* Makefile.in: Regenerate.\n\t* include/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\t* gcj/Makefile.in: Likewise.\n\nFrom-SVN: r152347", "tree": {"sha": "c40e57a1388b4b40ca0a2f2d0092aaafae47db72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c40e57a1388b4b40ca0a2f2d0092aaafae47db72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4f0333bbc9247b6488224d1a9969e216e6426e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4f0333bbc9247b6488224d1a9969e216e6426e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4f0333bbc9247b6488224d1a9969e216e6426e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4f0333bbc9247b6488224d1a9969e216e6426e9/comments", "author": {"login": "davek-cygwin", "id": 530057, "node_id": "MDQ6VXNlcjUzMDA1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/530057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek-cygwin", "html_url": "https://github.com/davek-cygwin", "followers_url": "https://api.github.com/users/davek-cygwin/followers", "following_url": "https://api.github.com/users/davek-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/davek-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/davek-cygwin/orgs", "repos_url": "https://api.github.com/users/davek-cygwin/repos", "events_url": "https://api.github.com/users/davek-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/davek-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e56817dbc6b6219fc209f7d740e452f3cfb77abe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56817dbc6b6219fc209f7d740e452f3cfb77abe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e56817dbc6b6219fc209f7d740e452f3cfb77abe"}], "stats": {"total": 128, "additions": 83, "deletions": 45}, "files": [{"sha": "78aaa3e473a5092727b8b2280c59df59a6f16ccc", "filename": "libjava/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c4f0333bbc9247b6488224d1a9969e216e6426e9", "patch": "@@ -1,3 +1,23 @@\n+2009-09-30  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\t* configure.host (libgcj_sublib_ltflags): New variable.\n+\t* configure.ac (LIBGCJ_SUBLIB_LTFLAGS): AC_SUBST variable for\n+\tthe above in makefiles.\n+\t* configure: Regenerate.\n+\n+\t* Makefile.am (libgcj_la_LDFLAGS_NOUNDEF): Rename from this ...\n+\t(LIBJAVA_LDFLAGS_NOUNDEF): ... to this, initialise from\n+\tLIBGCJ_SUBLIB_LTFLAGS (only when building sublibs), and ...\n+\t(libgij_la_LDFLAGS, libgcj_tools_la_LDFLAGS, libjvm_la_LDFLAGS,\n+\tlib_gnu_awt_xlib_la_LDFLAGS, libgcj_bc_la_LDFLAGS): ... use it in\n+\tall these places to replace hard-coded -no-undefined and -bindir\n+\tflags, as well as ...\n+\t(libgcj_la_LDFLAGS): ... updating existing reference here.\n+\t* Makefile.in: Regenerate.\n+\t* include/Makefile.in: Likewise.\n+\t* testsuite/Makefile.in: Likewise.\n+\t* gcj/Makefile.in: Likewise.\n+\n 2009-09-27  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR libgcj/38298"}, {"sha": "3c0423e64f88970246d56e2378be12da27fe4a0b", "filename": "libjava/Makefile.am", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=c4f0333bbc9247b6488224d1a9969e216e6426e9", "patch": "@@ -201,12 +201,12 @@ if BUILD_SUBLIBS\n toolexeclib_LTLIBRARIES += libgcj-noncore.la\n libgcj_noncore_la_LIBADD_SUBOBJECTS = $(NONCORE_PACKAGE_SOURCE_FILES_LO)\n libgcj_la_LIBADD_SUBOBJECTS = $(CORE_PACKAGE_SOURCE_FILES_LO)\n-libgcj_la_LDFLAGS_NOUNDEF = -no-undefined -bindir $(bindir)\n+LIBJAVA_LDFLAGS_NOUNDEF = $(LIBGCJ_SUBLIB_LTFLAGS)\n else\n # If not building sublibraries, everything goes in libgcj,\n # and it cannot be usefully built shared on PE platforms.\n libgcj_la_LIBADD_SUBOBJECTS = $(ALL_PACKAGE_SOURCE_FILES_LO)\n-libgcj_la_LDFLAGS_NOUNDEF = \n+LIBJAVA_LDFLAGS_NOUNDEF = \n endif\n \n if USE_LIBGCJ_BC\n@@ -388,7 +388,7 @@ endif\n ## See jv_convert_LDADD.\n libgij_la_LIBADD = -L$(here)/.libs libgcj.la\n ## The mysterious backslash in the grep pattern is consumed by make.\n-libgij_la_LDFLAGS = -rpath $(toolexeclibdir) -no-undefined -bindir $(bindir) \\\n+libgij_la_LDFLAGS = -rpath $(toolexeclibdir) $(LIBJAVA_LDFLAGS_NOUNDEF) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n libgij_la_LINK = $(CXXLINK) $(libgij_la_LDFLAGS)\n \n@@ -445,7 +445,7 @@ xlib_nat_files = $(xlib_nat_source_files:.cc=.lo)\n # certain linuxthread functions get linked:\n ## The mysterious backslash in the grep pattern is consumed by make.\n libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) $(THREADLDFLAGS) $(extra_ldflags) $(THREADLIBS) \\\n-\t$(LIBLTDL) $(SYS_ZLIBS) $(libgcj_la_LDFLAGS_NOUNDEF) \\\n+\t$(LIBLTDL) $(SYS_ZLIBS) $(LIBJAVA_LDFLAGS_NOUNDEF) \\\n \t-version-info `grep -v '^\\#' $(srcdir)/libtool-version` \\\n \t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n libgcj_la_LIBADD = \\\n@@ -495,7 +495,7 @@ libgcj_tools_la_GCJFLAGS = $(AM_GCJFLAGS) -findirect-dispatch \\\n  -fsource-filename=$(here)/classpath/tools/all-classes.lst\n libgcj_tools_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n  -version-info `grep -v '^\\#' $(srcdir)/libtool-version` \\\n- $(LIBGCJ_LD_SYMBOLIC_FUNCTIONS) -no-undefined -bindir $(bindir)\n+ $(LIBGCJ_LD_SYMBOLIC_FUNCTIONS) $(LIBJAVA_LDFLAGS_NOUNDEF)\n libgcj_tools_la_LIBADD = libgcj.la -lm\n libgcj_tools_la_DEPENDENCIES = libgcj.la libgcj.spec\n if BUILD_SUBLIBS\n@@ -512,7 +512,7 @@ endif\n ## See jv_convert_LDADD.\n libjvm_la_LIBADD = -L$(here)/.libs libgcj.la\n libjvm_la_LDFLAGS = -avoid-version $(LIBGCJ_LD_SYMBOLIC) \\\n- -no-undefined -bindir $(bindir)\n+ $(LIBJAVA_LDFLAGS_NOUNDEF)\n libjvm_la_LINK = $(CXXLINK) $(libjvm_la_LDFLAGS)\n \n ## The .db file.  This rule is only used for native builds, so it is\n@@ -542,7 +542,7 @@ lib_gnu_awt_xlib_la_CPPFLAGS = \\\n ## The mysterious backslash in the grep pattern is consumed by make.\n lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \\\n \t@X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@ \\\n-        -rpath $(toolexeclibdir) -no-undefined -bindir $(bindir) \\\n+        -rpath $(toolexeclibdir) $(LIBJAVA_LDFLAGS_NOUNDEF) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n lib_gnu_awt_xlib_la_LINK = $(LIBLINK) $(lib_gnu_awt_xlib_la_LDFLAGS)\n \n@@ -552,7 +552,7 @@ lib_gnu_awt_xlib_la_LINK = $(LIBLINK) $(lib_gnu_awt_xlib_la_LDFLAGS)\n ## This library is not linked against libgcj.\n libgcj_bc_la_SOURCES = libgcj_bc.c\n libgcj_bc_la_LDFLAGS = -rpath $(toolexeclibdir) -no-static -version-info 1:0:0 \\\n-\t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS) -no-undefined -bindir $(bindir)\n+\t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS) $(LIBJAVA_LDFLAGS_NOUNDEF)\n libgcj_bc_la_DEPENDENCIES = libgcj.la\n libgcj_bc_la_LINK = $(LIBLINK) $(libgcj_bc_la_LDFLAGS)\n ## This is specific to Linux/{Free,Net,Open}BSD/Hurd and perhaps few others."}, {"sha": "ca822dc903378f3ee6ece9ea721b986ca49d97c1", "filename": "libjava/Makefile.in", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=c4f0333bbc9247b6488224d1a9969e216e6426e9", "patch": "@@ -727,6 +727,7 @@ LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n LIBGCJ_LD_SYMBOLIC = @LIBGCJ_LD_SYMBOLIC@\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS = @LIBGCJ_LD_SYMBOLIC_FUNCTIONS@\n LIBGCJ_SPEC = @LIBGCJ_SPEC@\n+LIBGCJ_SUBLIB_LTFLAGS = @LIBGCJ_SUBLIB_LTFLAGS@\n LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@\n LIBOBJS = @LIBOBJS@\n@@ -1046,8 +1047,8 @@ CORE_PACKAGE_SOURCE_FILES_LO = $(filter-out $(LOWER_PACKAGE_FILES_LO),$(ALL_PACK\n # and it cannot be usefully built shared on PE platforms.\n @BUILD_SUBLIBS_FALSE@libgcj_la_LIBADD_SUBOBJECTS = $(ALL_PACKAGE_SOURCE_FILES_LO)\n @BUILD_SUBLIBS_TRUE@libgcj_la_LIBADD_SUBOBJECTS = $(CORE_PACKAGE_SOURCE_FILES_LO)\n-@BUILD_SUBLIBS_FALSE@libgcj_la_LDFLAGS_NOUNDEF = \n-@BUILD_SUBLIBS_TRUE@libgcj_la_LDFLAGS_NOUNDEF = -no-undefined -bindir $(bindir)\n+@BUILD_SUBLIBS_FALSE@LIBJAVA_LDFLAGS_NOUNDEF = \n+@BUILD_SUBLIBS_TRUE@LIBJAVA_LDFLAGS_NOUNDEF = $(LIBGCJ_SUBLIB_LTFLAGS)\n dbexec_LTLIBRARIES = libjvm.la\n pkgconfigdir = $(libdir)/pkgconfig\n jardir = $(datadir)/java\n@@ -1127,7 +1128,7 @@ BOOTCLASSPATH = $(srcdir)/classpath/lib\n libgij_la_SOURCES = gij.cc\n libgij_la_DEPENDENCIES = libgcj.la libgcj.spec $(am__append_11)\n libgij_la_LIBADD = -L$(here)/.libs libgcj.la\n-libgij_la_LDFLAGS = -rpath $(toolexeclibdir) -no-undefined -bindir $(bindir) \\\n+libgij_la_LDFLAGS = -rpath $(toolexeclibdir) $(LIBJAVA_LDFLAGS_NOUNDEF) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n \n libgij_la_LINK = $(CXXLINK) $(libgij_la_LDFLAGS)\n@@ -1144,7 +1145,7 @@ xlib_nat_files = $(xlib_nat_source_files:.cc=.lo)\n # Include THREADLIBS here to ensure that the correct version of\n # certain linuxthread functions get linked:\n libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) $(THREADLDFLAGS) $(extra_ldflags) $(THREADLIBS) \\\n-\t$(LIBLTDL) $(SYS_ZLIBS) $(libgcj_la_LDFLAGS_NOUNDEF) \\\n+\t$(LIBLTDL) $(SYS_ZLIBS) $(LIBJAVA_LDFLAGS_NOUNDEF) \\\n \t-version-info `grep -v '^\\#' $(srcdir)/libtool-version` \\\n \t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n \n@@ -1185,7 +1186,7 @@ libgcj_tools_la_GCJFLAGS = $(AM_GCJFLAGS) -findirect-dispatch \\\n \n libgcj_tools_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n  -version-info `grep -v '^\\#' $(srcdir)/libtool-version` \\\n- $(LIBGCJ_LD_SYMBOLIC_FUNCTIONS) -no-undefined -bindir $(bindir)\n+ $(LIBGCJ_LD_SYMBOLIC_FUNCTIONS) $(LIBJAVA_LDFLAGS_NOUNDEF)\n \n libgcj_tools_la_LIBADD = libgcj.la -lm\n libgcj_tools_la_DEPENDENCIES = libgcj.la libgcj.spec $(am__append_22)\n@@ -1194,7 +1195,7 @@ libjvm_la_SOURCES = jni-libjvm.cc\n libjvm_la_DEPENDENCIES = libgcj.la libgcj.spec $(am__append_23)\n libjvm_la_LIBADD = -L$(here)/.libs libgcj.la\n libjvm_la_LDFLAGS = -avoid-version $(LIBGCJ_LD_SYMBOLIC) \\\n- -no-undefined -bindir $(bindir)\n+ $(LIBJAVA_LDFLAGS_NOUNDEF)\n \n libjvm_la_LINK = $(CXXLINK) $(libjvm_la_LDFLAGS)\n lib_gnu_awt_xlib_la_SOURCES = $(xlib_nat_source_files)\n@@ -1209,13 +1210,13 @@ lib_gnu_awt_xlib_la_CPPFLAGS = \\\n \n lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \\\n \t@X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@ \\\n-        -rpath $(toolexeclibdir) -no-undefined -bindir $(bindir) \\\n+        -rpath $(toolexeclibdir) $(LIBJAVA_LDFLAGS_NOUNDEF) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n \n lib_gnu_awt_xlib_la_LINK = $(LIBLINK) $(lib_gnu_awt_xlib_la_LDFLAGS)\n libgcj_bc_la_SOURCES = libgcj_bc.c\n libgcj_bc_la_LDFLAGS = -rpath $(toolexeclibdir) -no-static -version-info 1:0:0 \\\n-\t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS) -no-undefined -bindir $(bindir)\n+\t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS) $(LIBJAVA_LDFLAGS_NOUNDEF)\n \n libgcj_bc_la_DEPENDENCIES = libgcj.la\n libgcj_bc_la_LINK = $(LIBLINK) $(libgcj_bc_la_LDFLAGS)"}, {"sha": "95d21af1e5f4cc338b78fdca44db261c66262665", "filename": "libjava/configure", "status": "modified", "additions": 35, "deletions": 29, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=c4f0333bbc9247b6488224d1a9969e216e6426e9", "patch": "@@ -919,6 +919,7 @@ BUILD_SUBLIBS_FALSE\n BUILD_SUBLIBS_TRUE\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS\n LIBGCJ_LD_SYMBOLIC\n+LIBGCJ_SUBLIB_LTFLAGS\n LIBGCJ_JAVAFLAGS\n LIBGCJ_CXXFLAGS\n LIBGCJ_CFLAGS\n@@ -5939,11 +5940,14 @@ fi\n #\tlibgcj_cflags    - host specific C compiler flags\n #\tlibgcj_cxxflags  - host specific C++ compiler flags\n #\tlibgcj_javaflags - host specific Java compiler flags\n+#\tlibgcj_sublib_ltflags - host specific Libtool flags\n+#                          (only used when building sublibs)\n # and a number of others; see the list at the start of the file.\n \n libgcj_cflags=\n libgcj_cxxflags=\n libgcj_javaflags=\n+libgcj_sublib_ltflags=\n \n . ${srcdir}/configure.host\n \n@@ -5993,6 +5997,7 @@ fi\n LIBGCJ_CFLAGS=\"${libgcj_cflags}\"\n LIBGCJ_CXXFLAGS=\"${libgcj_cxxflags}\"\n LIBGCJ_JAVAFLAGS=\"${libgcj_javaflags}\"\n+LIBGCJ_SUBLIB_LTFLAGS=\"${libgcj_sublib_ltflags}\"\n LIBGCJ_LD_SYMBOLIC=\"${libgcj_ld_symbolic}\"\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS=\"${libgcj_ld_symbolic_functions}\"\n \n@@ -6001,6 +6006,7 @@ LIBGCJ_LD_SYMBOLIC_FUNCTIONS=\"${libgcj_ld_symbolic_functions}\"\n \n \n \n+\n # Only use libltdl for non-newlib builds.\n if test \"x${with_newlib}\" = \"x\" || test \"x${with_newlib}\" = \"xno\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics\" >&5\n@@ -7498,13 +7504,13 @@ if test \"${lt_cv_nm_interface+set}\" = set; then :\n else\n   lt_cv_nm_interface=\"BSD nm\"\n   echo \"int some_variable = 0;\" > conftest.$ac_ext\n-  (eval echo \"\\\"\\$as_me:7501: $ac_compile\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:7507: $ac_compile\\\"\" >&5)\n   (eval \"$ac_compile\" 2>conftest.err)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:7504: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:7510: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n   (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:7507: output\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:7513: output\\\"\" >&5)\n   cat conftest.out >&5\n   if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n     lt_cv_nm_interface=\"MS dumpbin\"\n@@ -8699,7 +8705,7 @@ ia64-*-hpux*)\n   ;;\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 8702 \"configure\"' > conftest.$ac_ext\n+  echo '#line 8708 \"configure\"' > conftest.$ac_ext\n   if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -10633,11 +10639,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:10636: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:10642: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:10640: \\$? = $ac_status\" >&5\n+   echo \"$as_me:10646: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -10972,11 +10978,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:10975: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:10981: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:10979: \\$? = $ac_status\" >&5\n+   echo \"$as_me:10985: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -11077,11 +11083,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:11080: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:11086: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:11084: \\$? = $ac_status\" >&5\n+   echo \"$as_me:11090: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -11132,11 +11138,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:11135: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:11141: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:11139: \\$? = $ac_status\" >&5\n+   echo \"$as_me:11145: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -13541,7 +13547,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13544 \"configure\"\n+#line 13550 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13637,7 +13643,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13640 \"configure\"\n+#line 13646 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15599,11 +15605,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:15602: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:15608: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:15606: \\$? = $ac_status\" >&5\n+   echo \"$as_me:15612: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -15698,11 +15704,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:15701: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:15707: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:15705: \\$? = $ac_status\" >&5\n+   echo \"$as_me:15711: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -15750,11 +15756,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:15753: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:15759: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:15757: \\$? = $ac_status\" >&5\n+   echo \"$as_me:15763: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -17166,11 +17172,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17169: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17175: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:17173: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17179: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -17499,11 +17505,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17502: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17508: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:17506: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17512: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -17598,11 +17604,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17601: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17607: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:17605: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17611: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -17650,11 +17656,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17653: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17659: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:17657: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17663: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -19252,7 +19258,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then :\n   enableval=$enable_sjlj_exceptions; :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 19255 \"configure\"\n+#line 19261 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()"}, {"sha": "bfd33fd5154e89d584bdf6f020718828d6e11c6b", "filename": "libjava/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=c4f0333bbc9247b6488224d1a9969e216e6426e9", "patch": "@@ -206,11 +206,14 @@ AC_EXEEXT\n #\tlibgcj_cflags    - host specific C compiler flags\n #\tlibgcj_cxxflags  - host specific C++ compiler flags\n #\tlibgcj_javaflags - host specific Java compiler flags\n+#\tlibgcj_sublib_ltflags - host specific Libtool flags \n+#                          (only used when building sublibs)\n # and a number of others; see the list at the start of the file.\n \n libgcj_cflags=\n libgcj_cxxflags=\n libgcj_javaflags=\n+libgcj_sublib_ltflags=\n \n . ${srcdir}/configure.host\n \n@@ -223,11 +226,13 @@ fi\n LIBGCJ_CFLAGS=\"${libgcj_cflags}\"\n LIBGCJ_CXXFLAGS=\"${libgcj_cxxflags}\"\n LIBGCJ_JAVAFLAGS=\"${libgcj_javaflags}\"\n+LIBGCJ_SUBLIB_LTFLAGS=\"${libgcj_sublib_ltflags}\"\n LIBGCJ_LD_SYMBOLIC=\"${libgcj_ld_symbolic}\"\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS=\"${libgcj_ld_symbolic_functions}\"\n AC_SUBST(LIBGCJ_CFLAGS)\n AC_SUBST(LIBGCJ_CXXFLAGS)\n AC_SUBST(LIBGCJ_JAVAFLAGS)\n+AC_SUBST(LIBGCJ_SUBLIB_LTFLAGS)\n AC_SUBST(LIBGCJ_LD_SYMBOLIC)\n AC_SUBST(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n "}, {"sha": "a325bf1fb176795720db82c39f341454c878a68c", "filename": "libjava/configure.host", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.host?ref=c4f0333bbc9247b6488224d1a9969e216e6426e9", "patch": "@@ -18,6 +18,7 @@\n #   libgcj_cflags\tSpecial CFLAGS to use when building\n #   libgcj_cxxflags\tSpecial CXXFLAGS to use when building\n #   libgcj_javaflags\tSpecial JAVAFLAGS to use when building\n+#   libgcj_sublib_ltflags  Special Libtool flags to use when building.\n #   libgcj_interpreter  If the bytecode interpreter supports this platform.\n #   enable_java_net_default  If java.net native code should be enabled by\n #                            default.\n@@ -41,6 +42,7 @@ libgcj_flags=\n libgcj_cflags=\n libgcj_cxxflags=\n libgcj_javaflags=\n+libgcj_sublib_ltflags=\n libgcj_interpreter=\n enable_java_net_default=yes\n enable_hash_synchronization_default=no\n@@ -347,6 +349,7 @@ case \"${host}\" in\n   \tBACKTRACESPEC=\n \t# Win32 DLLs are limited to 64k exported symbols each.\n \tenable_libgcj_sublibs_default=yes\n+\tlibgcj_sublib_ltflags='-no-undefined -bindir $(bindir)'\n   ;;\n esac\n "}, {"sha": "5752d72c9969ec242d0c852346f72bade774053f", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=c4f0333bbc9247b6488224d1a9969e216e6426e9", "patch": "@@ -191,6 +191,7 @@ LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n LIBGCJ_LD_SYMBOLIC = @LIBGCJ_LD_SYMBOLIC@\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS = @LIBGCJ_LD_SYMBOLIC_FUNCTIONS@\n LIBGCJ_SPEC = @LIBGCJ_SPEC@\n+LIBGCJ_SUBLIB_LTFLAGS = @LIBGCJ_SUBLIB_LTFLAGS@\n LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@\n LIBOBJS = @LIBOBJS@"}, {"sha": "3be44469915bf53c11098e39b1ccdbd827dff50c", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=c4f0333bbc9247b6488224d1a9969e216e6426e9", "patch": "@@ -191,6 +191,7 @@ LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n LIBGCJ_LD_SYMBOLIC = @LIBGCJ_LD_SYMBOLIC@\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS = @LIBGCJ_LD_SYMBOLIC_FUNCTIONS@\n LIBGCJ_SPEC = @LIBGCJ_SPEC@\n+LIBGCJ_SUBLIB_LTFLAGS = @LIBGCJ_SUBLIB_LTFLAGS@\n LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@\n LIBOBJS = @LIBOBJS@"}, {"sha": "e229db5001c9e8fb925ea971e166e770671eefb1", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f0333bbc9247b6488224d1a9969e216e6426e9/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=c4f0333bbc9247b6488224d1a9969e216e6426e9", "patch": "@@ -166,6 +166,7 @@ LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n LIBGCJ_LD_SYMBOLIC = @LIBGCJ_LD_SYMBOLIC@\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS = @LIBGCJ_LD_SYMBOLIC_FUNCTIONS@\n LIBGCJ_SPEC = @LIBGCJ_SPEC@\n+LIBGCJ_SUBLIB_LTFLAGS = @LIBGCJ_SUBLIB_LTFLAGS@\n LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@\n LIBOBJS = @LIBOBJS@"}]}