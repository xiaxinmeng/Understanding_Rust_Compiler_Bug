{"sha": "d8326291695c0f13124c232ddf4fd34e3310e649", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgzMjYyOTE2OTVjMGYxMzEyNGMyMzJkZGY0ZmQzNGUzMzEwZTY0OQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-01T15:02:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-01T16:09:06Z"}, "message": "libstdc++: Fix return value of std::ranges::advance [PR 100833]\n\nThe three-argument form of ranges::advance is supposed to return the\ndifference between the second argument and the distance the iterator was\nadvanced. When a non-random-access iterator is not advanced (because it\nalready equals the sentinel) we were returning 0 rather than n - 0.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/100833\n\t* include/bits/ranges_base.h (ranges::advance(iter, n, sentinel)):\n\tFix return value for no-op case.\n\t* testsuite/24_iterators/range_operations/advance.cc: Test\n\treturn values of three-argument overload.", "tree": {"sha": "521c4f534780df37f10502876c963bc7bd7adc33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/521c4f534780df37f10502876c963bc7bd7adc33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8326291695c0f13124c232ddf4fd34e3310e649", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8326291695c0f13124c232ddf4fd34e3310e649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8326291695c0f13124c232ddf4fd34e3310e649", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8326291695c0f13124c232ddf4fd34e3310e649/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf2b7020ee8e9745ede527b0a3b2e0ffbafd492b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf2b7020ee8e9745ede527b0a3b2e0ffbafd492b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf2b7020ee8e9745ede527b0a3b2e0ffbafd492b"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "32d664f1a861f2fad734dfa25b00eb6e657abb01", "filename": "libstdc++-v3/include/bits/ranges_base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8326291695c0f13124c232ddf4fd34e3310e649/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8326291695c0f13124c232ddf4fd34e3310e649/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_base.h?ref=d8326291695c0f13124c232ddf4fd34e3310e649", "patch": "@@ -749,7 +749,7 @@ namespace ranges\n \t      }\n \t  }\n \telse if (__it == __bound || __n == 0)\n-\t  return iter_difference_t<_It>(0);\n+\t  return __n;\n \telse if (__n > 0)\n \t  {\n \t    iter_difference_t<_It> __m = 0;"}, {"sha": "feee08b58c4b71e9cd3214ce5cb29542e3a08ef6", "filename": "libstdc++-v3/testsuite/24_iterators/range_operations/advance.cc", "status": "modified", "additions": 32, "deletions": 16, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8326291695c0f13124c232ddf4fd34e3310e649/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_operations%2Fadvance.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8326291695c0f13124c232ddf4fd34e3310e649/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_operations%2Fadvance.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_operations%2Fadvance.cc?ref=d8326291695c0f13124c232ddf4fd34e3310e649", "patch": "@@ -49,10 +49,12 @@ test01()\n   std::ranges::advance(iter, r.begin());\n   VERIFY( iter == r.begin() );\n \n-  std::ranges::advance(iter, 99, r.end());\n+  auto diff = std::ranges::advance(iter, 99, r.end());\n   VERIFY( iter == r.end() );\n-  std::ranges::advance(iter, -222, r.begin());\n+  VERIFY( diff == 97 );\n+  diff = std::ranges::advance(iter, -222, r.begin());\n   VERIFY( iter == r.begin() );\n+  VERIFY( diff == -220 );\n }\n \n void\n@@ -77,10 +79,12 @@ test02()\n   std::ranges::advance(iter, r.begin());\n   VERIFY( iter == r.begin() );\n \n-  std::ranges::advance(iter, 99, r.end());\n+  auto diff = std::ranges::advance(iter, 99, r.end());\n   VERIFY( iter == r.end() );\n-  std::ranges::advance(iter, -222, r.begin());\n+  VERIFY( diff == 97 );\n+  diff = std::ranges::advance(iter, -222, r.begin());\n   VERIFY( iter == r.begin() );\n+  VERIFY( diff == -220 );\n }\n \n void\n@@ -108,15 +112,19 @@ test03()\n   std::ranges::advance(iter, r.end());\n   VERIFY( iter == r.end() );\n \n-  std::ranges::advance(iter, 99, r.end());\n+  auto diff = std::ranges::advance(iter, 99, r.end());\n   VERIFY( iter == r.end() );\n-  std::ranges::advance(iter, 99, r.end());\n+  VERIFY( diff == 99 ); // PR libstdc++/100833\n+  diff = std::ranges::advance(iter, 99, r.end());\n   VERIFY( iter == r.end() );\n+  VERIFY( diff == 99 );\n   iter = r.begin();\n-  std::ranges::advance(iter, 99, r.end());\n+  diff = std::ranges::advance(iter, 99, r.end());\n   VERIFY( iter == r.end() );\n-  std::ranges::advance(iter, 99, r.end());\n+  VERIFY( diff == 97 );\n+  diff = std::ranges::advance(iter, 99, r.end());\n   VERIFY( iter == r.end() );\n+  VERIFY( diff == 99 );\n }\n \n void\n@@ -145,17 +153,21 @@ test04()\n   std::ranges::advance(iter, r2.end());\n   VERIFY( iter == r2.end() );\n \n-  std::ranges::advance(iter, 99, r2.end());\n+  auto diff = std::ranges::advance(iter, 99, r2.end());\n   VERIFY( iter == r2.end() );\n-  std::ranges::advance(iter, 99, r2.end());\n+  VERIFY( diff == 99 );\n+  diff = std::ranges::advance(iter, 99, r2.end());\n   VERIFY( iter == r2.end() );\n+  VERIFY( diff == 99 );\n \n   test_range<int, input_iterator_wrapper> r3(a);\n   iter = r3.begin();\n-  std::ranges::advance(iter, 99, r3.end());\n+  diff = std::ranges::advance(iter, 99, r3.end());\n   VERIFY( iter == r3.end() );\n-  std::ranges::advance(iter, 99, r3.end());\n+  VERIFY( diff == 97 );\n+  diff = std::ranges::advance(iter, 99, r3.end());\n   VERIFY( iter == r3.end() );\n+  VERIFY( diff == 99 );\n }\n \n void\n@@ -180,17 +192,21 @@ test05()\n   std::ranges::advance(iter, r2.end());\n   VERIFY( iter == r2.end() );\n \n-  std::ranges::advance(iter, 99, r2.end());\n+  auto diff = std::ranges::advance(iter, 99, r2.end());\n   VERIFY( iter == r2.end() );\n-  std::ranges::advance(iter, 99, r2.end());\n+  VERIFY( diff == 99 );\n+  diff = std::ranges::advance(iter, 99, r2.end());\n   VERIFY( iter == r2.end() );\n+  VERIFY( diff == 99 );\n \n   test_range<int, output_iterator_wrapper> r3(a);\n   iter = r3.begin();\n-  std::ranges::advance(iter, 99, r3.end());\n+  diff = std::ranges::advance(iter, 99, r3.end());\n   VERIFY( iter == r3.end() );\n-  std::ranges::advance(iter, 99, r3.end());\n+  VERIFY( diff == 97 );\n+  diff = std::ranges::advance(iter, 99, r3.end());\n   VERIFY( iter == r3.end() );\n+  VERIFY( diff == 99 );\n }\n \n int"}]}