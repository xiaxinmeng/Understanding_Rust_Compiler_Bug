{"sha": "46f1f3c1c267215d8951674d0d62a5027b870163", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZmMWYzYzFjMjY3MjE1ZDg5NTE2NzRkMGQ2MmE1MDI3Yjg3MDE2Mw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2016-06-05T16:38:12Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2016-06-05T16:38:12Z"}, "message": "cfg.c (check_bb_profile): Do not report mismatched profiles when only edges out of BB are EH edges.\n\n\t* cfg.c (check_bb_profile): Do not report mismatched profiles when\n\tonly edges out of BB are EH edges.\n\nFrom-SVN: r237102", "tree": {"sha": "1f7206ca40f3d1c5e3514f50ca8a134f00bab769", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f7206ca40f3d1c5e3514f50ca8a134f00bab769"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46f1f3c1c267215d8951674d0d62a5027b870163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f1f3c1c267215d8951674d0d62a5027b870163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46f1f3c1c267215d8951674d0d62a5027b870163", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f1f3c1c267215d8951674d0d62a5027b870163/comments", "author": null, "committer": null, "parents": [{"sha": "c1c009833d16ef31784ab6df078722d178758e43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c009833d16ef31784ab6df078722d178758e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1c009833d16ef31784ab6df078722d178758e43"}], "stats": {"total": 42, "additions": 29, "deletions": 13}, "files": [{"sha": "be9848c513d088fa0fbf84a2f4f0c3da436ad9b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f1f3c1c267215d8951674d0d62a5027b870163/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f1f3c1c267215d8951674d0d62a5027b870163/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46f1f3c1c267215d8951674d0d62a5027b870163", "patch": "@@ -1,3 +1,8 @@\n+2016-06-03  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* cfg.c (check_bb_profile): Do not report mismatched profiles when\n+\tonly edges out of BB are EH edges.\n+\n 2016-06-04  Martin Sebor  <msebor@redhat.com>\n \t    Marcin Baczy\u0144ski <marbacz@gmail.com>\n "}, {"sha": "0e317809f4cadbd192c995fce0bdfa17d5723e78", "filename": "gcc/cfg.c", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f1f3c1c267215d8951674d0d62a5027b870163/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f1f3c1c267215d8951674d0d62a5027b870163/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=46f1f3c1c267215d8951674d0d62a5027b870163", "patch": "@@ -412,20 +412,31 @@ check_bb_profile (basic_block bb, FILE * file, int indent, int flags)\n \n   if (bb != EXIT_BLOCK_PTR_FOR_FN (fun))\n     {\n+      bool found = false;\n       FOR_EACH_EDGE (e, ei, bb->succs)\n-\tsum += e->probability;\n-      if (EDGE_COUNT (bb->succs) && abs (sum - REG_BR_PROB_BASE) > 100)\n-\tfprintf (file, \"%s%sInvalid sum of outgoing probabilities %.1f%%\\n\",\n-\t\t (flags & TDF_COMMENT) ? \";; \" : \"\", s_indent,\n-\t\t sum * 100.0 / REG_BR_PROB_BASE);\n-      lsum = 0;\n-      FOR_EACH_EDGE (e, ei, bb->succs)\n-\tlsum += e->count;\n-      if (EDGE_COUNT (bb->succs)\n-\t  && (lsum - bb->count > 100 || lsum - bb->count < -100))\n-\tfprintf (file, \"%s%sInvalid sum of outgoing counts %i, should be %i\\n\",\n-\t\t (flags & TDF_COMMENT) ? \";; \" : \"\", s_indent,\n-\t\t (int) lsum, (int) bb->count);\n+\t{\n+\t  if (!(e->flags & EDGE_EH))\n+\t    found = true;\n+\t  sum += e->probability;\n+\t}\n+      /* Only report mismatches for non-EH control flow. If there are only EH\n+\t edges it means that the BB ends by noreturn call.  Here the control\n+\t flow may just terminate.  */\n+      if (found)\n+\t{\n+\t  if (EDGE_COUNT (bb->succs) && abs (sum - REG_BR_PROB_BASE) > 100)\n+\t    fprintf (file, \"%s%sInvalid sum of outgoing probabilities %.1f%%\\n\",\n+\t\t     (flags & TDF_COMMENT) ? \";; \" : \"\", s_indent,\n+\t\t     sum * 100.0 / REG_BR_PROB_BASE);\n+\t  lsum = 0;\n+\t  FOR_EACH_EDGE (e, ei, bb->succs)\n+\t    lsum += e->count;\n+\t  if (EDGE_COUNT (bb->succs)\n+\t      && (lsum - bb->count > 100 || lsum - bb->count < -100))\n+\t    fprintf (file, \"%s%sInvalid sum of outgoing counts %i, should be %i\\n\",\n+\t\t     (flags & TDF_COMMENT) ? \";; \" : \"\", s_indent,\n+\t\t     (int) lsum, (int) bb->count);\n+\t}\n     }\n     if (bb != ENTRY_BLOCK_PTR_FOR_FN (fun))\n     {"}]}