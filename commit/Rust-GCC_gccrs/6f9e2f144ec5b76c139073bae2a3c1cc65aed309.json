{"sha": "6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "node_id": "C_kwDOANBUbNoAKDZmOWUyZjE0NGVjNWI3NmMxMzkwNzNiYWUyYTNjMWNjNjVhZWQzMDk", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-01T00:18:20Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-01T00:18:20Z"}, "message": "Daily bump.", "tree": {"sha": "4bd1151b8eb41992036baefbc9c73bce062fd4da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bd1151b8eb41992036baefbc9c73bce062fd4da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/comments", "author": null, "committer": null, "parents": [{"sha": "d3d205ab440886164b6de2be2a2efa10cac95b66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3d205ab440886164b6de2be2a2efa10cac95b66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3d205ab440886164b6de2be2a2efa10cac95b66"}], "stats": {"total": 272, "additions": 271, "deletions": 1}, "files": [{"sha": "a7c454e358702f5bc3a69b8e06ffddc9c2004919", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "patch": "@@ -1,3 +1,25 @@\n+2023-02-28  Qing Zhao  <qing.zhao@oracle.com>\n+\n+\tPR middle-end/107411\n+\tPR middle-end/107411\n+\t* gimplify.cc (gimple_add_init_for_auto_var): Use sprintf to replace\n+\txasprintf.\n+\t* tree-ssa-uninit.cc (warn_uninit): Handle the case when the\n+\tLHS varaible of a .DEFERRED_INIT call doesn't have a DECL_NAME.\n+\n+2023-02-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/108894\n+\t* ubsan.cc (ubsan_expand_bounds_ifn): Emit index >= bound\n+\tcomparison rather than index > bound.\n+\t* gimple-fold.cc (gimple_fold_call): Use tree_int_cst_lt\n+\trather than tree_int_cst_le for IFN_UBSAN_BOUND comparison.\n+\t* doc/invoke.texi (-fsanitize=bounds): Document that whether\n+\tflexible array member-like arrays are instrumented or not depends\n+\ton -fstrict-flex-arrays* options of strict_flex_array attributes.\n+\t(-fsanitize=bounds-strict): Document that flexible array members\n+\tare not instrumented.\n+\n 2023-02-27  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/108922"}, {"sha": "a0a140e40cc9a7c8decd2f5543e54be7be2292aa", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "patch": "@@ -1 +1 @@\n-20230228\n+20230301"}, {"sha": "2cd2aefd3218354816e4d9d48f41eefe1136667f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "patch": "@@ -1,3 +1,22 @@\n+2023-02-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/107938\n+\t* c-warn.cc (check_address_or_pointer_of_packed_member): Check\n+\tPOINTER_TYPE_P.\n+\n+2023-02-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/108894\n+\t* c-common.h (c_strict_flex_array_level_of): Declare.\n+\t* c-common.cc (c_strict_flex_array_level_of): New function,\n+\tmoved and renamed from c-decl.cc's strict_flex_array_level_of.\n+\t* c-ubsan.cc (ubsan_instrument_bounds): Fix comment typo.  For\n+\tC check c_strict_flex_array_level_of whether a trailing array\n+\tshould be treated as flexible member like.  Handle C [0] arrays.\n+\tAdd 1 + index_off_by_one rather than index_off_by_one to bounds\n+\tand use tree_int_cst_lt rather than tree_int_cst_le for idx vs.\n+\tbounds comparison.\n+\n 2023-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR translation/108890"}, {"sha": "c566302c8bdf32e650644ae370a46bac8be3620d", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "patch": "@@ -1,3 +1,10 @@\n+2023-02-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/108894\n+\t* c-decl.cc (strict_flex_array_level_of): Move to c-common.cc\n+\tand rename to c_strict_flex_array_level_of.\n+\t(is_flexible_array_member_p): Adjust caller.\n+\n 2023-02-18  Martin Uecker  <uecker@tugraz.at>\n \n \tPR c/108375"}, {"sha": "3c33e92c482aef44ee8264ac521aedfcf7cb5be5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "patch": "@@ -1,3 +1,18 @@\n+2023-02-28  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/108848\n+\t* pt.cc (finish_template_variable): Move dependence check\n+\tto here from ...\n+\t(lookup_and_finish_template_variable): ... here.\n+\t* semantics.cc (finish_id_expression_1): Call\n+\tfinish_template_variable sooner, before (and regardless of) the\n+\ttype_dependent_expression_p test.\n+\n+2023-02-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/108550\n+\t* pt.cc (lookup_and_finish_template_variable): Clear tf_partial.\n+\n 2023-02-20  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/101073"}, {"sha": "51d0ab9584b268f44eb63f3e6c5bdbdbb5fc0516", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "patch": "@@ -1,3 +1,67 @@\n+2023-02-28  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/108956\n+\t* Make-lang.in (m2/gm2-libs-boot/M2RTS.o): New specific rule to\n+\tadd the --suppress-noreturn option.\n+\t* Make-maintainer.in (m2/gm2-ppg-boot/$(SRC_PREFIX)M2RTS.o): New\n+\tspecific rule to add the --suppress-noreturn option.\n+\t(m2/gm2-pg-boot/$(SRC_PREFIX)M2RTS.o): New\n+\tspecific rule to add the --suppress-noreturn option.\n+\t(m2/gm2-pg-boot/$(SRC_PREFIX)%.o): Add missing $(srcdir).\n+\t(m2/gm2-pge-boot/$(SRC_PREFIX)M2RTS.o): New\n+\tspecific rule to add the --suppress-noreturn option.\n+\t(m2/gm2-pge-boot/$(SRC_PREFIX)%.o): Add missing $(srcdir).\n+\t* gm2-libs-ch/UnixArgs.cc (LIBNAME): New define.\n+\t(_M2_UnixArgs_ctor): Add LIBNAME parameter to RegisterModule.\n+\t* gm2-libs-ch/dtoa.cc (LIBNAME): New define.\n+\t(_M2_dtoa_ctor): Add LIBNAME parameter to RegisterModule.\n+\t* gm2-libs-ch/ldtoa.cc (LIBNAME): New define.\n+\t(_M2_ldtoa_ctor): Add LIBNAME parameter to RegisterModule.\n+\t* pge-boot/m2rts.h (M2RTS_RegisterModule): Add libname\n+\tparameter.\n+\t* gm2-libs-ch/m2rts.h (M2RTS_RegisterModule): Add libname\n+\tparameter.\n+\t* mc-boot-ch/GUnixArgs.cc (_M2_UnixArgs_ctor): Remove.\n+\t* pge-boot/GUnixArgs.cc (LIBNAME): New define.\n+\t(_M2_UnixArgs_ctor): Add LIBNAME parameter to RegisterModule.\n+\t* gm2-libs/RTint.def (AttachVector): Rename parameter.\n+\t* mc-boot/GDynamicStrings.c: Rebuilt.\n+\t* mc-boot/GFIO.c: Rebuilt.\n+\t* mc-boot/GIndexing.c: Rebuilt.\n+\t* mc-boot/GM2EXCEPTION.c: Rebuilt.\n+\t* mc-boot/GPushBackInput.c: Rebuilt.\n+\t* mc-boot/GRTExceptions.c: Rebuilt.\n+\t* mc-boot/GRTint.c: Rebuilt.\n+\t* mc-boot/GRTint.h: Rebuilt.\n+\t* mc-boot/GStdIO.c: Rebuilt.\n+\t* mc-boot/GStringConvert.c: Rebuilt.\n+\t* mc-boot/GSysStorage.c: Rebuilt.\n+\t* mc-boot/Gdecl.c: Rebuilt.\n+\t* mc-boot/Gkeyc.c: Rebuilt.\n+\t* mc-boot/GmcComment.c: Rebuilt.\n+\t* mc-boot/GmcComp.c: Rebuilt.\n+\t* mc-boot/GmcDebug.c: Rebuilt.\n+\t* mc-boot/GmcMetaError.c: Rebuilt.\n+\t* mc-boot/GmcOptions.c: Rebuilt.\n+\t* mc-boot/GmcOptions.h: Rebuilt.\n+\t* mc-boot/GmcStack.c: Rebuilt.\n+\t* mc-boot/GnameKey.c: Rebuilt.\n+\t* mc-boot/GsymbolKey.c: Rebuilt.\n+\t* mc/decl.mod:: Rebuilt.\n+\t* mc/mcOptions.def: Rebuilt.\n+\t* mc/mcOptions.mod:: Rebuilt.\n+\t* pge-boot/GDynamicStrings.c: Rebuilt.\n+\t* pge-boot/GFIO.c: Rebuilt.\n+\t* pge-boot/GIndexing.c: Rebuilt.\n+\t* pge-boot/GM2EXCEPTION.c: Rebuilt.\n+\t* pge-boot/GM2RTS.c: Rebuilt.\n+\t* pge-boot/GNameKey.c: Rebuilt.\n+\t* pge-boot/GPushBackInput.c: Rebuilt.\n+\t* pge-boot/GRTExceptions.c: Rebuilt.\n+\t* pge-boot/GStdIO.c: Rebuilt.\n+\t* pge-boot/GSymbolKey.c: Rebuilt.\n+\t* pge-boot/GSysStorage.c: Rebuilt.\n+\n 2023-02-25  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \tPR modula2/108261"}, {"sha": "d811c84abe929c24f1869fbfb1ef3df1892a1f45", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "patch": "@@ -1,3 +1,73 @@\n+2023-02-28  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/108848\n+\t* g++.dg/cpp1y/noexcept1.C: Don't expect a bogus \"different\n+\texception specifier\" error.  Expect a separate \"not usable\n+\tin a constant expression\" error.\n+\t* g++.dg/cpp1y/var-templ75.C: New test.\n+\t* g++.dg/cpp1y/var-templ76.C: New test.\n+\n+2023-02-28  Qing Zhao  <qing.zhao@oracle.com>\n+\n+\tPR middle-end/107411\n+\tPR middle-end/107411\n+\t* g++.dg/pr107411.C: New test.\n+\n+2023-02-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/108550\n+\t* g++.dg/cpp1y/var-templ70.C: New test.\n+\t* g++.dg/cpp1y/var-templ71.C: New test.\n+\t* g++.dg/cpp1y/var-templ72.C: New test.\n+\n+2023-02-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/107938\n+\t* g++.dg/cpp1y/var-templ73.C: New test.\n+\t* g++.dg/cpp1y/var-templ74.C: New test.\n+\t* g++.dg/warn/Waddress-of-packed-member3.C: New test.\n+\n+2023-02-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/108894\n+\t* gcc.dg/ubsan/bounds-4.c: New test.\n+\t* gcc.dg/ubsan/bounds-4a.c: New test.\n+\t* gcc.dg/ubsan/bounds-4b.c: New test.\n+\t* gcc.dg/ubsan/bounds-4c.c: New test.\n+\t* gcc.dg/ubsan/bounds-4d.c: New test.\n+\t* g++.dg/ubsan/bounds-1.C: New test.\n+\n+2023-02-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/108942\n+\t* gcc.dg/torture/ssa-fre-7.c: Use __SIZETYPE__.\n+\n+2023-02-28  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gcc.dg/plugin/infoleak-vfio_iommu_type1.c: Don't xfail bogus\n+\tmessage for \"default_packed\" targets.\n+\n+2023-02-28  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* lib/multiline.exp (handle-multiline-outputs): Shorten\n+\tmessage to the same for fail and pass.\n+\n+2023-02-28  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR testsuite/91419\n+\t* gcc.dg/tree-ssa/pr91091-2.c:15 Remove xfail for RHS.\n+\n+2023-02-28  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR testsuite/79356\n+\t* gcc.dg/attr-alloc_size-11.c: Add CRIS to the list\n+\tof targets excluding xfail on lines 50 and 51.\n+\n+2023-02-28  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR tree-optimization/108828\n+\t* gcc.dg/Wuse-after-free-2.c: Add -fno-ivopts.\n+\n 2023-02-27  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/108937"}, {"sha": "0d93b77cfa74a7afcf6735e4aa3c0e5e7969709d", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "patch": "@@ -1,3 +1,7 @@\n+2023-02-28  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* sr.po, sv.po: Update.\n+\n 2023-02-24  Joseph Myers  <joseph@codesourcery.com>\n \n \t* be.po, ca.po, da.po, de.po, el.po, eo.po, es.po, fi.po, fr.po,"}, {"sha": "dbe2bb720a9c9d3d7df1baf913be13f9dede5576", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "patch": "@@ -1,3 +1,43 @@\n+2023-02-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* generated/pack_c10.c (pack_c10): Regenerated.\n+\t* generated/pack_c16.c (pack_c16): Regenerated.\n+\t* generated/pack_c17.c (pack_c17): Regenerated.\n+\t* generated/pack_c4.c (pack_c4): Regenerated.\n+\t* generated/pack_c8.c (pack_c8): Regenerated.\n+\t* generated/pack_i1.c (pack_i1): Regenerated.\n+\t* generated/pack_i16.c (pack_i16): Regenerated.\n+\t* generated/pack_i2.c (pack_i2): Regenerated.\n+\t* generated/pack_i4.c (pack_i4): Regenerated.\n+\t* generated/pack_i8.c (pack_i8): Regenerated.\n+\t* generated/pack_r10.c (pack_r10): Regenerated.\n+\t* generated/pack_r16.c (pack_r16): Regenerated.\n+\t* generated/pack_r17.c (pack_r17): Regenerated.\n+\t* generated/pack_r4.c (pack_r4): Regenerated.\n+\t* generated/pack_r8.c (pack_r8): Regenerated.\n+\t* generated/spread_c10.c (spread_c10): Regenerated.\n+\t* generated/spread_c16.c (spread_c16): Regenerated.\n+\t* generated/spread_c17.c (spread_c17): Regenerated.\n+\t* generated/spread_c4.c (spread_c4): Regenerated.\n+\t* generated/spread_c8.c (spread_c8): Regenerated.\n+\t* generated/spread_i1.c (spread_i1): Regenerated.\n+\t* generated/spread_i16.c (spread_i16): Regenerated.\n+\t* generated/spread_i2.c (spread_i2): Regenerated.\n+\t* generated/spread_i4.c (spread_i4): Regenerated.\n+\t* generated/spread_i8.c (spread_i8): Regenerated.\n+\t* generated/spread_r10.c (spread_r10): Regenerated.\n+\t* generated/spread_r16.c (spread_r16): Regenerated.\n+\t* generated/spread_r17.c (spread_r17): Regenerated.\n+\t* generated/spread_r4.c (spread_r4): Regenerated.\n+\t* generated/spread_r8.c (spread_r8): Regenerated.\n+\t* intrinsics/execute_command_line.c (execute_command_line_i4),\n+\t(execute_command_line_i8): Set estat_initial to zero.\n+\t* intrinsics/pack_generic.c (pack_internal): Set sstride[0] and\n+\tmstride[0] to zero.\n+\t* intrinsics/spread_generic.c (spread_internal): Set sstride[0].\n+\t* m4/pack.m4: Set sstride[0] and mstride[0].\n+\t* m4/spread.m4: Set sstride[0].\n+\n 2023-01-18  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* intrinsics/execute_command_line.c (execute_command_line): On"}, {"sha": "f9b099eba2ae0b2f4bc5f9f2a88c6815156e58ef", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9e2f144ec5b76c139073bae2a3c1cc65aed309/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6f9e2f144ec5b76c139073bae2a3c1cc65aed309", "patch": "@@ -1,3 +1,32 @@\n+2023-02-28  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108952\n+\t* include/bits/uses_allocator_args.h\n+\t(uses_allocator_construction_args): Implement LWG 3527.\n+\t* testsuite/20_util/pair/astuple/get-2.cc: New test.\n+\t* testsuite/20_util/scoped_allocator/108952.cc: New test.\n+\t* testsuite/20_util/uses_allocator/lwg3527.cc: New test.\n+\n+2023-02-28  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108846\n+\t* include/bits/stl_algobase.h (__copy_move<false, false, RA>)\n+\tAdd __assign_one static member function.\n+\t(__copy_move<true, false, RA>): Likewise.\n+\t(__copy_move<IsMove, true, RA>): Do not use memmove for a single\n+\tvalue.\n+\t(__copy_move_backward<IsMove, true, RA>): Likewise.\n+\t* testsuite/25_algorithms/copy/108846.cc: New test.\n+\t* testsuite/25_algorithms/copy_backward/108846.cc: New test.\n+\t* testsuite/25_algorithms/copy_n/108846.cc: New test.\n+\t* testsuite/25_algorithms/move/108846.cc: New test.\n+\t* testsuite/25_algorithms/move_backward/108846.cc: New test.\n+\n+2023-02-28  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/c++11/codecvt.cc: Add [[likely]] and [[unlikely]]\n+\tattributes.\n+\n 2023-02-27  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/basic_ios.h (basic_ios::_M_setstate): Add"}]}