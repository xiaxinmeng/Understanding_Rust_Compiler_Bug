{"sha": "da64f72ecda1afa43ad171696454d77b60ca717a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE2NGY3MmVjZGExYWZhNDNhZDE3MTY5NjQ1NGQ3N2I2MGNhNzE3YQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-09-23T21:42:40Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-09-23T21:42:40Z"}, "message": "Float.java, [...]: Add GCJ LOCAL markers.\n\n\t* java/lang/Float.java, java/lang/Double.java: Add GCJ LOCAL\n\tmarkers.\n\nFrom-SVN: r71699", "tree": {"sha": "b2c54e6f94580cd097d2d1b71bd977c2f7b5d7bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2c54e6f94580cd097d2d1b71bd977c2f7b5d7bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da64f72ecda1afa43ad171696454d77b60ca717a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da64f72ecda1afa43ad171696454d77b60ca717a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da64f72ecda1afa43ad171696454d77b60ca717a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da64f72ecda1afa43ad171696454d77b60ca717a/comments", "author": null, "committer": null, "parents": [{"sha": "fff2cb99c987f4e9f0a8dffc0c3acd363f8a097f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff2cb99c987f4e9f0a8dffc0c3acd363f8a097f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fff2cb99c987f4e9f0a8dffc0c3acd363f8a097f"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "342f95f629cff38287c83a7352247ca876ea7b7c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da64f72ecda1afa43ad171696454d77b60ca717a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da64f72ecda1afa43ad171696454d77b60ca717a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=da64f72ecda1afa43ad171696454d77b60ca717a", "patch": "@@ -1,3 +1,8 @@\n+2003-09-23  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* java/lang/Float.java, java/lang/Double.java: Add GCJ LOCAL\n+\tmarkers.\n+\n 2003-09-22  Anthony Green  <green@redhat.com>\n \n \t* configure.in (HAVE_USLEEP_DECL): Define for newlib build."}, {"sha": "95ee4ecb7750d3b6fd3ff912a05a718f57d4adb1", "filename": "libjava/java/lang/Double.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da64f72ecda1afa43ad171696454d77b60ca717a/libjava%2Fjava%2Flang%2FDouble.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da64f72ecda1afa43ad171696454d77b60ca717a/libjava%2Fjava%2Flang%2FDouble.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FDouble.java?ref=da64f72ecda1afa43ad171696454d77b60ca717a", "patch": "@@ -428,7 +428,9 @@ public boolean equals(Object obj)\n    * @return the bits of the <code>double</code>\n    * @see #longBitsToDouble(long)\n    */\n+  // GCJ LOCAL: We diverge from Classpath for efficiency.\n   public static native long doubleToLongBits(double value);\n+  // END GCJ LOCAL\n \n   /**\n    * Convert the double to the IEEE 754 floating-point \"double format\" bit\n@@ -444,7 +446,9 @@ public boolean equals(Object obj)\n    * @return the bits of the <code>double</code>\n    * @see #longBitsToDouble(long)\n    */\n+  // GCJ LOCAL: We diverge from Classpath for efficiency.\n   public static native long doubleToRawLongBits(double value);\n+  // END GCJ LOCAL\n \n   /**\n    * Convert the argument in IEEE 754 floating-point \"double format\" bit\n@@ -459,7 +463,9 @@ public boolean equals(Object obj)\n    * @see #doubleToLongBits(double)\n    * @see #doubleToRawLongBits(double)\n    */\n+  // GCJ LOCAL: We diverge from Classpath for efficiency.\n   public static native double longBitsToDouble(long bits);\n+  // END GCJ LOCAL\n \n   /**\n    * Compare two Doubles numerically by comparing their <code>double</code>"}, {"sha": "d3065f6b01c7cc69758306b2894781b663bb7889", "filename": "libjava/java/lang/Float.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da64f72ecda1afa43ad171696454d77b60ca717a/libjava%2Fjava%2Flang%2FFloat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da64f72ecda1afa43ad171696454d77b60ca717a/libjava%2Fjava%2Flang%2FFloat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FFloat.java?ref=da64f72ecda1afa43ad171696454d77b60ca717a", "patch": "@@ -438,7 +438,9 @@ public boolean equals(Object obj)\n    * @return the bits of the <code>float</code>\n    * @see #intBitsToFloat(int)\n    */\n+  // GCJ LOCAL: We diverge from Classpath for efficiency.\n   public static native int floatToIntBits(float value);\n+  // END GCJ LOCAL\n \n   /**\n    * Convert the float to the IEEE 754 floating-point \"single format\" bit\n@@ -453,7 +455,9 @@ public boolean equals(Object obj)\n    * @return the bits of the <code>float</code>\n    * @see #intBitsToFloat(int)\n    */\n+  // GCJ LOCAL: We diverge from Classpath for efficiency.\n   public static native int floatToRawIntBits(float value);\n+  // END GCJ LOCAL\n \n   /**\n    * Convert the argument in IEEE 754 floating-point \"single format\" bit\n@@ -468,7 +472,9 @@ public boolean equals(Object obj)\n    * @see #floatToIntBits(float)\n    * @see #floatToRawIntBits(float)\n    */\n+  // GCJ LOCAL: We diverge from Classpath for efficiency.\n   public static native float intBitsToFloat(int bits);\n+  // END GCJ LOCAL\n \n   /**\n    * Compare two Floats numerically by comparing their <code>float</code>"}]}