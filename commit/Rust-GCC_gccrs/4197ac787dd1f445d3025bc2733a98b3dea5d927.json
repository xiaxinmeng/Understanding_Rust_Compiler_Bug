{"sha": "4197ac787dd1f445d3025bc2733a98b3dea5d927", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE5N2FjNzg3ZGQxZjQ0NWQzMDI1YmMyNzMzYTk4YjNkZWE1ZDkyNw==", "commit": {"author": {"name": "Mumit Khan", "email": "khan@xraylith.wisc.edu", "date": "1999-04-22T14:40:55Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-04-22T14:40:55Z"}, "message": "xm-cygwin.h (HAVE_BCOPY): Delete unneeded macro.\n\n        * i386/xm-cygwin.h (HAVE_BCOPY): Delete unneeded macro.\n        (HAVE_BZERO): Likewise.\n        (HAVE_BCMP): Likewise.\n        (HAVE_RINDEX): Likewise.\n        (HAVE_INDEX): Likewise.\n        (DIR_SEPARATOR_2): Define.\n        (GET_ENV_PATH_LIST): Turn path lists into POSIX.\n        (PATH_SEPARATOR): Use ':'.\n\nFrom-SVN: r26584", "tree": {"sha": "b75d19fefa979952228d1473087dcd8bd95a66b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b75d19fefa979952228d1473087dcd8bd95a66b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4197ac787dd1f445d3025bc2733a98b3dea5d927", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4197ac787dd1f445d3025bc2733a98b3dea5d927", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4197ac787dd1f445d3025bc2733a98b3dea5d927", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4197ac787dd1f445d3025bc2733a98b3dea5d927/comments", "author": null, "committer": null, "parents": [{"sha": "12d03f6671165d77b076d043dc020d3a19caa44a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d03f6671165d77b076d043dc020d3a19caa44a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12d03f6671165d77b076d043dc020d3a19caa44a"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "d06e558ddc8020bb7901fe3d560aa4df61d5460b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4197ac787dd1f445d3025bc2733a98b3dea5d927/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4197ac787dd1f445d3025bc2733a98b3dea5d927/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4197ac787dd1f445d3025bc2733a98b3dea5d927", "patch": "@@ -1,3 +1,14 @@\n+Thu Apr 22 14:39:43 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n+\n+\t* i386/xm-cygwin.h (HAVE_BCOPY): Delete unneeded macro.\n+\t(HAVE_BZERO): Likewise.\n+\t(HAVE_BCMP): Likewise.\n+\t(HAVE_RINDEX): Likewise.\n+\t(HAVE_INDEX): Likewise.\n+\t(DIR_SEPARATOR_2): Define.\n+\t(GET_ENV_PATH_LIST): Turn path lists into POSIX.\n+\t(PATH_SEPARATOR): Use ':'.\n+\n 1999-04-22 Bruce Korb <ddsinc09@ix.netcom.com>\n \n \t* configure.in: enable disabling of fast fixincludes"}, {"sha": "ab59627fce7daa513551175272ed6d6725b26ac5", "filename": "gcc/config/i386/xm-cygwin.h", "status": "modified", "additions": 11, "deletions": 21, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4197ac787dd1f445d3025bc2733a98b3dea5d927/gcc%2Fconfig%2Fi386%2Fxm-cygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4197ac787dd1f445d3025bc2733a98b3dea5d927/gcc%2Fconfig%2Fi386%2Fxm-cygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-cygwin.h?ref=4197ac787dd1f445d3025bc2733a98b3dea5d927", "patch": "@@ -21,11 +21,6 @@ Boston, MA 02111-1307, USA. */\n \n #define EXECUTABLE_SUFFIX \".exe\"\n #define NO_SYS_SIGLIST 1\n-#define HAVE_BCOPY 1\n-#define HAVE_BZERO 1\n-#define HAVE_BCMP 1\n-#define HAVE_RINDEX 1\n-#define HAVE_INDEX 1\n \n /* We support both \"/\" and \"\\\" since everybody tests both but we\n    default to \"/\".  This is important because if gcc produces Win32\n@@ -34,33 +29,28 @@ Boston, MA 02111-1307, USA. */\n    slashes so using a forward slash shouldn't be problematic from the\n    perspective of wanting gcc to produce native Win32 paths. */\n #define DIR_SEPARATOR '/'\n+#define DIR_SEPARATOR_2 '\\\\'\n \n-/* If we allow both '/' and '\\' as dir separators, then\n-   allow both unix and win32 PATH syntax. */\n+/* Convert win32 style path lists to POSIX style for consistency. */ \n #undef GET_ENV_PATH_LIST\n #define GET_ENV_PATH_LIST(VAR,NAME)\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   char *_epath;\t\t\t\t\t\t\t\t\\\n-  char *_win32epath;\t\t\t\t\t\t\t\\\n-  _epath = _win32epath = getenv (NAME);\t\t\t\t\t\\\n-  /* if we have a posix path list, convert to win32 path list */\t\\\n+  char *_posixepath;\t\t\t\t\t\t\t\\\n+  _epath = _posixepath = getenv (NAME);\t\t\t\t\t\\\n+  /* if we have a posix path list, convert to posix path list */\t\\\n   if (_epath != NULL && *_epath != 0\t\t\t\t\t\\\n-      && cygwin32_posix_path_list_p (_epath))\t\t\t\t\\\n+      && ! cygwin_posix_path_list_p (_epath))\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       char *p;\t\t\t\t\t\t\t\t\\\n-      _win32epath = (char *) xmalloc\t\t\t\t\t\\\n-\t(cygwin32_posix_to_win32_path_list_buf_size (_epath));\t\t\\\n-      cygwin32_posix_to_win32_path_list (_epath, _win32epath);\t\t\\\n-      for (p = _win32epath; p && *p; ++p)\t\t\t\t\\\n-        {\t\t\t\t\t\t\t\t\\\n-\t  if (*p == '\\\\')\t\t\t\t\t\t\\\n-\t    *p = '/';\t\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n+      _posixepath = (char *) xmalloc\t\t\t\t\t\\\n+\t(cygwin_win32_to_posix_path_list_buf_size (_epath));\t\t\\\n+      cygwin_win32_to_posix_path_list (_epath, _posixepath);\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n-  (VAR) = _win32epath;\t\t\t\t\t\t\t\\\n+  (VAR) = _posixepath;\t\t\t\t\t\t\t\\\n } while (0)\n \n-#define PATH_SEPARATOR ';'\n+#define PATH_SEPARATOR ':'\n \n /* This is needed so that protoize will compile.  */\n #ifndef POSIX"}]}