{"sha": "dba21b324a641191fbca5a481ec23b1d765cb718", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJhMjFiMzI0YTY0MTE5MWZiY2E1YTQ4MWVjMjNiMWQ3NjVjYjcxOA==", "commit": {"author": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1998-03-25T13:47:06Z"}, "committer": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1998-03-25T13:47:06Z"}, "message": "new test for EH w/ opt on\n\nFrom-SVN: r18829", "tree": {"sha": "1ec7387bd9963f4edd525e54bed03237b01c1ff1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ec7387bd9963f4edd525e54bed03237b01c1ff1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dba21b324a641191fbca5a481ec23b1d765cb718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba21b324a641191fbca5a481ec23b1d765cb718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dba21b324a641191fbca5a481ec23b1d765cb718", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba21b324a641191fbca5a481ec23b1d765cb718/comments", "author": null, "committer": null, "parents": [{"sha": "8e73900b4eb4cf4ab91d89aa79a9d8842ffe5146", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e73900b4eb4cf4ab91d89aa79a9d8842ffe5146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e73900b4eb4cf4ab91d89aa79a9d8842ffe5146"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "a6683060c259653570e8e7a3dbfaa002f7010198", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/eh1.C", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba21b324a641191fbca5a481ec23b1d765cb718/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Feh1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba21b324a641191fbca5a481ec23b1d765cb718/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Feh1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Feh1.C?ref=dba21b324a641191fbca5a481ec23b1d765cb718", "patch": "@@ -0,0 +1,62 @@\n+// Special g++ Options: -O\n+// PRMS Id: 10776\n+\n+extern \"C\" void printf (char *, ...);\n+\n+class Foo \n+{\n+  public:\n+    Foo(int n) : n_(n) { }\n+    int f() { return n_; }\n+    \n+    int badTest();\n+    int goodTest();\n+    \n+  private:\n+\n+    int n_;\n+};\n+\n+int Foo::badTest()\n+{\n+    try {\n+\tthrow int(99);\n+    }\n+\n+    catch (int &i) {\n+\tn_ = 16;\n+    }\n+\n+    return n_;\n+        // On the sparc, the return will use a ld [%l0],%i0 instruction.\n+        // However %l0 was clobbered at the end of the catch block.  It was\n+        // used to do an indirect call.\n+}\n+\n+\n+int Foo::goodTest()\n+{\n+    int\tn;\n+\n+    try {\n+\tthrow int(99);\n+    }\n+\n+    catch (int &i) {\n+\tn = 16;\n+    }\n+\n+    return n_;\n+        // The return will use a ld [%l2],%i0 instruction.  Since %l2\n+        // contains the \"this\" pointer this works.\n+}\n+\n+int main() \n+{\n+    Foo foo(5);\n+    foo.goodTest();\n+    foo.badTest();\n+\n+    // the badTest will have failed\n+    printf (\"PASS\\n\");\n+}"}]}