{"sha": "1ce5395977f37e8d0c03394f7b932a584ce85cc7", "node_id": "C_kwDOANBUbNoAKDFjZTUzOTU5NzdmMzdlOGQwYzAzMzk0ZjdiOTMyYTU4NGNlODVjYzc", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-02-09T05:31:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-02-09T15:41:06Z"}, "message": "c++: modules and explicit(bool) [PR103752]\n\nWe weren't streaming a C++20 dependent explicit-specifier.\n\n\tPR c++/103752\n\ngcc/cp/ChangeLog:\n\n\t* module.cc (trees_out::core_vals): Stream explicit specifier.\n\t(trees_in::core_vals): Likewise.\n\t* pt.cc (store_explicit_specifier): No longer static.\n\t(tsubst_function_decl): Clear DECL_HAS_DEPENDENT_EXPLICIT_SPEC_P.\n\t* cp-tree.h (lookup_explicit_specifier): Declare.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/modules/explicit-bool-1_b.C: New test.\n\t* g++.dg/modules/explicit-bool-1_a.H: New test.", "tree": {"sha": "37282422b58c25f4a086d75462cdc94e8955edd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37282422b58c25f4a086d75462cdc94e8955edd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ce5395977f37e8d0c03394f7b932a584ce85cc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce5395977f37e8d0c03394f7b932a584ce85cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ce5395977f37e8d0c03394f7b932a584ce85cc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce5395977f37e8d0c03394f7b932a584ce85cc7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f8f8c68b434eb32756284dd8e80cfbdff524a20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f8f8c68b434eb32756284dd8e80cfbdff524a20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f8f8c68b434eb32756284dd8e80cfbdff524a20"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "f253b32c3f21d83efdcde05d31f3653b77443275", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce5395977f37e8d0c03394f7b932a584ce85cc7/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce5395977f37e8d0c03394f7b932a584ce85cc7/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=1ce5395977f37e8d0c03394f7b932a584ce85cc7", "patch": "@@ -7420,6 +7420,7 @@ extern bool copy_guide_p\t\t\t(const_tree);\n extern bool template_guide_p\t\t\t(const_tree);\n extern bool builtin_guide_p\t\t\t(const_tree);\n extern void store_explicit_specifier\t\t(tree, tree);\n+extern tree lookup_explicit_specifier\t\t(tree);\n extern void walk_specializations\t\t(bool,\n \t\t\t\t\t\t void (*)(bool, spec_entry *,\n \t\t\t\t\t\t\t  void *),"}, {"sha": "3cf0af10bc01e65697c7d939779b6b7245dd9f9b", "filename": "gcc/cp/module.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce5395977f37e8d0c03394f7b932a584ce85cc7/gcc%2Fcp%2Fmodule.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce5395977f37e8d0c03394f7b932a584ce85cc7/gcc%2Fcp%2Fmodule.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmodule.cc?ref=1ce5395977f37e8d0c03394f7b932a584ce85cc7", "patch": "@@ -6034,6 +6034,9 @@ trees_out::core_vals (tree t)\n       WT (t->function_decl.function_specific_target);\n       WT (t->function_decl.function_specific_optimization);\n       WT (t->function_decl.vindex);\n+\n+      if (DECL_HAS_DEPENDENT_EXPLICIT_SPEC_P (t))\n+\tWT (lookup_explicit_specifier (t));\n       break;\n \n     case USING_DECL:\n@@ -6531,6 +6534,13 @@ trees_in::core_vals (tree t)\n \tRT (t->function_decl.function_specific_target);\n \tRT (t->function_decl.function_specific_optimization);\n \tRT (t->function_decl.vindex);\n+\n+\tif (DECL_HAS_DEPENDENT_EXPLICIT_SPEC_P (t))\n+\t  {\n+\t    tree spec;\n+\t    RT (spec);\n+\t    store_explicit_specifier (t, spec);\n+\t  }\n       }\n       break;\n "}, {"sha": "5c995da62c66596122143bbd5161b21eac900c8b", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce5395977f37e8d0c03394f7b932a584ce85cc7/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce5395977f37e8d0c03394f7b932a584ce85cc7/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=1ce5395977f37e8d0c03394f7b932a584ce85cc7", "patch": "@@ -13870,7 +13870,7 @@ store_explicit_specifier (tree v, tree t)\n \n /* Lookup an element in EXPLICIT_SPECIFIER_MAP.  */\n \n-static tree\n+tree\n lookup_explicit_specifier (tree v)\n {\n   return *explicit_specifier_map->get (v);\n@@ -14103,7 +14103,13 @@ tsubst_function_decl (tree t, tree args, tsubst_flags_t complain,\n \t\t\t\t    /*function_p=*/false,\n \t\t\t\t    /*i_c_e_p=*/true);\n       spec = build_explicit_specifier (spec, complain);\n-      DECL_NONCONVERTING_P (r) = (spec == boolean_true_node);\n+      if (instantiation_dependent_expression_p (spec))\n+\tstore_explicit_specifier (r, spec);\n+      else\n+\t{\n+\t  DECL_NONCONVERTING_P (r) = (spec == boolean_true_node);\n+\t  DECL_HAS_DEPENDENT_EXPLICIT_SPEC_P (r) = false;\n+\t}\n     }\n \n   /* OpenMP UDRs have the only argument a reference to the declared"}, {"sha": "db4972139c6978cc86f0f679b33a1efec90b7f90", "filename": "gcc/testsuite/g++.dg/modules/explicit-bool-1_a.H", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce5395977f37e8d0c03394f7b932a584ce85cc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexplicit-bool-1_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce5395977f37e8d0c03394f7b932a584ce85cc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexplicit-bool-1_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexplicit-bool-1_a.H?ref=1ce5395977f37e8d0c03394f7b932a584ce85cc7", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/103752\n+// { dg-additional-options -fmodule-header }\n+// { dg-require-effective-target c++20 }\n+\n+template<typename _T1, typename _T2>\n+struct pair\n+{\n+        constexpr\n+      explicit(__is_same(_T1, _T2))\n+      pair()\n+      { }\n+\n+        _T1 first;\n+        _T2 second;\n+};\n+\n+struct string\n+{\n+  string() { }\n+  string(const char* s) : s(s) { }\n+\n+  const char* s = \"\";\n+};"}, {"sha": "27bfdee1a6547e70d68cced229efbb08a5bce515", "filename": "gcc/testsuite/g++.dg/modules/explicit-bool-1_b.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce5395977f37e8d0c03394f7b932a584ce85cc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexplicit-bool-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce5395977f37e8d0c03394f7b932a584ce85cc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexplicit-bool-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexplicit-bool-1_b.C?ref=1ce5395977f37e8d0c03394f7b932a584ce85cc7", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options -fmodules-ts }\n+// { dg-require-effective-target c++20 }\n+\n+export module x;\n+import \"explicit-bool-1_a.H\";\n+pair<string, string> environment;"}]}