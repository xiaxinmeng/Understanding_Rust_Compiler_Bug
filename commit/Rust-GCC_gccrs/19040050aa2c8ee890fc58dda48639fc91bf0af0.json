{"sha": "19040050aa2c8ee890fc58dda48639fc91bf0af0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkwNDAwNTBhYTJjOGVlODkwZmM1OGRkYTQ4NjM5ZmM5MWJmMGFmMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-05-12T08:38:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-05-12T08:40:21Z"}, "message": "expand: Don't reuse DEBUG_EXPRs with vector type if they have different modes [PR100508]\n\nThe inliner doesn't remap DEBUG_EXPR_DECLs, so the same decls can appear\nin multiple functions.\nFurthermore, expansion reuses corresponding DEBUG_EXPRs too, so they again\ncan be reused in multiple functions.\nNeither of that is a major problem, DEBUG_EXPRs are just magic value holders\nand what value they stand for is independent in each function and driven by\nwhat debug stmts or DEBUG_INSNs they are bound to.\nExcept for DEBUG_EXPR*s with vector types, TYPE_MODE can be either BLKmode\nor some vector mode depending on whether current function's enabled ISAs\nsupport that vector mode or not.  On the following testcase, we expand it\nfirst in foo function without AVX2 enabled and so the DEBUG_EXPR is\nBLKmode, but later the same DEBUG_EXPR_DECL is used in a simd clone with\nAVX2 enabled and expansion ICEs because of a mode mismatch.\n\nThe following patch fixes that by forcing recreation of a DEBUG_EXPR if\nthere is a mode mismatch for vector typed DEBUG_EXPR_DECL, DEBUG_EXPRs\nwill be still reused in between functions otherwise and within the same\nfunction the mode should be always the same.\n\n2021-05-12  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/100508\n\t* cfgexpand.c (expand_debug_expr): For DEBUG_EXPR_DECL with vector\n\ttype, don't reuse DECL_RTL if it has different mode, instead force\n\tcreation of a new DEBUG_EXPR.\n\n\t* gcc.dg/gomp/pr100508.c: New test.", "tree": {"sha": "2887536bccc0ae07d5119e1e043c9e9dc907dabd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2887536bccc0ae07d5119e1e043c9e9dc907dabd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19040050aa2c8ee890fc58dda48639fc91bf0af0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19040050aa2c8ee890fc58dda48639fc91bf0af0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19040050aa2c8ee890fc58dda48639fc91bf0af0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19040050aa2c8ee890fc58dda48639fc91bf0af0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d27d1adeef6da5e7581edfa65f69ea0cdbc877b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d27d1adeef6da5e7581edfa65f69ea0cdbc877b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d27d1adeef6da5e7581edfa65f69ea0cdbc877b"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "e3814ee9d06f065f20c93385cdafb501bdd5dabe", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19040050aa2c8ee890fc58dda48639fc91bf0af0/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19040050aa2c8ee890fc58dda48639fc91bf0af0/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=19040050aa2c8ee890fc58dda48639fc91bf0af0", "patch": "@@ -4512,7 +4512,12 @@ expand_debug_expr (tree exp)\n       op0 = DECL_RTL_IF_SET (exp);\n \n       if (op0)\n-\treturn op0;\n+\t{\n+\t  if (GET_MODE (op0) != mode)\n+\t    gcc_assert (VECTOR_TYPE_P (TREE_TYPE (exp)));\n+\t  else\n+\t    return op0;\n+\t}\n \n       op0 = gen_rtx_DEBUG_EXPR (mode);\n       DEBUG_EXPR_TREE_DECL (op0) = exp;"}, {"sha": "c3fa2fc258e03f152cfb2b39cb22304cb103008d", "filename": "gcc/testsuite/gcc.dg/gomp/pr100508.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19040050aa2c8ee890fc58dda48639fc91bf0af0/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr100508.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19040050aa2c8ee890fc58dda48639fc91bf0af0/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr100508.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr100508.c?ref=19040050aa2c8ee890fc58dda48639fc91bf0af0", "patch": "@@ -0,0 +1,14 @@\n+/* PR middle-end/100508 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g -fopenmp-simd\" } */\n+\n+typedef int __attribute__((__vector_size__(32))) V;\n+V j;\n+\n+#pragma omp declare simd\n+int\n+foo (void)\n+{\n+  V m = j;\n+  return 0;\n+}"}]}