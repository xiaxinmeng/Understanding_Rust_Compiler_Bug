{"sha": "e9ae68afa0154895e42dbc098bc7ba63eaef7ce6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlhZTY4YWZhMDE1NDg5NWU0MmRiYzA5OGJjN2JhNjNlYWVmN2NlNg==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2015-05-13T07:49:59Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-05-13T07:49:59Z"}, "message": "re PR rtl-optimization/66048 ([i386] ICE in create_pre_exit when both AVX and MPX are used)\n\ngcc/\n\n\tPR target/66048\n\t* function.c (diddle_return_value_1): Process bounds first.\n\t* config/i38/i386.c (ix86_function_value_regno_p): Add bnd1\n\tregister.\n\ngcc/testsuite/\n\n\tPR target/66048\n\t* gcc.target/i386/mpx/pr66048.cc: New.\n\nFrom-SVN: r223114", "tree": {"sha": "31b9c5cfef7d4d0d069152409b26c2cba800b09a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31b9c5cfef7d4d0d069152409b26c2cba800b09a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa953e2fc52e2196d62b9669a69c9e82de43dc3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa953e2fc52e2196d62b9669a69c9e82de43dc3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa953e2fc52e2196d62b9669a69c9e82de43dc3c"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "35f8197d22bf156ca09a35dcf9ce93fee72297e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9ae68afa0154895e42dbc098bc7ba63eaef7ce6", "patch": "@@ -1,3 +1,10 @@\n+2015-05-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR target/66048\n+\t* function.c (diddle_return_value_1): Process bounds first.\n+\t* config/i38/i386.c (ix86_function_value_regno_p): Add bnd1\n+\tregister.\n+\n 2015-05-13  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR rtl-optimization/64616"}, {"sha": "bda32570d54000d2f23193831c80965d28d287dc", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e9ae68afa0154895e42dbc098bc7ba63eaef7ce6", "patch": "@@ -8216,7 +8216,8 @@ ix86_function_value_regno_p (const unsigned int regno)\n     case SI_REG:\n       return TARGET_64BIT && ix86_abi != MS_ABI;\n \n-    case FIRST_BND_REG:\n+    case BND0_REG:\n+    case BND1_REG:\n       return chkp_function_instrumented_p (current_function_decl);\n \n       /* Complex values are returned in %st(0)/%st(1) pair.  */"}, {"sha": "eb90ed5752cf44f146509efe99a77ebf498c6704", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=e9ae68afa0154895e42dbc098bc7ba63eaef7ce6", "patch": "@@ -5224,8 +5224,8 @@ diddle_return_value_1 (void (*doit) (rtx, void *), void *arg, rtx outgoing)\n void\n diddle_return_value (void (*doit) (rtx, void *), void *arg)\n {\n-  diddle_return_value_1 (doit, arg, crtl->return_rtx);\n   diddle_return_value_1 (doit, arg, crtl->return_bnd);\n+  diddle_return_value_1 (doit, arg, crtl->return_rtx);\n }\n \n static void"}, {"sha": "2f83f4e4fca78f0c907e0bd5e1b2625f97a45c37", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9ae68afa0154895e42dbc098bc7ba63eaef7ce6", "patch": "@@ -1,3 +1,8 @@\n+2015-05-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR target/66048\n+\t* gcc.target/i386/mpx/pr66048.cc: New.\n+\n 2015-05-13  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR rtl-optimization/64616"}, {"sha": "b29cd03ed0f0724330eb7470051349e603c20f92", "filename": "gcc/testsuite/gcc.target/i386/mpx/pr66048.cc", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fpr66048.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ae68afa0154895e42dbc098bc7ba63eaef7ce6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fpr66048.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fpr66048.cc?ref=e9ae68afa0154895e42dbc098bc7ba63eaef7ce6", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcheck-pointer-bounds -mmpx -march=corei7-avx\" } */\n+\n+struct c1\n+{\n+  c1 (const c1 &other) : p (other.p) { };\n+  int *p;\n+};\n+\n+struct c2 : public c1 { };\n+\n+c1\n+test (c2 a)\n+{\n+  return a;\n+}"}]}