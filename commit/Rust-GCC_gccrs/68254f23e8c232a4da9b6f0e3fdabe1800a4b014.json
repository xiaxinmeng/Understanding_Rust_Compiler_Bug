{"sha": "68254f23e8c232a4da9b6f0e3fdabe1800a4b014", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgyNTRmMjNlOGMyMzJhNGRhOWI2ZjBlM2ZkYWJlMTgwMGE0YjAxNA==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2007-01-29T17:43:34Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2007-01-29T17:43:34Z"}, "message": "jvmti_md.h (_CLASSPATH_VM_JVMTI_TYPES_DEFINED): Define.\n\n        * include/jvmti_md.h (_CLASSPATH_VM_JVMTI_TYPES_DEFINED):\n        Define.\n        [__GCJ_JNI_IMPL__]: Define our own JVMTI types when building\n        gcj. All jvmti object types now are defined to be their\n        corresponding java classes.\n        * jvmti.cc (_Jv_JVMTI_SuspendThread): Remove casting from\n        jthread to Thread*.\n        (_Jv_JVMTI_ResumeThread): Likewise.\n        (_Jv_JVMTI_InterruptThread): Likewise.\n        (_Jv_JVMTI_SetEventNotificationMode): Likewise.\n        * gnu/classpath/jdwp/natVMVirtualMachine.cc\n        (jdwpClassPrepareCB): Likewise.\n        (jdwpThreadEndCB): Likewise.\n        (jdwpThreadStartCB): Likewise.\n        (jdwpVMInitCB): Likewise.\n\nFrom-SVN: r121296", "tree": {"sha": "186cf38e0affab2bbcb19802d5501e67e12a76eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/186cf38e0affab2bbcb19802d5501e67e12a76eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68254f23e8c232a4da9b6f0e3fdabe1800a4b014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68254f23e8c232a4da9b6f0e3fdabe1800a4b014", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68254f23e8c232a4da9b6f0e3fdabe1800a4b014", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68254f23e8c232a4da9b6f0e3fdabe1800a4b014/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48e540b04f64910218cc702d0e05760e2eb1ef44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48e540b04f64910218cc702d0e05760e2eb1ef44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48e540b04f64910218cc702d0e05760e2eb1ef44"}], "stats": {"total": 69, "additions": 42, "deletions": 27}, "files": [{"sha": "6f03ecb3292bb8e88eba5de2aa80333f32ad728f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68254f23e8c232a4da9b6f0e3fdabe1800a4b014/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68254f23e8c232a4da9b6f0e3fdabe1800a4b014/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=68254f23e8c232a4da9b6f0e3fdabe1800a4b014", "patch": "@@ -1,3 +1,21 @@\n+2007-01-29  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/jvmti_md.h (_CLASSPATH_VM_JVMTI_TYPES_DEFINED):\n+\tDefine.\n+\t[__GCJ_JNI_IMPL__]: Define our own JVMTI types when building\n+\tgcj. All jvmti object types now are defined to be their\n+\tcorresponding java classes.\n+\t* jvmti.cc (_Jv_JVMTI_SuspendThread): Remove casting from\n+\tjthread to Thread*.\n+\t(_Jv_JVMTI_ResumeThread): Likewise.\n+\t(_Jv_JVMTI_InterruptThread): Likewise.\n+\t(_Jv_JVMTI_SetEventNotificationMode): Likewise.\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(jdwpClassPrepareCB): Likewise.\n+\t(jdwpThreadEndCB): Likewise.\n+\t(jdwpThreadStartCB): Likewise.\n+\t(jdwpVMInitCB): Likewise.\n+ \n 2007-01-28  Michele Sandri  <gpointorama@gmail.com>\n \n \t* gnu/java/nio/channels/natFileChannelWin32.cc"}, {"sha": "389b6cc62ae546bd3f49e91f602f9bc00df8cb8d", "filename": "libjava/gnu/classpath/jdwp/natVMVirtualMachine.cc", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68254f23e8c232a4da9b6f0e3fdabe1800a4b014/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMVirtualMachine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68254f23e8c232a4da9b6f0e3fdabe1800a4b014/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMVirtualMachine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMVirtualMachine.cc?ref=68254f23e8c232a4da9b6f0e3fdabe1800a4b014", "patch": "@@ -426,7 +426,6 @@ jdwpClassPrepareCB (jvmtiEnv *env, MAYBE_UNUSED JNIEnv *jni_env,\n {\n   using namespace gnu::classpath::jdwp;\n \n-  Thread *t = reinterpret_cast<Thread *> (thread);\n   jint flags = 0;\n   jvmtiError err = env->GetClassStatus (klass, &flags);\n   if (err != JVMTI_ERROR_NONE)\n@@ -444,7 +443,7 @@ jdwpClassPrepareCB (jvmtiEnv *env, MAYBE_UNUSED JNIEnv *jni_env,\n     status |= ClassPrepareEvent::STATUS_INITIALIZED;\n \n   event::ClassPrepareEvent *event\n-    = new event::ClassPrepareEvent (t, klass, status);\n+    = new event::ClassPrepareEvent (thread, klass, status);\n   Jdwp::notify (event);\n }\n \n@@ -454,8 +453,7 @@ jdwpThreadEndCB (MAYBE_UNUSED jvmtiEnv *env, MAYBE_UNUSED JNIEnv *jni_env,\n {\n   using namespace gnu::classpath::jdwp::event;\n \n-  Thread *t = reinterpret_cast<Thread *> (thread);\n-  ThreadEndEvent *e = new ThreadEndEvent (t);\n+  ThreadEndEvent *e = new ThreadEndEvent (thread);\n   gnu::classpath::jdwp::Jdwp::notify (e);\n }\n \n@@ -465,8 +463,7 @@ jdwpThreadStartCB (MAYBE_UNUSED jvmtiEnv *env, MAYBE_UNUSED JNIEnv *jni_env,\n {\n   using namespace gnu::classpath::jdwp::event;\n \n-  Thread *t = reinterpret_cast<Thread *> (thread);\n-  ThreadStartEvent *e = new ThreadStartEvent (t);\n+  ThreadStartEvent *e = new ThreadStartEvent (thread);\n   gnu::classpath::jdwp::Jdwp::notify (e);\n }\n \n@@ -497,6 +494,5 @@ jdwpVMInitCB (MAYBE_UNUSED jvmtiEnv *env, MAYBE_UNUSED JNIEnv *jni_env,\n \n   // Send JDWP VMInit\n   using namespace gnu::classpath::jdwp::event;\n-  Thread *init_thread = reinterpret_cast<Thread *> (thread);\n-  gnu::classpath::jdwp::Jdwp::notify (new VmInitEvent (init_thread));\n+  gnu::classpath::jdwp::Jdwp::notify (new VmInitEvent (thread));\n }"}, {"sha": "2270f3f3d168c97786d26de5874a01409e2397e9", "filename": "libjava/include/jvmti_md.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68254f23e8c232a4da9b6f0e3fdabe1800a4b014/libjava%2Finclude%2Fjvmti_md.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68254f23e8c232a4da9b6f0e3fdabe1800a4b014/libjava%2Finclude%2Fjvmti_md.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjvmti_md.h?ref=68254f23e8c232a4da9b6f0e3fdabe1800a4b014", "patch": "@@ -1,5 +1,5 @@\n /* jvmti_md.h\n-   Copyright (C) 2006 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -53,6 +53,14 @@ executable file might be covered by the GNU General Public License. */\n   /* One for each callback.                     */\t\t\t\\\n   bool enabled[EVENT_SLOTS];\n \n+/* Redefine the standard JVMTI types to something a little more\n+   precise than \"jobject\". */\n+#define _CLASSPATH_VM_JVMTI_TYPES_DEFINED\n+typedef java::lang::Thread *jthread;\n+typedef java::lang::ThreadGroup *jthreadGroup;\n+typedef jlong jlocation;\n+typedef struct _Jv_rawMonitorID *jrawMonitorID;\n+\n #endif /* __GCJ_JNI_IMPL__ */\n \n #endif /* __GCJ_JVMTI_MD_H__ */"}, {"sha": "03eec74b4c1aa5ea859d37df62021883eebf6f38", "filename": "libjava/jvmti.cc", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68254f23e8c232a4da9b6f0e3fdabe1800a4b014/libjava%2Fjvmti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68254f23e8c232a4da9b6f0e3fdabe1800a4b014/libjava%2Fjvmti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjvmti.cc?ref=68254f23e8c232a4da9b6f0e3fdabe1800a4b014", "patch": "@@ -155,12 +155,10 @@ _Jv_JVMTI_SuspendThread (MAYBE_UNUSED jvmtiEnv *env, jthread thread)\n   using namespace java::lang;\n \n   THREAD_DEFAULT_TO_CURRENT (thread);\n- \n-  Thread *t = reinterpret_cast<Thread *> (thread);\n-  THREAD_CHECK_VALID (t);\n-  THREAD_CHECK_IS_ALIVE (t);\n+  THREAD_CHECK_VALID (thread);\n+  THREAD_CHECK_IS_ALIVE (thread);\n \n-  _Jv_Thread_t *data = _Jv_ThreadGetData (t);\n+  _Jv_Thread_t *data = _Jv_ThreadGetData (thread);\n   _Jv_SuspendThread (data);\n   return JVMTI_ERROR_NONE;\n }\n@@ -171,12 +169,10 @@ _Jv_JVMTI_ResumeThread (MAYBE_UNUSED jvmtiEnv *env, jthread thread)\n   using namespace java::lang;\n \n   THREAD_DEFAULT_TO_CURRENT (thread);\n+  THREAD_CHECK_VALID (thread);\n+  THREAD_CHECK_IS_ALIVE (thread);\n \n-  Thread *t = reinterpret_cast<Thread *> (thread);\n-  THREAD_CHECK_VALID (t);\n-  THREAD_CHECK_IS_ALIVE (t);\n-\n-  _Jv_Thread_t *data = _Jv_ThreadGetData (t);\n+  _Jv_Thread_t *data = _Jv_ThreadGetData (thread);\n   _Jv_ResumeThread (data);\n   return JVMTI_ERROR_NONE;\n }\n@@ -191,10 +187,9 @@ _Jv_JVMTI_InterruptThread (MAYBE_UNUSED jvmtiEnv *env, jthread thread)\n   if (thread == NULL)\n     return JVMTI_ERROR_INVALID_THREAD;\n \n-  Thread *real_thread = reinterpret_cast<Thread *> (thread);\n-  THREAD_CHECK_VALID (real_thread);\n-  THREAD_CHECK_IS_ALIVE (real_thread);\n-  real_thread->interrupt();\n+  THREAD_CHECK_VALID (thread);\n+  THREAD_CHECK_IS_ALIVE (thread);\n+  thread->interrupt();\n   return JVMTI_ERROR_NONE;\n }\n \n@@ -1172,10 +1167,8 @@ _Jv_JVMTI_SetEventNotificationMode (jvmtiEnv *env, jvmtiEventMode mode,\n \n   if (event_thread != NULL)\n     {\n-      using namespace java::lang;\n-      Thread *t = reinterpret_cast<Thread *> (event_thread);\n-      THREAD_CHECK_VALID (t);\n-      THREAD_CHECK_IS_ALIVE (t);\n+      THREAD_CHECK_VALID (event_thread);\n+      THREAD_CHECK_IS_ALIVE (event_thread);\n     }\n \n   bool enabled;"}]}