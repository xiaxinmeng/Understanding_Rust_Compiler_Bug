{"sha": "bd085c2093d2edb2224e7129d516860c0c26954d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQwODVjMjA5M2QyZWRiMjIyNGU3MTI5ZDUxNjg2MGMwYzI2OTU0ZA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2010-12-15T17:42:09Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2010-12-15T17:42:09Z"}, "message": "Better error message for malloc() failure\n\nFrom-SVN: r167863", "tree": {"sha": "4f5047c103d4dd28317eeded277ca0bf8e236bd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f5047c103d4dd28317eeded277ca0bf8e236bd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd085c2093d2edb2224e7129d516860c0c26954d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd085c2093d2edb2224e7129d516860c0c26954d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd085c2093d2edb2224e7129d516860c0c26954d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd085c2093d2edb2224e7129d516860c0c26954d/comments", "author": null, "committer": null, "parents": [{"sha": "272dc8514341566a82eeba15fc1ebc78bb058358", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/272dc8514341566a82eeba15fc1ebc78bb058358", "html_url": "https://github.com/Rust-GCC/gccrs/commit/272dc8514341566a82eeba15fc1ebc78bb058358"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "afab6870a3f2aaf8bf39a5c5a92e85edfaaf1ed9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd085c2093d2edb2224e7129d516860c0c26954d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd085c2093d2edb2224e7129d516860c0c26954d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bd085c2093d2edb2224e7129d516860c0c26954d", "patch": "@@ -1,3 +1,10 @@\n+2010-12-15  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* trans.c (gfc_allocate_with_status): Better error message for\n+\tmalloc() failure.\n+\t(gfc_call_realloc): Likewise.\n+\t* misc.c (gfc_getmem): Likewise.\n+\n 2010-12-15  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/28105"}, {"sha": "86e102edc529da6f1a7491344fc279445f0f3fe7", "filename": "gcc/fortran/misc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd085c2093d2edb2224e7129d516860c0c26954d/gcc%2Ffortran%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd085c2093d2edb2224e7129d516860c0c26954d/gcc%2Ffortran%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmisc.c?ref=bd085c2093d2edb2224e7129d516860c0c26954d", "patch": "@@ -36,7 +36,7 @@ gfc_getmem (size_t n)\n \n   p = xmalloc (n);\n   if (p == NULL)\n-    gfc_fatal_error (\"Out of memory-- malloc() failed\");\n+    gfc_fatal_error (\"Allocation would exceed memory limit -- malloc() failed\");\n   memset (p, 0, n);\n   return p;\n }"}, {"sha": "1fd0dc130132b7881759804126c88e74bae00db7", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd085c2093d2edb2224e7129d516860c0c26954d/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd085c2093d2edb2224e7129d516860c0c26954d/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=bd085c2093d2edb2224e7129d516860c0c26954d", "patch": "@@ -590,7 +590,7 @@ gfc_call_malloc (stmtblock_t * block, tree type, tree size)\n         if (stat)\n           *stat = LIBERROR_ALLOCATION;\n         else\n-\t  runtime_error (\"Out of memory\");\n+\t  runtime_error (\"Allocation would exceed memory limit\");\n       }\n       return newmem;\n     }  */\n@@ -636,7 +636,7 @@ gfc_allocate_with_status (stmtblock_t * block, tree size, tree status)\n \t\t\t\t\t\t\t   1)))));\n \n   msg = gfc_build_addr_expr (pchar_type_node, gfc_build_localized_cstring_const\n-\t\t\t\t\t\t(\"Out of memory\"));\n+\t\t\t     (\"Allocation would exceed memory limit\"));\n   tmp = build_call_expr_loc (input_location,\n \t\t\t gfor_fndecl_os_error, 1, msg);\n \n@@ -1003,7 +1003,7 @@ internal_realloc (void *mem, size_t size)\n {\n   res = realloc (mem, size);\n   if (!res && size != 0)\n-    _gfortran_os_error (\"Out of memory\");\n+    _gfortran_os_error (\"Allocation would exceed memory limit\");\n \n   if (size == 0)\n     return NULL;\n@@ -1036,7 +1036,7 @@ gfc_call_realloc (stmtblock_t * block, tree mem, tree size)\n   null_result = fold_build2_loc (input_location, TRUTH_AND_EXPR, boolean_type_node,\n \t\t\t\t null_result, nonzero);\n   msg = gfc_build_addr_expr (pchar_type_node, gfc_build_localized_cstring_const\n-\t\t\t\t\t\t(\"Out of memory\"));\n+\t\t\t     (\"Allocation would exceed memory limit\"));\n   tmp = fold_build3_loc (input_location, COND_EXPR, void_type_node,\n \t\t\t null_result,\n \t\t\t build_call_expr_loc (input_location,"}]}