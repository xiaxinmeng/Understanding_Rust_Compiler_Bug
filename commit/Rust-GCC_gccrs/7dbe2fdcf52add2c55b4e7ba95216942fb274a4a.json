{"sha": "7dbe2fdcf52add2c55b4e7ba95216942fb274a4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RiZTJmZGNmNTJhZGQyYzU1YjRlN2JhOTUyMTY5NDJmYjI3NGE0YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-15T12:22:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-15T12:22:00Z"}, "message": "Remove erroneously-installed change.\n\nFrom-SVN: r7492", "tree": {"sha": "fd278275e93484ef99ae5e0baecc2cd5571f73bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd278275e93484ef99ae5e0baecc2cd5571f73bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dbe2fdcf52add2c55b4e7ba95216942fb274a4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dbe2fdcf52add2c55b4e7ba95216942fb274a4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dbe2fdcf52add2c55b4e7ba95216942fb274a4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dbe2fdcf52add2c55b4e7ba95216942fb274a4a/comments", "author": null, "committer": null, "parents": [{"sha": "60103a34825ddfa2e18d3d01f67d6d162c5dfaf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60103a34825ddfa2e18d3d01f67d6d162c5dfaf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60103a34825ddfa2e18d3d01f67d6d162c5dfaf4"}], "stats": {"total": 31, "additions": 10, "deletions": 21}, "files": [{"sha": "6de6b1d4ff05327ad6ce949c054488bccf4fe197", "filename": "gcc/reload1.c", "status": "modified", "additions": 10, "deletions": 21, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dbe2fdcf52add2c55b4e7ba95216942fb274a4a/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dbe2fdcf52add2c55b4e7ba95216942fb274a4a/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=7dbe2fdcf52add2c55b4e7ba95216942fb274a4a", "patch": "@@ -3119,8 +3119,6 @@ eliminate_regs_in_insn (insn, replace)\n {\n   rtx old_body = PATTERN (insn);\n   rtx new_body;\n-  rtx old_set;\n-  rtx new_set;\n   int val = 0;\n   struct elim_table *ep;\n \n@@ -3191,12 +3189,6 @@ eliminate_regs_in_insn (insn, replace)\n   new_body = eliminate_regs (old_body, 0, replace ? insn : NULL_RTX);\n   if (new_body != old_body)\n     {\n-      old_set = (GET_CODE (old_body) == PARALLEL) ? single_set (insn) :\n-\told_body;\n-\n-      new_set = (GET_CODE (new_body) == PARALLEL) ? XVECEXP(new_body,0,0) :\n-\tnew_body;\n-\n       /* If we aren't replacing things permanently and we changed something,\n \t make another copy to ensure that all the RTL is new.  Otherwise\n \t things can go wrong if find_reload swaps commutative operands\n@@ -3208,25 +3200,22 @@ eliminate_regs_in_insn (insn, replace)\n \tnew_body = copy_rtx (new_body);\n \n       /* If we had a move insn but now we don't, rerecognize it.  */\n-      if ((GET_CODE (old_set) == SET && GET_CODE (SET_SRC (old_set)) == REG\n-\t   && (GET_CODE (new_set) != SET\n-\t       || GET_CODE (SET_SRC (new_set)) != REG))\n+      if ((GET_CODE (old_body) == SET && GET_CODE (SET_SRC (old_body)) == REG\n+\t   && (GET_CODE (new_body) != SET\n+\t       || GET_CODE (SET_SRC (new_body)) != REG))\n \t  /* If this was a load from or store to memory, compare\n \t     the MEM in recog_operand to the one in the insn.  If they\n \t     are not equal, then rerecognize the insn.  */\n-\t  || (GET_CODE (old_set) == SET\n-\t      && ((GET_CODE (SET_SRC (old_set)) == MEM\n-\t\t   && SET_SRC (old_set) != recog_operand[1])\n-\t\t  || (GET_CODE (SET_DEST (old_set)) == MEM\n-\t\t      && SET_DEST (old_set) != recog_operand[0])))\n+\t  || (GET_CODE (old_body) == SET\n+\t      && ((GET_CODE (SET_SRC (old_body)) == MEM\n+\t\t   && SET_SRC (old_body) != recog_operand[1])\n+\t\t  || (GET_CODE (SET_DEST (old_body)) == MEM\n+\t\t      && SET_DEST (old_body) != recog_operand[0])))\n \t  /* If this was an add insn before, rerecognize.  */\n \t  ||\n-\t  (GET_CODE (old_set) == SET\n-\t   && GET_CODE (SET_SRC (old_set)) == PLUS))\n+\t  (GET_CODE (old_body) == SET\n+\t   && GET_CODE (SET_SRC (old_body)) == PLUS))\n \t{\n-\t  if (!replace)\n-\t    PATTERN (insn) = copy_rtx (PATTERN (insn));\n-\n \t  if (! validate_change (insn, &PATTERN (insn), new_body, 0))\n \t    /* If recognition fails, store the new body anyway.\n \t       It's normal to have recognition failures here"}]}