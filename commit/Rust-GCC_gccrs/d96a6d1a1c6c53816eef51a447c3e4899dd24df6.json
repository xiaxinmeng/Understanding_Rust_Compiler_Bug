{"sha": "d96a6d1a1c6c53816eef51a447c3e4899dd24df6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk2YTZkMWExYzZjNTM4MTZlZWY1MWE0NDdjM2U0ODk5ZGQyNGRmNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-11-12T00:11:47Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-11-12T00:11:47Z"}, "message": "function.c (assign_parms): If TREE_ADDRESSABLE is set...\n\n        * function.c (assign_parms): If TREE_ADDRESSABLE is set, try to\n        give the parm a register and then call put_var_into_stack.\n        * stmt.c (expand_decl): Likewise.\n\ncp/\n        * typeck.c (mark_addressable): Don't call put_var_into_stack.\n\nFrom-SVN: r37396", "tree": {"sha": "49d6a4beae0ee6bca60387ac0194f98bde8ee221", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49d6a4beae0ee6bca60387ac0194f98bde8ee221"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d96a6d1a1c6c53816eef51a447c3e4899dd24df6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d96a6d1a1c6c53816eef51a447c3e4899dd24df6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d96a6d1a1c6c53816eef51a447c3e4899dd24df6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d96a6d1a1c6c53816eef51a447c3e4899dd24df6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5696467825b85328f6b808fdc20c50c1ce97a60d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5696467825b85328f6b808fdc20c50c1ce97a60d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5696467825b85328f6b808fdc20c50c1ce97a60d"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "c73993445d413e4e8ab52a8c194b89ec3d23492d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d96a6d1a1c6c53816eef51a447c3e4899dd24df6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d96a6d1a1c6c53816eef51a447c3e4899dd24df6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d96a6d1a1c6c53816eef51a447c3e4899dd24df6", "patch": "@@ -1,3 +1,9 @@\n+2000-11-11  Jason Merrill  <jason@redhat.com>\n+\n+\t* function.c (assign_parms): If TREE_ADDRESSABLE is set, try to \n+\tgive the parm a register and then call put_var_into_stack.\n+\t* stmt.c (expand_decl): Likewise.\n+\n 2000-11-11  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc.texi: Adjust wording."}, {"sha": "1dfd37aa362032eeddc813e1bbf28aaac2923b28", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d96a6d1a1c6c53816eef51a447c3e4899dd24df6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d96a6d1a1c6c53816eef51a447c3e4899dd24df6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d96a6d1a1c6c53816eef51a447c3e4899dd24df6", "patch": "@@ -1,4 +1,6 @@\n-2000-11-09  Jason Merrill  <jason@redhat.com>\n+2000-11-11  Jason Merrill  <jason@redhat.com>\n+\n+\t* typeck.c (mark_addressable): Don't call put_var_into_stack.\n \n \t* decl.c (maybe_commonize_var): Set DECL_UNINLINABLE for statics\n \tin inlines."}, {"sha": "06e6deee178e3db80e93ddc4f4f0dc4fa1986e3e", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d96a6d1a1c6c53816eef51a447c3e4899dd24df6/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d96a6d1a1c6c53816eef51a447c3e4899dd24df6/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=d96a6d1a1c6c53816eef51a447c3e4899dd24df6", "patch": "@@ -4904,7 +4904,6 @@ mark_addressable (exp)\n \t    if (! flag_this_is_variable)\n \t      error (\"cannot take the address of `this', which is an ravlue expression\");\n \t    TREE_ADDRESSABLE (x) = 1; /* so compiler doesn't die later */\n-\t    put_var_into_stack (x);\n \t    return 1;\n \t  }\n       case VAR_DECL:\n@@ -6797,7 +6796,7 @@ check_return_expr (retval)\n \n       /* First convert the value to the function's return type, then\n \t to the type of return value's location to handle the\n-         case that functype is thiner than the valtype. */\n+         case that functype is smaller than the valtype. */\n       retval = convert_for_initialization\n \t(NULL_TREE, functype, retval, LOOKUP_NORMAL|LOOKUP_ONLYCONVERTING,\n \t \"return\", NULL_TREE, 0);"}, {"sha": "ece43d3dc9dfe0d944f36da804ca79bba5285229", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d96a6d1a1c6c53816eef51a447c3e4899dd24df6/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d96a6d1a1c6c53816eef51a447c3e4899dd24df6/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=d96a6d1a1c6c53816eef51a447c3e4899dd24df6", "patch": "@@ -4610,8 +4610,6 @@ assign_parms (fndecl)\n       else if (! ((! optimize\n \t\t   && ! DECL_REGISTER (parm)\n \t\t   && ! DECL_INLINE (fndecl))\n-\t\t  /* layout_decl may set this.  */\n-\t\t  || TREE_ADDRESSABLE (parm)\n \t\t  || TREE_SIDE_EFFECTS (parm)\n \t\t  /* If -ffloat-store specified, don't put explicit\n \t\t     float variables into registers.  */\n@@ -4695,8 +4693,6 @@ assign_parms (fndecl)\n \t      && ! ((! optimize\n \t\t     && ! DECL_REGISTER (parm)\n \t\t     && ! DECL_INLINE (fndecl))\n-\t\t    /* layout_decl may set this.  */\n-\t\t    || TREE_ADDRESSABLE (parm)\n \t\t    || TREE_SIDE_EFFECTS (parm)\n \t\t    /* If -ffloat-store specified, don't put explicit\n \t\t       float variables into registers.  */\n@@ -4865,6 +4861,9 @@ assign_parms (fndecl)\n \t    mark_reg_pointer (parmreg,\n \t\t\t      TYPE_ALIGN (TREE_TYPE (TREE_TYPE (parm))));\n \n+\t  /* If something wants our address, try to use ADDRESSOF.  */\n+\t  if (TREE_ADDRESSABLE (parm))\n+\t    put_var_into_stack (parm);\n \t}\n       else\n \t{"}, {"sha": "4e42e699462408b307a724cb8218a7f0a72c3885", "filename": "gcc/stmt.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d96a6d1a1c6c53816eef51a447c3e4899dd24df6/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d96a6d1a1c6c53816eef51a447c3e4899dd24df6/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=d96a6d1a1c6c53816eef51a447c3e4899dd24df6", "patch": "@@ -3837,7 +3837,6 @@ expand_decl (decl)\n \t   && !(flag_float_store\n \t\t&& TREE_CODE (type) == REAL_TYPE)\n \t   && ! TREE_THIS_VOLATILE (decl)\n-\t   && ! TREE_ADDRESSABLE (decl)\n \t   && (DECL_REGISTER (decl) || optimize)\n \t   /* if -fcheck-memory-usage, check all variables.  */\n \t   && ! current_function_check_memory_usage)\n@@ -3855,6 +3854,10 @@ expand_decl (decl)\n \t\t\t  TYPE_ALIGN (TREE_TYPE (TREE_TYPE (decl))));\n \n       maybe_set_unchanging (DECL_RTL (decl), decl);\n+\n+      /* If something wants our address, try to use ADDRESSOF.  */\n+      if (TREE_ADDRESSABLE (decl))\n+\tput_var_into_stack (decl);\n     }\n \n   else if (TREE_CODE (DECL_SIZE_UNIT (decl)) == INTEGER_CST"}]}