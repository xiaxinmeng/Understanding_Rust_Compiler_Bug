{"sha": "ce4a9de3a4eb3cfff2de03f9c552170e0cfd9ded", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U0YTlkZTNhNGViM2NmZmYyZGUwM2Y5YzU1MjE3MGUwY2ZkOWRlZA==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2009-08-25T10:32:38Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2009-08-25T10:32:38Z"}, "message": "gthr-win32.h (__UNUSED_PARAM): Define, if not already present.\n\n2009-08-25  Kai Tietz  <kai.tietz@onevision.com>\n\n        * gcc/gthr-win32.h (__UNUSED_PARAM): Define, if not already present.\n        (__gthread_objc_condition_allocate): Mark arguments as unused.\n        (__gthread_objc_condition_deallocate): Likewise.\n        (__gthread_objc_condition_wait): Likewise.\n        (__gthread_objc_condition_broadcast): Likewise.\n        (__gthread_objc_condition_signal): Likewise.\n        (__gthread_objc_thread_detach): Cast via INT_PTR to pointer.\n        (__gthread_objc_thread_id): Likewise.\n\nFrom-SVN: r151077", "tree": {"sha": "3bed0c645a511fdfb9307a47b8a7f69eabef3545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bed0c645a511fdfb9307a47b8a7f69eabef3545"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce4a9de3a4eb3cfff2de03f9c552170e0cfd9ded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4a9de3a4eb3cfff2de03f9c552170e0cfd9ded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4a9de3a4eb3cfff2de03f9c552170e0cfd9ded", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4a9de3a4eb3cfff2de03f9c552170e0cfd9ded/comments", "author": null, "committer": null, "parents": [{"sha": "d69b8a03d74e23e9f96303d3e219825e328d6dd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d69b8a03d74e23e9f96303d3e219825e328d6dd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d69b8a03d74e23e9f96303d3e219825e328d6dd8"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "1a3905ec04815b6fe70c66d5b663c1b70a3addc8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4a9de3a4eb3cfff2de03f9c552170e0cfd9ded/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4a9de3a4eb3cfff2de03f9c552170e0cfd9ded/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce4a9de3a4eb3cfff2de03f9c552170e0cfd9ded", "patch": "@@ -1,3 +1,14 @@\n+2009-08-25  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* gcc/gthr-win32.h (__UNUSED_PARAM): Define, if not already present.\n+\t(__gthread_objc_condition_allocate): Mark arguments as unused.\n+\t(__gthread_objc_condition_deallocate): Likewise.\n+\t(__gthread_objc_condition_wait): Likewise.\n+\t(__gthread_objc_condition_broadcast): Likewise.\n+\t(__gthread_objc_condition_signal): Likewise.\n+\t(__gthread_objc_thread_detach): Cast via INT_PTR to pointer.\n+\t(__gthread_objc_thread_id): Likewise.\n+\n 2009-08-25  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR middle-end/41149"}, {"sha": "53f8396cc8135ae24e2be3eaa69647a9d5fc3a12", "filename": "gcc/gthr-win32.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4a9de3a4eb3cfff2de03f9c552170e0cfd9ded/gcc%2Fgthr-win32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4a9de3a4eb3cfff2de03f9c552170e0cfd9ded/gcc%2Fgthr-win32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-win32.h?ref=ce4a9de3a4eb3cfff2de03f9c552170e0cfd9ded", "patch": "@@ -72,6 +72,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <_mingw.h>\n #endif\n \n+#ifndef __UNUSED_PARAM\n+#define __UNUSED_PARAM(x) x\n+#endif\n+\n #ifdef _LIBOBJC\n \n /* This is necessary to prevent windef.h (included from windows.h) from\n@@ -121,7 +125,7 @@ __gthread_objc_thread_detach (void (*func)(void *arg), void *arg)\n \t\t\t\t     arg, 0, &thread_id)))\n     thread_id = 0;\n \n-  return (objc_thread_t) thread_id;\n+  return (objc_thread_t) (INT_PTR) thread_id;\n }\n \n /* Set the current thread's priority.  */\n@@ -202,7 +206,7 @@ __gthread_objc_thread_exit (void)\n objc_thread_t\n __gthread_objc_thread_id (void)\n {\n-  return (objc_thread_t) GetCurrentThreadId ();\n+  return (objc_thread_t) (INT_PTR) GetCurrentThreadId ();\n }\n \n /* Sets the thread's local storage pointer.  */\n@@ -291,39 +295,40 @@ __gthread_objc_mutex_unlock (objc_mutex_t mutex)\n \n /* Allocate a condition.  */\n int\n-__gthread_objc_condition_allocate (objc_condition_t condition)\n+__gthread_objc_condition_allocate (objc_condition_t __UNUSED_PARAM(condition))\n {\n   /* Unimplemented.  */\n   return -1;\n }\n \n /* Deallocate a condition.  */\n int\n-__gthread_objc_condition_deallocate (objc_condition_t condition)\n+__gthread_objc_condition_deallocate (objc_condition_t __UNUSED_PARAM(condition))\n {\n   /* Unimplemented.  */\n   return -1;\n }\n \n /* Wait on the condition */\n int\n-__gthread_objc_condition_wait (objc_condition_t condition, objc_mutex_t mutex)\n+__gthread_objc_condition_wait (objc_condition_t __UNUSED_PARAM(condition),\n+\t\t\t       objc_mutex_t __UNUSED_PARAM(mutex))\n {\n   /* Unimplemented.  */\n   return -1;\n }\n \n /* Wake up all threads waiting on this condition.  */\n int\n-__gthread_objc_condition_broadcast (objc_condition_t condition)\n+__gthread_objc_condition_broadcast (objc_condition_t __UNUSED_PARAM(condition))\n {\n   /* Unimplemented.  */\n   return -1;\n }\n \n /* Wake up one thread waiting on this condition.  */\n int\n-__gthread_objc_condition_signal (objc_condition_t condition)\n+__gthread_objc_condition_signal (objc_condition_t __UNUSED_PARAM(condition))\n {\n   /* Unimplemented.  */\n   return -1;"}]}