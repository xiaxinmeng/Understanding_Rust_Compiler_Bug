{"sha": "6182121c120a277dd38eb28e669866842a83a4dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE4MjEyMWMxMjBhMjc3ZGQzOGViMjhlNjY5ODY2ODQyYTgzYTRkYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-12-13T09:17:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-12-13T09:17:42Z"}, "message": "re PR tree-optimization/78742 (internal compiler error: in int_cst_value, at tree.c:10782)\n\n2016-12-13  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/78742\n\t* tree.c (cst_and_fits_in_hwi): Look if the actual value fits.\n\t* tree-object-size.c (compute_builtin_object_size): Use\n\ttree_fits_shwi_p.\n\t* tree-data-ref.c (initialize_matrix_A): Remove excess assert.\n\n\t* gcc.dg/torture/pr78742.c: New testcase.\n\nFrom-SVN: r243598", "tree": {"sha": "c4391d1481feb6460765c0bf0934473b01c2383e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4391d1481feb6460765c0bf0934473b01c2383e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6182121c120a277dd38eb28e669866842a83a4dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6182121c120a277dd38eb28e669866842a83a4dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6182121c120a277dd38eb28e669866842a83a4dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6182121c120a277dd38eb28e669866842a83a4dc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56b7aede9188eeda696eff95effb2288289ddc52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b7aede9188eeda696eff95effb2288289ddc52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56b7aede9188eeda696eff95effb2288289ddc52"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "5e0562bbbef6ab72251c1be1c06c1bb015e821d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6182121c120a277dd38eb28e669866842a83a4dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6182121c120a277dd38eb28e669866842a83a4dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6182121c120a277dd38eb28e669866842a83a4dc", "patch": "@@ -1,3 +1,11 @@\n+2016-12-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/78742\n+\t* tree.c (cst_and_fits_in_hwi): Look if the actual value fits.\n+\t* tree-object-size.c (compute_builtin_object_size): Use\n+\ttree_fits_shwi_p.\n+\t* tree-data-ref.c (initialize_matrix_A): Remove excess assert.\n+\n 2016-12-13  Martin Liska  <mliska@suse.cz>\n \n \t* asan.c (asan_mark_poison_p): Remove."}, {"sha": "6ad28bf9ce0b7df13957ec9485c3efac5ad7a02a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6182121c120a277dd38eb28e669866842a83a4dc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6182121c120a277dd38eb28e669866842a83a4dc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6182121c120a277dd38eb28e669866842a83a4dc", "patch": "@@ -1,3 +1,8 @@\n+2016-12-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/78742\n+\t* gcc.dg/torture/pr78742.c: New testcase.\n+\n 2016-12-13  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/asan/use-after-scope-goto-1.c: Update first argument of"}, {"sha": "c83ecbcb7d72200a38f8eac789a4a05148119a77", "filename": "gcc/testsuite/gcc.dg/torture/pr78742.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6182121c120a277dd38eb28e669866842a83a4dc/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78742.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6182121c120a277dd38eb28e669866842a83a4dc/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78742.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78742.c?ref=6182121c120a277dd38eb28e669866842a83a4dc", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target int128 } */\n+\n+void foo();\n+\n+void func()\n+{\n+  int m;\n+\n+  int tab[m];\n+\n+  __int128 j;\n+  for(; j; j++)\n+    {\n+      tab[j] = 0;\n+      tab[j+1] = 0;\n+    }\n+\n+  foo();\n+}"}, {"sha": "1408c242f228ab1259c86998d3aa078688dcf69a", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6182121c120a277dd38eb28e669866842a83a4dc/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6182121c120a277dd38eb28e669866842a83a4dc/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=6182121c120a277dd38eb28e669866842a83a4dc", "patch": "@@ -2118,8 +2118,6 @@ initialize_matrix_A (lambda_matrix A, tree chrec, unsigned index, int mult)\n   switch (TREE_CODE (chrec))\n     {\n     case POLYNOMIAL_CHREC:\n-      gcc_assert (TREE_CODE (CHREC_RIGHT (chrec)) == INTEGER_CST);\n-\n       A[index][0] = mult * int_cst_value (CHREC_RIGHT (chrec));\n       return initialize_matrix_A (A, CHREC_LEFT (chrec), index + 1, mult);\n "}, {"sha": "f9c752198e0f3fda7e63c0b610ed63cce982a556", "filename": "gcc/tree-object-size.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6182121c120a277dd38eb28e669866842a83a4dc/gcc%2Ftree-object-size.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6182121c120a277dd38eb28e669866842a83a4dc/gcc%2Ftree-object-size.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-object-size.c?ref=6182121c120a277dd38eb28e669866842a83a4dc", "patch": "@@ -538,7 +538,7 @@ compute_builtin_object_size (tree ptr, int object_size_type,\n \t      tree offset = gimple_assign_rhs2 (def);\n \t      ptr = gimple_assign_rhs1 (def);\n \n-\t      if (cst_and_fits_in_hwi (offset)\n+\t      if (tree_fits_shwi_p (offset)\n \t\t  && compute_builtin_object_size (ptr, object_size_type, psize))\n \t\t{\n \t\t  /* Return zero when the offset is out of bounds.  */"}, {"sha": "2a60386652277bcc037cfe6d0b5d29aa0c59ac8d", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6182121c120a277dd38eb28e669866842a83a4dc/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6182121c120a277dd38eb28e669866842a83a4dc/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6182121c120a277dd38eb28e669866842a83a4dc", "patch": "@@ -1677,7 +1677,7 @@ bool\n cst_and_fits_in_hwi (const_tree x)\n {\n   return (TREE_CODE (x) == INTEGER_CST\n-\t  && TYPE_PRECISION (TREE_TYPE (x)) <= HOST_BITS_PER_WIDE_INT);\n+\t  && (tree_fits_shwi_p (x) || tree_fits_uhwi_p (x)));\n }\n \n /* Build a newly constructed VECTOR_CST node of length LEN.  */"}]}