{"sha": "f70b22c9423c0352d34ed783b92eb98645cb18f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcwYjIyYzk0MjNjMDM1MmQzNGVkNzgzYjkyZWI5ODY0NWNiMThmMQ==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@ispras.ru", "date": "2006-06-08T08:51:13Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2006-06-08T08:51:13Z"}, "message": "re PR target/27863 (ICE in check_cfg, at haifa-sched.c:4615)\n\n2006-06-08  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n\n\tPR target/27863\n\t* haifa-sched.c (unlink_other_notes, unlink_line_notes): Update basic\n\tblock boundaries.\n\nFrom-SVN: r114484", "tree": {"sha": "dd600eb9e487c470b97b977ffe09c4e1cdef4d4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd600eb9e487c470b97b977ffe09c4e1cdef4d4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f70b22c9423c0352d34ed783b92eb98645cb18f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f70b22c9423c0352d34ed783b92eb98645cb18f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f70b22c9423c0352d34ed783b92eb98645cb18f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f70b22c9423c0352d34ed783b92eb98645cb18f1/comments", "author": null, "committer": null, "parents": [{"sha": "960f80d1ee2d882f29886db66a3edf4c824eeaf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/960f80d1ee2d882f29886db66a3edf4c824eeaf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/960f80d1ee2d882f29886db66a3edf4c824eeaf0"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "d840d64438d89faa2676602b6b462e8a39ad6789", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70b22c9423c0352d34ed783b92eb98645cb18f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70b22c9423c0352d34ed783b92eb98645cb18f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f70b22c9423c0352d34ed783b92eb98645cb18f1", "patch": "@@ -1,3 +1,9 @@\n+2006-06-08  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n+\n+\tPR target/27863\n+\t* haifa-sched.c (unlink_other_notes, unlink_line_notes): Update basic\n+\tblock boundaries.\n+\n 2006-06-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/27116"}, {"sha": "8bd65c276da4ece0278e49fc90bfb7c3b5b6757b", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70b22c9423c0352d34ed783b92eb98645cb18f1/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70b22c9423c0352d34ed783b92eb98645cb18f1/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=f70b22c9423c0352d34ed783b92eb98645cb18f1", "patch": "@@ -1243,12 +1243,22 @@ unlink_other_notes (rtx insn, rtx tail)\n   while (insn != tail && NOTE_NOT_BB_P (insn))\n     {\n       rtx next = NEXT_INSN (insn);\n+      basic_block bb = BLOCK_FOR_INSN (insn);\n+\n       /* Delete the note from its current position.  */\n       if (prev)\n \tNEXT_INSN (prev) = next;\n       if (next)\n \tPREV_INSN (next) = prev;\n \n+      /* Basic block can begin with either LABEL or\n+         NOTE_INSN_BASIC_BLOCK.  */\n+      gcc_assert (BB_HEAD (bb) != insn);\n+\n+      /* Check if we are removing last insn in the BB.  */\n+      if (BB_END (bb) == insn)\n+        BB_END (bb) = prev;\n+\n       /* See sched_analyze to see how these are handled.  */\n       if (NOTE_LINE_NUMBER (insn) != NOTE_INSN_EH_REGION_BEG\n \t  && NOTE_LINE_NUMBER (insn) != NOTE_INSN_EH_REGION_END)\n@@ -1279,12 +1289,22 @@ unlink_line_notes (rtx insn, rtx tail)\n \n       if (write_symbols != NO_DEBUG && NOTE_LINE_NUMBER (insn) > 0)\n \t{\n+          basic_block bb = BLOCK_FOR_INSN (insn);\n+\n \t  /* Delete the note from its current position.  */\n \t  if (prev)\n \t    NEXT_INSN (prev) = next;\n \t  if (next)\n \t    PREV_INSN (next) = prev;\n \n+          /* Basic block can begin with either LABEL or\n+             NOTE_INSN_BASIC_BLOCK.  */\n+          gcc_assert (BB_HEAD (bb) != insn);\n+\n+          /* Check if we are removing last insn in the BB.  */\n+          if (BB_END (bb) == insn)\n+            BB_END (bb) = prev;\n+\n \t  /* Record line-number notes so they can be reused.  */\n \t  LINE_NOTE (insn) = insn;\n \t}"}]}