{"sha": "0239db9272f141e7cdc0844eaf9cb7011e71ce24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIzOWRiOTI3MmYxNDFlN2NkYzA4NDRlYWY5Y2I3MDExZTcxY2UyNA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2012-01-03T20:21:50Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2012-01-03T20:21:50Z"}, "message": "scanasm.exp (dg-function-on-line): Always use a special format for all mips targets.\n\n2012-01-03  Andrew Pinski  <apinski@cavium.com>\n\n\t* lib/scanasm.exp (dg-function-on-line): Always use a special format\n\tfor all mips targets.  Also allow an optional .cfi_startproc.\n\nFrom-SVN: r182855", "tree": {"sha": "beca6f0873f9c89c3285477222e6c61c2684b58c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beca6f0873f9c89c3285477222e6c61c2684b58c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0239db9272f141e7cdc0844eaf9cb7011e71ce24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0239db9272f141e7cdc0844eaf9cb7011e71ce24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0239db9272f141e7cdc0844eaf9cb7011e71ce24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0239db9272f141e7cdc0844eaf9cb7011e71ce24/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "094872242f0ecc9dabe46999b6f28b9a6c777581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094872242f0ecc9dabe46999b6f28b9a6c777581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094872242f0ecc9dabe46999b6f28b9a6c777581"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "e7ad9005212df38937f6da2e9268563b8992c3b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0239db9272f141e7cdc0844eaf9cb7011e71ce24/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0239db9272f141e7cdc0844eaf9cb7011e71ce24/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0239db9272f141e7cdc0844eaf9cb7011e71ce24", "patch": "@@ -1,3 +1,8 @@\n+2012-01-03  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* lib/scanasm.exp (dg-function-on-line): Always use a special format\n+\tfor all mips targets.  Also allow an optional .cfi_startproc.\n+\n 2012-01-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gfortran.dg/typebound_operator_8.f03: Use dg-add-options ieee."}, {"sha": "e03d241d93dab8336c12f48a4298bb97424ece95", "filename": "gcc/testsuite/lib/scanasm.exp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0239db9272f141e7cdc0844eaf9cb7011e71ce24/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0239db9272f141e7cdc0844eaf9cb7011e71ce24/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanasm.exp?ref=0239db9272f141e7cdc0844eaf9cb7011e71ce24", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2000, 2002, 2003, 2007, 2008, 2010, 2011\n+# Copyright (C) 2000, 2002, 2003, 2007, 2008, 2010, 2011, 2012\n # Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n@@ -474,8 +474,8 @@ proc dg-function-on-line { args } {\n     if { [istarget hppa*-*-*] } {\n \tset pattern [format {\\t;[^:]+:%d\\n(\\t[^\\t]+\\n)+%s:\\n\\t.PROC} \\\n                      $line $symbol]\n-    } elseif { [istarget mips-sgi-irix*] } {\n-\tset pattern [format {\\t\\.loc [0-9]+ %d 0( [^\\n]*)?\\n\\t\\.set\\t(no)?mips16\\n\\t\\.ent\\t%s\\n\\t\\.type\\t%s, @function\\n%s:\\n} \\\n+    } elseif { [istarget mips*-*-*] } {\n+\tset pattern [format {\\t\\.loc [0-9]+ %d 0( [^\\n]*)?\\n(\\t.cfi_startproc[^\\t]*\\n)*\\t\\.set\\t(no)?mips16\\n\\t\\.ent\\t%s\\n\\t\\.type\\t%s, @function\\n%s:\\n} \\\n \t\t     $line $symbol $symbol $symbol]\n     } else {\n \tset pattern [format {%s:[^\\t]*(\\t.(fnstart|frame|mask|file)[^\\t]*)*\\t[^:]+:%d\\n} \\"}]}