{"sha": "b2a71af6e2818b867ad486efd9bbadb2b57570e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJhNzFhZjZlMjgxOGI4NjdhZDQ4NmVmZDliYmFkYjJiNTc1NzBlOQ==", "commit": {"author": {"name": "Xianmiao Qu", "email": "xianmiao_qu@c-sky.com", "date": "2018-11-13T09:12:36Z"}, "committer": {"name": "Xianmiao Qu", "email": "xianmiao@gcc.gnu.org", "date": "2018-11-13T09:12:36Z"}, "message": "linux-unwind.h (_sig_ucontext_t): Remove.\n\n2018-11-13  Xianmiao Qu  <xianmiao_qu@c-sky.com>\n\n\tlibgcc/\n\t* config/csky/linux-unwind.h (_sig_ucontext_t): Remove.\n\t(csky_fallback_frame_state): Modify the check of the \n\tinstructions to adapt to changes in the kernel\n\nFrom-SVN: r266060", "tree": {"sha": "f4beb7be8b49a974b7fd5c653bd036c10d0d1e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4beb7be8b49a974b7fd5c653bd036c10d0d1e65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2a71af6e2818b867ad486efd9bbadb2b57570e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a71af6e2818b867ad486efd9bbadb2b57570e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a71af6e2818b867ad486efd9bbadb2b57570e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a71af6e2818b867ad486efd9bbadb2b57570e9/comments", "author": null, "committer": null, "parents": [{"sha": "77ece7f52e892587455b17e91e111d3316019b05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77ece7f52e892587455b17e91e111d3316019b05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77ece7f52e892587455b17e91e111d3316019b05"}], "stats": {"total": 111, "additions": 58, "deletions": 53}, "files": [{"sha": "5232118614c334a776fb7918559d8519c722ef56", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a71af6e2818b867ad486efd9bbadb2b57570e9/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a71af6e2818b867ad486efd9bbadb2b57570e9/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=b2a71af6e2818b867ad486efd9bbadb2b57570e9", "patch": "@@ -1,3 +1,9 @@\n+2018-11-13  Xianmiao Qu  <xianmiao_qu@c-sky.com>\n+\n+\t* config/csky/linux-unwind.h (_sig_ucontext_t): Remove.\n+\t(csky_fallback_frame_state): Modify the check of the \n+\tinstructions to adapt to changes in the kernel\n+\n 2018-11-09  Stafford Horne  <shorne@gmail.com>\n \t    Richard Henderson  <rth@twiddle.net>\n "}, {"sha": "25e4e6c8002cf899ffc8f21e63e9f8da462a41f6", "filename": "libgcc/config/csky/linux-unwind.h", "status": "modified", "additions": 52, "deletions": 53, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a71af6e2818b867ad486efd9bbadb2b57570e9/libgcc%2Fconfig%2Fcsky%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a71af6e2818b867ad486efd9bbadb2b57570e9/libgcc%2Fconfig%2Fcsky%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fcsky%2Flinux-unwind.h?ref=b2a71af6e2818b867ad486efd9bbadb2b57570e9", "patch": "@@ -25,22 +25,33 @@\n \n #ifndef inhibit_libc\n \n-/* Do code reading to identify a signal frame, and set the frame\n-   state data appropriately.  See unwind-dw2.c for the structs.  */\n+/*\n+ * Do code reading to identify a signal frame, and set the frame state data\n+ * appropriately.  See unwind-dw2.c for the structs.\n+ */\n \n #include <signal.h>\n #include <asm/unistd.h>\n \n-/* The third parameter to the signal handler points to something with\n-   this structure defined in asm/ucontext.h, but the name clashes with\n-   struct ucontext from sys/ucontext.h so this private copy is used.  */\n-typedef struct _sig_ucontext {\n-  unsigned long         uc_flags;\n-  struct _sig_ucontext  *uc_link;\n-  stack_t               uc_stack;\n-  struct sigcontext     uc_mcontext;\n-  sigset_t              uc_sigmask;\n-} _sig_ucontext_t;\n+#define TRAP0_V1 0x0008\n+#define MOVI_R1_119_V1 (0x6000 + (119 << 4) + 1)\n+#define MOVI_R1_127_V1 (0x6000 + (127 << 4) + 1)\n+#define ADDI_R1_32_V1 (0x2000 + (31 << 4) + 1)\n+#define ADDI_R1_14_V1 (0x2000 + (13 << 4) + 1)\n+#define ADDI_R1_12_V1 (0x2000 + (11 << 4) + 1)\n+\n+#define TRAP0_V2_PART0 0xc000\n+#define TRAP0_V2_PART1 0x2020\n+#define MOVI_R7_119_V2_PART0 0xea07\n+#define MOVI_R7_119_V2_PART1 119\n+#define MOVI_R7_173_V2_PART0 0xea07\n+#define MOVI_R7_173_V2_PART1 173\n+#define MOVI_R7_139_V2_PART0 0xea07\n+#define MOVI_R7_139_V2_PART1 139\n+\n+#define sc_pt_regs(x) (sc->sc_##x)\n+#define sc_pt_regs_lr (sc->sc_r15)\n+#define sc_pt_regs_tls(x) (sc->sc_exregs[15])\n \n #define MD_FALLBACK_FRAME_STATE_FOR csky_fallback_frame_state\n \n@@ -54,78 +65,66 @@ csky_fallback_frame_state (struct _Unwind_Context *context,\n   int i;\n \n   /* movi r7, __NR_rt_sigreturn; trap 0  */\n-  if ((*(pc+0) == 0xea07) && (*(pc+1) == 119)\n-      && (*(pc+2) == 0xc000) &&  (*(pc+3) == 0x2020))\n-  {\n-    struct sigframe\n+  if ((*(pc + 0) == MOVI_R7_139_V2_PART0)\n+      && (*(pc + 1) == MOVI_R7_139_V2_PART1) && (*(pc + 2) == TRAP0_V2_PART0)\n+      && (*(pc + 3) == TRAP0_V2_PART1))\n     {\n-      int sig;\n-      int code;\n-      struct sigcontext *psc;\n-      unsigned long extramask[2]; /* _NSIG_WORDS */\n-      struct sigcontext sc;\n-    } *_rt = context->cfa;\n-    sc = _rt->psc; // &(_rt->sc);\n-  }\n-  /* movi r7, __NR_rt_sigreturn; trap 0  */\n-  else if ((*(pc+0) == 0xea07) && (*(pc+1) == 173)\n-\t   && (*(pc+2) == 0xc000) &&  (*(pc+3) == 0x2020))\n-  {\n-    struct rt_sigframe\n-    {\n-      int sig;\n-      struct siginfo *pinfo;\n-      void* puc;\n-      siginfo_t info;\n-      struct ucontext uc;\n-    } *_rt = context->cfa;\n-    sc = &(_rt->uc.uc_mcontext);\n-  }\n+      struct rt_sigframe\n+      {\n+\tint sig;\n+\tstruct siginfo *pinfo;\n+\tvoid *puc;\n+\tsiginfo_t info;\n+\tucontext_t uc;\n+      } *_rt = context->cfa;\n+      sc = &(_rt->uc.uc_mcontext);\n+    }\n   else\n     return _URC_END_OF_STACK;\n \n-  new_cfa = (_Unwind_Ptr) sc->sc_usp;\n+  new_cfa = (_Unwind_Ptr) sc_pt_regs (usp);\n   fs->regs.cfa_how = CFA_REG_OFFSET;\n   fs->regs.cfa_reg = STACK_POINTER_REGNUM;\n   fs->regs.cfa_offset = new_cfa - (_Unwind_Ptr) context->cfa;\n \n   fs->regs.reg[0].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[0].loc.offset = (_Unwind_Ptr)&(sc->sc_a0) - new_cfa;\n+  fs->regs.reg[0].loc.offset = (_Unwind_Ptr) & sc_pt_regs (a0) - new_cfa;\n \n   fs->regs.reg[1].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[1].loc.offset = (_Unwind_Ptr)&(sc->sc_a1) - new_cfa;\n+  fs->regs.reg[1].loc.offset = (_Unwind_Ptr) & sc_pt_regs (a1) - new_cfa;\n \n   fs->regs.reg[2].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[2].loc.offset = (_Unwind_Ptr)&(sc->sc_a2) - new_cfa;\n+  fs->regs.reg[2].loc.offset = (_Unwind_Ptr) & sc_pt_regs (a2) - new_cfa;\n \n   fs->regs.reg[3].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[3].loc.offset = (_Unwind_Ptr)&(sc->sc_a3) - new_cfa;\n+  fs->regs.reg[3].loc.offset = (_Unwind_Ptr) & sc_pt_regs (a3) - new_cfa;\n \n   for (i = 4; i < 14; i++)\n     {\n       fs->regs.reg[i].how = REG_SAVED_OFFSET;\n-      fs->regs.reg[i].loc.offset = ((_Unwind_Ptr)&(sc->sc_regs[i - 4])\n-\t\t\t\t    - new_cfa);\n+      fs->regs.reg[i].loc.offset =\n+\t(_Unwind_Ptr) & sc_pt_regs (regs[i - 4]) - new_cfa;\n     }\n \n-  for (i = 16; i < 32; i++)\n+  for (i = 16; i < 31; i++)\n     {\n       fs->regs.reg[i].how = REG_SAVED_OFFSET;\n-      fs->regs.reg[i].loc.offset = ((_Unwind_Ptr)&(sc->sc_exregs[i - 16])\n-\t\t\t\t    - new_cfa);\n+      fs->regs.reg[i].loc.offset =\n+\t(_Unwind_Ptr) & sc_pt_regs (exregs[i - 16]) - new_cfa;\n     }\n \n+  fs->regs.reg[31].loc.offset =\n+    (_Unwind_Ptr) & sc_pt_regs_tls (tls) - new_cfa;\n   /* FIXME : hi lo ? */\n   fs->regs.reg[15].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[15].loc.offset = (_Unwind_Ptr)&(sc->sc_r15) - new_cfa;\n+  fs->regs.reg[15].loc.offset = (_Unwind_Ptr) & sc_pt_regs_lr - new_cfa;\n \n-  fs->regs.reg[56].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[56].loc.offset = (_Unwind_Ptr)&(sc->sc_pc) - new_cfa;\n-  fs->retaddr_column = 56;\n+  fs->regs.reg[32].how = REG_SAVED_OFFSET;\n+  fs->regs.reg[32].loc.offset = (_Unwind_Ptr) & sc_pt_regs (pc) - new_cfa;\n+  fs->retaddr_column = 32;\n   fs->signal_frame = 1;\n \n   return _URC_NO_REASON;\n }\n \n-\n #endif"}]}