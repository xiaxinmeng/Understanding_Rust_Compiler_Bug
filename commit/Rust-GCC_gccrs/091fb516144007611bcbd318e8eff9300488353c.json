{"sha": "091fb516144007611bcbd318e8eff9300488353c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkxZmI1MTYxNDQwMDc2MTFiY2JkMzE4ZThlZmY5MzAwNDg4MzUzYw==", "commit": {"author": {"name": "David S. Miller", "email": "davem@redhat.com", "date": "2002-05-05T07:49:23Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2002-05-05T07:49:23Z"}, "message": "recog.c (store_data_bypass_p): Handle out_insn being a PARALLEL of SETs.\n\n2002-05-04  David S. Miller  <davem@redhat.com>\n\n\t* recog.c (store_data_bypass_p): Handle out_insn being a PARALLEL\n\tof SETs.\n\nFrom-SVN: r53177", "tree": {"sha": "f6824af2b777762acf22ea8f02eb43aeea4dfccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6824af2b777762acf22ea8f02eb43aeea4dfccb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/091fb516144007611bcbd318e8eff9300488353c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091fb516144007611bcbd318e8eff9300488353c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/091fb516144007611bcbd318e8eff9300488353c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091fb516144007611bcbd318e8eff9300488353c/comments", "author": null, "committer": null, "parents": [{"sha": "7750f790618de6377fd65a06b23dfd588d8166d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7750f790618de6377fd65a06b23dfd588d8166d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7750f790618de6377fd65a06b23dfd588d8166d7"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "a32642c6beeddd1927150de394695fde395b90b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091fb516144007611bcbd318e8eff9300488353c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091fb516144007611bcbd318e8eff9300488353c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=091fb516144007611bcbd318e8eff9300488353c", "patch": "@@ -1,3 +1,8 @@\n+2002-05-04  David S. Miller  <davem@redhat.com>\n+\n+\t* recog.c (store_data_bypass_p): Handle out_insn being a PARALLEL\n+\tof SETs.\n+\n 2002-05-05  Tim Josling  <tej@melbpc.org.au>\n \n \t* treelang; New directory for new sample language treelang. "}, {"sha": "2fd1126044aeca55e86698ce1e8461b4703c8694", "filename": "gcc/recog.c", "status": "modified", "additions": 29, "deletions": 8, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091fb516144007611bcbd318e8eff9300488353c/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091fb516144007611bcbd318e8eff9300488353c/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=091fb516144007611bcbd318e8eff9300488353c", "patch": "@@ -3279,28 +3279,49 @@ peephole2_optimize (dump_file)\n /* Common predicates for use with define_bypass.  */\n \n /* True if the dependency between OUT_INSN and IN_INSN is on the store\n-   data not the address operand(s) of the store.  Both OUT_INSN and IN_INSN\n-   must be single_set.  */\n+   data not the address operand(s) of the store.  IN_INSN must be\n+   single_set.  OUT_INSN must be either a single_set or a PARALLEL with\n+   SETs inside.  */\n \n int\n store_data_bypass_p (out_insn, in_insn)\n      rtx out_insn, in_insn;\n {\n   rtx out_set, in_set;\n \n-  out_set = single_set (out_insn);\n-  if (! out_set)\n-    abort ();\n-\n   in_set = single_set (in_insn);\n   if (! in_set)\n     abort ();\n \n   if (GET_CODE (SET_DEST (in_set)) != MEM)\n     return false;\n \n-  if (reg_mentioned_p (SET_DEST (out_set), SET_DEST (in_set)))\n-    return false;\n+  out_set = single_set (out_insn);\n+  if (out_set)\n+    {\n+      if (reg_mentioned_p (SET_DEST (out_set), SET_DEST (in_set)))\n+\treturn false;\n+    }\n+  else\n+    {\n+      rtx out_pat;\n+      int i;\n+\n+      out_pat = PATTERN (out_insn);\n+      if (GET_CODE (out_pat) != PARALLEL)\n+\tabort ();\n+\n+      for (i = 0; i < XVECLEN (out_pat, 0); i++)\n+\t{\n+\t  rtx exp = XVECEXP (out_pat, 0, i);\n+\n+\t  if (GET_CODE (exp) != SET)\n+\t    abort ();\n+\n+\t  if (reg_mentioned_p (SET_DEST (exp), SET_DEST (in_set)))\n+\t    return false;\n+\t}\n+    }\n \n   return true;\n }"}]}