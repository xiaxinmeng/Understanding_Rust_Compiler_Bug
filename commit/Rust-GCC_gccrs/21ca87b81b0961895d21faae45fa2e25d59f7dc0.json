{"sha": "21ca87b81b0961895d21faae45fa2e25d59f7dc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFjYTg3YjgxYjA5NjE4OTVkMjFmYWFlNDVmYTJlMjVkNTlmN2RjMA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@wrs.com", "date": "1998-01-28T19:21:54Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-28T19:21:54Z"}, "message": "rtlanal.c (dead_or_set_regno_p): Ignore REG_DEAD notes after reload completes.\n\n        * rtlanal.c (dead_or_set_regno_p): Ignore REG_DEAD notes after\n        reload completes.\n        * genattrtab.c (reload_completed): Define.\n        * m32r.md, mips.md, mn10200.md, mn10300.md, pyr.md: Remove obsolete\n        comments.\n\nFrom-SVN: r17542", "tree": {"sha": "b2042a4ce6e394e73a57cc2e67809b45c06b8701", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2042a4ce6e394e73a57cc2e67809b45c06b8701"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21ca87b81b0961895d21faae45fa2e25d59f7dc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21ca87b81b0961895d21faae45fa2e25d59f7dc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21ca87b81b0961895d21faae45fa2e25d59f7dc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21ca87b81b0961895d21faae45fa2e25d59f7dc0/comments", "author": null, "committer": null, "parents": [{"sha": "d2c92f5a43a4541115e0b8eadf024ed7004e1386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2c92f5a43a4541115e0b8eadf024ed7004e1386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2c92f5a43a4541115e0b8eadf024ed7004e1386"}], "stats": {"total": 89, "additions": 35, "deletions": 54}, "files": [{"sha": "141302c07dfec7f6c7d9aa73fd6359a04e232b0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21ca87b81b0961895d21faae45fa2e25d59f7dc0", "patch": "@@ -1,3 +1,12 @@\n+1998-01-28  Mike Stump  <mrs@wrs.com>\n+\n+\t* rtlanal.c (dead_or_set_regno_p): Ignore REG_DEAD notes after\n+\treload completes.\n+\t* genattrtab.c (reload_completed): Define.\n+\n+\t* m32r.md, mips.md, mn10200.md, mn10300.md, pyr.md: Remove obsolete\n+\tcomments.\n+\n Wed Jan 28 20:11:06 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* reload.c (push_reload): If WORD_REGISTER_OPERATIONS, reload the"}, {"sha": "4c8b2e54ffbd46e7c5c69b551b490130a3784002", "filename": "gcc/config/m32r/m32r.md", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Fconfig%2Fm32r%2Fm32r.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Fconfig%2Fm32r%2Fm32r.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.md?ref=21ca87b81b0961895d21faae45fa2e25d59f7dc0", "patch": "@@ -379,8 +379,6 @@\n \t{\n \t  /* Try to use auto-inc addressing if we can.  */\n \t  if (GET_CODE (XEXP (operands[1], 0)) == REG\n-\t    /* ??? This is WRONG, dead_or_set_p cannot be used after reload\n-\t       because the REG_DEAD notes are not maintained after reload.  */\n \t      && dead_or_set_p (insn, XEXP (operands[1], 0)))\n \t    {\n \t      operands[1] = XEXP (operands[1], 0);\n@@ -391,8 +389,6 @@\n     case 3 :\n       /* Try to use auto-inc addressing if we can.  */\n       if (GET_CODE (XEXP (operands[0], 0)) == REG\n-\t  /* ??? This is WRONG, dead_or_set_p cannot be used after reload\n-\t     because the REG_DEAD notes are not maintained after reload.  */\n \t  && dead_or_set_p (insn, XEXP (operands[0], 0)))\n \t{\n \t  operands[0] = XEXP (operands[0], 0);\n@@ -534,8 +530,6 @@\n \t{\n \t  /* Try to use auto-inc addressing if we can.  */\n \t  if (GET_CODE (XEXP (operands[1], 0)) == REG\n-\t      /* ??? This is WRONG, dead_or_set_p cannot be used after reload\n-\t\t because the REG_DEAD notes are not maintained after reload.  */\n \t      && dead_or_set_p (insn, XEXP (operands[1], 0)))\n \t    {\n \t      operands[1] = XEXP (operands[1], 0);\n@@ -546,8 +540,6 @@\n     case 3 :\n       /* Try to use auto-inc addressing if we can.  */\n       if (GET_CODE (XEXP (operands[0], 0)) == REG\n-\t  /* ??? This is WRONG, dead_or_set_p cannot be used after reload\n-\t     because the REG_DEAD notes are not maintained after reload.  */\n \t  && dead_or_set_p (insn, XEXP (operands[0], 0)))\n \t{\n \t  operands[0] = XEXP (operands[0], 0);\n@@ -1471,8 +1463,6 @@\n   [(set (mem:SI (plus:SI (match_operand:SI 0 \"register_operand\" \"r\")\n \t\t\t (const_int 4)))\n         (match_operand:SI 1 \"register_operand\" \"r\"))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (insn, operands[0])\"\n   \"st %1,@+%0\"\n   [(set_attr \"type\" \"store\")"}, {"sha": "f90d75b50fdf87fad0633920f40b9c44a232c1e8", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=21ca87b81b0961895d21faae45fa2e25d59f7dc0", "patch": "@@ -9771,8 +9771,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"TARGET_MIPS16\n    && GET_CODE (operands[0]) == REG\n    && REGNO (operands[0]) == 24\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n    && dead_or_set_p (insn, operands[0])\n    && GET_CODE (operands[1]) == REG\n    && M16_REG_P (REGNO (operands[1]))\"\n@@ -9798,8 +9796,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"TARGET_MIPS16 && TARGET_64BIT\n    && GET_CODE (operands[0]) == REG\n    && REGNO (operands[0]) == 24\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n    && dead_or_set_p (insn, operands[0])\n    && GET_CODE (operands[1]) == REG\n    && M16_REG_P (REGNO (operands[1]))\"\n@@ -9831,8 +9827,6 @@ move\\\\t%0,%z4\\\\n\\\\\n    && REGNO (operands[1]) == 24\n    && GET_CODE (operands[0]) == REG\n    && M16_REG_P (REGNO (operands[0]))\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n    && dead_or_set_p (insn, operands[0])\"\n   \"*\n {\n@@ -9858,8 +9852,6 @@ move\\\\t%0,%z4\\\\n\\\\\n    && REGNO (operands[1]) == 24\n    && GET_CODE (operands[0]) == REG\n    && M16_REG_P (REGNO (operands[0]))\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n    && dead_or_set_p (insn, operands[0])\"\n   \"*\n {"}, {"sha": "90f7f8087534d99c6533b5d23742328dfec23749", "filename": "gcc/config/mn10200/mn10200.md", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Fconfig%2Fmn10200%2Fmn10200.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Fconfig%2Fmn10200%2Fmn10200.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.md?ref=21ca87b81b0961895d21faae45fa2e25d59f7dc0", "patch": "@@ -1888,8 +1888,6 @@\n    (set (pc) (if_then_else (ge (cc0) (const_int 0))\n \t\t\t   (match_operand 1 \"\" \"\")\n \t\t\t   (pc)))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcc %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1899,8 +1897,6 @@\n    (set (pc) (if_then_else (lt (cc0) (const_int 0))\n \t\t\t   (match_operand 1 \"\" \"\")\n \t\t\t   (pc)))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcs %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1910,8 +1906,6 @@\n    (set (pc) (if_then_else (ge (cc0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (match_operand 1 \"\" \"\")))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcs %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1921,8 +1915,6 @@\n    (set (pc) (if_then_else (lt (cc0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (match_operand 1 \"\" \"\")))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcc %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1932,8 +1924,6 @@\n    (set (pc) (if_then_else (ge (cc0) (const_int 0))\n \t\t\t   (match_operand 1 \"\" \"\")\n \t\t\t   (pc)))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bccx %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1943,8 +1933,6 @@\n    (set (pc) (if_then_else (lt (cc0) (const_int 0))\n \t\t\t   (match_operand 1 \"\" \"\")\n \t\t\t   (pc)))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcsx %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1954,8 +1942,6 @@\n    (set (pc) (if_then_else (ge (cc0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (match_operand 1 \"\" \"\")))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcsx %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1965,8 +1951,6 @@\n    (set (pc) (if_then_else (lt (cc0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (match_operand 1 \"\" \"\")))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bccx %1\"\n   [(set_attr \"cc\" \"clobber\")])"}, {"sha": "726418fba68dd8ed75598a674ca6623f494beed3", "filename": "gcc/config/mn10300/mn10300.md", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.md?ref=21ca87b81b0961895d21faae45fa2e25d59f7dc0", "patch": "@@ -1397,8 +1397,6 @@\n    (set (pc) (if_then_else (ge (cc0) (const_int 0))\n \t\t\t   (match_operand 1 \"\" \"\")\n \t\t\t   (pc)))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcc %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1408,8 +1406,6 @@\n    (set (pc) (if_then_else (lt (cc0) (const_int 0))\n \t\t\t   (match_operand 1 \"\" \"\")\n \t\t\t   (pc)))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcs %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1419,8 +1415,6 @@\n    (set (pc) (if_then_else (ge (cc0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (match_operand 1 \"\" \"\")))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcs %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1430,8 +1424,6 @@\n    (set (pc) (if_then_else (lt (cc0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (match_operand 1 \"\" \"\")))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcc %1\"\n   [(set_attr \"cc\" \"clobber\")])"}, {"sha": "97d91014595fbf34c4dd24ad33f67d555e7092f0", "filename": "gcc/config/pyr/pyr.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Fconfig%2Fpyr%2Fpyr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Fconfig%2Fpyr%2Fpyr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpyr%2Fpyr.md?ref=21ca87b81b0961895d21faae45fa2e25d59f7dc0", "patch": "@@ -1224,8 +1224,6 @@\n \t(sign_extend:SI (match_dup 1)))\n    (set (cc0)\n \t(match_dup 2))]\n-;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n-;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (insn, operands[2])\"\n   \"*\n   cc_status.flags |= CC_NO_OVERFLOW;"}, {"sha": "f71cd4d8447aa1b345a5fa066543ff4ca5735769", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=21ca87b81b0961895d21faae45fa2e25d59f7dc0", "patch": "@@ -348,6 +348,11 @@ static rtx true_rtx, false_rtx;\n \n static char *alternative_name;\n \n+/* Indicate that REG_DEAD notes are valid if dead_or_set_p is ever\n+   called.  */\n+\n+int reload_completed = 0;\n+\n /* Simplify an expression.  Only call the routine if there is something to\n    simplify.  */\n #define SIMPLIFY_TEST_EXP(EXP,INSN_CODE,INSN_INDEX)\t\\"}, {"sha": "efb70ea61305112fa6696955fd9862274e226a03", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 21, "deletions": 10, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ca87b81b0961895d21faae45fa2e25d59f7dc0/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=21ca87b81b0961895d21faae45fa2e25d59f7dc0", "patch": "@@ -1157,19 +1157,30 @@ dead_or_set_regno_p (insn, test_regno)\n   int regno, endregno;\n   rtx link;\n \n-  /* See if there is a death note for something that includes TEST_REGNO.  */\n-  for (link = REG_NOTES (insn); link; link = XEXP (link, 1))\n+  /* REG_READ notes are not normally maintained after reload, so we\n+     ignore them if the are invalid.  */\n+  if (! reload_completed\n+#ifdef PRESERVE_DEATH_INFO_REGNO_P\n+      || PRESERVE_DEATH_INFO_REGNO_P (test_regno)\n+#endif\n+      )\n     {\n-      if (REG_NOTE_KIND (link) != REG_DEAD || GET_CODE (XEXP (link, 0)) != REG)\n-\tcontinue;\n+      /* See if there is a death note for something that includes\n+         TEST_REGNO.  */\n+      for (link = REG_NOTES (insn); link; link = XEXP (link, 1))\n+\t{\n+\t  if (REG_NOTE_KIND (link) != REG_DEAD\n+\t      || GET_CODE (XEXP (link, 0)) != REG)\n+\t    continue;\n \n-      regno = REGNO (XEXP (link, 0));\n-      endregno = (regno >= FIRST_PSEUDO_REGISTER ? regno + 1\n-\t\t  : regno + HARD_REGNO_NREGS (regno,\n-\t\t\t\t\t      GET_MODE (XEXP (link, 0))));\n+\t  regno = REGNO (XEXP (link, 0));\n+\t  endregno = (regno >= FIRST_PSEUDO_REGISTER ? regno + 1\n+\t\t      : regno + HARD_REGNO_NREGS (regno,\n+\t\t\t\t\t\t  GET_MODE (XEXP (link, 0))));\n \n-      if (test_regno >= regno && test_regno < endregno)\n-\treturn 1;\n+\t  if (test_regno >= regno && test_regno < endregno)\n+\t    return 1;\n+\t}\n     }\n \n   if (GET_CODE (insn) == CALL_INSN"}]}