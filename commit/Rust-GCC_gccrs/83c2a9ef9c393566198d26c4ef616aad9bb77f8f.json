{"sha": "83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNjMmE5ZWY5YzM5MzU2NjE5OGQyNmM0ZWY2MTZhYWQ5YmI3N2Y4Zg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-12-02T19:40:27Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-12-02T19:40:27Z"}, "message": "freebsd.h (LINK_SPEC): Cut long comment.\n\n\t* config/i386/freebsd.h (LINK_SPEC): Cut long comment.\n\t* config/i386/linux.h (LINK_SPEC): Cut long comment.\n\t* config/i386/netware.h (LINK_SPEC): Remove %{V}.\n\t* config/m32r/linux.h (LINK_SPEC): Cut long comment.\n\t* config/m68k/linux.h (LINK_SPEC): Cut long comment.\n\t* config/sparc/linux.h (LINK_SPEC): Cut long comment.\n\t(ASM_SPEC): Remove %{V} and %{v:%{!V:-V}}.\n\t* config/sparc/linux64.h (LINK_SPEC): Cut long comment.\n\t(ASM_SPEC): Remove %{V} and %{v:%{!V:-V}}.\n\t* config/sparc/netbsd-elf.h (ASM_SPEC): Remove %{V} and\n\t%{v:%{!V:-V}}.\n\nFrom-SVN: r167386", "tree": {"sha": "fef78f38c91d8e98ccaaadc379ad78cdd71763d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fef78f38c91d8e98ccaaadc379ad78cdd71763d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3028a95cd6090610044464270181aeb6a72ab154", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3028a95cd6090610044464270181aeb6a72ab154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3028a95cd6090610044464270181aeb6a72ab154"}], "stats": {"total": 73, "additions": 24, "deletions": 49}, "files": [{"sha": "ee54726aa0bbb85712d0a746a9bde23a74639ade", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "patch": "@@ -1,3 +1,17 @@\n+2010-12-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/i386/freebsd.h (LINK_SPEC): Cut long comment.\n+\t* config/i386/linux.h (LINK_SPEC): Cut long comment.\n+\t* config/i386/netware.h (LINK_SPEC): Remove %{V}.\n+\t* config/m32r/linux.h (LINK_SPEC): Cut long comment.\n+\t* config/m68k/linux.h (LINK_SPEC): Cut long comment.\n+\t* config/sparc/linux.h (LINK_SPEC): Cut long comment.\n+\t(ASM_SPEC): Remove %{V} and %{v:%{!V:-V}}.\n+\t* config/sparc/linux64.h (LINK_SPEC): Cut long comment.\n+\t(ASM_SPEC): Remove %{V} and %{v:%{!V:-V}}.\n+\t* config/sparc/netbsd-elf.h (ASM_SPEC): Remove %{V} and\n+\t%{v:%{!V:-V}}.\n+\n 2010-12-02  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.c (trad_capable_cpp, default_compilers): Don't handle"}, {"sha": "f23a4249e28fec7d131f9827860af7a5457d3d5d", "filename": "gcc/config/i386/freebsd.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd.h?ref=83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "patch": "@@ -88,13 +88,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Provide a LINK_SPEC appropriate for FreeBSD.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n-   combinations of options at link-time. We like to support here for\n-   as many of the other GNU linker options as possible. But I don't\n-   have the time to search for those flags. I am sure how to add\n-   support for -soname shared_object_name. H.J.\n-\n-   I took out %{v:%{!V:-V}}. It is too much :-(. They can use\n-   -Wl,-V.\n+   combinations of options at link-time.\n \n    When the -shared link option is used a final link is not being\n    done.  */"}, {"sha": "a1eca565fcf4869620776f233ac2c0a2a25cb6af", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "patch": "@@ -85,13 +85,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Provide a LINK_SPEC appropriate for Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n-   combinations of options at link-time. We like to support here for\n-   as many of the other GNU linker options as possible. But I don't\n-   have the time to search for those flags. I am sure how to add\n-   support for -soname shared_object_name. H.J.\n-\n-   I took out %{v:%{!V:-V}}. It is too much :-(. They can use\n-   -Wl,-V.\n+   combinations of options at link-time.\n \n    When the -shared link option is used a final link is not being\n    done.  */"}, {"sha": "6eb949e619a8a068aaa72321d16ae7aadcaedcd4", "filename": "gcc/config/i386/netware.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fi386%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fi386%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetware.h?ref=83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "patch": "@@ -31,7 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Kinda useless, but what the hell */\n #undef\tLINK_SPEC\n-#define LINK_SPEC \"%{h*} %{V} %{v:%{!V:-V}} \\\n+#define LINK_SPEC \"%{h*} %{v:-V} \\\n \t\t   %{b} \\\n \t\t   %{Qy:} %{!Qn:-Qy}\"\n "}, {"sha": "cb94da4893f0c4db4a1f40552a45f07be9b9b6b1", "filename": "gcc/config/m32r/linux.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fm32r%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fm32r%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Flinux.h?ref=83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "patch": "@@ -41,13 +41,7 @@\n /* Provide a LINK_SPEC appropriate for Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n-   combinations of options at link-time. We like to support here for\n-   as many of the other GNU linker options as possible. But I don't\n-   have the time to search for those flags. I am sure how to add\n-   support for -soname shared_object_name. H.J.\n-\n-   I took out %{v:%{!V:-V}}. It is too much :-(. They can use\n-   -Wl,-V.\n+   combinations of options at link-time.\n \n    When the -shared link option is used a final link is not being\n    done.  */"}, {"sha": "6e6ad0c790149786007dc282b40aa2837b47dfc0", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "patch": "@@ -71,13 +71,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Provide a LINK_SPEC appropriate for GNU/Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n-   combinations of options at link-time.  We like to support here for\n-   as many of the other GNU linker options as possible.  But I don't\n-   have the time to search for those flags.  I am sure how to add\n-   support for -soname shared_object_name. H.J.\n-\n-   I took out %{v:%{!V:-V}}.  It is too much :-(.  They can use\n-   -Wl,-V.\n+   combinations of options at link-time.\n \n    When the -shared link option is used a final link is not being\n    done.  */"}, {"sha": "97ce5ee0fc18bf461a1df1c80464d1641a47765c", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "patch": "@@ -70,13 +70,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Provide a LINK_SPEC appropriate for GNU/Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n-   combinations of options at link-time. We like to support here for\n-   as many of the other GNU linker options as possible. But I don't\n-   have the time to search for those flags. I am sure how to add\n-   support for -soname shared_object_name. H.J.\n-\n-   I took out %{v:%{!V:-V}}. It is too much :-(. They can use\n-   -Wl,-V.\n+   combinations of options at link-time.\n \n    When the -shared link option is used a final link is not being\n    done.  */\n@@ -99,8 +93,6 @@ along with GCC; see the file COPYING3.  If not see\n    It's safe to pass -s always, even if -g is not used.  */\n #undef ASM_SPEC\n #define ASM_SPEC \"\\\n-%{V} \\\n-%{v:%{!V:-V}} \\\n %{!Qn:-Qy} \\\n %{n} \\\n %{T} \\"}, {"sha": "d50094bb6edf21d840cf034de46f8651227882d0", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "patch": "@@ -96,13 +96,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Provide a LINK_SPEC appropriate for GNU/Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n-   combinations of options at link-time. We like to support here for\n-   as many of the other GNU linker options as possible. But I don't\n-   have the time to search for those flags. I am sure how to add\n-   support for -soname shared_object_name. H.J.\n-\n-   I took out %{v:%{!V:-V}}. It is too much :-(. They can use\n-   -Wl,-V.\n+   combinations of options at link-time.\n \n    When the -shared link option is used a final link is not being\n    done.  */\n@@ -228,8 +222,6 @@ along with GCC; see the file COPYING3.  If not see\n    It's safe to pass -s always, even if -g is not used.  */\n #undef ASM_SPEC\n #define ASM_SPEC \"\\\n-%{V} \\\n-%{v:%{!V:-V}} \\\n %{!Qn:-Qy} \\\n %{n} \\\n %{T} \\"}, {"sha": "90f48d0a65aeed9b8b1189997f3bfde251833a86", "filename": "gcc/config/sparc/netbsd-elf.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c2a9ef9c393566198d26c4ef616aad9bb77f8f/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h?ref=83c2a9ef9c393566198d26c4ef616aad9bb77f8f", "patch": "@@ -1,6 +1,7 @@\n /* Definitions of target machine for GCC, for ELF on NetBSD/sparc\n    and NetBSD/sparc64.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2005, 2007, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Matthew Green (mrg@eterna.com.au).\n \n This file is part of GCC.\n@@ -71,7 +72,7 @@ along with GCC; see the file COPYING3.  If not see\n #define USER_LABEL_PREFIX \"\"\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"%{fpic|fPIC|fpie|fPIE:-K PIC} %{V} %{v:%{!V:-V}} \\\n+#define ASM_SPEC \"%{fpic|fPIC|fpie|fPIE:-K PIC} \\\n %{mlittle-endian:-EL} \\\n %(asm_cpu) %(asm_arch) %(asm_relax)\"\n "}]}