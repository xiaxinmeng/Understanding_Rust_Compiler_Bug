{"sha": "b7fbf563809308a66911d0300b42c5522fdd835f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdmYmY1NjM4MDkzMDhhNjY5MTFkMDMwMGI0MmM1NTIyZmRkODM1Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-08-23T14:45:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-08-23T14:45:30Z"}, "message": "i386.opt: Remove unneeded Init(0) initializations.\n\n\t* config/i386/i386.opt: Remove unneeded Init(0) initializations.\n\t(mstackrealign): Do not init to -1.\n\t* config/i386/i386.c (ix86_option_override_internal):\n\tCheck opts_set, not opts when setting default value of\n\topts->x_ix86_force_align_arg_pointer.\n\nFrom-SVN: r251311", "tree": {"sha": "8e99548bfd2cd5df7f6dfab2c777affae83f1316", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e99548bfd2cd5df7f6dfab2c777affae83f1316"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7fbf563809308a66911d0300b42c5522fdd835f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7fbf563809308a66911d0300b42c5522fdd835f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7fbf563809308a66911d0300b42c5522fdd835f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7fbf563809308a66911d0300b42c5522fdd835f/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44b1b7980867ce014c67f71908e0d0e222530cef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44b1b7980867ce014c67f71908e0d0e222530cef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44b1b7980867ce014c67f71908e0d0e222530cef"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "11bc059fa4a485974c8a4c1a438baf0b7faa0d5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7fbf563809308a66911d0300b42c5522fdd835f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7fbf563809308a66911d0300b42c5522fdd835f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7fbf563809308a66911d0300b42c5522fdd835f", "patch": "@@ -1,3 +1,11 @@\n+2017-08-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.opt: Remove unneeded Init(0) initializations.\n+\t(mstackrealign): Do not init to -1.\n+\t* config/i386/i386.c (ix86_option_override_internal):\n+\tCheck opts_set, not opts when setting default value of\n+\topts->x_ix86_force_align_arg_pointer.\n+\n 2017-08-23  Richard Biener  <rguenther@suse.de>\n \n \t* function.c (fndecl_name): Use verbosity 1 (no arguments) for"}, {"sha": "d758b23a8c4c7c0c483157e8acb75fa0bdc81e67", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7fbf563809308a66911d0300b42c5522fdd835f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7fbf563809308a66911d0300b42c5522fdd835f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b7fbf563809308a66911d0300b42c5522fdd835f", "patch": "@@ -6317,7 +6317,7 @@ ix86_option_override_internal (bool main_args_p,\n     }\n \n   /* Set the default value for -mstackrealign.  */\n-  if (opts->x_ix86_force_align_arg_pointer == -1)\n+  if (!opts_set->x_ix86_force_align_arg_pointer)\n     opts->x_ix86_force_align_arg_pointer = STACK_REALIGN_DEFAULT;\n \n   ix86_default_incoming_stack_boundary = PREFERRED_STACK_BOUNDARY;"}, {"sha": "8bf6af21fd18261c781cc1a6cc2c34328d053a65", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7fbf563809308a66911d0300b42c5522fdd835f/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7fbf563809308a66911d0300b42c5522fdd835f/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=b7fbf563809308a66911d0300b42c5522fdd835f", "patch": "@@ -440,7 +440,7 @@ Target RejectNegative Mask(SSEREGPARM) Save\n Use SSE register passing conventions for SF and DF mode.\n \n mstackrealign\n-Target Report Var(ix86_force_align_arg_pointer) Init(-1)\n+Target Report Var(ix86_force_align_arg_pointer)\n Realign stack in prologue.\n \n mstack-arg-probe\n@@ -514,11 +514,11 @@ Target RejectNegative Joined Var(ix86_tune_ctrl_string)\n Fine grain control of tune features.\n \n mno-default\n-Target RejectNegative Var(ix86_tune_no_default) Init(0)\n+Target RejectNegative Var(ix86_tune_no_default)\n Clear all tune features.\n \n mdump-tune-features\n-Target RejectNegative Var(ix86_dump_tunes) Init(0)\n+Target RejectNegative Var(ix86_dump_tunes)\n \n miamcu\n Target Report Mask(IAMCU)\n@@ -866,16 +866,16 @@ Target Report Var(flag_fentry) Init(-1)\n Emit profiling counter call at function entry before prologue.\n \n mrecord-mcount\n-Target Report Var(flag_record_mcount) Init(0)\n+Target Report Var(flag_record_mcount)\n Generate __mcount_loc section with all mcount or __fentry__ calls.\n \n mnop-mcount\n-Target Report Var(flag_nop_mcount) Init(0)\n+Target Report Var(flag_nop_mcount)\n Generate mcount/__fentry__ calls as nops. To activate they need to be\n patched in.\n \n mskip-rax-setup\n-Target Report Var(flag_skip_rax_setup) Init(0)\n+Target Report Var(flag_skip_rax_setup)\n Skip setting up RAX register when passing variable arguments.\n \n m8bit-idiv\n@@ -943,7 +943,7 @@ Target RejectNegative Joined Integer Var(ix86_stack_protector_guard_symbol_str)\n Use the given symbol for addressing the stack-protector guard.\n \n mmitigate-rop\n-Target Var(flag_mitigate_rop) Init(0)\n+Target Var(flag_mitigate_rop)\n Attempt to avoid generating instruction sequences containing ret bytes.\n \n mgeneral-regs-only"}]}