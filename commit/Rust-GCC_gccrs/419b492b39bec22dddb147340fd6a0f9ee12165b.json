{"sha": "419b492b39bec22dddb147340fd6a0f9ee12165b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE5YjQ5MmIzOWJlYzIyZGRkYjE0NzM0MGZkNmEwZjllZTEyMTY1Yg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-04-02T19:08:55Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-04-05T09:46:27Z"}, "message": "Address '[...]/gcc/rust/parse/rust-parse-impl.h:8575:8: error: variable \u2018has_leading_pipe\u2019 set but not used [-Werror=unused-but-set-variable]' diagnostic [#336]", "tree": {"sha": "1d192655a8284f7a7514c8ea33c643f30e690c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d192655a8284f7a7514c8ea33c643f30e690c33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/419b492b39bec22dddb147340fd6a0f9ee12165b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/419b492b39bec22dddb147340fd6a0f9ee12165b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/419b492b39bec22dddb147340fd6a0f9ee12165b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/419b492b39bec22dddb147340fd6a0f9ee12165b/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "106f6226004126ab1c524be7377e24751b2ae8c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/106f6226004126ab1c524be7377e24751b2ae8c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/106f6226004126ab1c524be7377e24751b2ae8c4"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "4379dc5e48e491fd59e1a41a0978eda541fc74bd", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/419b492b39bec22dddb147340fd6a0f9ee12165b/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/419b492b39bec22dddb147340fd6a0f9ee12165b/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=419b492b39bec22dddb147340fd6a0f9ee12165b", "patch": "@@ -8570,12 +8570,8 @@ std::vector<std::unique_ptr<AST::Pattern> >\n Parser<ManagedTokenSource>::parse_match_arm_patterns (TokenId end_token_id)\n {\n   // skip optional leading '|'\n-  bool has_leading_pipe = false;\n   if (lexer.peek_token ()->get_id () == PIPE)\n-    {\n-      has_leading_pipe = true;\n-      lexer.skip_token ();\n-    }\n+    lexer.skip_token ();\n   /* TODO: do I even need to store the result of this? can't be used.\n    * If semantically different, I need a wrapped \"match arm patterns\" object for\n    * this. */"}]}