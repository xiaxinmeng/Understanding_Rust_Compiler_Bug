{"sha": "a874dd182c0ccbe5ca9109b014c2787598a292a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg3NGRkMTgyYzBjY2JlNWNhOTEwOWIwMTRjMjc4NzU5OGEyOTJhNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-14T00:16:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-14T00:16:55Z"}, "message": "(check_float_value): New function.\n\nFrom-SVN: r11757", "tree": {"sha": "1efffdd0f6955f349733cac177a6474cb3878bf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1efffdd0f6955f349733cac177a6474cb3878bf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a874dd182c0ccbe5ca9109b014c2787598a292a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a874dd182c0ccbe5ca9109b014c2787598a292a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a874dd182c0ccbe5ca9109b014c2787598a292a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a874dd182c0ccbe5ca9109b014c2787598a292a6/comments", "author": null, "committer": null, "parents": [{"sha": "89a2944c3b346b6c32a38af04bf75bf48146ee77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89a2944c3b346b6c32a38af04bf75bf48146ee77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89a2944c3b346b6c32a38af04bf75bf48146ee77"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "4d1af8580a72bf066f5db98330738c6bb41f43e6", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a874dd182c0ccbe5ca9109b014c2787598a292a6/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a874dd182c0ccbe5ca9109b014c2787598a292a6/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=a874dd182c0ccbe5ca9109b014c2787598a292a6", "patch": "@@ -2172,3 +2172,67 @@ final_prescan_insn (insn, opvec, noperands)\n       trap_pending = 1;\n     }\n }\n+\n+/* Check a floating-point value for validity for a particular machine mode.  */\n+\n+static char *float_strings[] =\n+{\n+   \"1.70141173319264430e+38\", /* 2^127 (2^24 - 1) / 2^24 */\n+  \"-1.70141173319264430e+38\",\n+   \"2.93873587705571877e-39\", /* 2^-128 */\n+  \"-2.93873587705571877e-39\"\n+};\n+\n+static REAL_VALUE_TYPE float_values[4];\n+static int inited_float_values = 0;\n+\n+int\n+check_float_value (mode, d, overflow)\n+     enum machine_mode mode;\n+     REAL_VALUE_TYPE *d;\n+     int overflow;\n+{\n+\n+  if (TARGET_IEEE || TARGET_IEEE_CONFORMANT || TARGET_IEEE_WITH_INEXACT)\n+    return 0;\n+\n+  if (inited_float_values == 0)\n+    {\n+      int i;\n+      for (i = 0; i < 4; i++)\n+\tfloat_values[i] = REAL_VALUE_ATOF (float_strings[i], DFmode);\n+\n+      inited_float_values = 1;\n+    }\n+\n+  if (mode == SFmode)\n+    {\n+      REAL_VALUE_TYPE r;\n+\n+      bcopy (d, &r, sizeof (REAL_VALUE_TYPE));\n+      if (REAL_VALUES_LESS (float_values[0], r))\n+\t{\n+\t  bcopy (&float_values[0], d, sizeof (REAL_VALUE_TYPE));\n+\t  return 1;\n+\t}\n+      else if (REAL_VALUES_LESS (r, float_values[1]))\n+\t{\n+\t  bcopy (&float_values[1], d, sizeof (REAL_VALUE_TYPE));\n+\t  return 1;\n+\t}\n+      else if (REAL_VALUES_LESS (dconst0, r)\n+\t\t&& REAL_VALUES_LESS (r, float_values[2]))\n+\t{\n+\t  bcopy (&dconst0, d, sizeof (REAL_VALUE_TYPE));\n+\t  return 1;\n+\t}\n+      else if (REAL_VALUES_LESS (r, dconst0)\n+\t\t&& REAL_VALUES_LESS (float_values[3], r))\n+\t{\n+\t  bcopy (&dconst0, d, sizeof (REAL_VALUE_TYPE));\n+\t  return 1;\n+\t}\n+    }\n+\n+  return 0;\n+}"}]}