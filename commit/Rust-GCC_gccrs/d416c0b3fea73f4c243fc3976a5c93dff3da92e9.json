{"sha": "d416c0b3fea73f4c243fc3976a5c93dff3da92e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQxNmMwYjNmZWE3M2Y0YzI0M2ZjMzk3NmE1YzkzZGZmM2RhOTJlOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-08-27T00:08:35Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-08-27T00:08:35Z"}, "message": "alpha.h (HARD_REGNO_MODE_OK): Allow complex float modes.\n\n        * config/alpha/alpha.h (HARD_REGNO_MODE_OK): Allow complex float\n        modes.\n\nFrom-SVN: r86644", "tree": {"sha": "01a9f85e963268c0a5420b8f51c77b3ac94fa868", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01a9f85e963268c0a5420b8f51c77b3ac94fa868"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d416c0b3fea73f4c243fc3976a5c93dff3da92e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d416c0b3fea73f4c243fc3976a5c93dff3da92e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d416c0b3fea73f4c243fc3976a5c93dff3da92e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d416c0b3fea73f4c243fc3976a5c93dff3da92e9/comments", "author": null, "committer": null, "parents": [{"sha": "ce7cbbb0f086881890f4f6e6cfd95f46ad048fad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce7cbbb0f086881890f4f6e6cfd95f46ad048fad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce7cbbb0f086881890f4f6e6cfd95f46ad048fad"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "802f45c013ddf3261245d51d92c0cca025cd4237", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d416c0b3fea73f4c243fc3976a5c93dff3da92e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d416c0b3fea73f4c243fc3976a5c93dff3da92e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d416c0b3fea73f4c243fc3976a5c93dff3da92e9", "patch": "@@ -1,3 +1,8 @@\n+2004-08-26  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.h (HARD_REGNO_MODE_OK): Allow complex float\n+\tmodes.\n+\n 2004-08-26  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \tPR c/13801\n@@ -113,16 +118,16 @@\n \n 2004-08-25  Richard Henderson  <rth@redhat.com>\n \n-        PR target/16974\n-        * config/alpha/alpha.md (adddi_fp_hack): Don't rely on splitting\n-        if the constant satisfies add_operand.\n+\tPR target/16974\n+\t* config/alpha/alpha.md (adddi_fp_hack): Don't rely on splitting\n+\tif the constant satisfies add_operand.\n \n 2004-08-25  Richard Henderson  <rth@redhat.com>\n  \n-        PR debug/10695\n-        * config/alpha/alpha.c (emit_frame_store_1, emit_frame_store): New.\n-        (alpha_expand_prologue): Handle >32-bit frames.  Generate proper\n-        unwind info for >16-bit frames.\n+\tPR debug/10695\n+\t* config/alpha/alpha.c (emit_frame_store_1, emit_frame_store): New.\n+\t(alpha_expand_prologue): Handle >32-bit frames.  Generate proper\n+\tunwind info for >16-bit frames.\n \n 2004-08-25  Richard B. Kreckel  <richard.kreckel@framatome-anp.com>\n \n@@ -131,8 +136,8 @@\n \n 2004-08-25  Richard Henderson  <rth@redhat.com>\n \n-        * config/alpha/alpha.c (alpha_cannot_force_const_mem): New.\n-        (TARGET_CANNOT_FORCE_CONST_MEM): New.\n+\t* config/alpha/alpha.c (alpha_cannot_force_const_mem): New.\n+\t(TARGET_CANNOT_FORCE_CONST_MEM): New.\n \n 2004-08-25  Andrew MacLeod  <amacleod@redhat.com>\n "}, {"sha": "3acecb8e5740e4772e345f7967616c6ac95a8c13", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d416c0b3fea73f4c243fc3976a5c93dff3da92e9/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d416c0b3fea73f4c243fc3976a5c93dff3da92e9/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=d416c0b3fea73f4c243fc3976a5c93dff3da92e9", "patch": "@@ -647,6 +647,7 @@ extern const char *alpha_tls_size_string; /* For -mtls-size= */\n #define HARD_REGNO_MODE_OK(REGNO, MODE) \t\t\t\t\\\n   ((REGNO) >= 32 && (REGNO) <= 62 \t\t\t\t\t\\\n    ? (MODE) == SFmode || (MODE) == DFmode || (MODE) == DImode\t\t\\\n+     || (MODE) == SCmode || (MODE) == DCmode\t\t\t\t\\\n    : 1)\n \n /* A C expression that is nonzero if a value of mode"}]}