{"sha": "ed0af3ba4fb25ca4c661a1e8475c42931a78f59b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQwYWYzYmE0ZmIyNWNhNGM2NjFhMWU4NDc1YzQyOTMxYTc4ZjU5Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T13:29:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T13:29:36Z"}, "message": "[multiple changes]\n\n2010-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* symbols-processing-vms-alpha.adb: Minor reformatting.\n\n2010-09-10  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* bindgen.adb (Gen_Adainit_Ada): In .NET, don't call\n\t__gnat_install_handler in case the binder is called with -n.\n\nFrom-SVN: r164172", "tree": {"sha": "2a56528d4becddbaad3c25de468f5e798839c174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a56528d4becddbaad3c25de468f5e798839c174"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed0af3ba4fb25ca4c661a1e8475c42931a78f59b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0af3ba4fb25ca4c661a1e8475c42931a78f59b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed0af3ba4fb25ca4c661a1e8475c42931a78f59b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0af3ba4fb25ca4c661a1e8475c42931a78f59b/comments", "author": null, "committer": null, "parents": [{"sha": "f00c5f52285d2203317335960666a4f9a929444b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f00c5f52285d2203317335960666a4f9a929444b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f00c5f52285d2203317335960666a4f9a929444b"}], "stats": {"total": 57, "additions": 35, "deletions": 22}, "files": [{"sha": "057ddff7d901a871341bb8b939e1408224100742", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0af3ba4fb25ca4c661a1e8475c42931a78f59b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0af3ba4fb25ca4c661a1e8475c42931a78f59b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ed0af3ba4fb25ca4c661a1e8475c42931a78f59b", "patch": "@@ -1,3 +1,12 @@\n+2010-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* symbols-processing-vms-alpha.adb: Minor reformatting.\n+\n+2010-09-10  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* bindgen.adb (Gen_Adainit_Ada): In .NET, don't call\n+\t__gnat_install_handler in case the binder is called with -n.\n+\n 2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch6.adb (Make_Build_In_Place_In_Object_Declaration): Use proper"}, {"sha": "6d1642d488b737f6250b2e6dc5bd197ddaac0d13", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0af3ba4fb25ca4c661a1e8475c42931a78f59b/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0af3ba4fb25ca4c661a1e8475c42931a78f59b/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=ed0af3ba4fb25ca4c661a1e8475c42931a78f59b", "patch": "@@ -792,11 +792,17 @@ package body Bindgen is\n          Write_Statement_Buffer;\n \n          --  Generate call to Install_Handler\n+         --  In .NET, when binding with -z, we don't install the signal\n+         --  handler to let the caller handle the last exception handler.\n \n-         WBI (\"\");\n-         WBI (\"      if Handler_Installed = 0 then\");\n-         WBI (\"         Install_Handler;\");\n-         WBI (\"      end if;\");\n+         if VM_Target /= CLI_Target\n+           or else Bind_Main_Program\n+         then\n+            WBI (\"\");\n+            WBI (\"      if Handler_Installed = 0 then\");\n+            WBI (\"         Install_Handler;\");\n+            WBI (\"      end if;\");\n+         end if;\n \n          --  Generate call to Set_Features\n "}, {"sha": "c33739402c3e85fbd8463c25644ed9c5321287a3", "filename": "gcc/ada/symbols-processing-vms-alpha.adb", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0af3ba4fb25ca4c661a1e8475c42931a78f59b/gcc%2Fada%2Fsymbols-processing-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0af3ba4fb25ca4c661a1e8475c42931a78f59b/gcc%2Fada%2Fsymbols-processing-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsymbols-processing-vms-alpha.adb?ref=ed0af3ba4fb25ca4c661a1e8475c42931a78f59b", "patch": "@@ -40,19 +40,20 @@ package body Processing is\n    C_SYM : constant Number := 1;\n    --  Code for a Symbol subsection\n \n-   V_DEF_Mask  : constant Number := 2**1;\n-   V_NORM_Mask : constant Number := 2**6;\n+   V_DEF_Mask  : constant Number := 2 ** 1;\n+   V_NORM_Mask : constant Number := 2 ** 6;\n+   --  Comments ???\n \n    B : Byte;\n \n    Number_Of_Characters : Natural := 0;\n    --  The number of characters of each section\n \n    Native_Format : Boolean;\n-   --  True if records are decoded by the system (like on VMS).\n+   --  True if records are decoded by the system (like on VMS)\n \n    Has_Pad : Boolean;\n-   --  If true, a pad byte must be skipped before reading the next record.\n+   --  If true, a pad byte must be skipped before reading the next record\n \n    --  The following variables are used by procedure Process when reading an\n    --  object file.\n@@ -123,33 +124,30 @@ package body Processing is\n \n       Success := True;\n \n-      --  Check the file format in case of cross-tool.\n+      --  Check the file format in case of cross-tool\n \n       Get (Code);\n       Get (Number_Of_Characters);\n       Get (Dummy);\n \n       if Code = Dummy and then Number_Of_Characters = Natural (EMH) then\n \n-         --  Looks like a cross tools.\n+         --  Looks like a cross tool\n \n          Native_Format := False;\n          Number_Of_Characters := Natural (Dummy) - 4;\n          Has_Pad := (Number_Of_Characters mod 2) = 1;\n \n       elsif Code = EMH then\n-\n          Native_Format := True;\n          Number_Of_Characters := Number_Of_Characters - 6;\n          Has_Pad := False;\n \n       else\n-\n          Put_Line (\"file \"\"\" & Object_File & \"\"\" is not an object file\");\n          Close (File);\n          Success := False;\n          return;\n-\n       end if;\n \n       --  Skip the EMH section\n@@ -163,9 +161,10 @@ package body Processing is\n       while not End_Of_File (File) loop\n \n          if not Native_Format then\n-            if Has_Pad then\n-               --  Skip pad byte\n \n+            --  Skip pad byte if present\n+\n+            if Has_Pad then\n                Get (B);\n             end if;\n \n@@ -179,7 +178,8 @@ package body Processing is\n \n          if not Native_Format then\n             if Natural (Dummy) /= Number_Of_Characters then\n-               --  Format error.\n+\n+               --  Format error\n \n                raise Constraint_Error;\n             end if;\n@@ -195,13 +195,11 @@ package body Processing is\n          --  next section.\n \n          if Code /= GSD then\n-\n             for J in 1 .. Number_Of_Characters loop\n                Read (File, B);\n             end loop;\n \n          else\n-\n             --  Skip over the next 4 bytes\n \n             Get (Dummy);\n@@ -218,10 +216,10 @@ package body Processing is\n                Number_Of_Characters := Number_Of_Characters - 8;\n                Nchars := Nchars - 8;\n \n-               --  If this is a symbol and the V_DEF flag is set, get the\n-               --  symbol.\n+               --  If this is a symbol and the V_DEF flag is set, get symbol\n \n                if Code = C_SYM and then ((Flags and V_DEF_Mask) /= 0) then\n+\n                   --  First, reach the symbol length\n \n                   for J in 1 .. 25 loop\n@@ -238,6 +236,7 @@ package body Processing is\n                   for J in 1 .. Nchars loop\n                      Read (File, B);\n                      Number_Of_Characters := Number_Of_Characters - 1;\n+\n                      if Length > 0 then\n                         LSymb := LSymb + 1;\n                         Symbol (LSymb) := B;\n@@ -273,7 +272,6 @@ package body Processing is\n \n                         if (Flags and V_NORM_Mask) = 0 then\n                            S_Data.Kind := Data;\n-\n                         else\n                            S_Data.Kind := Proc;\n                         end if;\n@@ -294,7 +292,7 @@ package body Processing is\n                   end loop;\n                end if;\n \n-               --  Exit the GSD section when number of characters reaches 0\n+               --  Exit the GSD section when number of characters reaches zero\n \n                exit when Number_Of_Characters = 0;\n             end loop;"}]}