{"sha": "f0375c668066691ecb7d3e26725d58f5fb29835e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAzNzVjNjY4MDY2NjkxZWNiN2QzZTI2NzI1ZDU4ZjVmYjI5ODM1ZQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2003-02-26T11:26:37Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2003-02-26T11:26:37Z"}, "message": "arm.c (is_load_address): Rename to...\n\n* config/arm/arm.c (is_load_address): Rename to... (arm_memory_load_p) ... this\nand make it check for SUBREGs and constant loads that will be converted into\nloads from the minipool.\n(is_cirrus_insn): Rename to ... (arm_cirrus_insn_p): ... this, for consistency.\nReplace test of CIRRUS_NO with CIRRUS_NOT.\n(cirrus_reorg): Use renamed functions.\n(note_invalid_constants): Change from a void function to bool.  Add an extra\nparameter, saying whether the fixups should be pushed.  Return true if fixups\nare needed.\n(arm_reorg): Use renamed functions.  Use INSN_P.  Replace test of CIRRUS_NO\nwith CIRRUS_NOT.\n* config/arm/arm.h (FLOAT_WORDS_BIG_ENDIAN): Mention that other floating point\nco-processors can also affect this.\n* config/arm/arm.md (\"type\" attribute): Add mav_farith and mav_dmult.  Replace\nreferences to \"cirrus_type\" attribute with \"type\".\n* config/arm/cirrus.md (\"cirrus_fpu\" attribute): Delete.\n(\"cirrus_type\" attribute): Delete - use \"type\" instead.\n(\"cirrus\" attribute): Replace 'no' with 'not' and 'yes' with 'normal'.\n\nFrom-SVN: r63466", "tree": {"sha": "70412158ca613d53196953d9d42a426f0fb240fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70412158ca613d53196953d9d42a426f0fb240fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0375c668066691ecb7d3e26725d58f5fb29835e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0375c668066691ecb7d3e26725d58f5fb29835e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0375c668066691ecb7d3e26725d58f5fb29835e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0375c668066691ecb7d3e26725d58f5fb29835e/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d446150c298b2048d18e354ee47b130ed3b8e7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d446150c298b2048d18e354ee47b130ed3b8e7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d446150c298b2048d18e354ee47b130ed3b8e7f"}], "stats": {"total": 363, "additions": 182, "deletions": 181}, "files": [{"sha": "ecba1ee497d117816e511dd4f0b3e7e72657eec1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0375c668066691ecb7d3e26725d58f5fb29835e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0375c668066691ecb7d3e26725d58f5fb29835e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0375c668066691ecb7d3e26725d58f5fb29835e", "patch": "@@ -1,3 +1,28 @@\n+2003-02-26  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/arm/arm.c (is_load_address): Rename to...\n+        (arm_memory_load_p) ... this and make it check for SUBREGs and\n+        constant loads that will be converted into loads from the\n+        minipool.\n+        (is_cirrus_insn): Rename to ...\n+        (arm_cirrus_insn_p): ... this, for consistency.  Replace test\n+        of CIRRUS_NO with CIRRUS_NOT.\n+        (cirrus_reorg): Use renamed functions.\n+        (note_invalid_constants): Change from a void function to bool.\n+        Add an extra parameter, saying whether the fixups should be\n+        pushed.  Return true if fixups are needed.\n+        (arm_reorg): Use renamed functions.  Use INSN_P.  Replace test\n+        of CIRRUS_NO with CIRRUS_NOT.\n+        * config/arm/arm.h (FLOAT_WORDS_BIG_ENDIAN): Mention that\n+        other floating point co-processors can also affect this.\n+        * config/arm/arm.md (\"type\" attribute): Add mav_farith and\n+        mav_dmult.  Replace references to \"cirrus_type\" attribute with\n+        \"type\".\n+        * config/arm/cirrus.md (\"cirrus_fpu\" attribute): Delete.\n+        (\"cirrus_type\" attribute): Delete - use \"type\" instead.\n+        (\"cirrus\" attribute): Replace 'no' with 'not' and 'yes' with\n+        'normal'.        \n+\n Tue Feb 25 22:46:27 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* objc-act.c: Include cgraph.h"}, {"sha": "092e934f5f31bbaece6cbe00d91227766f26a795", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 79, "deletions": 72, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0375c668066691ecb7d3e26725d58f5fb29835e/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0375c668066691ecb7d3e26725d58f5fb29835e/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f0375c668066691ecb7d3e26725d58f5fb29835e", "patch": "@@ -75,11 +75,8 @@ static void      arm_add_gc_roots \t\tPARAMS ((void));\n static int       arm_gen_constant\t\tPARAMS ((enum rtx_code, Mmode, Hint, rtx, rtx, int, int));\n static unsigned  bit_count \t\t\tPARAMS ((Ulong));\n static int\t arm_address_register_rtx_p\tPARAMS ((rtx, int));\n-static int\t arm_legitimate_index_p\t\tPARAMS ((enum machine_mode,\n-\t\t\t\t\t\t\t rtx, int));\n-static int\t thumb_base_register_rtx_p\tPARAMS ((rtx, \n-\t\t\t\t\t\t\t enum machine_mode,\n-\t\t\t\t\t\t\t int));\n+static int\t arm_legitimate_index_p\t\tPARAMS ((Mmode, rtx, int));\n+static int\t thumb_base_register_rtx_p\tPARAMS ((rtx, Mmode, int));\n inline static int thumb_index_register_rtx_p\tPARAMS ((rtx, int));\n static int       const_ok_for_op \t\tPARAMS ((Hint, enum rtx_code));\n static int       eliminate_lr2ip\t\tPARAMS ((rtx *));\n@@ -116,7 +113,7 @@ static int\t arm_barrier_cost\t\tPARAMS ((rtx));\n static Mfix *    create_fix_barrier\t\tPARAMS ((Mfix *, Hint));\n static void\t push_minipool_barrier\t        PARAMS ((rtx, Hint));\n static void\t push_minipool_fix\t\tPARAMS ((rtx, Hint, rtx *, Mmode, rtx));\n-static void\t note_invalid_constants\t        PARAMS ((rtx, Hint));\n+static bool\t note_invalid_constants\t        PARAMS ((rtx, Hint, bool));\n static int       current_file_function_operand\tPARAMS ((rtx));\n static Ulong\t arm_compute_save_reg0_reg12_mask  PARAMS ((void));\n static Ulong     arm_compute_save_reg_mask\tPARAMS ((void));\n@@ -128,31 +125,28 @@ static void\t arm_output_function_epilogue\tPARAMS ((FILE *, Hint));\n static void\t arm_output_function_prologue\tPARAMS ((FILE *, Hint));\n static void\t thumb_output_function_prologue PARAMS ((FILE *, Hint));\n static int\t arm_comp_type_attributes\tPARAMS ((tree, tree));\n-static void\t arm_set_default_type_attributes  PARAMS ((tree));\n+static void\t arm_set_default_type_attributes PARAMS ((tree));\n static int\t arm_adjust_cost\t\tPARAMS ((rtx, rtx, rtx, int));\n-static int\t count_insns_for_constant\tPARAMS ((HOST_WIDE_INT, int));\n+static int\t count_insns_for_constant\tPARAMS ((Hint, int));\n static int\t arm_get_strip_length\t\tPARAMS ((int));\n static bool      arm_function_ok_for_sibcall    PARAMS ((tree, tree));\n+static void\t arm_internal_label\t\tPARAMS ((FILE *, Ccstar, Ulong));\n+static void      arm_output_mi_thunk\t\tPARAMS ((FILE *, tree, Hint, Hint, tree));\n+static int       arm_rtx_costs_1\t\tPARAMS ((rtx, enum rtx_code, enum rtx_code));\n+static bool      arm_rtx_costs\t\t\tPARAMS ((rtx, int, int, int *));\n+static int       arm_address_cost\t\tPARAMS ((rtx));\n+static bool \t arm_memory_load_p              PARAMS ((rtx));\n+static bool      arm_cirrus_insn_p              PARAMS ((rtx));\n+static void      cirrus_reorg                   PARAMS ((rtx));\n #ifdef OBJECT_FORMAT_ELF\n-static void\t arm_elf_asm_named_section\tPARAMS ((const char *, unsigned int));\n+static void\t arm_elf_asm_named_section\tPARAMS ((Ccstar, unsigned int));\n #endif\n #ifndef ARM_PE\n static void\t arm_encode_section_info\tPARAMS ((tree, int));\n #endif\n #ifdef AOF_ASSEMBLER\n-static void\t aof_globalize_label\t\tPARAMS ((FILE *, const char *));\n+static void\t aof_globalize_label\t\tPARAMS ((FILE *, Ccstar));\n #endif\n-static void\t arm_internal_label\t\tPARAMS ((FILE *, const char *, unsigned long));\n-static void arm_output_mi_thunk\t\t\tPARAMS ((FILE *, tree,\n-\t\t\t\t\t\t\t HOST_WIDE_INT,\n-\t\t\t\t\t\t\t HOST_WIDE_INT, tree));\n-static int arm_rtx_costs_1\t\t\tPARAMS ((rtx, enum rtx_code,\n-\t\t\t\t\t\t\t enum rtx_code));\n-static bool arm_rtx_costs\t\t\tPARAMS ((rtx, int, int, int*));\n-static int arm_address_cost\t\t\tPARAMS ((rtx));\n-static int \t is_load_address                PARAMS ((rtx));\n-static int       is_cirrus_insn                 PARAMS ((rtx));\n-static void      cirrus_reorg                   PARAMS ((rtx));\n \n #undef Hint\n #undef Mmode\n@@ -3984,38 +3978,47 @@ cirrus_shift_const (op, mode)\n \t  && INTVAL (op) < 64);\n }\n \n-/* Return nonzero if INSN is an LDR R0,ADDR instruction.  */\n+/* Returns TRUE if INSN is an \"LDR REG, ADDR\" instruction.\n+   Use by the Cirrus Maverick code which has to workaround\n+   a hardware bug triggered by such instructions.  */\n \n-static int\n-is_load_address (insn)\n+static bool\n+arm_memory_load_p (insn)\n      rtx insn;\n {\n   rtx body, lhs, rhs;;\n \n-  if (!insn)\n-    return 0;\n-\n-  if (GET_CODE (insn) != INSN)\n-    return 0;\n+  if (insn == NULL_RTX || GET_CODE (insn) != INSN)\n+    return false;\n \n   body = PATTERN (insn);\n \n   if (GET_CODE (body) != SET)\n-    return 0;\n+    return false;\n \n   lhs = XEXP (body, 0);\n   rhs = XEXP (body, 1);\n \n-  return (GET_CODE (lhs) == REG\n-\t  && REGNO_REG_CLASS (REGNO (lhs)) == GENERAL_REGS\n-\t  && (GET_CODE (rhs) == MEM\n-\t      || GET_CODE (rhs) == SYMBOL_REF));\n+  lhs = REG_OR_SUBREG_RTX (lhs);\n+\n+  /* If the destination is not a general purpose\n+     register we do not have to worry.  */\n+  if (GET_CODE (lhs) != REG\n+      || REGNO_REG_CLASS (REGNO (lhs)) != GENERAL_REGS)\n+    return false;\n+\n+  /* As well as loads from memory we also have to react\n+     to loads of invalid constants which will be turned\n+     into loads from the minipool.  */\n+  return (GET_CODE (rhs) == MEM\n+\t  || GET_CODE (rhs) == SYMBOL_REF\n+\t  || note_invalid_constants (insn, -1, false));\n }\n \n-/* Return nonzero if INSN is a Cirrus instruction.  */\n+/* Return TRUE if INSN is a Cirrus instruction.  */\n \n-static int\n-is_cirrus_insn (insn)\n+static bool\n+arm_cirrus_insn_p (insn)\n      rtx insn;\n {\n   enum attr_cirrus attr;\n@@ -4029,7 +4032,7 @@ is_cirrus_insn (insn)\n \n   attr = get_attr_cirrus (insn);\n \n-  return attr != CIRRUS_NO;\n+  return attr != CIRRUS_NOT;\n }\n \n /* Cirrus reorg for invalid instruction combinations.  */\n@@ -4049,10 +4052,10 @@ cirrus_reorg (first)\n       nops = 0;\n       t = next_nonnote_insn (first);\n \n-      if (is_cirrus_insn (t))\n+      if (arm_cirrus_insn_p (t))\n \t++ nops;\n \n-      if (is_cirrus_insn (next_nonnote_insn (t)))\n+      if (arm_cirrus_insn_p (next_nonnote_insn (t)))\n \t++ nops;\n \n       while (nops --)\n@@ -4073,12 +4076,12 @@ cirrus_reorg (first)\n \t be followed by a non Cirrus insn.  */\n       if (get_attr_cirrus (first) == CIRRUS_DOUBLE)\n \t{\n-\t  if (is_cirrus_insn (next_nonnote_insn (first)))\n+\t  if (arm_cirrus_insn_p (next_nonnote_insn (first)))\n \t    emit_insn_after (gen_nop (), first);\n \n \t  return;\n \t}\n-      else if (is_load_address (first))\n+      else if (arm_memory_load_p (first))\n \t{\n \t  unsigned int arm_regno;\n \n@@ -4102,7 +4105,7 @@ cirrus_reorg (first)\n \t  /* Next insn.  */\n \t  first = next_nonnote_insn (first);\n \n-\t  if (!is_cirrus_insn (first))\n+\t  if (! arm_cirrus_insn_p (first))\n \t    return;\n \n \t  body = PATTERN (first);\n@@ -4140,10 +4143,10 @@ cirrus_reorg (first)\n \n       t = next_nonnote_insn (first);\n \n-      if (is_cirrus_insn (t))\n+      if (arm_cirrus_insn_p (t))\n \t++ nops;\n \n-      if (is_cirrus_insn (next_nonnote_insn (t)))\n+      if (arm_cirrus_insn_p (next_nonnote_insn (t)))\n \t++ nops;\n \n       while (nops --)\n@@ -6910,22 +6913,27 @@ push_minipool_fix (insn, address, loc, mode, value)\n   minipool_fix_tail = fix;\n }\n \n-/* Scan INSN and note any of its operands that need fixing.  */\n+/* Scan INSN and note any of its operands that need fixing.\n+   If DO_PUSHES is false we do not actually push any of the fixups\n+   needed.  The function returns TRUE is any fixups were needed/pushed.\n+   This is used by arm_memory_load_p() which needs to know about loads\n+   of constants that will be converted into minipool loads.  */\n \n-static void\n-note_invalid_constants (insn, address)\n+static bool\n+note_invalid_constants (insn, address, do_pushes)\n      rtx insn;\n      HOST_WIDE_INT address;\n+     bool do_pushes;\n {\n+  bool result = false;\n   int opno;\n \n   extract_insn (insn);\n \n   if (!constrain_operands (1))\n     fatal_insn_not_found (insn);\n \n-  /* Fill in recog_op_alt with information about the constraints of this\n-     insn.  */\n+  /* Fill in recog_op_alt with information about the constraints of this insn.  */\n   preprocess_constraints ();\n \n   for (opno = 0; opno < recog_data.n_operands; opno++)\n@@ -6943,27 +6951,27 @@ note_invalid_constants (insn, address)\n \t  rtx op = recog_data.operand[opno];\n \n \t  if (CONSTANT_P (op))\n-\t    push_minipool_fix (insn, address, recog_data.operand_loc[opno],\n-\t\t\t       recog_data.operand_mode[opno], op);\n-#if 0\n-\t  /* RWE: Now we look correctly at the operands for the insn,\n-\t     this shouldn't be needed any more.  */\n-#ifndef AOF_ASSEMBLER\n-\t  /* XXX Is this still needed?  */\n-\t  else if (GET_CODE (op) == UNSPEC && XINT (op, 1) == UNSPEC_PIC_SYM)\n-\t    push_minipool_fix (insn, address, recog_data.operand_loc[opno],\n-\t\t\t       recog_data.operand_mode[opno],\n-\t\t\t       XVECEXP (op, 0, 0));\n-#endif\n-#endif\n+\t    {\n+\t      if (do_pushes)\n+\t\tpush_minipool_fix (insn, address, recog_data.operand_loc[opno],\n+\t\t\t\t   recog_data.operand_mode[opno], op);\n+\t      result = true;\n+\t    }\n \t  else if (GET_CODE (op) == MEM\n \t\t   && GET_CODE (XEXP (op, 0)) == SYMBOL_REF\n \t\t   && CONSTANT_POOL_ADDRESS_P (XEXP (op, 0)))\n-\t    push_minipool_fix (insn, address, recog_data.operand_loc[opno],\n-\t\t\t       recog_data.operand_mode[opno],\n-\t\t\t       get_pool_constant (XEXP (op, 0)));\n+\t    {\n+\t      if (do_pushes)\n+\t\tpush_minipool_fix (insn, address, recog_data.operand_loc[opno],\n+\t\t\t\t   recog_data.operand_mode[opno],\n+\t\t\t\t   get_pool_constant (XEXP (op, 0)));\n+\n+\t      result = true;\n+\t    }\n \t}\n     }\n+\n+  return result;\n }\n \n void\n@@ -6985,19 +6993,18 @@ arm_reorg (first)\n   for (insn = next_nonnote_insn (first); insn; insn = next_nonnote_insn (insn))\n     {\n       if (TARGET_CIRRUS_FIX_INVALID_INSNS\n-          && (is_cirrus_insn (insn)\n+          && (arm_cirrus_insn_p (insn)\n \t      || GET_CODE (insn) == JUMP_INSN\n-\t      || is_load_address (insn)))\n+\t      || arm_memory_load_p (insn)))\n \tcirrus_reorg (insn);\n \n       if (GET_CODE (insn) == BARRIER)\n \tpush_minipool_barrier (insn, address);\n-      else if (GET_CODE (insn) == INSN || GET_CODE (insn) == CALL_INSN\n-\t       || GET_CODE (insn) == JUMP_INSN)\n+      else if (INSN_P (insn))\n \t{\n \t  rtx table;\n \n-\t  note_invalid_constants (insn, address);\n+\t  note_invalid_constants (insn, address, true);\n \t  address += get_attr_length (insn);\n \n \t  /* If the insn is a vector jump, add the size of the table\n@@ -10134,7 +10141,7 @@ arm_final_prescan_insn (insn)\n \t\t instructions to be safe.  */\n \t      if (GET_CODE (scanbody) != USE\n \t\t  && GET_CODE (scanbody) != CLOBBER\n-\t\t  && get_attr_cirrus (this_insn) != CIRRUS_NO)\n+\t\t  && get_attr_cirrus (this_insn) != CIRRUS_NOT)\n \t\tfail = TRUE;\n \t      break;\n "}, {"sha": "01861f3a9e29da7d27f57c1865723d74eaf1d554", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0375c668066691ecb7d3e26725d58f5fb29835e/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0375c668066691ecb7d3e26725d58f5fb29835e/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=f0375c668066691ecb7d3e26725d58f5fb29835e", "patch": "@@ -698,8 +698,8 @@ extern int arm_is_6_or_7;\n #endif\n \n /* Define this if most significant word of doubles is the lowest numbered.\n-   The rules are different based on whether or not we use FPA-format or\n-   VFP-format doubles.  */\n+   The rules are different based on whether or not we use FPA-format,\n+   VFP-format or some other floating point co-processor's format doubles.  */\n #define FLOAT_WORDS_BIG_ENDIAN (arm_float_words_big_endian ())\n \n #define UNITS_PER_WORD\t4"}, {"sha": "0400609aa7a23d1ffe533cc2193fa74ac9ebe8f6", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0375c668066691ecb7d3e26725d58f5fb29835e/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0375c668066691ecb7d3e26725d58f5fb29835e/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=f0375c668066691ecb7d3e26725d58f5fb29835e", "patch": "@@ -167,9 +167,12 @@\n ; store2\tstore 2 words\n ; store3\tstore 3 words\n ; store4\tstore 4 words\n+;  Additions for Cirrus Maverick co-processor:\n+; mav_farith\tFloating point arithmetic (4 cycle)\n+; mav_dmult\tDouble multiplies (7 cycle)\n ;\n (define_attr \"type\"\n-\t\"normal,mult,block,float,fdivx,fdivd,fdivs,fmul,ffmul,farith,ffarith,float_em,f_load,f_store,f_mem_r,r_mem_f,f_2_r,r_2_f,call,load,store1,store2,store3,store4\" \n+\t\"normal,mult,block,float,fdivx,fdivd,fdivs,fmul,ffmul,farith,ffarith,float_em,f_load,f_store,f_mem_r,r_mem_f,f_2_r,r_2_f,call,load,store1,store2,store3,store4,mav_farith,mav_dmult\" \n \t(const_string \"normal\"))\n \n ; Load scheduling, set from the arm_ld_sched variable\n@@ -5576,19 +5579,14 @@\n    (set_attr \"type\" \"f_2_r\")]\n )\n \n-;; There is no CCFPE or CCFP modes in the code below so we can have\n-;; one pattern to match either one.  Besides, we're pretty sure we\n-;; have either CCFPE or CCFP because we made the patterns\n-;; (arm_gen_compare_reg).\n-\n ;; Cirrus SF compare instruction\n (define_insn \"*cirrus_cmpsf\"\n   [(set (reg:CCFP CC_REGNUM)\n \t(compare:CCFP (match_operand:SF 0 \"cirrus_fp_register\" \"v\")\n \t\t      (match_operand:SF 1 \"cirrus_fp_register\" \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfcmps%?\\\\tr15, %V0, %V1\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n+  [(set_attr \"type\"   \"mav_farith\")\n    (set_attr \"cirrus\" \"compare\")]\n )\n \n@@ -5599,7 +5597,7 @@\n \t\t      (match_operand:DF 1 \"cirrus_fp_register\" \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfcmpd%?\\\\tr15, %V0, %V1\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n+  [(set_attr \"type\"   \"mav_farith\")\n    (set_attr \"cirrus\" \"compare\")]\n )\n \n@@ -5620,18 +5618,7 @@\n \t\t    (match_operand:DI 1 \"cirrus_fp_register\" \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfcmp64%?\\\\tr15, %V0, %V1\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"compare\")]\n-)\n-\n-;; Cirrus SI compare instruction\n-(define_insn \"*cirrus_cmpsi_1\"\n-  [(set (reg:CC CC_REGNUM)\n-\t(compare:CC (match_operand:SI 0 \"cirrus_fp_register\" \"v\")\n-\t\t    (match_operand:SI 1 \"cirrus_fp_register\" \"v\")))]\n-  \"TARGET_ARM && TARGET_CIRRUS && 0\"\n-  \"cfcmp32%?\\\\tr15, %V0, %V1\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n+  [(set_attr \"type\"   \"mav_farith\")\n    (set_attr \"cirrus\" \"compare\")]\n )\n "}, {"sha": "07a40a25f9582de2ee8865ef36cd4f601c5f94df", "filename": "gcc/config/arm/cirrus.md", "status": "modified", "additions": 69, "deletions": 87, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0375c668066691ecb7d3e26725d58f5fb29835e/gcc%2Fconfig%2Farm%2Fcirrus.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0375c668066691ecb7d3e26725d58f5fb29835e/gcc%2Fconfig%2Farm%2Fcirrus.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcirrus.md?ref=f0375c668066691ecb7d3e26725d58f5fb29835e", "patch": "@@ -21,41 +21,23 @@\n ;; Boston, MA 02111-1307, USA.\n \n \n-(define_attr \"cirrus_fpu\" \"fpa,fpe2,fpe3,yes\" (const (symbol_ref \"arm_fpu_attr\")))\n-\n-; Classification of each insn\n-; farith\tFloating point arithmetic (4 cycle)\n-; dmult\t\tDouble multiplies (7 cycle)\n-(define_attr \"cirrus_type\" \"normal,farith,dmult\" (const_string \"normal\"))\n-\n ; Cirrus types for invalid insn combinations\n-; no\t\tNot a cirrus insn\n-; yes\t\tCirrus insn\n+; not\t\tNot a cirrus insn\n+; normal\tAny Cirrus insn not covered by the special cases below\n ; double\tcfldrd, cfldr64, cfstrd, cfstr64\n ; compare\tcfcmps, cfcmpd, cfcmp32, cfcmp64\n ; move\t\tcfmvdlr, cfmvdhr, cfmvsr, cfmv64lr, cfmv64hr\n-(define_attr \"cirrus\" \"no,yes,double,compare,move\" (const_string \"no\"))\n-\f\n-(define_function_unit \"cirrus_fpa\" 1 0\n-  (and (eq_attr \"cirrus_fpu\" \"yes\")\n-       (eq_attr \"cirrus_type\" \"farith\")) 4 1)\n-\n-(define_function_unit \"cirrus_fpa\" 1 0\n-  (and (eq_attr \"cirrus_fpu\" \"yes\")\n-       (eq_attr \"cirrus_type\" \"dmult\")) 7 4)\n+(define_attr \"cirrus\" \"not,normal,double,compare,move\" (const_string \"not\"))\n \n-(define_function_unit \"cirrus_fpa\" 1 0\n-  (and (eq_attr \"cirrus_fpu\" \"yes\")\n-       (eq_attr \"cirrus_type\" \"normal\")) 1 1)\n \f\n (define_insn \"cirrus_adddi3\"\n   [(set (match_operand:DI          0 \"cirrus_fp_register\" \"=v\")\n \t(plus:DI (match_operand:DI 1 \"cirrus_fp_register\"  \"v\")\n \t\t (match_operand:DI 2 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfadd64%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_farith\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"*cirrus_addsi3\"\n@@ -64,8 +46,8 @@\n \t\t (match_operand:SI 2 \"cirrus_fp_register\" \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS && 0\"\n   \"cfadd32%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_farith\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n ;; define_insn replaced by define_expand and define_insn\n@@ -86,8 +68,8 @@\n \t\t (match_operand:SF 2 \"cirrus_fp_register\" \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfadds%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_farith\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n ;; define_insn replaced by define_expand and define_insn\n@@ -108,8 +90,8 @@\n \t\t (match_operand:DF 2 \"cirrus_fp_register\" \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfaddd%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_farith\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"cirrus_subdi3\"\n@@ -118,8 +100,8 @@\n \t\t  (match_operand:DI 2 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfsub64%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_farith\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"*cirrus_subsi3_insn\"\n@@ -128,8 +110,8 @@\n \t\t  (match_operand:SI 2 \"cirrus_fp_register\" \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS && 0\"\n   \"cfsub32%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_farith\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n (define_expand \"subsf3\"\n@@ -153,8 +135,8 @@\n \t\t  (match_operand:SF 2 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfsubs%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_farith\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n (define_expand \"subdf3\"\n@@ -178,8 +160,8 @@\n \t\t  (match_operand:DF 2 \"cirrus_fp_register\" \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfsubd%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_farith\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"*cirrus_mulsi3\"\n@@ -188,8 +170,8 @@\n \t\t (match_operand:SI 1 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS && 0\"\n   \"cfmul32%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_farith\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"muldi3\"\n@@ -198,8 +180,8 @@\n \t\t (match_operand:DI 1 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfmul64%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"dmult\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_dmult\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"*cirrus_mulsi3addsi\"\n@@ -210,8 +192,8 @@\n \t  (match_operand:SI          3 \"cirrus_fp_register\"  \"0\")))]\n   \"TARGET_ARM && TARGET_CIRRUS && 0\"\n   \"cfmac32%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_farith\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n ;; Cirrus SI multiply-subtract\n@@ -223,8 +205,8 @@\n \t\t   (match_operand:SI 3 \"cirrus_fp_register\"  \"v\"))))]\n   \"0 && TARGET_ARM && TARGET_CIRRUS\"\n   \"cfmsc32%?\\\\t%V0, %V2, %V3\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_farith\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n (define_expand \"mulsf3\"\n@@ -244,8 +226,8 @@\n \t\t (match_operand:SF 2 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfmuls%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"farith\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_farith\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n (define_expand \"muldf3\"\n@@ -265,8 +247,8 @@\n \t\t (match_operand:DF 2 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfmuld%?\\\\t%V0, %V1, %V2\"\n-  [(set_attr \"cirrus_type\" \"dmult\")\n-   (set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"type\" \"mav_dmult\")\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"cirrus_ashl_const\"\n@@ -275,7 +257,7 @@\n \t\t   (match_operand:SI 2 \"cirrus_shift_const\"  \"\")))]\n   \"TARGET_ARM && TARGET_CIRRUS && 0\"\n   \"cfsh32%?\\\\t%V0, %V1, #%s2\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"cirrus_ashiftrt_const\"\n@@ -284,7 +266,7 @@\n \t\t     (match_operand:SI 2 \"cirrus_shift_const\"  \"\")))]\n   \"TARGET_ARM && TARGET_CIRRUS && 0\"\n   \"cfsh32%?\\\\t%V0, %V1, #-%s2\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"cirrus_ashlsi3\"\n@@ -293,7 +275,7 @@\n \t\t   (match_operand:SI 2 \"register_operand\"    \"r\")))]\n   \"TARGET_ARM && TARGET_CIRRUS && 0\"\n   \"cfrshl32%?\\\\t%V1, %V0, %s2\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"ashldi3_cirrus\"\n@@ -302,7 +284,7 @@\n \t\t   (match_operand:SI 2 \"register_operand\"    \"r\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfrshl64%?\\\\t%V1, %V0, %s2\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"cirrus_ashldi_const\"\n@@ -311,7 +293,7 @@\n \t\t   (match_operand:SI 2 \"cirrus_shift_const\"  \"\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfsh64%?\\\\t%V0, %V1, #%s2\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"cirrus_ashiftrtdi_const\"\n@@ -320,15 +302,15 @@\n \t\t     (match_operand:SI 2 \"cirrus_shift_const\"  \"\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfsh64%?\\\\t%V0, %V1, #-%s2\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"*cirrus_absdi2\"\n   [(set (match_operand:DI         0 \"cirrus_fp_register\" \"=v\")\n \t(abs:DI (match_operand:DI 1 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfabs64%?\\\\t%V0, %V1\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n ;; This doesn't really clobber ``cc''.  Fixme: aldyh.  \n@@ -338,15 +320,15 @@\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfneg64%?\\\\t%V0, %V1\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"*cirrus_negsi2\"\n   [(set (match_operand:SI         0 \"cirrus_fp_register\" \"=v\")\n \t(neg:SI (match_operand:SI 1 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS && 0\"\n   \"cfneg32%?\\\\t%V0, %V1\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_expand \"negsf2\"\n@@ -361,7 +343,7 @@\n \t(neg:SF (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfnegs%?\\\\t%V0, %V1\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_expand \"negdf2\"\n@@ -375,7 +357,7 @@\n \t(neg:DF (match_operand:DF 1 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfnegd%?\\\\t%V0, %V1\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_expand \"abssi2\"\n@@ -393,7 +375,7 @@\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM && TARGET_CIRRUS && 0\"\n   \"cfabs32%?\\\\t%V0, %V1\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_expand \"abssf2\"\n@@ -407,7 +389,7 @@\n         (abs:SF (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfabss%?\\\\t%V0, %V1\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_expand \"absdf2\"\n@@ -421,7 +403,7 @@\n         (abs:DF (match_operand:DF 1 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfabsd%?\\\\t%V0, %V1\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_expand \"floatsisf2\"\n@@ -474,14 +456,14 @@\n \t(float:SF (match_operand:DI 1 \"cirrus_fp_register\" \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfcvt64s%?\\\\t%V0, %V1\"\n-  [(set_attr \"cirrus\" \"yes\")])\n+  [(set_attr \"cirrus\" \"normal\")])\n \n (define_insn \"floatdidf2\"\n   [(set (match_operand:DF 0 \"cirrus_fp_register\" \"=v\")\n \t(float:DF (match_operand:DI 1 \"cirrus_fp_register\" \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfcvt64d%?\\\\t%V0, %V1\"\n-  [(set_attr \"cirrus\" \"yes\")])\n+  [(set_attr \"cirrus\" \"normal\")])\n \n (define_expand \"fix_truncsfsi2\"\n   [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n@@ -506,7 +488,7 @@\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cftruncs32%?\\\\t%Y2, %V1\\;cfmvr64l%?\\\\t%0, %Z2\"\n   [(set_attr \"length\" \"8\")\n-   (set_attr \"cirrus\" \"yes\")]\n+   (set_attr \"cirrus\" \"normal\")]\n )\n \n (define_expand \"fix_truncdfsi2\"\n@@ -546,15 +528,15 @@\n          (match_operand:DF 1 \"cirrus_fp_register\" \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfcvtds%?\\\\t%V0, %V1\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"*cirrus_extendsfdf2\"\n   [(set (match_operand:DF                  0 \"cirrus_fp_register\" \"=v\")\n         (float_extend:DF (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")))]\n   \"TARGET_ARM && TARGET_CIRRUS\"\n   \"cfcvtsd%?\\\\t%V0, %V1\"\n-  [(set_attr \"cirrus\" \"yes\")]\n+  [(set_attr \"cirrus\" \"normal\")]\n )\n \n (define_insn \"*cirrus_arm_movdi\"\n@@ -582,11 +564,11 @@\n     default: abort ();\n     }\n   }\"\n-  [(set_attr \"length\" \"8,8,8,8,8,4,4,4\")\n-   (set_attr \"type\" \"*,load,store2,*,*,load,store2,*\")\n-   (set_attr \"pool_range\" \"*,1020,*,*,*,*,*,*\")\n-   (set_attr \"neg_pool_range\" \"*,1012,*,*,*,*,*,*\")\n-   (set_attr \"cirrus\" \"no,no,no,move,yes,double,double,yes\")]\n+  [(set_attr \"length\"         \"  8,   8,     8,   8,     8,     4,     4,     4\")\n+   (set_attr \"type\"           \"  *,load,store2,   *,     *,  load,store2,     *\")\n+   (set_attr \"pool_range\"     \"  *,1020,     *,   *,     *,     *,     *,     *\")\n+   (set_attr \"neg_pool_range\" \"  *,1012,     *,   *,     *,     *,     *,     *\")\n+   (set_attr \"cirrus\"         \"not, not,   not,move,normal,double,double,normal\")]\n )\n \n ;; Cirrus SI values have been outlawed.  Look in arm.h for the comment\n@@ -608,10 +590,10 @@\n    cfldr32%?\\\\t%V0, %1\n    cfstr32%?\\\\t%V1, %0\n    cfsh32%?\\\\t%V0, %V1, #0\"\n-  [(set_attr \"type\" \"*,*,load,store1,*,*,load,store1,*\")\n-   (set_attr \"pool_range\" \"*,*,4096,*,*,*,1024,*,*\")\n-   (set_attr \"neg_pool_range\" \"*,*,4084,*,*,*,1012,*,*\")\n-   (set_attr \"cirrus\" \"no,no,no,no,move,yes,yes,yes,yes\")]\n+  [(set_attr \"type\"           \"*,  *,  load,store1,   *,     *,  load,store1,     *\")\n+   (set_attr \"pool_range\"     \"*,  *,  4096,     *,   *,     *,  1024,     *,     *\")\n+   (set_attr \"neg_pool_range\" \"*,  *,  4084,     *,   *,     *,  1012,     *,     *\")\n+   (set_attr \"cirrus\"         \"not,not, not,   not,move,normal,normal,normal,normal\")]\n )\n \n (define_insn \"*cirrus_movsf_hard_insn\"\n@@ -629,11 +611,11 @@\n    mov%?\\\\t%0, %1\n    ldr%?\\\\t%0, %1\\\\t%@ float\n    str%?\\\\t%1, %0\\\\t%@ float\"\n-  [(set_attr \"length\" \"*,*,*,*,*,4,4,4\")\n-   (set_attr \"type\" \"*,load,*,*,store1,*,load,store1\")\n-   (set_attr \"pool_range\" \"*,*,*,*,*,*,4096,*\")\n-   (set_attr \"neg_pool_range\" \"*,*,*,*,*,*,4084,*\")\n-   (set_attr \"cirrus\" \"yes,yes,move,yes,yes,no,no,no\")]\n+  [(set_attr \"length\"         \"     *,     *,   *,     *,     *,  4,   4,     4\")\n+   (set_attr \"type\"           \"     *,  load,   *,     *,store1,  *,load,store1\")\n+   (set_attr \"pool_range\"     \"     *,     *,   *,     *,     *,  *,4096,     *\")\n+   (set_attr \"neg_pool_range\" \"     *,     *,   *,     *,     *,  *,4084,     *\")\n+   (set_attr \"cirrus\"         \"normal,normal,move,normal,normal,not, not,   not\")]\n )\n \n (define_insn \"*cirrus_movdf_hard_insn\"\n@@ -658,10 +640,10 @@\n     default: abort ();\n     }\n   }\"\n-  [(set_attr \"type\" \"load,store2,*,store2,load,*,load,*,*,store2\")\n-   (set_attr \"length\" \"4,4,8,8,8,4,4,8,8,4\")\n-   (set_attr \"pool_range\" \"*,*,*,*,252,*,*,*,*,*\")\n-   (set_attr \"neg_pool_range\" \"*,*,*,*,244,*,*,*,*,*\")\n-   (set_attr \"cirrus\" \"no,no,no,no,no,yes,double,move,yes,double\")]\n+  [(set_attr \"type\"           \"load,store2,  *,store2,load,     *,  load,   *,     *,store2\")\n+   (set_attr \"length\"         \"   4,     4,  8,     8,   8,     4,     4,   8,     8,     4\")\n+   (set_attr \"pool_range\"     \"   *,     *,  *,     *, 252,     *,     *,   *,     *,     *\")\n+   (set_attr \"neg_pool_range\" \"   *,     *,  *,     *, 244,     *,     *,   *,     *,     *\")\n+   (set_attr \"cirrus\"         \" not,   not,not,   not, not,normal,double,move,normal,double\")]\n )\n "}]}