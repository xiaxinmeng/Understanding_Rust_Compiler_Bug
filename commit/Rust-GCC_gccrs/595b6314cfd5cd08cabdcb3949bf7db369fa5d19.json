{"sha": "595b6314cfd5cd08cabdcb3949bf7db369fa5d19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk1YjYzMTRjZmQ1Y2QwOGNhYmRjYjM5NDliZjdkYjM2OWZhNWQxOQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-12-07T20:13:34Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-12-07T20:13:34Z"}, "message": "alpha.c (alpha_expand_unaligned_store, [...]): Use constm1_rtx in place of call to immed_double_const.\n\n\t* alpha.c (alpha_expand_unaligned_store,\n\talpha_expand_unaligned_store_words): Use constm1_rtx in place of\n\tcall to immed_double_const.\n\nFrom-SVN: r47770", "tree": {"sha": "407d05d6a3ced235f8fe7dfa20dfdd6917856566", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/407d05d6a3ced235f8fe7dfa20dfdd6917856566"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/595b6314cfd5cd08cabdcb3949bf7db369fa5d19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/595b6314cfd5cd08cabdcb3949bf7db369fa5d19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/595b6314cfd5cd08cabdcb3949bf7db369fa5d19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/595b6314cfd5cd08cabdcb3949bf7db369fa5d19/comments", "author": null, "committer": null, "parents": [{"sha": "286f759e56a0d3e69c928755411680ec202df51d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/286f759e56a0d3e69c928755411680ec202df51d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/286f759e56a0d3e69c928755411680ec202df51d"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "f326c578489471338f538dd21e964ace32c159e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/595b6314cfd5cd08cabdcb3949bf7db369fa5d19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/595b6314cfd5cd08cabdcb3949bf7db369fa5d19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=595b6314cfd5cd08cabdcb3949bf7db369fa5d19", "patch": "@@ -1,3 +1,9 @@\n+2001-12-07  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* alpha.c (alpha_expand_unaligned_store,\n+\talpha_expand_unaligned_store_words): Use constm1_rtx in place of\n+\tcall to immed_double_const.\n+\n 2001-12-07  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* doc/extend.texi (Variable Attributes): Document vector_size."}, {"sha": "e545182474150cce7067a55902f11f12d340f754", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/595b6314cfd5cd08cabdcb3949bf7db369fa5d19/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/595b6314cfd5cd08cabdcb3949bf7db369fa5d19/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=595b6314cfd5cd08cabdcb3949bf7db369fa5d19", "patch": "@@ -3628,7 +3628,7 @@ alpha_expand_unaligned_store (dst, src, size, ofs)\n #if HOST_BITS_PER_WIDE_INT == 32\n \t    rtx msk = immed_double_const (0xffffffff, 0xffffffff, DImode);\n #else\n-\t    rtx msk = immed_double_const (0xffffffffffffffff, 0, DImode);\n+\t    rtx msk = constm1_rtx;\n #endif\n \t    emit_insn (gen_mskxl_be (dsth, dsth, msk, addr));\n \t  }\n@@ -3675,7 +3675,7 @@ alpha_expand_unaligned_store (dst, src, size, ofs)\n #if HOST_BITS_PER_WIDE_INT == 32\n \t    rtx msk = immed_double_const (0xffffffff, 0xffffffff, DImode);\n #else\n-\t    rtx msk = immed_double_const (0xffffffffffffffff, 0, DImode);\n+\t    rtx msk = constm1_rtx;\n #endif\n \t    emit_insn (gen_mskxl_le (dstl, dstl, msk, addr));\n \t  }\n@@ -3807,7 +3807,7 @@ alpha_expand_unaligned_store_words (data_regs, dmem, words, ofs)\n #if HOST_BITS_PER_WIDE_INT == 32\n   rtx const im1 = immed_double_const (0xffffffff, 0xffffffff, DImode);\n #else\n-  rtx const im1 = immed_double_const (0xffffffffffffffff, 0, DImode);\n+  rtx const im1 = constm1_rtx;\n #endif\n   rtx ins_tmps[MAX_MOVE_WORDS];\n   rtx st_tmp_1, st_tmp_2, dreg;"}]}