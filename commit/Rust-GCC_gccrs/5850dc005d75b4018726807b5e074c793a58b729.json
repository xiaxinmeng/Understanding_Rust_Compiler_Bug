{"sha": "5850dc005d75b4018726807b5e074c793a58b729", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg1MGRjMDA1ZDc1YjQwMTg3MjY4MDdiNWUwNzRjNzkzYTU4YjcyOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-01-26T03:13:13Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-01-26T03:13:13Z"}, "message": "sparc.c (output_cbranch): Fix accidental squashing of the fp branch pre-delay nop.\n\n        * sparc.c (output_cbranch): Fix accidental squashing of the\n        fp branch pre-delay nop.\n\nFrom-SVN: r31625", "tree": {"sha": "15e16a4e408c579329781b7a74e3e1c1cfa4745f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15e16a4e408c579329781b7a74e3e1c1cfa4745f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5850dc005d75b4018726807b5e074c793a58b729", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5850dc005d75b4018726807b5e074c793a58b729", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5850dc005d75b4018726807b5e074c793a58b729", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5850dc005d75b4018726807b5e074c793a58b729/comments", "author": null, "committer": null, "parents": [{"sha": "7913f3d028aaa490bb6cad8817f1d0ba25d5970e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7913f3d028aaa490bb6cad8817f1d0ba25d5970e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7913f3d028aaa490bb6cad8817f1d0ba25d5970e"}], "stats": {"total": 206, "additions": 108, "deletions": 98}, "files": [{"sha": "6a7dccaadf89791b445127d22e8b56fafbc47832", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5850dc005d75b4018726807b5e074c793a58b729/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5850dc005d75b4018726807b5e074c793a58b729/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5850dc005d75b4018726807b5e074c793a58b729", "patch": "@@ -1,3 +1,8 @@\n+2000-01-25  Richard Henderson  <rth@cygnus.com>\n+\n+\t* sparc.c (output_cbranch): Fix accidental squashing of the\n+\tfp branch pre-delay nop.\n+\n 2000-01-25  Richard Henderson  <rth@cygnus.com>\n \n \t* tree.def (UNNE_EXPR): Remove."}, {"sha": "88502a3ec272e38fbe938abe50f8d038d7ee33cb", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 103, "deletions": 98, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5850dc005d75b4018726807b5e074c793a58b729/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5850dc005d75b4018726807b5e074c793a58b729/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=5850dc005d75b4018726807b5e074c793a58b729", "patch": "@@ -4641,15 +4641,6 @@ output_cbranch (op, label, reversed, annul, noop, insn)\n   const char *branch;\n   int labeloff, spaces = 8;\n \n-  /* ??? !v9: FP branches cannot be preceded by another floating point insn.\n-     Because there is currently no concept of pre-delay slots, we can fix\n-     this only by always emitting a nop before a floating point branch.  */\n-\n-  if ((mode == CCFPmode || mode == CCFPEmode) && ! TARGET_V9)\n-    strcpy (string, \"nop\\n\\t\");\n-  else\n-    string[0] = '\\0';\n-\n   if (reversed)\n     {\n       /* Reversal of FP compares takes care -- an ordered compare\n@@ -4662,98 +4653,112 @@ output_cbranch (op, label, reversed, annul, noop, insn)\n \n   /* Start by writing the branch condition.  */\n   if (mode == CCFPmode || mode == CCFPEmode)\n-    switch (code)\n-      {\n-      case NE:\n-\tbranch = \"fbne\";\n-\tbreak;\n-      case EQ:\n-\tbranch = \"fbe\";\n-\tbreak;\n-      case GE:\n-\tbranch = \"fbge\";\n-\tbreak;\n-      case GT:\n-\tbranch = \"fbg\";\n-\tbreak;\n-      case LE:\n-\tbranch = \"fble\";\n-\tbreak;\n-      case LT:\n-\tbranch = \"fbl\";\n-\tbreak;\n-      case UNORDERED:\n-\tbranch = \"fbu\";\n-\tbreak;\n-      case ORDERED:\n-\tbranch = \"fbo\";\n-\tbreak;\n-      case UNGT:\n-\tbranch = \"fbug\";\n-\tbreak;\n-      case UNLT:\n-\tbranch = \"fbul\";\n-\tbreak;\n-      case UNEQ:\n-\tbranch = \"fbue\";\n-\tbreak;\n-      case UNGE:\n-\tbranch = \"fbuge\";\n-\tbreak;\n-      case UNLE:\n-\tbranch = \"fbule\";\n-\tbreak;\n-      case LTGT:\n-\tbranch = \"fblg\";\n-\tbreak;\n+    {\n+      switch (code)\n+\t{\n+\tcase NE:\n+\t  branch = \"fbne\";\n+\t  break;\n+\tcase EQ:\n+\t  branch = \"fbe\";\n+\t  break;\n+\tcase GE:\n+\t  branch = \"fbge\";\n+\t  break;\n+\tcase GT:\n+\t  branch = \"fbg\";\n+\t  break;\n+\tcase LE:\n+\t  branch = \"fble\";\n+\t  break;\n+\tcase LT:\n+\t  branch = \"fbl\";\n+\t  break;\n+\tcase UNORDERED:\n+\t  branch = \"fbu\";\n+\t  break;\n+\tcase ORDERED:\n+\t  branch = \"fbo\";\n+\t  break;\n+\tcase UNGT:\n+\t  branch = \"fbug\";\n+\t  break;\n+\tcase UNLT:\n+\t  branch = \"fbul\";\n+\t  break;\n+\tcase UNEQ:\n+\t  branch = \"fbue\";\n+\t  break;\n+\tcase UNGE:\n+\t  branch = \"fbuge\";\n+\t  break;\n+\tcase UNLE:\n+\t  branch = \"fbule\";\n+\t  break;\n+\tcase LTGT:\n+\t  branch = \"fblg\";\n+\t  break;\n \n-      default:\n-\tabort ();\n-      }\n+\tdefault:\n+\t  abort ();\n+\t}\n+\n+      /* ??? !v9: FP branches cannot be preceded by another floating point\n+\t insn.  Because there is currently no concept of pre-delay slots,\n+\t we can fix this only by always emitting a nop before a floating\n+\t point branch.  */\n+\n+      string[0] = '\\0';\n+      if (! TARGET_V9)\n+\tstrcpy (string, \"nop\\n\\t\");\n+      strcat (string, branch);\n+    }\n   else\n-    switch (code)\n-      {\n-      case NE:\n-\tbranch = \"bne\";\n-\tbreak;\n-      case EQ:\n-\tbranch = \"be\";\n-\tbreak;\n-      case GE:\n-\tif (mode == CC_NOOVmode)\n-\t  branch = \"bpos\";\n-\telse\n-\t  branch = \"bge\";\n-\tbreak;\n-      case GT:\n-\tbranch = \"bg\";\n-\tbreak;\n-      case LE:\n-\tbranch = \"ble\";\n-\tbreak;\n-      case LT:\n-\tif (mode == CC_NOOVmode)\n-\t  branch = \"bneg\";\n-\telse\n-\t  branch = \"bl\";\n-\tbreak;\n-      case GEU:\n-\tbranch = \"bgeu\";\n-\tbreak;\n-      case GTU:\n-\tbranch = \"bgu\";\n-\tbreak;\n-      case LEU:\n-\tbranch = \"bleu\";\n-\tbreak;\n-      case LTU:\n-\tbranch = \"blu\";\n-\tbreak;\n+    {\n+      switch (code)\n+\t{\n+\tcase NE:\n+\t  branch = \"bne\";\n+\t  break;\n+\tcase EQ:\n+\t  branch = \"be\";\n+\t  break;\n+\tcase GE:\n+\t  if (mode == CC_NOOVmode)\n+\t    branch = \"bpos\";\n+\t  else\n+\t    branch = \"bge\";\n+\t  break;\n+\tcase GT:\n+\t  branch = \"bg\";\n+\t  break;\n+\tcase LE:\n+\t  branch = \"ble\";\n+\t  break;\n+\tcase LT:\n+\t  if (mode == CC_NOOVmode)\n+\t    branch = \"bneg\";\n+\t  else\n+\t    branch = \"bl\";\n+\t  break;\n+\tcase GEU:\n+\t  branch = \"bgeu\";\n+\t  break;\n+\tcase GTU:\n+\t  branch = \"bgu\";\n+\t  break;\n+\tcase LEU:\n+\t  branch = \"bleu\";\n+\t  break;\n+\tcase LTU:\n+\t  branch = \"blu\";\n+\t  break;\n \n-      default:\n-\tabort ();\n-      }\n-  strcpy (string, branch);\n+\tdefault:\n+\t  abort ();\n+\t}\n+      strcpy (string, branch);\n+    }\n   spaces -= strlen (branch);\n \n   /* Now add the annulling, the label, and a possible noop.  */"}]}