{"sha": "e2972de5377c352200a84c0f3055b099631f3dbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI5NzJkZTUzNzdjMzUyMjAwYTg0YzBmMzA1NWIwOTk2MzFmM2RiYw==", "commit": {"author": {"name": "Rask Ingemann Lambertsen", "email": "rask@sygehus.dk", "date": "2007-09-18T13:24:44Z"}, "committer": {"name": "Rask Ingemann Lambertsen", "email": "rask@gcc.gnu.org", "date": "2007-09-18T13:24:44Z"}, "message": "re PR target/33388 (fr30: ICE: RTL check: expected code 'reg', have 'subreg' in rhs_regno, at rtl.h:983)\n\n\tPR target/33388\n\tPR target/33397\n\t* config/fr30/fr30.md (addsi3): Check REG_P() before calling REGNO().\n\t(addsi_small_int): Likewise.\n\t(addsi_big_int): Use rtx_equal_p() instead of REGNO() comparison.\n\t(one_cmplsi2): Likewise.\n\t(negsi2): Delete.\n\t(enter_func): Expand insn using hard_frame_pointer_rtx and\n\tstack_pointer_rtx.\n\t(*enter_func): New.\n\t* config/fr30/fr30.c (fr30_expand_prologue): Check for\n\thard_frame_pointer_rtx instead of using REGNO() check.\n\tProperly sign extend GEN_INT() argument.\n\nFrom-SVN: r128577", "tree": {"sha": "3793e6188f7bc696e01268348adc6d0ef3bf4772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3793e6188f7bc696e01268348adc6d0ef3bf4772"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2972de5377c352200a84c0f3055b099631f3dbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2972de5377c352200a84c0f3055b099631f3dbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2972de5377c352200a84c0f3055b099631f3dbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2972de5377c352200a84c0f3055b099631f3dbc/comments", "author": null, "committer": null, "parents": [{"sha": "da398bb590fc4568f0d00348f793839148ab593e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da398bb590fc4568f0d00348f793839148ab593e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da398bb590fc4568f0d00348f793839148ab593e"}], "stats": {"total": 88, "additions": 44, "deletions": 44}, "files": [{"sha": "5fc7710842f6c839a20a6f7ec2f6f96042703398", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2972de5377c352200a84c0f3055b099631f3dbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2972de5377c352200a84c0f3055b099631f3dbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2972de5377c352200a84c0f3055b099631f3dbc", "patch": "@@ -1,3 +1,19 @@\n+2007-09-18  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n+\n+\tPR target/33388\n+\tPR target/33397\n+\t* config/fr30/fr30.md (addsi3): Check REG_P() before calling REGNO().\n+\t(addsi_small_int): Likewise.\n+\t(addsi_big_int): Use rtx_equal_p() instead of REGNO() comparison.\n+\t(one_cmplsi2): Likewise.\n+\t(negsi2): Delete.\n+\t(enter_func): Expand insn using hard_frame_pointer_rtx and\n+\tstack_pointer_rtx.\n+\t(*enter_func): New.\n+\t* config/fr30/fr30.c (fr30_expand_prologue): Check for\n+\thard_frame_pointer_rtx instead of using REGNO() check.\n+\tProperly sign extend GEN_INT() argument.\n+\n 2007-09-18  Roman Zippel <zippel@linux-m68k.org>\n \n \t* config/m68k/m68k.c (override_options): Remove USE_GAS,"}, {"sha": "343dd02ba09d48c66408d43a11f5ec687054d95e", "filename": "gcc/config/fr30/fr30.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2972de5377c352200a84c0f3055b099631f3dbc/gcc%2Fconfig%2Ffr30%2Ffr30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2972de5377c352200a84c0f3055b099631f3dbc/gcc%2Fconfig%2Ffr30%2Ffr30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.c?ref=e2972de5377c352200a84c0f3055b099631f3dbc", "patch": "@@ -308,7 +308,7 @@ fr30_expand_prologue (void)\n \t\t     G++ testsuite.  */\n \t\t  if (! frame_pointer_needed\n \t\t      && GET_CODE (part) == SET\n-\t\t      && REGNO (SET_DEST (part)) == HARD_FRAME_POINTER_REGNUM)\n+\t\t      && SET_DEST (part) == hard_frame_pointer_rtx)\n \t\t    RTX_FRAME_RELATED_P (part) = 0;\n \t\t  else\n \t\t    RTX_FRAME_RELATED_P (part) = 1;\n@@ -336,7 +336,8 @@ fr30_expand_prologue (void)\n     ; /* Nothing to do.  */\n   else if (current_frame_info.frame_size <= 512)\n     {\n-      insn = emit_insn (gen_add_to_stack (GEN_INT (- current_frame_info.frame_size)));\n+      insn = emit_insn (gen_add_to_stack\n+\t\t\t (GEN_INT (- (signed) current_frame_info.frame_size)));\n       RTX_FRAME_RELATED_P (insn) = 1;\n     }\n   else"}, {"sha": "a198ea3544dbadcfc84d6f497ccd21441070e55a", "filename": "gcc/config/fr30/fr30.md", "status": "modified", "additions": 25, "deletions": 42, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2972de5377c352200a84c0f3055b099631f3dbc/gcc%2Fconfig%2Ffr30%2Ffr30.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2972de5377c352200a84c0f3055b099631f3dbc/gcc%2Fconfig%2Ffr30%2Ffr30.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.md?ref=e2972de5377c352200a84c0f3055b099631f3dbc", "patch": "@@ -660,7 +660,8 @@\n     emit_insn (gen_addsi_big_int (operands[0], operands[1], operands[2]));\n   else if (INTVAL (operands[2]) >= -16\n \t   && INTVAL (operands[2]) <= 15\n-\t   && (!REGNO_PTR_FRAME_P (REGNO (operands[1]))\n+\t   && (!REG_P (operands[1])\n+\t       || !REGNO_PTR_FRAME_P (REGNO (operands[1]))\n \t       || REGNO (operands[1]) == STACK_POINTER_REGNUM))\n     emit_insn (gen_addsi_small_int (operands[0], operands[1], operands[2]));\n   else\n@@ -684,7 +685,8 @@\n   [(set (match_operand:SI 0 \"register_operand\"              \"=r,r\")\n \t(plus:SI (match_operand:SI 1 \"register_operand\"      \"0,0\")\n \t\t (match_operand:SI 2 \"add_immediate_operand\" \"I,J\")))]\n-  \"! REGNO_PTR_FRAME_P (REGNO (operands[1]))\n+  \"!REG_P (operands[1])\n+   || !REGNO_PTR_FRAME_P (REGNO (operands[1]))\n    || REGNO (operands[1]) == STACK_POINTER_REGNUM\"\n   \"@\n    addn\t%2, %0\n@@ -698,7 +700,7 @@\n   \"\"\n   \"{\n   /* Cope with the possibility that ops 0 and 1 are the same register.  */\n-  if (REGNO (operands[0]) == REGNO (operands[1]))\n+  if (rtx_equal_p (operands[0], operands[1]))\n     {\n       if (reload_in_progress || reload_completed)\n         {\n@@ -804,43 +806,6 @@\n )\n \n ;;}}}\n-;;{{{ Negation \n-\n-(define_expand \"negsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\"         \"\")\n-\t(neg:SI (match_operand:SI 1 \"register_operand\" \"\")))]\n-  \"\"\n-  \"{\n-  if (REGNO (operands[0]) == REGNO (operands[1]))\n-    {\n-      if (reload_in_progress || reload_completed)\n-        {\n-\t  rtx reg = gen_rtx_REG (SImode, 0/*COMPILER_SCRATCH_REGISTER*/);\n-\t  \n-\t  emit_insn (gen_movsi (reg, const0_rtx));\n-\t  emit_insn (gen_subsi3 (reg, reg, operands[0]));\n-\t  emit_insn (gen_movsi (operands[0], reg));\n-\t}\n-      else\n-\t{\n-\t  rtx reg = gen_reg_rtx (SImode);\n-\t\n-\t  emit_insn (gen_movsi (reg, const0_rtx));\n-\t  emit_insn (gen_subsi3 (reg, reg, operands[0]));\n-\t  emit_insn (gen_movsi (operands[0], reg));\n-\t}\n-    }\n-  else\n-    {\n-      emit_insn (gen_movsi_internal (operands[0], const0_rtx));\n-      emit_insn (gen_subsi3 (operands[0], operands[0], operands[1]));\n-    }\n-  DONE;\n-  }\"\n-)\n-\n-;;}}}\n-\n ;;}}} \f\n ;;{{{ Shifts \n \n@@ -922,7 +887,7 @@\n \t(not:SI (match_operand:SI 1 \"register_operand\" \"\")))]\n   \"\"\n   \"{\n-  if (REGNO (operands[0]) == REGNO (operands[1]))\n+  if (rtx_equal_p (operands[0], operands[1]))\n     {\n       if (reload_in_progress || reload_completed)\n         {\n@@ -1406,7 +1371,25 @@\n   \"leave\"\n )\n \n-(define_insn \"enter_func\"\n+(define_expand \"enter_func\"\n+  [(parallel\n+  [(set:SI (mem:SI (minus:SI (match_dup 1)\n+\t\t\t     (const_int 4)))\n+\t   (match_dup 2))\n+   (set:SI (match_dup 2)\n+\t   (minus:SI (match_dup 1)\n+\t\t     (const_int 4)))\n+   (set:SI (match_dup 1)\n+\t   (minus:SI (match_dup 1)\n+\t\t     (match_operand:SI 0 \"immediate_operand\")))]\n+  )]\n+  \"\"\n+{\n+  operands[1] = stack_pointer_rtx;\n+  operands[2] = hard_frame_pointer_rtx;\n+})\n+\n+(define_insn \"*enter_func\"\n   [(set:SI (mem:SI (minus:SI (reg:SI 15)\n \t\t\t     (const_int 4)))\n \t   (reg:SI 14))"}]}