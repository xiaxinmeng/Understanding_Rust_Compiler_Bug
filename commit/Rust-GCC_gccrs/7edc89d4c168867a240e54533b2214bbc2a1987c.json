{"sha": "7edc89d4c168867a240e54533b2214bbc2a1987c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VkYzg5ZDRjMTY4ODY3YTI0MGU1NDUzM2IyMjE0YmJjMmExOTg3Yw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2008-04-23T05:50:54Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2008-04-23T05:50:54Z"}, "message": "re PR fortran/35988 (run-time abort for MATMUL of run-time zero sized array)\n\n2008-04-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/35988\n\t* m4/matmul.m4:  Only issue a runtime error if extents are\n\tnon-zero.\n\t* generated/matmul_i1.c:  Regenerated.\n\t* generated/matmul_i2.c:  Regenerated.\n\t* generated/matmul_i4.c:  Regenerated.\n\t* generated/matmul_i8.c:  Regenerated.\n\t* generated/matmul_i16.c:  Regenerated.\n\t* generated/matmul_r4.c:  Regenerated.\n\t* generated/matmul_r8.c:  Regenerated.\n\t* generated/matmul_r10.c:  Regenerated.\n\t* generated/matmul_r16.c:  Regenerated.\n\t* generated/matmul_c4.c:  Regenerated.\n\t* generated/matmul_c8.c:  Regenerated.\n\t* generated/matmul_c10.c:  Regenerated.\n\t* generated/matmul_c16.c:  Regenerated.\n\n2008-04-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/35988\n\t* gfortran.dg/matmul_7.f90:  New test.\n\nFrom-SVN: r134579", "tree": {"sha": "bd46eec170f8c0e3cf03ec5971a682da2e37e83a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd46eec170f8c0e3cf03ec5971a682da2e37e83a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7edc89d4c168867a240e54533b2214bbc2a1987c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7edc89d4c168867a240e54533b2214bbc2a1987c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7edc89d4c168867a240e54533b2214bbc2a1987c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7edc89d4c168867a240e54533b2214bbc2a1987c/comments", "author": null, "committer": null, "parents": [{"sha": "d5555b955d4a769168475e623597cf822d8fd82a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5555b955d4a769168475e623597cf822d8fd82a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5555b955d4a769168475e623597cf822d8fd82a"}], "stats": {"total": 134, "additions": 120, "deletions": 14}, "files": [{"sha": "7896b742e9e85d5227704715cacf4c8ea9cd4238", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -1,3 +1,8 @@\n+2008-04-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/35988\n+\t* gfortran.dg/matmul_7.f90:  New test.\n+\n 2008-04-22  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.dg/struct/wo_prof_global_var.c: Initialize array."}, {"sha": "b3f925a21457f2c046ff477e14183204fd854d60", "filename": "gcc/testsuite/gfortran.dg/matmul_7.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_7.f90?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do run }\n+! PR 35988 - failure on some zero-sized matmuls.\n+! Test case contributed by Dick Hendrickson.\n+\n+       program try_gf1003\n+\n+      call       gf1003a(  9,  8,  6)   \n+      call       gf1003b(  9,  8,  6)   \n+      call       gf1003c(  9,  8,  6)   !fails\n+      call       gf1003d(  9,  8,  6)   !fails\n+      end program\n+\n+\n+      SUBROUTINE GF1003a(nf9,nf8,nf6)\n+      REAL RDA(3,2)\n+      REAL RDA1(3,5)\n+      REAL RDA2(5,2)\n+      RDA = MATMUL(RDA1(:, 9:8),RDA2( 8:6,:))\n+      END SUBROUTINE\n+\n+      SUBROUTINE GF1003b(nf9,nf8,nf6)\n+      REAL RDA(3,2)\n+      REAL RDA1(3,0)\n+      REAL RDA2(0,2)\n+      RDA = MATMUL(RDA1(:,NF9:NF8),RDA2(NF9:NF8,:))\n+      END SUBROUTINE\n+\n+      SUBROUTINE GF1003c(nf9,nf8,nf6)\n+      REAL RDA(3,2)\n+      REAL RDA1(3,0)\n+      REAL RDA2(0,2)\n+      RDA = MATMUL(RDA1(:,NF9:NF8),RDA2(NF8:NF6,:))\n+      END SUBROUTINE\n+\n+      SUBROUTINE GF1003d(nf9,nf8,nf6)\n+      REAL RDA(3,2)\n+      REAL RDA1(3,5)\n+      REAL RDA2(5,2)\n+      RDA = MATMUL(RDA1(:,NF9:NF8),RDA2(NF8:NF6,:))\n+      END SUBROUTINE"}, {"sha": "3d6ed1a8e1b3972598e154d088e45827f8f23171", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -1,3 +1,22 @@\n+2008-04-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/35988\n+\t* m4/matmul.m4:  Only issue a runtime error if extents are\n+\tnon-zero.\n+\t* generated/matmul_i1.c:  Regenerated.\n+\t* generated/matmul_i2.c:  Regenerated.\n+\t* generated/matmul_i4.c:  Regenerated.\n+\t* generated/matmul_i8.c:  Regenerated.\n+\t* generated/matmul_i16.c:  Regenerated.\n+\t* generated/matmul_r4.c:  Regenerated.\n+\t* generated/matmul_r8.c:  Regenerated.\n+\t* generated/matmul_r10.c:  Regenerated.\n+\t* generated/matmul_r16.c:  Regenerated.\n+\t* generated/matmul_c4.c:  Regenerated.\n+\t* generated/matmul_c8.c:  Regenerated.\n+\t* generated/matmul_c10.c:  Regenerated.\n+\t* generated/matmul_c16.c:  Regenerated.\n+\n 2008-04-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* acinclude.m4 (LIBGFOR_CHECK_ATTRIBUTE_VISIBILITY)"}, {"sha": "08c2044dd8b98602fb079518b4a805d7ee50c298", "filename": "libgfortran/generated/matmul_c10.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c10.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_c10 (gfc_array_c10 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "6a2a63909678c1ea66f9175029ded72f24f84b78", "filename": "libgfortran/generated/matmul_c16.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c16.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_c16 (gfc_array_c16 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "6dcf6fea56a9fdcf49c9b7545556be5effbb56af", "filename": "libgfortran/generated/matmul_c4.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c4.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_c4 (gfc_array_c4 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "8bc619d879f68c240adb42cff3a74b9a681dd671", "filename": "libgfortran/generated/matmul_c8.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c8.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_c8 (gfc_array_c8 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "ca16ed40b2f4dc79fadedaf4eac7cdbc806f3dce", "filename": "libgfortran/generated/matmul_i1.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i1.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_i1 (gfc_array_i1 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "33c62ae41529c86fa3d766e3816ab00e5e2cd729", "filename": "libgfortran/generated/matmul_i16.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i16.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_i16 (gfc_array_i16 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "e3119acbd41fb1ac394defd6fb8adff30bd1cd6b", "filename": "libgfortran/generated/matmul_i2.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i2.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_i2 (gfc_array_i2 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "a1b8c50f051173c6ef321f5cacc61f541294822f", "filename": "libgfortran/generated/matmul_i4.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i4.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_i4 (gfc_array_i4 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "eee73ac88f031ada9285228377f85d88e541b2e8", "filename": "libgfortran/generated/matmul_i8.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i8.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_i8 (gfc_array_i8 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "58dfe75814f45fbed100cd054b4b0dea01a633d1", "filename": "libgfortran/generated/matmul_r10.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r10.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_r10 (gfc_array_r10 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "a6a93be91fb5dfa16f31274c0308c8ba84370ea3", "filename": "libgfortran/generated/matmul_r16.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r16.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_r16 (gfc_array_r16 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "1154d41a33f2148c599cbf240b8c23dbd0521b13", "filename": "libgfortran/generated/matmul_r4.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r4.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_r4 (gfc_array_r4 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "7bce2533b418cd720b2a500daf0a4e53d909d24c", "filename": "libgfortran/generated/matmul_r8.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fgenerated%2Fmatmul_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r8.c?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -170,7 +170,10 @@ matmul_r8 (gfc_array_r8 * const restrict retarray,\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "181efa3b654b85c3c03b0581520549dd587881d1", "filename": "libgfortran/m4/matmul.m4", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fm4%2Fmatmul.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7edc89d4c168867a240e54533b2214bbc2a1987c/libgfortran%2Fm4%2Fmatmul.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmul.m4?ref=7edc89d4c168867a240e54533b2214bbc2a1987c", "patch": "@@ -172,7 +172,10 @@ sinclude(`matmul_asm_'rtype_code`.m4')dnl\n     }\n \n   if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n-    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    {\n+      if (count > 0 || b->dim[0].ubound + 1 - b->dim[0].lbound > 0)\n+\truntime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n+    }\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}]}