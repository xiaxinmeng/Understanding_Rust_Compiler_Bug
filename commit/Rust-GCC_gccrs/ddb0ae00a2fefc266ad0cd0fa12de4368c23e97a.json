{"sha": "ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRiMGFlMDBhMmZlZmMyNjZhZDBjZDBmYTEyZGU0MzY4YzIzZTk3YQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-02-14T05:42:30Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-02-14T05:42:30Z"}, "message": "emit-rtl.c (init_emit): Use ggc_alloc for regno_reg_rtx.\n\n\t* emit-rtl.c (init_emit): Use ggc_alloc for regno_reg_rtx.\n\t* function.h (struct emit_status): Length of regno_pointer_align\n\tand x_regno_reg_rtx as seen by gengtype is only x_reg_rtx_no,\n\tnot regno_pointer_align_length (i.e. length actually used, not\n\tlength as allocated)\n\n\t* config/i386/i386.c (struct stack_local_entry): New.\n\t(struct machine_function): Replace huge array with alist.\n\t(assign_386_stack_local): Change to match.\n\nFrom-SVN: r62891", "tree": {"sha": "4b9df061474023e56306cab98f5146192dd5654b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b9df061474023e56306cab98f5146192dd5654b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a/comments", "author": null, "committer": null, "parents": [{"sha": "c20b55c0cfd2fc6e22bd8cc1d027839d53a5048a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c20b55c0cfd2fc6e22bd8cc1d027839d53a5048a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c20b55c0cfd2fc6e22bd8cc1d027839d53a5048a"}], "stats": {"total": 73, "additions": 52, "deletions": 21}, "files": [{"sha": "3cfab102d17b1a63de6c9230009de56182159320", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a", "patch": "@@ -1,3 +1,15 @@\n+2003-02-13  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* emit-rtl.c (init_emit): Use ggc_alloc for regno_reg_rtx.\n+\t* function.h (struct emit_status): Length of regno_pointer_align\n+\tand x_regno_reg_rtx as seen by gengtype is only x_reg_rtx_no,\n+\tnot regno_pointer_align_length (i.e. length actually used, not\n+\tlength as allocated)\n+\n+\t* config/i386/i386.c (struct stack_local_entry): New.\n+\t(struct machine_function): Replace huge array with alist.\n+\t(assign_386_stack_local): Change to match.\n+\n 2003-02-13  John David Anglin  <dave.anglin@nrc-crnc.gc.ca>\n \n \t* inclhack.def (hpux_long_double): Tighten select and add bypass\n@@ -47,7 +59,7 @@\n \t* config/h8300/h8300.md (a peephole2): New.\n \n 2003-02-13  Robert Lipe <robertlipe@usa.net>\n-            Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n+\t    Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* doc/install.texi (Specific): Update three SCO-related URLs.\n \n@@ -80,12 +92,12 @@\n \n 2003-02-12  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/spe.h: Add casts to the arguments of the following\n-        macros: evfsabs, evfsnabs, evfsneg, evfsadd, evfssub, evfsmul,\n-        evfsdiv, evfscfui, evfscfsi evfscfuf evfscfsf, evfsctui, evfsctsi,\n-        evfsctuf, evfsctsf, evfsctuiz, evfsctsiz, __ev_get_upper*,\n-        __ev_get_lower*, __ev_get_u32, __ev_get_s32, __ev_get_fs,\n-        __ev_get_u16, __ev_get_s16.\n+\t* config/rs6000/spe.h: Add casts to the arguments of the following\n+\tmacros: evfsabs, evfsnabs, evfsneg, evfsadd, evfssub, evfsmul,\n+\tevfsdiv, evfscfui, evfscfsi evfscfuf evfscfsf, evfsctui, evfsctsi,\n+\tevfsctuf, evfsctsf, evfsctuiz, evfsctsiz, __ev_get_upper*,\n+\t__ev_get_lower*, __ev_get_u32, __ev_get_s32, __ev_get_fs,\n+\t__ev_get_u16, __ev_get_s16.\n \n 2003-02-12  Kazu Hirata  <kazu@cs.umass.edu>\n \n@@ -125,11 +137,11 @@ Wed Feb 12 22:47:18 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-02-12  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/spe.h: Fix misc formatting.\n-        (__ev_create_ufix32_fs): Cast ev argument.\n-        (__ev_create_sfix32_fs): Same.\n-        (__ev_get_sfix32_fs_internal): Cast arguments to builtins.\n-        (__ev_get_ufix32_fs_internal): Same.\n+\t* config/rs6000/spe.h: Fix misc formatting.\n+\t(__ev_create_ufix32_fs): Cast ev argument.\n+\t(__ev_create_sfix32_fs): Same.\n+\t(__ev_get_sfix32_fs_internal): Cast arguments to builtins.\n+\t(__ev_get_ufix32_fs_internal): Same.\n \n 2003-02-12  Ranjit Mathew  <rmathew@hotmail.com>\n "}, {"sha": "c627e3d4a17c0396e58ab13c9e9fb5b0f56182e0", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a", "patch": "@@ -679,9 +679,19 @@ static char const tls_model_chars[] = \" GLil\";\n #define X86_64_VARARGS_SIZE (REGPARM_MAX * UNITS_PER_WORD + SSE_REGPARM_MAX * 16)\n \n /* Define the structure for the machine field in struct function.  */\n+\n+struct stack_local_entry GTY(())\n+{\n+  unsigned short mode;\n+  unsigned short n;\n+  rtx rtl;\n+  struct stack_local_entry *next;\n+};\n+\n+\n struct machine_function GTY(())\n {\n-  rtx stack_locals[(int) MAX_MACHINE_MODE][MAX_386_STACK_LOCALS];\n+  struct stack_local_entry *stack_locals;\n   const char *some_ld_name;\n   int save_varrargs_registers;\n   int accesses_prev_frame;\n@@ -11634,14 +11644,24 @@ assign_386_stack_local (mode, n)\n      enum machine_mode mode;\n      int n;\n {\n+  struct stack_local_entry *s;\n+\n   if (n < 0 || n >= MAX_386_STACK_LOCALS)\n     abort ();\n \n-  if (ix86_stack_locals[(int) mode][n] == NULL_RTX)\n-    ix86_stack_locals[(int) mode][n]\n-      = assign_stack_local (mode, GET_MODE_SIZE (mode), 0);\n+  for (s = ix86_stack_locals; s; s = s->next)\n+    if (s->mode == mode && s->n == n)\n+      return s->rtl;\n+\n+  s = (struct stack_local_entry *)\n+    ggc_alloc (sizeof (struct stack_local_entry));\n+  s->n = n;\n+  s->mode = mode;\n+  s->rtl = assign_stack_local (mode, GET_MODE_SIZE (mode), 0);\n \n-  return ix86_stack_locals[(int) mode][n];\n+  s->next = ix86_stack_locals;\n+  ix86_stack_locals = s;\n+  return s->rtl;\n }\n \n /* Construct the SYMBOL_REF for the tls_get_addr function.  */"}, {"sha": "aefa8740716416fb03947e53ae6496bb40c594e0", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a", "patch": "@@ -5350,8 +5350,7 @@ init_emit ()\n \t\t\t\t\t   * sizeof (unsigned char));\n \n   regno_reg_rtx\n-    = (rtx *) ggc_alloc_cleared (f->emit->regno_pointer_align_length\n-\t\t\t\t * sizeof (rtx));\n+    = (rtx *) ggc_alloc (f->emit->regno_pointer_align_length * sizeof (rtx));\n \n   /* Put copies of all the hard registers into regno_reg_rtx.  */\n   memcpy (regno_reg_rtx,"}, {"sha": "d92b815296353a2ab17e8b1afde04ded1ec94a65", "filename": "gcc/function.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=ddb0ae00a2fefc266ad0cd0fa12de4368c23e97a", "patch": "@@ -97,15 +97,15 @@ struct emit_status GTY(())\n   /* Indexed by pseudo register number, if nonzero gives the known alignment\n      for that pseudo (if REG_POINTER is set in x_regno_reg_rtx).\n      Allocated in parallel with x_regno_reg_rtx.  */\n-  unsigned char * GTY ((length (\"%h.regno_pointer_align_length\"))) \n+  unsigned char * GTY ((length (\"%h.x_reg_rtx_no\")))\n     regno_pointer_align;\n \n   /* Indexed by pseudo register number, gives the rtx for that pseudo.\n      Allocated in parallel with regno_pointer_align. \n \n      Note MEM expressions can appear in this array due to the actions\n      of put_var_into_stack.  */\n-  rtx * GTY ((length (\"%h.regno_pointer_align_length\"))) x_regno_reg_rtx;\n+  rtx * GTY ((length (\"%h.x_reg_rtx_no\"))) x_regno_reg_rtx;\n };\n \n /* For backward compatibility... eventually these should all go away.  */"}]}