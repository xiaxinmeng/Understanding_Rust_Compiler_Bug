{"sha": "8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFlNmU0YTRkZDc0MWI0ZDVlYmMwN2EwNDQyZTk3MTRkNDY2N2FhZg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2008-03-30T16:16:24Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2008-03-30T16:16:24Z"}, "message": "internal_pack_1.f90: Added complex to test case.\n\n2008-03-30  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\t* gfortran.dg/internal_pack_1.f90:  Added complex to test case.\n\t* gfortran.dg/internal_pack_2.f90:  Likewise.\n\t* gfortran.dg/intrinsic_spread_1.f90:  Likewise.\n\t* gfortran.dg/intrinsic_spread_2.f90:  Likewise.\n\t* gfortran.dg/intrinsic_pack_1.f90:  Likewise.\n\t* gfortran.dg/intrinsic_pack_2.f90:  Likewise.\n\t* gfortran.dg/intrinsic_unpack_1.f90:  Likewise.\n\t* gfortran.dg/intrinsic_unpack_2.f90:  Likewise.\n\nFrom-SVN: r133733", "tree": {"sha": "439d4e6966c929bdb5e1311c7669b5bb608bb917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/439d4e6966c929bdb5e1311c7669b5bb608bb917"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/comments", "author": null, "committer": null, "parents": [{"sha": "8f0e26718e5a9e8c2609741f6c89994040c96cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0e26718e5a9e8c2609741f6c89994040c96cf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f0e26718e5a9e8c2609741f6c89994040c96cf7"}], "stats": {"total": 202, "additions": 197, "deletions": 5}, "files": [{"sha": "c6a8b3c3abdbcb7c91340afe8cb6f3c22e952984", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "patch": "@@ -1,3 +1,14 @@\n+2008-03-30  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* gfortran.dg/internal_pack_1.f90:  Added complex to test case.\n+\t* gfortran.dg/internal_pack_2.f90:  Likewise.\n+\t* gfortran.dg/intrinsic_spread_1.f90:  Likewise.\n+\t* gfortran.dg/intrinsic_spread_2.f90:  Likewise.\n+\t* gfortran.dg/intrinsic_pack_1.f90:  Likewise.\n+\t* gfortran.dg/intrinsic_pack_2.f90:  Likewise.\n+\t* gfortran.dg/intrinsic_unpack_1.f90:  Likewise.\n+\t* gfortran.dg/intrinsic_unpack_2.f90:  Likewise.\n+\n 2008-03-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/bit_packed_array2.adb: New test.\n@@ -23,9 +34,9 @@\n \n \tPR libfortran/32972\n \tPR libfortran/32512\n-\t* intrinsic_spread_1.f90:  New file.\n-\t* intrinsic_spread_2.f90:  New file.\n-\t* intrinsic_spread_3.f90:  New file.\n+\t* gfortran.dg/intrinsic_spread_1.f90:  New file.\n+\t* gfortran.dg/intrinsic_spread_2.f90:  New file.\n+\t* gfortran.dg/intrinsic_spread_3.f90:  New file.\n \n 2008-03-28  Daniel Franke  <franke.daniel@gmail.com>\n "}, {"sha": "6c3781ba9b2163d268490f05605616bf8c16d029", "filename": "gcc/testsuite/gfortran.dg/internal_pack_1.f90", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_1.f90?ref=8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "patch": "@@ -9,6 +9,8 @@ program main\n   integer(kind=8), dimension(3) :: i8\n   real(kind=4), dimension(3) :: r4\n   real(kind=8), dimension(3) :: r8\n+  complex(kind=4), dimension(3) :: c4\n+  complex(kind=8), dimension(3) :: c8\n \n   i1 = (/ -1, 1, -3 /)\n   call sub_i1(i1(1:3:2))\n@@ -34,6 +36,16 @@ program main\n   call sub_r8(r8(1:3:2))\n   if (any(r8 /= (/ 3.0_8, 1.0_8, 2.0_8/))) call abort\n \n+  c4 = (/ (-1.0_4, 0._4), (1.0_4, 0._4), (-3.0_4, 0._4) /)\n+  call sub_c4(c4(1:3:2))\n+  if (any(real(c4) /= (/ 3.0_4, 1.0_4, 2.0_4/))) call abort\n+  if (any(aimag(c4) /= 0._4)) call abort\n+\n+  c8 = (/ (-1.0_4, 0._4), (1.0_4, 0._4), (-3.0_4, 0._4) /)\n+  call sub_c8(c8(1:3:2))\n+  if (any(real(c8) /= (/ 3.0_4, 1.0_4, 2.0_4/))) call abort\n+  if (any(aimag(c8) /= 0._4)) call abort\n+\n end program main\n \n subroutine sub_i1(i)\n@@ -83,3 +95,21 @@ subroutine sub_r8(r)\n   r(1) = 3._8\n   r(2) = 2._8\n end subroutine sub_r8\n+\n+subroutine sub_c8(r)\n+  implicit none\n+  complex(kind=8), dimension(2) :: r\n+  if (r(1) /= (-1._8,0._8)) call abort\n+  if (r(2) /= (-3._8,0._8)) call abort\n+  r(1) = 3._8\n+  r(2) = 2._8\n+end subroutine sub_c8\n+\n+subroutine sub_c4(r)\n+  implicit none\n+  complex(kind=4), dimension(2) :: r\n+  if (r(1) /= (-1._4,0._4)) call abort\n+  if (r(2) /= (-3._4,0._4)) call abort\n+  r(1) = 3._4\n+  r(2) = 2._4\n+end subroutine sub_c4"}, {"sha": "1f0473e2455f1b453907293e4cebd88bb43294b1", "filename": "gcc/testsuite/gfortran.dg/internal_pack_2.f90", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_2.f90?ref=8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "patch": "@@ -7,11 +7,17 @@ program main\n   implicit none\n   integer,parameter :: k = selected_real_kind (precision (0.0_8) + 1)\n   real(kind=k), dimension(3) :: rk\n+  complex(kind=k), dimension(3) :: ck\n \n   rk = (/ -1.0_k, 1.0_k, -3.0_k /)\n   call sub_rk(rk(1:3:2))\n   if (any(rk /= (/ 3.0_k, 1.0_k, 2.0_k/))) call abort\n \n+  ck = (/ (-1.0_k, 0._k), (1.0_k, 0._k), (-3.0_k, 0._k) /)\n+  call sub_ck(ck(1:3:2))\n+  if (any(real(ck) /= (/ 3.0_k, 1.0_k, 2.0_k/))) call abort\n+  if (any(aimag(ck) /= 0._k)) call abort\n+\n end program main\n \n subroutine sub_rk(r)\n@@ -23,3 +29,13 @@ subroutine sub_rk(r)\n   r(1) = 3._k\n   r(2) = 2._k\n end subroutine sub_rk\n+\n+subroutine sub_ck(r)\n+  implicit none\n+  integer,parameter :: k = selected_real_kind (precision (0.0_8) + 1)\n+  complex(kind=k), dimension(2) :: r\n+  if (r(1) /= (-1._k,0._k)) call abort\n+  if (r(2) /= (-3._k,0._k)) call abort\n+  r(1) = 3._k\n+  r(2) = 2._k\n+end subroutine sub_ck"}, {"sha": "e464503c96360eef75c7a9f4be99c2d12f138472", "filename": "gcc/testsuite/gfortran.dg/intrinsic_pack_1.f90", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_pack_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_pack_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_pack_1.f90?ref=8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "patch": "@@ -10,6 +10,12 @@ program main\n   real(kind=8), dimension(3,3) :: r8\n   real(kind=8), dimension(9) :: vr8\n   real(kind=8), dimension(9) :: rr8\n+  complex(kind=4), dimension(3,3) :: c4\n+  complex(kind=4), dimension(9) :: vc4\n+  complex(kind=4), dimension(9) :: rc4\n+  complex(kind=8), dimension(3,3) :: c8\n+  complex(kind=8), dimension(9) :: vc8\n+  complex(kind=8), dimension(9) :: rc8\n   integer(kind=1), dimension(3,3) :: i1\n   integer(kind=1), dimension(9) :: vi1\n   integer(kind=1), dimension(9) :: ri1\n@@ -37,6 +43,22 @@ program main\n   if (any(rr8 /= (/ 1.0_8, 2.1_8, 1.2_8, 0.98_8,  15._8, 16._8, 17._8, &\n   &                  18._8, 19._8 /))) call abort\n \n+  vc4 = (/(i+10,i=1,9)/)\n+  c4 = reshape((/1.0_4, -3.0_4, 2.1_4, -4.21_4, 1.2_4, 0.98_4, -1.2_4, &\n+  &              -7.1_4, -9.9_4, 0.3_4 /), shape(c4))\n+  rc4 = pack(c4,real(c4)>0,vc4)\n+  if (any(real(rc4) /= (/ 1.0_4, 2.1_4, 1.2_4, 0.98_4,  15._4, 16._4, 17._4, &\n+  &                  18._4, 19._4 /))) call abort\n+  if (any(aimag(rc4) /= 0)) call abort\n+\n+  vc8 = (/(i+10,i=1,9)/)\n+  c8 = reshape((/1.0_4, -3.0_4, 2.1_4, -4.21_4, 1.2_4, 0.98_4, -1.2_4, &\n+  &              -7.1_4, -9.9_4, 0.3_4 /), shape(c8))\n+  rc8 = pack(c8,real(c8)>0,vc8)\n+  if (any(real(rc8) /= (/ 1.0_4, 2.1_4, 1.2_4, 0.98_4,  15._4, 16._4, 17._4, &\n+  &                  18._4, 19._4 /))) call abort\n+  if (any(aimag(rc8) /= 0)) call abort\n+\n   vi1 = (/(i+10,i=1,9)/)\n   i1 = reshape((/1_1, -1_1, 2_1, -2_1, 3_1, -3_1, 4_1, -4_1, 5_1/), shape(i1))\n   ri1 = pack(i1,i1>0,vi1)"}, {"sha": "642cd5c1f825a9232a9f0e97fe698dc3701507cc", "filename": "gcc/testsuite/gfortran.dg/intrinsic_pack_2.f90", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_pack_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_pack_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_pack_2.f90?ref=8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "patch": "@@ -9,6 +9,9 @@ program main\n   real(kind=k), dimension(3,3) :: rk\n   real(kind=k), dimension(9) :: vrk\n   real(kind=k), dimension(9) :: rrk\n+  complex(kind=k), dimension(3,3) :: ck\n+  complex(kind=k), dimension(9) :: vck\n+  complex(kind=k), dimension(9) :: rck\n \n   vrk = (/(i+10,i=1,9)/)\n   rk = reshape((/1.0_k, -3.0_k, 2.1_k, -4.21_k, 1.2_k, 0.98_k, -1.2_k, &\n@@ -17,4 +20,12 @@ program main\n   if (any(rrk /= (/ 1.0_k, 2.1_k, 1.2_k, 0.98_k,  15._k, 16._k, 17._k, &\n   &                  18._k, 19._k /))) call abort\n \n+  vck = (/(i+10,i=1,9)/)\n+  ck = reshape((/1.0_k, -3.0_k, 2.1_k, -4.21_k, 1.2_k, 0.98_k, -1.2_k, &\n+  &              -7.1_k, -9.9_k, 0.3_k /), shape(ck))\n+  rck = pack(ck,real(ck)>0,vck)\n+  if (any(real(rck) /= (/ 1.0_k, 2.1_k, 1.2_k, 0.98_k,  15._k, 16._k, 17._k, &\n+  &                  18._k, 19._k /))) call abort\n+  if (any(aimag(rck) /= 0)) call abort\n+\n end program main"}, {"sha": "1fe09d478bb5f75416d8ebde240cb5ebb58b866a", "filename": "gcc/testsuite/gfortran.dg/intrinsic_spread_1.f90", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_spread_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_spread_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_spread_1.f90?ref=8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "patch": "@@ -19,6 +19,12 @@ program foo\n    real(kind=8), dimension (10) :: r_8\n    real(kind=8), dimension (2, 3) :: ar_8\n    real(kind=8), dimension (2, 2, 3) :: br_8\n+   complex(kind=4), dimension (10) :: c_4\n+   complex(kind=4), dimension (2, 3) :: ac_4\n+   complex(kind=4), dimension (2, 2, 3) :: bc_4\n+   complex(kind=8), dimension (10) :: c_8\n+   complex(kind=8), dimension (2, 3) :: ac_8\n+   complex(kind=8), dimension (2, 2, 3) :: bc_8\n    character (len=200) line1, line2, line3\n \n    a_1 = reshape ((/1_1, 2_1, 3_1, 4_1, 5_1, 6_1/), (/2, 3/))\n@@ -117,7 +123,44 @@ program foo\n    r_8 = spread(1._8,1,10)\n    if (any(r_8 /= 1._8)) call abort\n \n+   ac_4 = reshape ((/(1._4,-1._4), (2._4,-2._4), (3._4, -3._4), (4._4, -4._4), &\n+                   & (5._4,-5._4), (6._4,-6._4)/), (/2, 3/))\n+   bc_4 = spread (ac_4, 1, 2)\n+   if (any (real(bc_4) .ne. reshape ((/1._4, 1._4, 2._4, 2._4, 3._4, 3._4, &\n+   & 4._4, 4._4, 5._4, 5._4, 6._4, 6._4/), (/2, 2, 3/)))) call abort\n+   if (any (-aimag(bc_4) .ne. reshape ((/1._4, 1._4, 2._4, 2._4, 3._4, 3._4, &\n+   & 4._4, 4._4, 5._4, 5._4, 6._4, 6._4/), (/2, 2, 3/)))) call abort\n+   line1 = ' '\n+   write(line1, 9020) bc_4\n+   line2 = ' '\n+   write(line2, 9020) spread (ac_4, 1, 2)\n+   if (line1 /= line2) call abort\n+   line3 = ' '\n+   write(line3, 9020) spread (ac_4, 1, 2) + 0._4\n+   if (line1 /= line3) call abort\n+   c_4 = spread((1._4,-1._4),1,10)\n+   if (any(c_4 /= (1._4,-1._4))) call abort\n+\n+   ac_8 = reshape ((/(1._8,-1._8), (2._8,-2._8), (3._8, -3._8), (4._8, -4._8), &\n+                   & (5._8,-5._8), (6._8,-6._8)/), (/2, 3/))\n+   bc_8 = spread (ac_8, 1, 2)\n+   if (any (real(bc_8) .ne. reshape ((/1._8, 1._8, 2._8, 2._8, 3._8, 3._8, &\n+   & 4._8, 4._8, 5._8, 5._8, 6._8, 6._8/), (/2, 2, 3/)))) call abort\n+   if (any (-aimag(bc_8) .ne. reshape ((/1._8, 1._8, 2._8, 2._8, 3._8, 3._8, &\n+   & 4._8, 4._8, 5._8, 5._8, 6._8, 6._8/), (/2, 2, 3/)))) call abort\n+   line1 = ' '\n+   write(line1, 9020) bc_8\n+   line2 = ' '\n+   write(line2, 9020) spread (ac_8, 1, 2)\n+   if (line1 /= line2) call abort\n+   line3 = ' '\n+   write(line3, 9020) spread (ac_8, 1, 2) + 0._8\n+   if (line1 /= line3) call abort\n+   c_8 = spread((1._8,-1._8),1,10)\n+   if (any(c_8 /= (1._8,-1._8))) call abort\n+\n 9000 format(12I3)\n 9010 format(12F7.3)\n+9020 format(25F7.3)\n \n end program"}, {"sha": "0a91be7b599aeced6d06d8edc4aba5472d1b8844", "filename": "gcc/testsuite/gfortran.dg/intrinsic_spread_2.f90", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_spread_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_spread_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_spread_2.f90?ref=8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "patch": "@@ -7,6 +7,9 @@ program foo\n    real(kind=k), dimension(10) :: r_k\n    real(kind=k), dimension (2, 3) :: ar_k\n    real(kind=k), dimension (2, 2, 3) :: br_k\n+   complex(kind=k), dimension(10) :: c_k\n+   complex(kind=k), dimension (2, 3) :: ac_k\n+   complex(kind=k), dimension (2, 2, 3) :: bc_k\n    character (len=200) line1, line2, line3\n \n    ar_k = reshape ((/1._k, 2._k, 3._k, 4._k, 5._k, 6._k/), (/2, 3/))\n@@ -24,6 +27,25 @@ program foo\n    r_k = spread(1._k,1,10)\n    if (any(r_k /= 1._k)) call abort\n \n+   ac_k = reshape ((/(1._k,-1._k), (2._k,-2._k), (3._k, -3._k), (4._k, -4._k), &\n+                   & (5._k,-5._k), (6._k,-6._k)/), (/2, 3/))\n+   bc_k = spread (ac_k, 1, 2)\n+   if (any (real(bc_k) .ne. reshape ((/1._k, 1._k, 2._k, 2._k, 3._k, 3._k, &\n+   & 4._k, 4._k, 5._k, 5._k, 6._k, 6._k/), (/2, 2, 3/)))) call abort\n+   if (any (-aimag(bc_k) .ne. reshape ((/1._k, 1._k, 2._k, 2._k, 3._k, 3._k, &\n+   & 4._k, 4._k, 5._k, 5._k, 6._k, 6._k/), (/2, 2, 3/)))) call abort\n+   line1 = ' '\n+   write(line1, 9020) bc_k\n+   line2 = ' '\n+   write(line2, 9020) spread (ac_k, 1, 2)\n+   if (line1 /= line2) call abort\n+   line3 = ' '\n+   write(line3, 9020) spread (ac_k, 1, 2) + 0._k\n+   if (line1 /= line3) call abort\n+   c_k = spread((1._k,-1._k),1,10)\n+   if (any(c_k /= (1._k,-1._k))) call abort\n+\n 9010 format(12F7.3)\n+9020 format(25F7.3)\n \n end program"}, {"sha": "71cce798ca594a3edb142e61de11363aac763a57", "filename": "gcc/testsuite/gfortran.dg/intrinsic_unpack_1.f90", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_unpack_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_unpack_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_unpack_1.f90?ref=8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "patch": "@@ -8,8 +8,10 @@ program intrinsic_unpack\n    integer(kind=8), dimension(3, 3) :: a8, b8\n    real(kind=4), dimension(3,3) :: ar4, br4\n    real(kind=8), dimension(3,3) :: ar8, br8\n+   complex(kind=4), dimension(3,3) :: ac4, bc4\n+   complex(kind=8), dimension(3,3) :: ac8, bc8\n    logical, dimension(3, 3) :: mask\n-   character(len=100) line1, line2\n+   character(len=500) line1, line2\n    integer i\n \n    mask = reshape ((/.false.,.true.,.false.,.true.,.false.,.false.,&\n@@ -92,4 +94,26 @@ program intrinsic_unpack\n       0._8, 0._8, 4._8/), (/3, 3/)))) &\n       call abort\n \n+   ac4 = reshape ((/1._4, 0._4, 0._4, 0._4, 1._4, 0._4, 0._4, 0._4, 1._4/), &\n+        (/3, 3/));\n+   bc4 = unpack ((/(2._4, 0._4), (3._4, 0._4), (4._4,   0._4)/), mask, ac4)\n+   if (any (real(bc4) .ne. reshape ((/1._4, 2._4, 0._4, 3._4, 1._4, 0._4, &\n+        0._4, 0._4, 4._4/), (/3, 3/)))) &\n+        call abort\n+   write (line1,'(18F9.5)') bc4\n+   write (line2,'(18F9.5)') unpack((/(2._4, 0._4), (3._4, 0._4), (4._4,0._4)/), &\n+        mask, ac4)\n+   if (line1 .ne. line2) call abort\n+\n+   ac8 = reshape ((/1._8, 0._8, 0._8, 0._8, 1._8, 0._8, 0._8, 0._8, 1._8/), &\n+        (/3, 3/));\n+   bc8 = unpack ((/(2._8, 0._8), (3._8, 0._8), (4._8,   0._8)/), mask, ac8)\n+   if (any (real(bc8) .ne. reshape ((/1._8, 2._8, 0._8, 3._8, 1._8, 0._8, &\n+        0._8, 0._8, 4._8/), (/3, 3/)))) &\n+        call abort\n+   write (line1,'(18F9.5)') bc8\n+   write (line2,'(18F9.5)') unpack((/(2._8, 0._8), (3._8, 0._8), (4._8,0._8)/), &\n+        mask, ac8)\n+   if (line1 .ne. line2) call abort\n+\n end program"}, {"sha": "d993f234065baa49758576fb7f5f94bcd18882ee", "filename": "gcc/testsuite/gfortran.dg/intrinsic_unpack_2.f90", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_unpack_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_unpack_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_unpack_2.f90?ref=8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "patch": "@@ -6,8 +6,10 @@ program intrinsic_unpack\n    integer,parameter :: k = selected_real_kind (precision (0.0_8) + 1)\n \n    real(kind=k), dimension(3,3) :: ark, brk\n+   complex(kind=k), dimension(3,3) :: ack, bck\n+\n    logical, dimension(3, 3) :: mask\n-   character(len=100) line1, line2\n+   character(len=500) line1, line2\n    integer i\n \n    mask = reshape ((/.false.,.true.,.false.,.true.,.false.,.false.,&\n@@ -28,4 +30,15 @@ program intrinsic_unpack\n       0._k, 0._k, 4._k/), (/3, 3/)))) &\n       call abort\n \n+   ack = reshape ((/1._k, 0._k, 0._k, 0._k, 1._k, 0._k, 0._k, 0._k, 1._k/), &\n+        (/3, 3/));\n+   bck = unpack ((/(2._k, 0._k), (3._k, 0._k), (4._k,   0._k)/), mask, ack)\n+   if (any (real(bck) .ne. reshape ((/1._k, 2._k, 0._k, 3._k, 1._k, 0._k, &\n+        0._k, 0._k, 4._k/), (/3, 3/)))) &\n+        call abort\n+   write (line1,'(18F9.5)') bck\n+   write (line2,'(18F9.5)') unpack((/(2._k, 0._k), (3._k, 0._k), (4._k,0._k)/), &\n+        mask, ack)\n+   if (line1 .ne. line2) call abort\n+\n end program"}]}