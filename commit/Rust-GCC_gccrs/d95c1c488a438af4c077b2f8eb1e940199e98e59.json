{"sha": "d95c1c488a438af4c077b2f8eb1e940199e98e59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk1YzFjNDg4YTQzOGFmNGMwNzdiMmY4ZWIxZTk0MDE5OWU5OGU1OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-06-07T01:50:09Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-06-07T01:50:09Z"}, "message": "random (mersenne_twister<>::operator==, [...]): Implement.\n\n2006-06-06  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/random (mersenne_twister<>::operator==,\n\toperator!=, operator<<, operator>>): Implement.\n\t* testsuite/tr1/5_numerical_facilities/random/mersenne_twister/\n\toperators/equal.cc: New.\t\n\t* testsuite/tr1/5_numerical_facilities/random/mersenne_twister/\n\toperators/not_equal.cc: Likewise.\n\t* testsuite/tr1/5_numerical_facilities/random/mersenne_twister/\n\toperators/serialize.cc: Likewise.\n\n\t* include/tr1/random (subtract_with_carry<>::operator==): Fix,\n\tcompare the whole state; use std::equal.\n\n\t* include/tr1/random: Minor formatting and style changes.\n\nFrom-SVN: r114459", "tree": {"sha": "511bd30e94a3058c98d5449b7fa65b91011948a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/511bd30e94a3058c98d5449b7fa65b91011948a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d95c1c488a438af4c077b2f8eb1e940199e98e59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95c1c488a438af4c077b2f8eb1e940199e98e59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d95c1c488a438af4c077b2f8eb1e940199e98e59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95c1c488a438af4c077b2f8eb1e940199e98e59/comments", "author": null, "committer": null, "parents": [{"sha": "efbd5a9431f64cc195581c1f4f407b3c93f7c1ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efbd5a9431f64cc195581c1f4f407b3c93f7c1ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efbd5a9431f64cc195581c1f4f407b3c93f7c1ff"}], "stats": {"total": 347, "additions": 293, "deletions": 54}, "files": [{"sha": "434050020961af33ad10eca211d85b1b5a72a343", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95c1c488a438af4c077b2f8eb1e940199e98e59/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95c1c488a438af4c077b2f8eb1e940199e98e59/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d95c1c488a438af4c077b2f8eb1e940199e98e59", "patch": "@@ -1,3 +1,19 @@\n+2006-06-06  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/random (mersenne_twister<>::operator==,\n+\toperator!=, operator<<, operator>>): Implement.\n+\t* testsuite/tr1/5_numerical_facilities/random/mersenne_twister/\n+\toperators/equal.cc: New.\t\n+\t* testsuite/tr1/5_numerical_facilities/random/mersenne_twister/\n+\toperators/not_equal.cc: Likewise.\n+\t* testsuite/tr1/5_numerical_facilities/random/mersenne_twister/\n+\toperators/serialize.cc: Likewise.\n+\n+\t* include/tr1/random (subtract_with_carry<>::operator==): Fix,\n+\tcompare the whole state; use std::equal.\n+\n+\t* include/tr1/random: Minor formatting and style changes.\n+\n 2006-06-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/tr1/5_numerical_facilies: Move to..."}, {"sha": "7bdf8e6be07b81f08a9b68a3bf9310de5cbddc2e", "filename": "libstdc++-v3/include/tr1/random", "status": "modified", "additions": 118, "deletions": 54, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95c1c488a438af4c077b2f8eb1e940199e98e59/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95c1c488a438af4c077b2f8eb1e940199e98e59/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom?ref=d95c1c488a438af4c077b2f8eb1e940199e98e59", "patch": "@@ -517,6 +517,76 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n       result_type\n       operator()();\n \n+      /**\n+       * Compares two % mersenne_twister random number generator objects of\n+       * the same type for equality.\n+       *\n+       * @param __lhs A % mersenne_twister random number generator object.\n+       * @param __rhs Another % mersenne_twister random number generator\n+       *              object.\n+       *\n+       * @returns true if the two objects are equal, false otherwise.\n+       */\n+      friend bool\n+      operator==(const mersenne_twister& __lhs,\n+\t\t const mersenne_twister& __rhs)\n+      { return std::equal(__lhs._M_x, __lhs._M_x + state_size, __rhs._M_x); }\n+\n+      /**\n+       * Compares two % mersenne_twister random number generator objects of\n+       * the same type for inequality.\n+       *\n+       * @param __lhs A % mersenne_twister random number generator object.\n+       * @param __rhs Another % mersenne_twister random number generator\n+       *              object.\n+       *\n+       * @returns true if the two objects are not equal, false otherwise.\n+       */\n+      friend bool\n+      operator!=(const mersenne_twister& __lhs,\n+\t\t const mersenne_twister& __rhs)\n+      { return !(__lhs == __rhs); }\n+\n+      /**\n+       * Inserts the current state of a % mersenne_twister random number\n+       * generator engine @p __x into the output stream @p __os.\n+       *\n+       * @param __os An output stream.\n+       * @param __x  A % mersenne_twister random number generator engine.\n+       *\n+       * @returns The output stream with the state of @p __x inserted or in\n+       * an error state.\n+       */\n+      template<typename _CharT, typename _Traits>\n+        friend basic_ostream<_CharT, _Traits>&\n+        operator<<(basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const mersenne_twister& __x)\n+        {\n+\t  std::copy(__x._M_x, __x._M_x + state_size,\n+\t\t    std::ostream_iterator<_UIntType>(__os, \" \"));\n+\t  return __os;\n+\t}\n+\n+      /**\n+       * Extracts the current state of a % mersenne_twister random number\n+       * generator engine @p __x from the input stream @p __is.\n+       *\n+       * @param __is An input stream.\n+       * @param __x  A % mersenne_twister random number generator engine.\n+       *\n+       * @returns The input stream with the state of @p __x extracted or in\n+       * an error state.\n+       */\n+      template<typename _CharT, typename _Traits>\n+        friend basic_istream<_CharT, _Traits>&\n+        operator>>(basic_istream<_CharT, _Traits>& __is,\n+\t\t   mersenne_twister& __x)\n+        {\n+\t  for (int __i = 0; __i < state_size; ++__i)\n+\t    __is >> __x._M_x[__i];\n+\t  return __is;\n+\t}\n+\n     private:\n       template<class _Gen>\n         void\n@@ -669,10 +739,7 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n       friend bool\n       operator==(const subtract_with_carry& __lhs,\n \t\t const subtract_with_carry& __rhs)\n-      { \n-\treturn ((__lhs._M_x[0] == __rhs._M_x[0])\n-\t\t&& (__lhs._M_x[__r - 1] == __rhs._M_x[__r - 1]));\n-      }\n+      { return std::equal(__lhs._M_x, __lhs._M_x + long_lag, __rhs._M_x); }\n \n       /**\n        * Compares two % subtract_with_carry random number generator objects of\n@@ -691,40 +758,40 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       /**\n        * Inserts the current state of a % subtract_with_carry random number\n-       * genator engine @p x into the output stream @p __os.\n+       * generator engine @p __x into the output stream @p __os.\n        *\n        * @param __os An output stream.\n        * @param __x  A % subtract_with_carry random number generator engine.\n        *\n-       * @returns The output stream with the state of @p x inserted or in an\n-       * error state.\n+       * @returns The output stream with the state of @p __x inserted or in\n+       * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_ostream<_CharT, _Traits>&\n         operator<<(basic_ostream<_CharT, _Traits>& __os,\n \t\t   const subtract_with_carry& __x)\n         {\n-\t  std::copy(__x._M_x, __x._M_x + __r,\n+\t  std::copy(__x._M_x, __x._M_x + long_lag,\n \t\t    std::ostream_iterator<_IntType>(__os, \" \"));\n \t  return __os << __x._M_carry;\n \t}\n \n       /**\n        * Extracts the current state of a % subtract_with_carry random number\n-       * gerator engine @p x from the input stream @p __is.\n+       * generator engine @p __x from the input stream @p __is.\n        *\n        * @param __is An input stream.\n        * @param __x  A % subtract_with_carry random number generator engine.\n        *\n-       * @returns The input stream with the state of @p x extracted or in an\n-       * error state.\n+       * @returns The input stream with the state of @p __x extracted or in\n+       * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_istream<_CharT, _Traits>&\n         operator>>(basic_istream<_CharT, _Traits>& __is,\n \t\t   subtract_with_carry& __x)\n         {\n-\t  for (int __i = 0; __i < __r; ++__i)\n+\t  for (int __i = 0; __i < long_lag; ++__i)\n \t    __is >> __x._M_x[__i];\n \t  __is >> __x._M_carry;\n \t  return __is;\n@@ -865,10 +932,7 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        */\n       friend bool\n       operator==(const discard_block& __lhs, const discard_block& __rhs)\n-      { \n-\treturn ((__lhs._M_b == __rhs._M_b)\n-\t\t&& (__lhs._M_n == __rhs._M_n));\n-      }\n+      { return (__lhs._M_b == __rhs._M_b) && (__lhs._M_n == __rhs._M_n); }\n \n       /**\n        * Compares two %discard_block random number generator objects of\n@@ -886,13 +950,13 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       /**\n        * Inserts the current state of a %discard_block random number\n-       * genator engine @p x into the output stream @p __os.\n+       * generator engine @p __x into the output stream @p __os.\n        *\n        * @param __os An output stream.\n        * @param __x  A %discard_block random number generator engine.\n        *\n-       * @returns The output stream with the state of @p x inserted or in an\n-       * error state.\n+       * @returns The output stream with the state of @p __x inserted or in\n+       * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_ostream<_CharT, _Traits>&\n@@ -902,13 +966,13 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       /**\n        * Extracts the current state of a % subtract_with_carry random number\n-       * gerator engine @p x from the input stream @p __is.\n+       * generator engine @p __x from the input stream @p __is.\n        *\n        * @param __is An input stream.\n        * @param __x  A %discard_block random number generator engine.\n        *\n-       * @returns The input stream with the state of @p x extracted or in an\n-       * error state.\n+       * @returns The input stream with the state of @p __x extracted or in\n+       * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_istream<_CharT, _Traits>&\n@@ -1035,7 +1099,7 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n       operator==(const xor_combine& __lhs, const xor_combine& __rhs)\n       {\n \treturn (__lhs.base1() == __rhs.base1())\n-\t  && (__lhs.base2() == __rhs.base2());\n+\t        && (__lhs.base2() == __rhs.base2());\n       }\n \n       /**\n@@ -1054,13 +1118,13 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       /**\n        * Inserts the current state of a %xor_combine random number\n-       * genator engine @p x into the output stream @p __os.\n+       * generator engine @p __x into the output stream @p __os.\n        *\n        * @param __os An output stream.\n        * @param __x  A %xor_combine random number generator engine.\n        *\n-       * @returns The output stream with the state of @p x inserted or in an\n-       * error state.\n+       * @returns The output stream with the state of @p __x inserted or in\n+       * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_ostream<_CharT, _Traits>&\n@@ -1070,13 +1134,13 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       /**\n        * Extracts the current state of a %xor_combine random number\n-       * gerator engine @p x from the input stream @p __is.\n+       * generator engine @p __x from the input stream @p __is.\n        *\n        * @param __is An input stream.\n        * @param __x  A %xor_combine random number generator engine.\n        *\n-       * @returns The input stream with the state of @p x extracted or in an\n-       * error state.\n+       * @returns The input stream with the state of @p __x extracted or in\n+       * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_istream<_CharT, _Traits>&\n@@ -1199,14 +1263,14 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n         { return __urng() % __n; }\n \n       /**\n-       * Inserts a %uniform_int random number distribution @p x into the\n+       * Inserts a %uniform_int random number distribution @p __x into the\n        * output stream @p os.\n        *\n        * @param __os An output stream.\n        * @param __x  A %uniform_int random number distribution.\n        *\n-       * @returns The output stream with the state of @p x inserted or in an\n-       * error state.\n+       * @returns The output stream with the state of @p __x inserted or in\n+       * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_ostream<_CharT, _Traits>&\n@@ -1216,12 +1280,12 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       /**\n        * Extracts a %unform_int random number distribution\n-       * @p u from the input stream @p __is.\n+       * @p __u from the input stream @p __is.\n        *\n        * @param __is An input stream.\n        * @param __u  A %uniform_int random number generator engine.\n        *\n-       * @returns The input stream with @p u extracted or in an error state.\n+       * @returns The input stream with @p __u extracted or in an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_istream<_CharT, _Traits>&\n@@ -1303,13 +1367,13 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n     /**\n      * Inserts a %bernoulli_distribution random number distribution\n-     * @p x into the output stream @p __os.\n+     * @p __x into the output stream @p __os.\n      *\n      * @param __os An output stream.\n      * @param __x  A %bernoulli_distribution random number distribution.\n      *\n-     * @returns The output stream with the state of @p x inserted or in an\n-     * error state.\n+     * @returns The output stream with the state of @p __x inserted or in\n+     * an error state.\n      */\n     template<typename _CharT, typename _Traits>\n       friend basic_ostream<_CharT, _Traits>&\n@@ -1319,12 +1383,12 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n     /**\n      * Extracts a %bernoulli_distribution random number distribution\n-     * @p u from the input stream @p __is.\n+     * @p __u from the input stream @p __is.\n      *\n      * @param __is An input stream.\n      * @param __u  A %bernoulli_distribution random number generator engine.\n      *\n-     * @returns The input stream with @p u extracted or in an error state.\n+     * @returns The input stream with @p __u extracted or in an error state.\n      */\n     template<typename _CharT, typename _Traits>\n       friend basic_istream<_CharT, _Traits>&\n@@ -1393,13 +1457,13 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       /**\n        * Inserts a %geometric_distribution random number distribution\n-       * @p x into the output stream @p __os.\n+       * @p __x into the output stream @p __os.\n        *\n        * @param __os An output stream.\n        * @param __x  A %geometric_distribution random number distribution.\n        *\n-       * @returns The output stream with the state of @p x inserted or in an\n-       * error state.\n+       * @returns The output stream with the state of @p __x inserted or in\n+       * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_ostream<_CharT, _Traits>&\n@@ -1409,12 +1473,12 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       /**\n        * Extracts a %geometric_distribution random number distribution\n-       * @p u from the input stream @p __is.\n+       * @p __u from the input stream @p __is.\n        *\n        * @param __is An input stream.\n        * @param __u  A %geometric_distribution random number generator engine.\n        *\n-       * @returns The input stream with @p u extracted or in an error state.\n+       * @returns The input stream with @p __u extracted or in an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_istream<_CharT, _Traits>&\n@@ -1479,14 +1543,14 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n         { return (__urng() * (max() - min())) + min(); }\n \n       /**\n-       * Inserts a %uniform_real random number distribution @p x into the\n+       * Inserts a %uniform_real random number distribution @p __x into the\n        * output stream @p __os.\n        *\n        * @param __os An output stream.\n        * @param __x  A %uniform_real random number distribution.\n        *\n-       * @returns The output stream with the state of @p x inserted or in an\n-       * error state.\n+       * @returns The output stream with the state of @p __x inserted or in\n+       * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_ostream<_CharT, _Traits>&\n@@ -1496,12 +1560,12 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       /**\n        * Extracts a %unform_real random number distribution\n-       * @p u from the input stream @p __is.\n+       * @p __u from the input stream @p __is.\n        *\n        * @param __is An input stream.\n        * @param __u  A %uniform_real random number generator engine.\n        *\n-       * @returns The input stream with @p u extracted or in an error state.\n+       * @returns The input stream with @p __u extracted or in an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_istream<_CharT, _Traits>&\n@@ -1569,13 +1633,13 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       /**\n        * Inserts a %exponential_distribution random number distribution\n-       * @p x into the output stream @p __os.\n+       * @p __x into the output stream @p __os.\n        *\n        * @param __os An output stream.\n        * @param __x  A %exponential_distribution random number distribution.\n        *\n-       * @returns The output stream with the state of @p x inserted or in an\n-       * error state.\n+       * @returns The output stream with the state of @p __x inserted or in\n+       * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_ostream<_CharT, _Traits>&\n@@ -1585,12 +1649,12 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       /**\n        * Extracts a %exponential_distribution random number distribution\n-       * @p u from the input stream @p __is.\n+       * @p __u from the input stream @p __is.\n        *\n        * @param __is An input stream.\n        * @param __u  A %exponential_distribution random number generator engine.\n        *\n-       * @returns The input stream with @p u extracted or in an error state.\n+       * @returns The input stream with @p __u extracted or in an error state.\n        */\n       template<typename _CharT, typename _Traits>\n         friend basic_istream<_CharT, _Traits>&"}, {"sha": "2cecdb6dcbe26a0e3fa76b042bdde4c767ca0f27", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/mersenne_twister/operators/equal.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95c1c488a438af4c077b2f8eb1e940199e98e59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fmersenne_twister%2Foperators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95c1c488a438af4c077b2f8eb1e940199e98e59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fmersenne_twister%2Foperators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fmersenne_twister%2Foperators%2Fequal.cc?ref=d95c1c488a438af4c077b2f8eb1e940199e98e59", "patch": "@@ -0,0 +1,53 @@\n+// 2006-06-06  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2006 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 5.1.4.2 class template mersenne_twister [tr.rand.eng.mers]\n+// 5.1.1 Table 16\n+\n+#include <tr1/random>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std::tr1;\n+\n+  mersenne_twister<\n+    unsigned long, 32, 624, 397, 31,\n+    0x9908b0dful, 11, 7,\n+    0x9d2c5680ul, 15,\n+    0xefc60000ul, 18> u, v;\n+\n+  VERIFY( u == v );\n+  \n+  for (int i = 0; i < 100; ++i)\n+    {\n+      u();\n+      v();\n+    }\n+  VERIFY( u == v );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "08252ceeeaa80eb8f3258a568e98d97e028afe56", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/mersenne_twister/operators/not_equal.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95c1c488a438af4c077b2f8eb1e940199e98e59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fmersenne_twister%2Foperators%2Fnot_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95c1c488a438af4c077b2f8eb1e940199e98e59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fmersenne_twister%2Foperators%2Fnot_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fmersenne_twister%2Foperators%2Fnot_equal.cc?ref=d95c1c488a438af4c077b2f8eb1e940199e98e59", "patch": "@@ -0,0 +1,52 @@\n+// 2006-06-06  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2006 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 5.1.4.2 class template mersenne_twister [tr.rand.eng.mers]\n+// 5.1.1 Table 16\n+\n+#include <tr1/random>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std::tr1;\n+\n+  mersenne_twister<\n+    unsigned long, 32, 624, 397, 31,\n+    0x9908b0dful, 11, 7,\n+    0x9d2c5680ul, 15,\n+    0xefc60000ul, 18> u(1);\n+\n+  mersenne_twister<\n+    unsigned long, 32, 624, 397, 31,\n+    0x9908b0dful, 11, 7,\n+    0x9d2c5680ul, 15,\n+    0xefc60000ul, 18> v(2);\n+  \n+  VERIFY( u != v );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "a862e3c56375c70cadacf6314aab7a91490b7544", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/mersenne_twister/operators/serialize.cc", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95c1c488a438af4c077b2f8eb1e940199e98e59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fmersenne_twister%2Foperators%2Fserialize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95c1c488a438af4c077b2f8eb1e940199e98e59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fmersenne_twister%2Foperators%2Fserialize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fmersenne_twister%2Foperators%2Fserialize.cc?ref=d95c1c488a438af4c077b2f8eb1e940199e98e59", "patch": "@@ -0,0 +1,54 @@\n+// 2006-06-06  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2006 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 5.1.4.2 class template mersenne_twister [tr.rand.eng.mers]\n+// 5.1.1 Table 16\n+\n+#include <sstream>\n+#include <tr1/random>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::tr1::mersenne_twister;\n+\n+  std::stringstream str;\n+  mersenne_twister<\n+    unsigned long, 32, 624, 397, 31,\n+    0x9908b0dful, 11, 7,\n+    0x9d2c5680ul, 15,\n+    0xefc60000ul, 18> u, v;\n+  \n+  u(); // advance\n+  str << u;\n+  \n+  VERIFY( u != v );\n+  \n+  str >> v;\n+  VERIFY( u == v );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}