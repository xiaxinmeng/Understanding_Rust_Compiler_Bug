{"sha": "d41ca8e68fa9ac43688da71f09aedd8bde74f26e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQxY2E4ZTY4ZmE5YWM0MzY4OGRhNzFmMDlhZWRkOGJkZTc0ZjI2ZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-11-29T09:33:10Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-11-29T09:33:10Z"}, "message": "opts.c (decode_options): Do not set max-inline-insns-rtl.\n\n\t* opts.c (decode_options): Do not set max-inline-insns-rtl.\n\t(common_handle_option): Likewise.\n\t* params.def (PARAM_MAX_INLINE_INSNS_RTL): Remove.\n\t* params.h (MAX_INLINE_INSNS_RTL): Remove.\n\t* doc/invoke.texi (max-inline-insns-rtl): Remove.\n\nFrom-SVN: r91463", "tree": {"sha": "792347b7f8fbbe70b402d1e8fca2d2cf210f6cc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/792347b7f8fbbe70b402d1e8fca2d2cf210f6cc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d41ca8e68fa9ac43688da71f09aedd8bde74f26e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d41ca8e68fa9ac43688da71f09aedd8bde74f26e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d41ca8e68fa9ac43688da71f09aedd8bde74f26e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d41ca8e68fa9ac43688da71f09aedd8bde74f26e/comments", "author": null, "committer": null, "parents": [{"sha": "6654de69a7b37f784658232694bb5707c3eb1719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6654de69a7b37f784658232694bb5707c3eb1719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6654de69a7b37f784658232694bb5707c3eb1719"}], "stats": {"total": 28, "additions": 8, "deletions": 20}, "files": [{"sha": "cd4ff92f30f6243b752b15e636cd6c1890c5e086", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41ca8e68fa9ac43688da71f09aedd8bde74f26e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41ca8e68fa9ac43688da71f09aedd8bde74f26e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d41ca8e68fa9ac43688da71f09aedd8bde74f26e", "patch": "@@ -1,3 +1,11 @@\n+2004-11-29  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* opts.c (decode_options): Do not set max-inline-insns-rtl.\n+\t(common_handle_option): Likewise.\n+\t* params.def (PARAM_MAX_INLINE_INSNS_RTL): Remove.\n+\t* params.h (MAX_INLINE_INSNS_RTL): Remove.\n+\t* doc/invoke.texi (max-inline-insns-rtl): Remove.\n+\n 2004-11-29  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/9571"}, {"sha": "442562c7de07402266992d7de2c8a92eae9d2bc5", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41ca8e68fa9ac43688da71f09aedd8bde74f26e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41ca8e68fa9ac43688da71f09aedd8bde74f26e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d41ca8e68fa9ac43688da71f09aedd8bde74f26e", "patch": "@@ -5426,12 +5426,6 @@ happens only when @option{-finline-functions} (included in @option{-O3}) is\n enabled and @option{--param max-inline-recursive-depth-auto} is used.  The\n default value is 500.\n \n-@item max-inline-insns-rtl\n-For languages that use the RTL inliner (this happens at a later stage\n-than tree inlining), you can set the maximum allowable size (counted\n-in RTL instructions) for the RTL inliner with this parameter.\n-The default value is 600.\n-\n @item max-unrolled-insns\n The maximum number of instructions that a loop should have if that loop\n is unrolled, and if the loop is unrolled, it determines how many times"}, {"sha": "1dd9da1619d0285cdb165d7ed8e7d8630a0b7813", "filename": "gcc/opts.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41ca8e68fa9ac43688da71f09aedd8bde74f26e/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41ca8e68fa9ac43688da71f09aedd8bde74f26e/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=d41ca8e68fa9ac43688da71f09aedd8bde74f26e", "patch": "@@ -572,7 +572,6 @@ decode_options (unsigned int argc, const char **argv)\n       /* Inlining of very small functions usually reduces total size.  */\n       set_param_value (\"max-inline-insns-single\", 5);\n       set_param_value (\"max-inline-insns-auto\", 5);\n-      set_param_value (\"max-inline-insns-rtl\", 10);\n       flag_inline_functions = 1;\n \n       /* We want to crossjump as much as possible.  */\n@@ -808,7 +807,6 @@ common_handle_option (size_t scode, const char *arg, int value)\n     case OPT_finline_limit_eq:\n       set_param_value (\"max-inline-insns-single\", value / 2);\n       set_param_value (\"max-inline-insns-auto\", value / 2);\n-      set_param_value (\"max-inline-insns-rtl\", value);\n       break;\n \n     case OPT_fmessage_length_:"}, {"sha": "d24ddc6e9cbd20a7c24315ed08e0523e559dc53d", "filename": "gcc/params.def", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41ca8e68fa9ac43688da71f09aedd8bde74f26e/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41ca8e68fa9ac43688da71f09aedd8bde74f26e/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=d41ca8e68fa9ac43688da71f09aedd8bde74f26e", "patch": "@@ -104,16 +104,6 @@ DEFPARAM (PARAM_MAX_INLINE_RECURSIVE_DEPTH_AUTO,\n \t  \"The maximum depth of recursive inlining for non-inline functions\",\n \t  8)\n \n-/* For languages that (still) use the RTL inliner, we can specify\n-   limits for the RTL inliner separately.\n-   The parameter here defines the maximum number of RTL instructions\n-   a function may have to be eligible for inlining in the RTL inliner.\n-   The default value is 600.  */\n-DEFPARAM (PARAM_MAX_INLINE_INSNS_RTL,\n-\t  \"max-inline-insns-rtl\",\n-\t  \"The maximum number of instructions for the RTL inliner\",\n-\t  600)\n-\n /* Limit the number of expansions created by the variable expansion\n    optimization to avoid register pressure.  */\n DEFPARAM (PARAM_MAX_VARIABLE_EXPANSIONS,"}, {"sha": "0a010b23872e022a94c154e834f652a73d93c2c7", "filename": "gcc/params.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41ca8e68fa9ac43688da71f09aedd8bde74f26e/gcc%2Fparams.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41ca8e68fa9ac43688da71f09aedd8bde74f26e/gcc%2Fparams.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.h?ref=d41ca8e68fa9ac43688da71f09aedd8bde74f26e", "patch": "@@ -96,8 +96,6 @@ typedef enum compiler_param\n   PARAM_VALUE (PARAM_MIN_INLINE_INSNS)\n #define MAX_INLINE_INSNS_AUTO \\\n   PARAM_VALUE (PARAM_MAX_INLINE_INSNS_AUTO)\n-#define MAX_INLINE_INSNS_RTL \\\n-  PARAM_VALUE (PARAM_MAX_INLINE_INSNS_RTL)\n #define MAX_VARIABLE_EXPANSIONS \\\n   PARAM_VALUE (PARAM_MAX_VARIABLE_EXPANSIONS)\n #define MAX_DELAY_SLOT_INSN_SEARCH \\"}]}