{"sha": "4d613828c5e8d5eb027aedc336d71365c846ed99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ2MTM4MjhjNWU4ZDVlYjAyN2FlZGMzMzZkNzEzNjVjODQ2ZWQ5OQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-04T01:23:58Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-04T01:23:58Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r875", "tree": {"sha": "ab62788bf8fef9b88dde7f6a289f88d17dd7a86a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab62788bf8fef9b88dde7f6a289f88d17dd7a86a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d613828c5e8d5eb027aedc336d71365c846ed99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d613828c5e8d5eb027aedc336d71365c846ed99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d613828c5e8d5eb027aedc336d71365c846ed99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d613828c5e8d5eb027aedc336d71365c846ed99/comments", "author": null, "committer": null, "parents": [{"sha": "ead69aea2062e7bab67742f5aa95e901abebce74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ead69aea2062e7bab67742f5aa95e901abebce74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ead69aea2062e7bab67742f5aa95e901abebce74"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "824e8e936af3725377587d23e0f3638876d4b9be", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d613828c5e8d5eb027aedc336d71365c846ed99/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d613828c5e8d5eb027aedc336d71365c846ed99/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=4d613828c5e8d5eb027aedc336d71365c846ed99", "patch": "@@ -5172,20 +5172,20 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t\t && REGNO (result) >= FIRST_PSEUDO_REGISTER))\n \t    result = gen_reg_rtx (insn_mode);\n \n-\t  /* Make the operands are acceptable to the predicates.  */\n+\t  /* Make sure the operands are acceptable to the predicates.  */\n \n-\t  if (! (*insn_operand_predicate[icode][0]) (result, insn_mode))\n+\t  if (! (*insn_operand_predicate[(int)icode][0]) (result, insn_mode))\n \t    result = gen_reg_rtx (insn_mode);\n \n \t  src_rtx = memory_address (BLKmode,\n \t\t\t\t    expand_expr (src, 0, Pmode,\n \t\t\t\t\t\t EXPAND_NORMAL));\n-\t  if (! (*insn_operand_predicate[icode][1]) (src_rtx, Pmode))\n+\t  if (! (*insn_operand_predicate[(int)icode][1]) (src_rtx, Pmode))\n \t    src_rtx = copy_to_mode_reg (Pmode, src_rtx);\n \n \t  char_rtx = const0_rtx;\n-\t  char_mode = insn_operand_mode[icode][2];\n-\t  if (! (*insn_operand_predicate[icode][2]) (char_rtx, char_mode))\n+\t  char_mode = insn_operand_mode[(int)icode][2];\n+\t  if (! (*insn_operand_predicate[(int)icode][2]) (char_rtx, char_mode))\n \t    char_rtx = copy_to_mode_reg (char_mode, char_rtx);\n \n \t  emit_insn (GEN_FCN (icode) (result,"}]}