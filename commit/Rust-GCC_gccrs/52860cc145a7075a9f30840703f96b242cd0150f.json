{"sha": "52860cc145a7075a9f30840703f96b242cd0150f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI4NjBjYzE0NWE3MDc1YTlmMzA4NDA3MDNmOTZiMjQyY2QwMTUwZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-22T13:56:55Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-22T13:56:55Z"}, "message": "[Ada] Fix wrong assumption on bounds in GNAT.Encode_String\n\nThis fixes a couple of oversights in the GNAT.Encode_String package,\nwhose effect is to assume that all the strings have a lower bound of 1.\n\n2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/g-encstr.adb (Encode_Wide_String): Fix oversight.\n\t(Encode_Wide_Wide_String): Likewise.\n\ngcc/testsuite/\n\n\t* gnat.dg/encode_string1.adb, gnat.dg/encode_string1_pkg.adb,\n\tgnat.dg/encode_string1_pkg.ads: New testcase.\n\nFrom-SVN: r273674", "tree": {"sha": "d2c89e2e6587d36af6c2b95c94a23dbeb3c04cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2c89e2e6587d36af6c2b95c94a23dbeb3c04cc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52860cc145a7075a9f30840703f96b242cd0150f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52860cc145a7075a9f30840703f96b242cd0150f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52860cc145a7075a9f30840703f96b242cd0150f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52860cc145a7075a9f30840703f96b242cd0150f/comments", "author": null, "committer": null, "parents": [{"sha": "f3d2fbfdb83bcc60d72824daf7a470c0e5398854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3d2fbfdb83bcc60d72824daf7a470c0e5398854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3d2fbfdb83bcc60d72824daf7a470c0e5398854"}], "stats": {"total": 87, "additions": 83, "deletions": 4}, "files": [{"sha": "cf8b1711c3fb07cd19402afd73a07a4e1dfbf7c1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52860cc145a7075a9f30840703f96b242cd0150f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52860cc145a7075a9f30840703f96b242cd0150f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=52860cc145a7075a9f30840703f96b242cd0150f", "patch": "@@ -1,3 +1,8 @@\n+2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* libgnat/g-encstr.adb (Encode_Wide_String): Fix oversight.\n+\t(Encode_Wide_Wide_String): Likewise.\n+\n 2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sem_warn.adb (Find_Var): Bail out for a function call with an"}, {"sha": "b115c8af2e89f7b49ac7e70aef2da10e5e8b1136", "filename": "gcc/ada/libgnat/g-encstr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52860cc145a7075a9f30840703f96b242cd0150f/gcc%2Fada%2Flibgnat%2Fg-encstr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52860cc145a7075a9f30840703f96b242cd0150f/gcc%2Fada%2Flibgnat%2Fg-encstr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-encstr.adb?ref=52860cc145a7075a9f30840703f96b242cd0150f", "patch": "@@ -79,12 +79,12 @@ package body GNAT.Encode_String is\n       Ptr : Natural;\n \n    begin\n-      Ptr := S'First;\n+      Ptr := Result'First;\n       for J in S'Range loop\n          Encode_Wide_Character (S (J), Result, Ptr);\n       end loop;\n \n-      Length := Ptr - S'First;\n+      Length := Ptr - Result'First;\n    end Encode_Wide_String;\n \n    -----------------------------\n@@ -108,12 +108,12 @@ package body GNAT.Encode_String is\n       Ptr : Natural;\n \n    begin\n-      Ptr := S'First;\n+      Ptr := Result'First;\n       for J in S'Range loop\n          Encode_Wide_Wide_Character (S (J), Result, Ptr);\n       end loop;\n \n-      Length := Ptr - S'First;\n+      Length := Ptr - Result'First;\n    end Encode_Wide_Wide_String;\n \n    ---------------------------"}, {"sha": "6dbdc4360e362d2c5d4e1e1d9d752cd8beb6608b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52860cc145a7075a9f30840703f96b242cd0150f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52860cc145a7075a9f30840703f96b242cd0150f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=52860cc145a7075a9f30840703f96b242cd0150f", "patch": "@@ -1,3 +1,8 @@\n+2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/encode_string1.adb, gnat.dg/encode_string1_pkg.adb,\n+\tgnat.dg/encode_string1_pkg.ads: New testcase.\n+\n 2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/warn23.adb: New testcase."}, {"sha": "f1144bac4a8af513937d5d789fc5d98e91b4525e", "filename": "gcc/testsuite/gnat.dg/encode_string1.adb", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52860cc145a7075a9f30840703f96b242cd0150f/gcc%2Ftestsuite%2Fgnat.dg%2Fencode_string1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52860cc145a7075a9f30840703f96b242cd0150f/gcc%2Ftestsuite%2Fgnat.dg%2Fencode_string1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fencode_string1.adb?ref=52860cc145a7075a9f30840703f96b242cd0150f", "patch": "@@ -0,0 +1,48 @@\n+--  { dg-do run }\n+\n+with Ada.Text_IO;    use Ada.Text_IO;\n+with Encode_String1_Pkg;\n+with GNAT.Encode_String;\n+with System.WCh_Con; use System.WCh_Con;\n+\n+procedure Encode_String1 is\n+   High_WS  : constant      Wide_String (1000 .. 1009) := (others => '1');\n+   High_WWS : constant Wide_Wide_String (1000 .. 1009) := (others => '2');\n+   Low_WS   : constant      Wide_String (3 .. 12) := (others => '3');\n+   Low_WWS  : constant Wide_Wide_String (3 .. 12) := (others => '4');\n+\n+   procedure Test_Method (Method : WC_Encoding_Method);\n+   --  Test Wide_String and Wide_Wide_String encodings using method Method to\n+   --  encode them.\n+\n+   -----------------\n+   -- Test_Method --\n+   -----------------\n+\n+   procedure Test_Method (Method : WC_Encoding_Method) is\n+      package Encoder is new GNAT.Encode_String (Method);\n+\n+      procedure WS_Tester is new Encode_String1_Pkg\n+        (C      => Wide_Character,\n+         S      => Wide_String,\n+         Encode => Encoder.Encode_Wide_String);\n+\n+      procedure WWS_Tester is new Encode_String1_Pkg\n+        (C      => Wide_Wide_Character,\n+         S      => Wide_Wide_String,\n+         Encode => Encoder.Encode_Wide_Wide_String);\n+   begin\n+      WS_Tester (High_WS);\n+      WS_Tester (Low_WS);\n+\n+      WWS_Tester (High_WWS);\n+      WWS_Tester (Low_WWS);\n+   end Test_Method;\n+\n+--  Start of processing for Main\n+\n+begin\n+   for Method in WC_Encoding_Method'Range loop\n+      Test_Method (Method);\n+   end loop;\n+end;"}, {"sha": "fa969a059fc87e594856aecc7eb9eb52fa1979c6", "filename": "gcc/testsuite/gnat.dg/encode_string1_pkg.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52860cc145a7075a9f30840703f96b242cd0150f/gcc%2Ftestsuite%2Fgnat.dg%2Fencode_string1_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52860cc145a7075a9f30840703f96b242cd0150f/gcc%2Ftestsuite%2Fgnat.dg%2Fencode_string1_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fencode_string1_pkg.adb?ref=52860cc145a7075a9f30840703f96b242cd0150f", "patch": "@@ -0,0 +1,15 @@\n+with Ada.Exceptions; use Ada.Exceptions;\n+with Ada.Text_IO;    use Ada.Text_IO;\n+\n+procedure Encode_String1_Pkg (Val : S) is\n+begin\n+   declare\n+      Result : constant String := Encode (Val);\n+   begin\n+      Put_Line (Result);\n+   end;\n+\n+exception\n+   when Ex : others =>\n+      Put_Line (\"ERROR: Unexpected exception \" & Exception_Name (Ex));\n+end;"}, {"sha": "ba2d675cb05e762b8cededdcb3dd519720c82e19", "filename": "gcc/testsuite/gnat.dg/encode_string1_pkg.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52860cc145a7075a9f30840703f96b242cd0150f/gcc%2Ftestsuite%2Fgnat.dg%2Fencode_string1_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52860cc145a7075a9f30840703f96b242cd0150f/gcc%2Ftestsuite%2Fgnat.dg%2Fencode_string1_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fencode_string1_pkg.ads?ref=52860cc145a7075a9f30840703f96b242cd0150f", "patch": "@@ -0,0 +1,6 @@\n+generic\n+   type C is private;\n+   type S is array (Positive range <>) of C;\n+   with function Encode (Val : S) return String;\n+\n+procedure Encode_String1_Pkg (Val : S);"}]}