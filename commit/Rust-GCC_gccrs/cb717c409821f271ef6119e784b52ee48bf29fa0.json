{"sha": "cb717c409821f271ef6119e784b52ee48bf29fa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I3MTdjNDA5ODIxZjI3MWVmNjExOWU3ODRiNTJlZTQ4YmYyOWZhMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-03-21T12:21:33Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-03-21T12:21:33Z"}, "message": "vxworks.h (VXWORKS_ADDITIONAL_CPP_SPEC): Remove -D options.\n\ngcc/\n\t* config/vxworks.h (VXWORKS_ADDITIONAL_CPP_SPEC): Remove -D options.\n\t(VXWORKS_OS_CPP_BUILTINS): Define.\n\t* config/i386/vxworks.h (VXWORKS_CPU_DEFINE): Fold into...\n\t(TARGET_OS_CPP_BUILTINS): ...here.  Use VXWORKS_OS_CPP_BUILTINS.\n\nFrom-SVN: r123108", "tree": {"sha": "8d4dbb60d52000de334d5163a47afc73bf275f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d4dbb60d52000de334d5163a47afc73bf275f37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb717c409821f271ef6119e784b52ee48bf29fa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb717c409821f271ef6119e784b52ee48bf29fa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb717c409821f271ef6119e784b52ee48bf29fa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb717c409821f271ef6119e784b52ee48bf29fa0/comments", "author": null, "committer": null, "parents": [{"sha": "39a39c8504a4188f5fea639e1c0ddc8cb57a4281", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39a39c8504a4188f5fea639e1c0ddc8cb57a4281", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39a39c8504a4188f5fea639e1c0ddc8cb57a4281"}], "stats": {"total": 48, "additions": 29, "deletions": 19}, "files": [{"sha": "5d93c7d6c518323d9ec48cd0a5e068bba2329990", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb717c409821f271ef6119e784b52ee48bf29fa0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb717c409821f271ef6119e784b52ee48bf29fa0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb717c409821f271ef6119e784b52ee48bf29fa0", "patch": "@@ -1,3 +1,10 @@\n+2007-03-21  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/vxworks.h (VXWORKS_ADDITIONAL_CPP_SPEC): Remove -D options.\n+\t(VXWORKS_OS_CPP_BUILTINS): Define.\n+\t* config/i386/vxworks.h (VXWORKS_CPU_DEFINE): Fold into...\n+\t(TARGET_OS_CPP_BUILTINS): ...here.  Use VXWORKS_OS_CPP_BUILTINS.\n+\n 2007-03-21  Richard Sandiford  <richard@codesourcery.com>\n \n \t* rtl.h (constant_pool_reference_p): Delete."}, {"sha": "9862cf23ff297750d4c17ad10eb3356fa76a2d71", "filename": "gcc/config/i386/vxworks.h", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb717c409821f271ef6119e784b52ee48bf29fa0/gcc%2Fconfig%2Fi386%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb717c409821f271ef6119e784b52ee48bf29fa0/gcc%2Fconfig%2Fi386%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvxworks.h?ref=cb717c409821f271ef6119e784b52ee48bf29fa0", "patch": "@@ -27,9 +27,10 @@ Boston, MA 02110-1301, USA.  */\n #undef  ASM_SPEC\n #define ASM_SPEC \"%{v:-v} %{Qy:} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*}\"\n \n-#define VXWORKS_CPU_DEFINE()\t\t\t\t\\\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n   do\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n+      VXWORKS_OS_CPP_BUILTINS ();\t\t\t\\\n       if (TARGET_386)\t\t\t\t\t\\\n         builtin_define (\"CPU=I80386\");\t\t\t\\\n       else if (TARGET_486)\t\t\t\t\\\n@@ -49,18 +50,7 @@ Boston, MA 02110-1301, USA.  */\n           builtin_define (\"CPU=PENTIUM4\");\t\t\\\n           builtin_define (\"CPU_VARIANT=PENTIUM4\");\t\\\n         }\t\t\t\t\t\t\\\n-    }  \t\t\t\t\t\t\t\\\n-  while (0)\n-\n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      builtin_define (\"__vxworks\");\t\t\\\n-      builtin_define (\"__VXWORKS__\");\t\t\\\n-      builtin_assert (\"system=unix\");\t\t\\\n-\t\t\t\t\t\t\\\n-      VXWORKS_CPU_DEFINE();\t\t\t\\\n-    }\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n   while (0)\n \n #undef  CPP_SPEC"}, {"sha": "25f74d992d9a3ba9097dc98a0413da9f47e19073", "filename": "gcc/config/vxworks.h", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb717c409821f271ef6119e784b52ee48bf29fa0/gcc%2Fconfig%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb717c409821f271ef6119e784b52ee48bf29fa0/gcc%2Fconfig%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.h?ref=cb717c409821f271ef6119e784b52ee48bf29fa0", "patch": "@@ -35,12 +35,11 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n /* Since we provide a default -isystem, expand -isystem on the command\n    line early.  */\n #undef VXWORKS_ADDITIONAL_CPP_SPEC\n-#define VXWORKS_ADDITIONAL_CPP_SPEC \" \t\t\t\t\t\\\n- %{!nostdinc:%{isystem*}}\t\t\t\t\t\t\\\n- %{mrtp: -D__RTP__=1\t\t\t\t\t\t\t\\\n-\t %{!nostdinc:-idirafter %:getenv(WIND_USR /h)}}\t\t\t\\\n- %{!mrtp:-D_WRS_KERNEL=1\t\t\t\t\t\t\\\n- \t %{!nostdinc:-idirafter %:getenv(WIND_BASE /target/h)}}\"\n+#define VXWORKS_ADDITIONAL_CPP_SPEC\t\t\\\n+ \"%{!nostdinc:\t\t\t\t\t\\\n+    %{isystem*} -idirafter\t\t\t\\\n+    %{mrtp: %:getenv(WIND_USR /h)\t\t\\\n+      ;:    %:getenv(WIND_BASE /target/h)}}\"\n \n /* The references to __init and __fini will be satisfied by\n    libc_internal.a.  */\n@@ -105,4 +104,18 @@ extern void vxworks_asm_out_destructor (rtx symbol, int priority);\n #undef VXWORKS_GOTT_INDEX\n #define VXWORKS_GOTT_INDEX \"__GOTT_INDEX__\"\n \n+/* A VxWorks implementation of TARGET_OS_CPP_BUILTINS.  */\n+#define VXWORKS_OS_CPP_BUILTINS()\t\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      builtin_define (\"__vxworks\");\t\t\t\t\t\\\n+      builtin_define (\"__VXWORKS__\");\t\t\t\t\t\\\n+      builtin_assert (\"system=unix\");\t\t\t\t\t\\\n+      if (TARGET_VXWORKS_RTP)\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__RTP__\");\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+\tbuiltin_define (\"_WRS_KERNEL\");\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n #define VXWORKS_KIND VXWORKS_KIND_NORMAL"}]}