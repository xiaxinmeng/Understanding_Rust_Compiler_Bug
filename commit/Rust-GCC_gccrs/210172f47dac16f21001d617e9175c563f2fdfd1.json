{"sha": "210172f47dac16f21001d617e9175c563f2fdfd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEwMTcyZjQ3ZGFjMTZmMjEwMDFkNjE3ZTkxNzVjNTYzZjJmZGZkMQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-11-08T07:59:31Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-11-08T07:59:31Z"}, "message": "[AArch64] Fix vqtb[lx][234] on big-endian\n\nForgot to commit the new testcases:\ngcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vqtbX.c\n\nFrom-SVN: r229946", "tree": {"sha": "bf701f6ccf5de221940a30353af441dd53c6bea4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf701f6ccf5de221940a30353af441dd53c6bea4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/210172f47dac16f21001d617e9175c563f2fdfd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/210172f47dac16f21001d617e9175c563f2fdfd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/210172f47dac16f21001d617e9175c563f2fdfd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/210172f47dac16f21001d617e9175c563f2fdfd1/comments", "author": null, "committer": null, "parents": [{"sha": "46d59b585ae49d3ae8d52d377bf4a56b225f0e03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46d59b585ae49d3ae8d52d377bf4a56b225f0e03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46d59b585ae49d3ae8d52d377bf4a56b225f0e03"}], "stats": {"total": 519, "additions": 519, "deletions": 0}, "files": [{"sha": "129ceafbb65a3450a734039e1909f1063854e44f", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vqtbX.c", "status": "added", "additions": 519, "deletions": 0, "changes": 519, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210172f47dac16f21001d617e9175c563f2fdfd1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvqtbX.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210172f47dac16f21001d617e9175c563f2fdfd1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvqtbX.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvqtbX.c?ref=210172f47dac16f21001d617e9175c563f2fdfd1", "patch": "@@ -0,0 +1,519 @@\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results for vqtbl1.  */\n+VECT_VAR_DECL(expected_vqtbl1,int,8,8) [] = { 0xfb, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t      0x0, 0x0, 0xf3, 0xf3 };\n+VECT_VAR_DECL(expected_vqtbl1,uint,8,8) [] = { 0xfb, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t       0x0, 0x0, 0xf3, 0xf3 };\n+VECT_VAR_DECL(expected_vqtbl1,poly,8,8) [] = { 0xfb, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t       0x0, 0x0, 0xf3, 0xf3 };\n+\n+/* Expected results for vqtbl2.  */\n+VECT_VAR_DECL(expected_vqtbl2,int,8,8) [] = { 0x5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t      0xfa, 0x0, 0xf5, 0xf5 };\n+VECT_VAR_DECL(expected_vqtbl2,uint,8,8) [] = { 0x5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t       0xfa, 0x0, 0xf5, 0xf5 };\n+VECT_VAR_DECL(expected_vqtbl2,poly,8,8) [] = { 0x5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t       0xfa, 0x0, 0xf5, 0xf5 };\n+\n+/* Expected results for vqtbl3.  */\n+VECT_VAR_DECL(expected_vqtbl3,int,8,8) [] = { 0xf, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t      0xfe, 0xb, 0xf7, 0xf7 };\n+VECT_VAR_DECL(expected_vqtbl3,uint,8,8) [] = { 0xf, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t       0xfe, 0xb, 0xf7, 0xf7 };\n+VECT_VAR_DECL(expected_vqtbl3,poly,8,8) [] = { 0xf, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t       0xfe, 0xb, 0xf7, 0xf7 };\n+\n+/* Expected results for vqtbl4.  */\n+VECT_VAR_DECL(expected_vqtbl4,int,8,8) [] = { 0x19, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t      0x2, 0x13, 0xf9, 0xf9 };\n+VECT_VAR_DECL(expected_vqtbl4,uint,8,8) [] = { 0x19, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t       0x2, 0x13, 0xf9, 0xf9 };\n+VECT_VAR_DECL(expected_vqtbl4,poly,8,8) [] = { 0x19, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t       0x2, 0x13, 0xf9, 0xf9 };\n+\n+/* Expected results for vqtbx1.  */\n+VECT_VAR_DECL(expected_vqtbx1,int,8,8) [] = { 0xfb, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t      0x33, 0x33, 0xf3, 0xf3 };\n+VECT_VAR_DECL(expected_vqtbx1,uint,8,8) [] = { 0xfb, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t       0xcc, 0xcc, 0xf3, 0xf3 };\n+VECT_VAR_DECL(expected_vqtbx1,poly,8,8) [] = { 0xfb, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t       0xcc, 0xcc, 0xf3, 0xf3 };\n+\n+/* Expected results for vqtbx2.  */\n+VECT_VAR_DECL(expected_vqtbx2,int,8,8) [] = { 0x5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t      0xfa, 0x33, 0xf5, 0xf5 };\n+VECT_VAR_DECL(expected_vqtbx2,uint,8,8) [] = { 0x5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t       0xfa, 0xcc, 0xf5, 0xf5 };\n+VECT_VAR_DECL(expected_vqtbx2,poly,8,8) [] = { 0x5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t       0xfa, 0xcc, 0xf5, 0xf5 };\n+\n+/* Expected results for vqtbx3.  */\n+VECT_VAR_DECL(expected_vqtbx3,int,8,8) [] = { 0xf, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t      0xfe, 0xb, 0xf7, 0xf7 };\n+VECT_VAR_DECL(expected_vqtbx3,uint,8,8) [] = { 0xf, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t       0xfe, 0xb, 0xf7, 0xf7 };\n+VECT_VAR_DECL(expected_vqtbx3,poly,8,8) [] = { 0xf, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t       0xfe, 0xb, 0xf7, 0xf7 };\n+\n+/* Expected results for vqtbx4.  */\n+VECT_VAR_DECL(expected_vqtbx4,int,8,8) [] = { 0x19, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t      0x2, 0x13, 0xf9, 0xf9 };\n+VECT_VAR_DECL(expected_vqtbx4,uint,8,8) [] = { 0x19, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t       0x2, 0x13, 0xf9, 0xf9 };\n+VECT_VAR_DECL(expected_vqtbx4,poly,8,8) [] = { 0x19, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t       0x2, 0x13, 0xf9, 0xf9 };\n+\n+/* Expected results for vqtbl1q.  */\n+VECT_VAR_DECL(expected_vqtbl1q,int,8,16) [] = { 0xfb, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t\t0x0, 0x0, 0xf3, 0xf3,\n+\t\t\t\t\t\t0xf3, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t\t0xf3, 0xf3, 0xf3, 0xf3 };\n+VECT_VAR_DECL(expected_vqtbl1q,uint,8,16) [] = { 0xfb, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t\t 0x0, 0x0, 0xf3, 0xf3,\n+\t\t\t\t\t\t 0xf3, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t\t 0xf3, 0xf3, 0xf3, 0xf3 };\n+VECT_VAR_DECL(expected_vqtbl1q,poly,8,16) [] = { 0xfb, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t\t 0x0, 0x0, 0xf3, 0xf3,\n+\t\t\t\t\t\t 0xf3, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t\t 0xf3, 0xf3, 0xf3, 0xf3 };\n+\n+/* Expected results for vqtbl2q.  */\n+VECT_VAR_DECL(expected_vqtbl2q,int,8,16) [] = { 0x5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t\t0xfa, 0x0, 0xf5, 0xf5,\n+\t\t\t\t\t\t0xf5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t\t0xf5, 0xf5, 0xf5, 0xf5 };\n+VECT_VAR_DECL(expected_vqtbl2q,uint,8,16) [] = { 0x5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t\t 0xfa, 0x0, 0xf5, 0xf5,\n+\t\t\t\t\t\t 0xf5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t\t 0xf5, 0xf5, 0xf5, 0xf5 };\n+VECT_VAR_DECL(expected_vqtbl2q,poly,8,16) [] = { 0x5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t\t 0xfa, 0x0, 0xf5, 0xf5,\n+\t\t\t\t\t\t 0xf5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t\t 0xf5, 0xf5, 0xf5, 0xf5 };\n+\n+/* Expected results for vqtbl3q.  */\n+VECT_VAR_DECL(expected_vqtbl3q,int,8,16) [] = { 0xf, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t\t0xfe, 0xb, 0xf7, 0xf7,\n+\t\t\t\t\t\t0xf7, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t\t0xf7, 0xf7, 0xf7, 0xf7 };\n+VECT_VAR_DECL(expected_vqtbl3q,uint,8,16) [] = { 0xf, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t\t 0xfe, 0xb, 0xf7, 0xf7,\n+\t\t\t\t\t\t 0xf7, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t\t 0xf7, 0xf7, 0xf7, 0xf7 };\n+VECT_VAR_DECL(expected_vqtbl3q,poly,8,16) [] = { 0xf, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t\t 0xfe, 0xb, 0xf7, 0xf7,\n+\t\t\t\t\t\t 0xf7, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t\t 0xf7, 0xf7, 0xf7, 0xf7 };\n+\n+/* Expected results for vqtbl4q.  */\n+VECT_VAR_DECL(expected_vqtbl4q,int,8,16) [] = { 0x19, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t\t0x2, 0x13, 0xf9, 0xf9,\n+\t\t\t\t\t\t0xf9, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t\t0xf9, 0xf9, 0xf9, 0xf9 };\n+VECT_VAR_DECL(expected_vqtbl4q,uint,8,16) [] = { 0x19, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t\t 0x2, 0x13, 0xf9, 0xf9,\n+\t\t\t\t\t\t 0xf9, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t\t 0xf9, 0xf9, 0xf9, 0xf9 };\n+VECT_VAR_DECL(expected_vqtbl4q,poly,8,16) [] = { 0x19, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t\t 0x2, 0x13, 0xf9, 0xf9,\n+\t\t\t\t\t\t 0xf9, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t\t 0xf9, 0xf9, 0xf9, 0xf9 };\n+\n+/* Expected results for vqtbx1q.  */\n+VECT_VAR_DECL(expected_vqtbx1q,int,8,16) [] = { 0xfb, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t\t0x33, 0x33, 0xf3, 0xf3,\n+\t\t\t\t\t\t0xf3, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t\t0xf3, 0xf3, 0xf3, 0xf3 };\n+VECT_VAR_DECL(expected_vqtbx1q,uint,8,16) [] = { 0xfb, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t\t 0xcc, 0xcc, 0xf3, 0xf3,\n+\t\t\t\t\t\t 0xf3, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t\t 0xf3, 0xf3, 0xf3, 0xf3 };\n+VECT_VAR_DECL(expected_vqtbx1q,poly,8,16) [] = { 0xfb, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t\t 0xcc, 0xcc, 0xf3, 0xf3,\n+\t\t\t\t\t\t 0xf3, 0xf3, 0xf3, 0xf3,\n+\t\t\t\t\t\t 0xf3, 0xf3, 0xf3, 0xf3 };\n+\n+/* Expected results for vqtbx2q.  */\n+VECT_VAR_DECL(expected_vqtbx2q,int,8,16) [] = { 0x5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t\t0xfa, 0x33, 0xf5, 0xf5,\n+\t\t\t\t\t\t0xf5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t\t0xf5, 0xf5, 0xf5, 0xf5 };\n+VECT_VAR_DECL(expected_vqtbx2q,uint,8,16) [] = { 0x5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t\t 0xfa, 0xcc, 0xf5, 0xf5,\n+\t\t\t\t\t\t 0xf5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t\t 0xf5, 0xf5, 0xf5, 0xf5 };\n+VECT_VAR_DECL(expected_vqtbx2q,poly,8,16) [] = { 0x5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t\t 0xfa, 0xcc, 0xf5, 0xf5,\n+\t\t\t\t\t\t 0xf5, 0xf5, 0xf5, 0xf5,\n+\t\t\t\t\t\t 0xf5, 0xf5, 0xf5, 0xf5 };\n+\n+/* Expected results for vqtbx3q.  */\n+VECT_VAR_DECL(expected_vqtbx3q,int,8,16) [] = { 0xf, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t\t0xfe, 0xb, 0xf7, 0xf7,\n+\t\t\t\t\t\t0xf7, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t\t0xf7, 0xf7, 0xf7, 0xf7 };\n+VECT_VAR_DECL(expected_vqtbx3q,uint,8,16) [] = { 0xf, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t\t 0xfe, 0xb, 0xf7, 0xf7,\n+\t\t\t\t\t\t 0xf7, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t\t 0xf7, 0xf7, 0xf7, 0xf7 };\n+VECT_VAR_DECL(expected_vqtbx3q,poly,8,16) [] = { 0xf, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t\t 0xfe, 0xb, 0xf7, 0xf7,\n+\t\t\t\t\t\t 0xf7, 0xf7, 0xf7, 0xf7,\n+\t\t\t\t\t\t 0xf7, 0xf7, 0xf7, 0xf7 };\n+\n+/* Expected results for vqtbx4q.  */\n+VECT_VAR_DECL(expected_vqtbx4q,int,8,16) [] = { 0x19, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t\t0x2, 0x13, 0xf9, 0xf9,\n+\t\t\t\t\t\t0xf9, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t\t0xf9, 0xf9, 0xf9, 0xf9 };\n+VECT_VAR_DECL(expected_vqtbx4q,uint,8,16) [] = { 0x19, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t\t 0x2, 0x13, 0xf9, 0xf9,\n+\t\t\t\t\t\t 0xf9, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t\t 0xf9, 0xf9, 0xf9, 0xf9 };\n+VECT_VAR_DECL(expected_vqtbx4q,poly,8,16) [] = { 0x19, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t\t 0x2, 0x13, 0xf9, 0xf9,\n+\t\t\t\t\t\t 0xf9, 0xf9, 0xf9, 0xf9,\n+\t\t\t\t\t\t 0xf9, 0xf9, 0xf9, 0xf9 };\n+\n+void exec_vqtbX (void)\n+{\n+  int i;\n+\n+  /* In this case, input variables are arrays of vectors.  */\n+#define DECL_VQTBX(T1, W, N, X)\t\t\t\t\t\t\\\n+  VECT_ARRAY_TYPE(T1, W, N, X) VECT_ARRAY_VAR(table_vector, T1, W, N, X)\n+\n+  /* The vqtbl1 variant is different from vqtbl{2,3,4} because it takes a\n+     vector as 1st param, instead of an array of vectors.  */\n+#define TEST_VQTBL1(T1, T2, T3, W, N1, N2)\t\t\\\n+  VECT_VAR(table_vector, T1, W, N2) =\t\t\t\\\n+    vld1##q_##T2##W((T1##W##_t *)lookup_table);\t\t\\\n+\t\t\t\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N1) =\t\t\t\\\n+    vqtbl1_##T2##W(VECT_VAR(table_vector, T1, W, N2),\t\\\n+\t\t   VECT_VAR(vector, T3, W, N1));\t\\\n+  vst1_##T2##W(VECT_VAR(result, T1, W, N1),\t\t\\\n+\t       VECT_VAR(vector_res, T1, W, N1));\n+\n+#define TEST_VQTBL1Q(T1, T2, T3, W, N1, N2)\t\t\\\n+  VECT_VAR(table_vector, T1, W, N2) =\t\t\t\\\n+    vld1##q_##T2##W((T1##W##_t *)lookup_table);\t\t\\\n+\t\t\t\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N1) =\t\t\t\\\n+    vqtbl1q_##T2##W(VECT_VAR(table_vector, T1, W, N2),\t\\\n+\t\t    VECT_VAR(vector, T3, W, N1));\t\\\n+  vst1q_##T2##W(VECT_VAR(result, T1, W, N1),\t\t\\\n+\t       VECT_VAR(vector_res, T1, W, N1));\n+\n+#define TEST_VQTBLX(T1, T2, T3, W, N1, N2, X)\t\t\t\t\\\n+  VECT_ARRAY_VAR(table_vector, T1, W, N2, X) =\t\t\t\t\\\n+    vld##X##q_##T2##W((T1##W##_t *)lookup_table);\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N1) =\t\t\t\t\t\\\n+    vqtbl##X##_##T2##W(VECT_ARRAY_VAR(table_vector, T1, W, N2, X),\t\\\n+\t\t       VECT_VAR(vector, T3, W, N1));\t\t\t\\\n+  vst1_##T2##W(VECT_VAR(result, T1, W, N1),\t\t\t\t\\\n+\t\tVECT_VAR(vector_res, T1, W, N1));\n+\n+#define TEST_VQTBLXQ(T1, T2, T3, W, N1, N2, X)\t\t\t\t\\\n+  VECT_ARRAY_VAR(table_vector, T1, W, N2, X) =\t\t\t\t\\\n+    vld##X##q_##T2##W((T1##W##_t *)lookup_table);\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N1) =\t\t\t\t\t\\\n+    vqtbl##X##q_##T2##W(VECT_ARRAY_VAR(table_vector, T1, W, N2, X),\t\\\n+\t\t\tVECT_VAR(vector, T3, W, N1));\t\t\t\\\n+  vst1q_##T2##W(VECT_VAR(result, T1, W, N1),\t\t\t\t\\\n+\t\tVECT_VAR(vector_res, T1, W, N1));\n+\n+  /* We need to define a lookup table large enough.  */\n+  int8_t lookup_table[4*16];\n+\n+  /* For vqtblX.  */\n+  DECL_VARIABLE(vector, int, 8, 8);\n+  DECL_VARIABLE(vector, uint, 8, 8);\n+  DECL_VARIABLE(vector, poly, 8, 8);\n+  DECL_VARIABLE(vector_res, int, 8, 8);\n+  DECL_VARIABLE(vector_res, uint, 8, 8);\n+  DECL_VARIABLE(vector_res, poly, 8, 8);\n+\n+  /* For vqtblXq.  */\n+  DECL_VARIABLE(vector, int, 8, 16);\n+  DECL_VARIABLE(vector, uint, 8, 16);\n+  DECL_VARIABLE(vector, poly, 8, 16);\n+  DECL_VARIABLE(vector_res, int, 8, 16);\n+  DECL_VARIABLE(vector_res, uint, 8, 16);\n+  DECL_VARIABLE(vector_res, poly, 8, 16);\n+\n+  /* For vqtbl1.  */\n+  DECL_VARIABLE(table_vector, int, 8, 16);\n+  DECL_VARIABLE(table_vector, uint, 8, 16);\n+  DECL_VARIABLE(table_vector, poly, 8, 16);\n+\n+  /* For vqtbx*.  */\n+  DECL_VARIABLE(default_vector, int, 8, 8);\n+  DECL_VARIABLE(default_vector, uint, 8, 8);\n+  DECL_VARIABLE(default_vector, poly, 8, 8);\n+\n+  /* For vqtbx*q.  */\n+  DECL_VARIABLE(default_vector, int, 8, 16);\n+  DECL_VARIABLE(default_vector, uint, 8, 16);\n+  DECL_VARIABLE(default_vector, poly, 8, 16);\n+\n+  /* We need only 8 bits variants.  */\n+#define DECL_ALL_VQTBLX(X)\t\t\t\\\n+  DECL_VQTBX(int, 8, 16, X);\t\t\t\\\n+  DECL_VQTBX(uint, 8, 16, X);\t\t\t\\\n+  DECL_VQTBX(poly, 8, 16, X)\n+\n+#define TEST_ALL_VQTBL1()\t\t\t\\\n+  TEST_VQTBL1(int, s, uint, 8, 8, 16);\t\t\\\n+  TEST_VQTBL1(uint, u, uint, 8, 8, 16);\t\t\\\n+  TEST_VQTBL1(poly, p, uint, 8, 8, 16);\t\t\\\n+  TEST_VQTBL1Q(int, s, uint, 8, 16, 16);\t\\\n+  TEST_VQTBL1Q(uint, u, uint, 8, 16, 16);\t\\\n+  TEST_VQTBL1Q(poly, p, uint, 8, 16, 16)\n+\n+#define TEST_ALL_VQTBLX(X)\t\t\t\\\n+  TEST_VQTBLX(int, s, uint, 8, 8, 16, X);\t\\\n+  TEST_VQTBLX(uint, u, uint, 8, 8, 16, X);\t\\\n+  TEST_VQTBLX(poly, p, uint, 8, 8, 16, X);\t\\\n+  TEST_VQTBLXQ(int, s, uint, 8, 16, 16, X);\t\\\n+  TEST_VQTBLXQ(uint, u, uint, 8, 16, 16, X);\t\\\n+  TEST_VQTBLXQ(poly, p, uint, 8, 16, 16, X)\n+\n+  /* Declare the temporary buffers / variables.  */\n+  DECL_ALL_VQTBLX(2);\n+  DECL_ALL_VQTBLX(3);\n+  DECL_ALL_VQTBLX(4);\n+\n+  /* Fill the lookup table.  */\n+  for (i=0; i<4*16; i++) {\n+    lookup_table[i] = i-15;\n+  }\n+\n+  /* Choose init value arbitrarily, will be used as table index.  */\n+  VDUP(vector, , uint, u, 8, 8, 2);\n+  VDUP(vector, q, uint, u, 8, 16, 2);\n+\n+  /* To ensure coverage, add some indexes larger than 8, 16 and 32\n+     except: lane 0 (index 10), lane 4 (index 20) and lane 5 (index\n+     40).  */\n+  VSET_LANE(vector, , uint, u, 8, 8, 0, 10);\n+  VSET_LANE(vector, , uint, u, 8, 8, 4, 20);\n+  VSET_LANE(vector, , uint, u, 8, 8, 5, 40);\n+\n+  VSET_LANE(vector, q, uint, u, 8, 16, 0, 10);\n+  VSET_LANE(vector, q, uint, u, 8, 16, 4, 20);\n+  VSET_LANE(vector, q, uint, u, 8, 16, 5, 40);\n+\n+  /* Check vqtbl1.  */\n+  clean_results ();\n+#define TEST_MSG \"VQTBL1\"\n+  TEST_ALL_VQTBL1();\n+\n+  CHECK(TEST_MSG, int, 8, 8, PRIx8, expected_vqtbl1, \"\");\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx8, expected_vqtbl1, \"\");\n+  CHECK(TEST_MSG, poly, 8, 8, PRIx8, expected_vqtbl1, \"\");\n+\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBL1Q\"\n+  CHECK(TEST_MSG, int, 8, 16, PRIx8, expected_vqtbl1q, \"\");\n+  CHECK(TEST_MSG, uint, 8, 16, PRIx8, expected_vqtbl1q, \"\");\n+  CHECK(TEST_MSG, poly, 8, 16, PRIx8, expected_vqtbl1q, \"\");\n+\n+  /* Check vqtbl2.  */\n+  clean_results ();\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBL2\"\n+  TEST_ALL_VQTBLX(2);\n+\n+  CHECK(TEST_MSG, int, 8, 8, PRIx8, expected_vqtbl2, \"\");\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx8, expected_vqtbl2, \"\");\n+  CHECK(TEST_MSG, poly, 8, 8, PRIx8, expected_vqtbl2, \"\");\n+\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBL2Q\"\n+  CHECK(TEST_MSG, int, 8, 16, PRIx8, expected_vqtbl2q, \"\");\n+  CHECK(TEST_MSG, uint, 8, 16, PRIx8, expected_vqtbl2q, \"\");\n+  CHECK(TEST_MSG, poly, 8, 16, PRIx8, expected_vqtbl2q, \"\");\n+\n+  /* Check vqtbl3.  */\n+  clean_results ();\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBL3\"\n+  TEST_ALL_VQTBLX(3);\n+\n+  CHECK(TEST_MSG, int, 8, 8, PRIx8, expected_vqtbl3, \"\");\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx8, expected_vqtbl3, \"\");\n+  CHECK(TEST_MSG, poly, 8, 8, PRIx8, expected_vqtbl3, \"\");\n+\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBL3Q\"\n+  CHECK(TEST_MSG, int, 8, 16, PRIx8, expected_vqtbl3q, \"\");\n+  CHECK(TEST_MSG, uint, 8, 16, PRIx8, expected_vqtbl3q, \"\");\n+  CHECK(TEST_MSG, poly, 8, 16, PRIx8, expected_vqtbl3q, \"\");\n+\n+  /* Check vqtbl4.  */\n+  clean_results ();\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBL4\"\n+  TEST_ALL_VQTBLX(4);\n+\n+  CHECK(TEST_MSG, int, 8, 8, PRIx8, expected_vqtbl4, \"\");\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx8, expected_vqtbl4, \"\");\n+  CHECK(TEST_MSG, poly, 8, 8, PRIx8, expected_vqtbl4, \"\");\n+\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBL4Q\"\n+  CHECK(TEST_MSG, int, 8, 16, PRIx8, expected_vqtbl4q, \"\");\n+  CHECK(TEST_MSG, uint, 8, 16, PRIx8, expected_vqtbl4q, \"\");\n+  CHECK(TEST_MSG, poly, 8, 16, PRIx8, expected_vqtbl4q, \"\");\n+\n+\n+  /* Now test VQTBX.  */\n+\n+  /* The vqtbx1 variant is different from vqtbx{2,3,4} because it takes a\n+     vector as 1st param, instead of an array of vectors.  */\n+#define TEST_VQTBX1(T1, T2, T3, W, N1, N2)\t\t\\\n+  VECT_VAR(table_vector, T1, W, N2) =\t\t\t\\\n+    vld1##q_##T2##W((T1##W##_t *)lookup_table);\t\t\\\n+    \t\t\t\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N1) =\t\t       \t\\\n+    vqtbx1_##T2##W(VECT_VAR(default_vector, T1, W, N1),\t\\\n+\t\t   VECT_VAR(table_vector, T1, W, N2),\t\\\n+\t\t   VECT_VAR(vector, T3, W, N1));\t\\\n+  vst1_##T2##W(VECT_VAR(result, T1, W, N1),\t\t\\\n+\t       VECT_VAR(vector_res, T1, W, N1));\n+\n+#define TEST_VQTBX1Q(T1, T2, T3, W, N1, N2)\t\t\\\n+  VECT_VAR(table_vector, T1, W, N2) =\t\t\t\\\n+    vld1##q_##T2##W((T1##W##_t *)lookup_table);\t\t\\\n+    \t\t\t\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N1) =\t\t\t\\\n+    vqtbx1q_##T2##W(VECT_VAR(default_vector, T1, W, N1),\\\n+\t\t    VECT_VAR(table_vector, T1, W, N2),\t\\\n+\t\t    VECT_VAR(vector, T3, W, N1));\t\\\n+    vst1q_##T2##W(VECT_VAR(result, T1, W, N1),\t\t\\\n+\t\t  VECT_VAR(vector_res, T1, W, N1));\n+  \n+#define TEST_VQTBXX(T1, T2, T3, W, N1, N2, X)\t\t\t\t\\\n+  VECT_ARRAY_VAR(table_vector, T1, W, N2, X) =\t\t\t\t\\\n+    vld##X##q_##T2##W((T1##W##_t *)lookup_table);\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N1) =\t\t\t\t\t\\\n+    vqtbx##X##_##T2##W(VECT_VAR(default_vector, T1, W, N1),\t\t\\\n+\t\t\tVECT_ARRAY_VAR(table_vector, T1, W, N2, X),\t\\\n+\t\t\tVECT_VAR(vector, T3, W, N1));\t\t\t\\\n+  vst1_##T2##W(VECT_VAR(result, T1, W, N1),\t\t\t\t\\\n+\t\tVECT_VAR(vector_res, T1, W, N1));\n+\n+#define TEST_VQTBXXQ(T1, T2, T3, W, N1, N2, X)\t\t\t\t\\\n+  VECT_ARRAY_VAR(table_vector, T1, W, N2, X) =\t\t\t\t\\\n+    vld##X##q_##T2##W((T1##W##_t *)lookup_table);\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N1) =\t\t\t\t\t\\\n+    vqtbx##X##q_##T2##W(VECT_VAR(default_vector, T1, W, N1),\t\t\\\n+\t\t\tVECT_ARRAY_VAR(table_vector, T1, W, N2, X),\t\\\n+\t\t\tVECT_VAR(vector, T3, W, N1));\t\t\t\\\n+  vst1q_##T2##W(VECT_VAR(result, T1, W, N1),\t\t\t\t\\\n+\t\tVECT_VAR(vector_res, T1, W, N1));\n+\n+#define TEST_ALL_VQTBX1()\t\t\t\\\n+  TEST_VQTBX1(int, s, uint, 8, 8, 16);\t\t\\\n+  TEST_VQTBX1(uint, u, uint, 8, 8, 16);\t\t\\\n+  TEST_VQTBX1(poly, p, uint, 8, 8, 16);\t\t\\\n+  TEST_VQTBX1Q(int, s, uint, 8, 16, 16);\t\\\n+  TEST_VQTBX1Q(uint, u, uint, 8, 16, 16);\t\\\n+  TEST_VQTBX1Q(poly, p, uint, 8, 16, 16)\n+\n+#define TEST_ALL_VQTBXX(X)\t\t\t\\\n+  TEST_VQTBXX(int, s, uint, 8, 8, 16, X);\t\\\n+  TEST_VQTBXX(uint, u, uint, 8, 8, 16, X);\t\\\n+  TEST_VQTBXX(poly, p, uint, 8, 8, 16, X);\t\\\n+  TEST_VQTBXXQ(int, s, uint, 8, 16, 16, X);\t\\\n+  TEST_VQTBXXQ(uint, u, uint, 8, 16, 16, X);\t\\\n+  TEST_VQTBXXQ(poly, p, uint, 8, 16, 16, X)\n+\n+  /* Choose init value arbitrarily, will be used as default value.  */\n+  VDUP(default_vector, , int, s, 8, 8, 0x33);\n+  VDUP(default_vector, , uint, u, 8, 8, 0xCC);\n+  VDUP(default_vector, , poly, p, 8, 8, 0xCC);\n+  VDUP(default_vector, q, int, s, 8, 16, 0x33);\n+  VDUP(default_vector, q, uint, u, 8, 16, 0xCC);\n+  VDUP(default_vector, q, poly, p, 8, 16, 0xCC);\n+\n+  /* Check vqtbx1.  */\n+  clean_results ();\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBX1\"\n+  TEST_ALL_VQTBX1();\n+\n+  CHECK(TEST_MSG, int, 8, 8, PRIx8, expected_vqtbx1, \"\");\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx8, expected_vqtbx1, \"\");\n+  CHECK(TEST_MSG, poly, 8, 8, PRIx8, expected_vqtbx1, \"\");\n+\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBX1Q\"\n+  CHECK(TEST_MSG, int, 8, 16, PRIx8, expected_vqtbx1q, \"\");\n+  CHECK(TEST_MSG, uint, 8, 16, PRIx8, expected_vqtbx1q, \"\");\n+  CHECK(TEST_MSG, poly, 8, 16, PRIx8, expected_vqtbx1q, \"\");\n+\n+  /* Check vqtbx2.  */\n+  clean_results ();\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBX2\"\n+  TEST_ALL_VQTBXX(2);\n+\n+  CHECK(TEST_MSG, int, 8, 8, PRIx8, expected_vqtbx2, \"\");\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx8, expected_vqtbx2, \"\");\n+  CHECK(TEST_MSG, poly, 8, 8, PRIx8, expected_vqtbx2, \"\");\n+\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBX2Q\"\n+  CHECK(TEST_MSG, int, 8, 16, PRIx8, expected_vqtbx2q, \"\");\n+  CHECK(TEST_MSG, uint, 8, 16, PRIx8, expected_vqtbx2q, \"\");\n+  CHECK(TEST_MSG, poly, 8, 16, PRIx8, expected_vqtbx2q, \"\");\n+\n+  /* Check vqtbx3.  */\n+  clean_results ();\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBX3\"\n+  TEST_ALL_VQTBXX(3);\n+\n+  CHECK(TEST_MSG, int, 8, 8, PRIx8, expected_vqtbx3, \"\");\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx8, expected_vqtbx3, \"\");\n+  CHECK(TEST_MSG, poly, 8, 8, PRIx8, expected_vqtbx3, \"\");\n+\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBX3Q\"\n+  CHECK(TEST_MSG, int, 8, 16, PRIx8, expected_vqtbx3q, \"\");\n+  CHECK(TEST_MSG, uint, 8, 16, PRIx8, expected_vqtbx3q, \"\");\n+  CHECK(TEST_MSG, poly, 8, 16, PRIx8, expected_vqtbx3q, \"\");\n+\n+  /* Check vqtbx4.  */\n+  clean_results ();\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBX4\"\n+  TEST_ALL_VQTBXX(4);\n+\n+  CHECK(TEST_MSG, int, 8, 8, PRIx8, expected_vqtbx4, \"\");\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx8, expected_vqtbx4, \"\");\n+  CHECK(TEST_MSG, poly, 8, 8, PRIx8, expected_vqtbx4, \"\");\n+\n+#undef TEST_MSG\n+#define TEST_MSG \"VQTBX4Q\"\n+  CHECK(TEST_MSG, int, 8, 16, PRIx8, expected_vqtbx4q, \"\");\n+  CHECK(TEST_MSG, uint, 8, 16, PRIx8, expected_vqtbx4q, \"\");\n+  CHECK(TEST_MSG, poly, 8, 16, PRIx8, expected_vqtbx4q, \"\");\n+}\n+\n+int main (void)\n+{\n+  exec_vqtbX ();\n+  return 0;\n+}"}]}