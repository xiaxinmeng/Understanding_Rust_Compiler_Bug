{"sha": "041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "node_id": "C_kwDOANBUbNoAKDA0MWNmYTBjZTQ0ZDRjMjA3OTAzZDQxZTZlYWJjY2RhYjJkZmE5MGI", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-01-06T07:33:20Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-01-07T03:13:00Z"}, "message": "Support commutative alternative for AVX512 vpcmpeq{b,w,d,q}\n\ngcc/ChangeLog:\n\n\t* config/i386/sse.md\n\t(*<avx512>_eq<mode>3<mask_scalar_merge_name>_1): Extend to\n\tUNSPEC_PCMP_UNSIGNED.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/pr103774.c: New test.\n\t* gcc.target/i386/avx512bw-vpcmpequb-1.c: Adjust scan assembler\n\tfrom vpcmpub to (?:vpcmpub|vpcmpeqb).\n\t* gcc.target/i386/avx512bw-vpcmpequw-1.c: Ditto.\n\t* gcc.target/i386/avx512bw-vpcmpub-1.c: Ditto.\n\t* gcc.target/i386/avx512bw-vpcmpuw-1.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpequd-1.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpequq-1.c: Ditto.\n\t* gcc.target/i386/avx512f-vpcmpud-1.c: Ditto.\n\t* gcc.target/i386/avx512vl-vpcmpequd-1.c: Ditto.\n\t* gcc.target/i386/avx512vl-vpcmpequq-1.c: Ditto.\n\t* gcc.target/i386/avx512vl-vpcmpuq-1.c: Ditto.", "tree": {"sha": "a5edd3acc28fc08068e0a269a3a844f2ab9d6750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5edd3acc28fc08068e0a269a3a844f2ab9d6750"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f759dbdcddd5eae795da48f46edae274a431cbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f759dbdcddd5eae795da48f46edae274a431cbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f759dbdcddd5eae795da48f46edae274a431cbc"}], "stats": {"total": 145, "additions": 85, "deletions": 60}, "files": [{"sha": "d8f303511c1adec37c5c2c53d5d93ccad19e8ccc", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "patch": "@@ -3895,6 +3895,22 @@\n \t   UNSPEC_PCMP_ITER))]\n   \"operands[4] = GEN_INT (INTVAL (operands[3]) ^ 4);\")\n \n+(define_insn \"*<avx512>_eq<mode>3<mask_scalar_merge_name>_1\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k,k\")\n+\t(unspec:<avx512fmaskmode>\n+\t  [(match_operand:VI12_AVX512VL 1 \"nonimm_or_0_operand\" \"%v,v\")\n+\t   (match_operand:VI12_AVX512VL 2 \"nonimm_or_0_operand\" \"vm,C\")\n+\t   (const_int 0)]\n+\t  UNSPEC_PCMP_ITER))]\n+  \"TARGET_AVX512BW && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n+  \"@\n+   vpcmpeq<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\n+   vptestnm<ssemodesuffix>\\t{%1, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %1}\"\n+  [(set_attr \"type\" \"ssecmp\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_insn \"<avx512>_ucmp<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k\")\n \t(unspec:<avx512fmaskmode>\n@@ -3977,6 +3993,22 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<VI12_AVX512VL:sseinsnmode>\")])\n \n+(define_insn \"*<avx512>_eq<mode>3<mask_scalar_merge_name>_1\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k,k\")\n+\t(unspec:<avx512fmaskmode>\n+\t  [(match_operand:VI48_AVX512VL 1 \"nonimm_or_0_operand\" \"%v,v\")\n+\t   (match_operand:VI48_AVX512VL 2 \"nonimm_or_0_operand\" \"vm,C\")\n+\t   (const_int 0)]\n+\t  UNSPEC_PCMP_ITER))]\n+  \"TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n+  \"@\n+   vpcmpeq<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\n+   vptestnm<ssemodesuffix>\\t{%1, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %1}\"\n+  [(set_attr \"type\" \"ssecmp\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_insn \"<avx512>_ucmp<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k\")\n \t(unspec:<avx512fmaskmode>\n@@ -16248,38 +16280,6 @@\n   \"TARGET_AVX512F\"\n   \"ix86_fixup_binary_operands_no_copy (EQ, <MODE>mode, operands);\")\n \n-(define_insn \"*<avx512>_eq<mode>3<mask_scalar_merge_name>_1\"\n-  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k,k\")\n-\t(unspec:<avx512fmaskmode>\n-\t  [(match_operand:VI12_AVX512VL 1 \"nonimm_or_0_operand\" \"%v,v\")\n-\t   (match_operand:VI12_AVX512VL 2 \"nonimm_or_0_operand\" \"vm,C\")\n-\t   (const_int 0)]\n-\t  UNSPEC_PCMP))]\n-  \"TARGET_AVX512BW && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n-  \"@\n-   vpcmpeq<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\n-   vptestnm<ssemodesuffix>\\t{%1, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %1}\"\n-  [(set_attr \"type\" \"ssecmp\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"evex\")\n-   (set_attr \"mode\" \"<sseinsnmode>\")])\n-\n-(define_insn \"*<avx512>_eq<mode>3<mask_scalar_merge_name>_1\"\n-  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k,k\")\n-\t(unspec:<avx512fmaskmode>\n-\t  [(match_operand:VI48_AVX512VL 1 \"nonimm_or_0_operand\" \"%v,v\")\n-\t   (match_operand:VI48_AVX512VL 2 \"nonimm_or_0_operand\" \"vm,C\")\n-\t   (const_int 0)]\n-\t  UNSPEC_PCMP))]\n-  \"TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n-  \"@\n-   vpcmpeq<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\n-   vptestnm<ssemodesuffix>\\t{%1, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %1}\"\n-  [(set_attr \"type\" \"ssecmp\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"evex\")\n-   (set_attr \"mode\" \"<sseinsnmode>\")])\n-\n (define_insn \"*sse4_1_eqv2di3\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=Yr,*x,x\")\n \t(eq:V2DI"}, {"sha": "9a85753c9fbfe17e62dabae704aaa77642e83d42", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-vpcmpequb-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpcmpequb-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpcmpequb-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpcmpequb-1.c?ref=041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512bw -mavx512vl -O2\" } */\n-/* { dg-final { scan-assembler-times \"vpcmpub\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpub\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpub\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpub\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpub\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpub\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpub|vpcmpeqb)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpub|vpcmpeqb)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpub|vpcmpeqb)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpub|vpcmpeqb)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpub|vpcmpeqb)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpub|vpcmpeqb)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n "}, {"sha": "a6c7776b52f6a6cfec73639ac88648c5441a1080", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-vpcmpequw-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpcmpequw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpcmpequw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpcmpequw-1.c?ref=041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512bw -mavx512vl -O2\" } */\n-/* { dg-final { scan-assembler-times \"vpcmpuw\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpuw\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpuw\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpuw\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpuw\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpuw\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuw|vpcmpeqw)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuw|vpcmpeqw)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuw|vpcmpeqw)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuw|vpcmpeqw)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuw|vpcmpeqw)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuw|vpcmpeqw)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n "}, {"sha": "6d8a442d79f7a27d0dc8a13aee7a732ed5c7c4d2", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-vpcmpub-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpcmpub-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpcmpub-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpcmpub-1.c?ref=041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mavx512bw -mavx512vl\" } */\n-/* { dg-final { scan-assembler-times \"vpcmpub\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpub|vpcmpeqb)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpcmpub\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpcmpub\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpcmpub\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */"}, {"sha": "c0d84ded11b7730da984b0df66740c41ddbd328e", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-vpcmpuw-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpcmpuw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpcmpuw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpcmpuw-1.c?ref=041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "patch": "@@ -5,7 +5,7 @@\n /* { dg-final { scan-assembler-times \"vpcmpuw\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpcmpuw\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpcmpuw\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpuw\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuw|vpcmpeqw)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n "}, {"sha": "3c567c648b69e55c0ec2c718c32d5b65f7b59f01", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpequd-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpequd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpequd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpequd-1.c?ref=041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n-/* { dg-final { scan-assembler-times \"vpcmpud\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpud\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[0-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpud|vpcmpeqd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpud|vpcmpeqd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[0-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n "}, {"sha": "f3f35ec62ec33a734f1d2cb32bfc9dcd061f16b7", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpequq-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpequq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpequq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpequq-1.c?ref=041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n-/* { dg-final { scan-assembler-times \"vpcmpuq\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpuq\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[0-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuq|vpcmpeqq)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuq|vpcmpeqq)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[0-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n "}, {"sha": "be0a8feb0254396b2401b646e63e5188c0cdb099", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpcmpud-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpud-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpud-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpcmpud-1.c?ref=041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mavx512f\" } */\n-/* { dg-final { scan-assembler-times \"vpcmpud\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpud|vpcmpeqd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpcmpud\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>"}, {"sha": "a0bee114c1506c0dcd5fddb7577483bddbba90d3", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vpcmpequd-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpcmpequd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpcmpequd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpcmpequd-1.c?ref=041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "patch": "@@ -1,9 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512vl -O2\" } */\n-/* { dg-final { scan-assembler-times \"vpcmpud\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpud\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpud\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpud\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpud|vpcmpeqd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpud|vpcmpeqd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpud|vpcmpeqd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpud|vpcmpeqd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n "}, {"sha": "c925d3226ecc378ab9c2d907b26b66958894993e", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vpcmpequq-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpcmpequq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpcmpequq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpcmpequq-1.c?ref=041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "patch": "@@ -1,9 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512vl -O2\" } */\n-/* { dg-final { scan-assembler-times \"vpcmpuq\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpuq\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpuq\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpuq\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuq|vpcmpeqq)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuq|vpcmpeqq)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuq|vpcmpeqq)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuq|vpcmpeqq)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n "}, {"sha": "f93fca2b6551442f1713811536533b6fdedcd44f", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vpcmpuq-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpcmpuq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpcmpuq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpcmpuq-1.c?ref=041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "patch": "@@ -2,7 +2,7 @@\n /* { dg-options \"-O2 -mavx512vl\" } */\n /* { dg-final { scan-assembler-times \"vpcmpuq\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpcmpuq\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpcmpuq\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpcmpuq|vpcmpeqq)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpcmpuq\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>"}, {"sha": "0dafb1b0117bd7fa0905db2ad5126af9244c33b7", "filename": "gcc/testsuite/gcc.target/i386/pr103774.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103774.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041cfa0ce44d4c207903d41e6eabccdab2dfa90b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103774.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103774.c?ref=041cfa0ce44d4c207903d41e6eabccdab2dfa90b", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=cannonlake -O2\" } */\n+/* { dg-final { scan-assembler-not {(?n)vmovdq} } } */\n+/* There should be no load + vpcmp, just vpcmp with memory operand.  */\n+\n+#include<immintrin.h>\n+__mmask16\n+foo (__m256i* n, __m256i mch256)\n+{\n+  __m256i data1 = _mm256_loadu_si256(n);\n+  __m256i data2 = _mm256_loadu_si256(n+1);\n+  __mmask16 mask1 = _mm256_cmpeq_epu16_mask(data1, mch256);\n+  __mmask16 mask2 = _mm256_cmpeq_epu16_mask(data2, mch256);\n+  return mask1 + mask2;\n+}\n+\n+__mmask16\n+foo1 (__m256i* n, __m256i mch256)\n+{\n+  __m256i data1 = _mm256_loadu_si256(n);\n+  __m256i data2 = _mm256_loadu_si256(n+1);\n+  __mmask16 mask1 = _mm256_cmpeq_epu16_mask(mch256, data1);\n+  __mmask16 mask2 = _mm256_cmpeq_epu16_mask(mch256, data2);\n+  return mask1 + mask2;\n+}"}]}