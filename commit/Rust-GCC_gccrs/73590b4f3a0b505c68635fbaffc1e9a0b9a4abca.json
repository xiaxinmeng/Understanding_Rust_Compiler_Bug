{"sha": "73590b4f3a0b505c68635fbaffc1e9a0b9a4abca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM1OTBiNGYzYTBiNTA1YzY4NjM1ZmJhZmZjMWU5YTBiOWE0YWJjYQ==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2012-08-15T05:56:08Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2012-08-15T05:56:08Z"}, "message": "mips.md (define_attr accum_in): New instruction attribute.\n\n\t* config/mips/mips.md (define_attr accum_in): New instruction attribute.\n\tSet it for imadd and fmadd patterns.\n\t* config/mips/mips.c (mips_linked_madd_p): Use accum_in to extract\n\taccumulator register.\n\nFrom-SVN: r190406", "tree": {"sha": "13306ffc530394b77ebca3e05468e62d966719c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13306ffc530394b77ebca3e05468e62d966719c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73590b4f3a0b505c68635fbaffc1e9a0b9a4abca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73590b4f3a0b505c68635fbaffc1e9a0b9a4abca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73590b4f3a0b505c68635fbaffc1e9a0b9a4abca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73590b4f3a0b505c68635fbaffc1e9a0b9a4abca/comments", "author": null, "committer": null, "parents": [{"sha": "f5cc3cbbcf7fd8b80e042f422d3165a1f4c79d39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5cc3cbbcf7fd8b80e042f422d3165a1f4c79d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5cc3cbbcf7fd8b80e042f422d3165a1f4c79d39"}], "stats": {"total": 50, "additions": 37, "deletions": 13}, "files": [{"sha": "a8b702de14d21991e53c6255443518c92c31aa88", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73590b4f3a0b505c68635fbaffc1e9a0b9a4abca/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73590b4f3a0b505c68635fbaffc1e9a0b9a4abca/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=73590b4f3a0b505c68635fbaffc1e9a0b9a4abca", "patch": "@@ -12372,25 +12372,24 @@ mips_output_division (const char *division, rtx *operands)\n bool\n mips_linked_madd_p (rtx out_insn, rtx in_insn)\n {\n-  rtx x;\n+  enum attr_accum_in accum_in;\n+  int accum_in_opnum;\n+  rtx accum_in_op;\n \n-  x = single_set (in_insn);\n-  if (x == 0)\n+  if (recog_memoized (in_insn) < 0)\n     return false;\n \n-  x = SET_SRC (x);\n+  accum_in = get_attr_accum_in (in_insn);\n+  if (accum_in == ACCUM_IN_NONE)\n+    return false;\n \n-  if (GET_CODE (x) == PLUS\n-      && GET_CODE (XEXP (x, 0)) == MULT\n-      && reg_set_p (XEXP (x, 1), out_insn))\n-    return true;\n+  accum_in_opnum = accum_in - ACCUM_IN_0;\n \n-  if (GET_CODE (x) == MINUS\n-      && GET_CODE (XEXP (x, 1)) == MULT\n-      && reg_set_p (XEXP (x, 0), out_insn))\n-    return true;\n+  extract_insn (in_insn);\n+  gcc_assert (accum_in_opnum < recog_data.n_operands);\n+  accum_in_op = recog_data.operand[accum_in_opnum];\n \n-  return false;\n+  return reg_set_p (accum_in_op, out_insn);\n }\n \n /* True if the dependency between OUT_INSN and IN_INSN is on the store"}, {"sha": "9022b0a964eb74d38405bd066a1330f98576c1f2", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73590b4f3a0b505c68635fbaffc1e9a0b9a4abca/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73590b4f3a0b505c68635fbaffc1e9a0b9a4abca/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=73590b4f3a0b505c68635fbaffc1e9a0b9a4abca", "patch": "@@ -274,6 +274,8 @@\n ;; \"11\" specifies MEMMODEL_ACQUIRE.\n (define_attr \"sync_memmodel\" \"\" (const_int 10))\n \n+;; Accumulator operand for madd patterns.\n+(define_attr \"accum_in\" \"none,0,1,2,3,4,5\" (const_string \"none\"))\n \n ;; Classification of each insn.\n ;; branch\tconditional branch\n@@ -1602,6 +1604,7 @@\n     madd\\t%1,%2\n     #\"\n   [(set_attr \"type\"\t\"imadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"4,8\")])\n \n@@ -1620,6 +1623,7 @@\n     madd\\t%0,%1,%2\n     #\"\n   [(set_attr \"type\"\t\"imadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"4,4,8\")])\n \n@@ -1658,6 +1662,7 @@\n     return \"%[macc\\t%@,%1,%2%]\";\n }\n   [(set_attr \"type\" \"imadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"*msac\"\n@@ -1676,6 +1681,7 @@\n     return \"msac\\t$0,%2,%3\";\n }\n   [(set_attr \"type\"     \"imadd\")\n+   (set_attr \"accum_in\"\t\"1\")\n    (set_attr \"mode\"     \"SI\")])\n \n ;; An msac-like instruction implemented using negation and a macc.\n@@ -1699,6 +1705,7 @@\n \t(clobber (match_dup 4))])]\n   \"\"\n   [(set_attr \"type\"     \"imadd\")\n+   (set_attr \"accum_in\"\t\"1\")\n    (set_attr \"length\"\t\"8\")])\n \n ;; Patterns generated by the define_peephole2 below.\n@@ -1715,6 +1722,7 @@\n   \"ISA_HAS_MACC && reload_completed\"\n   \"macc\\t%3,%1,%2\"\n   [(set_attr \"type\"\t\"imadd\")\n+   (set_attr \"accum_in\"\t\"0\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"*msac2\"\n@@ -1729,6 +1737,7 @@\n   \"ISA_HAS_MSAC && reload_completed\"\n   \"msac\\t%3,%1,%2\"\n   [(set_attr \"type\"\t\"imadd\")\n+   (set_attr \"accum_in\"\t\"0\")\n    (set_attr \"mode\"\t\"SI\")])\n \n ;; Convert macc $0,<r1>,<r2> & mflo <r3> into macc <r3>,<r1>,<r2>\n@@ -1831,6 +1840,7 @@\n    msub\\t%2,%3\n    #\"\n   [(set_attr \"type\"     \"imadd\")\n+   (set_attr \"accum_in\"\t\"1\")\n    (set_attr \"mode\"     \"SI\")\n    (set_attr \"length\"   \"4,8\")])\n \n@@ -2040,6 +2050,7 @@\n     return \"msac<u>\\t$0,%1,%2\";\n }\n   [(set_attr \"type\" \"imadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\" \"SI\")])\n \n ;; _highpart patterns\n@@ -2260,6 +2271,7 @@\n   \"TARGET_MAD\"\n   \"mad\\t%1,%2\"\n   [(set_attr \"type\"\t\"imadd\")\n+   (set_attr \"accum_in\"\t\"0\")\n    (set_attr \"mode\"\t\"SI\")])\n \n ;; See the comment above <u>msubsidi4 for the relationship between\n@@ -2284,6 +2296,7 @@\n     return \"%[macc<u>\\t%@,%1,%2%]\";\n }\n   [(set_attr \"type\" \"imadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\" \"SI\")])\n \n ;; Floating point multiply accumulate instructions.\n@@ -2296,6 +2309,7 @@\n   \"ISA_HAS_FP_MADD4_MSUB4 && TARGET_FUSED_MADD\"\n   \"madd.<fmt>\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"*madd3<mode>\"\n@@ -2306,6 +2320,7 @@\n   \"ISA_HAS_FP_MADD3_MSUB3 && TARGET_FUSED_MADD\"\n   \"madd.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"*msub4<mode>\"\n@@ -2316,6 +2331,7 @@\n   \"ISA_HAS_FP_MADD4_MSUB4 && TARGET_FUSED_MADD\"\n   \"msub.<fmt>\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"*msub3<mode>\"\n@@ -2326,6 +2342,7 @@\n   \"ISA_HAS_FP_MADD3_MSUB3 && TARGET_FUSED_MADD\"\n   \"msub.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"*nmadd4<mode>\"\n@@ -2340,6 +2357,7 @@\n    && !HONOR_NANS (<MODE>mode)\"\n   \"nmadd.<fmt>\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"*nmadd3<mode>\"\n@@ -2354,6 +2372,7 @@\n    && !HONOR_NANS (<MODE>mode)\"\n   \"nmadd.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"*nmadd4<mode>_fastmath\"\n@@ -2368,6 +2387,7 @@\n    && !HONOR_NANS (<MODE>mode)\"\n   \"nmadd.<fmt>\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"*nmadd3<mode>_fastmath\"\n@@ -2382,6 +2402,7 @@\n    && !HONOR_NANS (<MODE>mode)\"\n   \"nmadd.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"accum_in\"\t\"3\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"*nmsub4<mode>\"\n@@ -2396,6 +2417,7 @@\n    && !HONOR_NANS (<MODE>mode)\"\n   \"nmsub.<fmt>\\t%0,%1,%2,%3\"\n   [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"accum_in\"\t\"1\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"*nmsub3<mode>\"\n@@ -2410,6 +2432,7 @@\n    && !HONOR_NANS (<MODE>mode)\"\n   \"nmsub.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"accum_in\"\t\"1\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"*nmsub4<mode>_fastmath\"\n@@ -2424,6 +2447,7 @@\n    && !HONOR_NANS (<MODE>mode)\"\n   \"nmsub.<fmt>\\t%0,%1,%2,%3\"\n   [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"accum_in\"\t\"1\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"*nmsub3<mode>_fastmath\"\n@@ -2438,6 +2462,7 @@\n    && !HONOR_NANS (<MODE>mode)\"\n   \"nmsub.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"accum_in\"\t\"1\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n ;;"}]}