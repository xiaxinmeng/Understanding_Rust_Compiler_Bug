{"sha": "51632249ef73fee7a6c76af82acef9164e20761b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE2MzIyNDllZjczZmVlN2E2Yzc2YWY4MmFjZWY5MTY0ZTIwNzYxYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-03-31T18:59:19Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-03-31T18:59:19Z"}, "message": "semantics.c (begin_inline_definitions, [...]): Rename from finish_default_args and begin_inline_definitions...\n\n\t* semantics.c (begin_inline_definitions,\n\tfinish_inline_definitions): Rename from finish_default_args and\n\tbegin_inline_definitions, respectively, to something that isn't a\n\ttotal lie.  :)\n\t* parse.y (structsp): Adjust.\n\t* tree.c (hash_tree_cons): Remove obsolete via_* parms.\n\t(list_hash_lookup): Likewise.\n\t(hash_tree_chain): Adjust.\n\t* pt.c (tsubst): Adjust.\n\t(tsubst_arg_types): Use plain hash_tree_cons.\n\t* cp-tree.h (hash_tree_cons_simple): Lose.\n\t* parse.y (declmods, nonempty_cv_qualifiers): Use hash_tree_cons.\n\nFrom-SVN: r26092", "tree": {"sha": "75c0f8d915e7105a649025208fc6eb9ceb37f4b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75c0f8d915e7105a649025208fc6eb9ceb37f4b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51632249ef73fee7a6c76af82acef9164e20761b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51632249ef73fee7a6c76af82acef9164e20761b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51632249ef73fee7a6c76af82acef9164e20761b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51632249ef73fee7a6c76af82acef9164e20761b/comments", "author": null, "committer": null, "parents": [{"sha": "bbd2180d18856ab3c384cdfb4b1af5b3fb8173ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbd2180d18856ab3c384cdfb4b1af5b3fb8173ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbd2180d18856ab3c384cdfb4b1af5b3fb8173ef"}], "stats": {"total": 1048, "additions": 529, "deletions": 519}, "files": [{"sha": "e96a2746561efa421ccc325acdca821d82602a78", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=51632249ef73fee7a6c76af82acef9164e20761b", "patch": "@@ -1,3 +1,19 @@\n+1999-03-31  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* semantics.c (begin_inline_definitions,\n+\tfinish_inline_definitions): Rename from finish_default_args and\n+\tbegin_inline_definitions, respectively, to something that isn't a\n+\ttotal lie.  :)\n+\t* parse.y (structsp): Adjust.\n+\n+\t* tree.c (hash_tree_cons): Remove obsolete via_* parms.\n+\t(list_hash_lookup): Likewise.\n+\t(hash_tree_chain): Adjust.\n+\t* pt.c (tsubst): Adjust.\n+\t(tsubst_arg_types): Use plain hash_tree_cons.\n+\t* cp-tree.h (hash_tree_cons_simple): Lose.\n+\t* parse.y (declmods, nonempty_cv_qualifiers): Use hash_tree_cons.\n+\n Wed Mar 31 10:48:29 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n         * Makefile.in (hash.h): Generate using gperf language 'C', not"}, {"sha": "9babb014af5715b87a850256a775f83d6633e7f9", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=51632249ef73fee7a6c76af82acef9164e20761b", "patch": "@@ -3252,6 +3252,7 @@ extern tree begin_class_definition              PROTO((tree));\n extern tree finish_class_definition             PROTO((tree, tree, int));\n extern void finish_default_args                 PROTO((void));\n extern void begin_inline_definitions            PROTO((void));\n+extern void finish_inline_definitions           PROTO((void));\n extern tree finish_member_class_template        PROTO((tree));\n extern void finish_template_decl                PROTO((tree));\n extern tree finish_template_type                PROTO((tree, tree, int));\n@@ -3295,7 +3296,7 @@ extern tree build_cplus_array_type\t\tPROTO((tree, tree));\n extern int layout_basetypes\t\t\tPROTO((tree, int));\n extern tree build_vbase_pointer_fields\t\tPROTO((tree));\n extern tree build_base_fields\t\t\tPROTO((tree));\n-extern tree hash_tree_cons\t\t\tPROTO((int, int, int, tree, tree, tree));\n+extern tree hash_tree_cons\t\t\tPROTO((tree, tree, tree));\n extern tree hash_tree_chain\t\t\tPROTO((tree, tree));\n extern tree hash_chainon\t\t\tPROTO((tree, tree));\n extern tree make_binfo\t\t\t\tPROTO((tree, tree, tree, tree));\n@@ -3347,13 +3348,12 @@ extern tree build_dummy_object\t\t\tPROTO((tree));\n extern tree maybe_dummy_object\t\t\tPROTO((tree, tree *));\n extern int is_dummy_object\t\t\tPROTO((tree));\n extern tree search_tree                         PROTO((tree, tree (*)(tree)));\n+\n #define scratchalloc expralloc\n #define scratch_tree_cons expr_tree_cons\n #define build_scratch_list build_expr_list\n #define make_scratch_vec make_temp_vec\n #define push_scratch_obstack push_expression_obstack\n-#define hash_tree_cons_simple(PURPOSE, VALUE, CHAIN) \\\n-  hash_tree_cons (0, 0, 0, (PURPOSE), (VALUE), (CHAIN))\n \n /* in typeck.c */\n extern int string_conv_p\t\t\tPROTO((tree, tree, int));"}, {"sha": "6e3b2111f26f356d475b76d035e4b8dedd12e69d", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 473, "deletions": 469, "changes": 942, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=51632249ef73fee7a6c76af82acef9164e20761b", "patch": "@@ -682,56 +682,56 @@ static const short yyrline[] = { 0,\n   1596,  1600,  1603,  1608,  1610,  1614,  1627,  1630,  1637,  1644,\n   1649,  1651,  1656,  1658,  1665,  1667,  1671,  1675,  1681,  1685,\n   1688,  1692,  1695,  1705,  1707,  1710,  1714,  1717,  1720,  1723,\n-  1726,  1732,  1738,  1740,  1745,  1747,  1756,  1759,  1761,  1764,\n-  1770,  1772,  1782,  1786,  1789,  1792,  1797,  1800,  1808,  1810,\n-  1812,  1814,  1817,  1820,  1835,  1854,  1857,  1859,  1862,  1864,\n-  1868,  1870,  1874,  1876,  1880,  1883,  1887,  1893,  1894,  1906,\n-  1913,  1916,  1922,  1926,  1931,  1937,  1938,  1946,  1949,  1953,\n-  1956,  1960,  1965,  1968,  1972,  1975,  1977,  1979,  1981,  1988,\n-  1990,  1991,  1992,  1996,  1999,  2003,  2006,  2012,  2014,  2017,\n-  2020,  2023,  2029,  2032,  2035,  2037,  2039,  2043,  2049,  2057,\n-  2064,  2068,  2070,  2075,  2078,  2081,  2083,  2085,  2089,  2094,\n-  2101,  2105,  2109,  2116,  2120,  2123,  2126,  2132,  2144,  2146,\n-  2149,  2169,  2171,  2174,  2176,  2181,  2183,  2185,  2187,  2189,\n-  2191,  2195,  2203,  2206,  2208,  2212,  2218,  2223,  2228,  2230,\n-  2234,  2237,  2241,  2247,  2253,  2278,  2284,  2286,  2289,  2292,\n-  2294,  2298,  2300,  2304,  2309,  2315,  2318,  2319,  2340,  2363,\n-  2365,  2369,  2380,  2394,  2399,  2400,  2401,  2402,  2405,  2420,\n-  2425,  2431,  2433,  2438,  2440,  2442,  2444,  2446,  2448,  2451,\n-  2461,  2468,  2493,  2499,  2502,  2505,  2507,  2518,  2523,  2526,\n-  2531,  2534,  2541,  2551,  2554,  2561,  2571,  2573,  2576,  2578,\n-  2581,  2588,  2596,  2603,  2609,  2615,  2623,  2627,  2632,  2636,\n-  2639,  2648,  2650,  2654,  2657,  2662,  2666,  2672,  2683,  2686,\n-  2690,  2694,  2702,  2707,  2713,  2716,  2718,  2720,  2726,  2729,\n-  2731,  2733,  2735,  2739,  2742,  2760,  2770,  2772,  2773,  2777,\n-  2782,  2785,  2787,  2789,  2791,  2795,  2801,  2803,  2811,  2814,\n-  2816,  2818,  2820,  2824,  2827,  2830,  2832,  2834,  2836,  2840,\n-  2843,  2846,  2848,  2850,  2852,  2854,  2861,  2865,  2870,  2874,\n-  2879,  2881,  2885,  2888,  2890,  2893,  2895,  2896,  2899,  2901,\n-  2903,  2909,  2924,  2930,  2936,  2950,  2952,  2956,  2970,  2972,\n-  2974,  2978,  2984,  2997,  2999,  3003,  3016,  3022,  3024,  3025,\n-  3026,  3034,  3039,  3048,  3049,  3053,  3056,  3062,  3068,  3071,\n-  3073,  3075,  3077,  3081,  3085,  3089,  3092,  3097,  3100,  3102,\n-  3104,  3106,  3108,  3110,  3112,  3114,  3118,  3122,  3126,  3130,\n-  3131,  3133,  3135,  3137,  3139,  3141,  3143,  3145,  3147,  3155,\n-  3157,  3158,  3159,  3162,  3168,  3170,  3175,  3177,  3180,  3194,\n-  3197,  3200,  3204,  3207,  3214,  3216,  3219,  3221,  3223,  3226,\n-  3229,  3232,  3235,  3237,  3240,  3244,  3246,  3252,  3254,  3255,\n-  3257,  3262,  3264,  3266,  3268,  3270,  3273,  3274,  3276,  3279,\n-  3280,  3283,  3283,  3286,  3286,  3289,  3289,  3291,  3293,  3295,\n-  3297,  3303,  3309,  3312,  3315,  3321,  3323,  3325,  3329,  3331,\n-  3332,  3333,  3335,  3338,  3345,  3350,  3356,  3360,  3362,  3365,\n-  3367,  3370,  3374,  3376,  3379,  3381,  3384,  3401,  3407,  3415,\n-  3417,  3419,  3423,  3426,  3427,  3435,  3439,  3443,  3446,  3447,\n-  3453,  3456,  3459,  3461,  3465,  3470,  3473,  3483,  3488,  3489,\n-  3496,  3499,  3502,  3504,  3507,  3509,  3519,  3533,  3537,  3540,\n-  3542,  3546,  3550,  3553,  3556,  3558,  3562,  3564,  3571,  3578,\n-  3581,  3585,  3589,  3593,  3599,  3603,  3608,  3610,  3613,  3618,\n-  3624,  3635,  3638,  3640,  3644,  3649,  3651,  3658,  3661,  3663,\n-  3665,  3671,  3676,  3679,  3681,  3683,  3685,  3687,  3689,  3691,\n-  3693,  3695,  3697,  3699,  3701,  3703,  3705,  3707,  3709,  3711,\n-  3713,  3715,  3717,  3719,  3721,  3723,  3725,  3727,  3729,  3731,\n-  3733,  3735,  3737,  3739,  3741,  3744,  3746\n+  1726,  1732,  1738,  1740,  1745,  1747,  1765,  1768,  1770,  1773,\n+  1779,  1781,  1791,  1795,  1798,  1801,  1806,  1809,  1817,  1819,\n+  1821,  1823,  1826,  1829,  1844,  1863,  1866,  1868,  1871,  1873,\n+  1877,  1879,  1883,  1885,  1889,  1892,  1896,  1902,  1903,  1915,\n+  1922,  1925,  1931,  1935,  1940,  1946,  1947,  1955,  1958,  1962,\n+  1965,  1969,  1974,  1977,  1981,  1984,  1986,  1988,  1990,  1997,\n+  1999,  2000,  2001,  2005,  2008,  2012,  2015,  2021,  2023,  2026,\n+  2029,  2032,  2038,  2041,  2044,  2046,  2048,  2052,  2058,  2066,\n+  2073,  2077,  2079,  2084,  2087,  2090,  2092,  2094,  2098,  2103,\n+  2110,  2114,  2118,  2125,  2129,  2132,  2135,  2141,  2153,  2157,\n+  2162,  2182,  2184,  2187,  2189,  2194,  2196,  2198,  2200,  2202,\n+  2204,  2208,  2216,  2219,  2221,  2225,  2231,  2236,  2241,  2243,\n+  2247,  2250,  2254,  2260,  2266,  2291,  2297,  2299,  2302,  2305,\n+  2307,  2311,  2313,  2317,  2322,  2328,  2331,  2332,  2353,  2376,\n+  2378,  2382,  2393,  2407,  2412,  2413,  2414,  2415,  2418,  2433,\n+  2438,  2444,  2446,  2451,  2453,  2455,  2457,  2459,  2461,  2464,\n+  2474,  2481,  2506,  2512,  2515,  2518,  2520,  2531,  2536,  2539,\n+  2544,  2547,  2554,  2564,  2567,  2574,  2584,  2586,  2589,  2591,\n+  2594,  2601,  2609,  2616,  2622,  2628,  2636,  2640,  2645,  2649,\n+  2652,  2661,  2663,  2667,  2670,  2675,  2679,  2685,  2696,  2699,\n+  2703,  2707,  2715,  2720,  2726,  2729,  2731,  2733,  2739,  2742,\n+  2744,  2746,  2748,  2752,  2755,  2773,  2783,  2785,  2786,  2790,\n+  2795,  2798,  2800,  2802,  2804,  2808,  2814,  2816,  2824,  2827,\n+  2829,  2831,  2833,  2837,  2840,  2843,  2845,  2847,  2849,  2853,\n+  2856,  2859,  2861,  2863,  2865,  2867,  2874,  2878,  2883,  2887,\n+  2892,  2894,  2898,  2901,  2903,  2906,  2908,  2909,  2912,  2914,\n+  2916,  2922,  2937,  2943,  2949,  2963,  2965,  2969,  2983,  2985,\n+  2987,  2991,  2997,  3010,  3012,  3016,  3029,  3035,  3037,  3038,\n+  3039,  3047,  3052,  3061,  3062,  3066,  3069,  3075,  3081,  3084,\n+  3086,  3088,  3090,  3094,  3098,  3102,  3105,  3110,  3113,  3115,\n+  3117,  3119,  3121,  3123,  3125,  3127,  3131,  3135,  3139,  3143,\n+  3144,  3146,  3148,  3150,  3152,  3154,  3156,  3158,  3160,  3168,\n+  3170,  3171,  3172,  3175,  3181,  3183,  3188,  3190,  3193,  3207,\n+  3210,  3213,  3217,  3220,  3227,  3229,  3232,  3234,  3236,  3239,\n+  3242,  3245,  3248,  3250,  3253,  3257,  3259,  3265,  3267,  3268,\n+  3270,  3275,  3277,  3279,  3281,  3283,  3286,  3287,  3289,  3292,\n+  3293,  3296,  3296,  3299,  3299,  3302,  3302,  3304,  3306,  3308,\n+  3310,  3316,  3322,  3325,  3328,  3334,  3336,  3338,  3342,  3344,\n+  3345,  3346,  3348,  3351,  3358,  3363,  3369,  3373,  3375,  3378,\n+  3380,  3383,  3387,  3389,  3392,  3394,  3397,  3414,  3420,  3428,\n+  3430,  3432,  3436,  3439,  3440,  3448,  3452,  3456,  3459,  3460,\n+  3466,  3469,  3472,  3474,  3478,  3483,  3486,  3496,  3501,  3502,\n+  3509,  3512,  3515,  3517,  3520,  3522,  3532,  3546,  3550,  3553,\n+  3555,  3559,  3563,  3566,  3569,  3571,  3575,  3577,  3584,  3591,\n+  3594,  3598,  3602,  3606,  3612,  3616,  3621,  3623,  3626,  3631,\n+  3637,  3648,  3651,  3653,  3657,  3662,  3664,  3671,  3674,  3676,\n+  3678,  3684,  3689,  3692,  3694,  3696,  3698,  3700,  3702,  3704,\n+  3706,  3708,  3710,  3712,  3714,  3716,  3718,  3720,  3722,  3724,\n+  3726,  3728,  3730,  3732,  3734,  3736,  3738,  3740,  3742,  3744,\n+  3746,  3748,  3750,  3752,  3754,  3757,  3759\n };\n #endif\n \n@@ -5701,82 +5701,82 @@ case 386:\n { yyval.ttype = decl_tree_cons (yyvsp[0].ttype, NULL_TREE, NULL_TREE); ;\n     break;}\n case 387:\n-#line 1758 \"parse.y\"\n+#line 1767 \"parse.y\"\n { yyval.ttype = yyvsp[0].ftype.t; TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 388:\n-#line 1760 \"parse.y\"\n-{ yyval.ttype = build_decl_list (NULL_TREE, yyval.ttype); ;\n+#line 1769 \"parse.y\"\n+{ yyval.ttype = hash_tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 389:\n-#line 1762 \"parse.y\"\n-{ yyval.ttype = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype);\n+#line 1771 \"parse.y\"\n+{ yyval.ttype = hash_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 390:\n-#line 1765 \"parse.y\"\n+#line 1774 \"parse.y\"\n { if (extra_warnings && TREE_STATIC (yyval.ttype))\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n-\t\t  yyval.ttype = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype);\n+\t\t  yyval.ttype = hash_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype);\n \t\t  TREE_STATIC (yyval.ttype) = TREE_STATIC (yyvsp[-1].ttype); ;\n     break;}\n case 391:\n-#line 1771 \"parse.y\"\n-{ yyval.ttype = decl_tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n+#line 1780 \"parse.y\"\n+{ yyval.ttype = hash_tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 392:\n-#line 1773 \"parse.y\"\n-{ yyval.ttype = decl_tree_cons (yyvsp[0].ttype, NULL_TREE, NULL_TREE); ;\n+#line 1782 \"parse.y\"\n+{ yyval.ttype = hash_tree_cons (yyvsp[0].ttype, NULL_TREE, NULL_TREE); ;\n     break;}\n case 393:\n-#line 1784 \"parse.y\"\n+#line 1793 \"parse.y\"\n { yyval.ftype.t = build_decl_list (NULL_TREE, yyvsp[0].ftype.t); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 394:\n-#line 1787 \"parse.y\"\n+#line 1796 \"parse.y\"\n { yyval.ftype.t = decl_tree_cons (NULL_TREE, yyvsp[0].ftype.t, yyvsp[-1].ftype.t); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 395:\n-#line 1790 \"parse.y\"\n+#line 1799 \"parse.y\"\n { yyval.ftype.t = decl_tree_cons (NULL_TREE, yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 396:\n-#line 1793 \"parse.y\"\n+#line 1802 \"parse.y\"\n { yyval.ftype.t = decl_tree_cons (NULL_TREE, yyvsp[-1].ftype.t, chainon (yyvsp[0].ttype, yyvsp[-2].ftype.t)); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-2].ftype.new_type_flag; ;\n     break;}\n case 397:\n-#line 1799 \"parse.y\"\n+#line 1808 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 398:\n-#line 1801 \"parse.y\"\n+#line 1810 \"parse.y\"\n { yyval.ttype = decl_tree_cons (NULL_TREE, yyvsp[0].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 400:\n-#line 1811 \"parse.y\"\n+#line 1820 \"parse.y\"\n { yyval.ftype.t = yyvsp[0].ttype; yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 401:\n-#line 1813 \"parse.y\"\n+#line 1822 \"parse.y\"\n { yyval.ftype.t = yyvsp[0].ttype; yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 402:\n-#line 1815 \"parse.y\"\n+#line 1824 \"parse.y\"\n { yyval.ftype.t = finish_typeof (yyvsp[-1].ttype);\n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 403:\n-#line 1818 \"parse.y\"\n+#line 1827 \"parse.y\"\n { yyval.ftype.t = groktypename (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 404:\n-#line 1821 \"parse.y\"\n+#line 1830 \"parse.y\"\n { tree type = TREE_TYPE (yyvsp[-1].ttype);\n \n                   yyval.ftype.new_type_flag = 0;\n@@ -5793,7 +5793,7 @@ case 404:\n \t\t;\n     break;}\n case 405:\n-#line 1836 \"parse.y\"\n+#line 1845 \"parse.y\"\n { tree type = groktypename (yyvsp[-1].ftype.t);\n \n                   yyval.ftype.new_type_flag = 0;\n@@ -5810,200 +5810,200 @@ case 405:\n \t\t;\n     break;}\n case 406:\n-#line 1856 \"parse.y\"\n+#line 1865 \"parse.y\"\n { yyval.ftype.t = yyvsp[0].ttype; yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 407:\n-#line 1858 \"parse.y\"\n+#line 1867 \"parse.y\"\n { yyval.ftype.t = yyvsp[0].ttype; yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 410:\n-#line 1865 \"parse.y\"\n+#line 1874 \"parse.y\"\n { check_multiple_declarators (); ;\n     break;}\n case 412:\n-#line 1871 \"parse.y\"\n+#line 1880 \"parse.y\"\n { check_multiple_declarators (); ;\n     break;}\n case 414:\n-#line 1877 \"parse.y\"\n+#line 1886 \"parse.y\"\n { check_multiple_declarators (); ;\n     break;}\n case 415:\n-#line 1882 \"parse.y\"\n+#line 1891 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 416:\n-#line 1884 \"parse.y\"\n+#line 1893 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-1].ttype)) yyvsp[-1].ttype = combine_strings (yyvsp[-1].ttype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 417:\n-#line 1889 \"parse.y\"\n+#line 1898 \"parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes); ;\n     break;}\n case 418:\n-#line 1893 \"parse.y\"\n+#line 1902 \"parse.y\"\n { cp_finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype, 1, LOOKUP_ONLYCONVERTING); ;\n     break;}\n case 419:\n-#line 1895 \"parse.y\"\n+#line 1904 \"parse.y\"\n { yyval.ttype = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t\t  yyvsp[0].ttype, prefix_attributes);\n \t\t  cp_finish_decl (yyval.ttype, NULL_TREE, yyvsp[-1].ttype, 1, 0); ;\n     break;}\n case 420:\n-#line 1908 \"parse.y\"\n+#line 1917 \"parse.y\"\n { yyvsp[0].itype = parse_decl (yyvsp[-3].ttype, yyvsp[-4].ttype, \n \t\t\t\t\t   yyvsp[-1].ttype, 1, &yyval.ttype); ;\n     break;}\n case 421:\n-#line 1913 \"parse.y\"\n+#line 1922 \"parse.y\"\n { cp_finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype, 1,\n \t\t\t\t  LOOKUP_ONLYCONVERTING);\n \t\t  yyval.itype = yyvsp[-2].itype; ;\n     break;}\n case 422:\n-#line 1917 \"parse.y\"\n+#line 1926 \"parse.y\"\n { tree d;\n \t\t  yyval.itype = parse_decl (yyvsp[-2].ttype, yyvsp[-3].ttype, yyvsp[0].ttype, 0, &d);\n \t\t  cp_finish_decl (d, NULL_TREE, yyvsp[-1].ttype, 1, 0); ;\n     break;}\n case 423:\n-#line 1924 \"parse.y\"\n+#line 1933 \"parse.y\"\n { yyval.itype = yyvsp[0].itype; ;\n     break;}\n case 424:\n-#line 1928 \"parse.y\"\n+#line 1937 \"parse.y\"\n { yyval.itype = yyvsp[0].itype; ;\n     break;}\n case 425:\n-#line 1933 \"parse.y\"\n+#line 1942 \"parse.y\"\n { /* Set things up as initdcl0_innards expects.  */\n \t      yyvsp[0].ttype = yyvsp[-1].ttype; \n               yyvsp[-1].ttype = NULL_TREE; ;\n     break;}\n case 426:\n-#line 1937 \"parse.y\"\n+#line 1946 \"parse.y\"\n {;\n     break;}\n case 427:\n-#line 1939 \"parse.y\"\n+#line 1948 \"parse.y\"\n { tree d;\n \t\t  parse_decl(yyvsp[-2].ttype, NULL_TREE, yyvsp[0].ttype, 0, &d);\n \t\t  cp_finish_decl (d, NULL_TREE, yyvsp[-1].ttype, 1, 0); ;\n     break;}\n case 428:\n-#line 1948 \"parse.y\"\n+#line 1957 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 429:\n-#line 1950 \"parse.y\"\n+#line 1959 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 430:\n-#line 1955 \"parse.y\"\n+#line 1964 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 431:\n-#line 1957 \"parse.y\"\n+#line 1966 \"parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 432:\n-#line 1962 \"parse.y\"\n+#line 1971 \"parse.y\"\n { yyval.ttype = yyvsp[-2].ttype; ;\n     break;}\n case 433:\n-#line 1967 \"parse.y\"\n+#line 1976 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 434:\n-#line 1969 \"parse.y\"\n+#line 1978 \"parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 435:\n-#line 1974 \"parse.y\"\n+#line 1983 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 436:\n-#line 1976 \"parse.y\"\n+#line 1985 \"parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 437:\n-#line 1978 \"parse.y\"\n+#line 1987 \"parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, build_tree_list (NULL_TREE, yyvsp[-1].ttype)); ;\n     break;}\n case 438:\n-#line 1980 \"parse.y\"\n+#line 1989 \"parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-5].ttype, tree_cons (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype)); ;\n     break;}\n case 439:\n-#line 1982 \"parse.y\"\n+#line 1991 \"parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 444:\n-#line 1998 \"parse.y\"\n+#line 2007 \"parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 445:\n-#line 2000 \"parse.y\"\n+#line 2009 \"parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 446:\n-#line 2005 \"parse.y\"\n+#line 2014 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 447:\n-#line 2007 \"parse.y\"\n+#line 2016 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 449:\n-#line 2015 \"parse.y\"\n+#line 2024 \"parse.y\"\n { yyval.ttype = build_nt (CONSTRUCTOR, NULL_TREE, NULL_TREE);\n \t\t  TREE_HAS_CONSTRUCTOR (yyval.ttype) = 1; ;\n     break;}\n case 450:\n-#line 2018 \"parse.y\"\n+#line 2027 \"parse.y\"\n { yyval.ttype = build_nt (CONSTRUCTOR, NULL_TREE, nreverse (yyvsp[-1].ttype));\n \t\t  TREE_HAS_CONSTRUCTOR (yyval.ttype) = 1; ;\n     break;}\n case 451:\n-#line 2021 \"parse.y\"\n+#line 2030 \"parse.y\"\n { yyval.ttype = build_nt (CONSTRUCTOR, NULL_TREE, nreverse (yyvsp[-2].ttype));\n \t\t  TREE_HAS_CONSTRUCTOR (yyval.ttype) = 1; ;\n     break;}\n case 452:\n-#line 2024 \"parse.y\"\n+#line 2033 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 453:\n-#line 2031 \"parse.y\"\n+#line 2040 \"parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyval.ttype); ;\n     break;}\n case 454:\n-#line 2033 \"parse.y\"\n+#line 2042 \"parse.y\"\n { yyval.ttype = expr_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 455:\n-#line 2036 \"parse.y\"\n+#line 2045 \"parse.y\"\n { yyval.ttype = build_expr_list (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 456:\n-#line 2038 \"parse.y\"\n+#line 2047 \"parse.y\"\n { yyval.ttype = build_expr_list (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 457:\n-#line 2040 \"parse.y\"\n+#line 2049 \"parse.y\"\n { yyval.ttype = expr_tree_cons (yyvsp[-2].ttype, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 458:\n-#line 2045 \"parse.y\"\n+#line 2054 \"parse.y\"\n { start_function (NULL_TREE, TREE_VALUE (yyvsp[0].ttype),\n \t\t\t\t  NULL_TREE, 2);\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 459:\n-#line 2051 \"parse.y\"\n+#line 2060 \"parse.y\"\n {\n \t\t  int nested = (hack_decl_function_context\n \t\t\t\t(current_function_decl) != NULL_TREE);\n@@ -6012,7 +6012,7 @@ case 459:\n \t\t;\n     break;}\n case 460:\n-#line 2058 \"parse.y\"\n+#line 2067 \"parse.y\"\n { \n \t\t  int nested = (hack_decl_function_context\n \t\t\t\t(current_function_decl) != NULL_TREE);\n@@ -6021,33 +6021,33 @@ case 460:\n \t\t;\n     break;}\n case 461:\n-#line 2065 \"parse.y\"\n+#line 2074 \"parse.y\"\n { process_next_inline (yyvsp[-2].ttype); ;\n     break;}\n case 464:\n-#line 2077 \"parse.y\"\n+#line 2086 \"parse.y\"\n { replace_defarg (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 465:\n-#line 2079 \"parse.y\"\n+#line 2088 \"parse.y\"\n { replace_defarg (yyvsp[-2].ttype, error_mark_node); ;\n     break;}\n case 467:\n-#line 2084 \"parse.y\"\n+#line 2093 \"parse.y\"\n { do_pending_defargs (); ;\n     break;}\n case 468:\n-#line 2086 \"parse.y\"\n+#line 2095 \"parse.y\"\n { do_pending_defargs (); ;\n     break;}\n case 469:\n-#line 2091 \"parse.y\"\n+#line 2100 \"parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = current_enum_type;\n \t\t  current_enum_type = start_enum (yyvsp[-1].ttype); ;\n     break;}\n case 470:\n-#line 2095 \"parse.y\"\n+#line 2104 \"parse.y\"\n { TYPE_VALUES (current_enum_type) = yyvsp[-2].ttype;\n \t\t  yyval.ftype.t = finish_enum (current_enum_type);\n \t\t  yyval.ftype.new_type_flag = 1;\n@@ -6056,19 +6056,19 @@ case 470:\n \t\t  check_for_missing_semicolon (yyval.ftype.t); ;\n     break;}\n case 471:\n-#line 2102 \"parse.y\"\n+#line 2111 \"parse.y\"\n { yyval.ftype.t = finish_enum (start_enum (yyvsp[-2].ttype));\n \t\t  yyval.ftype.new_type_flag = 1;\n \t\t  check_for_missing_semicolon (yyval.ftype.t); ;\n     break;}\n case 472:\n-#line 2106 \"parse.y\"\n+#line 2115 \"parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = current_enum_type;\n \t\t  current_enum_type = start_enum (make_anon_name ()); ;\n     break;}\n case 473:\n-#line 2110 \"parse.y\"\n+#line 2119 \"parse.y\"\n { TYPE_VALUES (current_enum_type) = yyvsp[-2].ttype;\n \t\t  yyval.ftype.t = finish_enum (current_enum_type);\n \t\t  yyval.ftype.new_type_flag = 1;\n@@ -6077,30 +6077,30 @@ case 473:\n \t\t  check_for_missing_semicolon (yyval.ftype.t); ;\n     break;}\n case 474:\n-#line 2117 \"parse.y\"\n+#line 2126 \"parse.y\"\n { yyval.ftype.t = finish_enum (start_enum (make_anon_name()));\n \t\t  yyval.ftype.new_type_flag = 1;\n \t\t  check_for_missing_semicolon (yyval.ftype.t); ;\n     break;}\n case 475:\n-#line 2121 \"parse.y\"\n+#line 2130 \"parse.y\"\n { yyval.ftype.t = xref_tag (enum_type_node, yyvsp[0].ttype, 1); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 476:\n-#line 2124 \"parse.y\"\n+#line 2133 \"parse.y\"\n { yyval.ftype.t = xref_tag (enum_type_node, yyvsp[0].ttype, 1); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 477:\n-#line 2127 \"parse.y\"\n+#line 2136 \"parse.y\"\n { yyval.ftype.t = yyvsp[0].ttype;\n \t\t  yyval.ftype.new_type_flag = 0; \n \t\t  if (!processing_template_decl)\n \t\t    cp_pedwarn (\"using `typename' outside of template\"); ;\n     break;}\n case 478:\n-#line 2134 \"parse.y\"\n+#line 2143 \"parse.y\"\n { \n \t\t  int semi;\n \n@@ -6112,17 +6112,21 @@ case 478:\n \t\t;\n     break;}\n case 479:\n-#line 2144 \"parse.y\"\n-{ finish_default_args (); ;\n+#line 2153 \"parse.y\"\n+{\n+\t\t  begin_inline_definitions ();\n+\t\t;\n     break;}\n case 480:\n-#line 2146 \"parse.y\"\n-{ yyval.ftype.t = yyvsp[-3].ttype;\n+#line 2157 \"parse.y\"\n+{\n+\t\t  finish_inline_definitions ();\n+\t\t  yyval.ftype.t = yyvsp[-3].ttype;\n \t\t  yyval.ftype.new_type_flag = 1; \n-\t\t  begin_inline_definitions (); ;\n+\t\t;\n     break;}\n case 481:\n-#line 2150 \"parse.y\"\n+#line 2163 \"parse.y\"\n {\n \t\t  yyval.ftype.new_type_flag = 0;\n \t\t  if (TYPE_BINFO (yyvsp[0].ttype) == NULL_TREE)\n@@ -6142,103 +6146,103 @@ case 481:\n \t\t;\n     break;}\n case 485:\n-#line 2177 \"parse.y\"\n+#line 2190 \"parse.y\"\n { if (pedantic && !in_system_header)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 487:\n-#line 2184 \"parse.y\"\n+#line 2197 \"parse.y\"\n { error (\"storage class specifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 488:\n-#line 2186 \"parse.y\"\n+#line 2199 \"parse.y\"\n { error (\"type specifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 489:\n-#line 2188 \"parse.y\"\n+#line 2201 \"parse.y\"\n { error (\"type qualifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 490:\n-#line 2190 \"parse.y\"\n+#line 2203 \"parse.y\"\n { error (\"no body nor ';' separates two class, struct or union declarations\"); ;\n     break;}\n case 491:\n-#line 2192 \"parse.y\"\n+#line 2205 \"parse.y\"\n { yyval.ttype = build_decl_list (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 492:\n-#line 2197 \"parse.y\"\n+#line 2210 \"parse.y\"\n { \n \t\t  current_aggr = yyvsp[-1].ttype; \n \t\t  yyval.ttype = yyvsp[0].ttype; \n \t\t;\n     break;}\n case 493:\n-#line 2205 \"parse.y\"\n+#line 2218 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 494:\n-#line 2207 \"parse.y\"\n+#line 2220 \"parse.y\"\n { yyungetc ('{', 1); ;\n     break;}\n case 495:\n-#line 2209 \"parse.y\"\n+#line 2222 \"parse.y\"\n { yyungetc (':', 1); ;\n     break;}\n case 496:\n-#line 2214 \"parse.y\"\n+#line 2227 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-2].ttype;\n \t\t  yyval.ttype = handle_class_head (yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 497:\n-#line 2219 \"parse.y\"\n+#line 2232 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-3].ttype;\n \t\t  yyval.ttype = handle_class_head (yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 498:\n-#line 2224 \"parse.y\"\n+#line 2237 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-2].ttype;\n \t\t  yyval.ttype = handle_class_head (yyvsp[-2].ttype, NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 499:\n-#line 2229 \"parse.y\"\n+#line 2242 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 500:\n-#line 2231 \"parse.y\"\n+#line 2244 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 501:\n-#line 2236 \"parse.y\"\n+#line 2249 \"parse.y\"\n { yyval.ttype = xref_tag (current_aggr, yyvsp[0].ttype, 1); ;\n     break;}\n case 502:\n-#line 2238 \"parse.y\"\n+#line 2251 \"parse.y\"\n { yyval.ttype = xref_tag (current_aggr, yyvsp[0].ttype, 0); ;\n     break;}\n case 503:\n-#line 2242 \"parse.y\"\n+#line 2255 \"parse.y\"\n { \n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t  if (yyvsp[0].ttype)\n                     xref_basetypes (current_aggr, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); \n \t\t;\n     break;}\n case 504:\n-#line 2248 \"parse.y\"\n+#line 2261 \"parse.y\"\n { \n \t\t  if (yyvsp[0].ttype != error_mark_node)\n \t\t    push_scope (CP_DECL_CONTEXT (yyvsp[0].ttype)); \n \t\t;\n     break;}\n case 505:\n-#line 2253 \"parse.y\"\n+#line 2266 \"parse.y\"\n { \n \t\t  if (yyvsp[-2].ttype != error_mark_node)\n \t\t    {\n@@ -6264,44 +6268,44 @@ case 505:\n \t\t;\n     break;}\n case 506:\n-#line 2280 \"parse.y\"\n+#line 2293 \"parse.y\"\n { yyval.ttype = xref_tag (yyval.ttype, make_anon_name (), 0);\n \t\t  yyungetc ('{', 1); ;\n     break;}\n case 509:\n-#line 2291 \"parse.y\"\n+#line 2304 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 510:\n-#line 2293 \"parse.y\"\n+#line 2306 \"parse.y\"\n { yyungetc(':', 1); yyval.ttype = NULL_TREE; ;\n     break;}\n case 511:\n-#line 2295 \"parse.y\"\n+#line 2308 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 513:\n-#line 2301 \"parse.y\"\n+#line 2314 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 514:\n-#line 2306 \"parse.y\"\n+#line 2319 \"parse.y\"\n { yyval.ttype = finish_base_specifier (access_default_node, yyvsp[0].ttype,\n \t\t\t\t\t      current_aggr \n \t\t\t\t\t      == signature_type_node); ;\n     break;}\n case 515:\n-#line 2310 \"parse.y\"\n+#line 2323 \"parse.y\"\n { yyval.ttype = finish_base_specifier (yyvsp[-2].ttype, yyvsp[0].ttype, \n \t\t\t\t\t      current_aggr \n \t\t\t\t\t      == signature_type_node); ;\n     break;}\n case 516:\n-#line 2317 \"parse.y\"\n+#line 2330 \"parse.y\"\n { if (yyval.ttype != error_mark_node) yyval.ttype = TYPE_MAIN_DECL (yyvsp[0].ttype); ;\n     break;}\n case 518:\n-#line 2320 \"parse.y\"\n+#line 2333 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6324,7 +6328,7 @@ case 518:\n \t\t;\n     break;}\n case 519:\n-#line 2341 \"parse.y\"\n+#line 2354 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6347,13 +6351,13 @@ case 519:\n \t\t;\n     break;}\n case 521:\n-#line 2366 \"parse.y\"\n+#line 2379 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  yyval.ttype = access_default_virtual_node; ;\n     break;}\n case 522:\n-#line 2370 \"parse.y\"\n+#line 2383 \"parse.y\"\n {\n \t\t  if (yyvsp[-2].ttype != access_default_virtual_node)\n \t\t    error (\"multiple access specifiers\");\n@@ -6366,7 +6370,7 @@ case 522:\n \t\t;\n     break;}\n case 523:\n-#line 2381 \"parse.y\"\n+#line 2394 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  else if (yyval.ttype == access_public_node)\n@@ -6380,11 +6384,11 @@ case 523:\n \t\t;\n     break;}\n case 524:\n-#line 2396 \"parse.y\"\n+#line 2409 \"parse.y\"\n { yyvsp[-1].ttype = begin_class_definition (yyvsp[-1].ttype); ;\n     break;}\n case 529:\n-#line 2407 \"parse.y\"\n+#line 2420 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6396,49 +6400,49 @@ case 529:\n                 ;\n     break;}\n case 530:\n-#line 2422 \"parse.y\"\n+#line 2435 \"parse.y\"\n { \n \t\t  finish_member_declaration (yyvsp[0].ttype);\n \t\t;\n     break;}\n case 531:\n-#line 2426 \"parse.y\"\n+#line 2439 \"parse.y\"\n { \n \t\t  finish_member_declaration (yyvsp[0].ttype);\n \t\t;\n     break;}\n case 533:\n-#line 2434 \"parse.y\"\n+#line 2447 \"parse.y\"\n { error (\"missing ';' before right brace\");\n \t\t  yyungetc ('}', 0); ;\n     break;}\n case 534:\n-#line 2439 \"parse.y\"\n+#line 2452 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 535:\n-#line 2441 \"parse.y\"\n+#line 2454 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 536:\n-#line 2443 \"parse.y\"\n+#line 2456 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 537:\n-#line 2445 \"parse.y\"\n+#line 2458 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 538:\n-#line 2447 \"parse.y\"\n+#line 2460 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 539:\n-#line 2449 \"parse.y\"\n+#line 2462 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 540:\n-#line 2452 \"parse.y\"\n+#line 2465 \"parse.y\"\n {  \n \t\t  if (yyvsp[0].ttype)\n \t\t    yyval.ttype = finish_member_template_decl (yyvsp[0].ttype);\n@@ -6450,14 +6454,14 @@ case 540:\n \t\t;\n     break;}\n case 541:\n-#line 2462 \"parse.y\"\n+#line 2475 \"parse.y\"\n { \n \t\t  yyval.ttype = finish_member_class_template (yyvsp[-1].ftype.t); \n \t\t  finish_template_decl (yyvsp[-2].ttype);\n \t\t;\n     break;}\n case 542:\n-#line 2473 \"parse.y\"\n+#line 2486 \"parse.y\"\n {\n \t\t  /* Most of the productions for component_decl only\n \t\t     allow the creation of one new member, so we call\n@@ -6480,53 +6484,53 @@ case 542:\n \t\t;\n     break;}\n case 543:\n-#line 2494 \"parse.y\"\n+#line 2507 \"parse.y\"\n { \n \t\t  if (!yyvsp[0].itype)\n \t\t    grok_x_components (yyvsp[-1].ttype);\n \t\t  yyval.ttype = NULL_TREE; \n \t\t;\n     break;}\n case 544:\n-#line 2500 \"parse.y\"\n+#line 2513 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 545:\n-#line 2503 \"parse.y\"\n+#line 2516 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 546:\n-#line 2506 \"parse.y\"\n+#line 2519 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 547:\n-#line 2508 \"parse.y\"\n+#line 2521 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 548:\n-#line 2519 \"parse.y\"\n+#line 2532 \"parse.y\"\n { tree specs, attrs;\n \t\t  split_specs_attrs (yyvsp[-4].ttype, &specs, &attrs);\n \t\t  yyval.ttype = grokfield (yyvsp[-3].ttype, specs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, attrs)); ;\n     break;}\n case 549:\n-#line 2524 \"parse.y\"\n+#line 2537 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 550:\n-#line 2527 \"parse.y\"\n+#line 2540 \"parse.y\"\n { yyval.ttype = do_class_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 551:\n-#line 2533 \"parse.y\"\n+#line 2546 \"parse.y\"\n { yyval.itype = 0; ;\n     break;}\n case 552:\n-#line 2535 \"parse.y\"\n+#line 2548 \"parse.y\"\n { \n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n \t\t    yyvsp[0].ttype = finish_member_template_decl (yyvsp[0].ttype);\n@@ -6535,7 +6539,7 @@ case 552:\n \t\t;\n     break;}\n case 553:\n-#line 2542 \"parse.y\"\n+#line 2555 \"parse.y\"\n { \n \t\t  check_multiple_declarators ();\n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n@@ -6545,11 +6549,11 @@ case 553:\n \t\t;\n     break;}\n case 554:\n-#line 2553 \"parse.y\"\n+#line 2566 \"parse.y\"\n { yyval.itype = 0; ;\n     break;}\n case 555:\n-#line 2555 \"parse.y\"\n+#line 2568 \"parse.y\"\n { \n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n \t\t    yyvsp[0].ttype = finish_member_template_decl (yyvsp[0].ttype);\n@@ -6558,7 +6562,7 @@ case 555:\n \t\t;\n     break;}\n case 556:\n-#line 2562 \"parse.y\"\n+#line 2575 \"parse.y\"\n { \n \t\t  check_multiple_declarators ();\n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n@@ -6568,102 +6572,102 @@ case 556:\n \t\t;\n     break;}\n case 561:\n-#line 2583 \"parse.y\"\n+#line 2596 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 562:\n-#line 2589 \"parse.y\"\n+#line 2602 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 563:\n-#line 2598 \"parse.y\"\n+#line 2611 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 564:\n-#line 2604 \"parse.y\"\n+#line 2617 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 565:\n-#line 2610 \"parse.y\"\n+#line 2623 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 566:\n-#line 2616 \"parse.y\"\n+#line 2629 \"parse.y\"\n { split_specs_attrs (yyvsp[-3].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-3].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 567:\n-#line 2625 \"parse.y\"\n+#line 2638 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 568:\n-#line 2628 \"parse.y\"\n+#line 2641 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 569:\n-#line 2634 \"parse.y\"\n+#line 2647 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 570:\n-#line 2637 \"parse.y\"\n+#line 2650 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 571:\n-#line 2640 \"parse.y\"\n+#line 2653 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 573:\n-#line 2651 \"parse.y\"\n+#line 2664 \"parse.y\"\n { TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 574:\n-#line 2656 \"parse.y\"\n+#line 2669 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, NULL_TREE, current_enum_type); ;\n     break;}\n case 575:\n-#line 2658 \"parse.y\"\n+#line 2671 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, yyvsp[0].ttype, current_enum_type); ;\n     break;}\n case 576:\n-#line 2664 \"parse.y\"\n+#line 2677 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 577:\n-#line 2667 \"parse.y\"\n+#line 2680 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[0].ftype.t, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 578:\n-#line 2674 \"parse.y\"\n+#line 2687 \"parse.y\"\n {\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids array dimensions with parenthesized type in new\");\n@@ -6673,71 +6677,71 @@ case 578:\n \t\t;\n     break;}\n case 579:\n-#line 2685 \"parse.y\"\n+#line 2698 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 580:\n-#line 2687 \"parse.y\"\n+#line 2700 \"parse.y\"\n { yyval.ttype = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 581:\n-#line 2692 \"parse.y\"\n-{ yyval.ftype.t = build_decl_list (NULL_TREE, yyvsp[0].ttype); \n+#line 2705 \"parse.y\"\n+{ yyval.ftype.t = hash_tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 582:\n-#line 2695 \"parse.y\"\n-{ yyval.ftype.t = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ftype.t); \n+#line 2708 \"parse.y\"\n+{ yyval.ftype.t = hash_tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ftype.t); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 583:\n-#line 2704 \"parse.y\"\n+#line 2717 \"parse.y\"\n { yyval.itype = suspend_momentary (); ;\n     break;}\n case 584:\n-#line 2709 \"parse.y\"\n+#line 2722 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 585:\n-#line 2715 \"parse.y\"\n+#line 2728 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 586:\n-#line 2717 \"parse.y\"\n+#line 2730 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 587:\n-#line 2719 \"parse.y\"\n+#line 2732 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = empty_parms (); ;\n     break;}\n case 588:\n-#line 2721 \"parse.y\"\n+#line 2734 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = NULL_TREE; ;\n     break;}\n case 589:\n-#line 2728 \"parse.y\"\n+#line 2741 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 590:\n-#line 2730 \"parse.y\"\n+#line 2743 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 591:\n-#line 2732 \"parse.y\"\n+#line 2745 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 592:\n-#line 2734 \"parse.y\"\n+#line 2747 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 593:\n-#line 2736 \"parse.y\"\n+#line 2749 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 595:\n-#line 2744 \"parse.y\"\n+#line 2757 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6756,7 +6760,7 @@ case 595:\n \t\t;\n     break;}\n case 596:\n-#line 2761 \"parse.y\"\n+#line 2774 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -6766,160 +6770,160 @@ case 596:\n \t\t;\n     break;}\n case 599:\n-#line 2774 \"parse.y\"\n+#line 2787 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 600:\n-#line 2779 \"parse.y\"\n+#line 2792 \"parse.y\"\n { yyval.ttype = get_type_decl (yyvsp[0].ttype); ;\n     break;}\n case 601:\n-#line 2784 \"parse.y\"\n+#line 2797 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 602:\n-#line 2786 \"parse.y\"\n+#line 2799 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 603:\n-#line 2788 \"parse.y\"\n+#line 2801 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 604:\n-#line 2790 \"parse.y\"\n+#line 2803 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 605:\n-#line 2792 \"parse.y\"\n+#line 2805 \"parse.y\"\n { push_nested_class (yyvsp[-1].ttype, 3);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype);\n \t\t  TREE_COMPLEXITY (yyval.ttype) = current_class_depth; ;\n     break;}\n case 608:\n-#line 2804 \"parse.y\"\n+#line 2817 \"parse.y\"\n {\n \t\t  /* Provide support for '(' attributes '*' declarator ')'\n \t\t     etc */\n \t\t  yyval.ttype = decl_tree_cons (yyvsp[-1].ttype, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 609:\n-#line 2813 \"parse.y\"\n+#line 2826 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 610:\n-#line 2815 \"parse.y\"\n+#line 2828 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 611:\n-#line 2817 \"parse.y\"\n+#line 2830 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 612:\n-#line 2819 \"parse.y\"\n+#line 2832 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 613:\n-#line 2821 \"parse.y\"\n+#line 2834 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 615:\n-#line 2829 \"parse.y\"\n+#line 2842 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 616:\n-#line 2831 \"parse.y\"\n+#line 2844 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 617:\n-#line 2833 \"parse.y\"\n+#line 2846 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 618:\n-#line 2835 \"parse.y\"\n+#line 2848 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 619:\n-#line 2837 \"parse.y\"\n+#line 2850 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 621:\n-#line 2845 \"parse.y\"\n+#line 2858 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 622:\n-#line 2847 \"parse.y\"\n+#line 2860 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 623:\n-#line 2849 \"parse.y\"\n+#line 2862 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 624:\n-#line 2851 \"parse.y\"\n+#line 2864 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 625:\n-#line 2853 \"parse.y\"\n+#line 2866 \"parse.y\"\n { enter_scope_of (yyvsp[0].ttype); ;\n     break;}\n case 626:\n-#line 2855 \"parse.y\"\n+#line 2868 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  enter_scope_of (yyval.ttype);\n \t\t;\n     break;}\n case 627:\n-#line 2863 \"parse.y\"\n+#line 2876 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 628:\n-#line 2866 \"parse.y\"\n+#line 2879 \"parse.y\"\n { got_scope = NULL_TREE;\n  \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 629:\n-#line 2872 \"parse.y\"\n+#line 2885 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 630:\n-#line 2875 \"parse.y\"\n+#line 2888 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 632:\n-#line 2882 \"parse.y\"\n+#line 2895 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 633:\n-#line 2887 \"parse.y\"\n+#line 2900 \"parse.y\"\n { yyval.ttype = build_functional_cast (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 634:\n-#line 2889 \"parse.y\"\n+#line 2902 \"parse.y\"\n { yyval.ttype = reparse_decl_as_expr (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 635:\n-#line 2891 \"parse.y\"\n+#line 2904 \"parse.y\"\n { yyval.ttype = reparse_absdcl_as_expr (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 640:\n-#line 2902 \"parse.y\"\n+#line 2915 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 641:\n-#line 2904 \"parse.y\"\n+#line 2917 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 642:\n-#line 2911 \"parse.y\"\n+#line 2924 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6935,31 +6939,31 @@ case 642:\n \t\t;\n     break;}\n case 643:\n-#line 2925 \"parse.y\"\n+#line 2938 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = TREE_TYPE (yyval.ttype);\n \t\t;\n     break;}\n case 644:\n-#line 2931 \"parse.y\"\n+#line 2944 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 645:\n-#line 2937 \"parse.y\"\n+#line 2950 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyvsp[-1].ttype)); ;\n     break;}\n case 647:\n-#line 2953 \"parse.y\"\n+#line 2966 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 648:\n-#line 2958 \"parse.y\"\n+#line 2971 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -6974,26 +6978,26 @@ case 648:\n \t\t;\n     break;}\n case 649:\n-#line 2971 \"parse.y\"\n+#line 2984 \"parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[0].ttype); ;\n     break;}\n case 650:\n-#line 2973 \"parse.y\"\n+#line 2986 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 651:\n-#line 2975 \"parse.y\"\n+#line 2988 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 652:\n-#line 2980 \"parse.y\"\n+#line 2993 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t;\n     break;}\n case 653:\n-#line 2985 \"parse.y\"\n+#line 2998 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -7008,15 +7012,15 @@ case 653:\n \t\t;\n     break;}\n case 654:\n-#line 2998 \"parse.y\"\n+#line 3011 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 655:\n-#line 3000 \"parse.y\"\n+#line 3013 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 656:\n-#line 3005 \"parse.y\"\n+#line 3018 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyvsp[-1].ttype = lastiddecl;\n@@ -7030,31 +7034,31 @@ case 656:\n \t\t;\n     break;}\n case 657:\n-#line 3017 \"parse.y\"\n+#line 3030 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 658:\n-#line 3023 \"parse.y\"\n+#line 3036 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype)); ;\n     break;}\n case 661:\n-#line 3027 \"parse.y\"\n+#line 3040 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 662:\n-#line 3036 \"parse.y\"\n+#line 3049 \"parse.y\"\n { yyval.ttype = build_min_nt (TEMPLATE_ID_EXPR, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 663:\n-#line 3041 \"parse.y\"\n+#line 3054 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -7064,148 +7068,148 @@ case 663:\n \t\t;\n     break;}\n case 665:\n-#line 3050 \"parse.y\"\n+#line 3063 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 666:\n-#line 3055 \"parse.y\"\n+#line 3068 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 667:\n-#line 3057 \"parse.y\"\n+#line 3070 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; got_scope = NULL_TREE; ;\n     break;}\n case 668:\n-#line 3064 \"parse.y\"\n+#line 3077 \"parse.y\"\n { got_scope = void_type_node; ;\n     break;}\n case 669:\n-#line 3070 \"parse.y\"\n+#line 3083 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 670:\n-#line 3072 \"parse.y\"\n+#line 3085 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 671:\n-#line 3074 \"parse.y\"\n+#line 3087 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 672:\n-#line 3076 \"parse.y\"\n+#line 3089 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 673:\n-#line 3078 \"parse.y\"\n+#line 3091 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 674:\n-#line 3082 \"parse.y\"\n+#line 3095 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 676:\n-#line 3091 \"parse.y\"\n+#line 3104 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 677:\n-#line 3093 \"parse.y\"\n+#line 3106 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 678:\n-#line 3099 \"parse.y\"\n+#line 3112 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 679:\n-#line 3101 \"parse.y\"\n+#line 3114 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 680:\n-#line 3103 \"parse.y\"\n+#line 3116 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 681:\n-#line 3105 \"parse.y\"\n+#line 3118 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 682:\n-#line 3107 \"parse.y\"\n+#line 3120 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 683:\n-#line 3109 \"parse.y\"\n+#line 3122 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 684:\n-#line 3111 \"parse.y\"\n+#line 3124 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 685:\n-#line 3113 \"parse.y\"\n+#line 3126 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 686:\n-#line 3115 \"parse.y\"\n+#line 3128 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 687:\n-#line 3119 \"parse.y\"\n+#line 3132 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 689:\n-#line 3128 \"parse.y\"\n+#line 3141 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 691:\n-#line 3132 \"parse.y\"\n+#line 3145 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 692:\n-#line 3134 \"parse.y\"\n+#line 3147 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, empty_parms (), yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 693:\n-#line 3136 \"parse.y\"\n+#line 3149 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 694:\n-#line 3138 \"parse.y\"\n+#line 3151 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 695:\n-#line 3140 \"parse.y\"\n+#line 3153 \"parse.y\"\n { yyval.ttype = make_call_declarator (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 696:\n-#line 3142 \"parse.y\"\n+#line 3155 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 697:\n-#line 3144 \"parse.y\"\n+#line 3157 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 698:\n-#line 3146 \"parse.y\"\n+#line 3159 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 699:\n-#line 3148 \"parse.y\"\n+#line 3161 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 706:\n-#line 3171 \"parse.y\"\n+#line 3184 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids label declarations\"); ;\n     break;}\n case 709:\n-#line 3182 \"parse.y\"\n+#line 3195 \"parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -7216,266 +7220,266 @@ case 709:\n \t\t;\n     break;}\n case 710:\n-#line 3196 \"parse.y\"\n+#line 3209 \"parse.y\"\n {;\n     break;}\n case 712:\n-#line 3202 \"parse.y\"\n+#line 3215 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 713:\n-#line 3204 \"parse.y\"\n+#line 3217 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 714:\n-#line 3209 \"parse.y\"\n+#line 3222 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_if_stmt ();\n \t\t  cond_stmt_keyword = \"if\";\n \t\t;\n     break;}\n case 715:\n-#line 3214 \"parse.y\"\n+#line 3227 \"parse.y\"\n { finish_if_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 716:\n-#line 3216 \"parse.y\"\n+#line 3229 \"parse.y\"\n { yyval.ttype = finish_then_clause (yyvsp[-3].ttype); ;\n     break;}\n case 718:\n-#line 3221 \"parse.y\"\n+#line 3234 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 719:\n-#line 3223 \"parse.y\"\n+#line 3236 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 720:\n-#line 3228 \"parse.y\"\n+#line 3241 \"parse.y\"\n {;\n     break;}\n case 722:\n-#line 3234 \"parse.y\"\n+#line 3247 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 723:\n-#line 3236 \"parse.y\"\n+#line 3249 \"parse.y\"\n { finish_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 724:\n-#line 3238 \"parse.y\"\n+#line 3251 \"parse.y\"\n { begin_else_clause (); ;\n     break;}\n case 725:\n-#line 3240 \"parse.y\"\n+#line 3253 \"parse.y\"\n { \n \t\t  finish_else_clause (yyvsp[-3].ttype); \n \t\t  finish_if_stmt ();\n \t\t;\n     break;}\n case 726:\n-#line 3245 \"parse.y\"\n+#line 3258 \"parse.y\"\n { finish_if_stmt (); ;\n     break;}\n case 727:\n-#line 3247 \"parse.y\"\n+#line 3260 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_while_stmt ();\n \t\t  cond_stmt_keyword = \"while\";\n \t\t;\n     break;}\n case 728:\n-#line 3252 \"parse.y\"\n+#line 3265 \"parse.y\"\n { finish_while_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 729:\n-#line 3254 \"parse.y\"\n+#line 3267 \"parse.y\"\n { finish_while_stmt (yyvsp[-3].ttype); ;\n     break;}\n case 730:\n-#line 3256 \"parse.y\"\n+#line 3269 \"parse.y\"\n { yyval.ttype = begin_do_stmt (); ;\n     break;}\n case 731:\n-#line 3258 \"parse.y\"\n+#line 3271 \"parse.y\"\n {\n \t\t  finish_do_body (yyvsp[-2].ttype);\n \t\t  cond_stmt_keyword = \"do\";\n \t\t;\n     break;}\n case 732:\n-#line 3263 \"parse.y\"\n+#line 3276 \"parse.y\"\n { finish_do_stmt (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 733:\n-#line 3265 \"parse.y\"\n+#line 3278 \"parse.y\"\n { yyval.ttype = begin_for_stmt (); ;\n     break;}\n case 734:\n-#line 3267 \"parse.y\"\n+#line 3280 \"parse.y\"\n { finish_for_init_stmt (yyvsp[-2].ttype); ;\n     break;}\n case 735:\n-#line 3269 \"parse.y\"\n+#line 3282 \"parse.y\"\n { finish_for_cond (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 736:\n-#line 3271 \"parse.y\"\n+#line 3284 \"parse.y\"\n { finish_for_expr (yyvsp[-1].ttype, yyvsp[-8].ttype); ;\n     break;}\n case 737:\n-#line 3273 \"parse.y\"\n+#line 3286 \"parse.y\"\n { finish_for_stmt (yyvsp[-3].ttype, yyvsp[-10].ttype); ;\n     break;}\n case 738:\n-#line 3275 \"parse.y\"\n+#line 3288 \"parse.y\"\n { begin_switch_stmt (); ;\n     break;}\n case 739:\n-#line 3277 \"parse.y\"\n+#line 3290 \"parse.y\"\n { yyval.ttype = finish_switch_cond (yyvsp[-1].ttype); ;\n     break;}\n case 740:\n-#line 3279 \"parse.y\"\n+#line 3292 \"parse.y\"\n { finish_switch_stmt (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 741:\n-#line 3281 \"parse.y\"\n+#line 3294 \"parse.y\"\n { finish_case_label (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 743:\n-#line 3284 \"parse.y\"\n+#line 3297 \"parse.y\"\n { finish_case_label (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 745:\n-#line 3287 \"parse.y\"\n+#line 3300 \"parse.y\"\n { finish_case_label (NULL_TREE, NULL_TREE); ;\n     break;}\n case 747:\n-#line 3290 \"parse.y\"\n+#line 3303 \"parse.y\"\n { finish_break_stmt (); ;\n     break;}\n case 748:\n-#line 3292 \"parse.y\"\n+#line 3305 \"parse.y\"\n { finish_continue_stmt (); ;\n     break;}\n case 749:\n-#line 3294 \"parse.y\"\n+#line 3307 \"parse.y\"\n { finish_return_stmt (NULL_TREE); ;\n     break;}\n case 750:\n-#line 3296 \"parse.y\"\n+#line 3309 \"parse.y\"\n { finish_return_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 751:\n-#line 3298 \"parse.y\"\n+#line 3311 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 752:\n-#line 3304 \"parse.y\"\n+#line 3317 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 753:\n-#line 3310 \"parse.y\"\n+#line 3323 \"parse.y\"\n { finish_asm_stmt (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 754:\n-#line 3314 \"parse.y\"\n+#line 3327 \"parse.y\"\n { finish_asm_stmt (yyvsp[-10].ttype, yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 755:\n-#line 3316 \"parse.y\"\n+#line 3329 \"parse.y\"\n { \n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids computed gotos\");\n \t\t  finish_goto_stmt (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 756:\n-#line 3322 \"parse.y\"\n+#line 3335 \"parse.y\"\n { finish_goto_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 757:\n-#line 3324 \"parse.y\"\n+#line 3337 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 758:\n-#line 3326 \"parse.y\"\n+#line 3339 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0);\n \t\t  finish_stmt (); ;\n     break;}\n case 759:\n-#line 3330 \"parse.y\"\n+#line 3343 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 762:\n-#line 3334 \"parse.y\"\n+#line 3347 \"parse.y\"\n { do_local_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 764:\n-#line 3340 \"parse.y\"\n+#line 3353 \"parse.y\"\n {\n \t\t  if (! current_function_parms_stored)\n \t\t    store_parm_decls ();\n \t\t  expand_start_early_try_stmts ();\n \t\t;\n     break;}\n case 765:\n-#line 3346 \"parse.y\"\n+#line 3359 \"parse.y\"\n { \n                   expand_start_all_catch (); \n                 ;\n     break;}\n case 766:\n-#line 3350 \"parse.y\"\n+#line 3363 \"parse.y\"\n {\n \t\t  expand_end_all_catch ();\n \t\t  yyval.itype = yyvsp[-3].itype;\n \t\t;\n     break;}\n case 767:\n-#line 3358 \"parse.y\"\n+#line 3371 \"parse.y\"\n { yyval.ttype = begin_try_block (); ;\n     break;}\n case 768:\n-#line 3360 \"parse.y\"\n+#line 3373 \"parse.y\"\n { finish_try_block (yyvsp[-1].ttype); ;\n     break;}\n case 769:\n-#line 3362 \"parse.y\"\n+#line 3375 \"parse.y\"\n { finish_handler_sequence (yyvsp[-3].ttype); ;\n     break;}\n case 772:\n-#line 3372 \"parse.y\"\n+#line 3385 \"parse.y\"\n { yyval.ttype = begin_handler(); ;\n     break;}\n case 773:\n-#line 3374 \"parse.y\"\n+#line 3387 \"parse.y\"\n { finish_handler_parms (yyvsp[-1].ttype); ;\n     break;}\n case 774:\n-#line 3376 \"parse.y\"\n+#line 3389 \"parse.y\"\n { finish_handler (yyvsp[-3].ttype); ;\n     break;}\n case 777:\n-#line 3386 \"parse.y\"\n+#line 3399 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 778:\n-#line 3402 \"parse.y\"\n+#line 3415 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 779:\n-#line 3409 \"parse.y\"\n+#line 3422 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -7484,98 +7488,98 @@ case 779:\n \t\t;\n     break;}\n case 780:\n-#line 3416 \"parse.y\"\n+#line 3429 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 781:\n-#line 3418 \"parse.y\"\n+#line 3431 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 782:\n-#line 3420 \"parse.y\"\n+#line 3433 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 783:\n-#line 3425 \"parse.y\"\n+#line 3438 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 785:\n-#line 3428 \"parse.y\"\n+#line 3441 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 786:\n-#line 3437 \"parse.y\"\n+#line 3450 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 787:\n-#line 3440 \"parse.y\"\n+#line 3453 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 788:\n-#line 3445 \"parse.y\"\n+#line 3458 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 790:\n-#line 3448 \"parse.y\"\n+#line 3461 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 791:\n-#line 3455 \"parse.y\"\n+#line 3468 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 794:\n-#line 3462 \"parse.y\"\n+#line 3475 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 795:\n-#line 3467 \"parse.y\"\n+#line 3480 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 796:\n-#line 3472 \"parse.y\"\n+#line 3485 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 797:\n-#line 3474 \"parse.y\"\n+#line 3487 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 798:\n-#line 3485 \"parse.y\"\n+#line 3498 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 800:\n-#line 3490 \"parse.y\"\n+#line 3503 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE, yyvsp[0].ftype.t), 0);\n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 801:\n-#line 3498 \"parse.y\"\n+#line 3511 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyval.ttype, 0); ;\n     break;}\n case 802:\n-#line 3500 \"parse.y\"\n+#line 3513 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 803:\n-#line 3503 \"parse.y\"\n+#line 3516 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 804:\n-#line 3505 \"parse.y\"\n+#line 3518 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE,\n \t\t\t\t\t\t\t yyvsp[-1].ftype.t), 1); ;\n     break;}\n case 805:\n-#line 3508 \"parse.y\"\n+#line 3521 \"parse.y\"\n { yyval.ttype = finish_parmlist (NULL_TREE, 1); ;\n     break;}\n case 806:\n-#line 3510 \"parse.y\"\n+#line 3523 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7587,7 +7591,7 @@ case 806:\n \t\t;\n     break;}\n case 807:\n-#line 3520 \"parse.y\"\n+#line 3533 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7600,99 +7604,99 @@ case 807:\n \t\t;\n     break;}\n case 808:\n-#line 3535 \"parse.y\"\n+#line 3548 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 809:\n-#line 3537 \"parse.y\"\n+#line 3550 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 812:\n-#line 3548 \"parse.y\"\n+#line 3561 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 813:\n-#line 3551 \"parse.y\"\n+#line 3564 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 814:\n-#line 3554 \"parse.y\"\n+#line 3567 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 815:\n-#line 3557 \"parse.y\"\n+#line 3570 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 816:\n-#line 3559 \"parse.y\"\n+#line 3572 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 818:\n-#line 3565 \"parse.y\"\n+#line 3578 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 819:\n-#line 3575 \"parse.y\"\n+#line 3588 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 820:\n-#line 3579 \"parse.y\"\n+#line 3592 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 821:\n-#line 3582 \"parse.y\"\n+#line 3595 \"parse.y\"\n { yyval.ftype.t = build_tree_list (build_decl_list (NULL_TREE, yyvsp[-1].ftype.t),\n \t\t\t\t\t  yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 822:\n-#line 3586 \"parse.y\"\n+#line 3599 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 823:\n-#line 3590 \"parse.y\"\n+#line 3603 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 824:\n-#line 3594 \"parse.y\"\n+#line 3607 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 825:\n-#line 3601 \"parse.y\"\n+#line 3614 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 826:\n-#line 3604 \"parse.y\"\n+#line 3617 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 829:\n-#line 3615 \"parse.y\"\n+#line 3628 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 830:\n-#line 3620 \"parse.y\"\n+#line 3633 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 831:\n-#line 3625 \"parse.y\"\n+#line 3638 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -7703,188 +7707,188 @@ case 831:\n \t\t;\n     break;}\n case 832:\n-#line 3637 \"parse.y\"\n+#line 3650 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 833:\n-#line 3639 \"parse.y\"\n+#line 3652 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 834:\n-#line 3641 \"parse.y\"\n+#line 3654 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 835:\n-#line 3646 \"parse.y\"\n+#line 3659 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 837:\n-#line 3652 \"parse.y\"\n+#line 3665 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 838:\n-#line 3660 \"parse.y\"\n+#line 3673 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 839:\n-#line 3662 \"parse.y\"\n+#line 3675 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 840:\n-#line 3664 \"parse.y\"\n+#line 3677 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 841:\n-#line 3666 \"parse.y\"\n+#line 3679 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 842:\n-#line 3673 \"parse.y\"\n+#line 3686 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 843:\n-#line 3678 \"parse.y\"\n+#line 3691 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 844:\n-#line 3680 \"parse.y\"\n+#line 3693 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 845:\n-#line 3682 \"parse.y\"\n+#line 3695 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 846:\n-#line 3684 \"parse.y\"\n+#line 3697 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 847:\n-#line 3686 \"parse.y\"\n+#line 3699 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 848:\n-#line 3688 \"parse.y\"\n+#line 3701 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 849:\n-#line 3690 \"parse.y\"\n+#line 3703 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 850:\n-#line 3692 \"parse.y\"\n+#line 3705 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 851:\n-#line 3694 \"parse.y\"\n+#line 3707 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 852:\n-#line 3696 \"parse.y\"\n+#line 3709 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 853:\n-#line 3698 \"parse.y\"\n+#line 3711 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 854:\n-#line 3700 \"parse.y\"\n+#line 3713 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 855:\n-#line 3702 \"parse.y\"\n+#line 3715 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 856:\n-#line 3704 \"parse.y\"\n+#line 3717 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 857:\n-#line 3706 \"parse.y\"\n+#line 3719 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 858:\n-#line 3708 \"parse.y\"\n+#line 3721 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 859:\n-#line 3710 \"parse.y\"\n+#line 3723 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 860:\n-#line 3712 \"parse.y\"\n+#line 3725 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 861:\n-#line 3714 \"parse.y\"\n+#line 3727 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 862:\n-#line 3716 \"parse.y\"\n+#line 3729 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 863:\n-#line 3718 \"parse.y\"\n+#line 3731 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 864:\n-#line 3720 \"parse.y\"\n+#line 3733 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 865:\n-#line 3722 \"parse.y\"\n+#line 3735 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 866:\n-#line 3724 \"parse.y\"\n+#line 3737 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 867:\n-#line 3726 \"parse.y\"\n+#line 3739 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 868:\n-#line 3728 \"parse.y\"\n+#line 3741 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 869:\n-#line 3730 \"parse.y\"\n+#line 3743 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 870:\n-#line 3732 \"parse.y\"\n+#line 3745 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 871:\n-#line 3734 \"parse.y\"\n+#line 3747 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 872:\n-#line 3736 \"parse.y\"\n+#line 3749 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 873:\n-#line 3738 \"parse.y\"\n+#line 3751 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 874:\n-#line 3740 \"parse.y\"\n+#line 3753 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 875:\n-#line 3742 \"parse.y\"\n+#line 3755 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 876:\n-#line 3745 \"parse.y\"\n+#line 3758 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 877:\n-#line 3747 \"parse.y\"\n+#line 3760 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n@@ -8085,7 +8089,7 @@ case 877:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 3750 \"parse.y\"\n+#line 3763 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "d5dee42efda5b47478106e6657370535aaf03c90", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=51632249ef73fee7a6c76af82acef9164e20761b", "patch": "@@ -1753,24 +1753,33 @@ reserved_declspecs:\n    to redeclare a typedef-name.\n    In the result, declspecs have a non-NULL TREE_VALUE, attributes do not.  */\n \n+/* We use hash_tree_cons for lists of typeless declspecs so that they end\n+   up on a persistent obstack.  Otherwise, they could appear at the\n+   beginning of something like\n+\n+      static const struct { int foo () { } } b;\n+\n+   and would be discarded after we finish compiling foo.  We don't need to\n+   worry once we see a type.  */\n+\n declmods:\n \t  nonempty_cv_qualifiers  %prec EMPTY\n \t\t{ $$ = $1.t; TREE_STATIC ($$) = 1; }\n \t| SCSPEC\n-\t\t{ $$ = build_decl_list (NULL_TREE, $$); }\n+\t\t{ $$ = hash_tree_cons (NULL_TREE, $$, NULL_TREE); }\n \t| declmods CV_QUALIFIER\n-\t\t{ $$ = decl_tree_cons (NULL_TREE, $2, $$);\n+\t\t{ $$ = hash_tree_cons (NULL_TREE, $2, $$);\n \t\t  TREE_STATIC ($$) = 1; }\n \t| declmods SCSPEC\n \t\t{ if (extra_warnings && TREE_STATIC ($$))\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER ($2));\n-\t\t  $$ = decl_tree_cons (NULL_TREE, $2, $$);\n+\t\t  $$ = hash_tree_cons (NULL_TREE, $2, $$);\n \t\t  TREE_STATIC ($$) = TREE_STATIC ($1); }\n \t| declmods attributes\n-\t\t{ $$ = decl_tree_cons ($2, NULL_TREE, $1); }\n+\t\t{ $$ = hash_tree_cons ($2, NULL_TREE, $1); }\n \t| attributes\n-\t\t{ $$ = decl_tree_cons ($1, NULL_TREE, NULL_TREE); }\n+\t\t{ $$ = hash_tree_cons ($1, NULL_TREE, NULL_TREE); }\n \t;\n \n /* Used instead of declspecs where storage classes are not allowed\n@@ -2141,11 +2150,15 @@ structsp:\n \t\t  $<ttype>$ = finish_class_definition ($1, $5, semi); \n \t\t}\n \t  pending_defargs\n-                { finish_default_args (); }\n+                {\n+\t\t  begin_inline_definitions ();\n+\t\t}\n \t  pending_inlines\n-                { $$.t = $<ttype>6;\n+                {\n+\t\t  finish_inline_definitions ();\n+\t\t  $$.t = $<ttype>6;\n \t\t  $$.new_type_flag = 1; \n-\t\t  begin_inline_definitions (); }\n+\t\t}\n \t| class_head  %prec EMPTY\n \t\t{\n \t\t  $$.new_type_flag = 0;\n@@ -2689,10 +2702,10 @@ cv_qualifiers:\n \n nonempty_cv_qualifiers:\n \t  CV_QUALIFIER\n-\t\t{ $$.t = build_decl_list (NULL_TREE, $1); \n+\t\t{ $$.t = hash_tree_cons (NULL_TREE, $1, NULL_TREE);\n \t\t  $$.new_type_flag = 0; }\n \t| nonempty_cv_qualifiers CV_QUALIFIER\n-\t\t{ $$.t = decl_tree_cons (NULL_TREE, $2, $1.t); \n+\t\t{ $$.t = hash_tree_cons (NULL_TREE, $2, $1.t); \n \t\t  $$.new_type_flag = $1.new_type_flag; }\n \t;\n "}, {"sha": "a3c3a32836c59eaeb58198bda65bfb218c79ba89", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=51632249ef73fee7a6c76af82acef9164e20761b", "patch": "@@ -5834,8 +5834,8 @@ tsubst_arg_types (arg_types, args, complain, in_decl)\n   /* Note that we do not substitute into default arguments here.  The\n      standard mandates that they be instantiated only when needed,\n      which is done in build_over_call.  */\n-  return hash_tree_cons_simple (TREE_PURPOSE (arg_types), type,\n-\t\t\t\tremaining_arg_types);\n+  return hash_tree_cons (TREE_PURPOSE (arg_types), type,\n+\t\t\t remaining_arg_types);\n \t\t\t \n }\n \n@@ -6195,15 +6195,10 @@ tsubst (t, args, complain, in_decl)\n     case TREE_LIST:\n       {\n \ttree purpose, value, chain, result;\n-\tint via_public, via_virtual, via_protected;\n \n \tif (t == void_list_node)\n \t  return t;\n \n-\tvia_public = TREE_VIA_PUBLIC (t);\n-\tvia_protected = TREE_VIA_PROTECTED (t);\n-\tvia_virtual = TREE_VIA_VIRTUAL (t);\n-\n \tpurpose = TREE_PURPOSE (t);\n \tif (purpose)\n \t  {\n@@ -6229,8 +6224,7 @@ tsubst (t, args, complain, in_decl)\n \t    && value == TREE_VALUE (t)\n \t    && chain == TREE_CHAIN (t))\n \t  return t;\n-\tresult = hash_tree_cons (via_public, via_virtual, via_protected,\n-\t\t\t\t purpose, value, chain);\n+\tresult = hash_tree_cons (purpose, value, chain);\n \tTREE_PARMLIST (result) = TREE_PARMLIST (t);\n \treturn result;\n       }"}, {"sha": "0bbb1195da616576832e6b1597de41caa8748fcb", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=51632249ef73fee7a6c76af82acef9164e20761b", "patch": "@@ -1465,7 +1465,7 @@ finish_class_definition (t, attributes, semi)\n    the processing of a class definition.  */\n \n void\n-finish_default_args ()\n+begin_inline_definitions ()\n {\n   if (pending_inlines \n       && current_scope () == current_function_decl)\n@@ -1476,7 +1476,7 @@ finish_default_args ()\n    processing of a class definition.  */\n \n void\n-begin_inline_definitions ()\n+finish_inline_definitions ()\n {\n   if (current_class_type == NULL_TREE)\n     clear_inline_text_obstack (); "}, {"sha": "96d9cbd72bd2d4cc84c4c34587250a3c857c2a4f", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 9, "deletions": 26, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51632249ef73fee7a6c76af82acef9164e20761b/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=51632249ef73fee7a6c76af82acef9164e20761b", "patch": "@@ -33,8 +33,7 @@ static tree perm_manip PROTO((tree));\n static tree build_cplus_array_type_1 PROTO((tree, tree));\n static void list_hash_add PROTO((int, tree));\n static int list_hash PROTO((tree, tree, tree));\n-static tree list_hash_lookup PROTO((int, int, int, int, tree, tree,\n-\t\t\t\t    tree));\n+static tree list_hash_lookup PROTO((int, tree, tree, tree));\n static void propagate_binfo_offsets PROTO((tree, tree));\n static int avoid_overlap PROTO((tree, tree));\n static int lvalue_p_1 PROTO((tree, int));\n@@ -978,18 +977,14 @@ list_hash (purpose, value, chain)\n    If one is found, return it.  Otherwise return 0.  */\n \n static tree\n-list_hash_lookup (hashcode, via_public, via_protected, via_virtual,\n-\t\t  purpose, value, chain)\n-     int hashcode, via_public, via_virtual, via_protected;\n+list_hash_lookup (hashcode, purpose, value, chain)\n+     int hashcode;\n      tree purpose, value, chain;\n {\n   register struct list_hash *h;\n \n   for (h = list_hash_table[hashcode % TYPE_HASH_SIZE]; h; h = h->next)\n     if (h->hashcode == hashcode\n-\t&& TREE_VIA_VIRTUAL (h->list) == via_virtual\n-\t&& TREE_VIA_PUBLIC (h->list) == via_public\n-\t&& TREE_VIA_PROTECTED (h->list) == via_protected\n \t&& TREE_PURPOSE (h->list) == purpose\n \t&& TREE_VALUE (h->list) == value\n \t&& TREE_CHAIN (h->list) == chain)\n@@ -1014,24 +1009,16 @@ list_hash_add (hashcode, list)\n   list_hash_table[hashcode % TYPE_HASH_SIZE] = h;\n }\n \n-/* Given TYPE, and HASHCODE its hash code, return the canonical\n-   object for an identical list if one already exists.\n-   Otherwise, return TYPE, and record it as the canonical object\n-   if it is a permanent object.\n-\n-   To use this function, first create a list of the sort you want.\n-   Then compute its hash code from the fields of the list that\n-   make it different from other similar lists.\n-   Then call this function and use the value.\n-   This function frees the list you pass in if it is a duplicate.  */\n+/* Given list components PURPOSE, VALUE, AND CHAIN, return the canonical\n+   object for an identical list if one already exists.  Otherwise, build a\n+   new one, and record it as the canonical object.  */\n \n /* Set to 1 to debug without canonicalization.  Never set by program.  */\n \n static int debug_no_list_hash = 0;\n \n tree\n-hash_tree_cons (via_public, via_virtual, via_protected, purpose, value, chain)\n-     int via_public, via_virtual, via_protected;\n+hash_tree_cons (purpose, value, chain)\n      tree purpose, value, chain;\n {\n   struct obstack *ambient_obstack = current_obstack;\n@@ -1041,18 +1028,14 @@ hash_tree_cons (via_public, via_virtual, via_protected, purpose, value, chain)\n   if (! debug_no_list_hash)\n     {\n       hashcode = list_hash (purpose, value, chain);\n-      t = list_hash_lookup (hashcode, via_public, via_protected, via_virtual,\n-\t\t\t    purpose, value, chain);\n+      t = list_hash_lookup (hashcode, purpose, value, chain);\n       if (t)\n \treturn t;\n     }\n \n   current_obstack = &class_obstack;\n \n   t = tree_cons (purpose, value, chain);\n-  TREE_VIA_PUBLIC (t) = via_public;\n-  TREE_VIA_PROTECTED (t) = via_protected;\n-  TREE_VIA_VIRTUAL (t) = via_virtual;\n \n   /* If this is a new list, record it for later reuse.  */\n   if (! debug_no_list_hash)\n@@ -1068,7 +1051,7 @@ tree\n hash_tree_chain (value, chain)\n      tree value, chain;\n {\n-  return hash_tree_cons (0, 0, 0, NULL_TREE, value, chain);\n+  return hash_tree_cons (NULL_TREE, value, chain);\n }\n \n /* Similar, but used for concatenating two lists.  */"}]}