{"sha": "89d594a24d75b48db60e6dcebf5945686618361b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODlkNTk0YTI0ZDc1YjQ4ZGI2MGU2ZGNlYmY1OTQ1Njg2NjE4MzYxYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-10-05T16:08:02Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-10-05T16:08:02Z"}, "message": "re PR c++/17829 (wrong error: call of  overloaded function is ambiguous)\n\ncp:\n\tPR c++/17829\n\t* parser.c (cp_parser_postfix_expression): Inhibit Koenig when\n\tunqualified lookup finds a member function.\ntestsuite:\n\tPR c++/17829\n\t* g++.dg/lookup/koenig4.C: New.\n\nFrom-SVN: r88558", "tree": {"sha": "f51e5219a6b3d3d36d4714660d7207c65c66ca54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f51e5219a6b3d3d36d4714660d7207c65c66ca54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89d594a24d75b48db60e6dcebf5945686618361b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d594a24d75b48db60e6dcebf5945686618361b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89d594a24d75b48db60e6dcebf5945686618361b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d594a24d75b48db60e6dcebf5945686618361b/comments", "author": null, "committer": null, "parents": [{"sha": "370f7a47bebfc5e52df1caa262d47e553041912b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370f7a47bebfc5e52df1caa262d47e553041912b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/370f7a47bebfc5e52df1caa262d47e553041912b"}], "stats": {"total": 72, "additions": 61, "deletions": 11}, "files": [{"sha": "21829a5de6474abeea2c00d5df95bfc53612ffe4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d594a24d75b48db60e6dcebf5945686618361b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d594a24d75b48db60e6dcebf5945686618361b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=89d594a24d75b48db60e6dcebf5945686618361b", "patch": "@@ -1,3 +1,9 @@\n+2004-10-05  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/17829\n+\t* parser.c (cp_parser_postfix_expression): Inhibit Koenig when\n+\tunqualified lookup finds a member function.\n+\n 2004-10-04  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \tConvert diagnostics to use quoting flag q 4/n"}, {"sha": "79342dbf576a17d69517a7966e9ef97ed0e0cbea", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 27, "deletions": 9, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d594a24d75b48db60e6dcebf5945686618361b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d594a24d75b48db60e6dcebf5945686618361b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=89d594a24d75b48db60e6dcebf5945686618361b", "patch": "@@ -4061,20 +4061,38 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p)\n \t    koenig_p = false;\n \t    if (idk == CP_ID_KIND_UNQUALIFIED)\n \t      {\n+\t\tif (TREE_CODE (postfix_expression) == IDENTIFIER_NODE)\n+\t\t  {\n+\t\t    if (args)\n+\t\t      {\n+\t\t\tkoenig_p = true;\n+\t\t\tpostfix_expression\n+\t\t\t  = perform_koenig_lookup (postfix_expression, args);\n+\t\t      }\n+\t\t    else\n+\t\t      postfix_expression\n+\t\t\t= unqualified_fn_lookup_error (postfix_expression);\n+\t\t  }\n \t\t/* We do not perform argument-dependent lookup if\n \t\t   normal lookup finds a non-function, in accordance\n \t\t   with the expected resolution of DR 218.  */\n-\t\tif (args\n-\t\t    && (is_overloaded_fn (postfix_expression)\n-\t\t\t|| TREE_CODE (postfix_expression) == IDENTIFIER_NODE))\n+\t\telse if (args && is_overloaded_fn (postfix_expression))\n \t\t  {\n-\t\t    koenig_p = true;\n-\t\t    postfix_expression\n-\t\t      = perform_koenig_lookup (postfix_expression, args);\n+\t\t    tree fn = get_first_fn (postfix_expression);\n+\n+\t\t    if (TREE_CODE (fn) == TEMPLATE_ID_EXPR)\n+\t\t      fn = OVL_CURRENT (TREE_OPERAND (fn, 0));\n+\n+\t\t    /* Only do argument dependent lookup if regular\n+\t\t       lookup does not find a set of member functions.\n+\t\t       [basic.lookup.koenig]/2a  */\n+\t\t    if (!DECL_FUNCTION_MEMBER_P (fn))\n+\t\t      {\n+\t\t\tkoenig_p = true;\n+\t\t\tpostfix_expression\n+\t\t\t  = perform_koenig_lookup (postfix_expression, args);\n+\t\t      }\n \t\t  }\n-\t\telse if (TREE_CODE (postfix_expression) == IDENTIFIER_NODE)\n-\t\t  postfix_expression\n-\t\t    = unqualified_fn_lookup_error (postfix_expression);\n \t      }\n \n \t    if (TREE_CODE (postfix_expression) == COMPONENT_REF)"}, {"sha": "8849504824cd2553655d74ed2c4f485265f5d5f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d594a24d75b48db60e6dcebf5945686618361b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d594a24d75b48db60e6dcebf5945686618361b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=89d594a24d75b48db60e6dcebf5945686618361b", "patch": "@@ -1,3 +1,8 @@\n+2004-10-05  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/17829\n+\t* g++.dg/lookup/koenig4.C: New.\n+\n 2004-10-05  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* g++.dg/other/classkey1.C: Adjust quoting marks.\n@@ -22219,15 +22224,15 @@ Thu Apr 27 15:58:18 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.c-torture/compile/labels-2.c: New test.\n \n-1999-12-27  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+1999-12-27  Martin von L\u00f6wis  <loewis@informatik.hu-berlin.de>\n \n \t* gcc.c-torture/execute/991227-1.c: New test.\n \n 1999-12-22  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n \n \t* g++.old-deja/g++.pt/instantiate6.C: Remove excess errors XFAIL.\n \n-1999-12-21  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+1999-12-21  Martin von L\u00f6wis  <loewis@informatik.hu-berlin.de>\n \n \t* gcc.c-torture/execute/991221-1.c: New test.\n "}, {"sha": "49fa5eaa653434a9fb5cdcf5e6e4a1ed6d2cf005", "filename": "gcc/testsuite/g++.dg/lookup/koenig4.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d594a24d75b48db60e6dcebf5945686618361b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d594a24d75b48db60e6dcebf5945686618361b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig4.C?ref=89d594a24d75b48db60e6dcebf5945686618361b", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 5 Oct 2004 <nathan@codesourcery.com>\n+\n+// Origin: Wolfgang Bangerth <bangerth@dealii.org>\n+// Incorrect koenig lookup\n+\n+struct A {}; \n+ \n+struct B { \n+    static void foo(); \n+    static void bar(const A &); \n+};   \n+     \n+void bar(const A &){} \n+     \n+void B::foo () {    \n+    A a; \n+    bar (a); \n+}"}]}