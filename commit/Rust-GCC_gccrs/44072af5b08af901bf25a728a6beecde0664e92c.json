{"sha": "44072af5b08af901bf25a728a6beecde0664e92c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQwNzJhZjViMDhhZjkwMWJmMjVhNzI4YTZiZWVjZGUwNjY0ZTkyYw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-06-05T06:19:19Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-06-05T06:19:19Z"}, "message": "runtime: Fix call to _dl_get_tls_static_info for i386.\n\nFrom-SVN: r188230", "tree": {"sha": "41efff854752dd2e4f96649759a91c71ff28ccbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41efff854752dd2e4f96649759a91c71ff28ccbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44072af5b08af901bf25a728a6beecde0664e92c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44072af5b08af901bf25a728a6beecde0664e92c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44072af5b08af901bf25a728a6beecde0664e92c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44072af5b08af901bf25a728a6beecde0664e92c/comments", "author": null, "committer": null, "parents": [{"sha": "70b9f51628c32d91a451ff6616f675d5a738413b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b9f51628c32d91a451ff6616f675d5a738413b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b9f51628c32d91a451ff6616f675d5a738413b"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "eb81c9ee7152f65c41374c941d5ff1e7c273656d", "filename": "libgo/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44072af5b08af901bf25a728a6beecde0664e92c/libgo%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44072af5b08af901bf25a728a6beecde0664e92c/libgo%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfig.h.in?ref=44072af5b08af901bf25a728a6beecde0664e92c", "patch": "@@ -286,6 +286,9 @@\n /* Define to 1 if you have the `wait4' function. */\n #undef HAVE_WAIT4\n \n+/* Define to 1 if you have the `_dl_get_tls_static_info' function. */\n+#undef HAVE__DL_GET_TLS_STATIC_INFO\n+\n /* Define if the C++ compiler is configured for setjmp/longjmp exceptions. */\n #undef LIBGO_SJLJ_EXCEPTIONS\n "}, {"sha": "be9e510ce252c6089207550794539b3b2bcef596", "filename": "libgo/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44072af5b08af901bf25a728a6beecde0664e92c/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44072af5b08af901bf25a728a6beecde0664e92c/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=44072af5b08af901bf25a728a6beecde0664e92c", "patch": "@@ -14584,7 +14584,7 @@ else\n fi\n \n \n-for ac_func in strerror_r strsignal wait4 mincore setenv\n+for ac_func in strerror_r strsignal wait4 mincore setenv _dl_get_tls_static_info\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\""}, {"sha": "03909d6046cd3299214c651256cd4817c4a4860a", "filename": "libgo/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44072af5b08af901bf25a728a6beecde0664e92c/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44072af5b08af901bf25a728a6beecde0664e92c/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=44072af5b08af901bf25a728a6beecde0664e92c", "patch": "@@ -481,7 +481,7 @@ fi\n \n AM_CONDITIONAL(HAVE_SYS_MMAN_H, test \"$ac_cv_header_sys_mman_h\" = yes)\n \n-AC_CHECK_FUNCS(strerror_r strsignal wait4 mincore setenv)\n+AC_CHECK_FUNCS(strerror_r strsignal wait4 mincore setenv _dl_get_tls_static_info)\n AM_CONDITIONAL(HAVE_STRERROR_R, test \"$ac_cv_func_strerror_r\" = yes)\n AM_CONDITIONAL(HAVE_WAIT4, test \"$ac_cv_func_wait4\" = yes)\n "}, {"sha": "0adecb7b57ea14026ed0710e9992bbb16522b40b", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44072af5b08af901bf25a728a6beecde0664e92c/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44072af5b08af901bf25a728a6beecde0664e92c/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=44072af5b08af901bf25a728a6beecde0664e92c", "patch": "@@ -1105,6 +1105,7 @@ runtime_newm(void)\n \tM *m;\n \tpthread_attr_t attr;\n \tpthread_t tid;\n+\tsize_t stacksize;\n \n \tm = runtime_malloc(sizeof(M));\n \tmcommoninit(m);\n@@ -1118,7 +1119,31 @@ runtime_newm(void)\n #ifndef PTHREAD_STACK_MIN\n #define PTHREAD_STACK_MIN 8192\n #endif\n-\tif(pthread_attr_setstacksize(&attr, PTHREAD_STACK_MIN) != 0)\n+\n+\tstacksize = PTHREAD_STACK_MIN;\n+\n+#ifdef HAVE__DL_GET_TLS_STATIC_INFO\n+\t{\n+\t\t/* On GNU/Linux the static TLS size is taken out of\n+\t\t   the stack size, and we get an error or a crash if\n+\t\t   there is not enough stack space left.  Add it back\n+\t\t   in if we can, in case the program uses a lot of TLS\n+\t\t   space.  */\n+#ifndef internal_function\n+#ifdef __i386__\n+#define internal_function __attribute__ ((regparm (3), stdcall))\n+#else\n+#define internal_function\n+#endif\n+#endif\n+\t\textern void _dl_get_tls_static_info(size_t*, size_t*) internal_function;\n+\t\tsize_t tlssize, tlsalign;\n+\t\t_dl_get_tls_static_info(&tlssize, &tlsalign);\n+\t\tstacksize += tlssize;\n+\t}\n+#endif\n+\n+\tif(pthread_attr_setstacksize(&attr, stacksize) != 0)\n \t\truntime_throw(\"pthread_attr_setstacksize\");\n \n \tif(pthread_create(&tid, &attr, runtime_mstart, m) != 0)"}]}