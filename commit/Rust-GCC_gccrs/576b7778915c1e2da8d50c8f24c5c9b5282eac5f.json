{"sha": "576b7778915c1e2da8d50c8f24c5c9b5282eac5f", "node_id": "C_kwDOANBUbNoAKDU3NmI3Nzc4OTE1YzFlMmRhOGQ1MGM4ZjI0YzVjOWI1MjgyZWFjNWY", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-04-27T15:30:59Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-30T08:29:04Z"}, "message": "[Ada] Fix expansion of structural subprogram variants\n\nWhen implementing structural subprogram variants we ignored them in\nexpansion of the pragma itself, but not in expansion of a recursive\nsubprogram call. Now fixed.\n\ngcc/ada/\n\n\t* exp_ch6.adb (Check_Subprogram_Variant): Ignore structural\n\tvariants.", "tree": {"sha": "01522854b962900512d20c7cd1caec43d3b439d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01522854b962900512d20c7cd1caec43d3b439d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/576b7778915c1e2da8d50c8f24c5c9b5282eac5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576b7778915c1e2da8d50c8f24c5c9b5282eac5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/576b7778915c1e2da8d50c8f24c5c9b5282eac5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576b7778915c1e2da8d50c8f24c5c9b5282eac5f/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "263cb16b7667ba92fbac3098375aecfb7f80105e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/263cb16b7667ba92fbac3098375aecfb7f80105e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/263cb16b7667ba92fbac3098375aecfb7f80105e"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "7d507271428993d1c58bafb1db361375271e0435", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576b7778915c1e2da8d50c8f24c5c9b5282eac5f/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576b7778915c1e2da8d50c8f24c5c9b5282eac5f/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=576b7778915c1e2da8d50c8f24c5c9b5282eac5f", "patch": "@@ -3298,19 +3298,33 @@ package body Exp_Ch6 is\n          Variant_Prag : constant Node_Id :=\n            Get_Pragma (Current_Scope, Pragma_Subprogram_Variant);\n \n+         Pragma_Arg1  : Node_Id;\n          Variant_Proc : Entity_Id;\n \n       begin\n          if Present (Variant_Prag) and then Is_Checked (Variant_Prag) then\n \n-            --  Analysis of the pragma rewrites its argument with a reference\n-            --  to the internally generated procedure.\n+            Pragma_Arg1 :=\n+              Expression (First (Pragma_Argument_Associations (Variant_Prag)));\n \n-            Variant_Proc :=\n-              Entity\n-                (Expression\n-                   (First\n-                      (Pragma_Argument_Associations (Variant_Prag))));\n+            --  If pragma parameter is still an aggregate, it comes from a\n+            --  structural variant, which is not expanded and ignored for\n+            --  run-time execution.\n+\n+            if Nkind (Pragma_Arg1) = N_Aggregate then\n+               pragma Assert\n+                 (Chars\n+                    (First\n+                      (Choices\n+                         (First (Component_Associations (Pragma_Arg1))))) =\n+                  Name_Structural);\n+               return;\n+            end if;\n+\n+            --  Otherwise, analysis of the pragma rewrites its argument with a\n+            --  reference to the internally generated procedure.\n+\n+            Variant_Proc := Entity (Pragma_Arg1);\n \n             Insert_Action (Call_Node,\n               Make_Procedure_Call_Statement (Loc,"}]}