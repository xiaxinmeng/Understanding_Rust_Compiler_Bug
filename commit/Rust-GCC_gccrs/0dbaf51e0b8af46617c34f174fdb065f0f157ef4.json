{"sha": "0dbaf51e0b8af46617c34f174fdb065f0f157ef4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRiYWY1MWUwYjhhZjQ2NjE3YzM0ZjE3NGZkYjA2NWYwZjE1N2VmNA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2014-06-07T21:12:03Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2014-06-07T21:12:03Z"}, "message": "gcse.c (can_assign_to_reg_without_clobbers_p): Do not let pointers from test_insn into GGC space escape via SET_SRC.\n\n\t* gcse.c (can_assign_to_reg_without_clobbers_p): Do not let pointers\n\tfrom test_insn into GGC space escape via SET_SRC.\n\nFrom-SVN: r211347", "tree": {"sha": "a681c7cd97e0f0aece92ad93a8795a5e3edcab26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a681c7cd97e0f0aece92ad93a8795a5e3edcab26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0dbaf51e0b8af46617c34f174fdb065f0f157ef4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dbaf51e0b8af46617c34f174fdb065f0f157ef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dbaf51e0b8af46617c34f174fdb065f0f157ef4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dbaf51e0b8af46617c34f174fdb065f0f157ef4/comments", "author": null, "committer": null, "parents": [{"sha": "51d2abebc4155932e23becf6304628a8105a2c51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51d2abebc4155932e23becf6304628a8105a2c51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51d2abebc4155932e23becf6304628a8105a2c51"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "34021b8dbfc99133180a71aafeb94916685c4db3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbaf51e0b8af46617c34f174fdb065f0f157ef4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbaf51e0b8af46617c34f174fdb065f0f157ef4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0dbaf51e0b8af46617c34f174fdb065f0f157ef4", "patch": "@@ -1,3 +1,8 @@\n+2014-06-07  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+        * gcse.c (can_assign_to_reg_without_clobbers_p): Do not let pointers\n+\tfrom test_insn into GGC space escape via SET_SRC.\n+\n 2014-06-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-ssa-tail-merge.c (same_succ_hash): Hash the static chain of a"}, {"sha": "a49cc65b7bf1d76214d0de4590a126012645d22e", "filename": "gcc/gcse.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbaf51e0b8af46617c34f174fdb065f0f157ef4/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbaf51e0b8af46617c34f174fdb065f0f157ef4/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=0dbaf51e0b8af46617c34f174fdb065f0f157ef4", "patch": "@@ -849,6 +849,7 @@ can_assign_to_reg_without_clobbers_p (rtx x)\n {\n   int num_clobbers = 0;\n   int icode;\n+  bool can_assign = false;\n \n   /* If this is a valid operand, we are OK.  If it's VOIDmode, we aren't.  */\n   if (general_operand (x, GET_MODE (x)))\n@@ -866,6 +867,7 @@ can_assign_to_reg_without_clobbers_p (rtx x)\n \t\t\t\t\t\t   FIRST_PSEUDO_REGISTER * 2),\n \t\t\t\t      const0_rtx));\n       NEXT_INSN (test_insn) = PREV_INSN (test_insn) = 0;\n+      INSN_LOCATION (test_insn) = UNKNOWN_LOCATION;\n     }\n \n   /* Now make an insn like the one we would make when GCSE'ing and see if\n@@ -874,16 +876,19 @@ can_assign_to_reg_without_clobbers_p (rtx x)\n   SET_SRC (PATTERN (test_insn)) = x;\n \n   icode = recog (PATTERN (test_insn), test_insn, &num_clobbers);\n-  if (icode < 0)\n-    return false;\n \n-  if (num_clobbers > 0 && added_clobbers_hard_reg_p (icode))\n-    return false;\n+  /* If the test insn is valid and doesn't need clobbers, and the target also\n+     has no objections, we're good.  */\n+  if (icode >= 0\n+      && (num_clobbers == 0 || !added_clobbers_hard_reg_p (icode))\n+      && ! (targetm.cannot_copy_insn_p\n+\t    && targetm.cannot_copy_insn_p (test_insn)))\n+    can_assign = true;\n \n-  if (targetm.cannot_copy_insn_p && targetm.cannot_copy_insn_p (test_insn))\n-    return false;\n+  /* Make sure test_insn doesn't have any pointers into GC space.  */\n+  SET_SRC (PATTERN (test_insn)) = NULL_RTX;\n \n-  return true;\n+  return can_assign;\n }\n \n /* Return nonzero if the operands of expression X are unchanged from the"}]}