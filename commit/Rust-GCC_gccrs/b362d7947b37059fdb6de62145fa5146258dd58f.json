{"sha": "b362d7947b37059fdb6de62145fa5146258dd58f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM2MmQ3OTQ3YjM3MDU5ZmRiNmRlNjIxNDVmYTUxNDYyNThkZDU4Zg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-07-22T17:49:33Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-07-22T17:51:26Z"}, "message": "Add new test for PR65178.\n\ngcc/testsuite/ChangeLog:\n\tPR tree-optimization/65178\n\t* gcc.dg/uninit-pr65178.c: New test.", "tree": {"sha": "2cd2ded5c1a723557074f2b3bd040e20f83d02e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cd2ded5c1a723557074f2b3bd040e20f83d02e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b362d7947b37059fdb6de62145fa5146258dd58f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b362d7947b37059fdb6de62145fa5146258dd58f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b362d7947b37059fdb6de62145fa5146258dd58f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b362d7947b37059fdb6de62145fa5146258dd58f/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50f3ac1beb0cb400484dd2621dd0e3e530583e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50f3ac1beb0cb400484dd2621dd0e3e530583e69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50f3ac1beb0cb400484dd2621dd0e3e530583e69"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "21eb354fa7e175e0681145da58d4cb1c02f9f605", "filename": "gcc/testsuite/gcc.dg/uninit-pr65178.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b362d7947b37059fdb6de62145fa5146258dd58f/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr65178.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b362d7947b37059fdb6de62145fa5146258dd58f/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr65178.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr65178.c?ref=b362d7947b37059fdb6de62145fa5146258dd58f", "patch": "@@ -0,0 +1,21 @@\n+/* PR  tree-optimizatiom/65178 - incorrect -Wmaybe-uninitialized when using\n+   nested loops\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+void *bar (int);\n+\n+char *foo (void)\n+{\n+  char *c = \"bla\";\n+  char *buf;\n+  for (int a = 1;; a = 0)\n+    {\n+      for (char *s = c; *s; ++s)\n+        {\n+        }\n+      if (!a) break;\n+      buf = (char *) bar (1);\n+    }\n+  return buf;       // { dg-bogus \"\\\\\\[-Wmaybe-uninitialized\" }\n+}"}]}