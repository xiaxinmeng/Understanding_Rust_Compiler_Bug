{"sha": "c867c39d8ae911e8d4c96333e7dc610837bf414e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg2N2MzOWQ4YWU5MTFlOGQ0Yzk2MzMzZTdkYzYxMDgzN2JmNDE0ZQ==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2016-11-17T13:43:20Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2016-11-17T13:43:20Z"}, "message": "[ARC] Update target specific tests.\n\ngcc/testsuite\n2016-11-17  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* gcc.target/arc/abitest.S: New file.\n\t* gcc.target/arc/abitest.h: Likewise.\n\t* gcc.target/arc/va_args-1.c: Likewise.\n\t* gcc.target/arc/va_args-2.c: Likewise.\n\t* gcc.target/arc/va_args-3.c: Likewise.\n\t* gcc.target/arc/mcrc.c: Deleted.\n\t* gcc.target/arc/mdsp-packa.c: Likewise.\n\t* gcc.target/arc/mdvbf.c: Likewise.\n\t* gcc.target/arc/mmac-24.c: Likewise.\n\t* gcc.target/arc/mmac-d16.c: Likewise.\n\t* gcc.target/arc/mno-crc.c: Likewise.\n\t* gcc.target/arc/mno-dsp-packa.c: Likewise.\n\t* gcc.target/arc/mno-dvbf.c: Likewise.\n\t* gcc.target/arc/mno-mac-24.c: Likewise.\n\t* gcc.target/arc/mno-mac-d16.c: Likewise.\n\t* gcc.target/arc/mno-rtsc.c: Likewise.\n\t* gcc.target/arc/mno-xy.c: Likewise.\n\t* gcc.target/arc/mrtsc.c: Likewise.\n\t* gcc.target/arc/arc.exp (check_effective_target_arcem):\n\tNew function.\n\t(check_effective_target_arc700): Likewise.\n\t(check_effective_target_arc6xx): Likewise.\n\t(check_effective_target_arcmpy): Likewise.\n\t(check_effective_target_archs): Likewise.\n\t(check_effective_target_clmcpu): Likewise.\n\t(check_effective_target_barrelshifter): Likewise.\n\t* gcc.target/arc/barrel-shifter-1.c: Changed.\n\t* gcc.target/arc/builtin_simd.c: Test only for ARC700\n\tcpus.\n\t* gcc.target/arc/cmem-1.c: Changed.\n\t* gcc.target/arc/cmem-2.c: Likewise.\n\t* gcc.target/arc/cmem-3.c: Likewise.\n\t* gcc.target/arc/cmem-4.c: Likewise.\n\t* gcc.target/arc/cmem-5.c: Likewise.\n\t* gcc.target/arc/cmem-6.c: Likewise.\n\t* gcc.target/arc/cmem-7.c: Likewise.\n\t* gcc.target/arc/interrupt-1.c: Test for RTIE as well.\n\t* gcc.target/arc/interrupt-2.c: Skip it for ARCv2 cores.\n\t* gcc.target/arc/interrupt-3.c: Match also ARCv2\n\twarnings.\n\t* gcc.target/arc/jump-around-jump.c: Update options.\n\t* gcc.target/arc/mARC601.c: Changed.\n\t* gcc.target/arc/mcpu-arc600.c: Changed.\n\t* gcc.target/arc/mcpu-arc601.c: Changed.\n\t* gcc.target/arc/mcpu-arc700.c: Changed.\n\t* gcc.target/arc/mdpfp.c: Skip for ARCv2 cores.\n\t* gcc.target/arc/movb-1.c: Changed.\n\t* gcc.target/arc/movb-2.c: Likewise.\n\t* gcc.target/arc/movb-3.c: Likewise.\n\t* gcc.target/arc/movb-4.c: Likewise.\n\t* gcc.target/arc/movb-5.c: Likewise.\n\t* gcc.target/arc/movb_cl-1.c: Likewise.\n\t* gcc.target/arc/movb_cl-2.c: Likewise.\n\t* gcc.target/arc/movbi_cl-1.c: Likewise.\n\t* gcc.target/arc/movh_cl-1.c: Likewise.\n\t* gcc.target/arc/mspfp.c: Skip for ARC HS cores.\n\t* gcc.target/arc/mul64.c: Enable it only for ARC600.\n\t* gcc.target/arc/mulsi3_highpart-1.c: Scan for ARCv2\n\tinstructions.\n\t* gcc.target/arc/mulsi3_highpart-2.c: Skip it for ARCv1\n\tcores.\n\t* gcc.target/arc/no-dpfp-lrsr.c: Skip it for ARC HS.\n\t* gcc.target/arc/trsub.c: Only for ARC EM cores.\n\t* gcc.target/arc/builtin_simdarc.c: Changed.\n\t* gcc.target/arc/extzv-1.c: Likewise.\n\t* gcc.target/arc/insv-1.c: Likewise.\n\t* gcc.target/arc/insv-2.c: Likewise.\n\t* gcc.target/arc/mA6.c: Likewise.\n\t* gcc.target/arc/mA7.c: Likewise.\n\t* gcc.target/arc/mARC600.c: Likewise.\n\t* gcc.target/arc/mARC700.c: Likewise.\n\t* gcc.target/arc/mcpu-arc600.c: Likewise.\n\t* gcc.target/arc/mcpu-arc700.c: Likewise.\n\t* gcc.target/arc/movl-1.c: Likewise.\n\t* gcc.target/arc/nps400-1.c: Likewise.\n\t* gcc.target/arc/trsub.c: Likewise.\n\t* gcc.target/arc/barrel-shifter-2.c: Check for barrel\n\tshifter configuration.\n\t* gcc.target/arc/mlock.c: Skip for arc6xx\n\tconfigurations.\n\t* gcc.target/arc/mswape.c: Likewise.\n\nFrom-SVN: r242545", "tree": {"sha": "7080a08a76bd5dd2bf848ffce0cac06167c36cfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7080a08a76bd5dd2bf848ffce0cac06167c36cfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c867c39d8ae911e8d4c96333e7dc610837bf414e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c867c39d8ae911e8d4c96333e7dc610837bf414e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c867c39d8ae911e8d4c96333e7dc610837bf414e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c867c39d8ae911e8d4c96333e7dc610837bf414e/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b1e0deb7840e05f759d35bff4eefda634871169", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1e0deb7840e05f759d35bff4eefda634871169", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b1e0deb7840e05f759d35bff4eefda634871169"}], "stats": {"total": 448, "additions": 306, "deletions": 142}, "files": [{"sha": "5063e51ebd6bf844c69219b6a77cf384349c9b0f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,3 +1,82 @@\n+2016-11-17  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* gcc.target/arc/abitest.S: New file.\n+\t* gcc.target/arc/abitest.h: Likewise.\n+\t* gcc.target/arc/va_args-1.c: Likewise.\n+\t* gcc.target/arc/va_args-2.c: Likewise.\n+\t* gcc.target/arc/va_args-3.c: Likewise.\n+\t* gcc.target/arc/mcrc.c: Deleted.\n+\t* gcc.target/arc/mdsp-packa.c: Likewise.\n+\t* gcc.target/arc/mdvbf.c: Likewise.\n+\t* gcc.target/arc/mmac-24.c: Likewise.\n+\t* gcc.target/arc/mmac-d16.c: Likewise.\n+\t* gcc.target/arc/mno-crc.c: Likewise.\n+\t* gcc.target/arc/mno-dsp-packa.c: Likewise.\n+\t* gcc.target/arc/mno-dvbf.c: Likewise.\n+\t* gcc.target/arc/mno-mac-24.c: Likewise.\n+\t* gcc.target/arc/mno-mac-d16.c: Likewise.\n+\t* gcc.target/arc/mno-rtsc.c: Likewise.\n+\t* gcc.target/arc/mno-xy.c: Likewise.\n+\t* gcc.target/arc/mrtsc.c: Likewise.\n+\t* gcc.target/arc/arc.exp (check_effective_target_arcem): New\n+\tfunction.\n+\t(check_effective_target_arc700): Likewise.\n+\t(check_effective_target_arc6xx): Likewise.\n+\t(check_effective_target_arcmpy): Likewise.\n+\t(check_effective_target_archs): Likewise.\n+\t(check_effective_target_clmcpu): Likewise.\n+\t(check_effective_target_barrelshifter): Likewise.\n+\t* gcc.target/arc/barrel-shifter-1.c: Changed.\n+\t* gcc.target/arc/builtin_simd.c: Test only for ARC700 cpus.\n+\t* gcc.target/arc/cmem-1.c: Changed.\n+\t* gcc.target/arc/cmem-2.c: Likewise.\n+\t* gcc.target/arc/cmem-3.c: Likewise.\n+\t* gcc.target/arc/cmem-4.c: Likewise.\n+\t* gcc.target/arc/cmem-5.c: Likewise.\n+\t* gcc.target/arc/cmem-6.c: Likewise.\n+\t* gcc.target/arc/cmem-7.c: Likewise.\n+\t* gcc.target/arc/interrupt-1.c: Test for RTIE as well.\n+\t* gcc.target/arc/interrupt-2.c: Skip it for ARCv2 cores.\n+\t* gcc.target/arc/interrupt-3.c: Match also ARCv2 warnings.\n+\t* gcc.target/arc/jump-around-jump.c: Update options.\n+\t* gcc.target/arc/mARC601.c: Changed.\n+\t* gcc.target/arc/mcpu-arc600.c: Changed.\n+\t* gcc.target/arc/mcpu-arc601.c: Changed.\n+\t* gcc.target/arc/mcpu-arc700.c: Changed.\n+\t* gcc.target/arc/mdpfp.c: Skip for ARCv2 cores.\n+\t* gcc.target/arc/movb-1.c: Changed.\n+\t* gcc.target/arc/movb-2.c: Likewise.\n+\t* gcc.target/arc/movb-3.c: Likewise.\n+\t* gcc.target/arc/movb-4.c: Likewise.\n+\t* gcc.target/arc/movb-5.c: Likewise.\n+\t* gcc.target/arc/movb_cl-1.c: Likewise.\n+\t* gcc.target/arc/movb_cl-2.c: Likewise.\n+\t* gcc.target/arc/movbi_cl-1.c: Likewise.\n+\t* gcc.target/arc/movh_cl-1.c: Likewise.\n+\t* gcc.target/arc/mspfp.c: Skip for ARC HS cores.\n+\t* gcc.target/arc/mul64.c: Enable it only for ARC600.\n+\t* gcc.target/arc/mulsi3_highpart-1.c: Scan for ARCv2 instructions.\n+\t* gcc.target/arc/mulsi3_highpart-2.c: Skip it for ARCv1 cores.\n+\t* gcc.target/arc/no-dpfp-lrsr.c: Skip it for ARC HS.\n+\t* gcc.target/arc/trsub.c: Only for ARC EM cores.\n+\t* gcc.target/arc/builtin_simdarc.c: Changed.\n+\t* gcc.target/arc/extzv-1.c: Likewise.\n+\t* gcc.target/arc/insv-1.c: Likewise.\n+\t* gcc.target/arc/insv-2.c: Likewise.\n+\t* gcc.target/arc/mA6.c: Likewise.\n+\t* gcc.target/arc/mA7.c: Likewise.\n+\t* gcc.target/arc/mARC600.c: Likewise.\n+\t* gcc.target/arc/mARC700.c: Likewise.\n+\t* gcc.target/arc/mcpu-arc600.c: Likewise.\n+\t* gcc.target/arc/mcpu-arc700.c: Likewise.\n+\t* gcc.target/arc/movl-1.c: Likewise.\n+\t* gcc.target/arc/nps400-1.c: Likewise.\n+\t* gcc.target/arc/trsub.c: Likewise.\n+\t* gcc.target/arc/barrel-shifter-2.c: Check for barrel shifter\n+\tconfiguration.\n+\t* gcc.target/arc/mlock.c: Skip for arc6xx configurations.\n+\t* gcc.target/arc/mswape.c: Likewise.\n+\n 2016-11-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/68180"}, {"sha": "7be935b10346e9204b1bc8941e3df26cbe2b9560", "filename": "gcc/testsuite/gcc.target/arc/abitest.S", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fabitest.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fabitest.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fabitest.S?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do assemble } */\n+#ifndef ENTRY\n+#define ENTRY(nm)               \\\n+        .text `                 \\\n+        .align 4 `              \\\n+        .globl nm `             \\\n+        .type nm,@function `    \\\n+nm:\n+#endif\n+\n+#ifndef END\n+#define END(name)       .size name,.-name\n+#endif\n+\n+ENTRY(tsyscall)\n+ENTRY(clone)\n+\tadd\tr0,r0,r1\n+\tadd\tr0,r0,r2\n+\tadd\tr0,r0,r3\n+\tadd\tr0,r0,r4\n+\tadd\tr0,r0,r5\n+\tj_s.d\t[blink]\n+\tadd\tr0,r0,r6\n+END(tsyscall)\n+END(clone)\n+\n+ENTRY(abidi)\n+\tadd.f r0,r1,1\n+        j_s.d [blink]\n+        adc r1,r2,0\n+END(abidi)"}, {"sha": "26de3e4f7e42ce44e5c035d3175fbe1b1a6546b8", "filename": "gcc/testsuite/gcc.target/arc/abitest.h", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fabitest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fabitest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fabitest.h?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -0,0 +1,17 @@\n+#ifndef _DG_ABITEST_H\n+#define _DG_ABITEST_H 1\n+\n+#ifdef  __ASSEMBLER__\n+\n+#define ENTRY(nm)               \\\n+        .text `                 \\\n+        .align 4 `              \\\n+        .globl nm `             \\\n+        .type nm,@function `    \\\n+nm:\n+\n+#define END(name)       .size name,.-name\n+\n+#endif /* __ASSEMBLER __*/\n+\n+#endif /*_DG_ABITEST_H*/"}, {"sha": "62583cd0321ed5aabdd5d897c0bc63dd14f947ff", "filename": "gcc/testsuite/gcc.target/arc/arc.exp", "status": "modified", "additions": 72, "deletions": 2, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Farc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Farc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Farc.exp?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -4,12 +4,12 @@\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; either version 3 of the License, or\n # (at your option) any later version.\n-# \n+#\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n-# \n+#\n # You should have received a copy of the GNU General Public License\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n@@ -24,6 +24,76 @@ if ![istarget arc*-*-*] then {\n # Load support procs.\n load_lib gcc-dg.exp\n \n+# Return 1 if this is a compiler supporting ARCv2 EM as default processor\n+proc check_effective_target_arcem { } {\n+    return [check_no_compiler_messages arcem assembly {\n+\t#if !defined(__ARCEM__)\n+\t#error No ARC EM\n+\t#endif\n+    }]\n+}\n+\n+# Return 1 if we compile for ARC700\n+proc check_effective_target_arc700 { } {\n+    return [check_no_compiler_messages arc700 assembly {\n+\t#if !defined(__ARC700__)\n+\t#error No ARC 700\n+\t#endif\n+    }]\n+}\n+\n+# Return 1 if we compile for ARC6xx\n+proc check_effective_target_arc6xx { } {\n+    return [check_no_compiler_messages arc6xx assembly {\n+\t#if !defined(__ARC600__) && !defined(__ARC601__)\n+\t#error No ARC 6xx\n+\t#endif\n+    }]\n+}\n+\n+# Return 1 if we have mpy\n+proc check_effective_target_arcmpy { } {\n+    return [check_no_compiler_messages arcmpy assembly {\n+\t#if !defined(__ARC_MPY__)\n+\t#error No MPY\n+\t#endif\n+    }]\n+}\n+\n+# Return 1 if this is a compiler supporting ARC HS as default processor\n+proc check_effective_target_archs { } {\n+    return [check_no_compiler_messages archs assembly {\n+\t#if !defined(__ARCHS__)\n+\t#error No ARC HS\n+\t#endif\n+    }]\n+}\n+\n+proc check_cl { flags } {\n+    return [check_no_compiler_messages check_$flags assembly {\n+\t#if !defined(__arc__)\n+\t#error Extra mcpu options\n+\t#endif\n+    } \"$flags\"]\n+}\n+\n+# Return 1 if there are no extra mcpu options given via command line\n+proc check_effective_target_clmcpu { } {\n+    if { [check_cl \"-mcpu=arc700\"]\n+\t && [check_cl \"-mcpu=arcem\" ] } {\n+\treturn 1\n+    }\n+    return 0\n+}\n+\n+proc check_effective_target_barrelshifter { } {\n+    return [check_no_compiler_messages barrelshifter assembly {\n+\t#if !defined(__ARC_BARREL_SHIFTER__)\n+\t#error No barrel shifter for this confi\n+\t#endif\n+    }]\n+}\n+\n # If a testcase doesn't have special options, use these.\n global DEFAULT_CFLAGS\n if ![info exists DEFAULT_CFLAGS] then {"}, {"sha": "5cfb282f6ac7b64c4cedd791e778990dfc5b21fe", "filename": "gcc/testsuite/gcc.target/arc/barrel-shifter-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fbarrel-shifter-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fbarrel-shifter-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fbarrel-shifter-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mcpu=ARC601 -mbarrel-shifter\" } */\n+/* { dg-options \"-O2 -mbarrel-shifter\" } */\n int i;\n \n int f (void)"}, {"sha": "8e0bb9a8a60bbddee0ebe2fb4ac846a0439a0ef1", "filename": "gcc/testsuite/gcc.target/arc/barrel-shifter-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fbarrel-shifter-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fbarrel-shifter-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fbarrel-shifter-2.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { barrelshifter } } } */\n int i;\n \n int f (void)"}, {"sha": "6b0252186c69b5b38c9e1de404be7b81dacb709d", "filename": "gcc/testsuite/gcc.target/arc/builtin_simd.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fbuiltin_simd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fbuiltin_simd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fbuiltin_simd.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-O2 -Werror-implicit-function-declaration -mARC700 -msimd\" } */\n \n #define STEST1(name, rettype, op1)\t\t\\"}, {"sha": "0cfe2ad767d4be777980039567a357158a78143e", "filename": "gcc/testsuite/gcc.target/arc/builtin_simdarc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fbuiltin_simdarc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fbuiltin_simdarc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fbuiltin_simdarc.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=archs -O2 -Werror-implicit-function-declaration -mmpy-option=9\" } */\n \n #define STEST(name, rettype, op1type, op2type)\t\\"}, {"sha": "8ed5dcf2f019443a1cb11ab25425b46c2803444b", "filename": "gcc/testsuite/gcc.target/arc/cmem-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -mcmem\" } */\n \n #define CMEM_SECTION_ATTR __attribute__ ((section (\".cmem\")));"}, {"sha": "39bfb2885c780f47ae1546da7a291553eacb478f", "filename": "gcc/testsuite/gcc.target/arc/cmem-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-2.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -mcmem\" } */\n \n #define CMEM_SECTION_ATTR __attribute__ ((section (\".cmem\")));"}, {"sha": "109084f01fb35614610236a220e60b996e731ef6", "filename": "gcc/testsuite/gcc.target/arc/cmem-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-3.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -mcmem\" } */\n \n #define CMEM_SECTION_ATTR __attribute__ ((section (\".cmem_private\")));"}, {"sha": "4ac8a22f231348a9e1c7092c90c2058516927732", "filename": "gcc/testsuite/gcc.target/arc/cmem-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-4.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -mcmem\" } */\n \n #define CMEM_SECTION_ATTR __attribute__ ((section (\".cmem_private\")));"}, {"sha": "451218b97651532cea7a6e6531ccd5d8d19be226", "filename": "gcc/testsuite/gcc.target/arc/cmem-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-5.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -mcmem\" } */\n \n #define CMEM_SECTION_ATTR __attribute__ ((section (\".cmem_shared\")));"}, {"sha": "0ed06085514b833121d0700a28855077796cb783", "filename": "gcc/testsuite/gcc.target/arc/cmem-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-6.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -mcmem\" } */\n \n #define CMEM_SECTION_ATTR __attribute__ ((section (\".cmem_shared\")));"}, {"sha": "026732711728691a53e7615e673658c24f6ffb29", "filename": "gcc/testsuite/gcc.target/arc/cmem-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcmem-7.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -mcmem\" } */\n \n struct some_struct"}, {"sha": "1e5533a72bb7347d3506a564b623c50ab1c47bf9", "filename": "gcc/testsuite/gcc.target/arc/extzv-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fextzv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fextzv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fextzv-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n struct foo { unsigned a: 3, b: 5, c: 24; };"}, {"sha": "29e4188a2e2b19cb8817e09b0d9796d3762049ee", "filename": "gcc/testsuite/gcc.target/arc/insv-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finsv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finsv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finsv-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n /* ??? Irrespective of insn set, generated code for this is a mess.  */"}, {"sha": "620acecc2e2f91b0076e99354fb42cec7ec84bc7", "filename": "gcc/testsuite/gcc.target/arc/insv-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finsv-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finsv-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finsv-2.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n struct foo { unsigned a: 3, b: 8, c: 21; } bar;"}, {"sha": "8a2002bf1c0ff26391ee9fc3211cef71d636374a", "filename": "gcc/testsuite/gcc.target/arc/interrupt-1.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finterrupt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finterrupt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finterrupt-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,5 +1,10 @@\n+#if defined (__ARCHS__) || defined (__ARCEM__)\n+void __attribute__ ((interrupt(\"ilink\")))\n+#else\n void __attribute__ ((interrupt(\"ilink1\")))\n+#endif\n handler1 (void)\n {\n }\n-/* { dg-final { scan-assembler-times \"j.*\\[ilink1\\]\" 1 } } */\n+/* { dg-final { scan-assembler-times \"j.*\\[ilink1\\]\" 1 { target { arc700 || arc6xx } } } } */\n+/* { dg-final { scan-assembler-times \"rtie\" 1 { target { arcem || archs } } } } */"}, {"sha": "285ebd57a220ca34e5c0aba201276f1cb40142aa", "filename": "gcc/testsuite/gcc.target/arc/interrupt-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finterrupt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finterrupt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finterrupt-2.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-skip-if \"ilink2 is not an ARCv2 register\" { archs || arcem } } */\n void __attribute__ ((interrupt(\"ilink2\")))\n handler1 (void)\n {"}, {"sha": "b0cad88de95ea5b801f4b478bae50fc533223d4e", "filename": "gcc/testsuite/gcc.target/arc/interrupt-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finterrupt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finterrupt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Finterrupt-3.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -5,7 +5,7 @@ handler0 (void)\n \n void __attribute__ ((interrupt(\"you load too\")))\n handler1 (void)\n-{ /* { dg-warning \"is not \\\"ilink1\\\" or \\\"ilink2\\\"\" } */\n+{ /* { dg-warning \"is not \\\"ilink\" } */\n }\n \n void __attribute__ ((interrupt(42)))"}, {"sha": "2fd3fb644c16b384a1726f4dc869bdbe045f48cd", "filename": "gcc/testsuite/gcc.target/arc/jump-around-jump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fjump-around-jump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fjump-around-jump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fjump-around-jump.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Os -mlock -mswape -mrtsc -fno-reorder-blocks\" } */\n+/* { dg-options \"-Os -mlock -mswape -fno-reorder-blocks\" } */\n \n /* This caused an ICE in arc_ifcvt when the 1->3 state change was not\n    implemented for TYPE_UNCOND_BRANCH in arc_ccfsm_post_advance.  */"}, {"sha": "c4eeb6feadcba489d864ab17edd9595ae08e2cf4", "filename": "gcc/testsuite/gcc.target/arc/mA6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmA6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmA6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmA6.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mA6\" } */\n \n /* { dg-final { scan-assembler \".cpu ARC600\" } } */"}, {"sha": "a3c6f8204afb0744cf147878a1831ee613ff9aee", "filename": "gcc/testsuite/gcc.target/arc/mA7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmA7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmA7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmA7.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mA7\" } */\n \n /* { dg-final { scan-assembler \".cpu ARC700\" } } */"}, {"sha": "6a80457b19459aa73b9a5b015effb83754ed26e0", "filename": "gcc/testsuite/gcc.target/arc/mARC600.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmARC600.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmARC600.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmARC600.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mARC600\" } */\n \n /* { dg-final { scan-assembler \".cpu ARC600\" } } */"}, {"sha": "d2386613eb0818ba69ab0d658c82bdeeeb424c1c", "filename": "gcc/testsuite/gcc.target/arc/mARC601.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmARC601.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmARC601.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmARC601.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mARC601\" } */\n \n-/* { dg-final { scan-assembler \".cpu ARC601\" } } */\n+/* { dg-final { scan-assembler \".cpu ARC60.*\" } } */"}, {"sha": "d34583f46aa1d3ec2571bcdd26f3e547f6b72ce6", "filename": "gcc/testsuite/gcc.target/arc/mARC700.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmARC700.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmARC700.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2FmARC700.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mARC700\" } */\n \n /* { dg-final { scan-assembler \".cpu ARC700\" } } */"}, {"sha": "bd1dc9599a6da152cdc1bb56d4ccdb1b38901a11", "filename": "gcc/testsuite/gcc.target/arc/mcpu-arc600.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmcpu-arc600.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmcpu-arc600.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmcpu-arc600.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-mcpu=ARC600\" } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n+/* { dg-options \"-mcpu=arc600\" } */\n \n /* { dg-final { scan-assembler \".cpu ARC600\" } } */"}, {"sha": "8ef046efb86746e8124a95b8a4dc67b274065af3", "filename": "gcc/testsuite/gcc.target/arc/mcpu-arc601.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmcpu-arc601.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmcpu-arc601.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmcpu-arc601.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-mcpu=ARC601\" } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n+/* { dg-options \"-mcpu=arc601\" } */\n \n-/* { dg-final { scan-assembler \".cpu ARC601\" } } */\n+/* { dg-final { scan-assembler \".cpu ARC60.*\" } } */"}, {"sha": "25bb40029864556d504403442e3b509ebdbb76ec", "filename": "gcc/testsuite/gcc.target/arc/mcpu-arc700.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmcpu-arc700.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmcpu-arc700.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmcpu-arc700.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-mcpu=ARC700\" } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n+/* { dg-options \"-mcpu=arc700\" } */\n \n /* { dg-final { scan-assembler \".cpu ARC700\" } } */"}, {"sha": "a449bdd48d63a5ae5d5385cf9c1c20ab3a788ff7", "filename": "gcc/testsuite/gcc.target/arc/mcrc.c", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmcrc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmcrc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmcrc.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,8 +0,0 @@\n-/* { dg-options \"-mcrc\" } */\n-/* { dg-do assemble } */\n-\n-int f (int i)\n-{\n-  __asm__(\"crc %1, %1, %1\" : \"=r\"(i) : \"r\"(i));\n-  return i;\n-}"}, {"sha": "aa6bdfa1c51fe576f0f26e15d5c39bf33ec13794", "filename": "gcc/testsuite/gcc.target/arc/mdpfp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmdpfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmdpfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmdpfp.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"FPX cannot execute on ARC HS\" { archs } } */\n /* { dg-options \"-O2 -mdpfp\" } */\n \n double i;"}, {"sha": "f013a6dd1ea684c9f770d0999529cc712cb7e2e9", "filename": "gcc/testsuite/gcc.target/arc/mdsp-packa.c", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmdsp-packa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmdsp-packa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmdsp-packa.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,9 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-mdsp-packa\" } */\n-/* { dg-do assemble } */\n-\n-int f (int i)\n-{\n-  __asm__(\"minidl %1, %1, %1\" : \"=r\"(i) : \"r\"(i));\n-  return i;\n-}"}, {"sha": "e2e545e8bb32e4219e699945ad6b0ebaedeeb5ca", "filename": "gcc/testsuite/gcc.target/arc/mdvbf.c", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmdvbf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmdvbf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmdvbf.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,9 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-mdvbf\" } */\n-/* { dg-do assemble } */\n-\n-int f (int i)\n-{\n-  __asm__(\"vbfdw %1, %1\" : \"=r\"(i) : \"r\"(i));\n-  return i;\n-}"}, {"sha": "708fb092409f674a3addb5a343ef66842b9c7d76", "filename": "gcc/testsuite/gcc.target/arc/mlock.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmlock.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmlock.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmlock.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-options \"-mlock\" } */\n /* { dg-do assemble } */\n+/* { dg-skip-if \"\" { arc6xx } } */\n \n int f (void *p)\n {"}, {"sha": "89da0b127aaac7f7fa9f438d63ce9a9acb777d96", "filename": "gcc/testsuite/gcc.target/arc/mmac-24.c", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmmac-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmmac-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmmac-24.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,8 +0,0 @@\n-/* { dg-options \"-mmac-24\" } */\n-/* { dg-do assemble } */\n-\n-int f (int i)\n-{\n-  __asm__(\"mult %1, %1, %1\" : \"=r\"(i) : \"r\"(i));\n-  return i;\n-}"}, {"sha": "0570011fd267fe5675911816e226b5616702d83f", "filename": "gcc/testsuite/gcc.target/arc/mmac-d16.c", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmmac-d16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmmac-d16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmmac-d16.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,9 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-mmac-d16\" } */\n-/* { dg-do assemble } */\n-\n-int f (int i)\n-{\n-  __asm__(\"muldw %1, %1, %1\" : \"=r\"(i) : \"r\"(i));\n-  return i;\n-}"}, {"sha": "70ab9c1176149f95b62bfb02caf0c81d8b1f9d3c", "filename": "gcc/testsuite/gcc.target/arc/mno-crc.c", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-crc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-crc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-crc.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,11 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-mno-crc\" } */\n-/* Would also like to assemble and check that we get the expected\n-   \"Error: bad instruction\" assembler messages, but at the moment our\n-   testharness can't do that.  */\n-\n-int f (int i)\n-{\n-  __asm__(\"crc %1, %1, %1\" : \"=r\"(i) : \"r\"(i));\n-  return i;\n-}"}, {"sha": "eb21522af063aeb8f27151d2a22c02961cdad814", "filename": "gcc/testsuite/gcc.target/arc/mno-dsp-packa.c", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-dsp-packa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-dsp-packa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-dsp-packa.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,11 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-mno-dsp-packa\" } */\n-/* Would also like to assemble and check that we get the expected\n-   \"Error: bad instruction\" assembler messages, but at the moment our\n-   testharness can't do that.  */\n-\n-int f (int i)\n-{\n-  __asm__(\"minidl %1, %1, %1\" : \"=r\"(i) : \"r\"(i));\n-  return i;\n-}"}, {"sha": "ea96d987c18608de72762967f2c6c0d0b723476c", "filename": "gcc/testsuite/gcc.target/arc/mno-dvbf.c", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-dvbf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-dvbf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-dvbf.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,11 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-mno-dvbf\" } */\n-/* Would also like to assemble and check that we get the expected\n-   \"Error: bad instruction\" assembler messages, but at the moment our\n-   testharness can't do that.  */\n-\n-int f (int i)\n-{\n-  __asm__(\"vbfdw %1, %1\" : \"=r\"(i) : \"r\"(i));\n-  return i;\n-}"}, {"sha": "b4839579b12556771dfcfb93ef5418e963a0fb39", "filename": "gcc/testsuite/gcc.target/arc/mno-mac-24.c", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-mac-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-mac-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-mac-24.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,11 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-mno-mac-24\" } */\n-/* Would also like to assemble and check that we get the expected\n-   \"Error: bad instruction\" assembler messages, but at the moment our\n-   testharness can't do that.  */\n-\n-int f (int i)\n-{\n-  __asm__(\"mult %1, %1, %1\" : \"=r\"(i) : \"r\"(i));\n-  return i;\n-}"}, {"sha": "68a20f4f55ac192d740031b7efcbad2f79e44f4b", "filename": "gcc/testsuite/gcc.target/arc/mno-mac-d16.c", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-mac-d16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-mac-d16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-mac-d16.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,11 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-mno-mac-d16\" } */\n-/* Would also like to assemble and check that we get the expected\n-   \"Error: bad instruction\" assembler messages, but at the moment our\n-   testharness can't do that.  */\n-\n-int f (int i)\n-{\n-  __asm__(\"muldw %1, %1, %1\" : \"=r\"(i) : \"r\"(i));\n-  return i;\n-}"}, {"sha": "d74a60e935148124c2e7c8aaae33c910d530a58e", "filename": "gcc/testsuite/gcc.target/arc/mno-rtsc.c", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-rtsc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-rtsc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-rtsc.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,11 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-mno-rtsc\" } */\n-/* Would also like to assemble and check that we get the expected\n-   \"Error: bad instruction\" assembler messages, but at the moment our\n-   testharness can't do that.  */\n-\n-int f (int i)\n-{\n-  __asm__(\"rtsc %1, %1\" : \"=r\"(i) : \"r\"(i));\n-  return i;\n-}"}, {"sha": "e378b3fc9b637de601383585eff5ef401aaad7f7", "filename": "gcc/testsuite/gcc.target/arc/mno-xy.c", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-xy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-xy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmno-xy.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,10 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-mno-xy\" } */\n-/* Would also like to assemble and check that we get the expected\n-   \"Error: bad instruction\" assembler messages, but at the moment our\n-   testharness can't do that.  */\n-\n-void f (int i)\n-{\n-  __asm__(\"add x0_u0, x0_u0, %0\" : :  \"r\" (i));\n-}"}, {"sha": "37f3fd8b27c4a4b0bd173117da82c24863f5270b", "filename": "gcc/testsuite/gcc.target/arc/movb-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n struct { unsigned a: 5, b: 8, c: 19; } foo;"}, {"sha": "1ac18d05e4c018675bfc71dce5117c9c77a7c570", "filename": "gcc/testsuite/gcc.target/arc/movb-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-2.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n struct { unsigned a: 23, b: 9; } foo;"}, {"sha": "34145d6cc6f249f4d3f683c9277512bc95a41a88", "filename": "gcc/testsuite/gcc.target/arc/movb-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-3.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n struct { int a: 23, b: 9; } foo;"}, {"sha": "83efad647d8dbe0f7dce377a79957240c3e1f971", "filename": "gcc/testsuite/gcc.target/arc/movb-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-4.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n struct { int a: 13, b: 19; } foo;"}, {"sha": "c8159feb6032e84cdc8b7a175bbf32e52a12d636", "filename": "gcc/testsuite/gcc.target/arc/movb-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb-5.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n struct { int a: 23, b: 9; } foo;"}, {"sha": "977a0c2fbf02b0be4537f90d49733531db23bb0a", "filename": "gcc/testsuite/gcc.target/arc/movb_cl-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb_cl-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb_cl-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb_cl-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n int"}, {"sha": "4a1484a3e4c7fabbdb0d74f4a1da83871a717326", "filename": "gcc/testsuite/gcc.target/arc/movb_cl-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb_cl-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb_cl-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovb_cl-2.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n extern void g (void);"}, {"sha": "a86d06f30b4eccaeaa733af22fc96fae7c47af64", "filename": "gcc/testsuite/gcc.target/arc/movbi_cl-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovbi_cl-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovbi_cl-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovbi_cl-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n int"}, {"sha": "9c0036c1a3a8c812e46e81c6eb211c863d0d3869", "filename": "gcc/testsuite/gcc.target/arc/movh_cl-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovh_cl-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovh_cl-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovh_cl-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n struct thing"}, {"sha": "c44ca8d2ccdec6337eb4b6d05bec77906a37dba8", "filename": "gcc/testsuite/gcc.target/arc/movl-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovl-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovl-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmovl-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -O2 -mbitops\" } */\n \n int"}, {"sha": "15cb9395dfd53014060f515e8be5d857febb26ce", "filename": "gcc/testsuite/gcc.target/arc/mrtsc.c", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmrtsc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1e0deb7840e05f759d35bff4eefda634871169/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmrtsc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmrtsc.c?ref=7b1e0deb7840e05f759d35bff4eefda634871169", "patch": "@@ -1,8 +0,0 @@\n-/* { dg-options \"-mrtsc\" } */\n-/* { dg-do assemble } */\n-\n-int f (int i)\n-{\n-  __asm__(\"rtsc %1, %1\" : \"=r\"(i) : \"r\"(i));\n-  return i;\n-}"}, {"sha": "19cb97828fbba9e1f2ba64708dc0e8e67a9e0591", "filename": "gcc/testsuite/gcc.target/arc/mspfp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmspfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmspfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmspfp.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"FPX is not an ARC HS extension\" { archs } } */\n /* { dg-options \"-O2 -mspfp\" } */\n \n float i;"}, {"sha": "8763825be0a1a63bbd93c1b3b02ab87000d2fad9", "filename": "gcc/testsuite/gcc.target/arc/mswape.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmswape.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmswape.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmswape.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-options \"-mswape\" } */\n /* { dg-do assemble } */\n+/* { dg-skip-if \"\" { arc6xx } } */\n \n int f (int i)\n {"}, {"sha": "fb8e7750c5354e37fdb8f82f20ad915cd4cd9dc5", "filename": "gcc/testsuite/gcc.target/arc/mul64.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmul64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmul64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmul64.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,5 +1,7 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mcpu=ARC600 -mmul64\" } */\n+/* { dg-skip-if \"MUL64 is ARC600 extension\" { ! { arc6xx } } } */\n+/* { dg-options \"-O2 -mmul64\" } */\n+\n #include <stdint.h>\n \n int64_t i;"}, {"sha": "57cb95b91fc11b12c28d27f520cece9882d3453e", "filename": "gcc/testsuite/gcc.target/arc/mulsi3_highpart-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmulsi3_highpart-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmulsi3_highpart-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmulsi3_highpart-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-O2 -mARC700 --save-temps\" } */\n+/* { dg-options \"-save-temps -O2\" } */\n \n #include <stdlib.h>\n \n@@ -25,4 +25,5 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"mpyhu\\[ \\t\\]\" } } */\n+/* { dg-final { scan-assembler \"mpyhu\\[ \\t\\]\" { target { arc700 } } } } */\n+/* { dg-final { scan-assembler \"mpy.u\\[ \\t\\]\" { target { { ! { arc700 } } && arcmpy } } } } */"}, {"sha": "287d96d4ee9af66c1c1c430217794bb3a2337cb7", "filename": "gcc/testsuite/gcc.target/arc/mulsi3_highpart-2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmulsi3_highpart-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmulsi3_highpart-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmulsi3_highpart-2.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,5 +1,7 @@\n /* { dg-do run } */\n-/* { dg-options \"-O2 -mARC700 --save-temps -mno-mpy\" } */\n+/* { dg-skip-if \"ARC700 always has mpy option on\" { arc700 } } */\n+/* { dg-skip-if \"ARC600 doesn't have mpy instruction\" { arc6xx } } */\n+/* { dg-options \"-O2 --save-temps -mmpy-option=0\" } */\n \n #include <stdlib.h>\n "}, {"sha": "61f07b53aacefc96bcf155eee84a2f105a1532ad", "filename": "gcc/testsuite/gcc.target/arc/no-dpfp-lrsr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fno-dpfp-lrsr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fno-dpfp-lrsr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fno-dpfp-lrsr.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"FPX cannot execute on ARC HS\" { archs } } */\n /* { dg-options \"-O2 -mdpfp -mno-dpfp-lrsr\" } */\n \n double i;"}, {"sha": "504aad734ccba8ec78a595c84ca1ee4cad702cbc", "filename": "gcc/testsuite/gcc.target/arc/nps400-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fnps400-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fnps400-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fnps400-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mcpu=nps400 -mq-class -mbitops -munaligned-access -mcmem -O2 -fno-strict-aliasing\" } */\n \n enum npsdp_mem_space_type {"}, {"sha": "8ea5711c6ee418fd88bd8ddd81bb391160c715ce", "filename": "gcc/testsuite/gcc.target/arc/trsub.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Ftrsub.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Ftrsub.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Ftrsub.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -1,6 +1,7 @@\n /* Tests if we generate rsub instructions when compiling using\n    floating point assist instructions.  */\n /* { dg-do compile } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n /* { dg-options \"-mfpu=fpuda -mcpu=arcem\" } */\n \n double foo (double a)"}, {"sha": "4a35d122ade4825164956684c462ae3004220a9a", "filename": "gcc/testsuite/gcc.target/arc/va_args-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fva_args-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fva_args-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fva_args-1.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-additional-sources \"abitest.S\" } */\n+\n+extern long tsyscall (long int sysnum, ...);\n+\n+int main (void)\n+{\n+  long a;\n+\n+  a = tsyscall (1, 2, 3, 4, 5, 6, 7);\n+\n+  if (a != 28)\n+    return 1;\n+  return 0;\n+}"}, {"sha": "18f48b030b0493484dde89b8cd9577132afa888d", "filename": "gcc/testsuite/gcc.target/arc/va_args-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fva_args-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fva_args-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fva_args-2.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-additional-sources \"abitest.S\" } */\n+\n+extern int clone(int (*fn)(void *), void *child_stack,\n+\t\t int flags, void *arg, ...);\n+\n+int main (void)\n+{\n+  int a = clone ((void *) 1, (void *)2, 3, (void *) 4, 5, 6, 7);\n+  if (a != 28)\n+    return 1;\n+  return 0;\n+}"}, {"sha": "45624c153c67fab806867aade1bbab91062d01d3", "filename": "gcc/testsuite/gcc.target/arc/va_args-3.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fva_args-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c867c39d8ae911e8d4c96333e7dc610837bf414e/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fva_args-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fva_args-3.c?ref=c867c39d8ae911e8d4c96333e7dc610837bf414e", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-additional-sources \"abitest.S\" } */\n+\n+extern long long abidi (int a, ...);\n+\n+int main (void)\n+{\n+  long long a = 1;\n+  a = abidi (10, a);\n+\n+  if (a != 2)\n+    return 1;\n+  return 0;\n+}"}]}