{"sha": "49419c8f9ec568675219effb77a6fc2bdb586e65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk0MTljOGY5ZWM1Njg2NzUyMTllZmZiNzdhNmZjMmJkYjU4NmU2NQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-07-17T09:39:37Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-07-17T09:39:37Z"}, "message": "contrib.texi, [...]: Update references to C9X.\n\n\t* contrib.texi, cpp.texi, extend.texi, invoke.texi: Update\n\treferences to C9X.  Change references to -fstd and -flang-isoc9x\n\tto refer to -std.\n\nFrom-SVN: r35087", "tree": {"sha": "59b58dd0bf930ac69067cb97c45d2dc8473443e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59b58dd0bf930ac69067cb97c45d2dc8473443e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49419c8f9ec568675219effb77a6fc2bdb586e65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49419c8f9ec568675219effb77a6fc2bdb586e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49419c8f9ec568675219effb77a6fc2bdb586e65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49419c8f9ec568675219effb77a6fc2bdb586e65/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e256b8b6ec617f79556073d1e563dc5bc4d1807b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e256b8b6ec617f79556073d1e563dc5bc4d1807b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e256b8b6ec617f79556073d1e563dc5bc4d1807b"}], "stats": {"total": 64, "additions": 41, "deletions": 23}, "files": [{"sha": "2c05057a0b2b1ae82fc255af50e89e329bf928b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49419c8f9ec568675219effb77a6fc2bdb586e65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49419c8f9ec568675219effb77a6fc2bdb586e65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49419c8f9ec568675219effb77a6fc2bdb586e65", "patch": "@@ -28,6 +28,10 @@ Mon Jul 17 02:37:06 2000  Marc Espie <espie@openbsd.org>\n \n 2000-07-17  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n+\t* contrib.texi, cpp.texi, extend.texi, invoke.texi: Update\n+\treferences to C9X.  Change references to -fstd and -flang-isoc9x\n+\tto refer to -std.\n+\n \t* c-common.c (scan_char_table): Allow \"z\" length modifiers on\n \tdiouxXn formats.\n \t(check_format_info): Use TYPE_DOMAIN on the type matched against"}, {"sha": "4fdcd8c4182af20aff6ae43aedadff8fd39b514d", "filename": "gcc/contrib.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49419c8f9ec568675219effb77a6fc2bdb586e65/gcc%2Fcontrib.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49419c8f9ec568675219effb77a6fc2bdb586e65/gcc%2Fcontrib.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcontrib.texi?ref=49419c8f9ec568675219effb77a6fc2bdb586e65", "patch": "@@ -86,7 +86,7 @@ that print a copy of their source.\n \n @item\n Ulrich Drepper for his work on the C++ runtime libraries, glibc, \n- testing of GCC using glibc, ISO C9X support, CFG dumping support, etc.\n+ testing of GCC using glibc, ISO C99 support, CFG dumping support, etc.\n \n @item\n Richard Earnshaw for his ongoing work with the ARM.\n@@ -321,7 +321,7 @@ David Mosberger-Tang for various Alpha improvements.\n @item\n Stephen Moshier contributed the floating point emulator that assists in\n cross-compilation and permits support for floating point numbers wider\n-than 64 bits and for ISO C9X support.\n+than 64 bits and for ISO C99 support.\n \n @item\n Bill Moyer for his behind the scenes work on various issues."}, {"sha": "0898a8bd7a350ad6dd01d6158e41e2b40ebab766", "filename": "gcc/cpp.texi", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49419c8f9ec568675219effb77a6fc2bdb586e65/gcc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49419c8f9ec568675219effb77a6fc2bdb586e65/gcc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpp.texi?ref=49419c8f9ec568675219effb77a6fc2bdb586e65", "patch": "@@ -3303,25 +3303,28 @@ added in the future.\n may be one of:\n @table @code\n @item iso9899:1990\n-The ISO C standard from 1990.\n-\n-@item iso9899:199409\n @itemx c89\n-The 1990 C standard, as amended in 1994.  @samp{c89} is the customary\n-shorthand for this version of the standard.\n+The ISO C standard from 1990.  @samp{c89} is the customary shorthand for\n+this version of the standard.\n \n The @samp{-ansi} option is equivalent to @samp{-std=c89}.\n \n-@item iso9899:199x\n+@item iso9899:199409\n+The 1990 C standard, as amended in 1994.\n+\n+@item iso9899:1999\n+@itemx c99\n+@itemx iso9899:199x\n @itemx c9x\n-The revised ISO C standard, which is expected to be promulgated some\n-time in 1999.  It has not been approved yet, hence the @samp{x}.\n+The revised ISO C standard, published in December 1999.  Before\n+publication, this was known as C9X.\n \n @item gnu89\n The 1990 C standard plus GNU extensions.  This is the default.\n \n-@item gnu9x\n-The 199x C standard plus GNU extensions.\n+@item gnu99\n+@itemx gnu9x\n+The 1999 C standard plus GNU extensions.\n @end table\n \n @item -Wp,-lint"}, {"sha": "3b8899baa6abb6800a0f56d4830d9ddd791782a4", "filename": "gcc/extend.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49419c8f9ec568675219effb77a6fc2bdb586e65/gcc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49419c8f9ec568675219effb77a6fc2bdb586e65/gcc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fextend.texi?ref=49419c8f9ec568675219effb77a6fc2bdb586e65", "patch": "@@ -3308,7 +3308,7 @@ Predefined Macros,cpp.info,The C Preprocessor}).\n * Naming Results::      Giving a name to C++ function return values.\n * Min and Max::\t\tC++ Minimum and maximum operators.\n * Volatiles::\t\tWhat constitutes an access to a volatile object.\n-* Restricted Pointers:: C9X restricted pointers and references.\n+* Restricted Pointers:: C99 restricted pointers and references.\n * C++ Interface::       You can use a single C++ header file for both\n                          declarations and definitions.\n * Template Instantiation:: Methods for ensuring that exactly one copy of\n@@ -3562,9 +3562,9 @@ an rvalue.\n @cindex restricted references\n @cindex restricted this pointer\n \n-As with gcc, g++ understands the C9X proposal of restricted pointers,\n+As with gcc, g++ understands the C99 feature of restricted pointers,\n specified with the @code{__restrict__}, or @code{__restrict} type\n-qualifier. Because you cannot compile C++ by specifying the -flang-isoc9x\n+qualifier. Because you cannot compile C++ by specifying the -std=c99\n language flag, @code{restrict} is not a keyword in C++.\n \n In addition to allowing restricted pointers, you can specify restricted"}, {"sha": "fc8b20d232864a650067e46e9fedc2dd7d7af03d", "filename": "gcc/invoke.texi", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49419c8f9ec568675219effb77a6fc2bdb586e65/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49419c8f9ec568675219effb77a6fc2bdb586e65/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=49419c8f9ec568675219effb77a6fc2bdb586e65", "patch": "@@ -96,7 +96,7 @@ in the following sections.\n @item C Language Options\n @xref{C Dialect Options,,Options Controlling C Dialect}.\n @smallexample\n--ansi -fstd  -fallow-single-precision  -fcond-mismatch  -fno-asm\n+-ansi -std  -fallow-single-precision  -fcond-mismatch  -fno-asm\n -fno-builtin  -ffreestanding  -fhosted  -fsigned-bitfields  -fsigned-char\n -funsigned-bitfields  -funsigned-char  -fwritable-strings\n -traditional  -traditional-cpp  -trigraphs -fsingle-precision-constant\n@@ -717,7 +717,7 @@ programs that might use these names for other things.\n The functions @code{alloca}, @code{abort}, @code{exit}, and\n @code{_exit} are not builtin functions when @samp{-ansi} is used.\n \n-@item -fstd=\n+@item -std=\n Determine the language standard.  A value for this option must be provided;\n possible values are \n \n@@ -728,26 +728,37 @@ Same as -ansi\n @item iso9899:199409\n ISO C as modified in amend. 1\n \n-@item iso9899:199x\n-ISO C 9x\n+@item iso9899:1999\n+ISO C99.  Note that this standard is not yet fully supported; see\n+@url{http://gcc.gnu.org/c99status.html} for more information.\n \n @item c89\n same as -std=iso9899:1990\n \n-@item c9x\n-same as -std=iso9899:199x\n+@item c99\n+same as -std=iso9899:1999\n \n @item gnu89\n default, iso9899:1990 + gnu extensions\n \n+@item gnu99\n+iso9899:1999 + gnu extensions\n+\n+@item iso9899:199x\n+same as -std=iso9899:1999, deprecated\n+\n+@item c9x\n+same as -std=iso9899:1999, deprecated\n+\n @item gnu9x\n-iso9899:199x + gnu extensions\n+same as -std=gnu99, deprecated\n+\n @end itemize\n \n Even when this option is not specified, you can still use some of the\n features of newer standards in so far as they do not conflict with\n previous C standards.  For example, you may use @code{__restrict__} even\n-when -fstd=c9x is not specified.\n+when -std=c99 is not specified.\n \n @item -fno-asm\n Do not recognize @code{asm}, @code{inline} or @code{typeof} as a"}]}