{"sha": "50270076bd7e9aaca337ab7dd944268082b25b42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAyNzAwNzZiZDdlOWFhY2EzMzdhYjdkZDk0NDI2ODA4MmIyNWI0Mg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-03-22T13:55:22Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-03-22T13:55:22Z"}, "message": "* cse.c (cse_insn): Don't change the result register of a libcall.\n\nFrom-SVN: r25898", "tree": {"sha": "045960825668bbe5af325ff84fcd9499618b32a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/045960825668bbe5af325ff84fcd9499618b32a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50270076bd7e9aaca337ab7dd944268082b25b42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50270076bd7e9aaca337ab7dd944268082b25b42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50270076bd7e9aaca337ab7dd944268082b25b42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50270076bd7e9aaca337ab7dd944268082b25b42/comments", "author": null, "committer": null, "parents": [{"sha": "ce9d4c6d80126b0d4549e80ddd92bfab017d22f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce9d4c6d80126b0d4549e80ddd92bfab017d22f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce9d4c6d80126b0d4549e80ddd92bfab017d22f4"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "00bc658356d5960bc4d353ec9644944a1299c0a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50270076bd7e9aaca337ab7dd944268082b25b42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50270076bd7e9aaca337ab7dd944268082b25b42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50270076bd7e9aaca337ab7dd944268082b25b42", "patch": "@@ -1,3 +1,7 @@\n+Mon Mar 22 21:51:57 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* cse.c (cse_insn): Don't change the result register of a libcall.\n+\n Mon Mar 22 21:08:59 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* rtl.h (shallow_copy_rtx): Declare."}, {"sha": "e632d4bd174517d4b6e0f9a366747de0fad2d86c", "filename": "gcc/cse.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50270076bd7e9aaca337ab7dd944268082b25b42/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50270076bd7e9aaca337ab7dd944268082b25b42/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=50270076bd7e9aaca337ab7dd944268082b25b42", "patch": "@@ -7802,15 +7802,20 @@ cse_insn (insn, libcall_insn)\n      then be used in the sequel and we may be changing a two-operand insn\n      into a three-operand insn.\n \n-     Also do not do this if we are operating on a copy of INSN.  */\n+     Also do not do this if we are operating on a copy of INSN.\n+\n+     Also don't do this if INSN ends a libcall; this would cause an unrelated\n+     register to be set in the middle of a libcall, and we then get bad code\n+     if the libcall is deleted.  */\n \n   if (n_sets == 1 && sets[0].rtl && GET_CODE (SET_DEST (sets[0].rtl)) == REG\n       && NEXT_INSN (PREV_INSN (insn)) == insn\n       && GET_CODE (SET_SRC (sets[0].rtl)) == REG\n       && REGNO (SET_SRC (sets[0].rtl)) >= FIRST_PSEUDO_REGISTER\n       && REGNO_QTY_VALID_P (REGNO (SET_SRC (sets[0].rtl)))\n       && (qty_first_reg[reg_qty[REGNO (SET_SRC (sets[0].rtl))]]\n-\t  == REGNO (SET_DEST (sets[0].rtl))))\n+\t  == REGNO (SET_DEST (sets[0].rtl)))\n+      && ! find_reg_note (insn, REG_RETVAL, NULL_RTX))\n     {\n       rtx prev = PREV_INSN (insn);\n       while (prev && GET_CODE (prev) == NOTE)"}]}