{"sha": "1dee318ad864c606879b7807f768f9be0d0baa1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRlZTMxOGFkODY0YzYwNjg3OWI3ODA3Zjc2OGY5YmUwZDBiYWExZA==", "commit": {"author": {"name": "Dinka Ranns", "email": "dinka.ranns@googlemail.com", "date": "2017-02-19T16:04:35Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-02-19T16:04:35Z"}, "message": "C++17 GB50 resolution (P0505R0)\n\n2017-02-19  Dinka Ranns  <dinka.ranns@googlemail.com>\n\n\tC++17 GB50 resolution\n\t* include/std/chrono (duration::operator++()): Add\n\t_GLIBCXX17_CONSTEXPR.\n\t(duration::operator++(int)): Likewise.\n\t(duration::operator--()): Likewise.\n\t(duration::operator--(int)): Likewise.\n\t(duration::operator+=(const duration&)): Likewise.\n\t(duration::operator-=(const duration&)): Likewise.\n\t(duration::operator*=(const rep&)): Likewise.\n\t(duration::operator/=(const rep&)): Likewise.\n\t(duration::operator%=(const rep&)): Likewise.\n\t(duration::operator%=(const duration&)): Likewise.\n\t(time_point::operator+=(const duration&)): Likewise.\n\t(time_point::operator-=(const duration&)): Likewise.\n\t* testsuite/20_util/duration/arithmetic/constexpr_c++17.cc: New test.\n\t* testsuite/20_util/duration/literals/range.cc: Adjust dg-error.\n\t* testsuite/20_util/time_point/arithmetic/constexpr.cc: New test.\n\nFrom-SVN: r245575", "tree": {"sha": "f0e7d06abeba92b2e38c00b72b66b62038ef1078", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0e7d06abeba92b2e38c00b72b66b62038ef1078"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dee318ad864c606879b7807f768f9be0d0baa1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dee318ad864c606879b7807f768f9be0d0baa1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dee318ad864c606879b7807f768f9be0d0baa1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dee318ad864c606879b7807f768f9be0d0baa1d/comments", "author": {"login": "LadyNina", "id": 52155854, "node_id": "MDQ6VXNlcjUyMTU1ODU0", "avatar_url": "https://avatars.githubusercontent.com/u/52155854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LadyNina", "html_url": "https://github.com/LadyNina", "followers_url": "https://api.github.com/users/LadyNina/followers", "following_url": "https://api.github.com/users/LadyNina/following{/other_user}", "gists_url": "https://api.github.com/users/LadyNina/gists{/gist_id}", "starred_url": "https://api.github.com/users/LadyNina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LadyNina/subscriptions", "organizations_url": "https://api.github.com/users/LadyNina/orgs", "repos_url": "https://api.github.com/users/LadyNina/repos", "events_url": "https://api.github.com/users/LadyNina/events{/privacy}", "received_events_url": "https://api.github.com/users/LadyNina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dfa657b5bae61a458721d079320fb82401ed58b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dfa657b5bae61a458721d079320fb82401ed58b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dfa657b5bae61a458721d079320fb82401ed58b"}], "stats": {"total": 125, "additions": 114, "deletions": 11}, "files": [{"sha": "0b02dcac602dac9816374c75514f46c9b6d2468b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dee318ad864c606879b7807f768f9be0d0baa1d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dee318ad864c606879b7807f768f9be0d0baa1d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1dee318ad864c606879b7807f768f9be0d0baa1d", "patch": "@@ -1,3 +1,23 @@\n+2017-02-19  Dinka Ranns  <dinka.ranns@googlemail.com>\n+\n+\tC++17 GB50 resolution\n+\t* include/std/chrono (duration::operator++()): Add\n+\t_GLIBCXX17_CONSTEXPR.\n+\t(duration::operator++(int)): Likewise.\n+\t(duration::operator--()): Likewise.\n+\t(duration::operator--(int)): Likewise.\n+\t(duration::operator+=(const duration&)): Likewise.\n+\t(duration::operator-=(const duration&)): Likewise.\n+\t(duration::operator*=(const rep&)): Likewise.\n+\t(duration::operator/=(const rep&)): Likewise.\n+\t(duration::operator%=(const rep&)): Likewise.\n+\t(duration::operator%=(const duration&)): Likewise.\n+\t(time_point::operator+=(const duration&)): Likewise.\n+\t(time_point::operator-=(const duration&)): Likewise.\n+\t* testsuite/20_util/duration/arithmetic/constexpr_c++17.cc: New test.\n+\t* testsuite/20_util/duration/literals/range.cc: Adjust dg-error.\n+\t* testsuite/20_util/time_point/arithmetic/constexpr.cc: New test.\n+\n 2017-02-19  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/xml/manual/debug.xml: Adjust link to ThreadSanitizer."}, {"sha": "b3dc430b67acc11db71ea1eddcf287de87794a4e", "filename": "libstdc++-v3/include/std/chrono", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dee318ad864c606879b7807f768f9be0d0baa1d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dee318ad864c606879b7807f768f9be0d0baa1d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono?ref=1dee318ad864c606879b7807f768f9be0d0baa1d", "patch": "@@ -349,50 +349,50 @@ _GLIBCXX_END_NAMESPACE_VERSION\n \toperator-() const\n \t{ return duration(-__r); }\n \n-\tduration&\n+\t_GLIBCXX17_CONSTEXPR duration&\n \toperator++()\n \t{\n \t  ++__r;\n \t  return *this;\n \t}\n \n-\tduration\n+\t_GLIBCXX17_CONSTEXPR duration\n \toperator++(int)\n \t{ return duration(__r++); }\n \n-\tduration&\n+\t_GLIBCXX17_CONSTEXPR duration&\n \toperator--()\n \t{\n \t  --__r;\n \t  return *this;\n \t}\n \n-\tduration\n+\t_GLIBCXX17_CONSTEXPR duration\n \toperator--(int)\n \t{ return duration(__r--); }\n \n-\tduration&\n+\t_GLIBCXX17_CONSTEXPR duration&\n \toperator+=(const duration& __d)\n \t{\n \t  __r += __d.count();\n \t  return *this;\n \t}\n \n-\tduration&\n+\t_GLIBCXX17_CONSTEXPR duration&\n \toperator-=(const duration& __d)\n \t{\n \t  __r -= __d.count();\n \t  return *this;\n \t}\n \n-\tduration&\n+\t_GLIBCXX17_CONSTEXPR duration&\n \toperator*=(const rep& __rhs)\n \t{\n \t  __r *= __rhs;\n \t  return *this;\n \t}\n \n-\tduration&\n+\t_GLIBCXX17_CONSTEXPR duration&\n \toperator/=(const rep& __rhs)\n \t{\n \t  __r /= __rhs;\n@@ -401,6 +401,7 @@ _GLIBCXX_END_NAMESPACE_VERSION\n \n \t// DR 934.\n \ttemplate<typename _Rep2 = rep>\n+\t  _GLIBCXX17_CONSTEXPR\n \t  typename enable_if<!treat_as_floating_point<_Rep2>::value,\n \t\t\t     duration&>::type\n \t  operator%=(const rep& __rhs)\n@@ -410,6 +411,7 @@ _GLIBCXX_END_NAMESPACE_VERSION\n \t  }\n \n \ttemplate<typename _Rep2 = rep>\n+\t  _GLIBCXX17_CONSTEXPR\n \t  typename enable_if<!treat_as_floating_point<_Rep2>::value,\n \t\t\t     duration&>::type\n \t  operator%=(const duration& __d)\n@@ -631,14 +633,14 @@ _GLIBCXX_END_NAMESPACE_VERSION\n \t{ return __d; }\n \n \t// arithmetic\n-\ttime_point&\n+\t_GLIBCXX17_CONSTEXPR time_point&\n \toperator+=(const duration& __dur)\n \t{\n \t  __d += __dur;\n \t  return *this;\n \t}\n \n-\ttime_point&\n+\t_GLIBCXX17_CONSTEXPR time_point&\n \toperator-=(const duration& __dur)\n \t{\n \t  __d -= __dur;"}, {"sha": "2721765ea7599f762a7ee4c3207bec39e8321fe3", "filename": "libstdc++-v3/testsuite/20_util/duration/arithmetic/constexpr_c++17.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dee318ad864c606879b7807f768f9be0d0baa1d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2Fconstexpr_c%2B%2B17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dee318ad864c606879b7807f768f9be0d0baa1d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2Fconstexpr_c%2B%2B17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2Fconstexpr_c%2B%2B17.cc?ref=1dee318ad864c606879b7807f768f9be0d0baa1d", "patch": "@@ -0,0 +1,45 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++1z } }\n+\n+// Copyright (C) 2011-2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <chrono>\n+#include <testsuite_common_types.h>\n+constexpr auto test_operators()\n+{\n+  std::chrono::nanoseconds d1 { 1 };\n+  d1++;\n+  ++d1;\n+  d1--;\n+  --d1;\n+\n+  auto d2(d1);\n+\n+  d1+=d2;\n+  d1-=d2;\n+\n+  d1*=1;\n+  d1/=1;\n+  d1%=1;\n+  d1%=d2;\n+\n+  return d1;\n+}\n+\n+constexpr auto d4 = test_operators();\n+"}, {"sha": "c0d1a6e588560b849d768d8df77363fa720c9bbd", "filename": "libstdc++-v3/testsuite/20_util/duration/literals/range.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dee318ad864c606879b7807f768f9be0d0baa1d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Frange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dee318ad864c606879b7807f768f9be0d0baa1d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Frange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Frange.cc?ref=1dee318ad864c606879b7807f768f9be0d0baa1d", "patch": "@@ -26,6 +26,6 @@ test01()\n \n   // std::numeric_limits<int64_t>::max() == 9223372036854775807;\n   auto h = 9223372036854775808h;\n-  // { dg-error \"cannot be represented\" \"\" { target *-*-* } 890 }\n+  // { dg-error \"cannot be represented\" \"\" { target *-*-* } 892 }\n }\n // { dg-prune-output \"in constexpr expansion\" } // needed for -O0"}, {"sha": "2f2acebccf1f54473c33ccc3fb44e94bbdc13804", "filename": "libstdc++-v3/testsuite/20_util/time_point/arithmetic/constexpr.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dee318ad864c606879b7807f768f9be0d0baa1d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Farithmetic%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dee318ad864c606879b7807f768f9be0d0baa1d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Farithmetic%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Farithmetic%2Fconstexpr.cc?ref=1dee318ad864c606879b7807f768f9be0d0baa1d", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++1z } }\n+\n+// Copyright (C) 2011-2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <chrono>\n+#include <testsuite_common_types.h>\n+constexpr auto test_operators()\n+{\n+  using namespace std::chrono;\n+  nanoseconds d1 { };\n+  time_point<system_clock> c1 { };\n+\n+  c1+=d1;\n+  c1-=d1;\n+\n+\n+  return 11;\n+}\n+\n+constexpr auto a = test_operators();"}]}