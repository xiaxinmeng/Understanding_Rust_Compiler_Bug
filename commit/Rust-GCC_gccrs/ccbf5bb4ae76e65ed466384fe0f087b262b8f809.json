{"sha": "ccbf5bb4ae76e65ed466384fe0f087b262b8f809", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NiZjViYjRhZTc2ZTY1ZWQ0NjYzODRmZTBmMDg3YjI2MmI4ZjgwOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-06-27T10:31:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-06-27T10:31:30Z"}, "message": "re PR middle-end/49536 (latent bug with creation of vector of arrays)\n\n2011-06-27  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/49536\n\t* tree-vect-stmts.c (get_vectype_for_scalar_type_and_size):\n\tFor non-scalar inner types use a scalar type according to\n\tthe scalar inner mode.\n\nFrom-SVN: r175475", "tree": {"sha": "b93a2eed6afa1461ac1645c9ecaa89fa8d56a13d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b93a2eed6afa1461ac1645c9ecaa89fa8d56a13d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccbf5bb4ae76e65ed466384fe0f087b262b8f809", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbf5bb4ae76e65ed466384fe0f087b262b8f809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccbf5bb4ae76e65ed466384fe0f087b262b8f809", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbf5bb4ae76e65ed466384fe0f087b262b8f809/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe4cd14b452e58fbde4525557649f769e1b4427c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe4cd14b452e58fbde4525557649f769e1b4427c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe4cd14b452e58fbde4525557649f769e1b4427c"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "b6e12f14b3a408725505f107acf0d37b287ed75d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbf5bb4ae76e65ed466384fe0f087b262b8f809/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbf5bb4ae76e65ed466384fe0f087b262b8f809/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccbf5bb4ae76e65ed466384fe0f087b262b8f809", "patch": "@@ -1,3 +1,10 @@\n+2011-06-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49536\n+\t* tree-vect-stmts.c (get_vectype_for_scalar_type_and_size):\n+\tFor non-scalar inner types use a scalar type according to\n+\tthe scalar inner mode.\n+\n 2011-06-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/49365"}, {"sha": "8ac212556622f7ef11a3ecfb0f52cf879905c7f2", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbf5bb4ae76e65ed466384fe0f087b262b8f809/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbf5bb4ae76e65ed466384fe0f087b262b8f809/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=ccbf5bb4ae76e65ed466384fe0f087b262b8f809", "patch": "@@ -5350,6 +5350,15 @@ get_vectype_for_scalar_type_and_size (tree scalar_type, unsigned size)\n       && GET_MODE_CLASS (inner_mode) != MODE_FLOAT)\n     return NULL_TREE;\n \n+  /* We shouldn't end up building VECTOR_TYPEs of non-scalar components.\n+     When the component mode passes the above test simply use a type\n+     corresponding to that mode.  The theory is that any use that\n+     would cause problems with this will disable vectorization anyway.  */\n+  if (!SCALAR_FLOAT_TYPE_P (scalar_type)\n+      && !INTEGRAL_TYPE_P (scalar_type)\n+      && !POINTER_TYPE_P (scalar_type))\n+    scalar_type = lang_hooks.types.type_for_mode (inner_mode, 1);\n+\n   /* If no size was supplied use the mode the target prefers.   Otherwise\n      lookup a vector mode of the specified size.  */\n   if (size == 0)"}]}