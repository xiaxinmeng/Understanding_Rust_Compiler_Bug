{"sha": "1cb8d58accf67dcaa8f9bdd07dc0467964d3fd4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNiOGQ1OGFjY2Y2N2RjYWE4ZjliZGQwN2RjMDQ2Nzk2NGQzZmQ0ZQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2000-02-23T19:08:51Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2000-02-23T19:08:51Z"}, "message": "(arm_comp_type_attributes): Simply and comment tests on type attributes.\n\nFrom-SVN: r32120", "tree": {"sha": "2d45c0e867cce2d22d25c29a8e552176d63eb830", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d45c0e867cce2d22d25c29a8e552176d63eb830"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cb8d58accf67dcaa8f9bdd07dc0467964d3fd4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cb8d58accf67dcaa8f9bdd07dc0467964d3fd4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cb8d58accf67dcaa8f9bdd07dc0467964d3fd4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cb8d58accf67dcaa8f9bdd07dc0467964d3fd4e/comments", "author": null, "committer": null, "parents": [{"sha": "211365c22c6f76bb6784719ddf4c4a4c422422c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/211365c22c6f76bb6784719ddf4c4a4c422422c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/211365c22c6f76bb6784719ddf4c4a4c422422c9"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "4b288ca7cbfa27a6efac783740bdd3d1575d6033", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb8d58accf67dcaa8f9bdd07dc0467964d3fd4e/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb8d58accf67dcaa8f9bdd07dc0467964d3fd4e/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=1cb8d58accf67dcaa8f9bdd07dc0467964d3fd4e", "patch": "@@ -1641,23 +1641,23 @@ arm_comp_type_attributes (type1, type2)\n      tree type1;\n      tree type2;\n {\n-  tree l1, l2, s1, s2;\n+  int l1, l2, s1, s2;\n   \n   /* Check for mismatch of non-default calling convention.  */\n   if (TREE_CODE (type1) != FUNCTION_TYPE)\n     return 1;\n \n   /* Check for mismatched call attributes.  */\n-  l1 = lookup_attribute (\"long_call\", TYPE_ATTRIBUTES (type1));\n-  l2 = lookup_attribute (\"long_call\", TYPE_ATTRIBUTES (type2));\n-  s1 = lookup_attribute (\"short_call\", TYPE_ATTRIBUTES (type1));\n-  s2 = lookup_attribute (\"short_call\", TYPE_ATTRIBUTES (type2));\n+  l1 = lookup_attribute (\"long_call\", TYPE_ATTRIBUTES (type1)) != NULL;\n+  l2 = lookup_attribute (\"long_call\", TYPE_ATTRIBUTES (type2)) != NULL;\n+  s1 = lookup_attribute (\"short_call\", TYPE_ATTRIBUTES (type1)) != NULL;\n+  s2 = lookup_attribute (\"short_call\", TYPE_ATTRIBUTES (type2)) != NULL;\n \n   /* Only bother to check if an attribute is defined.  */\n   if (l1 | l2 | s1 | s2)\n     {\n       /* If one type has an attribute, the other must have the same attribute.  */\n-      if ((!l1 != !l2) || (!s1 != !s2))\n+      if ((l1 != l2) || (s1 != s2))\n \treturn 0;\n \n       /* Disallow mixed attributes.  */"}]}