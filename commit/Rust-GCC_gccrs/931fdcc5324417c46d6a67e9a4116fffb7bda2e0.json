{"sha": "931fdcc5324417c46d6a67e9a4116fffb7bda2e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMxZmRjYzUzMjQ0MTdjNDZkNmE2N2U5YTQxMTZmZmZiN2JkYTJlMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-06-08T19:22:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-06-08T20:22:02Z"}, "message": "Add missing ChangeLog entries", "tree": {"sha": "929b415dd07904af8866d8338eb0a9092e6e75ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/929b415dd07904af8866d8338eb0a9092e6e75ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/931fdcc5324417c46d6a67e9a4116fffb7bda2e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/931fdcc5324417c46d6a67e9a4116fffb7bda2e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/931fdcc5324417c46d6a67e9a4116fffb7bda2e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/931fdcc5324417c46d6a67e9a4116fffb7bda2e0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "187da2ce31f13b2f75d5bb780e30ee364ead9d1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187da2ce31f13b2f75d5bb780e30ee364ead9d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/187da2ce31f13b2f75d5bb780e30ee364ead9d1d"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "db2aedb29701935fafe7f480c4270cd45e1ac66c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/931fdcc5324417c46d6a67e9a4116fffb7bda2e0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/931fdcc5324417c46d6a67e9a4116fffb7bda2e0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=931fdcc5324417c46d6a67e9a4116fffb7bda2e0", "patch": "@@ -208,6 +208,7 @@\n \n 2020-05-27  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/95242\n \t* call.c (build_new_op_1): Suppress\n \twarn_zero_as_null_pointer_constant across comparison of <=> result\n \tto 0.\n@@ -238,6 +239,37 @@\n \t<case TEMPLATE_ID_EXPR>: Don't evaluate the concept when\n \tconstexpr evaluation is uid-sensitive.\n \n+2020-05-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-gimplify.c (cp_gimplify_expr) [CALL_EXPR]: Don't preevaluate\n+\tthe function address if the call used operator syntax.\n+\n+2020-05-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/95221\n+\t* cp-ubsan.c (cp_ubsan_maybe_instrument_member_call): For a virtual\n+\tcall, instrument the OBJ_TYPE_REF.\n+\n+\t* decl.c (compute_array_index_type_loc): Diagnose expressions\n+\tin a template that can't be constant.\n+\t* parser.c (cp_parser_direct_declarator): Don't check\n+\tnon-constant array bounds here.\n+\n+\t* cp-tree.h (is_rvalue_constant_expression): Declare.\n+\t* constexpr.c (is_rvalue_constant_expression): New.\n+\t* parser.c (cp_parser_constant_expression): Use it.\n+\t* decl.c (cp_finish_decl): Try to treat a constexpr initializer in a\n+\ttemplate as constant.\n+\n+\t* typeck.c (build_x_modify_expr): Handle error_mark_node arguments.\n+\n+\t* decl.c (grokparms): Return NULL_TREE if any parms were erroneous.\n+\n+2020-05-21  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* coroutines.cc (finish_co_return_stmt): Revert change to use\n+\tfinish_expr_stmt.\n+\n 2020-05-21  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/94038"}]}