{"sha": "4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVhZjU5OTZhZDNiNzYxYmZiMmFiZDZkNjVmNzhiNDNjNGY5YTRlNQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-04-09T04:13:27Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-04-09T04:13:27Z"}, "message": "Makefile.in: Rebuilt.\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (awt_java_source_files): Added new files.\n\t* java/awt/IllegalComponentStateException.java: New file.\n\t* java/awt/ItemSelectable.java: New file.\n\t* java/awt/event/WindowEvent.java: Finished.\n\t* java/awt/event/TextEvent.java: Finished.\n\t* java/awt/event/ContainerEvent.java: New file.\n\t* java/awt/Component.java (getX, getY): New methods.\n\t* java/awt/event/PaintEvent.java: New file.\n\t* java/awt/event/MouseEvent.java: New file.\n\t* java/awt/ActiveEvent.java: New file.\n\t* java/awt/event/KeyEvent.java: Finished.\n\t* java/awt/event/ItemEvent.java: New file.\n\t* java/awt/Adjustable.java: New file.\n\t* java/awt/event/InputMethodEvent.java: New file.\n\t* java/awt/event/InputEvent.java: Finished.\n\t* java/awt/event/FocusEvent.java: New file.\n\t* java/awt/event/MouseMotionAdapter.java: New file.\n\t* java/awt/event/MouseAdapter.java: New file.\n\t* java/awt/event/KeyAdapter.java: New file.\n\t* java/awt/event/FocusAdapter.java: New file.\n\t* java/awt/event/ContainerAdapter.java: New file.\n\t* java/awt/event/ComponentEvent.java: Finished.\n\t* java/awt/event/AdjustmentEvent.java: New file.\n\t* java/awt/event/ComponentAdapter.java: New file.\n\t* java/awt/event/ActionEvent.java: Finished.\n\t* java/awt/event/MouseMotionListener.java: New file.\n\t* java/awt/event/MouseListener.java: New file.\n\t* java/awt/event/ItemListener.java: New file.\n\t* java/awt/event/InputMethodListener.java: New file.\n\t* java/awt/event/ContainerListener.java: New file.\n\t* java/awt/event/FocusListener.java: New file.\n\t* java/awt/event/ComponentListener.java: New file.\n\t* java/awt/event/AWTEventListener.java: New file.\n\t* java/awt/event/AdjustmentListener.java: New file.\n\nFrom-SVN: r33034", "tree": {"sha": "1e2e281864fa888859e506a2a5927e991dbce865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e2e281864fa888859e506a2a5927e991dbce865"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/comments", "author": null, "committer": null, "parents": [{"sha": "3bd835f73ff668e5214eb8be402781d594ea93dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bd835f73ff668e5214eb8be402781d594ea93dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bd835f73ff668e5214eb8be402781d594ea93dc"}], "stats": {"total": 1695, "additions": 1617, "deletions": 78}, "files": [{"sha": "9040d6d17a27e740557f09d50b31bfb2b8b0fb34", "filename": "libjava/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -1,3 +1,41 @@\n+2000-04-08  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (awt_java_source_files): Added new files.\n+\t* java/awt/IllegalComponentStateException.java: New file.\n+\t* java/awt/ItemSelectable.java: New file.\n+\t* java/awt/event/WindowEvent.java: Finished.\n+\t* java/awt/event/TextEvent.java: Finished.\n+\t* java/awt/event/ContainerEvent.java: New file.\n+\t* java/awt/Component.java (getX, getY): New methods.\n+\t* java/awt/event/PaintEvent.java: New file.\n+\t* java/awt/event/MouseEvent.java: New file.\n+\t* java/awt/ActiveEvent.java: New file.\n+\t* java/awt/event/KeyEvent.java: Finished.\n+\t* java/awt/event/ItemEvent.java: New file.\n+\t* java/awt/Adjustable.java: New file.\n+\t* java/awt/event/InputMethodEvent.java: New file.\n+\t* java/awt/event/InputEvent.java: Finished.\n+\t* java/awt/event/FocusEvent.java: New file.\n+\t* java/awt/event/MouseMotionAdapter.java: New file.\n+\t* java/awt/event/MouseAdapter.java: New file.\n+\t* java/awt/event/KeyAdapter.java: New file.\n+\t* java/awt/event/FocusAdapter.java: New file.\n+\t* java/awt/event/ContainerAdapter.java: New file.\n+\t* java/awt/event/ComponentEvent.java: Finished.\n+\t* java/awt/event/AdjustmentEvent.java: New file.\n+\t* java/awt/event/ComponentAdapter.java: New file.\n+\t* java/awt/event/ActionEvent.java: Finished.\n+\t* java/awt/event/MouseMotionListener.java: New file.\n+\t* java/awt/event/MouseListener.java: New file.\n+\t* java/awt/event/ItemListener.java: New file.\n+\t* java/awt/event/InputMethodListener.java: New file.\n+\t* java/awt/event/ContainerListener.java: New file.\n+\t* java/awt/event/FocusListener.java: New file.\n+\t* java/awt/event/ComponentListener.java: New file.\n+\t* java/awt/event/AWTEventListener.java: New file.\n+\t* java/awt/event/AdjustmentListener.java: New file.\n+\n 2000-04-08  Anthony Green  <green@cygnus.com>\n \n \t* java/lang/natObject.cc (_Jv_MonitorEnter): Only perform null"}, {"sha": "9e75ff6e19196a274e8681a174b3e13a1246f494", "filename": "libjava/Makefile.am", "status": "modified", "additions": 38, "deletions": 10, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -488,49 +488,77 @@ gnu/gcj/convert/UnicodeToBytes.java\n ## hand.\n special_java_source_files = java/lang/Class.java java/lang/Object.java\n \n-awt_java_source_files = \\\n+awt_java_source_files =\t\\\n+java/awt/AWTError.java \\\n java/awt/AWTEvent.java \\\n java/awt/AWTException.java \\\n+java/awt/ActiveEvent.java \\\n+java/awt/Adjustable.java \\\n java/awt/BorderLayout.java \\\n-java/awt/Component.java \\\n java/awt/Color.java \\\n-java/awt/Container.java \\\n-java/awt/Dimension.java \\\n+java/awt/Component.java\t\\\n+java/awt/Container.java\t\\\n+java/awt/Dimension.java\t\\\n java/awt/Event.java \\\n java/awt/Font.java \\\n java/awt/Frame.java \\\n java/awt/Graphics.java \\\n+java/awt/IllegalComponentStateException.java \\\n java/awt/Image.java \\\n+java/awt/ItemSelectable.java \\\n java/awt/LayoutManager.java \\\n java/awt/LayoutManager2.java \\\n java/awt/Menu.java \\\n java/awt/MenuBar.java \\\n-java/awt/MenuItem.java \\\n java/awt/MenuComponent.java \\\n java/awt/MenuContainer.java \\\n+java/awt/MenuItem.java \\\n java/awt/Paint.java \\\n java/awt/PaintContext.java \\\n java/awt/Point.java \\\n-java/awt/Rectangle.java \\\n+java/awt/Rectangle.java\t\\\n java/awt/Shape.java \\\n java/awt/TextArea.java \\\n java/awt/TextComponent.java \\\n java/awt/Toolkit.java \\\n java/awt/Transparency.java \\\n java/awt/Window.java \\\n-java/awt/event/ActionEvent.java \\\n+java/awt/event/AWTEventListener.java \\\n+java/awt/event/ActionEvent.java\t\\\n java/awt/event/ActionListener.java \\\n+java/awt/event/AdjustmentEvent.java \\\n+java/awt/event/AdjustmentListener.java \\\n+java/awt/event/ComponentAdapter.java \\\n java/awt/event/ComponentEvent.java \\\n+java/awt/event/ComponentListener.java \\\n+java/awt/event/ContainerAdapter.java \\\n+java/awt/event/ContainerEvent.java \\\n+java/awt/event/ContainerListener.java \\\n+java/awt/event/FocusAdapter.java \\\n+java/awt/event/FocusEvent.java \\\n+java/awt/event/FocusListener.java \\\n java/awt/event/InputEvent.java \\\n+java/awt/event/InputMethodEvent.java \\\n+java/awt/event/InputMethodListener.java\t\\\n+java/awt/event/InvocationEvent.java \\\n+java/awt/event/ItemEvent.java \\\n+java/awt/event/ItemListener.java \\\n+java/awt/event/KeyAdapter.java \\\n java/awt/event/KeyEvent.java \\\n-java/awt/event/KeyListener.java \\\n+java/awt/event/KeyListener.java\t\\\n+java/awt/event/MouseAdapter.java \\\n+java/awt/event/MouseEvent.java \\\n+java/awt/event/MouseListener.java \\\n+java/awt/event/MouseMotionAdapter.java \\\n+java/awt/event/MouseMotionListener.java\t\\\n+java/awt/event/PaintEvent.java \\\n java/awt/event/TextEvent.java \\\n java/awt/event/TextListener.java \\\n java/awt/event/WindowAdapter.java \\\n-java/awt/event/WindowEvent.java \\\n+java/awt/event/WindowEvent.java\t\\\n java/awt/event/WindowListener.java \\\n-java/awt/geom/Point2D.java \\\n java/awt/geom/Dimension2D.java \\\n+java/awt/geom/Point2D.java \\\n java/awt/peer/ComponentPeer.java \\\n java/awt/peer/ContainerPeer.java \\\n java/awt/peer/FramePeer.java \\"}, {"sha": "d5aa6e3a0a3f39a736db49611fe4716d850136e6", "filename": "libjava/Makefile.in", "status": "modified", "additions": 123, "deletions": 40, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -298,48 +298,76 @@ gnu/gcj/convert/UnicodeToBytes.java\n special_java_source_files = java/lang/Class.java java/lang/Object.java\n \n awt_java_source_files = \\\n+java/awt/AWTError.java \\\n java/awt/AWTEvent.java \\\n java/awt/AWTException.java \\\n+java/awt/ActiveEvent.java \\\n+java/awt/Adjustable.java \\\n java/awt/BorderLayout.java \\\n-java/awt/Component.java \\\n java/awt/Color.java \\\n-java/awt/Container.java \\\n-java/awt/Dimension.java \\\n+java/awt/Component.java\t\\\n+java/awt/Container.java\t\\\n+java/awt/Dimension.java\t\\\n java/awt/Event.java \\\n java/awt/Font.java \\\n java/awt/Frame.java \\\n java/awt/Graphics.java \\\n+java/awt/IllegalComponentStateException.java \\\n java/awt/Image.java \\\n+java/awt/ItemSelectable.java \\\n java/awt/LayoutManager.java \\\n java/awt/LayoutManager2.java \\\n java/awt/Menu.java \\\n java/awt/MenuBar.java \\\n-java/awt/MenuItem.java \\\n java/awt/MenuComponent.java \\\n java/awt/MenuContainer.java \\\n+java/awt/MenuItem.java \\\n java/awt/Paint.java \\\n java/awt/PaintContext.java \\\n java/awt/Point.java \\\n-java/awt/Rectangle.java \\\n+java/awt/Rectangle.java\t\\\n java/awt/Shape.java \\\n java/awt/TextArea.java \\\n java/awt/TextComponent.java \\\n java/awt/Toolkit.java \\\n java/awt/Transparency.java \\\n java/awt/Window.java \\\n-java/awt/event/ActionEvent.java \\\n+java/awt/event/AWTEventListener.java \\\n+java/awt/event/ActionEvent.java\t\\\n java/awt/event/ActionListener.java \\\n+java/awt/event/AdjustmentEvent.java \\\n+java/awt/event/AdjustmentListener.java \\\n+java/awt/event/ComponentAdapter.java \\\n java/awt/event/ComponentEvent.java \\\n+java/awt/event/ComponentListener.java \\\n+java/awt/event/ContainerAdapter.java \\\n+java/awt/event/ContainerEvent.java \\\n+java/awt/event/ContainerListener.java \\\n+java/awt/event/FocusAdapter.java \\\n+java/awt/event/FocusEvent.java \\\n+java/awt/event/FocusListener.java \\\n java/awt/event/InputEvent.java \\\n+java/awt/event/InputMethodEvent.java \\\n+java/awt/event/InputMethodListener.java\t\\\n+java/awt/event/InvocationEvent.java \\\n+java/awt/event/ItemEvent.java \\\n+java/awt/event/ItemListener.java \\\n+java/awt/event/KeyAdapter.java \\\n java/awt/event/KeyEvent.java \\\n-java/awt/event/KeyListener.java \\\n+java/awt/event/KeyListener.java\t\\\n+java/awt/event/MouseAdapter.java \\\n+java/awt/event/MouseEvent.java \\\n+java/awt/event/MouseListener.java \\\n+java/awt/event/MouseMotionAdapter.java \\\n+java/awt/event/MouseMotionListener.java\t\\\n+java/awt/event/PaintEvent.java \\\n java/awt/event/TextEvent.java \\\n java/awt/event/TextListener.java \\\n java/awt/event/WindowAdapter.java \\\n-java/awt/event/WindowEvent.java \\\n+java/awt/event/WindowEvent.java\t\\\n java/awt/event/WindowListener.java \\\n-java/awt/geom/Point2D.java \\\n java/awt/geom/Dimension2D.java \\\n+java/awt/geom/Point2D.java \\\n java/awt/peer/ComponentPeer.java \\\n java/awt/peer/ContainerPeer.java \\\n java/awt/peer/FramePeer.java \\\n@@ -798,8 +826,9 @@ LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n DATA =  $(data_DATA) $(toolexeclib_DATA)\n \n DIST_COMMON =  README COPYING ChangeLog Makefile.am Makefile.in NEWS \\\n-THANKS acinclude.m4 aclocal.m4 configure configure.in \\\n-libgcj-test.spec.in libgcj.spec.in\n+THANKS acconfig.h acinclude.m4 aclocal.m4 configure configure.in \\\n+include/config.h.in include/stamp-h.in libgcj-test.spec.in \\\n+libgcj.spec.in\n \n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n@@ -840,24 +869,47 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/gcj/text/SentenceBreakIterator.P \\\n .deps/gnu/gcj/text/WordBreakIterator.P \\\n .deps/gnu/gcj/util/EnumerationChain.P .deps/interpret.P \\\n-.deps/java/awt/AWTEvent.P .deps/java/awt/AWTException.P \\\n-.deps/java/awt/BorderLayout.P .deps/java/awt/Color.P \\\n-.deps/java/awt/Component.P .deps/java/awt/Container.P \\\n-.deps/java/awt/Dimension.P .deps/java/awt/Event.P .deps/java/awt/Font.P \\\n-.deps/java/awt/Frame.P .deps/java/awt/Graphics.P .deps/java/awt/Image.P \\\n-.deps/java/awt/LayoutManager.P .deps/java/awt/LayoutManager2.P \\\n-.deps/java/awt/Menu.P .deps/java/awt/MenuBar.P \\\n-.deps/java/awt/MenuComponent.P .deps/java/awt/MenuContainer.P \\\n-.deps/java/awt/MenuItem.P .deps/java/awt/Paint.P \\\n-.deps/java/awt/PaintContext.P .deps/java/awt/Point.P \\\n-.deps/java/awt/Rectangle.P .deps/java/awt/Shape.P \\\n-.deps/java/awt/TextArea.P .deps/java/awt/TextComponent.P \\\n-.deps/java/awt/Toolkit.P .deps/java/awt/Transparency.P \\\n-.deps/java/awt/Window.P .deps/java/awt/event/ActionEvent.P \\\n+.deps/java/awt/AWTError.P .deps/java/awt/AWTEvent.P \\\n+.deps/java/awt/AWTException.P .deps/java/awt/ActiveEvent.P \\\n+.deps/java/awt/Adjustable.P .deps/java/awt/BorderLayout.P \\\n+.deps/java/awt/Color.P .deps/java/awt/Component.P \\\n+.deps/java/awt/Container.P .deps/java/awt/Dimension.P \\\n+.deps/java/awt/Event.P .deps/java/awt/Font.P .deps/java/awt/Frame.P \\\n+.deps/java/awt/Graphics.P \\\n+.deps/java/awt/IllegalComponentStateException.P .deps/java/awt/Image.P \\\n+.deps/java/awt/ItemSelectable.P .deps/java/awt/LayoutManager.P \\\n+.deps/java/awt/LayoutManager2.P .deps/java/awt/Menu.P \\\n+.deps/java/awt/MenuBar.P .deps/java/awt/MenuComponent.P \\\n+.deps/java/awt/MenuContainer.P .deps/java/awt/MenuItem.P \\\n+.deps/java/awt/Paint.P .deps/java/awt/PaintContext.P \\\n+.deps/java/awt/Point.P .deps/java/awt/Rectangle.P \\\n+.deps/java/awt/Shape.P .deps/java/awt/TextArea.P \\\n+.deps/java/awt/TextComponent.P .deps/java/awt/Toolkit.P \\\n+.deps/java/awt/Transparency.P .deps/java/awt/Window.P \\\n+.deps/java/awt/event/AWTEventListener.P \\\n+.deps/java/awt/event/ActionEvent.P \\\n .deps/java/awt/event/ActionListener.P \\\n-.deps/java/awt/event/ComponentEvent.P .deps/java/awt/event/InputEvent.P \\\n+.deps/java/awt/event/AdjustmentEvent.P \\\n+.deps/java/awt/event/AdjustmentListener.P \\\n+.deps/java/awt/event/ComponentAdapter.P \\\n+.deps/java/awt/event/ComponentEvent.P \\\n+.deps/java/awt/event/ComponentListener.P \\\n+.deps/java/awt/event/ContainerAdapter.P \\\n+.deps/java/awt/event/ContainerEvent.P \\\n+.deps/java/awt/event/ContainerListener.P \\\n+.deps/java/awt/event/FocusAdapter.P .deps/java/awt/event/FocusEvent.P \\\n+.deps/java/awt/event/FocusListener.P .deps/java/awt/event/InputEvent.P \\\n+.deps/java/awt/event/InputMethodEvent.P \\\n+.deps/java/awt/event/InputMethodListener.P \\\n+.deps/java/awt/event/InvocationEvent.P .deps/java/awt/event/ItemEvent.P \\\n+.deps/java/awt/event/ItemListener.P .deps/java/awt/event/KeyAdapter.P \\\n .deps/java/awt/event/KeyEvent.P .deps/java/awt/event/KeyListener.P \\\n-.deps/java/awt/event/TextEvent.P .deps/java/awt/event/TextListener.P \\\n+.deps/java/awt/event/MouseAdapter.P .deps/java/awt/event/MouseEvent.P \\\n+.deps/java/awt/event/MouseListener.P \\\n+.deps/java/awt/event/MouseMotionAdapter.P \\\n+.deps/java/awt/event/MouseMotionListener.P \\\n+.deps/java/awt/event/PaintEvent.P .deps/java/awt/event/TextEvent.P \\\n+.deps/java/awt/event/TextListener.P \\\n .deps/java/awt/event/WindowAdapter.P .deps/java/awt/event/WindowEvent.P \\\n .deps/java/awt/event/WindowListener.P .deps/java/awt/geom/Dimension2D.P \\\n .deps/java/awt/geom/Point2D.P .deps/java/awt/peer/ComponentPeer.P \\\n@@ -1078,6 +1130,34 @@ config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \t$(SHELL) ./config.status --recheck\n $(srcdir)/configure: @MAINTAINER_MODE_TRUE@$(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)\n \tcd $(srcdir) && $(AUTOCONF)\n+\n+include/config.h: include/stamp-h\n+\t@if test ! -f $@; then \\\n+\t\trm -f include/stamp-h; \\\n+\t\t$(MAKE) include/stamp-h; \\\n+\telse :; fi\n+include/stamp-h: $(srcdir)/include/config.h.in $(top_builddir)/config.status\n+\tcd $(top_builddir) \\\n+\t  && CONFIG_FILES= CONFIG_HEADERS=include/config.h \\\n+\t     $(SHELL) ./config.status\n+\t@echo timestamp > include/stamp-h 2> /dev/null\n+$(srcdir)/include/config.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/include/stamp-h.in\n+\t@if test ! -f $@; then \\\n+\t\trm -f $(srcdir)/include/stamp-h.in; \\\n+\t\t$(MAKE) $(srcdir)/include/stamp-h.in; \\\n+\telse :; fi\n+$(srcdir)/include/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h\n+\tcd $(top_srcdir) && $(AUTOHEADER)\n+\t@echo timestamp > $(srcdir)/include/stamp-h.in 2> /dev/null\n+\n+mostlyclean-hdr:\n+\n+clean-hdr:\n+\n+distclean-hdr:\n+\t-rm -f include/config.h\n+\n+maintainer-clean-hdr:\n libgcj.spec: $(top_builddir)/config.status libgcj.spec.in\n \tcd $(top_builddir) && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status\n libgcj-test.spec: $(top_builddir)/config.status libgcj-test.spec.in\n@@ -1521,31 +1601,33 @@ distclean-generic:\n \t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n \n maintainer-clean-generic:\n-mostlyclean-am:  mostlyclean-toolexeclibLIBRARIES mostlyclean-compile \\\n-\t\tmostlyclean-libtool mostlyclean-toolexeclibLTLIBRARIES \\\n+mostlyclean-am:  mostlyclean-hdr mostlyclean-toolexeclibLIBRARIES \\\n+\t\tmostlyclean-compile mostlyclean-libtool \\\n+\t\tmostlyclean-toolexeclibLTLIBRARIES \\\n \t\tmostlyclean-binPROGRAMS mostlyclean-noinstPROGRAMS \\\n \t\tmostlyclean-tags mostlyclean-depend mostlyclean-generic\n \n mostlyclean: mostlyclean-recursive\n \n-clean-am:  clean-toolexeclibLIBRARIES clean-compile clean-libtool \\\n-\t\tclean-toolexeclibLTLIBRARIES clean-binPROGRAMS \\\n-\t\tclean-noinstPROGRAMS clean-tags clean-depend \\\n-\t\tclean-generic mostlyclean-am clean-local\n+clean-am:  clean-hdr clean-toolexeclibLIBRARIES clean-compile \\\n+\t\tclean-libtool clean-toolexeclibLTLIBRARIES \\\n+\t\tclean-binPROGRAMS clean-noinstPROGRAMS clean-tags \\\n+\t\tclean-depend clean-generic mostlyclean-am clean-local\n \n clean: clean-recursive\n \n-distclean-am:  distclean-toolexeclibLIBRARIES distclean-compile \\\n-\t\tdistclean-libtool distclean-toolexeclibLTLIBRARIES \\\n-\t\tdistclean-binPROGRAMS distclean-noinstPROGRAMS \\\n-\t\tdistclean-tags distclean-depend distclean-generic \\\n-\t\tclean-am\n+distclean-am:  distclean-hdr distclean-toolexeclibLIBRARIES \\\n+\t\tdistclean-compile distclean-libtool \\\n+\t\tdistclean-toolexeclibLTLIBRARIES distclean-binPROGRAMS \\\n+\t\tdistclean-noinstPROGRAMS distclean-tags \\\n+\t\tdistclean-depend distclean-generic clean-am\n \t-rm -f libtool\n \n distclean: distclean-recursive\n \t-rm -f config.status\n \n-maintainer-clean-am:  maintainer-clean-toolexeclibLIBRARIES \\\n+maintainer-clean-am:  maintainer-clean-hdr \\\n+\t\tmaintainer-clean-toolexeclibLIBRARIES \\\n \t\tmaintainer-clean-compile maintainer-clean-libtool \\\n \t\tmaintainer-clean-toolexeclibLTLIBRARIES \\\n \t\tmaintainer-clean-binPROGRAMS \\\n@@ -1558,7 +1640,8 @@ maintainer-clean-am:  maintainer-clean-toolexeclibLIBRARIES \\\n maintainer-clean: maintainer-clean-recursive\n \t-rm -f config.status\n \n-.PHONY: mostlyclean-toolexeclibLIBRARIES distclean-toolexeclibLIBRARIES \\\n+.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \\\n+mostlyclean-toolexeclibLIBRARIES distclean-toolexeclibLIBRARIES \\\n clean-toolexeclibLIBRARIES maintainer-clean-toolexeclibLIBRARIES \\\n uninstall-toolexeclibLIBRARIES install-toolexeclibLIBRARIES \\\n mostlyclean-compile distclean-compile clean-compile \\"}, {"sha": "f2761771664f16e30d06ea8b8818f9f887e2c08a", "filename": "libjava/java/awt/AWTError.java", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FAWTError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FAWTError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTError.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,25 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+\n+public class AWTError extends IllegalStateException\n+{\n+  public AWTError (String s)\n+  {\n+    super (s);\n+  }\n+}"}, {"sha": "bc9ea495c86eae96d8e8abcffdb4dcea6cdf893a", "filename": "libjava/java/awt/AWTEvent.java", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FAWTEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FAWTEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -15,7 +15,20 @@ public abstract class AWTEvent extends java.util.EventObject\n   protected boolean consumed;\n   protected int id;\n \n-  public int getID() { return id; }\n+  public int getID()\n+  {\n+    return id;\n+  }\n+\n+  public String paramString ()\n+  {\n+    return toString ();\n+  }\n+\n+  public String toString ()\n+  {\n+    return getClass().getName() + \"[\" + id + \"]\";\n+  }\n \n   public AWTEvent (Object source, int id)\n   {"}, {"sha": "089682e6e7eca09cd43dfd4fd14ce9ab6b241d30", "filename": "libjava/java/awt/ActiveEvent.java", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FActiveEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FActiveEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FActiveEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,21 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public interface ActiveEvent\n+{\n+  public void dispatch ();\n+}"}, {"sha": "18510fb8c255994d10870e582a462720b14fc49d", "filename": "libjava/java/awt/Adjustable.java", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FAdjustable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FAdjustable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAdjustable.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,39 @@\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+import java.awt.event.*;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public interface Adjustable\n+{\n+  static final int HORIZONTAL;\n+  static final int VERTICAL;\n+\n+  public void addAdjustmentListener (AdjustmentListener l);\n+  public int getBlockIncrement ();\n+  public int getMaximum ();\n+  public int getMinimum ();\n+  public int getOrientation ();\n+  public int getUnitIncrement ();\n+  public int getValue ();\n+  public int getVisibleAmount ();\n+  public void removeAdjustmentListener (AdjustmentListener l);\n+  public void setBlockIncrement (int b);\n+  public void setMaximum (int max);\n+  public void setMinimum (int min);\n+  public void setUnitIncrement (int u);\n+  public void setValue (int v);\n+  public void setVisibleAmount (int v);\n+}"}, {"sha": "d842910b64dc315149e66e68329476d5364f60be", "filename": "libjava/java/awt/Component.java", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -67,6 +67,16 @@ public Point getLocation ()\n     return new Point(x, y);\n   }\n \n+  public int getX ()\n+  {\n+    return x;\n+  }\n+\n+  public int getY ()\n+  {\n+    return y;\n+  }\n+\n   public Dimension getSize ()\n   {\n     return new Dimension(width, height);"}, {"sha": "ff97a576ecf8459248450aa9554344446a6a6251", "filename": "libjava/java/awt/IllegalComponentStateException.java", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FIllegalComponentStateException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FIllegalComponentStateException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FIllegalComponentStateException.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,30 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+\n+public class IllegalComponentStateException extends IllegalStateException\n+{\n+  public IllegalComponentStateException ()\n+  {\n+    super ();\n+  }\n+\n+  public IllegalComponentStateException (String s)\n+  {\n+    super (s);\n+  }\n+}"}, {"sha": "f51bb33ea5a9b6facfbf24caf314efacd47a6e72", "filename": "libjava/java/awt/ItemSelectable.java", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FItemSelectable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2FItemSelectable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FItemSelectable.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,24 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+import java.awt.event.*;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public interface ItemSelectable\n+{\n+  public void addItemListener (ItemListener l);\n+  public Object[] getSelectedObjects ();\n+  public void removeItemListener (ItemListener l);\n+}"}, {"sha": "ec9e4ffa27dcf41c9fe63261577299615c0e7c63", "filename": "libjava/java/awt/event/AWTEventListener.java", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListener.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,22 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public interface AWTEventListener extends java.util.EventListener\n+{\n+  public void eventDispatched (AWTEvent e);\n+}"}, {"sha": "de0d376d9f3fb6039a13c0356d4a10be6e979ee8", "filename": "libjava/java/awt/event/ActionEvent.java", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FActionEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FActionEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FActionEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -9,10 +9,18 @@\n package java.awt.event;\n import java.awt.*;\n \n-/* A very incomplete placeholder. */\n+/* Status: Believed complete and correct to JDK 1.2.  */\n \n public class ActionEvent extends AWTEvent\n {\n+  public static final int ACTION_FIRST = 1001;\n+  public static final int ACTION_LAST = 1001;\n+  public static final int ACTION_PERFORMED = 1001;\n+  public static final int ALT_MASK = 8;\n+  public static final int CTRL_MASK = 2;\n+  public static final int META_MASK = 4;\n+  public static final int SHIFT_MASK = 1;\n+\n   String actionCommand;\n   int modifiers;\n \n@@ -29,7 +37,19 @@ public ActionEvent (Object source, int id, String command, int modifiers)\n     this.modifiers = modifiers;\n   }\n \n-  public String getActionCommand () { return actionCommand; }\n+  public String getActionCommand ()\n+  {\n+    return actionCommand;\n+  }\n+\n+  public int getModifiers ()\n+  {\n+    return modifiers;\n+  }\n \n-  public int getModifiers () { return modifiers; }\n+  public String paramString ()\n+  {\n+    return (\"ActionEvent[\" + actionCommand + \",\" + modifiers\n+\t    + \";\" + super.paramString () + \"]\");\n+  }\n }"}, {"sha": "84838b6afec277d523188c7a31f250a2fdb4c548", "filename": "libjava/java/awt/event/AdjustmentEvent.java", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,60 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public class AdjustmentEvent extends AWTEvent\n+{\n+  public static final int ADJUSTMENT_FIRST = 601;\n+  public static final int ADJUSTMENT_LAST = 601;\n+  public static final int ADJUSTMENT_VALUE_CHANGED = 601;\n+  public static final int BLOCK_DECREMENT = 3;\n+  public static final int BLOCK_INCREMENT = 4;\n+  public static final int TRACK = 5;\n+  public static final int UNIT_DECREMENT = 2;\n+  public static final int UNIT_INCREMENT = 1;\n+\n+  public AdjustmentEvent (Adjustable source, int id, int type, int value)\n+  {\n+    super (source, id);\n+    this.type = type;\n+    this.value = value;\n+  }\n+\n+  public Adjustable getAdjustable ()\n+  {\n+    return (Adjustable) source;\n+  }\n+\n+  public int getAdjustmentType ()\n+  {\n+    return type;\n+  }\n+\n+  public int getValue ()\n+  {\n+    return value;\n+  }\n+\n+  public String paramString ()\n+  {\n+    return (\"AdjustmentEvent[\" + type + \",\" + value\n+\t    + \";\" + super.paramString () + \"]\");\n+  }\n+\n+  private int type;\n+  private int value;\n+}"}, {"sha": "1d103328c63c410e537015226393430fb9f752be", "filename": "libjava/java/awt/event/AdjustmentListener.java", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentListener.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,21 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public interface AdjustmentListener extends java.util.EventListener\n+{\n+  public void adjustmentValueChanged (AdjustmentEvent e);\n+}"}, {"sha": "0faba3d6eff4f99b865722c29c62f2637c6da811", "filename": "libjava/java/awt/event/ComponentAdapter.java", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FComponentAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FComponentAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FComponentAdapter.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,35 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public abstract class ComponentAdapter implements ComponentListener\n+{\n+  public void componentHidden (ComponentEvent e)\n+  {\n+  }\n+\n+  public void componentMoved (ComponentEvent e)\n+  {\n+  }\n+\n+  public void componentResized (ComponentEvent e)\n+  {\n+  }\n+\n+  public void componentShown (ComponentEvent e)\n+  {\n+  }\n+}"}, {"sha": "bb34a6e231e84315dd6dedccaa4be1854d87caa9", "filename": "libjava/java/awt/event/ComponentEvent.java", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FComponentEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FComponentEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FComponentEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -9,12 +9,34 @@\n package java.awt.event;\n import java.awt.*;\n \n-/* A very incomplete placeholder. */\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n \n public class ComponentEvent extends AWTEvent\n {\n-  public ComponentEvent (Object source, int id)\n+  public static final int COMPONENT_FIRST = 100;\n+  public static final int COMPONENT_HIDDEN = 103;\n+  public static final int COMPONENT_LAST = 103;\n+  public static final int COMPONENT_MOVED = 100;\n+  public static final int COMPONENT_RESIZED = 101;\n+  public static final int COMPONENT_SHOWN = 102;\n+\n+  public ComponentEvent (Component source, int id)\n   {\n     super(source, id);\n   }\n+\n+  public Component getComponent ()\n+  {\n+    return (Component) source;\n+  }\n+\n+  public String paramString ()\n+  {\n+    return super.paramString ();\n+  }\n }"}, {"sha": "3302cf2a713c53a523cd62c7e8d753ecd9572884", "filename": "libjava/java/awt/event/ComponentListener.java", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FComponentListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FComponentListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FComponentListener.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,24 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public interface ComponentListener extends java.util.EventListener\n+{\n+  public void componentHidden (ComponentEvent e);\n+  public void componentMoved (ComponentEvent e);\n+  public void componentResized (ComponentEvent e);\n+  public void componentShown (ComponentEvent e);\n+}"}, {"sha": "18c12a5f19b6bba1b9bd4415e4416b1b9c6691cf", "filename": "libjava/java/awt/event/ContainerAdapter.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FContainerAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FContainerAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FContainerAdapter.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,27 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public abstract class ContainerAdapter implements ContainerListener\n+{\n+  public void componentAdded (ContainerEvent e)\n+  {\n+  }\n+\n+  public void componentRemoved (ContainerEvent e)\n+  {\n+  }\n+}"}, {"sha": "b6621693c16e3b1f7d348268f06e8900714d506d", "filename": "libjava/java/awt/event/ContainerEvent.java", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FContainerEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FContainerEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FContainerEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,50 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public class ContainerEvent extends ComponentEvent\n+{\n+  public static final int COMPONENT_ADDED = 300;\n+  public static final int COMPONENT_REMOVED = 301;\n+  public static final int CONTAINER_FIRST = 300;\n+  public static final int CONTAINER_LAST = 301;\n+\n+  // FIXME: jdk1.2 docs say source is a Component.\n+  public ContainerEvent (Container source, int id, Component child)\n+  {\n+    super (source, id);\n+    this.child = child;\n+  }\n+\n+  public Component getChild ()\n+  {\n+    return child;\n+  }\n+\n+  public Component getContainer ()\n+  {\n+    return (Container) source;\n+  }\n+\n+  public String paramString ()\n+  {\n+    return (\"ContainerEvent[\" + child\n+\t    + \";\" + super.paramString () + \"]\");\n+  }\n+\n+  private Component child;\n+}"}, {"sha": "65acba4a75616b1489643255b11212b0dad1d04e", "filename": "libjava/java/awt/event/ContainerListener.java", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FContainerListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FContainerListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FContainerListener.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,22 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public interface ContainerListener extends java.util.EventListener\n+{\n+  public void componentAdded (ContainerEvent e);\n+  public void componentRemoved (ContainerEvent e);\n+}"}, {"sha": "f8419d92efa2a2aa2f0d77a7245abb725a95965d", "filename": "libjava/java/awt/event/FocusAdapter.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FFocusAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FFocusAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FFocusAdapter.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,27 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public abstract class FocusAdapter implements FocusListener\n+{\n+  public void focusGained (FocusEvent e)\n+  {\n+  }\n+\n+  public void focusLost (FocusEvent e)\n+  {\n+  }\n+}"}, {"sha": "9b559ea4e49f7a84cca8c30e381ec3462c522cf6", "filename": "libjava/java/awt/event/FocusEvent.java", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FFocusEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FFocusEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FFocusEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,50 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public class FocusEvent extends AWTEvent\n+{\n+  public static final int FOCUS_FIRST = 1004;\n+  public static final int FOCUS_GAINED = 1004;\n+  public static final int FOCUS_LAST = 1005;\n+  public static final int FOCUS_LOST = 1005;\n+\n+  public FocusEvent (Component source, int id)\n+  {\n+    super (source, id);\n+    this.temporary = false;\n+  }\n+\n+  public FocusEvent (Component source, int id, boolean temporary)\n+  {\n+    super (source, id);\n+    this.temporary = temporary;\n+  }\n+\n+  public boolean isTemporary ()\n+  {\n+    return temporary;\n+  }\n+\n+  public String paramString ()\n+  {\n+    return (\"FocusEvent[\" + temporary\n+\t    + \";\" + super.paramString () + \"]\");\n+  }\n+\n+  private boolean temporary;\n+}"}, {"sha": "f4167de6c016ebe1bd81d39bcd165a708f7a6029", "filename": "libjava/java/awt/event/FocusListener.java", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FFocusListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FFocusListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FFocusListener.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,22 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public interface FocusListener extends java.util.EventListener\n+{\n+  public void focusGained (FocusEvent e);\n+  public void focusLost (FocusEvent e);\n+}"}, {"sha": "2da79226316882032fcb3f52d734ccb2cc9f58a6", "filename": "libjava/java/awt/event/InputEvent.java", "status": "modified", "additions": 56, "deletions": 5, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -7,16 +7,67 @@\n details.  */\n \n package java.awt.event;\n+import java.awt.*;\n \n-/* A very incomplete placeholder. */\n+/* Status: Believed complete and correct to JDK 1.2.  */\n \n-public class InputEvent extends ComponentEvent\n+public abstract class InputEvent extends ComponentEvent\n {\n-  InputEvent (Object source, int id)  // Not public\n+  public static final int ALT_GRAPH_MASK = 32;\n+  public static final int ALT_MASK = 8;\n+  public static final int BUTTON1_MASK = 16;\n+  public static final int BUTTON2_MASK = 8;\n+  public static final int BUTTON3_MASK = 4;\n+  public static final int CTRL_MASK = 2;\n+  public static final int META_MASK = 4;\n+  public static final int SHIFT_MASK = 1;\n+\n+  InputEvent (Component source, int id)  // Not public\n   {\n     super(source, id);\n   }\n \n+  public boolean isShiftDown ()\n+  {\n+    return (modifiers & SHIFT_MASK) != 0;\n+  }\n+\n+  public boolean isControlDown ()\n+  {\n+    return (modifiers & CTRL_MASK) != 0;\n+  }\n+\n+  public boolean isMetaDown ()\n+  {\n+    return (modifiers & META_MASK) != 0;\n+  }\n+\n+  public boolean isAltDown ()\n+  {\n+    return (modifiers & ALT_MASK) != 0;\n+  }\n+\n+  public long getWhen ()\n+  {\n+    return when;\n+  }\n+\n+  public int getModifiers ()\n+  {\n+    return modifiers;\n+  }\n+\n+  public boolean isConsumed ()\n+  {\n+    return consumed;\n+  }\n+\n   public void consume ()\n-  { /* FIXME */ }\n+  {\n+    /* FIXME */\n+    consumed = true;\n+  }\n+\n+  private long when;\n+  private int modifiers;\n }"}, {"sha": "d047a739900b8fd915b929eb2b664361e27916fe", "filename": "libjava/java/awt/event/InputMethodEvent.java", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,54 @@\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/* A very incomplete placeholder. */\n+\n+public class InputMethodEvent extends AWTEvent\n+{\n+  public static final int CARET_POSITION_CHANGED = 1101;\n+  public static final int INPUT_METHOD_FIRST = 1100;\n+  public static final int INPUT_METHOD_LAST = 1101;\n+  public static final int INPUT_METHOD_TEXT_CHANGED = 1100;\n+\n+  /*\n+  public InputMethodEvent (Component source, int id,\n+\t\t\t   AttributedCharacterIterator text,\n+\t\t\t   int committedCharacterCount, TextHitInfo caret,\n+\t\t\t   TextHitInfo visiblePosition)\n+  {\n+    if (id < INPUT_METHOD_FIRST\n+\t|| id > INPUT_METHOD_LAST\n+\t|| (id == CARET_POSITION_CHANGED && text != null)\n+\t|| committedCharacterCount < 0\n+\t|| (committedCharacterCount\n+\t    > text.getEndIndex () - text.getBeginIndex ()))\n+      throw new IllegalArgumentException ();\n+  }\n+\n+  public InputMethodEvent (Component source, int id, TextHitInfo caret,\n+\t\t\t   TextHitInfo visiblePosition);\n+\n+  public void consume ();\n+  public TextHitInfo getCaret ();\n+  public int getCommittedCharacterCount ();\n+  public AttributedCharacterIterator getText ();\n+  public TextHitInfo getVisiblePosition ();\n+  public boolean isConsumed ();\n+\n+  public String paramString ();\n+  */\n+\n+  // FIXME: this is just to let it compile.\n+  private InputMethodEvent ()\n+  {\n+    super (null, -1);\n+  }\n+}"}, {"sha": "0712404af390f8bcb244b807b81c50adf6d8b71d", "filename": "libjava/java/awt/event/InputMethodListener.java", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodListener.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,22 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public interface InputMethodListener extends java.util.EventListener\n+{\n+  public void caretPositionChanged (InputMethodEvent e);\n+  public void inputMethodTextChanged (InputMethodEvent e);\n+}"}, {"sha": "522447a7722eb8c077166ee5cdaf93c65cec923a", "filename": "libjava/java/awt/event/InvocationEvent.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FInvocationEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FInvocationEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInvocationEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,84 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Still one bug.  */\n+\n+public class InvocationEvent extends AWTEvent implements ActiveEvent\n+{\n+  public static final int INVOCATION_DEFAULT = 1200;\n+  public static final int INVOCATION_FIRST = 1200;\n+  public static final int INVOCATION_LAST = 1200;\n+\n+  protected InvocationEvent (Object source, int id, Runnable runnable,\n+\t\t\t     Object notifier, boolean catchExceptions)\n+  {\n+    super (source, id);\n+    this.runnable = runnable;\n+    this.notifier = notifier;\n+    this.catchExceptions = catchExceptions;\n+  }\n+\n+  public InvocationEvent (Object source, Runnable runnable)\n+  {\n+    super (source, INVOCATION_DEFAULT);\n+    this.runnable = runnable;\n+  }\n+\n+  public InvocationEvent (Object source, Runnable runnable, Object notifier)\n+  {\n+    super (source, INVOCATION_DEFAULT);\n+    this.runnable = runnable;\n+    this.notifier = notifier;\n+  }\n+\n+  public void dispatch ()\n+  {\n+    Exception e = null;\n+    try\n+      {\n+\trunnable.run ();\n+      }\n+    catch (Exception _)\n+      {\n+\te = _;\n+      }\n+\n+    // FIXME: what to do if !catchExceptions?\n+    if (catchExceptions)\n+      exception = e;\n+\n+    if (notifier != null)\n+      notifier.notifyAll ();\n+  }\n+\n+  public Exception getException ()\n+  {\n+    return exception;\n+  }\n+\n+  public String paramString ()\n+  {\n+    return (\"InvocationEvent[\" + notifier + \",\" + runnable\n+\t    + \",\" + catchExceptions\n+\t    + \";\" + super.paramString () + \"]\");\n+  }\n+\n+  protected boolean catchExceptions;\n+  protected Object notifier;\n+  protected Runnable runnable;\n+\n+  private Exception exception;\n+}"}, {"sha": "cb36feae3b0976f954e2dff2515312dd674a74d7", "filename": "libjava/java/awt/event/ItemEvent.java", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FItemEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FItemEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FItemEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,57 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public class ItemEvent extends AWTEvent\n+{\n+  public static final int DESELECTED = 2;\n+  public static final int ITEM_FIRST = 701;\n+  public static final int ITEM_LAST = 701;\n+  public static final int ITEM_STATE_CHANGED = 701;\n+  public static final int SELECTED = 1;\n+\n+  public ItemEvent (ItemSelectable source, int id, Object item, int sc)\n+  {\n+    super (source, id);\n+    this.item = item;\n+    this.stateChange = sc;\n+  }\n+\n+  public Object getItem ()\n+  {\n+    return item;\n+  }\n+\n+  public ItemSelectable getItemSelectable ()\n+  {\n+    return (ItemSelectable) source;\n+  }\n+\n+  public int getStateChange ()\n+  {\n+    return stateChange;\n+  }\n+\n+  public String paramString ()\n+  {\n+    return (\"ItemEvent[\" + item + \",\" + stateChange\n+\t    + \";\" + super.paramString () + \"]\");\n+  }\n+\n+  private Object item;\n+  private int stateChange;\n+}"}, {"sha": "30bfcac3cab3495d2e8b44b92e2bf20a390fc14b", "filename": "libjava/java/awt/event/ItemListener.java", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FItemListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FItemListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FItemListener.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,21 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public interface ItemListener extends java.util.EventListener\n+{\n+  public void itemStateChanged (ItemEvent e);\n+}"}, {"sha": "0e1297eb80dad4ea952cf1acc6764f233bf8a9d2", "filename": "libjava/java/awt/event/KeyAdapter.java", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FKeyAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FKeyAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyAdapter.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,31 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public abstract class KeyAdapter implements KeyListener\n+{\n+  public void keyPressed (KeyEvent w)\n+  {\n+  }\n+\n+  public void keyReleased (KeyEvent w)\n+  {\n+  }\n+\n+  public void keyTyped (KeyEvent w)\n+  {\n+  }\n+}"}, {"sha": "4aadea1ca96e0d6bfacb60e42bce2785e8dfc7f0", "filename": "libjava/java/awt/event/KeyEvent.java", "status": "modified", "additions": 229, "deletions": 6, "changes": 235, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -9,23 +9,218 @@\n package java.awt.event;\n import java.awt.*;\n \n-/* A very incomplete placeholder. */\n+/* Status: still incomplete.  */\n \n public class KeyEvent extends InputEvent\n {\n-  int keyCode;\n-  char keyChar;\n-  int modifiers;\n+  public static char CHAR_UNDEFINED = 0;;\n+  public static final int KEY_FIRST = 400;\n+  public static final int KEY_LAST = 402;\n+  public static final int KEY_PRESSED = 401;\n+  public static final int KEY_RELEASED = 402;\n+  public static final int KEY_TYPED = 400;\n+  public static final int VK_0 = 48;\n+  public static final int VK_1 = 49;\n+  public static final int VK_2 = 50;\n+  public static final int VK_3 = 51;\n+  public static final int VK_4 = 52;\n+  public static final int VK_5 = 53;\n+  public static final int VK_6 = 54;\n+  public static final int VK_7 = 55;\n+  public static final int VK_8 = 56;\n+  public static final int VK_9 = 57;\n+  public static final int VK_A = 65;\n+  public static final int VK_ACCEPT = 30;\n+  public static final int VK_ADD = 107;\n+  public static final int VK_AGAIN = 65481;\n+  public static final int VK_ALL_CANDIDATES = 256;\n+  public static final int VK_ALPHANUMERIC = 240;\n+  public static final int VK_ALT = 18;\n+  public static final int VK_ALT_GRAPH = 65406;\n+  public static final int VK_AMPERSAND = 150;\n+  public static final int VK_ASTERISK = 151;\n+  public static final int VK_AT = 512;\n+  public static final int VK_B = 66;\n+  public static final int VK_BACK_QUOTE = 192;\n+  public static final int VK_BACK_SLASH = 92;\n+  public static final int VK_BACK_SPACE = 8;\n+  public static final int VK_BRACELEFT = 161;\n+  public static final int VK_BRACERIGHT = 162;\n+  public static final int VK_C = 67;\n+  public static final int VK_CANCEL = 3;\n+  public static final int VK_CAPS_LOCK = 20;\n+  public static final int VK_CIRCUMFLEX = 514;\n+  public static final int VK_CLEAR = 12;\n+  public static final int VK_CLOSE_BRACKET = 93;\n+  public static final int VK_CODE_INPUT = 258;\n+  public static final int VK_COLON = 513;\n+  public static final int VK_COMMA = 44;\n+  public static final int VK_COMPOSE = 65312;\n+  public static final int VK_CONTROL = 17;\n+  public static final int VK_CONVERT = 28;\n+  public static final int VK_COPY = 65485;\n+  public static final int VK_CUT = 65489;\n+  public static final int VK_D = 68;\n+  public static final int VK_DEAD_ABOVEDOT = 134;\n+  public static final int VK_DEAD_ABOVERING = 136;\n+  public static final int VK_DEAD_ACUTE = 129;\n+  public static final int VK_DEAD_BREVE = 133;\n+  public static final int VK_DEAD_CARON = 138;\n+  public static final int VK_DEAD_CEDILLA = 139;\n+  public static final int VK_DEAD_CIRCUMFLEX = 130;\n+  public static final int VK_DEAD_DIAERESIS = 135;\n+  public static final int VK_DEAD_DOUBLEACUTE = 137;\n+  public static final int VK_DEAD_GRAVE = 128;\n+  public static final int VK_DEAD_IOTA = 141;\n+  public static final int VK_DEAD_MACRON = 132;\n+  public static final int VK_DEAD_OGONEK = 140;\n+  public static final int VK_DEAD_SEMIVOICED_SOUND = 143;\n+  public static final int VK_DEAD_TILDE = 131;\n+  public static final int VK_DEAD_VOICED_SOUND = 142;\n+  public static final int VK_DECIMAL = 110;\n+  public static final int VK_DELETE = 127;\n+  public static final int VK_DIVIDE = 111;\n+  public static final int VK_DOLLAR = 515;\n+  public static final int VK_DOWN = 40;\n+  public static final int VK_E = 69;\n+  public static final int VK_END = 35;\n+  public static final int VK_ENTER = 10;\n+  public static final int VK_EQUALS = 61;\n+  public static final int VK_ESCAPE = 27;\n+  public static final int VK_EURO_SIGN = 516;\n+  public static final int VK_EXCLAMATION_MARK = 517;\n+  public static final int VK_F = 70;\n+  public static final int VK_F1 = 112;\n+  public static final int VK_F10 = 121;\n+  public static final int VK_F11 = 122;\n+  public static final int VK_F12 = 123;\n+  public static final int VK_F13 = 61440;\n+  public static final int VK_F14 = 61441;\n+  public static final int VK_F15 = 61442;\n+  public static final int VK_F16 = 61443;\n+  public static final int VK_F17 = 61444;\n+  public static final int VK_F18 = 61445;\n+  public static final int VK_F19 = 61446;\n+  public static final int VK_F2 = 113;\n+  public static final int VK_F20 = 61447;\n+  public static final int VK_F21 = 61448;\n+  public static final int VK_F22 = 61449;\n+  public static final int VK_F23 = 61450;\n+  public static final int VK_F24 = 61451;\n+  public static final int VK_F3 = 114;\n+  public static final int VK_F4 = 115;\n+  public static final int VK_F5 = 116;\n+  public static final int VK_F6 = 117;\n+  public static final int VK_F7 = 118;\n+  public static final int VK_F8 = 119;\n+  public static final int VK_F9 = 120;\n+  public static final int VK_FINAL = 24;\n+  public static final int VK_FIND = 65488;\n+  public static final int VK_FULL_WIDTH = 243;\n+  public static final int VK_G = 71;\n+  public static final int VK_GREATER = 160;\n+  public static final int VK_H = 72;\n+  public static final int VK_HALF_WIDTH = 244;\n+  public static final int VK_HELP = 156;\n+  public static final int VK_HIRAGANA = 242;\n+  public static final int VK_HOME = 36;\n+  public static final int VK_I = 73;\n+  public static final int VK_INSERT = 155;\n+  public static final int VK_INVERTED_EXCLAMATION_MARK = 518;\n+  public static final int VK_J = 74;\n+  public static final int VK_JAPANESE_HIRAGANA = 260;\n+  public static final int VK_JAPANESE_KATAKANA = 259;\n+  public static final int VK_JAPANESE_ROMAN = 261;\n+  public static final int VK_K = 75;\n+  public static final int VK_KANA = 21;\n+  public static final int VK_KANJI = 25;\n+  public static final int VK_KATAKANA = 241;\n+  public static final int VK_KP_DOWN = 225;\n+  public static final int VK_KP_LEFT = 226;\n+  public static final int VK_KP_RIGHT = 227;\n+  public static final int VK_KP_UP = 224;\n+  public static final int VK_L = 76;\n+  public static final int VK_LEFT = 37;\n+  public static final int VK_LEFT_PARENTHESIS = 519;\n+  public static final int VK_LESS = 153;\n+  public static final int VK_M = 77;\n+  public static final int VK_META = 157;\n+  public static final int VK_MINUS = 45;\n+  public static final int VK_MODECHANGE = 31;\n+  public static final int VK_MULTIPLY = 106;\n+  public static final int VK_N = 78;\n+  public static final int VK_NONCONVERT = 29;\n+  public static final int VK_NUM_LOCK = 144;\n+  public static final int VK_NUMBER_SIGN = 520;\n+  public static final int VK_NUMPAD0 = 96;\n+  public static final int VK_NUMPAD1 = 97;\n+  public static final int VK_NUMPAD2 = 98;\n+  public static final int VK_NUMPAD3 = 99;\n+  public static final int VK_NUMPAD4 = 100;\n+  public static final int VK_NUMPAD5 = 101;\n+  public static final int VK_NUMPAD6 = 102;\n+  public static final int VK_NUMPAD7 = 103;\n+  public static final int VK_NUMPAD8 = 104;\n+  public static final int VK_NUMPAD9 = 105;\n+  public static final int VK_O = 79;\n+  public static final int VK_OPEN_BRACKET = 91;\n+  public static final int VK_P = 80;\n+  public static final int VK_PAGE_DOWN = 34;\n+  public static final int VK_PAGE_UP = 33;\n+  public static final int VK_PASTE = 65487;\n+  public static final int VK_PAUSE = 19;\n+  public static final int VK_PERIOD = 46;\n+  public static final int VK_PLUS = 521;\n+  public static final int VK_PREVIOUS_CANDIDATE = 257;\n+  public static final int VK_PRINTSCREEN = 154;\n+  public static final int VK_PROPS = 65482;\n+  public static final int VK_Q = 81;\n+  public static final int VK_QUOTE = 222;\n+  public static final int VK_QUOTEDBL = 152;\n+  public static final int VK_R = 82;\n+  public static final int VK_RIGHT = 39;\n+  public static final int VK_RIGHT_PARENTHESIS = 522;\n+  public static final int VK_ROMAN_CHARACTERS = 245;\n+  public static final int VK_S = 83;\n+  public static final int VK_SCROLL_LOCK = 145;\n+  public static final int VK_SEMICOLON = 59;\n+  public static final int VK_SEPARATER = 108;\n+  public static final int VK_SHIFT = 16;\n+  public static final int VK_SLASH = 47;\n+  public static final int VK_SPACE = 32;\n+  public static final int VK_STOP = 65480;\n+  public static final int VK_SUBTRACT = 109;\n+  public static final int VK_T = 84;\n+  public static final int VK_TAB = 9;\n+  public static final int VK_U = 85;\n+  public static final int VK_UNDEFINED = 0;\n+  public static final int VK_UNDERSCORE = 523;\n+  public static final int VK_UNDO = 65483;\n+  public static final int VK_UP = 38;\n+  public static final int VK_V = 86;\n+  public static final int VK_W = 87;\n+  public static final int VK_X = 88;\n+  public static final int VK_Y = 89;\n+  public static final int VK_Z = 90;\n \n   public KeyEvent (Component source, int id, long when,\n \t\t  int modifiers, int keyCode, char keyChar)\n   {\n-    super(source, id);\n+    super (source, id);\n     this.keyCode = keyCode;\n     this.keyChar = keyChar;\n     this.modifiers = modifiers;\n   }\n \n+  public KeyEvent (Component source, int id, long when,\n+\t\t   int modifiers, int keyCode)\n+  {\n+    super (source, id);\n+    this.keyCode = keyCode;\n+    this.keyChar = CHAR_UNDEFINED; // FIXME?\n+    this.modifiers = modifiers;\n+  }\n+\n   public int getKeyCode () { return keyCode; }\n \n   public char getKeyChar () { return keyChar; }\n@@ -35,4 +230,32 @@ public KeyEvent (Component source, int id, long when,\n   public void setKeyChar (char keyChar) { this.keyChar = keyChar; }\n \n   public void setModifiers (int modifiers) { this.modifiers = modifiers; }\n+\n+  public static String getKeyText (int keyCode)\n+  {\n+    // FIXME\n+    throw new InternalError (\"unimplemented\");\n+  }\n+\n+  public static String getKeyModifiersText (int modifiers)\n+  {\n+    // FIXME\n+    throw new InternalError (\"unimplemented\");\n+  }\n+\n+  public boolean isActionKey ()\n+  {\n+    // FIXME\n+    return false;\n+  }\n+\n+  public String paramString ()\n+  {\n+    return (\"KeyEvent[\" + keyCode + \",\" + keyChar + \",\" + modifiers\n+\t    + \";\" + super.paramString () + \"]\");\n+  }\n+\n+  private int keyCode;\n+  private char keyChar;\n+  private int modifiers;\n }"}, {"sha": "651893857388e7cdfa10cf05cc9a7761f5fa6079", "filename": "libjava/java/awt/event/MouseAdapter.java", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FMouseAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FMouseAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseAdapter.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,39 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public abstract class MouseAdapter implements MouseListener\n+{\n+  public void mouseClicked (MouseEvent e)\n+  {\n+  }\n+\n+  public void mouseEntered (MouseEvent e)\n+  {\n+  }\n+\n+  public void mouseExited (MouseEvent e)\n+  {\n+  }\n+\n+  public void mousePressed (MouseEvent e)\n+  {\n+  }\n+\n+  public void mouseReleased (MouseEvent e)\n+  {\n+  }\n+}"}, {"sha": "49e2eb8f9a41aca3fd379d2ec8e38231a9dc6a0f", "filename": "libjava/java/awt/event/MouseEvent.java", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FMouseEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FMouseEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,91 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public class MouseEvent extends InputEvent\n+{\n+  public static final int MOUSE_CLICKED = 500;\n+  public static final int MOUSE_DRAGGED = 506;\n+  public static final int MOUSE_ENTERED = 504;\n+  public static final int MOUSE_EXITED = 505;\n+  public static final int MOUSE_FIRST = 500;\n+  public static final int MOUSE_LAST = 506;\n+  public static final int MOUSE_MOVED = 503;\n+  public static final int MOUSE_PRESSED = 501;\n+  public static final int MOUSE_RELEASED = 502;\n+\n+  public MouseEvent (Component source, int id, long when, int modifiers,\n+\t\t     int x, int y, int clickCount, boolean popupTrigger)\n+  {\n+    super (source, id);\n+    this.when = when;\n+    this.modifiers = modifiers;\n+    this.x = x;\n+    this.y = y;\n+    this.clickCount = clickCount;\n+    this.popupTrigger = popupTrigger;\n+  }\n+\n+  public int getClickCount ()\n+  {\n+    return clickCount;\n+  }\n+\n+  public Point getPoint ()\n+  {\n+    Point p = ((Component) source).getLocation ();\n+    p.x = x - p.x;\n+    p.y = y - p.y;\n+    return p;\n+  }\n+\n+  public int getX ()\n+  {\n+    return x - ((Component) source).getX ();\n+  }\n+\n+  public int getY ()\n+  {\n+    return y - ((Component) source).getY ();\n+  }\n+\n+  public boolean isPopupTrigger ()\n+  {\n+    return popupTrigger;\n+  }\n+\n+  public String paramString ()\n+  {\n+    return (\"MouseEvent[\" + when + \",\" + modifiers\n+\t    + \",(\" + x + \",\" + y + \"),\"\n+\t    + clickCount + \",\" + popupTrigger\n+\t    + \";\" + super.paramString () + \"]\");\n+  }\n+\n+  public void translatePoint (int x, int y)\n+  {\n+    this.x += x;\n+    this.y += y;\n+  }\n+\n+  private long when;\n+  private int modifiers;\n+  private int x;\n+  private int y;\n+  private int clickCount;\n+  private boolean popupTrigger;\n+}"}, {"sha": "0f1b8243d8caf9c62f9cdafbe7d033575e7e5d03", "filename": "libjava/java/awt/event/MouseListener.java", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FMouseListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FMouseListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseListener.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,25 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public interface MouseListener extends java.util.EventListener\n+{\n+  public void mouseClicked (MouseEvent e);\n+  public void mouseEntered (MouseEvent e);\n+  public void mouseExited (MouseEvent e);\n+  public void mousePressed (MouseEvent e);\n+  public void mouseReleased (MouseEvent e);\n+}"}, {"sha": "ce30d2eb5c3b61271c8d2cfaba038551bdd5e70f", "filename": "libjava/java/awt/event/MouseMotionAdapter.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionAdapter.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,27 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public abstract class MouseMotionAdapter implements MouseMotionListener\n+{\n+  public void mouseDragged (MouseEvent e)\n+  {\n+  }\n+\n+  public void mouseMoved (MouseEvent e)\n+  {\n+  }\n+}"}, {"sha": "6b12da5da3ee8419a3e761342ce2b440ea47bb88", "filename": "libjava/java/awt/event/MouseMotionListener.java", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionListener.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,22 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public interface MouseMotionListener extends java.util.EventListener\n+{\n+  public void mouseDragged (MouseEvent e);\n+  public void mouseMoved (MouseEvent e);\n+}"}, {"sha": "7784c58ff7e17326e35e0d06fbd1068fe5c4cf34", "filename": "libjava/java/awt/event/PaintEvent.java", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FPaintEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FPaintEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FPaintEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -0,0 +1,49 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/**\n+ * @author Tom Tromey <tromey@cygnus.com>\n+ * @date April 8, 2000\n+ */\n+\n+/* Status: Believed complete and correct to JDK 1.2.  */\n+\n+public class PaintEvent extends ComponentEvent\n+{\n+  public static final int PAINT = 800;\n+  public static final int PAINT_FIRST = 800;\n+  public static final int PAINT_LAST = 801;\n+  public static final int UPDATE = 801;\n+\n+  public PaintEvent (Component source, int id, Rectangle updateRect)\n+  {\n+    super (source, id);\n+    this.updateRect = updateRect;\n+  }\n+\n+  public Rectangle getUpdateRect ()\n+  {\n+    return updateRect;\n+  }\n+\n+  public String paramString ()\n+  {\n+    return (\"PaintEvent[\" + updateRect\n+\t    + \";\" + super.paramString () + \"]\");\n+  }\n+\n+  public void setUpdateRect (Rectangle updateRect)\n+  {\n+    this.updateRect = updateRect;\n+  }\n+\n+  private Rectangle updateRect;\n+}"}, {"sha": "2d3d26a78d6c5b1a4e680f852f0d7563a3d52e3c", "filename": "libjava/java/awt/event/TextEvent.java", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FTextEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FTextEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FTextEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -9,12 +9,21 @@\n package java.awt.event;\n import java.awt.*;\n \n-/* A very incomplete placeholder. */\n+/* Status: Believed complete and correct to JDK 1.2.  */\n \n public class TextEvent extends AWTEvent\n {\n+  public static final int TEXT_FIRST = 900;\n+  public static final int TEXT_LAST = 900;\n+  public static final int TEXT_VALUE_CHANGED = 900;\n+\n   public TextEvent (Object source, int id)\n   {\n-    super(source, id);\n+    super (source, id);\n+  }\n+\n+  public String paramString ()\n+  {\n+    return super.paramString ();\n   }\n }"}, {"sha": "7e00f0e13487bb956f15b0706619c7d40bea879a", "filename": "libjava/java/awt/event/WindowEvent.java", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FWindowEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5/libjava%2Fjava%2Fawt%2Fevent%2FWindowEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowEvent.java?ref=4eaf5996ad3b761bfb2abd6d65f78b43c4f9a4e5", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -7,13 +7,34 @@\n details.  */\n \n package java.awt.event;\n+import java.awt.*;\n \n-/* A very incomplete placeholder. */\n+/* Status: Believed complete and correct to JDK 1.2.  */\n \n public class WindowEvent extends ComponentEvent\n {\n-  public WindowEvent (Object source, int id)\n+  public static final int WINDOW_ACTIVATED = 205;\n+  public static final int WINDOW_CLOSED = 202;\n+  public static final int WINDOW_CLOSING = 201;\n+  public static final int WINDOW_DEACTIVATED = 206;\n+  public static final int WINDOW_DEICONIFIED = 204;\n+  public static final int WINDOW_FIRST = 200;\n+  public static final int WINDOW_ICONIFIED = 203;\n+  public static final int WINDOW_LAST = 206;\n+  public static final int WINDOW_OPENED = 200;\n+\n+  public WindowEvent (Window source, int id)\n+  {\n+    super (source, id);\n+  }\n+\n+  public Window getWindow ()\n+  {\n+    return (Window) source;\n+  }\n+\n+  public String paramString ()\n   {\n-    super(source, id);\n+    return super.paramString ();\n   }\n }"}]}